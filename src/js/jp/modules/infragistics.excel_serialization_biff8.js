/*!@license
* Infragistics.Web.ClientUI infragistics.excel_serialization_biff8.js 17.1.20171.1012
*
* Copyright (c) 2011-2017 Infragistics Inc.
*
* http://www.infragistics.com/
*
* Depends:
*     jquery-1.4.4.js
*     jquery.ui.core.js
*     jquery.ui.widget.js
*     infragistics.util.js
*     infragistics.ext_core.js
*     infragistics.ext_collections.js
*     infragistics.ext_collectionsExtended.js
*     infragistics.ext_io.js
*     infragistics.ext_text.js
*     infragistics.documents.core_core.js
*     infragistics.excel_core.js
*     infragistics.ext_ui.js
*/
/*<BeginHeader/>*/
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		define( [
			'./infragistics.util',
			'./infragistics.ext_core',
			'./infragistics.ext_collections',
			'./infragistics.ext_collectionsExtended',
			'./infragistics.ext_io',
			'./infragistics.ext_text',
			'./infragistics.documents.core_core',
			'./infragistics.excel_core',
			'./infragistics.ext_ui'
		], factory );
	} else {
		factory(igRoot);
	}
}
(function($) {
/*<EndHeader/>*/
$.ig = $.ig || {};
var $$t = {};
$.ig.globalDefs = $.ig.globalDefs || {};
$.ig.globalDefs.$$ag = $$t;
$$0 = $.ig.globalDefs.$$0;
$$4 = $.ig.globalDefs.$$4;
$$5 = $.ig.globalDefs.$$5;
$$7 = $.ig.globalDefs.$$7;
$$8 = $.ig.globalDefs.$$8;
$$v = $.ig.globalDefs.$$v;
$$a4 = $.ig.globalDefs.$$a4;
$$6 = $.ig.globalDefs.$$6;
$$a = $.ig.globalDefs.$$a;
$.ig.$currDefinitions = $$t;
$.ig.util.bulkDefine([
"CreateBiffRecordDelegate:c",
"WorkbookSaveManagerExcel2003:d",
"WorkbookLoadManagerExcel2003:l",
"WorkbookSerializationDataExcel2003:p",
"Biff8RecordStream:v",
"Record1904:z",
"ACTIVEXMARKERRecord:aa",
"ARRAYRecord:ab",
"AUTOFILTER12Record:ac",
"BACKUPRecord:ad",
"Biff8RecordBase:ae",
"BITMAPRecord:af",
"BLANKRecord:ag",
"BOFRecord:ah",
"BOOKBOOLRecord:aj",
"BOOKEXTRecord:ak",
"BOOLERRRecord:al",
"BOTTOMMARGINRecord:am",
"BOUNDSHEETRecord:an",
"CALCCOUNTRecord:ao",
"CALCMODERecord:ap",
"CellValueRecordBase:aq",
"CODEPAGERecord:ar",
"COLINFORecord:as",
"COUNTRYRecord:at",
"CRNRecord:au",
"DBCELLRecord:av",
"DEFAULTROWHEIGHTRecord:ax",
"DEFCOLWIDTHRecord:ay",
"DELTARecord:az",
"DIMENSIONSRecord:a0",
"DSFRecord:a1",
"DVALRecord:a2",
"DVRecord:a3",
"DXFRecord:a4",
"EOFRecord:a6",
"EXCEL9FILERecord:a7",
"EXTERNNAMERecord:a8",
"EXTERNSHEETRecord:a9",
"EXTSSTRecord:ba",
"FEAT11Record:bb",
"FEAT12Record:bc",
"FEATHEADR11Record:bd",
"FEATHEADRRecord:be",
"FEATRecord:bf",
"FILEPASSRecord:bg",
"FILESHARINGRecord:bh",
"FNGROUPCOUNTRecord:bi",
"FONTRecord:bj",
"FOOTERRecord:bl",
"FORMATRecord:bm",
"FORMULARecord:bn",
"GRIDSETRecord:bo",
"GUTSRecord:bp",
"HCENTERRecord:bq",
"HEADERFOOTERRecord:br",
"HEADERRecord:bs",
"HFPICTURERecord:bt",
"HIDEOBJRecord:bu",
"HLINKRecord:bv",
"HLINKTOOLTIPRecord:bw",
"HORIZONTALPAGEBREAKSRecord:bx",
"INDEXRecord:by",
"INTERFACEENDRecord:bz",
"INTERFACEHDRRecord:b0",
"ITERATIONRecord:b1",
"LABELRecord:b2",
"LABELSSTRecord:b3",
"LEFTMARGINRecord:b4",
"LIST12Record:b5",
"MERGEDCELLSRecord:b7",
"MMSRecord:b8",
"MSODRAWINGGROUPRecord:b9",
"MSODRAWINGRecord:ca",
"MSODRAWINGSELECTIONRecord:cb",
"MULBLANKRecord:cc",
"MULRKRecord:cd",
"MultipleCellValueRecordBase:ce",
"NAMEEXTRecord:cg",
"NAMERecord:ch",
"NOTERecord:ci",
"NUMBERRecord:cj",
"OBJPROTECTRecord:ck",
"OBJRecord:cl",
"OBPROJRecord:cm",
"OLESIZERecord:cn",
"PAGELAYOUTINFORecord:co",
"PALETTERecord:cp",
"PANERecord:cq",
"PASSWORDRecord:cr",
"PLSRecord:cs",
"PRECISIONRecord:ct",
"PRINTGRIDLINESRecord:cu",
"PRINTHEADERSRecord:cv",
"PROT4REVPASSRecord:cw",
"PROT4REVRecord:cx",
"PROTECTRecord:cy",
"RECALCIDRecord:cz",
"REFMODERecord:c0",
"REFRESHALLRecord:c1",
"RIGHTMARGINRecord:c2",
"RKRecord:c3",
"ROWRecord:c4",
"RSTRINGRecord:c5",
"SAVERECALCRecord:c6",
"SCENPROTECTRecord:c7",
"SCLRecord:c8",
"SELECTIONRecord:c9",
"SETUPRecord:da",
"SHEETEXTRecord:db",
"SHRFMLARecord:dc",
"SORTDATA12Record:dd",
"SSTRecord:de",
"STANDARDWIDTHRecord:df",
"STRINGRecord:dg",
"STYLEEXTRecord:dh",
"STYLERecord:dj",
"SUPBOOKRecord:dl",
"TABIDRecord:dm",
"TABLERecord:dn",
"TABLESTYLEELEMENTRecord:dp",
"TABLESTYLERecord:dq",
"TABLESTYLESRecord:dr",
"TEMPLATERecord:ds",
"THEMERecord:dt",
"TOPMARGINRecord:du",
"TXORecord:dv",
"USERBVIEWRecord:dw",
"USERSVIEWBEGINRecord:dx",
"USERSVIEWENDRecord:dy",
"USESELFSRecord:dz",
"VBAOBJECTNAMERecord:d0",
"VCENTERRecord:d1",
"VERTICALPAGEBREAKSRecord:d2",
"WINDOW1Record:d3",
"WINDOW2Record:d4",
"WINDOWPROTECTRecord:d5",
"WRITEACCESSRecord:d6",
"WRITEPROTRecord:d7",
"WSBOOLRecord:d8",
"XCTRecord:d9",
"XFCRCRecord:ea",
"XFEXTRecord:eb",
"XFRecord:ed",
"BLIP:eg",
"BLIPStoreContainer:eh",
"BLIPStoreEntry:ei",
"CalloutRule:ej",
"ChildAnchor:ek",
"ClientAnchor:el",
"ClientData:em",
"ClientTextBox:en",
"ConnectorRule:eo",
"Drawing:ep",
"DrawingContainer:eq",
"DrawingGroup:er",
"DrawingGroupContainer:es",
"EscherRecordBase:et",
"EscherRecordContainerBase:eu",
"GroupContainer:ev",
"GroupShape:ew",
"PropertyTable1:ex",
"PropertyTable2:ey",
"PropertyTable3:ez",
"PropertyTableBase:e0",
"Regroup:e1",
"Selections:e2",
"EscherShape:e3",
"ShapeContainer:e5",
"SolverContainer:e6",
"SplitMenuColors:e7",
"ObjExtensionMethods:e8",
"ObjUtilities:e9"]);
/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record_LIST12DataType" />*/

$.ig.util.defEnum('LIST12Record_LIST12DataType', false, false, {
	BlockLevelFormatting: 0,
	StyleInfo: 1,
	DisplayName: 2
});

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record_LIST12DataType" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord_BiffVersion" />*/

$.ig.util.defEnum('BOFRecord_BiffVersion', false, false, {
	Biff2_1: 0,
	Biff2_2: 7,
	Biff2_3: 512,
	Biff3: 768,
	Biff4: 1024,
	Biff5: 1280,
	Biff7: 1280,
	Biff8: 1536
});

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord_BiffVersion" />*/

/*<BeginType Name="AssemblyRef" />*/

$.ig.util.defType('AssemblyRef', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	$type: new $.ig.Type('AssemblyRef', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="AssemblyRef" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase`3" />*/

$.ig.util.defType('BiffRecordBase$3', 'Object', {
	$recordTypeEnum: null,
	$loadContextType: null,
	$saveContextType: null,
	init: function ($recordTypeEnum, $loadContextType, $saveContextType) {
		this.$recordTypeEnum = $recordTypeEnum;
		this.$loadContextType = $loadContextType;
		this.$saveContextType = $saveContextType;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$recordTypeEnum, this.$loadContextType, this.$saveContextType);
		}
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::IsAsyncLoadingSupported()" />*/
	isAsyncLoadingSupported: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::IsAsyncLoadingSupported()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Load(Infragistics.Documents.Excel.Serialization.BiffRecordBase.LoadContextType)" />*/
	load: function (manager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Load(Infragistics.Documents.Excel.Serialization.BiffRecordBase.LoadContextType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::LoadAsync(Infragistics.Documents.Excel.Serialization.BiffRecordBase.LoadContextType)" />*/
	loadAsync: function (manager) {
		$.ig.ExcelUtils.prototype.debugFail("Derived classes that support async loading need to override LoadAsync");
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::LoadAsync(Infragistics.Documents.Excel.Serialization.BiffRecordBase.LoadContextType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Save(Infragistics.Documents.Excel.Serialization.BiffRecordBase.SaveContextType)" />*/
	save: function (manager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Save(Infragistics.Documents.Excel.Serialization.BiffRecordBase.SaveContextType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::SaveAsync(Infragistics.Documents.Excel.Serialization.BiffRecordBase.SaveContextType)" />*/
	saveAsync: function (manager) {
		$.ig.ExcelUtils.prototype.debugFail("Derived classes whose SaveAsync method need to override that method");
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::SaveAsync(Infragistics.Documents.Excel.Serialization.BiffRecordBase.SaveContextType)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase.RecordTypeEnum Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Type()" />*/
	type: function () {
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase.RecordTypeEnum Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Type()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Records()" />*/
	records: function ($recordTypeEnum, $loadContextType, $saveContextType) {
		if ($.ig.BiffRecordBase$3.prototype.$type.specialize($recordTypeEnum, $loadContextType, $saveContextType).getStaticFields()._records == null) {
			$.ig.BiffRecordBase$3.prototype.$type.specialize($recordTypeEnum, $loadContextType, $saveContextType).getStaticFields()._records = new $.ig.Dictionary$2($recordTypeEnum, $.ig.BiffRecordBase$3.prototype.$type.specialize($recordTypeEnum, $loadContextType, $saveContextType), 0);
		}
		return $.ig.BiffRecordBase$3.prototype.$type.specialize($recordTypeEnum, $loadContextType, $saveContextType).getStaticFields()._records;
	}
	/*<EndProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::Records()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::GetBiffRecord(Infragistics.Documents.Excel.Serialization.BiffRecordBase.RecordTypeEnum, Infragistics.Documents.Excel.Serialization.BiffRecordBase<RecordTypeEnum, LoadContextType, SaveContextType>.CreateBiffRecordDelegate)" />*/
	getBiffRecord: function ($recordTypeEnum, $loadContextType, $saveContextType, type, createBiffRecord) {
		var record;
		if ((function () { var $ret = $.ig.BiffRecordBase$3.prototype.records($recordTypeEnum, $loadContextType, $saveContextType).tryGetValue(type, record); record = $ret.p1; return $ret.ret; }())) {
			return record;
		}
		record = createBiffRecord(type);
		$.ig.BiffRecordBase$3.prototype.records($recordTypeEnum, $loadContextType, $saveContextType).add(type, record);
		return record;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase Infragistics.Documents.Excel.Serialization.BiffRecordBase`3::GetBiffRecord(Infragistics.Documents.Excel.Serialization.BiffRecordBase.RecordTypeEnum, Infragistics.Documents.Excel.Serialization.BiffRecordBase<RecordTypeEnum, LoadContextType, SaveContextType>.CreateBiffRecordDelegate)" />*/
	,
	$type: new $.ig.Type('BiffRecordBase$3', $.ig.Object.prototype.$type, null, function () {
		this._records = null;
	})
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase`3" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003', 'WorkbookSaveManager', {
	___boundSheetStreamPositions: null,
	___commonData: null,
	___extSstData: null,
	___firstCellFormatXfId: 0,
	___sharedFormulaReferences: null,
	___sharedFormulaRootCells: null,
	___styles: null,
	___customFormatIndexMap: null,
	_staticInit: function () {
		$.ig.excel.Workbook.prototype.__saveBIFF8Func($.ig.WorkbookSaveManagerExcel2003.prototype._saveBIFF8File);
	},
	init: function (workbook, workbookStream, filePath, saveOptions) {
		this.___commonData = new $.ig.WorkbookSerializationDataExcel2003();
		$.ig.WorkbookSaveManager.prototype.init.call(this, workbook, filePath, saveOptions);
		this.___commonData = new $.ig.WorkbookSerializationDataExcel2003(1, workbookStream);
		this.___extSstData = new $.ig.List$1($.ig.WorkbookSaveManagerExcel2003_ExtSstItem.prototype.$type, 0);
		this.___sharedFormulaReferences = new $.ig.Dictionary$2($.ig.Object.prototype.$type, $.ig.SingleTargetFormula.prototype.$type, 0);
		this.___sharedFormulaRootCells = new $.ig.Dictionary$2($.ig.Object.prototype.$type, $.ig.excel.WorksheetCell.prototype.$type, 0);
		this.___styles = new $.ig.List$1($.ig.excel.WorkbookStyle.prototype.$type, 0);
		this.___customFormatIndexMap = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.Number.prototype.$type, 0);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Dispose(System.Boolean)" />*/
	disposeCore: function (disposing) {
		if (disposing) {
			if (this._currentRecordStream() != null) {
				this._currentRecordStream().dispose();
				this._currentRecordStream(null);
			}
			this._workbookStream().dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Dispose(System.Boolean)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.CellContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellContextInternal()" />*/
	_currentCellContextInternal: function (value) {
		if (arguments.length === 1) {
			this._currentCellContext(value);
			return value;
		} else {
			return this._currentCellContext();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.CellContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellContextInternal()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellDataContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellDataContextInternal()" />*/
	_currentCellDataContextInternal: function (value) {
		if (arguments.length === 1) {
			this._currentCellDataContext(value);
			return value;
		} else {
			return this._currentCellDataContext();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellDataContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellDataContextInternal()" />*/
	,
	/*<BeginMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetCellFormatIndex(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_getCellFormatIndex: function (cellFormat) {
		$.ig.ExcelUtils.prototype.debugAssert(cellFormat._type() == $.ig.WorksheetCellFormatType.prototype.cellFormat, "The format is not a cell format.");
		$.ig.ExcelUtils.prototype.debugAssert(cellFormat.workbook() == this._workbook(), "The cell format is from a different workbook.");
		var cellFormats = this._workbook()._cellFormats();
		var defaultElement = cellFormats._defaultElement();
		if (cellFormat == defaultElement) {
			return $.ig.WorkbookSerializationDataExcel2003.prototype.defaultCellFormatXfId;
		}
		var defaultElementIndex = cellFormats._findIndex(defaultElement);
		var index = cellFormats._findIndex(cellFormat);
		if (index > defaultElementIndex) {
			index--;
		}
		return (this.___firstCellFormatXfId + index);
	}
	/*<EndMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetCellFormatIndex(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetStyleFormatIndex(Infragistics.Documents.Excel.WorkbookStyle)" />*/
	_getStyleFormatIndex: function (style) {
		$.ig.ExcelUtils.prototype.debugAssert(this._styleFormatXfIds().containsKey(style), "The style is not being saved out.");
		var xfId;
		var $ret = this._styleFormatXfIds().tryGetValue(style, xfId);
		xfId = $ret.p1;
		return xfId;
	}
	/*<EndMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetStyleFormatIndex(Infragistics.Documents.Excel.WorkbookStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::InitializeCellFormats()" />*/
	_initializeCellFormats: function () {
		var styles = this._workbook().styles();
		var normalStyle = styles.normalStyle();
		var normalStyleFormat = normalStyle._styleFormatInternal();
		this._addFont(normalStyleFormat._fontInternal(), normalStyleFormat);
		var fonts = this._fonts();
		fonts.add(fonts.__inner[0]);
		fonts.add(fonts.__inner[0]);
		fonts.add(fonts.__inner[0]);
		fonts.add(null);
		this._addStyle(normalStyle);
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 0));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 0));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 1));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 1));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 2));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 2));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 3));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 3));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 4));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 4));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 5));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 5));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.rowLevelX, 6));
		this._addStyle(styles._getBuiltInStyle1($.ig.BuiltInStyleType.prototype.colLevelX, 6));
		$.ig.ExcelUtils.prototype.debugAssert(this._formats().count() == $.ig.WorkbookSerializationDataExcel2003.prototype.defaultCellFormatXfId, "The default cell element should is going to be at the wrong index.");
		this._addFormat(this._workbook()._cellFormats()._defaultElement());
		this._addStyle(styles._getBuiltInStyle($.ig.BuiltInStyleType.prototype.comma));
		this._addStyle(styles._getBuiltInStyle($.ig.BuiltInStyleType.prototype.comma0));
		this._addStyle(styles._getBuiltInStyle($.ig.BuiltInStyleType.prototype.currency));
		this._addStyle(styles._getBuiltInStyle($.ig.BuiltInStyleType.prototype.currency0));
		this._addStyle(styles._getBuiltInStyle($.ig.BuiltInStyleType.prototype.percent));
		var en = this._workbook().styles().getEnumerator();
		while (en.moveNext()) {
			var style = en.current();
			if (style._shouldSaveIn2003() == false) {
				continue;
			}
			var builtInStyle = $.ig.util.cast($.ig.WorkbookBuiltInStyle.prototype.$type, style);
			if (builtInStyle != null) {
				switch (builtInStyle._type()) {
					case $.ig.BuiltInStyleType.prototype.colLevelX:
					case $.ig.BuiltInStyleType.prototype.rowLevelX:
					case $.ig.BuiltInStyleType.prototype.comma:
					case $.ig.BuiltInStyleType.prototype.comma0:
					case $.ig.BuiltInStyleType.prototype.currency:
					case $.ig.BuiltInStyleType.prototype.currency0:
					case $.ig.BuiltInStyleType.prototype.normal:
					case $.ig.BuiltInStyleType.prototype.percent:
						this._styles().add(style);
						continue;
				}
			}
			this._styles().add(style);
			this._addStyle(style);
		}
		this.___firstCellFormatXfId = this._formats().count();
		var cellFormats = this._workbook()._cellFormats();
		var en1 = cellFormats.getEnumerator();
		while (en1.moveNext()) {
			var cellFormat = en1.current();
			if (cellFormat == cellFormats._defaultElement()) {
				continue;
			}
			this._addFormat(cellFormat);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::InitializeCellFormats()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::InitImageShape(Infragistics.Documents.Excel.IWorksheetImage)" />*/
	_initImageShape: function (imageShape) {
		$.ig.WorkbookSaveManager.prototype._initImageShape.call(this, imageShape);
		var image = imageShape.image();
		$.ig.ExcelUtils.prototype.debugAssert(image != null || ($.ig.util.cast($.ig.excel.WorksheetImage.prototype.$type, imageShape) !== null) == false, "WorksheetImage shapes must have an image.");
		if (image == null) {
			return;
		}
		var holder = new $.ig.WorkbookSerializationDataExcel2003_ImageHolder(image, 1);
		var index = this._images().indexOf(holder);
		if (index < 0) {
			this._images().add(holder);
		} else {
			holder = this._images().__inner[index];
			(function ($obj) { var $value = $obj.referenceCount(); $obj.referenceCount($value + 1); return $value; }(holder));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::InitImageShape(Infragistics.Documents.Excel.IWorksheetImage)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::OnlyAssignShapeIdsToCommentShapes()" />*/
	_onlyAssignShapeIdsToCommentShapes: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::OnlyAssignShapeIdsToCommentShapes()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::PrepareShapeForSerialization(Infragistics.Documents.Excel.WorksheetShape)" />*/
	_prepareShapeForSerialization: function (shape) {
		var $ret = $.ig.WorkbookSaveManager.prototype._prepareShapeForSerialization.call(this, shape);
		shape = $ret.p0;
		if (shape == null) {
			return {
				p0: shape
			};
		}
		if (shape == null || shape._type2003().hasValue() == false || shape._slicerName2007() != null) {
			shape = null;
			return {
				p0: shape
			};
		}
		var chart = $.ig.util.cast($.ig.excel.WorksheetChart.prototype.$type, shape);
		if (chart != null) {
			if (chart._excel2003RoundTripData() == null) {
				shape = null;
			}
			return {
				p0: shape
			};
		}
		return {
			p0: shape
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::PrepareShapeForSerialization(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveCore()" />*/
	_saveCore: function () {
		var $self = this;
		var worksheetStreamPositions = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		var MaxFormatIndex = 384;
		var nextAvailableIndex = $.ig.WorkbookFormatCollection.prototype.formatTableOffset;
		var formats = this._workbook()._formats();
		var en = formats.getCustomFormatIndices().getEnumerator();
		while (en.moveNext()) {
			var index = en.current();
			if (index >= MaxFormatIndex) {
				while (formats.hasCustomFormat(nextAvailableIndex)) {
					nextAvailableIndex++;
				}
				this.___customFormatIndexMap.item(index, nextAvailableIndex);
			}
		}
		return $.ig.WorkItemExtensions.prototype.then($.ig.WorkItemExtensions.prototype.then2(this._writeWorkbookGlobals(), function () {
			return $.ig.Async.prototype.forEach$1($.ig.excel.Worksheet.prototype.$type, $self._worksheets(), function (worksheet) {
				worksheetStreamPositions.add($self._workbookStream().position());
				return $self._saveWorksheet(worksheet);
			});
		}, 0), function () {
			$self._updateBoundSheetValues(worksheetStreamPositions);
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveCore()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetNumberFormatSerializationIndex(System.Int32)" />*/
	_getNumberFormatSerializationIndex: function (actualIndex) {
		var $self = this;
		var index;
		if ((function () { var $ret = $self.___customFormatIndexMap.tryGetValue(actualIndex, index); index = $ret.p1; return $ret.ret; }())) {
			return index;
		}
		return actualIndex;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetNumberFormatSerializationIndex(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.SingleTargetFormula Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetSharedFormulaReference(Infragistics.Documents.Excel.Formula)" />*/
	_getSharedFormulaReference: function (formula) {
		return this.___sharedFormulaReferences.item(formula._sharedGroupKey());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.SingleTargetFormula Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetSharedFormulaReference(Infragistics.Documents.Excel.Formula)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCell Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetSharedFormulaRootCell(Infragistics.Documents.Excel.WorksheetRow, System.Int16, Infragistics.Documents.Excel.Formula)" />*/
	_getSharedFormulaRootCell: function (row, columnIndex, formula) {
		var $self = this;
		var key = formula._sharedGroupKey();
		var sharedFormulaRootCell;
		if ((function () { var $ret = $self.___sharedFormulaRootCells.tryGetValue(key, sharedFormulaRootCell); sharedFormulaRootCell = $ret.p1; return $ret.ret; }()) == false) {
			this.___sharedFormulaRootCells.item(key, sharedFormulaRootCell = row.cells().item(columnIndex));
			this.___sharedFormulaReferences.item(key, $.ig.excel.Formula.prototype._createSharedFormulaReference(formula, sharedFormulaRootCell));
		}
		return sharedFormulaRootCell;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCell Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::GetSharedFormulaRootCell(Infragistics.Documents.Excel.WorksheetRow, System.Int16, Infragistics.Documents.Excel.Formula)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::OnRecordSaved(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	_onRecordSaved: function (stream) {
		this._currentRecordStream(stream._parentStream());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::OnRecordSaved(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::OnRecordSaving(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	_onRecordSaving: function (stream) {
		if (this._currentRecordStream() != null) {
			this._currentRecordStream()._addSubStream(stream);
		}
		this._currentRecordStream(stream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::OnRecordSaving(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::PopuplateDrawingProperties(Infragistics.Documents.Excel.WorksheetShape)" />*/
	_popuplateDrawingProperties: function (shape) {
		shape._accept$2($.ig.WorkbookSaveManagerExcel2003.prototype.$type, $.ig.Boolean.prototype.$type, $.ig.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor.prototype.instance, this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::PopuplateDrawingProperties(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveBIFF8File(Infragistics.Documents.Excel.Workbook, System.IO.Stream, Infragistics.Documents.Excel.WorkbookSaveOptions)" />*/
	_saveBIFF8File: function (wb, stream, saveOptions) {
		return $.ig.Async.prototype.using$1($.ig.StructuredStorageManager.prototype.$type, new $.ig.StructuredStorageManager(stream, false), function (structuredStorageManager) {
			if (wb._hasDocumentPrperties()) {
				wb.documentProperties()._save(structuredStorageManager);
			}
			return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.using$1($.ig.Stream.prototype.$type, structuredStorageManager._addFile("Workbook"), function (workbookStream) {
				return $.ig.Async.prototype.using$1($.ig.WorkbookSaveManagerExcel2003.prototype.$type, new $.ig.WorkbookSaveManagerExcel2003(wb, workbookStream, $.ig.ExcelUtils.prototype.getFileName(stream), saveOptions), function (saveManager) {
					return saveManager._save();
				});
			}), function () {
				var en = wb._cachedStructuredStorageFiles().getEnumerator();
				while (en.moveNext()) {
					var cachedFile = en.current();
					{
						var fileStream = structuredStorageManager._addFile(cachedFile.key());
						try {
							fileStream.write(cachedFile.value(), 0, cachedFile.value().length);
						}
						finally {
							if (fileStream != null) {
								fileStream.dispose();
							}
						}
					}
				}
			}, 0);
		});
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveBIFF8File(Infragistics.Documents.Excel.Workbook, System.IO.Stream, Infragistics.Documents.Excel.WorkbookSaveOptions)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveFormula(Infragistics.Documents.Excel.Formula, System.Boolean, System.Boolean, System.Boolean)" />*/
	_saveFormula: function (formula, writeSize, isForExternalNamedReference, resolveSharedReferences) {
		var stream = this._currentRecordStream();
		var size = 0;
		if (writeSize) {
			stream._write17(0);
		}
		if (formula._postfixTokenList().length == 0) {
			return size;
		}
		var startPos = stream.position();
		var owningCellRowIndex = formula._owningCellRow() == null ? -1 : formula._owningCellRow().index();
		var context = new $.ig.FormulaContext(1, stream.saveManager()._workbook(), formula);
		var resolvedTokenList = formula._postfixTokenList();
		if (resolveSharedReferences) {
			resolvedTokenList = $.ig.util.shallowClone(resolvedTokenList);
			var sharedTokenConverter = $.ig.SharedTokenConverter.prototype.initialize(context, false);
			for (var i = 0; i < formula._postfixTokenList().length; i++) {
				resolvedTokenList[i] = formula._postfixTokenList()[i].accept$1($.ig.FormulaToken.prototype.$type, sharedTokenConverter);
			}
			sharedTokenConverter.reset();
		}
		if (formula._isReferenceFormula() == false) {
			var resolver = $.ig.TokenReferenceResolver.prototype.initialize1(context, resolvedTokenList);
			var resolveResult = resolver.evaluate();
			$.ig.ExcelUtils.prototype.debugAssert(resolveResult.completed(), "Something went wrong while resolving the token references.");
		}
		var tokenPositionsInRecordStream = new Array(resolvedTokenList.length);
		var getSizeTokenVisitor = $.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.initialize(context, stream, isForExternalNamedReference, tokenPositionsInRecordStream);
		var nextTokenStart = startPos;
		for (var i1 = 0; i1 < resolvedTokenList.length; i1++) {
			var token = resolvedTokenList[i1];
			tokenPositionsInRecordStream[i1] = nextTokenStart;
			nextTokenStart += token.accept$1($.ig.Number.prototype.$type, getSizeTokenVisitor);
		}
		getSizeTokenVisitor.reset();
		var saveTokenVisitor = $.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.initialize(context, stream, isForExternalNamedReference, resolvedTokenList, tokenPositionsInRecordStream);
		saveTokenVisitor.visitAll();
		var endPos = stream.position();
		size = (endPos - startPos);
		if (writeSize) {
			stream.position(startPos - 2);
			stream._write17(size);
			stream.position(endPos);
		}
		var saveAdditionalDataTokenVisitor = $.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.initialize(context, stream);
		saveAdditionalDataTokenVisitor.visitAll();
		return size;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveFormula(Infragistics.Documents.Excel.Formula, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteRecord(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	_writeRecord: function (type) {
		{
			var stream = new $.ig.Biff8RecordStream(3, this, type);
			try {
				var record = this.___commonData.getBiffRecord(type);
				if (record.canBeEncrypted() == false) {
					stream._transform().suspendTransformations();
				}
				record.save(this);
				if (record.canBeEncrypted() == false) {
					stream._transform().resumeTransformations();
				}
				stream._debugLogRecord();
			}
			finally {
				if (stream != null) {
					stream.dispose();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteRecord(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteRecordAsync(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	_writeRecordAsync: function (type) {
		var $self = this;
		return $.ig.Async.prototype.using$1($.ig.Biff8RecordStream.prototype.$type, new $.ig.Biff8RecordStream(3, this, type), function (stream) {
			var record = $self.___commonData.getBiffRecord(type);
			if (record.canBeEncrypted() == false) {
				stream._transform().suspendTransformations();
			}
			return $.ig.WorkItemExtensions.prototype.then(record.saveAsync($self), function () {
				if (record.canBeEncrypted() == false) {
					stream._transform().resumeTransformations();
				}
				stream._debugLogRecord();
			}, 0);
		});
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteRecordAsync(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::AddFormat(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_addFormat: function (format) {
		this._addFont(format._fontInternal(), format);
		this._formats().add(format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::AddFormat(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::AddStyle(Infragistics.Documents.Excel.WorkbookStyle)" />*/
	_addStyle: function (style) {
		if (style != null) {
			this._styleFormatXfIds().add(style, this._formats().count());
			this._addFormat(style._styleFormatInternal());
		} else {
			var styleFormat = new $.ig.WorksheetCellFormatData(this._workbook(), $.ig.WorksheetCellFormatType.prototype.styleFormat);
			this._addFormat(styleFormat);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::AddStyle(Infragistics.Documents.Excel.WorkbookStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CorrectINDEXRecord(System.Int64, System.Int64, System.Collections.Generic.List)" />*/
	_correctINDEXRecord: function (indexRecordPosition, defColWidthAddress, dbcellRecordPositions) {
		var oldStreamPosition = this._workbookStream().position();
		this._workbookStream().position(indexRecordPosition);
		var binaryReader = new $.ig.BinaryReader(1, this._workbookStream());
		{
			var indexRecordStream = new $.ig.Biff8RecordStream(4, this, this._workbookStream(), binaryReader);
			try {
				$.ig.ExcelUtils.prototype.debugAssert(indexRecordStream._recordType() == $.ig.BIFF8RecordType.prototype.iNDEX, null);
				indexRecordStream.position($.ig.INDEXRecord.prototype.positionOfDefColWidthAddress);
				indexRecordStream._write18(defColWidthAddress);
				indexRecordStream.position($.ig.INDEXRecord.prototype.positionOfDBCellAddresses);
				$.ig.ExcelUtils.prototype.debugAssert(indexRecordStream.length() - indexRecordStream.position() == dbcellRecordPositions.count() * 4, "There is not enough room for the DB cell positions.");
				var en = dbcellRecordPositions.getEnumerator();
				while (en.moveNext()) {
					var position = en.current();
					indexRecordStream._write18(position);
				}
			}
			finally {
				if (indexRecordStream != null) {
					indexRecordStream.dispose();
				}
			}
		}
		this._workbookStream().position(oldStreamPosition);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CorrectINDEXRecord(System.Int64, System.Int64, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveWorksheet(Infragistics.Documents.Excel.Worksheet)" />*/
	_saveWorksheet: function (worksheet) {
		var $self = this;
		this._contextStack().push(worksheet.displayOptions());
		this._contextStack().push(worksheet.printOptions());
		this._contextStack().push(worksheet);
		this._writeRecord($.ig.BIFF8RecordType.prototype.bOF);
		var indexRecordPosition = this._workbookStream().position();
		this._writeRecord($.ig.BIFF8RecordType.prototype.iNDEX);
		this._writeRecord($.ig.BIFF8RecordType.prototype.cALCMODE);
		this._writeRecord($.ig.BIFF8RecordType.prototype.cALCCOUNT);
		this._writeRecord($.ig.BIFF8RecordType.prototype.rEFMODE);
		this._writeRecord($.ig.BIFF8RecordType.prototype.iTERATION);
		this._writeRecord($.ig.BIFF8RecordType.prototype.dELTA);
		this._writeRecord($.ig.BIFF8RecordType.prototype.sAVERECALC);
		this._writeRecord($.ig.BIFF8RecordType.prototype.pRINTHEADERS);
		this._writeRecord($.ig.BIFF8RecordType.prototype.pRINTGRIDLINES);
		this._writeRecord($.ig.BIFF8RecordType.prototype.gRIDSET);
		this._writeRecord($.ig.BIFF8RecordType.prototype.gUTS);
		this._writeRecord($.ig.BIFF8RecordType.prototype.dEFAULTROWHEIGHT);
		this._writeRecord($.ig.BIFF8RecordType.prototype.wSBOOL);
		if (worksheet.printOptions()._hasHorizontalPageBreaks()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.hORIZONTALPAGEBREAKS);
		}
		if (worksheet.printOptions()._hasVerticalPageBreaks()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.vERTICALPAGEBREAKS);
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.hEADER);
		this._writeRecord($.ig.BIFF8RecordType.prototype.fOOTER);
		this._writeRecord($.ig.BIFF8RecordType.prototype.hCENTER);
		this._writeRecord($.ig.BIFF8RecordType.prototype.vCENTER);
		this._writeRecord($.ig.BIFF8RecordType.prototype.lEFTMARGIN);
		this._writeRecord($.ig.BIFF8RecordType.prototype.rIGHTMARGIN);
		this._writeRecord($.ig.BIFF8RecordType.prototype.tOPMARGIN);
		this._writeRecord($.ig.BIFF8RecordType.prototype.bOTTOMMARGIN);
		this._writeRecord($.ig.BIFF8RecordType.prototype.sETUP);
		this._writeRecord($.ig.BIFF8RecordType.prototype.hEADERFOOTER);
		if (worksheet._imageBackground() != null) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.bITMAP);
		}
		if (worksheet.isProtected()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.pROTECT);
			if (worksheet.protection().allowEditScenarios() == false) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.sCENPROTECT);
			}
			if (worksheet.protection().allowEditObjects() == false) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.oBJPROTECT);
			}
			var xorPwd = worksheet.protection().__passwordInfo.getXorPasswordValue();
			if (xorPwd.hasValue() && xorPwd.value() != 0) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.pASSWORD);
			}
		}
		var defColWidthAddress = this._workbookStream().position();
		this._writeRecord($.ig.BIFF8RecordType.prototype.dEFCOLWIDTH);
		this._writeColumnRecords(worksheet);
		this._writeRecord($.ig.BIFF8RecordType.prototype.dIMENSIONS);
		return $.ig.WorkItemExtensions.prototype.then$1($.ig.List$1.prototype.$type.specialize($.ig.Number.prototype.$type), this._writeWorksheetRowBlocks(worksheet), function (t) {
			var dbcellRecordPositions = $.ig.WorkItemExtensions.prototype.getResult$1($.ig.List$1.prototype.$type.specialize($.ig.Number.prototype.$type), t);
			$self._correctINDEXRecord(indexRecordPosition, defColWidthAddress, dbcellRecordPositions);
			if ($self._workbookHasShapes()) {
				$self._writeRecord($.ig.BIFF8RecordType.prototype.mSODRAWING);
			}
			$self._writeWorksheetCellComments(worksheet);
			$self._writeRecord($.ig.BIFF8RecordType.prototype.wINDOW2);
			$self._writeRecord($.ig.BIFF8RecordType.prototype.pAGELAYOUTINFO);
			$self._writePaneInformation(worksheet);
			$self._writeMagnificationLevels(worksheet);
			$self._writeSelection(worksheet.displayOptions());
			$self._writeCustomViewOptions(worksheet);
			if (worksheet._shouldSaveDefaultColumnWidths256th()) {
				$self._writeRecord($.ig.BIFF8RecordType.prototype.sTANDARDWIDTH);
			}
			if ($self._hasMergedCellRegions(worksheet)) {
				$self._writeRecord($.ig.BIFF8RecordType.prototype.mERGEDCELLS);
			}
			if (worksheet._hasHyperlinks()) {
				var en = worksheet.hyperlinks().getEnumerator();
				while (en.moveNext()) {
					var hyperlink = en.current();
					$self._contextStack().push(hyperlink);
					$self._writeRecord($.ig.BIFF8RecordType.prototype.hLINK);
					if (hyperlink.toolTip() != null) {
						$self._writeRecord($.ig.BIFF8RecordType.prototype.hLINKTOOLTIP);
					}
					$self._contextStack().pop();
				}
			}
			if (worksheet._hasDataValidationRules()) {
				$self._writeRecord($.ig.BIFF8RecordType.prototype.dVAL);
				var en1 = worksheet.dataValidationRules().getEnumerator();
				while (en1.moveNext()) {
					var ruleReferencesPair = en1.current();
					var ranges = new $.ig.List$1($.ig.CellAddressRange.prototype.$type, 0);
					var en2 = ruleReferencesPair.value().getEnumerator();
					while (en2.moveNext()) {
						var region = en2.current();
						ranges.add(new $.ig.CellAddressRange(2, region));
					}
					$self._contextStack().push(ruleReferencesPair.key());
					$self._contextStack().push(ranges);
					while (ranges.count() != 0) {
						$self._writeRecord($.ig.BIFF8RecordType.prototype.dV);
					}
					$self._contextStack().pop();
					$self._contextStack().pop();
				}
			}
			if ($self._workbook()._has2003VBACode() && worksheet._vBAObjectName() != null) {
				$self._writeRecord($.ig.BIFF8RecordType.prototype.vBAOBJECTNAME);
			}
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(worksheet.displayOptions().tabColorInfo(), null)) {
				$self._writeRecord($.ig.BIFF8RecordType.prototype.sHEETEXT);
			}
			$self._writeRecord($.ig.BIFF8RecordType.prototype.fEATHEADR);
			var editRanges = worksheet.protection().allowedEditRanges();
			for (var i = editRanges.count() - 1; i >= 0; i--) {
				$self._contextStack().push(editRanges.item(i));
				$self._writeRecord($.ig.BIFF8RecordType.prototype.fEAT);
				$self._contextStack().pop();
			}
			$self._writeWorksheetTables(worksheet);
			$self._writeRecord($.ig.BIFF8RecordType.prototype.eOF);
			$self._contextStack().pop();
			$self._contextStack().pop();
			$self._contextStack().pop();
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::SaveWorksheet(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::ShouldWriteFEAT12Record(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_shouldWriteFEAT12Record: function (table) {
		if (table.isHeaderRowVisible() == false) {
			return true;
		}
		return $.ig.Enumerable.prototype.any$11($.ig.excel.WorksheetTableColumn.prototype.$type, table.columns(), function (c) { return c.totalFormula() != null || c.totalLabel() != null; });
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::ShouldWriteFEAT12Record(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::UpdateBoundSheetValues(System.Collections.Generic.List)" />*/
	_updateBoundSheetValues: function (worksheetStreamPositions) {
		if (this.___boundSheetStreamPositions == null) {
			$.ig.ExcelUtils.prototype.debugFail("The BOUNDSHEET positions were never initialized or have already been updated.");
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert(worksheetStreamPositions.count() == this.___boundSheetStreamPositions.count(), "The worksheet and BOUNDSHEET counts do not match.");
		var binaryReader = new $.ig.BinaryReader(1, this._workbookStream());
		for (var i = 0; i < worksheetStreamPositions.count(); i++) {
			this._workbookStream().position(this.___boundSheetStreamPositions.__inner[i]);
			{
				var stream = new $.ig.Biff8RecordStream(4, this, this._workbookStream(), binaryReader);
				try {
					$.ig.ExcelUtils.prototype.debugAssert(stream._recordType() == $.ig.BIFF8RecordType.prototype.bOUNDSHEET, "The data at this location is not a BOUNDSHEET record.");
					stream._transform().suspendTransformations();
					stream._write18(worksheetStreamPositions.__inner[i]);
					stream._transform().resumeTransformations();
				}
				finally {
					if (stream != null) {
						stream.dispose();
					}
				}
			}
		}
		this.___boundSheetStreamPositions = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::UpdateBoundSheetValues(System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteBoundSheetRecords()" />*/
	_writeBoundSheetRecords: function () {
		this.___boundSheetStreamPositions = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		var en = this._worksheets().getEnumerator();
		while (en.moveNext()) {
			var worksheet = en.current();
			this.___boundSheetStreamPositions.add(this._workbookStream().position());
			this._contextStack().push(worksheet);
			this._writeRecord($.ig.BIFF8RecordType.prototype.bOUNDSHEET);
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteBoundSheetRecords()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCellRecord()" />*/
	_writeCellRecord: function () {
		var value = this._getSerializableCellValue(this._currentCellContext().row(), this._currentCellDataContext(), false);
		var columnIndex = this._currentCellDataContext().columnIndex();
		this._currentCellContext().value(value);
		if ($.ig.ExcelUtils.prototype.isNullResolved(value)) {
			var mulBlankInfo = $.ig.MultipleCellBlankInfo.prototype.getMultipleCellBlankInfo(this);
			if (mulBlankInfo != null) {
				this._contextStack().push(mulBlankInfo);
				this._writeRecord($.ig.BIFF8RecordType.prototype.mULBLANK);
				this._contextStack().pop();
				return mulBlankInfo.lastColumnIndex();
			}
			this._writeRecord($.ig.BIFF8RecordType.prototype.bLANK);
			return columnIndex;
		}
		if ($.ig.ExcelUtils.prototype.isNumber(value)) {
			var number = $.ig.Convert.prototype.toDouble4(value, $.ig.CultureInfo.prototype.invariantCulture());
			var rkValue;
			if ((function () { var $ret = $.ig.ExcelUtils.prototype.tryEncodeRKValue(number, rkValue); rkValue = $ret.p1; return $ret.ret; }())) {
				var mulRKInfo = $.ig.MultipleCellRKInfo.prototype.getMultipleCellRKInfo(this);
				if (mulRKInfo != null) {
					this._contextStack().push(mulRKInfo);
					this._writeRecord($.ig.BIFF8RecordType.prototype.mULRK);
					this._contextStack().pop();
					return mulRKInfo.lastColumnIndex();
				}
				this._writeRecord($.ig.BIFF8RecordType.prototype.rK);
			} else {
				this._writeRecord($.ig.BIFF8RecordType.prototype.nUMBER);
			}
			return columnIndex;
		}
		if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null || $.ig.util.cast($.ig.excel.ErrorValue.prototype.$type, value) !== null) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.bOOLERR);
			return columnIndex;
		}
		if ($.ig.util.cast($.ig.StringElementIndex.prototype.$type, value) !== null) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.lABELSST);
			return columnIndex;
		}
		var formula = $.ig.util.cast($.ig.excel.Formula.prototype.$type, value);
		if (formula != null) {
			if (formula._isSharedFormula()) {
				var sharedFormulaRootCell = this._getSharedFormulaRootCell(this._currentCellContext().row(), columnIndex, formula);
				this._contextStack().push(sharedFormulaRootCell);
				this._writeRecord($.ig.BIFF8RecordType.prototype.fORMULA);
				this._contextStack().pop();
			} else {
				this._writeRecord($.ig.BIFF8RecordType.prototype.fORMULA);
				if (formula._isArrayInteriorFormula()) {
					var appliedArrayFormula = formula;
					if (appliedArrayFormula._arrayFormula().cellRange().firstRow() == this._currentCellContext().row().index() && appliedArrayFormula._arrayFormula().cellRange().firstColumn() == columnIndex) {
						this._writeRecord($.ig.BIFF8RecordType.prototype.aRRAY);
					}
				} else if (formula._isDataTableInteriorFormula()) {
					var cellsInTable = (formula)._dataTable().cellsInTable();
					if (cellsInTable.firstRow() == this._currentCellContext().row().index() - 1 && cellsInTable.firstColumn() == columnIndex - 1) {
						this._writeRecord($.ig.BIFF8RecordType.prototype.tABLE);
					}
				}
			}
			return columnIndex;
		}
		$.ig.ExcelUtils.prototype.debugFail("Unsupported cell type: " + value.getType().toString());
		return columnIndex;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCellRecord()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteColumnRecords(Infragistics.Documents.Excel.Worksheet)" />*/
	_writeColumnRecords: function (worksheet) {
		var columnBlocks = new $.ig.List$1($.ig.WorksheetColumnBlock.prototype.$type, 1, worksheet._columnBlocks());
		if (columnBlocks.count() == 1 && columnBlocks.__inner[0].isEmpty()) {
			return;
		}
		var en = columnBlocks.getEnumerator();
		while (en.moveNext()) {
			var info = en.current();
			if (info.isEmpty()) {
				continue;
			}
			this._contextStack().push(info);
			this._writeRecord($.ig.BIFF8RecordType.prototype.cOLINFO);
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteColumnRecords(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCustomViewOptions(Infragistics.Documents.Excel.Worksheet)" />*/
	_writeCustomViewOptions: function (worksheet) {
		if (this._workbook()._hasCustomViews() == false) {
			return;
		}
		var en = this._workbook().customViews().getEnumerator();
		while (en.moveNext()) {
			var customView = en.current();
			var displayOptions = customView.getDisplayOptions(worksheet, false);
			if (displayOptions == null) {
				continue;
			}
			var printOptions = customView.getPrintOptions(worksheet, false);
			if (printOptions != null) {
				this._contextStack().push(printOptions);
				$.ig.ExcelUtils.prototype.debugAssert(this._contextStack().current() != null, null);
			}
			this._contextStack().push(displayOptions);
			$.ig.ExcelUtils.prototype.debugAssert(this._contextStack().current() != null, "The display options could not be obtained for the worksheet.");
			this._contextStack().push(customView);
			this._writeCustomViewWorksheetData(printOptions != null);
			this._contextStack().pop();
			this._contextStack().pop();
			if (printOptions != null) {
				this._contextStack().pop();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCustomViewOptions(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCustomViews()" />*/
	_writeCustomViews: function () {
		if (this._workbook()._hasCustomViews() == false) {
			return;
		}
		var en = this._workbook().customViews().getEnumerator();
		while (en.moveNext()) {
			var customView = en.current();
			this._contextStack().push(customView);
			this._writeRecord($.ig.BIFF8RecordType.prototype.uSERBVIEW);
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCustomViews()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCustomViewWorksheetData(System.Boolean)" />*/
	_writeCustomViewWorksheetData: function (savePrintOptions) {
		this._writeRecord($.ig.BIFF8RecordType.prototype.uSERSVIEWBEGIN);
		this._writeSelection(this._contextStack().get$1($.ig.excel.DisplayOptions.prototype.$type));
		if (savePrintOptions) {
			var printOptions = this._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
			if (printOptions._hasHorizontalPageBreaks()) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.hORIZONTALPAGEBREAKS);
			}
			if (printOptions._hasVerticalPageBreaks()) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.vERTICALPAGEBREAKS);
			}
			this._writeRecord($.ig.BIFF8RecordType.prototype.hEADER);
			this._writeRecord($.ig.BIFF8RecordType.prototype.fOOTER);
			this._writeRecord($.ig.BIFF8RecordType.prototype.hCENTER);
			this._writeRecord($.ig.BIFF8RecordType.prototype.vCENTER);
			this._writeRecord($.ig.BIFF8RecordType.prototype.lEFTMARGIN);
			this._writeRecord($.ig.BIFF8RecordType.prototype.rIGHTMARGIN);
			this._writeRecord($.ig.BIFF8RecordType.prototype.tOPMARGIN);
			this._writeRecord($.ig.BIFF8RecordType.prototype.bOTTOMMARGIN);
			this._writeRecord($.ig.BIFF8RecordType.prototype.sETUP);
			this._writeRecord($.ig.BIFF8RecordType.prototype.hEADERFOOTER);
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.uSERSVIEWEND);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteCustomViewWorksheetData(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteExternalReferences()" />*/
	_writeExternalReferences: function () {
		var workbookReferences = this._workbookReferences();
		if (workbookReferences.count() == 0) {
			return;
		}
		var en = workbookReferences.getEnumerator();
		while (en.moveNext()) {
			var workbookReference = en.current();
			this._contextStack().push(workbookReference);
			this._writeRecord($.ig.BIFF8RecordType.prototype.sUPBOOK);
			if (($.ig.util.cast($.ig.CurrentWorkbookReference.prototype.$type, workbookReference) !== null) == false) {
				var en1 = workbookReference.namedReferences().getEnumerator();
				while (en1.moveNext()) {
					var namedReferenceBase = en1.current();
					$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.excel.NamedReference.prototype.$type, namedReferenceBase) !== null) == false, null);
					this._contextStack().push(namedReferenceBase);
					this._writeRecord($.ig.BIFF8RecordType.prototype.eXTERNNAME);
					this._contextStack().pop();
				}
			}
			this._contextStack().pop();
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.eXTERNSHEET);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteExternalReferences()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteMagnificationLevels(Infragistics.Documents.Excel.Worksheet)" />*/
	_writeMagnificationLevels: function (worksheet) {
		if (worksheet.displayOptions()._currentMagnificationLevel() != 100) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.sCL);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteMagnificationLevels(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteNamedReferences()" />*/
	_writeNamedReferences: function () {
		var en = this._workbook()._currentWorkbookReference().namedReferences().getEnumerator();
		while (en.moveNext()) {
			var namedReferenceBase = en.current();
			$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.excel.NamedReference.prototype.$type, namedReferenceBase) !== null || $.ig.util.cast($.ig.NamedReferenceUnconnected.prototype.$type, namedReferenceBase) !== null, "This is an unexpected type.");
			this._contextStack().push(namedReferenceBase);
			this._writeRecord($.ig.BIFF8RecordType.prototype.nAME);
			if (namedReferenceBase.comment() != null && namedReferenceBase.comment().length > 0) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.nAMEEXT);
			}
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteNamedReferences()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteNumberFormat(System.Int32)" />*/
	_writeNumberFormat: function (index) {
		this._contextStack().push(new $.ig.WorkbookSaveManagerExcel2003_FormatHolder(index, this._workbook()._formats().getFormatForSave(index)));
		this._writeRecord($.ig.BIFF8RecordType.prototype.fORMAT);
		this._contextStack().pop();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteNumberFormat(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteNumberFormats()" />*/
	_writeNumberFormats: function () {
		this._writeNumberFormat(5);
		this._writeNumberFormat(6);
		this._writeNumberFormat(7);
		this._writeNumberFormat(8);
		this._writeNumberFormat(42);
		this._writeNumberFormat(41);
		this._writeNumberFormat(44);
		this._writeNumberFormat(43);
		if (this._workbook()._hasFormats()) {
			var en = this._workbook()._formats().getCustomFormatIndices().getEnumerator();
			while (en.moveNext()) {
				var index = en.current();
				this._writeNumberFormat(index);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteNumberFormats()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WritePaneInformation(Infragistics.Documents.Excel.Worksheet)" />*/
	_writePaneInformation: function (worksheet) {
		var displayOptions = worksheet.displayOptions();
		var writePaneRecord;
		if (displayOptions.panesAreFrozen()) {
			writePaneRecord = displayOptions.frozenPaneSettings().frozenColumns() != 0 || displayOptions.frozenPaneSettings().frozenRows() != 0;
		} else {
			writePaneRecord = displayOptions.unfrozenPaneSettings().leftPaneWidth() != 0 || displayOptions.unfrozenPaneSettings().topPaneHeight() != 0;
		}
		if (writePaneRecord) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.pANE);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WritePaneInformation(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteSelection(Infragistics.Documents.Excel.DisplayOptions)" />*/
	_writeSelection: function (displayOptions) {
		displayOptions._verifySelectionInfo();
		if (displayOptions._hasSelection() && displayOptions._selection().paneSelections().count() > 0) {
			var en = displayOptions._selection().paneSelections().getEnumerator();
			while (en.moveNext()) {
				var selection = en.current();
				this._contextStack().push(selection);
				this._writeRecord($.ig.BIFF8RecordType.prototype.sELECTION);
				this._contextStack().pop();
			}
		} else {
			this._writeRecord($.ig.BIFF8RecordType.prototype.sELECTION);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteSelection(Infragistics.Documents.Excel.DisplayOptions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorkbookFonts()" />*/
	_writeWorkbookFonts: function () {
		var en = this._fonts().getEnumerator();
		while (en.moveNext()) {
			var font = en.current();
			if (font == null) {
				continue;
			}
			this._contextStack().push(font);
			this._writeRecord($.ig.BIFF8RecordType.prototype.fONT);
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorkbookFonts()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorkbookGlobals()" />*/
	_writeWorkbookGlobals: function () {
		var $self = this;
		this._contextStack().push(this._workbook());
		this._writeRecord($.ig.BIFF8RecordType.prototype.bOF);
		if (this._workbook()._hasFileWriteProtectionPassword()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.wRITEPROT);
		}
		if (this._workbook()._hasOpenPassword()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.fILEPASS);
		}
		if (this._workbook().currentFormat() == $.ig.excel.WorkbookFormat.excel97To2003Template) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.tEMPLATE);
		}
		if (this._workbook()._hasFileWriteProtectionPassword()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.fILESHARING);
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.cODEPAGE);
		this._writeRecord($.ig.BIFF8RecordType.prototype.dSF);
		this._writeRecord($.ig.BIFF8RecordType.prototype.eXCEL9FILE);
		this._writeRecord($.ig.BIFF8RecordType.prototype.tABID);
		if (this._workbook()._has2003VBACode()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.oBPROJ);
			if (this._workbook()._has2003ActiveXMarker()) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.aCTIVEXMARKER);
			}
			this._writeRecord($.ig.BIFF8RecordType.prototype.vBAOBJECTNAME);
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.fNGROUPCOUNT);
		this._writeRecord($.ig.BIFF8RecordType.prototype.wINDOWPROTECT);
		this._writeRecord($.ig.BIFF8RecordType.prototype.pROTECT);
		this._writeRecord($.ig.BIFF8RecordType.prototype.pASSWORD);
		this._writeRecord($.ig.BIFF8RecordType.prototype.wINDOW1);
		this._writeRecord($.ig.BIFF8RecordType.prototype.bACKUP);
		this._writeRecord($.ig.BIFF8RecordType.prototype.hIDEOBJ);
		this._writeRecord($.ig.BIFF8RecordType.prototype.record1904);
		this._writeRecord($.ig.BIFF8RecordType.prototype.pRECISION);
		this._writeRecord($.ig.BIFF8RecordType.prototype.rEFRESHALL);
		this._writeRecord($.ig.BIFF8RecordType.prototype.bOOKBOOL);
		this._writeWorkbookFonts();
		this._writeNumberFormats();
		var xfRecordsStart = this._workbookStream().position();
		var formatsWithRoundTripData = new $.ig.List$1($.ig.XFRecord_XFContext.prototype.$type, 0);
		for (var i = 0; i < this._formats().count(); i++) {
			var format = this._formats().__inner[i];
			var xfContext = new $.ig.XFRecord_XFContext(format, i, format._getXFEXTProps());
			this._contextStack().push(xfContext);
			this._writeRecord($.ig.BIFF8RecordType.prototype.xF);
			this._contextStack().pop();
			if (xfContext._extProps.count() != 0) {
				formatsWithRoundTripData.add(xfContext);
			}
		}
		this.___commonData.cacheXFRecordData(xfRecordsStart);
		if (formatsWithRoundTripData.count() != 0) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.xFCRC);
			var en = formatsWithRoundTripData.getEnumerator();
			while (en.moveNext()) {
				var xfContext1 = en.current();
				this._contextStack().push(xfContext1);
				this._writeRecord($.ig.BIFF8RecordType.prototype.xFEXT);
				this._contextStack().pop();
			}
		}
		var en1 = this._dxfs().getEnumerator();
		while (en1.moveNext()) {
			var dxf = en1.current();
			this._contextStack().push(dxf);
			this._writeRecord($.ig.BIFF8RecordType.prototype.dXF);
			this._contextStack().pop();
		}
		this._writeWorkbookStyles();
		this._writeRecord($.ig.BIFF8RecordType.prototype.tABLESTYLES);
		var en2 = this._workbook().customTableStyles().getEnumerator();
		while (en2.moveNext()) {
			var customStyle = en2.current();
			this._writeWorksheetTableStyle(customStyle);
		}
		this._writeCustomViews();
		if (this._workbook().palette().isCustom()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.pALETTE);
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.uSESELFS);
		this._writeBoundSheetRecords();
		this._writeRecord($.ig.BIFF8RecordType.prototype.cOUNTRY);
		this._writeExternalReferences();
		this._writeNamedReferences();
		if (this._workbookHasShapes()) {
			this._writeRecord($.ig.BIFF8RecordType.prototype.mSODRAWINGGROUP);
		}
		return $.ig.WorkItemExtensions.prototype.then(this._writeRecordAsync($.ig.BIFF8RecordType.prototype.sST), function () {
			$self._writeRecord($.ig.BIFF8RecordType.prototype.eXTSST);
			$self._writeRecord($.ig.BIFF8RecordType.prototype.tHEME);
			$self._writeRecord($.ig.BIFF8RecordType.prototype.eOF);
			$self._contextStack().pop();
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorkbookGlobals()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorkbookStyles()" />*/
	_writeWorkbookStyles: function () {
		if (this.___styles.count() == 0) {
			return;
		}
		var en = this.___styles.getEnumerator();
		while (en.moveNext()) {
			var style = en.current();
			this._contextStack().push(style);
			this._writeRecord($.ig.BIFF8RecordType.prototype.sTYLE);
			if (style._styleFormatInternal()._getXFProps().count() != 0) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.sTYLEEXT);
			}
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorkbookStyles()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetCellComments(Infragistics.Documents.Excel.Worksheet)" />*/
	_writeWorksheetCellComments: function (worksheet) {
		var cache = this._getSerializationCache1(worksheet);
		var en = cache.commentShapes().getEnumerator();
		while (en.moveNext()) {
			var comment = en.current();
			this._contextStack().push(comment.cell());
			this._writeRecord($.ig.BIFF8RecordType.prototype.nOTE);
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetCellComments(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetRowBlock(Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.List)" />*/
	_writeWorksheetRowBlock: function (worksheet, rowsInBlock) {
		var $self = this;
		var firstRowPosition = this._workbookStream().position();
		var en = rowsInBlock.getEnumerator();
		while (en.moveNext()) {
			var row = en.current();
			this._contextStack().push(row);
			this._writeRecord($.ig.BIFF8RecordType.prototype.rOW);
			this._contextStack().pop();
		}
		var firstCellInRowPositions = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		var cellCount = 0;
		return $.ig.WorkItemExtensions.prototype.then$12($.ig.Number.prototype.$type, $.ig.Async.prototype.forEach$1($.ig.excel.WorksheetRow.prototype.$type, rowsInBlock, function (row) {
			firstCellInRowPositions.add($self._workbookStream().position());
			var rowFormat = row._hasCellFormat() ? row._cellFormatInternal().element() : null;
			var rowCache = $self._getSerializationCache(row);
			$self._currentCellContext(new $.ig.CellContext(row, rowCache));
			var ignoreUpToIndex = -1;
			return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.forEachSlice$1($.ig.CellDataContext.prototype.$type, row._getCellsWithData(0, 0x7FFFFFFF), function (cellDataContext) {
				if (cellDataContext.columnIndex() <= ignoreUpToIndex) {
					return false;
				}
				if (cellDataContext.cellFormatData() == null) {
					cellDataContext.cellFormatData(rowFormat || worksheet._getColumnBlock(cellDataContext.columnIndex()).cellFormat());
				}
				$self._currentCellDataContext(cellDataContext);
				ignoreUpToIndex = $self._writeCellRecord();
				cellCount += ignoreUpToIndex + 1 - cellDataContext.columnIndex();
				if ($.ig.WorkbookSaveManagerExcel2003.prototype._maxCellCountPerSlice < cellCount) {
					cellCount = 0;
					return false;
				}
				return true;
			}), function () {
				$self._currentCellContext(null);
				$self._currentCellDataContext(null);
			}, 0);
		}), function () {
			var dbCellPosition = $self._workbookStream().position();
			var dbCellInfo = new $.ig.DBCELLRecord_DBCELLInfo(firstRowPosition, firstCellInRowPositions);
			$self._contextStack().push(dbCellInfo);
			$self._writeRecord($.ig.BIFF8RecordType.prototype.dBCELL);
			$self._contextStack().pop();
			return dbCellPosition;
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetRowBlock(Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetRowBlocks(Infragistics.Documents.Excel.Worksheet)" />*/
	_writeWorksheetRowBlocks: function (worksheet) {
		var $self = this;
		var dbcellRecordPositions = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		var rowsInBlock = new $.ig.List$1($.ig.excel.WorksheetRow.prototype.$type, 0);
		var firstRowInBlock = -1;
		return $.ig.WorkItemExtensions.prototype.then$12($.ig.List$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.WorkItemExtensions.prototype.then2($.ig.Async.prototype.forEach$1($.ig.excel.WorksheetRow.prototype.$type, this._getRowsToSave(worksheet, false), function (row) {
			var rowCache = $self._getSerializationCache(row);
			if (rowCache == null) {
				return null;
			}
			if (firstRowInBlock < 0) {
				firstRowInBlock = row.index();
			}
			return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.$if(row.index() - firstRowInBlock > 31, function () {
				return $.ig.WorkItemExtensions.prototype.then$1($.ig.Number.prototype.$type, $self._writeWorksheetRowBlock(worksheet, rowsInBlock), function (t) {
					dbcellRecordPositions.add($.ig.WorkItemExtensions.prototype.getResult$1($.ig.Number.prototype.$type, t));
					rowsInBlock.clear();
					firstRowInBlock = row.index();
				}, 0);
			}, null), function () {
				rowsInBlock.add(row);
			}, 0);
		}), function () {
			return $.ig.Async.prototype.$if(rowsInBlock.count() > 0, function () {
				return $.ig.WorkItemExtensions.prototype.then$1($.ig.Number.prototype.$type, $self._writeWorksheetRowBlock(worksheet, rowsInBlock), function (t) {
					dbcellRecordPositions.add($.ig.WorkItemExtensions.prototype.getResult$1($.ig.Number.prototype.$type, t));
				}, 0);
			}, null);
		}, 0), function () {
			$.ig.Debug.prototype.assert1($self._getSerializationCache1(worksheet)._rowBlockCount == dbcellRecordPositions.count(), "Incorrect row block count.");
			return dbcellRecordPositions;
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetRowBlocks(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetTables(Infragistics.Documents.Excel.Worksheet)" />*/
	_writeWorksheetTables: function (worksheet) {
		if (worksheet.tables().count() == 0) {
			return;
		}
		this._writeRecord($.ig.BIFF8RecordType.prototype.fEATHEADR11);
		var en = worksheet.tables().getEnumerator();
		while (en.moveNext()) {
			var table = en.current();
			var columnsFilterData = new $.ig.SortedList$2($.ig.Number.prototype.$type, $.ig.TableColumnFilterData.prototype.$type, 1, $.ig.UtilitiesInt32Comparer.prototype._instance);
			for (var i = 0; i < table.columns().count(); i++) {
				var column = table.columns()._item(i);
				var filterData = new $.ig.TableColumnFilterData(column);
				if (filterData._shouldSaveIn2003Formats) {
					columnsFilterData._add(column.index(), filterData);
				}
			}
			this._contextStack().push(table);
			this._contextStack().push(columnsFilterData);
			if ($.ig.WorkbookSaveManagerExcel2003.prototype._shouldWriteFEAT12Record(table)) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.fEAT12);
			} else {
				this._writeRecord($.ig.BIFF8RecordType.prototype.fEAT11);
			}
			this._contextStack().push($.ig.LIST12Record_LIST12DataType.prototype.getBox($.ig.LIST12Record_LIST12DataType.prototype.blockLevelFormatting));
			this._writeRecord($.ig.BIFF8RecordType.prototype.lIST12);
			this._contextStack().pop();
			var en1 = columnsFilterData._values().getEnumerator();
			while (en1.moveNext()) {
				var filterData1 = en1.current();
				if (filterData1._needsAUTOFILTER12Record) {
					this._contextStack().push(filterData1);
					this._writeRecord($.ig.BIFF8RecordType.prototype.aUTOFILTER12);
					this._contextStack().pop();
				}
			}
			this._contextStack().push($.ig.LIST12Record_LIST12DataType.prototype.getBox($.ig.LIST12Record_LIST12DataType.prototype.styleInfo));
			this._writeRecord($.ig.BIFF8RecordType.prototype.lIST12);
			this._contextStack().pop();
			this._contextStack().push($.ig.LIST12Record_LIST12DataType.prototype.getBox($.ig.LIST12Record_LIST12DataType.prototype.displayName));
			this._writeRecord($.ig.BIFF8RecordType.prototype.lIST12);
			this._contextStack().pop();
			if (table.sortSettings()._hasData()) {
				this._writeRecord($.ig.BIFF8RecordType.prototype.sORTDATA12);
			}
			this._contextStack().pop();
			this._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetTables(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetTableStyle(Infragistics.Documents.Excel.WorksheetTableStyle)" />*/
	_writeWorksheetTableStyle: function (customStyle) {
		this._contextStack().push(customStyle);
		this._writeRecord($.ig.BIFF8RecordType.prototype.tABLESTYLE);
		var en = this._getTableStyleDxfIds(customStyle).getEnumerator();
		while (en.moveNext()) {
			var pair = en.current();
			this._contextStack().push($.ig.excel.WorksheetTableStyleArea.prototype.getBox(pair.key()));
			this._contextStack().push(pair.value());
			this._writeRecord($.ig.BIFF8RecordType.prototype.tABLESTYLEELEMENT);
			this._contextStack().pop();
			this._contextStack().pop();
		}
		this._contextStack().pop();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteWorksheetTableStyle(Infragistics.Documents.Excel.WorksheetTableStyle)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Core.ContextStack Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::ContextStack()" />*/
	_contextStack: function () {
		return this.___commonData._contextStack;
	}
	/*<EndProperty Name="Infragistics.Documents.Core.ContextStack Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::ContextStack()" />*/
	,
	__currentCellContext: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.CellContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellContext()" />*/
	_currentCellContext: function (value) {
		if (arguments.length === 1) {
			this.__currentCellContext = value;
			return value;
		} else {
			return this.__currentCellContext;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.CellContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellContext()" />*/
	,
	__currentCellDataContext: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellDataContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellDataContext()" />*/
	_currentCellDataContext: function (value) {
		if (arguments.length === 1) {
			this.__currentCellDataContext = value;
			return value;
		} else {
			return this.__currentCellDataContext;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellDataContext Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentCellDataContext()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentRecordStream()" />*/
	_currentRecordStream: function (value) {
		if (arguments.length === 1) {
			this.___commonData._currentRecordStream = value;
			return value;
		} else {
			return this.___commonData._currentRecordStream;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::CurrentRecordStream()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::ExtSstData()" />*/
	_extSstData: function () {
		return this.___extSstData;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::ExtSstData()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Formats()" />*/
	_formats: function () {
		return this.___commonData._formats;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Formats()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Images()" />*/
	_images: function () {
		return this.___commonData._images;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Images()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Styles()" />*/
	_styles: function () {
		return this.___styles;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::Styles()" />*/
	,
	/*<BeginProperty Name="System.IO.Stream Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WorkbookStream()" />*/
	_workbookStream: function () {
		return this.___commonData._workbookStream;
	}
	/*<EndProperty Name="System.IO.Stream Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WorkbookStream()" />*/
	,
	__writeRecordTransform: null,
	/*<BeginProperty Name="Infragistics.Documents.Core.MsoCrypto.InPlaceTransform Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteRecordTransform()" />*/
	_writeRecordTransform: function (value) {
		if (arguments.length === 1) {
			this.__writeRecordTransform = value;
			return value;
		} else {
			return this.__writeRecordTransform;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Core.MsoCrypto.InPlaceTransform Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::WriteRecordTransform()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::XfRecordData()" />*/
	_xfRecordData: function () {
		return this.___commonData._xfRecordData;
	}
	/*<EndProperty Name=" Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003::XfRecordData()" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003', $.ig.WorkbookSaveManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_ExtSstItem" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_ExtSstItem', 'ValueType', {
	init: function () {
		$.ig.ValueType.prototype.init.call(this);
	},
	_absolutePosition: 0,
	_offsetInRecordBlock: 0,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_ExtSstItem', $.ig.ValueType.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_ExtSstItem" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_FormatHolder" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_FormatHolder', 'Object', {
	_index: 0,
	_format: null,
	init: function (index, format) {
		$.ig.Object.prototype.init.call(this);
		this._index = index;
		this._format = format;
	},
	/*<BeginProperty Name="System.String Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_FormatHolder::Format()" />*/
	format: function () {
		return this._format;
	}
	/*<EndProperty Name="System.String Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_FormatHolder::Format()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_FormatHolder::Index()" />*/
	index: function () {
		return this._index;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_FormatHolder::Index()" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_FormatHolder', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_FormatHolder" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_GetSizeTokenVisitor', 'FormulaTokenVisitor$1', {
	__isForExternalNamedReference: false,
	__stream: null,
	__tokenPositionsInRecordStream: null,
	init: function () {
		$.ig.FormulaTokenVisitor$1.prototype.init.call(this, $.ig.Number.prototype.$type);
	},
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken)" />*/
	defaultVisit: function (token) {
		$.ig.ExcelUtils.prototype.debugFail("We should never call the DefaultVisit method in the GetSizeVisitor.");
		return 0;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::Reset()" />*/
	reset: function () {
		this.__isForExternalNamedReference = false;
		this.__stream = null;
		this.__tokenPositionsInRecordStream = null;
		$.ig.FormulaTokenVisitor$1.prototype.reset.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::Reset()" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitArea3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Area3DToken)" />*/
	visitArea3DToken: function (token) {
		if (this.__isForExternalNamedReference) {
			return 13;
		}
		return 11;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitArea3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Area3DToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAreaErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaErrToken)" />*/
	visitAreaErrToken: function (token) {
		return 9;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAreaErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaErrToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAreaToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaToken)" />*/
	visitAreaToken: function (token) {
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.Area3DNToken.prototype.$type, token) !== null) == false, "The Area3DNToken should not be saved.");
		return 9;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAreaToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	visitArrayToken: function (token) {
		return 8;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrChooseToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	visitAttrChooseToken: function (token) {
		return $.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.getAttrChooseTokenSize(token);
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrChooseToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrIfToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrIfToken)" />*/
	visitAttrIfToken: function (token) {
		return $.ig.AttrIfToken.prototype.size;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrIfToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrIfToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrSkipToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSkipToken)" />*/
	visitAttrSkipToken: function (token) {
		return $.ig.AttrSkipToken.prototype.size;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrSkipToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSkipToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrSpaceToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSpaceToken)" />*/
	visitAttrSpaceToken: function (token) {
		return 4;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrSpaceToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSpaceToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrSumToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSumToken)" />*/
	visitAttrSumToken: function (token) {
		return 4;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrSumToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSumToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrVolatileToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrVolatileToken)" />*/
	visitAttrVolatileToken: function (token) {
		return 4;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitAttrVolatileToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrVolatileToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitBinaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BinaryOperatorToken)" />*/
	visitBinaryOperatorToken: function (token) {
		return 1;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitBinaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BinaryOperatorToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitBoolToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BoolToken)" />*/
	visitBoolToken: function (token) {
		return 2;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitBoolToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BoolToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ErrToken)" />*/
	visitErrToken: function (token) {
		return 2;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ErrToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitExpToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ExpToken)" />*/
	visitExpToken: function (token) {
		return 5;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitExpToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ExpToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitFunctionOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionOperator)" />*/
	visitFunctionOperator: function (token) {
		return 3;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitFunctionOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionOperator)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitFunctionVOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionVOperator)" />*/
	visitFunctionVOperator: function (token) {
		return $.ig.FunctionVOperator.prototype.size;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitFunctionVOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionVOperator)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitIntToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.IntToken)" />*/
	visitIntToken: function (token) {
		return 3;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitIntToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.IntToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	visitMemAreaOperator: function (token) {
		return 7;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemErrOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemErrOperator)" />*/
	visitMemErrOperator: function (token) {
		return 7;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemErrOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemErrOperator)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemFuncOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemFuncOperator)" />*/
	visitMemFuncOperator: function (token) {
		return 3;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemFuncOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemFuncOperator)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemNoMemOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemNoMemOperator)" />*/
	visitMemNoMemOperator: function (token) {
		return 7;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMemNoMemOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemNoMemOperator)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMissArgToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MissArgToken)" />*/
	visitMissArgToken: function (token) {
		return 1;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitMissArgToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MissArgToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken)" />*/
	visitNameToken: function (token) {
		return 5;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken)" />*/
	visitNameXToken: function (token) {
		if (this.__isForExternalNamedReference) {
			return 9;
		}
		return 7;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitNumberToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NumberToken)" />*/
	visitNumberToken: function (token) {
		return 9;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitNumberToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NumberToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitParenToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ParenToken)" />*/
	visitParenToken: function (token) {
		return 1;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitParenToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ParenToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitRef3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Ref3DToken)" />*/
	visitRef3DToken: function (token) {
		if (this.__isForExternalNamedReference) {
			return 9;
		}
		return 7;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitRef3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Ref3DToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitRefErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefErrToken)" />*/
	visitRefErrToken: function (token) {
		return 5;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitRefErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefErrToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitRefToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefToken)" />*/
	visitRefToken: function (token) {
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.Ref3DNToken.prototype.$type, token) !== null) == false, "The Ref3DNToken should not be saved.");
		return 5;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitRefToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitStrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StrToken)" />*/
	visitStrToken: function (token) {
		return (1 + this.__stream._getDataSize(this.__tokenPositionsInRecordStream[this.__currentTokenIndex], $.ig.LengthType.prototype.eightBit, token.value()));
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitStrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StrToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitStructuredTableReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StructuredTableReference)" />*/
	visitStructuredTableReference: function (token) {
		$.ig.ExcelUtils.prototype.debugFail("This token should not be written out to BIFF streams. It only applies to 2007 formats and later.");
		return 0;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitStructuredTableReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StructuredTableReference)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitTblToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.TblToken)" />*/
	visitTblToken: function (token) {
		return 5;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitTblToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.TblToken)" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitUnaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.UnaryOperatorToken)" />*/
	visitUnaryOperatorToken: function (token) {
		return 1;
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::VisitUnaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.UnaryOperatorToken)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.BiffRecordStream, System.Boolean, )" />*/
	initialize: function (context, stream, isForExternalNamedReference, tokenPositionsInRecordStream) {
		if ($.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance == null) {
			$.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance = new $.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor();
		}
		$.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance.context(context);
		$.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance.__stream = stream;
		$.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance.__isForExternalNamedReference = isForExternalNamedReference;
		$.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance.__tokenPositionsInRecordStream = tokenPositionsInRecordStream;
		return $.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.BiffRecordStream, System.Boolean, )" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::GetAttrChooseTokenSize(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	getAttrChooseTokenSize: function (token) {
		return (6 + (2 * token.skipTokenIndexes().count()));
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor::GetAttrChooseTokenSize(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_GetSizeTokenVisitor', $.ig.FormulaTokenVisitor$1.prototype.$type.specialize($.ig.Number.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor', 'WorksheetShapeVisitor$2', {
	init: function () {
		$.ig.WorksheetShapeVisitor$2.prototype.init.call(this, $.ig.WorkbookSaveManagerExcel2003.prototype.$type, $.ig.Boolean.prototype.$type);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor::VisitWorksheetShape(Infragistics.Documents.Excel.WorksheetShape, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	visitWorksheetShape: function (shape, saveManager) {
		var foundExtendedPropertiesValue = false;
		if (shape._drawingProperties1() == null) {
			shape._drawingProperties1(new $.ig.List$1($.ig.PropertyTableBase_PropertyValue.prototype.$type, 0));
		} else {
			for (var i = shape._drawingProperties1().count() - 1; i >= 0; i--) {
				var propertyValue = shape._drawingProperties1().__inner[i];
				switch (propertyValue._propertyType()) {
					case $.ig.PropertyType.prototype.textLeft:
					case $.ig.PropertyType.prototype.textTop:
					case $.ig.PropertyType.prototype.textRight:
					case $.ig.PropertyType.prototype.textBottom:
					case $.ig.PropertyType.prototype.fillStyleColor:
					case $.ig.PropertyType.prototype.fillStyleOpacity:
					case $.ig.PropertyType.prototype.fillStyleNoFillHitTest:
					case $.ig.PropertyType.prototype.lineStyleColor:
					case $.ig.PropertyType.prototype.lineStyleOpacity:
					case $.ig.PropertyType.prototype.lineStyleNoLineDrawDash:
					case $.ig.PropertyType.prototype.transformRotation:
						shape._drawingProperties1().removeAt(i);
						break;
					case $.ig.PropertyType.prototype.textFitToShape:
						{
							if ((typeof propertyValue._value() === 'number') == false) {
								$.ig.ExcelUtils.prototype.debugFail("This property should have had a uint value.");
								shape._drawingProperties1().removeAt(i);
								break;
							}
							var textFlags = $.ig.util.getValue(propertyValue._value());
							propertyValue._value(textFlags);
						}
						break;
					case $.ig.PropertyType.prototype.groupShapeBooleanProperties:
						{
							if ((typeof propertyValue._value() === 'number') == false) {
								$.ig.ExcelUtils.prototype.debugFail("This property should have had a uint value.");
								shape._drawingProperties1().removeAt(i);
								break;
							}
							foundExtendedPropertiesValue = true;
							var value = $.ig.util.getValue(propertyValue._value());
							if (shape.visible()) {
								value = $.ig.util.u32BitwiseAnd(value, ~$.ig.excel.WorksheetShape.prototype._extendedProperties_Hidden);
							} else {
								value = $.ig.util.u32BitwiseOr(value, $.ig.excel.WorksheetShape.prototype._extendedProperties_Hidden);
							}
							propertyValue._value(value);
							break;
						}
				}
			}
		}
		if (foundExtendedPropertiesValue == false) {
			var extendedPropertiesDefaultValue = $.ig.excel.WorksheetShape.prototype._extendedProperties_Default;
			if (shape.visible() == false) {
				extendedPropertiesDefaultValue = $.ig.util.u32BitwiseOr(extendedPropertiesDefaultValue, $.ig.excel.WorksheetShape.prototype._extendedProperties_Hidden);
			}
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(0, $.ig.PropertyType.prototype.groupShapeBooleanProperties, extendedPropertiesDefaultValue));
		}
		if (shape._canHaveFill()) {
			shape._fillResolved()._populateDrawingProperties2003(shape);
		}
		if (shape._canHaveOutline()) {
			shape._outlineResolved()._populateDrawingProperties2003(shape);
		}
		if (shape._rotation() != 0) {
			var rotationValue = $.ig.ExcelUtils.prototype.toFixedPoint16_16Value(shape._rotation());
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(0, $.ig.PropertyType.prototype.transformRotation, rotationValue));
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor::VisitWorksheetShape(Infragistics.Documents.Excel.WorksheetShape, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor::VisitWorksheetShapeWithText(Infragistics.Documents.Excel.WorksheetShapeWithText, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	visitWorksheetShapeWithText: function (shape, saveManager) {
		$.ig.WorksheetShapeVisitor$2.prototype.visitWorksheetShapeWithText.call(this, shape, saveManager);
		if (shape._leftMargin() != $.ig.excel.WorksheetShapeWithText.prototype._defaultHorizontalMargin) {
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(0, $.ig.PropertyType.prototype.textLeft, $.ig.util.intSToU($.ig.ExcelUtils.prototype.twipsToEMU1(shape._leftMargin()))));
		}
		if (shape._topMargin() != $.ig.excel.WorksheetShapeWithText.prototype._defaultVerticalMargin) {
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(0, $.ig.PropertyType.prototype.textTop, $.ig.util.intSToU($.ig.ExcelUtils.prototype.twipsToEMU1(shape._topMargin()))));
		}
		if (shape._rightMargin() != $.ig.excel.WorksheetShapeWithText.prototype._defaultHorizontalMargin) {
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(0, $.ig.PropertyType.prototype.textRight, $.ig.util.intSToU($.ig.ExcelUtils.prototype.twipsToEMU1(shape._rightMargin()))));
		}
		if (shape._bottomMargin() != $.ig.excel.WorksheetShapeWithText.prototype._defaultVerticalMargin) {
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(0, $.ig.PropertyType.prototype.textBottom, $.ig.util.intSToU($.ig.ExcelUtils.prototype.twipsToEMU1(shape._bottomMargin()))));
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor::VisitWorksheetShapeWithText(Infragistics.Documents.Excel.WorksheetShapeWithText, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor', $.ig.WorksheetShapeVisitor$2.prototype.$type.specialize($.ig.WorkbookSaveManagerExcel2003.prototype.$type, $.ig.Boolean.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor', 'WorksheetShapeVisitor$2', {
	init: function () {
		$.ig.WorksheetShapeVisitor$2.prototype.init.call(this, $.ig.WorkbookSaveManagerExcel2003.prototype.$type, $.ig.Boolean.prototype.$type);
	},
	visitUnknownShape: function (shape, saveManager) {
		return this._visitUnknownShape$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitUnknownShape(Infragistics.Documents.Excel.UnknownShape, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	_visitUnknownShape$i: function (shape, saveManager) {
		$.ig.WorksheetShapeVisitor$2.prototype._visitUnknownShape$i.call(this, shape, saveManager);
		var image = (shape).image();
		if (image != null) {
			var drawingProperties1 = shape._drawingProperties1();
			var $ret = $.ig.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor.prototype.popuplateBLIPIdDrawingProperty(saveManager, image, drawingProperties1);
			drawingProperties1 = $ret.p2;
			shape._drawingProperties1(drawingProperties1);
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitUnknownShape(Infragistics.Documents.Excel.UnknownShape, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	visitWorksheetCellComment: function (shape, saveManager) {
		return this._visitWorksheetCellComment$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitWorksheetCellComment(Infragistics.Documents.Excel.WorksheetCellComment, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	_visitWorksheetCellComment$i: function (shape, saveManager) {
		if (shape._drawingProperties1() == null) {
			shape._drawingProperties1(new $.ig.List$1($.ig.PropertyTableBase_PropertyValue.prototype.$type, 0));
		}
		if (shape._drawingProperties1().count() == 0) {
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.textDirection, $.ig.util.intSToU(655368), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.geometryTypeOfConnectionSites, $.ig.util.intSToU(0), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.fillStyleBackColor, $.ig.util.intSToU(14811135), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.fillStyleColorModification, $.ig.util.intSToU(268435700), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.lineStyleColorModification, $.ig.util.intSToU(268435700), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.shadowColor, $.ig.util.intSToU(0), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.shadowColorModification, $.ig.util.intSToU(268435700), false, false));
			shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.shadowObscured, $.ig.util.intSToU(196611), false, false));
		}
		return $.ig.WorksheetShapeVisitor$2.prototype._visitWorksheetCellComment$i.call(this, shape, saveManager);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitWorksheetCellComment(Infragistics.Documents.Excel.WorksheetCellComment, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	visitWorksheetImage: function (shape, saveManager) {
		return this._visitWorksheetImage$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitWorksheetImage(Infragistics.Documents.Excel.WorksheetImage, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	_visitWorksheetImage$i: function (shape, saveManager) {
		$.ig.WorksheetShapeVisitor$2.prototype._visitWorksheetImage$i.call(this, shape, saveManager);
		var drawingProperties1 = shape._drawingProperties1();
		var $ret = $.ig.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor.prototype.popuplateBLIPIdDrawingProperty(saveManager, shape._image(), drawingProperties1);
		drawingProperties1 = $ret.p2;
		shape._drawingProperties1(drawingProperties1);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitWorksheetImage(Infragistics.Documents.Excel.WorksheetImage, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitWorksheetShape(Infragistics.Documents.Excel.WorksheetShape, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	visitWorksheetShape: function (shape, saveManager) {
		if (shape._type2003().hasValue() && $.ig.Enum.prototype.isDefined($.ig.excel.PredefinedShapeType.prototype.$type, $.ig.excel.PredefinedShapeType.prototype.getBox(shape._type2003().value()))) {
			this.populateDrawingPropertiesForPredefinedShapes(shape);
		}
		shape._accept$2($.ig.WorkbookSaveManagerExcel2003.prototype.$type, $.ig.Boolean.prototype.$type, $.ig.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor.prototype.instance, saveManager);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::VisitWorksheetShape(Infragistics.Documents.Excel.WorksheetShape, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::PopuplateBLIPIdDrawingProperty(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.MockClasses.Image, System.Collections.Generic.List)" />*/
	popuplateBLIPIdDrawingProperty: function (saveManager, image, drawingProperties1) {
		if (drawingProperties1 != null) {
			for (var i = drawingProperties1.count() - 1; i >= 0; i--) {
				if (drawingProperties1.__inner[i]._isBlipId()) {
					drawingProperties1.removeAt(i);
				}
			}
		} else {
			drawingProperties1 = new $.ig.List$1($.ig.PropertyTableBase_PropertyValue.prototype.$type, 0);
		}
		var index = saveManager._images().indexOf(new $.ig.WorkbookSerializationDataExcel2003_ImageHolder(image, 1));
		$.ig.ExcelUtils.prototype.debugAssert(index >= 0, null);
		if (index >= 0) {
			drawingProperties1.add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.bLIPId, $.ig.util.intSToU((index + 1)), false, true));
		}
		return {
			p2: drawingProperties1
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::PopuplateBLIPIdDrawingProperty(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.MockClasses.Image, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::PopulateDrawingPropertiesForPredefinedShapes(Infragistics.Documents.Excel.WorksheetShape)" />*/
	populateDrawingPropertiesForPredefinedShapes: function (shape) {
		if (shape._drawingProperties1() == null) {
			shape._drawingProperties1(new $.ig.List$1($.ig.PropertyTableBase_PropertyValue.prototype.$type, 0));
		}
		if (shape._drawingProperties1().count() == 0) {
			if (shape._isConnector()) {
				shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.geometryFillOK, $.ig.util.intSToU(65536), false, false));
				shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, 771, $.ig.util.intSToU(0), false, false));
			} else {
				var shapeWithText = $.ig.util.cast($.ig.excel.WorksheetShapeWithText.prototype.$type, shape);
				var hasText = shapeWithText != null && shapeWithText._hasText();
				if (hasText) {
					shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.protectionLockAgainstGrouping, $.ig.util.intSToU(262144), false, false));
					shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.textAnchorText, $.ig.util.intSToU(1), false, false));
					shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.textDirection, $.ig.util.intSToU(2), false, false));
				}
				shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.textFitToShape, $.ig.util.intSToU(2031640), false, false));
				shape._drawingProperties1().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.lineStyleWidth, $.ig.util.intSToU(25400), false, false));
			}
		}
		if (shape._drawingProperties3() == null) {
			shape._drawingProperties3(new $.ig.List$1($.ig.PropertyTableBase_PropertyValue.prototype.$type, 0));
		}
		if (shape._drawingProperties3().count() == 0) {
			if (shape._isConnector()) {
				shape._drawingProperties3().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.lineStyleNoLineDrawDash, $.ig.util.intSToU(4194304), false, false));
			} else {
				shape._drawingProperties3().add(new $.ig.PropertyTableBase_PropertyValue(1, $.ig.PropertyType.prototype.lineStyleNoLineDrawDash, $.ig.util.intSToU(4194304), false, false));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor::PopulateDrawingPropertiesForPredefinedShapes(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor', $.ig.WorksheetShapeVisitor$2.prototype.$type.specialize($.ig.WorkbookSaveManagerExcel2003.prototype.$type, $.ig.Boolean.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor', 'FormulaTokenVisitor', {
	__stream: null,
	init: function () {
		$.ig.FormulaTokenVisitor.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::Reset()" />*/
	reset: function () {
		this.__stream = null;
		$.ig.FormulaTokenVisitor.prototype.reset.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	visitArrayToken: function (token) {
		var numberOfColumns = token.values().length;
		var numberOfRows = token.values()[0].length;
		this.__stream._write9((numberOfColumns - 1));
		this.__stream._write17((numberOfRows - 1));
		for (var row = 0; row < numberOfRows; row++) {
			for (var col = 0; col < numberOfColumns; col++) {
				var constant = token.values()[col][row];
				this.__stream._write9(constant.constantCode());
				constant.save($.ig.util.cast($.ig.IBiffRecordStream.prototype.$type, this.__stream));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	visitMemAreaOperator: function (token) {
		this.__stream._write17(token.ranges().length);
		for (var i = 0; i < token.ranges().length; i++) {
			this.__stream._write4(token.ranges()[i]);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.BiffRecordStream)" />*/
	initialize: function (context, stream) {
		if ($.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.__instance == null) {
			$.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.__instance = new $.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor();
		}
		$.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.__instance.context(context);
		$.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.__instance.__stream = stream;
		return $.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.__instance;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.BiffRecordStream)" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor', $.ig.FormulaTokenVisitor.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor" />*/

$.ig.util.defType('WorkbookSaveManagerExcel2003_SaveTokenVisitor', 'FormulaTokenVisitor', {
	__isForExternalNamedReference: false,
	__resolvedTokenList: null,
	__stream: null,
	__tokenPositionsInRecordStream: null,
	init: function () {
		$.ig.FormulaTokenVisitor.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken)" />*/
	defaultVisit: function (token) {
		$.ig.ExcelUtils.prototype.debugFail("We should never call the DefaultVisit method in the SaveTokenVisitor.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::Reset()" />*/
	reset: function () {
		this.__isForExternalNamedReference = false;
		this.__resolvedTokenList = null;
		this.__stream = null;
		this.__tokenPositionsInRecordStream = null;
		$.ig.FormulaTokenVisitor.prototype.reset.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAll()" />*/
	visitAll: function () {
		var count = this.__resolvedTokenList.length;
		for (this.currentTokenIndex(0); this.currentTokenIndex() < count; (function ($obj) { var $value = $obj.currentTokenIndex(); $obj.currentTokenIndex($value + 1); return $value; }(this))) {
			var token = this.__resolvedTokenList[this.currentTokenIndex()];
			$.ig.ExcelUtils.prototype.debugAssert(this.__stream.position() == this.__tokenPositionsInRecordStream[this.currentTokenIndex()], "The size of the token was not calculated correctly.");
			this.__stream._write9(token.token());
			token.accept(this);
		}
		this.reset();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAll()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitArea3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Area3DToken)" />*/
	visitArea3DToken: function (token) {
		this.save3DData(token.worksheetReference());
		this.visitAreaToken(token);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitArea3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Area3DToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAreaErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaErrToken)" />*/
	visitAreaErrToken: function (token) {
		this.__stream._write2($.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__empty8Bytes);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAreaErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaErrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAreaToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaToken)" />*/
	visitAreaToken: function (token) {
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.Area3DNToken.prototype.$type, token) !== null) == false, "The Area3DNToken should not be saved.");
		this.__stream._write4(token.cellAddressRange());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAreaToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	visitArrayToken: function (token) {
		this.__stream._write2($.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__empty7Bytes);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrChooseToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	visitAttrChooseToken: function (token) {
		this.__stream._write9(token.type());
		this.__stream._write17((token.skipTokenIndexes().count()));
		var tokenPos = this.__tokenPositionsInRecordStream[this.currentTokenIndex()];
		var tokenSize = $.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.getAttrChooseTokenSize(token);
		this.__stream._write17((tokenSize - 4));
		for (var i = 0; i < token.skipTokenIndexes().count(); i++) {
			var skipTokenPos = this.__tokenPositionsInRecordStream[token.skipTokenIndexes().__inner[i]];
			this.__stream._write17((skipTokenPos - tokenPos));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrChooseToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrIfToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrIfToken)" />*/
	visitAttrIfToken: function (token) {
		this.__stream._write9(token.type());
		if (token.skipTokenIndexes().count() == 0) {
			$.ig.ExcelUtils.prototype.debugFail("We should have at least one skip token.");
			this.__stream._write17(0);
			return;
		}
		var tokenPos = this.__tokenPositionsInRecordStream[this.currentTokenIndex()];
		var endOfToken = tokenPos + $.ig.AttrIfToken.prototype.size;
		var skipTokenPos = this.__tokenPositionsInRecordStream[token.skipTokenIndexes().__inner[0]];
		var endOfskipToken = skipTokenPos + $.ig.AttrSkipToken.prototype.size;
		this.__stream._write17((endOfskipToken - endOfToken));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrIfToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrIfToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrSkipToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSkipToken)" />*/
	visitAttrSkipToken: function (token) {
		this.__stream._write9(token.type());
		var tokenPos = this.__tokenPositionsInRecordStream[this.currentTokenIndex()];
		var endOfToken = tokenPos + $.ig.AttrSkipToken.prototype.size;
		var owningTokenPos = this.__tokenPositionsInRecordStream[token.owningSelectorFunctionIndex()];
		var endOfOwningToken = owningTokenPos + $.ig.FunctionVOperator.prototype.size;
		this.__stream._write17((endOfOwningToken - endOfToken - 1));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrSkipToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSkipToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrSpaceToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSpaceToken)" />*/
	visitAttrSpaceToken: function (token) {
		this.__stream._write9(token.type());
		this.__stream._write9(token.whitespaceType());
		this.__stream._write9(token.numberOfWhitespaceChars());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrSpaceToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSpaceToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrSumToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSumToken)" />*/
	visitAttrSumToken: function (token) {
		this.__stream._write9(token.type());
		this.__stream._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrSumToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSumToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrVolatileToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrVolatileToken)" />*/
	visitAttrVolatileToken: function (token) {
		this.__stream._write9(token.type());
		this.__stream._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitAttrVolatileToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrVolatileToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitBinaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BinaryOperatorToken)" />*/
	visitBinaryOperatorToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitBinaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BinaryOperatorToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitBoolToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BoolToken)" />*/
	visitBoolToken: function (token) {
		this.__stream._write9((token.value() ? 1 : 0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitBoolToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BoolToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ErrToken)" />*/
	visitErrToken: function (token) {
		this.__stream._write9(token.value()._value());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ErrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitExpToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ExpToken)" />*/
	visitExpToken: function (token) {
		this.__stream._write17(token.cellAddress().row());
		this.__stream._write17(token.cellAddress().column());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitExpToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ExpToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitFunctionOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionOperator)" />*/
	visitFunctionOperator: function (token) {
		this.__stream._write17(token.$function()._iD());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitFunctionOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitFunctionVOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionVOperator)" />*/
	visitFunctionVOperator: function (token) {
		var argumentCount = token.argumentCount();
		if (token.$function()._isAddIn()) {
			argumentCount++;
		}
		this.__stream._write9(argumentCount);
		this.visitFunctionOperator(token);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitFunctionVOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionVOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitIntToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.IntToken)" />*/
	visitIntToken: function (token) {
		this.__stream._write17(token.value());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitIntToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.IntToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	visitMemAreaOperator: function (token) {
		this.__stream._write18($.ig.util.intSToU(0));
		this.__stream._write17(token.sizeOfRefSubExpression());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemErrOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemErrOperator)" />*/
	visitMemErrOperator: function (token) {
		this.__stream._write18($.ig.util.intSToU(0));
		this.__stream._write17(token.sizeOfRefSubExpression());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemErrOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemErrOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemFuncOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemFuncOperator)" />*/
	visitMemFuncOperator: function (token) {
		this.__stream._write17(token.sizeOfRefSubExpression());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemFuncOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemFuncOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemNoMemOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemNoMemOperator)" />*/
	visitMemNoMemOperator: function (token) {
		this.__stream._write18($.ig.util.intSToU(0));
		this.__stream._write17(token.sizeOfRefSubExpression());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMemNoMemOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemNoMemOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMissArgToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MissArgToken)" />*/
	visitMissArgToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitMissArgToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MissArgToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken)" />*/
	visitNameToken: function (token) {
		var index = this.__stream.saveManager()._workbook()._currentWorkbookReference().namedReferences().indexOf(token.namedReference());
		$.ig.ExcelUtils.prototype.debugAssert(index >= 0, "Could not find the named reference.");
		this.__stream._write17((index + 1));
		this.__stream._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken)" />*/
	visitNameXToken: function (token) {
		this.save3DData(token.worksheetReference());
		var index = token.worksheetReference().workbookReference().namedReferences().indexOf(token.namedReference());
		$.ig.ExcelUtils.prototype.debugAssert(index >= 0, "Could not find the named reference.");
		this.__stream._write17((index + 1));
		this.__stream._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitNumberToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NumberToken)" />*/
	visitNumberToken: function (token) {
		this.__stream._write10(token.value());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitNumberToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NumberToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitParenToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ParenToken)" />*/
	visitParenToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitParenToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ParenToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitRef3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Ref3DToken)" />*/
	visitRef3DToken: function (token) {
		this.save3DData(token.worksheetReference());
		this.visitRefToken(token);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitRef3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Ref3DToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitRefErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefErrToken)" />*/
	visitRefErrToken: function (token) {
		this.__stream._write18($.ig.util.intSToU(0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitRefErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefErrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitRefToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefToken)" />*/
	visitRefToken: function (token) {
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.Ref3DNToken.prototype.$type, token) !== null) == false, "The Ref3DNToken should not be saved.");
		this.__stream._write3(token.cellAddress());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitRefToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitStrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StrToken)" />*/
	visitStrToken: function (token) {
		this.__stream._write15(token.value(), $.ig.LengthType.prototype.eightBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitStrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitStructuredTableReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StructuredTableReference)" />*/
	visitStructuredTableReference: function (token) {
		$.ig.ExcelUtils.prototype.debugFail("This token should not be written out to BIFF streams. It only applies to 2007 formats and later.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitStructuredTableReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StructuredTableReference)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitTblToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.TblToken)" />*/
	visitTblToken: function (token) {
		this.__stream._write17(token.cellAddress().row());
		this.__stream._write17(token.cellAddress().column());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitTblToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.TblToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitUnaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.UnaryOperatorToken)" />*/
	visitUnaryOperatorToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::VisitUnaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.UnaryOperatorToken)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.BiffRecordStream, System.Boolean, , )" />*/
	initialize: function (context, stream, isForExternalNamedReference, resolvedTokenList, tokenPositionsInRecordStream) {
		if ($.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance == null) {
			$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance = new $.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor();
		}
		$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance.context(context);
		$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance.__stream = stream;
		$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance.__isForExternalNamedReference = isForExternalNamedReference;
		$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance.__resolvedTokenList = resolvedTokenList;
		$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance.__tokenPositionsInRecordStream = tokenPositionsInRecordStream;
		return $.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.BiffRecordStream, System.Boolean, , )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::Save3DData(Infragistics.Documents.Excel.Serialization.WorksheetReference)" />*/
	save3DData: function (worksheetReference) {
		if (this.__isForExternalNamedReference) {
			this.__stream._write17(worksheetReference.firstWorksheetIndex());
			this.__stream._write17(worksheetReference.lastWorksheetIndex());
		} else {
			var index = this.__stream.saveManager()._worksheetReferences().indexOf(worksheetReference);
			$.ig.ExcelUtils.prototype.debugAssert(index >= 0, "The worksheet reference could not be found.");
			this.__stream._write17(index);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor::Save3DData(Infragistics.Documents.Excel.Serialization.WorksheetReference)" />*/
	,
	$type: new $.ig.Type('WorkbookSaveManagerExcel2003_SaveTokenVisitor', $.ig.FormulaTokenVisitor.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003" />*/

$.ig.util.defType('WorkbookLoadManagerExcel2003', 'WorkbookLoadManager', {
	___areAllNamedReferencesLoaded: false,
	___childBoundsInEmusByGroupShape: null,
	___childrenXfsByStyleId: null,
	___commonData: null,
	___currentExternalWorkbookReference: null,
	___currentExternalWorksheetReference: null,
	___currentRowForLoadingCellValues: null,
	___deferredDXFRecords: null,
	___deferredExtSstRecordPosition: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___deferredFONTRecords: null,
	___deferredSstRecordPosition: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___deferredSTYLEEXTRecords: null,
	___deferredSTYLERecords: null,
	___deferredXFEXTRecords: null,
	___deferredXFRecords: null,
	___indexToNameRecordByNameToken: null,
	___isVerifyingFormatsLoaded: false,
	___loadedComments: null,
	___loadedStyles: null,
	___nameReferenceResolver: null,
	___packageFactory: null,
	___pendingNamedReferencesToBeFinalized: null,
	___pendingSharedFormulaRoots: null,
	___rowsInLoadingBlock: null,
	___sharedFormulasInCurrentWorksheet: null,
	___workbookStreamReader: null,
	___worksheetIdsByIndex: null,
	___xfRecordsStart: 0,
	_staticInit: function () {
		$.ig.excel.Workbook.prototype.__loadBIFF8Func($.ig.WorkbookLoadManagerExcel2003.prototype._loadBIFF8File);
	},
	init: function (workbook, workbookStream, filePath, loadOptions) {
		this.___commonData = new $.ig.WorkbookSerializationDataExcel2003();
		$.ig.WorkbookLoadManager.prototype.init.call(this, workbook, filePath);
		this.___packageFactory = loadOptions._packageFactoryResolved();
		this.___childBoundsInEmusByGroupShape = new $.ig.Dictionary$2($.ig.excel.WorksheetShapeGroup.prototype.$type, $.ig.Rect.prototype.$type, 0);
		this.___childrenXfsByStyleId = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.List$1.prototype.$type.specialize($.ig.WorksheetCellFormatData.prototype.$type), 0);
		this.___indexToNameRecordByNameToken = new $.ig.Dictionary$2($.ig.NameToken.prototype.$type, $.ig.Number.prototype.$type, 0);
		this.___nameReferenceResolver = new $.ig.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor(this);
		this.___pendingSharedFormulaRoots = new $.ig.Dictionary$2($.ig.WorksheetCellAddress.prototype.$type, $.ig.excel.ExcelCalcValue.prototype.$type, 0);
		this.___sharedFormulasInCurrentWorksheet = new $.ig.Dictionary$2($.ig.WorksheetCellAddress.prototype.$type, $.ig.excel.Formula.prototype.$type, 0);
		this.___worksheetIdsByIndex = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.Number.prototype.$type, 0);
		this.___commonData = new $.ig.WorkbookSerializationDataExcel2003(1, workbookStream);
		this.___workbookStreamReader = new $.ig.BinaryReader(1, this.___commonData._workbookStream);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::Dispose(System.Boolean)" />*/
	disposeCore: function (disposing) {
		if (disposing) {
			if (this._currentRecordStream() != null) {
				this._currentRecordStream().dispose();
				this._currentRecordStream(null);
			}
			if (this.___workbookStreamReader != null) {
				this.___workbookStreamReader.close();
			}
			this._workbookStream().dispose();
		}
		$.ig.WorkbookLoadManager.prototype.disposeCore.call(this, disposing);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::Dispose(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetLoadedDefaultCellFormat()" />*/
	_getLoadedDefaultCellFormat: function () {
		if (this._formats().count() <= $.ig.WorkbookSerializationDataExcel2003.prototype.defaultCellFormatXfId) {
			$.ig.ExcelUtils.prototype.debugFail("This is unexpected.");
			return null;
		}
		return this._formats().__inner[$.ig.WorkbookSerializationDataExcel2003.prototype.defaultCellFormatXfId];
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetLoadedDefaultCellFormat()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::FinalizeNamedReference(Infragistics.Documents.Excel.NamedReference, Infragistics.Documents.Excel.SingleTargetFormula, System.Boolean)" />*/
	_finalizeNamedReference: function (reference, formula, hidden) {
		if (this.___areAllNamedReferencesLoaded) {
			if (formula != null) {
				this._resolveCachedNamedRecordIndexes(formula);
			}
			reference._setFormulaInternal(formula, false);
			this._addInternalNamedReference(reference, hidden);
		} else {
			if (this.___pendingNamedReferencesToBeFinalized == null) {
				this.___pendingNamedReferencesToBeFinalized = new $.ig.List$1($.ig.Tuple$3.prototype.$type.specialize($.ig.excel.NamedReference.prototype.$type, $.ig.SingleTargetFormula.prototype.$type, $.ig.Boolean.prototype.$type), 0);
			}
			this.___pendingNamedReferencesToBeFinalized.add($.ig.Tuple.prototype.create$3($.ig.excel.NamedReference.prototype.$type, $.ig.SingleTargetFormula.prototype.$type, $.ig.Boolean.prototype.$type, reference, formula, hidden));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::FinalizeNamedReference(Infragistics.Documents.Excel.NamedReference, Infragistics.Documents.Excel.SingleTargetFormula, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadCore()" />*/
	_loadCore: function () {
		var $self = this;
		this.___xfRecordsStart = -1;
		return $.ig.WorkItemExtensions.prototype.then(this._loadAllRecords(), function () {
			$self._processLoadedShapeIds();
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadCore()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnAfterLoadGlobalSettings()" />*/
	_onAfterLoadGlobalSettings: function () {
		$.ig.WorkbookLoadManager.prototype._onAfterLoadGlobalSettings.call(this);
		this.___areAllNamedReferencesLoaded = true;
		var en = this._workbook()._currentWorkbookReference().namedReferences().getEnumerator();
		while (en.moveNext()) {
			var namedReference = en.current();
			if (namedReference._formulaInternal() != null) {
				this._resolveCachedNamedRecordIndexes(namedReference._formulaInternal());
			}
		}
		if (this.___pendingNamedReferencesToBeFinalized != null) {
			var en1 = this.___pendingNamedReferencesToBeFinalized.getEnumerator();
			while (en1.moveNext()) {
				var namedReferenceInfo = en1.current();
				this._finalizeNamedReference(namedReferenceInfo.item1(), namedReferenceInfo.item2(), namedReferenceInfo.item3());
			}
			this.___pendingNamedReferencesToBeFinalized = null;
		}
		if (this._workbook()._externalWorkbooks() != null) {
			var en2 = this._workbook()._externalWorkbooks().values().getEnumerator();
			while (en2.moveNext()) {
				var externalWorkbook = en2.current();
				var en3 = externalWorkbook.namedReferences().getEnumerator();
				while (en3.moveNext()) {
					var namedReference1 = en3.current();
					if (namedReference1._formulaInternal() != null) {
						this._resolveCachedNamedRecordIndexes(namedReference1._formulaInternal());
					}
				}
			}
		}
		this.___indexToNameRecordByNameToken.clear();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnAfterLoadGlobalSettings()" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetGroupShapeChildBoundsInEmus(Infragistics.Documents.Excel.WorksheetShapeGroup)" />*/
	_getGroupShapeChildBoundsInEmus: function (group) {
		var childBoundsInEmus;
		var $ret = this.___childBoundsInEmusByGroupShape.tryGetValue(group, childBoundsInEmus);
		childBoundsInEmus = $ret.p1;
		return childBoundsInEmus;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetGroupShapeChildBoundsInEmus(Infragistics.Documents.Excel.WorksheetShapeGroup)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetLoadedStyle(System.Int32)" />*/
	_getLoadedStyle: function (styleIndex) {
		if (styleIndex == -1) {
			return null;
		}
		if (0 <= styleIndex && styleIndex < this._loadedStyles().count()) {
			return this._loadedStyles().__inner[styleIndex];
		}
		$.ig.ExcelUtils.prototype.debugFail("Invalid style index.");
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetLoadedStyle(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetRow(Infragistics.Documents.Excel.Worksheet, System.Int32)" />*/
	_getRow: function (worksheet, rowIndex) {
		if (this.___currentRowForLoadingCellValues != null && this.___currentRowForLoadingCellValues.index() == rowIndex && this.___currentRowForLoadingCellValues.worksheet() == worksheet) {
			return this.___currentRowForLoadingCellValues;
		}
		var row = null;
		if (this.___rowsInLoadingBlock != null) {
			var firstRow = this.___rowsInLoadingBlock[0];
			if (firstRow != null) {
				var cacheIndex = rowIndex - firstRow.index();
				if (0 <= cacheIndex && cacheIndex < this.___rowsInLoadingBlock.length) {
					row = this.___rowsInLoadingBlock[cacheIndex];
				}
			}
		}
		if (row == null) {
			row = worksheet.rows().item(rowIndex);
			this.___currentRowForLoadingCellValues = row;
		}
		return row;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetRow(Infragistics.Documents.Excel.Worksheet, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.ArrayFormula Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadArrayFormula(, System.Int32)" />*/
	_loadArrayFormula: function (data, dataIndex) {
		var $self = this;
		return {
			ret: (function () { var $ret = $self._loadFormula($.ig.FormulaType.prototype.arrayFormula, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }()),
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.ArrayFormula Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadArrayFormula(, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadCurrentRecord()" />*/
	_loadCurrentRecord: function () {
		var currentRecordStream = this._currentRecordStream();
		var record = this.___commonData.getBiffRecord(currentRecordStream._recordType());
		if (record == null) {
			return null;
		}
		$.ig.ExcelUtils.prototype.debugAssert(record.type() == currentRecordStream._recordType(), "The type of the record doesn't match the record id");
		currentRecordStream._debugLogRecord();
		return this._loadRecordHelper(record);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadCurrentRecord()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadRC4CryptoAPIEncryptionStream(System.IO.Stream, Infragistics.Documents.Core.StructuredStorage.FileTypes.DocumentSummaryInformation, Infragistics.Documents.Core.StructuredStorage.FileTypes.SummaryInformation)" />*/
	_loadRC4CryptoAPIEncryptionStream: function (encryptionStream, documentSummaryInformation, summaryInformation) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadRC4CryptoAPIEncryptionStream(System.IO.Stream, Infragistics.Documents.Core.StructuredStorage.FileTypes.DocumentSummaryInformation, Infragistics.Documents.Core.StructuredStorage.FileTypes.SummaryInformation)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Formula Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadFormula(Infragistics.Documents.Excel.FormulaType, , System.Int32)" />*/
	_loadFormula: function (type, data, dataIndex) {
		var $self = this;
		var tokenArraySize = (function () { var $ret = $self._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var formula = $.ig.excel.Formula.prototype._createFormula(this._workbook().cellReferenceMode(), type);
		var $ret = this._loadFormulaData(formula, tokenArraySize, data, dataIndex);
		data = $ret.p2;
		dataIndex = $ret.p3;
		return {
			ret: formula,
			p1: data,
			p2: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Formula Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadFormula(Infragistics.Documents.Excel.FormulaType, , System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Formula Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadFormula(Infragistics.Documents.Excel.FormulaType, System.UInt16, , System.Int32)" />*/
	_loadFormula1: function (type, rpnTokenArraySize, data, dataIndex) {
		if (rpnTokenArraySize == 0) {
			return {
				ret: null,
				p2: data,
				p3: dataIndex
			};
		}
		var formula = $.ig.excel.Formula.prototype._createFormula(this._workbook().cellReferenceMode(), type);
		var $ret = this._loadFormulaData(formula, rpnTokenArraySize, data, dataIndex);
		data = $ret.p2;
		dataIndex = $ret.p3;
		return {
			ret: formula,
			p2: data,
			p3: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Formula Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadFormula(Infragistics.Documents.Excel.FormulaType, System.UInt16, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnDBCellRecordLoaded()" />*/
	_onDBCellRecordLoaded: function () {
		this.___rowsInLoadingBlock = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnDBCellRecordLoaded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnRecordLoaded(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	_onRecordLoaded: function (stream) {
		this._currentRecordStream(stream._parentStream());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnRecordLoaded(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnRecordLoading(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	_onRecordLoading: function (stream) {
		if (this._currentRecordStream() != null) {
			this._currentRecordStream()._addSubStream(stream);
		}
		this._currentRecordStream(stream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnRecordLoading(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnRowLoaded(Infragistics.Documents.Excel.WorksheetRow)" />*/
	_onRowLoaded: function (row) {
		if (this.___rowsInLoadingBlock == null) {
			this.___rowsInLoadingBlock = new Array(32);
		}
		var firstRow = this.___rowsInLoadingBlock[0];
		if (firstRow == null) {
			this.___rowsInLoadingBlock[0] = row;
		} else {
			var cacheIndex = row.index() - firstRow.index();
			if (0 <= cacheIndex && cacheIndex < this.___rowsInLoadingBlock.length) {
				this.___rowsInLoadingBlock[cacheIndex] = row;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::OnRowLoaded(Infragistics.Documents.Excel.WorksheetRow)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PrepareForDataFromExternalWorkbook(Infragistics.Documents.Excel.Serialization.WorkbookReferenceBase)" />*/
	_prepareForDataFromExternalWorkbook: function (workbookReference) {
		this.___currentExternalWorkbookReference = workbookReference;
		this.___currentExternalWorksheetReference = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PrepareForDataFromExternalWorkbook(Infragistics.Documents.Excel.Serialization.WorkbookReferenceBase)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PrepareForDataFromExternalWorksheetIndex(System.Int32)" />*/
	_prepareForDataFromExternalWorksheetIndex: function (index) {
		if (this.___currentExternalWorkbookReference != null) {
			this.___currentExternalWorksheetReference = this.___currentExternalWorkbookReference.getWorksheetReference1(index);
		} else {
			this.___currentExternalWorksheetReference = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PrepareForDataFromExternalWorksheetIndex(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::SetGroupShapeChildBoundsInEmus(Infragistics.Documents.Excel.WorksheetShapeGroup, System.Windows.Rect)" />*/
	_setGroupShapeChildBoundsInEmus: function (group, childBounds) {
		this.___childBoundsInEmusByGroupShape.item(group, childBounds);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::SetGroupShapeChildBoundsInEmus(Infragistics.Documents.Excel.WorksheetShapeGroup, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::UpdateWorksheetReferenceInCurrentWorkbook(Infragistics.Documents.Excel.Worksheet)" />*/
	_updateWorksheetReferenceInCurrentWorkbook: function (worksheet) {
		var en = this._workbookReferences().getEnumerator();
		while (en.moveNext()) {
			var workbookRef = en.current();
			var currentWorkbookRef = $.ig.util.cast($.ig.CurrentWorkbookReference.prototype.$type, workbookRef);
			if (currentWorkbookRef == null) {
				continue;
			}
			currentWorkbookRef.updateWorksheetReference(worksheet);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::UpdateWorksheetReferenceInCurrentWorkbook(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::VerifyFormatsLoaded()" />*/
	_verifyFormatsLoaded: function () {
		var $self = this;
		if (this.___isVerifyingFormatsLoaded) {
			return null;
		}
		this.___isVerifyingFormatsLoaded = true;
		if (this.___deferredFONTRecords != null) {
			for (var i = 0; i < this.___deferredFONTRecords.count(); i++) {
				$.ig.FONTRecord.prototype.loadHelper(this, this.___deferredFONTRecords.__inner[i]);
			}
			this.___deferredFONTRecords = null;
		}
		if (this.___deferredXFRecords != null) {
			for (var i1 = 0; i1 < this.___deferredXFRecords.count(); i1++) {
				$.ig.XFRecord.prototype.loadHelper(this, this.___deferredXFRecords.__inner[i1]);
			}
			this.___deferredXFRecords = null;
		}
		if (this.___deferredXFEXTRecords != null) {
			for (var i2 = 0; i2 < this.___deferredXFEXTRecords.count(); i2++) {
				$.ig.XFEXTRecord.prototype.loadHelper(this, this.___deferredXFEXTRecords.__inner[i2]);
			}
			this.___deferredXFEXTRecords = null;
		}
		if (this.___deferredDXFRecords != null) {
			for (var i3 = 0; i3 < this.___deferredDXFRecords.count(); i3++) {
				$.ig.DXFRecord.prototype.loadHelper(this, this.___deferredDXFRecords.__inner[i3]);
			}
			this.___deferredDXFRecords = null;
		}
		if (this.___deferredSTYLERecords != null) {
			for (var i4 = 0; i4 < this.___deferredSTYLERecords.count(); i4++) {
				$.ig.STYLERecord.prototype.loadHelper(this, this.___deferredSTYLERecords.__inner[i4]);
			}
			this.___deferredSTYLERecords = null;
		}
		if (this.___deferredSTYLEEXTRecords != null) {
			for (var i5 = 0; i5 < this.___deferredSTYLEEXTRecords.count(); i5++) {
				$.ig.STYLEEXTRecord.prototype.loadHelper(this, this.___deferredSTYLEEXTRecords.__inner[i5]);
			}
			this.___deferredSTYLEEXTRecords = null;
		}
		return $.ig.WorkItemExtensions.prototype.then($.ig.WorkItemExtensions.prototype.then2($.ig.Async.prototype.$if($.ig.util.nullableNotEquals(this.___deferredSstRecordPosition, null), function () {
			return $.ig.WorkItemExtensions.prototype.then$12($.ig.Nullable$1.prototype.$type.specialize($.ig.Number.prototype.$type), $self._loadRecordDataAt($self.___deferredSstRecordPosition.value()), function () { return $self.___deferredSstRecordPosition = $.ig.util.toNullable($.ig.Number.prototype.$type, null); }, 0);
		}, null), function () {
			return $.ig.Async.prototype.$if($.ig.util.nullableNotEquals($self.___deferredExtSstRecordPosition, null), function () {
				return $.ig.WorkItemExtensions.prototype.then$12($.ig.Nullable$1.prototype.$type.specialize($.ig.Number.prototype.$type), $self._loadRecordDataAt($self.___deferredExtSstRecordPosition.value()), function () { return $self.___deferredExtSstRecordPosition = $.ig.util.toNullable($.ig.Number.prototype.$type, null); }, 0);
			}, null);
		}, 0), function () {
			$self.___isVerifyingFormatsLoaded = false;
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::VerifyFormatsLoaded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetShapeIdsAndRadioButtons(Infragistics.Documents.Excel.WorksheetShapeCollection, System.Collections.Generic.Dictionary, System.Collections.Generic.List)" />*/
	_getShapeIdsAndRadioButtons: function (shapes, shapeByObjIds, radioButtons) {
		var en = shapes.getEnumerator();
		while (en.moveNext()) {
			var shape = en.current();
			var group = $.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, shape);
			if (group != null) {
				this._getShapeIdsAndRadioButtons(group.shapes(), shapeByObjIds, radioButtons);
			}
			if (shape._obj() == null || shape._obj().cmo() == null) {
				continue;
			}
			shapeByObjIds.item(shape._obj().cmo().id(), shape);
			if (shape._obj().radioButton() != null) {
				radioButtons.add(shape._obj().radioButton());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetShapeIdsAndRadioButtons(Infragistics.Documents.Excel.WorksheetShapeCollection, System.Collections.Generic.Dictionary, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadAllRecords()" />*/
	_loadAllRecords: function () {
		var $self = this;
		var maxPosition = this._workbookStream().length() - 2;
		while (this._workbookStream().position() <= maxPosition) {
			var currentRecordStart = this._workbookStream().position();
			var stream = null;
			try {
				stream = new $.ig.Biff8RecordStream(1, this);
				if (this._currentRecordStream()._recordType() == $.ig.BIFF8RecordType.prototype.$default) {
					return null;
				}
				if (this.___xfRecordsStart < 0) {
					if (this._currentRecordStream()._recordType() == $.ig.BIFF8RecordType.prototype.xF) {
						this.___xfRecordsStart = currentRecordStart;
					}
				} else if (this._xfRecordData() == null) {
					if (this._currentRecordStream()._recordType() != $.ig.BIFF8RecordType.prototype.xF) {
						this.___commonData.cacheXFRecordData(this.___xfRecordsStart);
					}
				}
				var remainingWork = this._loadCurrentRecord();
				if (remainingWork == null) {
					continue;
				}
				var temp = stream;
				stream = null;
				return $.ig.WorkItemExtensions.prototype.then2($.ig.WorkItemExtensions.prototype.then1(remainingWork, function (t) {
					if (temp != null) {
						temp.dispose();
					}
					t.rethrowIfExceptional();
				}, 0), function () { return $self._loadAllRecords(); }, 0);
			}
			finally {
				if (stream != null) {
					stream.dispose();
				}
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadAllRecords()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadBIFF8File(Infragistics.Documents.Excel.Workbook, System.IO.Stream, System.String, Infragistics.Documents.Excel.WorkbookLoadOptions)" />*/
	_loadBIFF8File: function (workbook, stream, parameterName, loadOptions) {
		for (var i = workbook.styles().count() - 1; i >= 0; i--) {
			if (workbook.styles()._item(i)._isAutomatic() == false) {
				workbook.styles().removeAt(i);
			}
		}
		return $.ig.Async.prototype.using$1($.ig.StructuredStorageManager.prototype.$type, new $.ig.StructuredStorageManager(stream, true), function (structuredStorageManager) {
			var documentSummaryInformation = new $.ig.DocumentSummaryInformation();
			var summaryInformation = new $.ig.SummaryInformation();
			{
				var summaryInfoStream = structuredStorageManager._getFileStream($.ig.excel.Workbook.prototype._excel2003StructuredStorageSummaryInformationFileName);
				try {
					if (summaryInfoStream != null && summaryInfoStream.length() != 0) {
						summaryInformation.load(summaryInfoStream);
					}
				}
				finally {
					if (summaryInfoStream != null) {
						summaryInfoStream.dispose();
					}
				}
			}
			{
				var documentSummaryInfoStream = structuredStorageManager._getFileStream($.ig.excel.Workbook.prototype._excel2003StructuredStorageDocumentSummaryInformationFileName);
				try {
					if (documentSummaryInfoStream != null && documentSummaryInfoStream.length() != 0) {
						documentSummaryInformation.load(documentSummaryInfoStream);
					}
				}
				finally {
					if (documentSummaryInfoStream != null) {
						documentSummaryInfoStream.dispose();
					}
				}
			}
			var workbookStream = structuredStorageManager._getFileStream($.ig.excel.Workbook.prototype._excel2003StructuredStorageWorkbookFileName);
			if (workbookStream == null) {
				workbookStream = structuredStorageManager._getFileStream($.ig.excel.Workbook.prototype._excel2003StructuredStorageAlternateWorkbookFileName);
				if (workbookStream == null) {
					throw new $.ig.ArgumentException(2, $.ig.excel.locale.getString("LE_ArgumentException_FileDoesntContainsWorkbookStream"), parameterName);
				}
			}
			var encryptionStream = structuredStorageManager._getFileStream($.ig.excel.Workbook.prototype._excel2003StructuredStorageEncryptionFileName);
			return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.$try(function () {
				var fileName = $.ig.ExcelUtils.prototype.getFileName(stream);
				return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.using$1($.ig.WorkbookLoadManagerExcel2003.prototype.$type, new $.ig.WorkbookLoadManagerExcel2003(workbook, workbookStream, fileName, loadOptions), function (loadManager) {
					return $.ig.WorkItemExtensions.prototype.then(loadManager._load(), function () {
						loadManager._loadRC4CryptoAPIEncryptionStream(encryptionStream, documentSummaryInformation, summaryInformation);
					}, 0);
				}), function () {
					workbook._cacheAdditionalStructuredStorageFiles(structuredStorageManager, structuredStorageManager._rootDirectory(), String.empty());
				}, 0);
			}, function () {
				workbookStream.close();
				if (encryptionStream != null) {
					encryptionStream.close();
				}
			}), function () {
				workbook.documentProperties()._load(summaryInformation, documentSummaryInformation);
			}, 0);
		});
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadBIFF8File(Infragistics.Documents.Excel.Workbook, System.IO.Stream, System.String, Infragistics.Documents.Excel.WorkbookLoadOptions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadFormulaData(Infragistics.Documents.Excel.Formula, System.UInt16, , System.Int32)" />*/
	_loadFormulaData: function (formula, rpnTokenArraySize, data, dataIndex) {
		if (rpnTokenArraySize == 0) {
			return {
				p2: data,
				p3: dataIndex
			};
		}
		var additionalDataStart = dataIndex + rpnTokenArraySize;
		var shouldResolveAddInFunctions = false;
		var context = new $.ig.FormulaContext(1, this._workbook(), formula);
		var loadTokenVisitor = $.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.initialize(context, this, formula._type() == $.ig.FormulaType.prototype.externalNamedReferenceFormula, data, dataIndex);
		var loadedPostfixTokenList = new $.ig.List$1($.ig.FormulaToken.prototype.$type, 0);
		var stream = this._currentRecordStream();
		while (loadTokenVisitor._dataIndex < additionalDataStart) {
			var startPosition = loadTokenVisitor._dataIndex;
			var tokenCode = (function () { var $ret = stream.readByteFromBuffer(loadTokenVisitor._data, loadTokenVisitor._dataIndex); loadTokenVisitor._data = $ret.p0; loadTokenVisitor._dataIndex = $ret.p1; return $ret.ret; }());
			var currentToken = (function () { var $ret = $.ig.FormulaToken.prototype.createToken(stream, tokenCode, loadTokenVisitor._data, loadTokenVisitor._dataIndex); loadTokenVisitor._data = $ret.p2; loadTokenVisitor._dataIndex = $ret.p3; return $ret.ret; }());
			if (currentToken == null) {
				$.ig.ExcelUtils.prototype.debugFail("Couldn't read the current token.");
				break;
			}
			$.ig.ExcelUtils.prototype.debugAssert(currentToken.token() == tokenCode, "The type of the token doesn't match the token code");
			currentToken.accept(loadTokenVisitor);
			var attrToken = $.ig.util.cast($.ig.AttrTokenBase.prototype.$type, currentToken);
			if (attrToken != null && attrToken.$volatile()) {
				formula._recalculateAlways(true);
			}
			var funcVToken = $.ig.util.cast($.ig.FunctionVOperator.prototype.$type, currentToken);
			if (funcVToken != null) {
				if (funcVToken.$function()._iD() == $.ig.Function.prototype._addInFunctionID) {
					shouldResolveAddInFunctions = true;
				} else if (funcVToken.$function()._iD() == $.ig.Function.prototype._hYPERLINKFunctionID) {
					formula._hasHyperlink(true);
				}
			}
			loadedPostfixTokenList.add(currentToken);
		}
		formula._postfixTokenList(loadedPostfixTokenList.toArray());
		data = loadTokenVisitor._data;
		dataIndex = loadTokenVisitor._dataIndex;
		loadTokenVisitor.reset();
		if (dataIndex != additionalDataStart) {
			$.ig.ExcelUtils.prototype.debugFail("We did not read the entire rpn token array.");
			dataIndex = additionalDataStart;
		}
		var loadAdditionalDataTokenVisitor = $.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.initialize(context, this, data, dataIndex);
		loadAdditionalDataTokenVisitor.visitAll();
		if (formula._isReferenceFormula() == false && shouldResolveAddInFunctions) {
			var resolver = $.ig.AddInFunctionResolver.prototype.initialize(context);
			var result = resolver.evaluate();
			$.ig.ExcelUtils.prototype.debugAssert(result.completed(), "The AddInFunctionResolver did not complete on the loaded formula.");
		}
		return {
			p2: data,
			p3: dataIndex
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadFormulaData(Infragistics.Documents.Excel.Formula, System.UInt16, , System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadRecordDataAt(System.Int64)" />*/
	_loadRecordDataAt: function (recordPosition) {
		var $self = this;
		var originalPosition = this._workbookStream().position();
		this._workbookStream().position(recordPosition);
		return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.using$1($.ig.Biff8RecordStream.prototype.$type, new $.ig.Biff8RecordStream(1, this), function (stream) {
			return $self._loadRecordHelper($self.___commonData.getBiffRecord(stream._recordType()));
		}), function () {
			$self._workbookStream().position(originalPosition);
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadRecordDataAt(System.Int64)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadRecordHelper(Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase)" />*/
	_loadRecordHelper: function (record) {
		var $self = this;
		if (record.canBeEncrypted() == false) {
			this._currentRecordStream()._transform().suspendTransformations();
		}
		return $.ig.WorkItemExtensions.prototype.then($.ig.Async.prototype.$if(record.isAsyncLoadingSupported(), function () {
			return record.loadAsync($self);
		}, function () {
			record.load($self);
			return null;
		}), function () {
			if (record.canBeEncrypted() == false) {
				$self._currentRecordStream()._transform().resumeTransformations();
			}
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadRecordHelper(Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ProcessLoadedShapeIds()" />*/
	_processLoadedShapeIds: function () {
		var shapeByObjIds = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.excel.WorksheetShape.prototype.$type, 0);
		var radioButtons = new $.ig.List$1($.ig.FtRboData.prototype.$type, 0);
		var en = this._workbook().worksheets().getEnumerator();
		while (en.moveNext()) {
			var worksheet = en.current();
			this._getShapeIdsAndRadioButtons(worksheet.shapes(), shapeByObjIds, radioButtons);
		}
		var en1 = shapeByObjIds.getEnumerator();
		while (en1.moveNext()) {
			var pair = en1.current();
			var unknownShape = $.ig.util.cast($.ig.excel.UnknownShape.prototype.$type, pair.value());
			if (unknownShape != null && unknownShape._isOleShape()) {
				this._workbook()._reservedObjIds().add(pair.key());
			}
		}
		for (var i = 0; i < radioButtons.count(); i++) {
			var radioButton = radioButtons.__inner[i];
			var shape;
			if ((function () { var $ret = shapeByObjIds.tryGetValue(radioButton.idRadNext(), shape); shape = $ret.p1; return $ret.ret; }())) {
				radioButton.idRadNextShape(shape);
			} else {
				$.ig.ExcelUtils.prototype.debugFail("Cannot find the shape with the id: " + radioButton.idRadNext());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ProcessLoadedShapeIds()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ResolveCachedNamedRecordIndexes(Infragistics.Documents.Excel.Formula)" />*/
	_resolveCachedNamedRecordIndexes: function (formula) {
		var $self = this;
		var $t = formula._postfixTokenList();
		for (var i = 0; i < $t.length; i++) {
			var token = $t[i];
			var nameToken = $.ig.util.cast($.ig.NameToken.prototype.$type, token);
			var cachedIndexToNamedReference;
			if (nameToken == null || (function () { var $ret = $self.___indexToNameRecordByNameToken.tryGetValue(nameToken, cachedIndexToNamedReference); cachedIndexToNamedReference = $ret.p1; return $ret.ret; }()) == false) {
				continue;
			}
			nameToken.accept$2($.ig.Number.prototype.$type, $.ig.Boolean.prototype.$type, this.___nameReferenceResolver, cachedIndexToNamedReference);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ResolveCachedNamedRecordIndexes(Infragistics.Documents.Excel.Formula)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::AreRecordsWaitingForAssociatedExtRecords()" />*/
	_areRecordsWaitingForAssociatedExtRecords: function () {
		if (this.___deferredXFRecords != null && this.___deferredXFRecords.count() != 0 && (this.___deferredXFEXTRecords == null || this.___deferredXFEXTRecords.count() == 0)) {
			return true;
		}
		if (this.___deferredSTYLERecords != null && this.___deferredSTYLERecords.count() != 0 && (this.___deferredSTYLEEXTRecords == null || this.___deferredSTYLEEXTRecords.count() == 0)) {
			return true;
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::AreRecordsWaitingForAssociatedExtRecords()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ChildrenXfsByStyleId()" />*/
	_childrenXfsByStyleId: function () {
		return this.___childrenXfsByStyleId;
	}
	/*<EndProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ChildrenXfsByStyleId()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Core.ContextStack Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ContextStack()" />*/
	_contextStack: function () {
		return this.___commonData._contextStack;
	}
	/*<EndProperty Name="Infragistics.Documents.Core.ContextStack Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ContextStack()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookReferenceBase Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentExternalWorkbookReference()" />*/
	_currentExternalWorkbookReference: function () {
		return this.___currentExternalWorkbookReference;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookReferenceBase Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentExternalWorkbookReference()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.WorksheetReference Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentExternalWorksheetReference()" />*/
	_currentExternalWorksheetReference: function () {
		return this.___currentExternalWorksheetReference;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.WorksheetReference Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentExternalWorksheetReference()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentRecordStream()" />*/
	_currentRecordStream: function (value) {
		if (arguments.length === 1) {
			this.___commonData._currentRecordStream = value;
			return value;
		} else {
			return this.___commonData._currentRecordStream;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentRecordStream()" />*/
	,
	__currentTableStyle: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetTableStyle Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentTableStyle()" />*/
	_currentTableStyle: function (value) {
		if (arguments.length === 1) {
			this.__currentTableStyle = value;
			return value;
		} else {
			return this.__currentTableStyle;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetTableStyle Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::CurrentTableStyle()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredDXFRecords()" />*/
	_deferredDXFRecords: function () {
		if (this.___deferredDXFRecords == null) {
			this.___deferredDXFRecords = new $.ig.List$1($.ig.DXFRecordInfo.prototype.$type, 0);
		}
		return this.___deferredDXFRecords;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredDXFRecords()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredExtSstRecordPosition()" />*/
	_deferredExtSstRecordPosition: function (value) {
		if (arguments.length === 1) {
			this.___deferredExtSstRecordPosition = value;
			return value;
		} else {
			return this.___deferredExtSstRecordPosition;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredExtSstRecordPosition()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredFONTRecords()" />*/
	_deferredFONTRecords: function () {
		if (this.___deferredFONTRecords == null) {
			this.___deferredFONTRecords = new $.ig.List$1($.ig.FONTRecordInfo.prototype.$type, 0);
		}
		return this.___deferredFONTRecords;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredFONTRecords()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredSstRecordPosition()" />*/
	_deferredSstRecordPosition: function (value) {
		if (arguments.length === 1) {
			this.___deferredSstRecordPosition = value;
			return value;
		} else {
			return this.___deferredSstRecordPosition;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredSstRecordPosition()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredSTYLEEXTRecords()" />*/
	_deferredSTYLEEXTRecords: function () {
		if (this.___deferredSTYLEEXTRecords == null) {
			this.___deferredSTYLEEXTRecords = new $.ig.List$1($.ig.STYLEEXTRecordInfo.prototype.$type, 0);
		}
		return this.___deferredSTYLEEXTRecords;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredSTYLEEXTRecords()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredSTYLERecords()" />*/
	_deferredSTYLERecords: function () {
		if (this.___deferredSTYLERecords == null) {
			this.___deferredSTYLERecords = new $.ig.List$1($.ig.STYLERecordInfo.prototype.$type, 0);
		}
		return this.___deferredSTYLERecords;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredSTYLERecords()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredXFEXTRecords()" />*/
	_deferredXFEXTRecords: function () {
		if (this.___deferredXFEXTRecords == null) {
			this.___deferredXFEXTRecords = new $.ig.List$1($.ig.XFEXTRecordInfo.prototype.$type, 0);
		}
		return this.___deferredXFEXTRecords;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredXFEXTRecords()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredXFRecords()" />*/
	_deferredXFRecords: function () {
		if (this.___deferredXFRecords == null) {
			this.___deferredXFRecords = new $.ig.List$1($.ig.XFRecordInfo.prototype.$type, 0);
		}
		return this.___deferredXFRecords;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::DeferredXFRecords()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::Formats()" />*/
	_formats: function () {
		return this.___commonData._formats;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::Formats()" />*/
	,
	__ignoreXfExtData: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::IgnoreXfExtData()" />*/
	_ignoreXfExtData: function (value) {
		if (arguments.length === 1) {
			this.__ignoreXfExtData = value;
			return value;
		} else {
			return this.__ignoreXfExtData;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::IgnoreXfExtData()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::Images()" />*/
	_images: function () {
		return this.___commonData._images;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::Images()" />*/
	,
	__isWriteProtected: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::IsWriteProtected()" />*/
	_isWriteProtected: function (value) {
		if (arguments.length === 1) {
			this.__isWriteProtected = value;
			return value;
		} else {
			return this.__isWriteProtected;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::IsWriteProtected()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadedComments()" />*/
	_loadedComments: function () {
		if (this.___loadedComments == null) {
			this.___loadedComments = new $.ig.List$1($.ig.excel.WorksheetCellComment.prototype.$type, 0);
		}
		return this.___loadedComments;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadedComments()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadedStyles()" />*/
	_loadedStyles: function () {
		if (this.___loadedStyles == null) {
			this.___loadedStyles = new $.ig.List$1($.ig.excel.WorkbookStyle.prototype.$type, 0);
		}
		return this.___loadedStyles;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::LoadedStyles()" />*/
	,
	__nextWorksheetIndex: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::NextWorksheetIndex()" />*/
	_nextWorksheetIndex: function (value) {
		if (arguments.length === 1) {
			this.__nextWorksheetIndex = value;
			return value;
		} else {
			return this.__nextWorksheetIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::NextWorksheetIndex()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Core.Packaging.IPackageFactory Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PackageFactory()" />*/
	_packageFactory: function () {
		return this.___packageFactory;
	}
	/*<EndProperty Name="Infragistics.Documents.Core.Packaging.IPackageFactory Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PackageFactory()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PendingSharedFormulaRoots()" />*/
	_pendingSharedFormulaRoots: function () {
		return this.___pendingSharedFormulaRoots;
	}
	/*<EndProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::PendingSharedFormulaRoots()" />*/
	,
	__readRecordTransform: null,
	/*<BeginProperty Name="Infragistics.Documents.Core.MsoCrypto.InPlaceTransform Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ReadRecordTransform()" />*/
	_readRecordTransform: function (value) {
		if (arguments.length === 1) {
			this.__readRecordTransform = value;
			return value;
		} else {
			return this.__readRecordTransform;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Core.MsoCrypto.InPlaceTransform Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::ReadRecordTransform()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::SharedFormulasInCurrentWorksheet()" />*/
	_sharedFormulasInCurrentWorksheet: function () {
		return this.___sharedFormulasInCurrentWorksheet;
	}
	/*<EndProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::SharedFormulasInCurrentWorksheet()" />*/
	,
	/*<BeginProperty Name="System.IO.Stream Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::WorkbookStream()" />*/
	_workbookStream: function () {
		return this.___commonData._workbookStream;
	}
	/*<EndProperty Name="System.IO.Stream Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::WorkbookStream()" />*/
	,
	/*<BeginProperty Name="System.IO.BinaryReader Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::WorkbookStreamReader()" />*/
	_workbookStreamReader: function () {
		return this.___workbookStreamReader;
	}
	/*<EndProperty Name="System.IO.BinaryReader Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::WorkbookStreamReader()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::WorksheetIdsByIndex()" />*/
	_worksheetIdsByIndex: function () {
		return this.___worksheetIdsByIndex;
	}
	/*<EndProperty Name="System.Collections.Generic.Dictionary Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::WorksheetIdsByIndex()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::XfRecordData()" />*/
	_xfRecordData: function () {
		return this.___commonData._xfRecordData;
	}
	/*<EndProperty Name=" Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::XfRecordData()" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetOpenPasswordUnicode()" />*/
	_getOpenPasswordUnicode: function () {
		return $.ig.Encoding.prototype.unicode().getBytes1($.ig.excel.Workbook.prototype._defaultOpenPassword);
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003::GetOpenPasswordUnicode()" />*/
	,
	$type: new $.ig.Type('WorkbookLoadManagerExcel2003', $.ig.WorkbookLoadManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor" />*/

$.ig.util.defType('WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor', 'FormulaTokenVisitor', {
	_data: null,
	_dataIndex: 0,
	__loadManager: null,
	init: function () {
		$.ig.FormulaTokenVisitor.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::Reset()" />*/
	reset: function () {
		this._data = null;
		this._dataIndex = 0;
		this.__loadManager = null;
		$.ig.FormulaTokenVisitor.prototype.reset.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	visitArrayToken: function (token) {
		var $self = this;
		var stream = this.__loadManager._currentRecordStream();
		var numberOfColumns = (function () { var $ret = stream.readByteFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()) + 1;
		var numberOfRows = (function () { var $ret = stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()) + 1;
		token.values(new Array(numberOfColumns));
		for (var col = 0; col < numberOfColumns; col++) {
			token.values()[col] = new Array(numberOfRows);
		}
		for (var row = 0; row < numberOfRows; row++) {
			for (var col1 = 0; col1 < numberOfColumns; col1++) {
				var constant = (function () { var $ret = $.ig.Constant.prototype.getNextConstant(stream, $self._data, $self._dataIndex); $self._data = $ret.p1; $self._dataIndex = $ret.p2; return $ret.ret; }());
				var $ret = constant.load(stream, this._data, this._dataIndex);
				this._data = $ret.p1;
				this._dataIndex = $ret.p2;
				token.values()[col1][row] = constant;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	visitMemAreaOperator: function (token) {
		var $self = this;
		var stream = this.__loadManager._currentRecordStream();
		var numberOfRanges = (function () { var $ret = stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		token.ranges(new Array(numberOfRanges));
		for (var i = 0; i < numberOfRanges; i++) {
			token.ranges()[i] = (function () { var $ret = stream._readFormulaCellAddressRangeFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32)" />*/
	initialize: function (context, loadManager, data, dataIndex) {
		if ($.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance == null) {
			$.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance = new $.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor();
		}
		$.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance.context(context);
		$.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance._data = data;
		$.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance._dataIndex = dataIndex;
		$.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance.__loadManager = loadManager;
		return $.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32)" />*/
	,
	$type: new $.ig.Type('WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor', $.ig.FormulaTokenVisitor.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor" />*/

$.ig.util.defType('WorkbookLoadManagerExcel2003_LoadTokenVisitor', 'FormulaTokenVisitor', {
	_data: null,
	_dataIndex: 0,
	__isForExternalNamedReference: false,
	__loadManager: null,
	__stream: null,
	init: function () {
		$.ig.FormulaTokenVisitor.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken)" />*/
	defaultVisit: function (token) {
		$.ig.ExcelUtils.prototype.debugFail("We should never call the DefaultVisit method in the LoadTokenVisitor.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::Reset()" />*/
	reset: function () {
		this._data = null;
		this._dataIndex = 0;
		this.__isForExternalNamedReference = false;
		this.__loadManager = null;
		this.__stream = null;
		$.ig.FormulaTokenVisitor.prototype.reset.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitArea3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Area3DToken)" />*/
	visitArea3DToken: function (token) {
		token.worksheetReference(this.load3DData());
		this.visitAreaToken(token);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitArea3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Area3DToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAreaErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaErrToken)" />*/
	visitAreaErrToken: function (token) {
		var $ret = this.__stream.readBytesFromBuffer(8, this._data, this._dataIndex);
		this._data = $ret.p1;
		this._dataIndex = $ret.p2;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAreaErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaErrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAreaToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaToken)" />*/
	visitAreaToken: function (token) {
		var $self = this;
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.Area3DNToken.prototype.$type, token) !== null) == false, "The Area3DNToken should not be saved.");
		token.cellAddressRange((function () { var $ret = $self.__stream._readFormulaCellAddressRangeFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAreaToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AreaToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	visitArrayToken: function (token) {
		var $ret = this.__stream.readBytesFromBuffer(7, this._data, this._dataIndex);
		this._data = $ret.p1;
		this._dataIndex = $ret.p2;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitArrayToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ArrayToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrChooseToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	visitAttrChooseToken: function (token) {
		var $self = this;
		var numberOfChooseOptions = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		for (var i = 0; i < numberOfChooseOptions; i++) {
			var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
			this._data = $ret.p0;
			this._dataIndex = $ret.p1;
		}
		var $ret1 = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret1.p0;
		this._dataIndex = $ret1.p1;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrChooseToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrChooseToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrIfToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrIfToken)" />*/
	visitAttrIfToken: function (token) {
		var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrIfToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrIfToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrSkipToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSkipToken)" />*/
	visitAttrSkipToken: function (token) {
		var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrSkipToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSkipToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrSpaceToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSpaceToken)" />*/
	visitAttrSpaceToken: function (token) {
		var $self = this;
		token.whitespaceType((function () { var $ret = $self.__stream.readByteFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
		token.numberOfWhitespaceChars((function () { var $ret = $self.__stream.readByteFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrSpaceToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSpaceToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrSumToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSumToken)" />*/
	visitAttrSumToken: function (token) {
		var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrSumToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrSumToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrVolatileToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrVolatileToken)" />*/
	visitAttrVolatileToken: function (token) {
		var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitAttrVolatileToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.AttrVolatileToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitBinaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BinaryOperatorToken)" />*/
	visitBinaryOperatorToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitBinaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BinaryOperatorToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitBoolToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BoolToken)" />*/
	visitBoolToken: function (token) {
		var $self = this;
		var boolValue = (function () { var $ret = $self.__stream.readByteFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		$.ig.ExcelUtils.prototype.debugAssert(boolValue == 0 || boolValue == 1, null);
		token.value(boolValue != 0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitBoolToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.BoolToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ErrToken)" />*/
	visitErrToken: function (token) {
		var $self = this;
		token.value($.ig.excel.ErrorValue.prototype._fromValue((function () { var $ret = $self.__stream.readByteFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }())));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ErrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitExpToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ExpToken)" />*/
	visitExpToken: function (token) {
		var $self = this;
		var firstRow = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		var firstColumn = (function () { var $ret = $self.__stream._readInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		token.cellAddress(new $.ig.CellAddress(1, firstRow, false, firstColumn, false));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitExpToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ExpToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitFunctionOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionOperator)" />*/
	visitFunctionOperator: function (token) {
		var $self = this;
		token.$function($.ig.Function.prototype._getFunction((function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }())));
		token.argumentCount(token.$function()._minParams());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitFunctionOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitFunctionVOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionVOperator)" />*/
	visitFunctionVOperator: function (token) {
		var $self = this;
		var argumentCount = (function () { var $ret = $self.__stream.readByteFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		argumentCount &= 127;
		var sheetFunctionIndex = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		sheetFunctionIndex &= 32767;
		token.argumentCount(argumentCount);
		token.$function($.ig.Function.prototype._getFunction(sheetFunctionIndex));
		if (token.$function()._isAddIn()) {
			(function ($obj) { var $value = $obj.argumentCount(); $obj.argumentCount($value - 1); return $value; }(token));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitFunctionVOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FunctionVOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitIntToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.IntToken)" />*/
	visitIntToken: function (token) {
		var $self = this;
		token.value((function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitIntToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.IntToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	visitMemAreaOperator: function (token) {
		var $self = this;
		var $ret = this.__stream._readUInt32FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
		token.sizeOfRefSubExpression((function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemAreaOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemAreaOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemErrOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemErrOperator)" />*/
	visitMemErrOperator: function (token) {
		var $self = this;
		var $ret = this.__stream._readUInt32FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
		token.sizeOfRefSubExpression((function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemErrOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemErrOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemFuncOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemFuncOperator)" />*/
	visitMemFuncOperator: function (token) {
		var $self = this;
		token.sizeOfRefSubExpression((function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemFuncOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemFuncOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemNoMemOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemNoMemOperator)" />*/
	visitMemNoMemOperator: function (token) {
		var $self = this;
		var $ret = this.__stream._readUInt32FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
		token.sizeOfRefSubExpression((function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMemNoMemOperator(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MemNoMemOperator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMissArgToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MissArgToken)" />*/
	visitMissArgToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitMissArgToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.MissArgToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken)" />*/
	visitNameToken: function (token) {
		var $self = this;
		var indexToNameRecord = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
		this.resolveNamedReference(token, indexToNameRecord - 1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken)" />*/
	visitNameXToken: function (token) {
		var $self = this;
		token.worksheetReference(this.load3DData());
		$.ig.ExcelUtils.prototype.debugAssert(token.worksheetReference().isMultiSheet() == false, "The named reference should not belong to multiple sheets.");
		var indexToNameRecord = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		var $ret = this.__stream._readUInt16FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
		this.resolveNamedReference(token, indexToNameRecord - 1);
		if (this.__isForExternalNamedReference == false && token.worksheetReference().firstWorksheetIndex() == $.ig.ExcelUtils.prototype.eXTERNSHEETRecord_WorkbookLevelReferenceIndex && $.ig.util.cast($.ig.excel.Worksheet.prototype.$type, token.namedReference()._scopeInternal()) !== null) {
			var references = this.__loadManager._worksheetReferences();
			for (var i = 0, count = references.count(); i < count; i++) {
				var reference = references.__inner[i];
				if (!reference.isExternal() && reference.firstWorksheetIndex() >= 0 && reference.namedReferenceScope() == token.namedReference()._scopeInternal()) {
					token.worksheetReference(reference);
					break;
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitNumberToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NumberToken)" />*/
	visitNumberToken: function (token) {
		var $self = this;
		token.value((function () { var $ret = $self.__stream.readDoubleFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitNumberToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NumberToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitParenToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ParenToken)" />*/
	visitParenToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitParenToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.ParenToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitRef3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Ref3DToken)" />*/
	visitRef3DToken: function (token) {
		token.worksheetReference(this.load3DData());
		this.visitRefToken(token);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitRef3DToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.Ref3DToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitRefErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefErrToken)" />*/
	visitRefErrToken: function (token) {
		var $ret = this.__stream._readUInt32FromBuffer(this._data, this._dataIndex);
		this._data = $ret.p0;
		this._dataIndex = $ret.p1;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitRefErrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefErrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitRefToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefToken)" />*/
	visitRefToken: function (token) {
		var $self = this;
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.Ref3DNToken.prototype.$type, token) !== null) == false, "The Ref3DNToken should not be saved.");
		token.cellAddress((function () { var $ret = $self.__stream._readFormulaCellAddressFromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitRefToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.RefToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitStrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StrToken)" />*/
	visitStrToken: function (token) {
		var $self = this;
		token.value((function () { var $ret = $self.__stream.readFormattedStringFromBuffer($.ig.LengthType.prototype.eightBit, $self._data, $self._dataIndex); $self._data = $ret.p1; $self._dataIndex = $ret.p2; return $ret.ret; }())._unformattedString());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitStrToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StrToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitStructuredTableReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StructuredTableReference)" />*/
	visitStructuredTableReference: function (token) {
		$.ig.ExcelUtils.prototype.debugFail("This token should not be written out to BIFF streams. It only applies to 2007 formats and later.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitStructuredTableReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.StructuredTableReference)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitTblToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.TblToken)" />*/
	visitTblToken: function (token) {
		var $self = this;
		var firstRow = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		var firstColumn = (function () { var $ret = $self.__stream._readInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
		token.cellAddress(new $.ig.CellAddress(1, firstRow, false, firstColumn, false));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitTblToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.TblToken)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitUnaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.UnaryOperatorToken)" />*/
	visitUnaryOperatorToken: function (token) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::VisitUnaryOperatorToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.UnaryOperatorToken)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Boolean, , System.Int32)" />*/
	initialize: function (context, loadManager, isForExternalNamedReference, data, dataIndex) {
		if ($.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance == null) {
			$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance = new $.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor();
		}
		$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance.context(context);
		$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance._data = data;
		$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance._dataIndex = dataIndex;
		$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance.__loadManager = loadManager;
		$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance.__stream = loadManager._currentRecordStream();
		$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance.__isForExternalNamedReference = isForExternalNamedReference;
		return $.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::Initialize(Infragistics.Documents.Excel.FormulaUtilities.FormulaContext, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Boolean, , System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.WorksheetReference Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::Load3DData()" />*/
	load3DData: function () {
		var $self = this;
		if (this.__isForExternalNamedReference) {
			var firstSheetIndex = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
			var lastSheetIndex = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
			var workbookReferences = this.__loadManager._workbookReferences();
			var workbook = workbookReferences.__inner[workbookReferences.count() - 1];
			var firstWorksheetName = workbook.getWorksheetName(firstSheetIndex);
			var lastWorksheetName = null;
			if (firstSheetIndex != lastSheetIndex) {
				$.ig.ExcelUtils.prototype.debugAssert(firstSheetIndex < lastSheetIndex, "This is unexpected.");
				lastWorksheetName = workbook.getWorksheetName(lastSheetIndex);
			}
			return workbook.getWorksheetReference(firstWorksheetName, lastWorksheetName);
		} else {
			var externSheetIndex = (function () { var $ret = $self.__stream._readUInt16FromBuffer($self._data, $self._dataIndex); $self._data = $ret.p0; $self._dataIndex = $ret.p1; return $ret.ret; }());
			return this.__loadManager._getWorksheetReference(externSheetIndex);
		}
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.WorksheetReference Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::Load3DData()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::ResolveNamedReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken, System.Int32)" />*/
	resolveNamedReference: function (nameToken, indexToNameRecord) {
		if (this.__loadManager.___areAllNamedReferencesLoaded) {
			nameToken.accept$2($.ig.Number.prototype.$type, $.ig.Boolean.prototype.$type, this.__loadManager.___nameReferenceResolver, indexToNameRecord);
		} else {
			this.__loadManager.___indexToNameRecordByNameToken.item(nameToken, indexToNameRecord);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor::ResolveNamedReference(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken, System.Int32)" />*/
	,
	$type: new $.ig.Type('WorkbookLoadManagerExcel2003_LoadTokenVisitor', $.ig.FormulaTokenVisitor.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor" />*/

$.ig.util.defType('WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor', 'FormulaTokenVisitor$2', {
	__loadManager: null,
	init: function (loadManager) {
		$.ig.FormulaTokenVisitor$2.prototype.init.call(this, $.ig.Number.prototype.$type, $.ig.Boolean.prototype.$type);
		this.__loadManager = loadManager;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken, System.Int32)" />*/
	defaultVisit: function (token, indexToNameRecord) {
		$.ig.ExcelUtils.prototype.debugFail("We should not have visited this token.");
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor::DefaultVisit(Infragistics.Documents.Excel.FormulaUtilities.Tokens.FormulaToken, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken, System.Int32)" />*/
	visitNameToken: function (token, indexToNameRecord) {
		token.namedReference(this.__loadManager._workbook()._currentWorkbookReference().namedReferences().item(indexToNameRecord));
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.excel.NamedReference.prototype.$type, token.namedReference()) !== null, "This is unexpected.");
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor::VisitNameToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameToken, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken, System.Int32)" />*/
	visitNameXToken: function (token, indexToNameRecord) {
		token.namedReference(token.worksheetReference().workbookReference().namedReferences().item(indexToNameRecord));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor::VisitNameXToken(Infragistics.Documents.Excel.FormulaUtilities.Tokens.NameXToken, System.Int32)" />*/
	,
	$type: new $.ig.Type('WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor', $.ig.FormulaTokenVisitor$2.prototype.$type.specialize($.ig.Number.prototype.$type, $.ig.Boolean.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003" />*/

$.ig.util.defType('WorkbookSerializationDataExcel2003', 'ValueType', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ValueType.prototype.init.call(this);
	},
	__boolerrRecord: null,
	__blankRecord: null,
	__labelsstRecord: null,
	__formulaRecord: null,
	__numberRecord: null,
	__rkRecord: null,
	__rowRecord: null,
	_contextStack: null,
	_currentRecordStream: null,
	_formats: null,
	_images: null,
	_workbookStream: null,
	_xfRecordData: null,
	init1: function (initNumber, workbookStream) {
		$.ig.ValueType.prototype.init.call(this);
		this._contextStack = new $.ig.ContextStack();
		this._currentRecordStream = null;
		this._formats = new $.ig.List$1($.ig.WorksheetCellFormatData.prototype.$type, 0);
		this._images = new $.ig.List$1($.ig.WorkbookSerializationDataExcel2003_ImageHolder.prototype.$type, 0);
		this._workbookStream = new $.ig.SeekableBufferedStream(workbookStream);
		this._xfRecordData = null;
		this.__boolerrRecord = new $.ig.BOOLERRRecord();
		this.__blankRecord = new $.ig.BLANKRecord();
		this.__labelsstRecord = new $.ig.LABELSSTRecord();
		this.__formulaRecord = new $.ig.FORMULARecord();
		this.__numberRecord = new $.ig.NUMBERRecord();
		this.__rkRecord = new $.ig.RKRecord();
		this.__rowRecord = new $.ig.ROWRecord();
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003::CacheXFRecordData(System.Int64)" />*/
	cacheXFRecordData: function (xfRecordsStart) {
		var pos = this._workbookStream.position();
		try {
			var xfRecordDataWithHeaders = new Array((this._workbookStream.position() - xfRecordsStart));
			this._workbookStream.position(xfRecordsStart);
			this._workbookStream.read(xfRecordDataWithHeaders, 0, xfRecordDataWithHeaders.length);
			var XFRecordSize = 20;
			var XFRecordSizeWithHeader = XFRecordSize + $.ig.Biff8RecordStream.prototype._headerSize;
			var itemCount = $.ig.intDivide(xfRecordDataWithHeaders.length, XFRecordSizeWithHeader);
			this._xfRecordData = new Array(itemCount * XFRecordSize);
			for (var i = 0; i < itemCount; i++) {
				var xfRecordStart = (i * XFRecordSizeWithHeader) + $.ig.Biff8RecordStream.prototype._headerSize;
				var xfRecordDataStart = (i * XFRecordSize);
				$.ig.Buffer.prototype.blockCopy(xfRecordDataWithHeaders, xfRecordStart, this._xfRecordData, xfRecordDataStart, XFRecordSize);
			}
		}
		finally {
			this._workbookStream.position(pos);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003::CacheXFRecordData(System.Int64)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003::GetBiffRecord(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	getBiffRecord: function (type) {
		switch (type) {
			case $.ig.BIFF8RecordType.prototype.bOOLERR: return this.__boolerrRecord;
			case $.ig.BIFF8RecordType.prototype.bLANK: return this.__blankRecord;
			case $.ig.BIFF8RecordType.prototype.lABELSST: return this.__labelsstRecord;
			case $.ig.BIFF8RecordType.prototype.fORMULA: return this.__formulaRecord;
			case $.ig.BIFF8RecordType.prototype.nUMBER: return this.__numberRecord;
			case $.ig.BIFF8RecordType.prototype.rK: return this.__rkRecord;
			case $.ig.BIFF8RecordType.prototype.rOW: return this.__rowRecord;
		}
		return $.ig.Biff8RecordBase.prototype.getBiffRecord($.ig.BIFF8RecordType.prototype.$type, $.ig.WorkbookLoadManagerExcel2003.prototype.$type, $.ig.WorkbookSaveManagerExcel2003.prototype.$type, type, $.ig.Biff8RecordBase.prototype.createBiffRecordCallback());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003::GetBiffRecord(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	$type: new $.ig.Type('WorkbookSerializationDataExcel2003', $.ig.ValueType.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder" />*/

$.ig.util.defType('WorkbookSerializationDataExcel2003_ImageHolder', 'Object', {
	init: function (image, referenceCount) {
		$.ig.Object.prototype.init.call(this);
		this.image(image);
		this.referenceCount(referenceCount);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::Equals(System.Object)" />*/
	equals: function (obj) {
		var holder = $.ig.util.cast($.ig.WorkbookSerializationDataExcel2003_ImageHolder.prototype.$type, obj);
		return holder != null && this.image().equals(holder.image());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::Equals(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::GetHashCode()" />*/
	getHashCode: function () {
		return this.image().getHashCode();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::GetHashCode()" />*/
	,
	_image: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.MockClasses.Image Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::Image()" />*/
	image: function (value) {
		if (arguments.length === 1) {
			this._image = value;
			return value;
		} else {
			return this._image;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.MockClasses.Image Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::Image()" />*/
	,
	_referenceCount: 0,
	/*<BeginProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::ReferenceCount()" />*/
	referenceCount: function (value) {
		if (arguments.length === 1) {
			this._referenceCount = value;
			return value;
		} else {
			return this._referenceCount;
		}
	}
	/*<EndProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder::ReferenceCount()" />*/
	,
	$type: new $.ig.Type('WorkbookSerializationDataExcel2003_ImageHolder', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003_ImageHolder" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream" />*/

$.ig.util.defType('BiffRecordStream', 'Stream', {
	__isOpen: false,
	__cachedWorkbookStreamPosition: 0,
	__ownerStream: null,
	__ownerStreamReader: null,
	__length: 0,
	__position: 0,
	__blocks: null,
	__currentBlock: 0,
	__currentBlockWasModified: false,
	__positionInCurrentBlock: 0,
	__recordType: 0,
	__nextBlockType: 0,
	__parentStream: null,
	__subStreams: null,
	__readBuffer: null,
	__isFirstBlockHeaderWritten: false,
	___transform: null,
	init: function (initNumber, transform) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		this.__blocks = new $.ig.List$1($.ig.BiffRecordStream_RecordBlockInfo.prototype.$type, 0);
		$.ig.Stream.prototype.init.call(this);
		this.__readBuffer = new Array(8);
		this.___transform = transform || $.ig.InPlaceTransform.prototype.noTransform();
	},
	init1: function (initNumber, loadManager, ownerStream, ownerStreamReader, transform) {
		$.ig.BiffRecordStream.prototype.init.call(this, 0, transform);
		this.__isFirstBlockHeaderWritten = true;
		this.__isOpen = true;
		this._loadManager(loadManager);
		this.__ownerStream = ownerStream;
		this.__ownerStreamReader = ownerStreamReader;
		this.__recordType = this._readBlockType(ownerStreamReader);
		if (this.__recordType == this._defaultRecordId()) {
			this.__blocks.add(this._createRecordBlock(this.__ownerStream.position(), 0));
			return;
		}
		var firstBlockLength = this._readBlockLength(this.__ownerStreamReader);
		this.__cachedWorkbookStreamPosition = this.__ownerStream.position();
		this.__length = firstBlockLength;
		this.__blocks.add(this._createRecordBlock(this.__ownerStream.position(), firstBlockLength));
		this.__ownerStream.position(this.__cachedWorkbookStreamPosition + this.__length);
		this._appendContinueBlocks();
		this.__ownerStream.position(this.__cachedWorkbookStreamPosition);
		this._setCurrentBlock(0);
	},
	init2: function (initNumber, saveManager, ownerStream, recordType, transform) {
		$.ig.BiffRecordStream.prototype.init.call(this, 0, transform);
		this.__isOpen = true;
		this.saveManager(saveManager);
		this.__ownerStream = ownerStream;
		this.__recordType = recordType;
		this.__blocks.add(this._createRecordBlock(this.__ownerStream.position() + this._blockLengthSize() + this._blockTypeSize(), 0));
		this.__cachedWorkbookStreamPosition = this.__ownerStream.position();
		this._setCurrentBlock(0);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.IBiffRecordStream Infragistics.Documents.Excel.Serialization.BiffRecordStream::ParentStreamRaw()" />*/
	parentStreamRaw: function (value) {
		if (arguments.length === 1) {
			this.__parentStream = $.ig.util.cast($.ig.BiffRecordStream.prototype.$type, value);
			return value;
		} else {
			return this.__parentStream;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.IBiffRecordStream Infragistics.Documents.Excel.Serialization.BiffRecordStream::ParentStreamRaw()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteByte(System.Byte)" />*/
	writeByte: function (b) {
		this._write9(b);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteByte(System.Byte)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteByteArray()" />*/
	writeByteArray: function (b) {
		this._write2(b);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteByteArray()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteDouble(System.Double)" />*/
	writeDouble: function (b) {
		this._write10(b);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteDouble(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteString(System.String, Infragistics.Documents.Excel.LengthType)" />*/
	writeString: function (v, t) {
		this._write15(v, t);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Infragistics.Documents.Excel.Serialization.IBiffRecordStream.WriteString(System.String, Infragistics.Documents.Excel.LengthType)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::CanRead()" />*/
	canRead: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::CanRead()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::CanSeek()" />*/
	canSeek: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::CanSeek()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::CanWrite()" />*/
	canWrite: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::CanWrite()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Dispose(System.Boolean)" />*/
	disposeCore: function (disposing) {
		try {
			if (disposing) {
				this._closeCurrentBlock();
				if (this.___transform.supportsPostProcessingBlocks() && this.___transform.isEncryptionSuspended() == false) {
					for (var i = 0; i < this.__blocks.count(); i++) {
						var currentBlock = this.__blocks.__inner[i];
						this.__ownerStream.position(currentBlock.blockStart());
						this.___transform.postProcessBlock(this.__ownerStream, currentBlock.blockLength());
					}
					this.___transform.onPostProcessComplete();
				}
				this.__ownerStream.position(this.endUnderlyingStreamPosition());
				if (this.__parentStream != null) {
					this.__parentStream.__isOpen = true;
				}
			}
			this.__isOpen = false;
		}
		finally {
			$.ig.Stream.prototype.disposeCore.call(this, disposing);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Dispose(System.Boolean)" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Length()" />*/
	length: function () {
		return this.__length;
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Length()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Flush()" />*/
	flush: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Flush()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Position()" />*/
	position: function (value) {
		if (arguments.length === 1) {
			if (this.__isOpen == false) {
				$.ig.ExcelUtils.prototype.debugFail("The record stream is not open!");
				return;
			}
			if (this.__position == value) {
				return;
			}
			if (value < 0) {
				$.ig.ExcelUtils.prototype.debugFail("The stream position cannot be less than zero.");
				return;
			}
			var difference = (value - this.__position);
			var newPositionInCurrentBlock = this.__positionInCurrentBlock + difference;
			this.__position = value;
			if (this.__cachedWorkbookStreamPosition == this.__ownerStream.position() && 0 <= newPositionInCurrentBlock && newPositionInCurrentBlock < this.__blocks.__inner[this.__currentBlock].blockLength()) {
				this.__positionInCurrentBlock = newPositionInCurrentBlock;
				this.__cachedWorkbookStreamPosition += difference;
				this.__ownerStream.position(this.__cachedWorkbookStreamPosition);
			} else {
				this._syncPositionMembers();
			}
			return value;
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(this.__isOpen, "The record stream is not open!");
			return this.__position;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Position()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Read(, System.Int32, System.Int32)" />*/
	read: function (buffer, offset, count) {
		if (this.__isOpen == false) {
			$.ig.ExcelUtils.prototype.debugFail("The record stream is not open!");
			return 0;
		}
		if (buffer == null) {
			$.ig.ExcelUtils.prototype.debugFail("The buffer cannot be null.");
			return 0;
		}
		if (offset < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The offset cannot be less than zero.");
			return 0;
		}
		if (count < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The count cannot be less than zero.");
			return 0;
		}
		if (offset + count > buffer.length) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot write past the end of the buffer.");
			return 0;
		}
		var bytesToRead = Math.min(count, (this.__length - this.__position));
		if (bytesToRead < 0) {
			return 0;
		}
		var bytesRead = 0;
		while (bytesRead < bytesToRead) {
			bytesRead += this._readFromCurrentBlock(buffer, offset + bytesRead, bytesToRead - bytesRead);
		}
		$.ig.ExcelUtils.prototype.debugAssert(bytesRead == bytesToRead, null);
		return bytesRead;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Read(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Seek(System.Int64, System.IO.SeekOrigin)" />*/
	seek: function (offset, origin) {
		switch (origin) {
			case $.ig.SeekOrigin.prototype.begin:
				$.ig.ExcelUtils.prototype.debugAssert(offset >= 0, null);
				this.position(offset);
				break;
			case $.ig.SeekOrigin.prototype.current:
				$.ig.ExcelUtils.prototype.debugAssert(this.__position + offset >= 0, null);
				this.position(this.position() + offset);
				break;
			case $.ig.SeekOrigin.prototype.end:
				$.ig.ExcelUtils.prototype.debugAssert(this.__length + offset >= 0, null);
				this.position(this.length() + offset);
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown seek origin");
				break;
		}
		return this.__position;
	}
	/*<EndMethod Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Seek(System.Int64, System.IO.SeekOrigin)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SetLength(System.Int64)" />*/
	setLength: function (value) {
		if (value == this.__length) {
			return;
		}
		if (value < this.__length) {
			$.ig.ExcelUtils.prototype.debugFail("This stream cannot be shortened.");
			return;
		}
		var difference = value - this.__length;
		this.__length = value;
		var workbookPositionChanged = false;
		var oldPosition = this.__ownerStream.position();
		while (true) {
			var lastBlockIndex = this.__blocks.count() - 1;
			var currentBlockInfo = this.__blocks.__inner[lastBlockIndex];
			var lastBlockLength = currentBlockInfo.blockLength();
			if (lastBlockLength + difference <= currentBlockInfo.maximumBlockLength()) {
				currentBlockInfo.blockLength((lastBlockLength + difference));
				break;
			} else {
				var distanceToEndOfBlock = currentBlockInfo.maximumBlockLength() - currentBlockInfo.blockLength();
				difference -= distanceToEndOfBlock;
				currentBlockInfo.blockLength(currentBlockInfo.maximumBlockLength());
				this.__ownerStream.position(this.__ownerStream.position() + distanceToEndOfBlock);
				this._writeNewBlock(this._getNextBlockType());
				workbookPositionChanged = true;
			}
		}
		if (workbookPositionChanged) {
			this.__ownerStream.position(oldPosition);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SetLength(System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(, System.Int32, System.Int32)" />*/
	write: function (buffer, offset, count) {
		if (buffer == null) {
			$.ig.ExcelUtils.prototype.debugFail("The buffer cannot be null.");
			return;
		}
		if (offset < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The offset cannot be less than zero.");
			return;
		}
		if (count < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The count cannot be less than zero.");
			return;
		}
		if (offset + count > buffer.length) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot write past the end of the buffer.");
			return;
		}
		var bytesWritten = 0;
		var shouldSetModifiedFlag = true;
		if (this.__isFirstBlockHeaderWritten == false) {
			this._writeFirstBlockHeader(Math.min(count, this.__blocks.__inner[0].maximumBlockLength()));
			shouldSetModifiedFlag = false;
		}
		var newPosition = this.__position + count;
		if (newPosition > this.length()) {
			this.setLength(newPosition);
		}
		while (bytesWritten < count) {
			bytesWritten += this._writeToCurrentBlock(buffer, offset + bytesWritten, count - bytesWritten);
		}
		if (shouldSetModifiedFlag == false) {
			this.__currentBlockWasModified = false;
		}
		$.ig.ExcelUtils.prototype.debugAssert(bytesWritten == count, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream Infragistics.Documents.Excel.Serialization.BiffRecordStream::CopyForAlternateStream(System.IO.Stream, System.Int64)" />*/
	_copyForAlternateStream: function (newWorkbookStream, startPositionInNewStream) {
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream Infragistics.Documents.Excel.Serialization.BiffRecordStream::CopyForAlternateStream(System.IO.Stream, System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetDefaultContinuationBlockType()" />*/
	_getDefaultContinuationBlockType: function () {
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetDefaultContinuationBlockType()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBlockLength(System.IO.BinaryReader)" />*/
	_readBlockLength: function (ownerStreamReader) {
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBlockLength(System.IO.BinaryReader)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBlockType(System.IO.BinaryReader)" />*/
	_readBlockType: function (ownerStreamReader) {
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBlockType(System.IO.BinaryReader)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteBlockLength(System.IO.Stream, System.Int32, System.Boolean)" />*/
	_writeBlockLength: function (ownerStream, length, isAfterLengthPosition) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteBlockLength(System.IO.Stream, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteBlockType(System.IO.Stream, System.Int32)" />*/
	_writeBlockType: function (ownerStream, type) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteBlockType(System.IO.Stream, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteFullColorExt(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	writeFullColorExt: function (colorInfo, item) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteFullColorExt(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteXFExtGradient(Infragistics.Documents.Excel.CellFillGradient)" />*/
	writeXFExtGradient: function (gradientFill) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteXFExtGradient(Infragistics.Documents.Excel.CellFillGradient)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AddSubStream(Infragistics.Documents.Excel.Serialization.IBiffRecordStream)" />*/
	_addSubStream: function (record) {
		var rcd = $.ig.util.cast($.ig.BiffRecordStream.prototype.$type, record);
		if (this.__subStreams == null) {
			this.__subStreams = new $.ig.List$1($.ig.IBiffRecordStream.prototype.$type, 0);
		}
		this.__subStreams.add(record);
		$.ig.ExcelUtils.prototype.debugAssert(record.parentStreamRaw() == null, null);
		rcd.parentStreamRaw(this);
		this.__isOpen = false;
		this.__blocks.__inner[this.__currentBlock].capBlock();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AddSubStream(Infragistics.Documents.Excel.Serialization.IBiffRecordStream)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendNextRecordIfType(System.Int32)" />*/
	_appendNextRecordIfType: function (type) {
		if (this._appendNextBlockIfType(type) == false) {
			return false;
		}
		this.__ownerStream.seek(this.__blocks.__inner[this.__blocks.count() - 1].blockLength(), $.ig.SeekOrigin.prototype.current);
		this._appendContinueBlocks();
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendNextRecordIfType(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CapCurrentBlock()" />*/
	_capCurrentBlock: function () {
		this._syncWorkbookStreamPosition();
		this.__blocks.__inner[this.__currentBlock].capBlock();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CapCurrentBlock()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetDataSize(System.Int64, Infragistics.Documents.Excel.LengthType, System.String)" />*/
	_getDataSize: function (startPosition, lengthType, value) {
		var originalPosition = this.position();
		try {
			this.position(startPosition);
			$.ig.ExcelUtils.prototype.debugAssert(startPosition != 0, null);
			{
				var ms = new $.ig.MemoryStream(0);
				try {
					var copyStream = this._copyForAlternateStream(ms, -startPosition);
					if (copyStream.__length < startPosition) {
						copyStream.setLength(startPosition);
					}
					copyStream.position(startPosition);
					copyStream._write15(value, lengthType);
					return ms.position();
				}
				finally {
					if (ms != null) {
						ms.dispose();
					}
				}
			}
		}
		finally {
			this.position(originalPosition);
		}
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetDataSize(System.Int64, Infragistics.Documents.Excel.LengthType, System.String)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetStartOfRecord()" />*/
	_getStartOfRecord: function () {
		return this.__blocks.__inner[0].blockStart() - this._blockLengthSize() - this._blockTypeSize();
	}
	/*<EndMethod Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetStartOfRecord()" />*/
	,
	/*<BeginMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadByteFromBuffer(, System.Int32)" />*/
	readByteFromBuffer: function (data, dataIndex) {
		if (dataIndex == data.length) {
			var $ret = this._cacheNextBlock(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
		}
		return {
			ret: data[dataIndex++],
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="System.Byte Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadByteFromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBytes(System.Int32)" />*/
	_readBytes: function (count) {
		if (count < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The count cannot be less than zero.");
			return new Array(0);
		}
		var data = new Array(count);
		var bytesRead = this.read(data, 0, count);
		if (bytesRead == count) {
			return data;
		}
		if (bytesRead == 0) {
			return new Array(0);
		}
		var retValue = new Array(bytesRead);
		$.ig.Buffer.prototype.blockCopy(data, 0, retValue, 0, bytesRead);
		return retValue;
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBytes(System.Int32)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBytesFromBuffer(System.Int32, , System.Int32)" />*/
	readBytesFromBuffer: function (count, data, dataIndex) {
		if (count < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The count cannot be less than zero.");
			return {
				ret: new Array(0),
				p1: data,
				p2: dataIndex
			};
		}
		var retData = new Array(count);
		var retDataLength = 0;
		while (true) {
			var bytesFromCurrentBuffer = Math.min(count - retDataLength, data.length - dataIndex);
			$.ig.Buffer.prototype.blockCopy(data, dataIndex, retData, retDataLength, bytesFromCurrentBuffer);
			dataIndex += bytesFromCurrentBuffer;
			retDataLength += bytesFromCurrentBuffer;
			if (retDataLength == count) {
				return {
					ret: retData,
					p1: data,
					p2: dataIndex
				};
			}
			if (this.position() == this.length()) {
				var smallerData = new Array(retDataLength);
				$.ig.Buffer.prototype.blockCopy(retData, 0, smallerData, 0, retDataLength);
				return {
					ret: smallerData,
					p1: data,
					p2: dataIndex
				};
			}
			var $ret = this._cacheNextBlock(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
		}
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadBytesFromBuffer(System.Int32, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadDouble()" />*/
	_readDouble: function () {
		if (this.read(this.__readBuffer, 0, 8) != 8) {
			throw new $.ig.excel.EndOfStreamException(null, null);
		}
		return $.ig.BitConverter.prototype.toDouble(this.__readBuffer, 0);
	}
	/*<EndMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadDouble()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadDoubleFromBuffer(, System.Int32)" />*/
	readDoubleFromBuffer: function (data, dataIndex) {
		if (dataIndex + 8 > data.length) {
			var $ret = this._cacheNextBlock(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
		}
		var retVal = $.ig.BitConverter.prototype.toDouble(data, dataIndex);
		dataIndex += 8;
		return {
			ret: retVal,
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadDoubleFromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedString(Infragistics.Documents.Excel.LengthType)" />*/
	_readFormattedString: function (lengthType) {
		if (lengthType != $.ig.LengthType.prototype.eightBit && lengthType != $.ig.LengthType.prototype.sixteenBit) {
			$.ig.ExcelUtils.prototype.debugFail("Invalid length type.");
			return null;
		}
		var stringLength = lengthType == $.ig.LengthType.prototype.eightBit ? this.readByte() : this._readUInt16();
		return this._readFormattedString1(stringLength);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedString(Infragistics.Documents.Excel.LengthType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedString(System.UInt16)" />*/
	_readFormattedString1: function (stringLength) {
		var $self = this;
		var value;
		if ((function () { var $ret = $self._tryReadFormattedString(stringLength, value); value = $ret.p1; return $ret.ret; }()) == false) {
			throw new $.ig.excel.EndOfStreamException(null, null);
		}
		return value;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedString(System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::TryReadFormattedString(System.UInt16, Infragistics.Documents.Excel.StringElement)" />*/
	_tryReadFormattedString: function (stringLength, value) {
		value = null;
		var info = this._readFormattedStringHelper(stringLength);
		if (info == null) {
			return {
				ret: false,
				p1: value
			};
		}
		if (info._hasRichText) {
			var formattedStringElement = new $.ig.FormattedStringElement(1, info._unformattedText);
			this._readFormattingRuns(formattedStringElement, info._richTextFormattingRuns);
			value = formattedStringElement;
		} else {
			value = new $.ig.StringElement(info._unformattedText);
		}
		this._readAsianPhoneticSettingsBlock(info._asianPhoneticSettingsSize);
		return {
			ret: true,
			p1: value
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::TryReadFormattedString(System.UInt16, Infragistics.Documents.Excel.StringElement)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringBlock(System.UInt32, System.Collections.Generic.List)" />*/
	_readFormattedStringBlock: function (stringCount, formattedStrings) {
		var $self = this;
		if (stringCount == 0) {
			return null;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var $ret = this._cacheNextBlock(data, dataIndex);
		data = $ret.p0;
		dataIndex = $ret.p1;
		var stringsRead = 0;
		return $.ig.Async.prototype.forSlice(0, stringCount, 1, function (i) {
			formattedStrings.add((function () { var $ret = $self.readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }()));
			stringsRead++;
			if ($.ig.BiffRecordStream.prototype._maxStringsPerSlice < stringsRead) {
				stringsRead = 0;
				return false;
			}
			return true;
		});
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringBlock(System.UInt32, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringFromBuffer(Infragistics.Documents.Excel.LengthType, , System.Int32)" />*/
	readFormattedStringFromBuffer: function (lengthType, data, dataIndex) {
		var $self = this;
		var stringLength = lengthType == $.ig.LengthType.prototype.eightBit ? (function () { var $ret = $self.readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()) : (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		return {
			ret: (function () { var $ret = $self._readFormattedStringFromBuffer1(stringLength, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }()),
			p1: data,
			p2: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringFromBuffer(Infragistics.Documents.Excel.LengthType, , System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringFromBuffer(System.UInt16, , System.Int32)" />*/
	_readFormattedStringFromBuffer1: function (stringLength, data, dataIndex) {
		var $self = this;
		var info = (function () { var $ret = $self._readFormattedStringFromBufferHelper(stringLength, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
		var retValue;
		if (info._hasRichText) {
			var formattedStringElement = new $.ig.FormattedStringElement(1, info._unformattedText);
			var $ret = this._readFormattingRunsFromBuffer(formattedStringElement, info._richTextFormattingRuns, data, dataIndex);
			data = $ret.p2;
			dataIndex = $ret.p3;
			retValue = formattedStringElement;
		} else {
			retValue = new $.ig.StringElement(info._unformattedText);
		}
		var $ret1 = this._readAsianPhoneticSettingsBlockFromBuffer(data, dataIndex, info._asianPhoneticSettingsSize);
		data = $ret1.p0;
		dataIndex = $ret1.p1;
		return {
			ret: retValue,
			p1: data,
			p2: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.StringElement Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringFromBuffer(System.UInt16, , System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CellAddress Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormulaCellAddressFromBuffer(, System.Int32)" />*/
	_readFormulaCellAddressFromBuffer: function (data, dataIndex) {
		var $self = this;
		var encodedRow = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var encodedColumn = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		return {
			ret: $.ig.BiffRecordStream.prototype._cellAddressFromEncodedValues(encodedRow, encodedColumn),
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CellAddress Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormulaCellAddressFromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CellAddressRange Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormulaCellAddressRangeFromBuffer(, System.Int32)" />*/
	_readFormulaCellAddressRangeFromBuffer: function (data, dataIndex) {
		var $self = this;
		var encodedRowFirst = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var encodedRowLast = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var encodedColumnFirst = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var encodedColumnLast = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var first = $.ig.BiffRecordStream.prototype._cellAddressFromEncodedValues(encodedRowFirst, encodedColumnFirst);
		var last = $.ig.BiffRecordStream.prototype._cellAddressFromEncodedValues(encodedRowLast, encodedColumnLast);
		return {
			ret: new $.ig.CellAddressRange(1, first, last),
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CellAddressRange Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormulaCellAddressRangeFromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormulaCellAddressRangeListFromBuffer(, System.Int32)" />*/
	_readFormulaCellAddressRangeListFromBuffer: function (data, dataIndex) {
		var $self = this;
		var numberOfRanges = (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var ranges = new $.ig.List$1($.ig.CellAddressRange.prototype.$type, 2, numberOfRanges);
		for (var i = 0; i < numberOfRanges; i++) {
			ranges.add((function () { var $ret = $self._readFormulaCellAddressRangeFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()));
		}
		return {
			ret: ranges,
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormulaCellAddressRangeListFromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt16()" />*/
	_readInt16: function () {
		if (this.read(this.__readBuffer, 0, 2) != 2) {
			throw new $.ig.excel.EndOfStreamException(null, null);
		}
		return $.ig.BitConverter.prototype.toInt16(this.__readBuffer, 0);
	}
	/*<EndMethod Name="System.Int16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt16()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt32()" />*/
	_readInt32: function () {
		if (this.read(this.__readBuffer, 0, 4) != 4) {
			throw new $.ig.excel.EndOfStreamException(null, null);
		}
		return $.ig.BitConverter.prototype.toInt32(this.__readBuffer, 0);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt32()" />*/
	,
	/*<BeginMethod Name="System.Int16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt16FromBuffer(, System.Int32)" />*/
	_readInt16FromBuffer: function (data, dataIndex) {
		if (dataIndex + 2 > data.length) {
			var $ret = this._cacheNextBlock(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
		}
		var retVal = $.ig.BitConverter.prototype.toInt16(data, dataIndex);
		dataIndex += 2;
		return {
			ret: retVal,
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="System.Int16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt16FromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt32FromBuffer(, System.Int32)" />*/
	_readInt32FromBuffer: function (buffer, bufferPosition) {
		if (bufferPosition + 4 > buffer.length) {
			var $ret = this._cacheNextBlock(buffer, bufferPosition);
			buffer = $ret.p0;
			bufferPosition = $ret.p1;
		}
		var retVal = $.ig.BitConverter.prototype.toInt32(buffer, bufferPosition);
		bufferPosition += 4;
		return {
			ret: retVal,
			p0: buffer,
			p1: bufferPosition
		};
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadInt32FromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadNextBlockType()" />*/
	_readNextBlockType: function () {
		if (this.__ownerStream.position() >= this.__ownerStream.length() - 1) {
			return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
		}
		var position = this.__ownerStream.position();
		var nextBlockType = this._readBlockType(this.__ownerStreamReader);
		this.__ownerStream.position(position);
		return $.ig.util.toNullable($.ig.Number.prototype.$type, nextBlockType);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadNextBlockType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadNullTerminatedUnicodeString()" />*/
	_readNullTerminatedUnicodeString: function () {
		var bytes = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		while (true) {
			var byte1 = this.readByte();
			var byte2 = this.readByte();
			if (byte1 <= 0 && byte2 <= 0) {
				break;
			}
			bytes.add(byte1);
			bytes.add(byte2);
		}
		return $.ig.Encoding.prototype.unicode().getString(bytes.toArray());
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadNullTerminatedUnicodeString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteNullTerminatedUnicodeString(System.String)" />*/
	_writeNullTerminatedUnicodeString: function (value) {
		this._write2($.ig.Encoding.prototype.unicode().getBytes1(value));
		this.writeByte(0);
		this.writeByte(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteNullTerminatedUnicodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadRect()" />*/
	_readRect: function () {
		var left = this._readInt32();
		var top = this._readInt32();
		var right = this._readInt32();
		var bottom = this._readInt32();
		return new $.ig.Rect(0, left, top, right - left, bottom - top);
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadRect()" />*/
	,
	/*<BeginMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt16()" />*/
	_readUInt16: function () {
		if (this.read(this.__readBuffer, 0, 2) != 2) {
			throw new $.ig.excel.EndOfStreamException(null, null);
		}
		return $.ig.BitConverter.prototype.toUInt16(this.__readBuffer, 0);
	}
	/*<EndMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt16()" />*/
	,
	/*<BeginMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt16FromBuffer(, System.Int32)" />*/
	_readUInt16FromBuffer: function (data, dataIndex) {
		if (dataIndex + 2 > data.length) {
			var $ret = this._cacheNextBlock(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
		}
		var retVal = $.ig.BitConverter.prototype.toUInt16(data, dataIndex);
		dataIndex += 2;
		return {
			ret: retVal,
			p0: data,
			p1: dataIndex
		};
	}
	/*<EndMethod Name="System.UInt16 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt16FromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt32()" />*/
	_readUInt32: function () {
		if (this.read(this.__readBuffer, 0, 4) != 4) {
			throw new $.ig.excel.EndOfStreamException(null, null);
		}
		return $.ig.BitConverter.prototype.toUInt32(this.__readBuffer, 0);
	}
	/*<EndMethod Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt32()" />*/
	,
	/*<BeginMethod Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt32FromBuffer(, System.Int32)" />*/
	_readUInt32FromBuffer: function (buffer, bufferPosition) {
		if (bufferPosition + 4 > buffer.length) {
			var $ret = this._cacheNextBlock(buffer, bufferPosition);
			buffer = $ret.p0;
			bufferPosition = $ret.p1;
		}
		var retVal = $.ig.BitConverter.prototype.toUInt32(buffer, bufferPosition);
		bufferPosition += 4;
		return {
			ret: retVal,
			p0: buffer,
			p1: bufferPosition
		};
	}
	/*<EndMethod Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadUInt32FromBuffer(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SyncWorkbookStreamPosition()" />*/
	_syncWorkbookStreamPosition: function () {
		if (this.__cachedWorkbookStreamPosition == this.__ownerStream.position()) {
			return;
		}
		this._syncPositionMembers();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SyncWorkbookStreamPosition()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Byte)" />*/
	_write9: function (value) {
		var buffer = new Array(1);
		buffer[0] = value;
		this._write2(buffer);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Byte)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write()" />*/
	_write2: function (buffer) {
		if (buffer == null) {
			$.ig.ExcelUtils.prototype.debugFail("The buffer cannot be null.");
			return;
		}
		this.write(buffer, 0, buffer.length);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Double)" />*/
	_write10: function (value) {
		this._write2($.ig.BitConverter.prototype.getBytes2(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Int32)" />*/
	_write12: function (value) {
		this._write2($.ig.BitConverter.prototype.getBytes4(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Int16)" />*/
	_write11: function (value) {
		this._write2($.ig.BitConverter.prototype.getBytes3(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.UInt16)" />*/
	_write17: function (value) {
		this._write2($.ig.BitConverter.prototype.getBytes7(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.UInt32)" />*/
	_write18: function (value) {
		this._write2($.ig.BitConverter.prototype.getBytes8(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.UInt32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.UInt64)" />*/
	_write19: function (value) {
		this._write2($.ig.BitConverter.prototype.getBytes9(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.UInt64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.String)" />*/
	_write14: function (value) {
		this._write5(new $.ig.StringElement(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.String, Infragistics.Documents.Excel.LengthType)" />*/
	_write15: function (value, lengthType) {
		this._write6(new $.ig.StringElement(value), lengthType);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.String, Infragistics.Documents.Excel.LengthType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.String, Infragistics.Documents.Excel.LengthType, System.Boolean)" />*/
	_write16: function (value, lengthType, allowCharCompression) {
		this._write7(new $.ig.StringElement(value), lengthType, allowCharCompression);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.String, Infragistics.Documents.Excel.LengthType, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.FormulaUtilities.CellAddress)" />*/
	_write3: function (address) {
		var encodedRow;
		var encodedColumn;
		var $ret = $.ig.BiffRecordStream.prototype._cellAddressToEncodedValues(address, encodedRow, encodedColumn);
		encodedRow = $ret.p1;
		encodedColumn = $ret.p2;
		this._write17(encodedRow);
		this._write17(encodedColumn);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.FormulaUtilities.CellAddress)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.FormulaUtilities.CellAddressRange)" />*/
	_write4: function (range) {
		var encodedRowFirst;
		var encodedRowLast;
		var encodedColumnFirst;
		var encodedColumnLast;
		var $ret = $.ig.BiffRecordStream.prototype._cellAddressToEncodedValues(range.topLeftCellAddress(), encodedRowFirst, encodedColumnFirst);
		encodedRowFirst = $ret.p1;
		encodedColumnFirst = $ret.p2;
		var $ret1 = $.ig.BiffRecordStream.prototype._cellAddressToEncodedValues(range.bottomRightCellAddress(), encodedRowLast, encodedColumnLast);
		encodedRowLast = $ret1.p1;
		encodedColumnLast = $ret1.p2;
		this._write17(encodedRowFirst);
		this._write17(encodedRowLast);
		this._write17(encodedColumnFirst);
		this._write17(encodedColumnLast);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.FormulaUtilities.CellAddressRange)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Collections.Generic.List, System.Boolean)" />*/
	_write1: function (rangeList, allowContinueRecords) {
		var startPosition = this.position();
		this._write17(0);
		var i;
		for (i = 0; i < rangeList.count(); i++) {
			if (allowContinueRecords == false && this._bytesAvailableInCurrentBlock() < 8) {
				break;
			}
			this._write4(rangeList.__inner[i]);
		}
		var endPosition = this.position();
		this.position(startPosition);
		this._write17(i);
		this.position(endPosition);
		return i;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.Collections.Generic.List, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement)" />*/
	_write5: function (value) {
		this._write8(value, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement, System.Boolean)" />*/
	_write8: function (value, writeFormattingRuns) {
		this._writeFormattedStringHelper(value, 0, true, false, $.ig.LengthType.prototype.eightBit, true, writeFormattingRuns);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement, Infragistics.Documents.Excel.LengthType)" />*/
	_write6: function (value, lengthType) {
		this._write7(value, lengthType, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement, Infragistics.Documents.Excel.LengthType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement, Infragistics.Documents.Excel.LengthType, System.Boolean)" />*/
	_write7: function (value, lengthType, allowCharCompression) {
		if (lengthType != $.ig.LengthType.prototype.eightBit && lengthType != $.ig.LengthType.prototype.sixteenBit) {
			$.ig.ExcelUtils.prototype.debugFail("Invalid length type.");
			return;
		}
		this._writeFormattedStringHelper(value, 0, true, true, lengthType, allowCharCompression, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(Infragistics.Documents.Excel.StringElement, Infragistics.Documents.Excel.LengthType, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.IO.MemoryStream)" />*/
	_write13: function (memoryStream) {
		var dataSize = memoryStream.length();
		var firstBlock = this.__blocks.__inner[0];
		if (this.__isFirstBlockHeaderWritten || memoryStream.length() > firstBlock.maximumBlockLength()) {
			this.write(memoryStream.getBuffer(), 0, dataSize);
			return;
		}
		var headerPosition = this._getStartOfRecord();
		if (this.__cachedWorkbookStreamPosition != headerPosition || this.__cachedWorkbookStreamPosition != this.__ownerStream.position()) {
			this.__cachedWorkbookStreamPosition = headerPosition;
			this.__ownerStream.position(headerPosition);
		}
		var headerAndData = new Array(4 + dataSize);
		$.ig.Buffer.prototype.blockCopy($.ig.BitConverter.prototype.getBytes3(this.__recordType), 0, headerAndData, 0, 2);
		$.ig.Buffer.prototype.blockCopy($.ig.BitConverter.prototype.getBytes3(dataSize), 0, headerAndData, 2, 2);
		$.ig.Buffer.prototype.blockCopy(memoryStream.getBuffer(), 0, headerAndData, 4, dataSize);
		this.___transform.transform(this.__ownerStream.position() + 4, headerAndData, 4, dataSize);
		this.__ownerStream.write(headerAndData, 0, headerAndData.length);
		this.__isFirstBlockHeaderWritten = true;
		this.__cachedWorkbookStreamPosition += headerAndData.length;
		this.__length = this.__position = this.__positionInCurrentBlock = firstBlock.blockLength(dataSize);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::Write(System.IO.MemoryStream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteEMURect(System.Windows.Rect)" />*/
	_writeEMURect: function (emuRect) {
		this._write12($.ig.truncate(emuRect.left()));
		this._write12($.ig.truncate(emuRect.top()));
		this._write12($.ig.truncate(emuRect.right()));
		this._write12($.ig.truncate(emuRect.bottom()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteEMURect(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendContinueBlocks()" />*/
	_appendContinueBlocks: function () {
		var continueType = this._getNextBlockType();
		while (true) {
			if (this._appendNextBlockIfType(continueType) == false) {
				break;
			}
			this.__ownerStream.position(this.__ownerStream.position() + (this.__blocks.__inner[this.__blocks.count() - 1].blockLength()));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendContinueBlocks()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendNextBlockIfType(System.Int32)" />*/
	_appendNextBlockIfType: function (type) {
		if (this.__ownerStream.position() >= this.__ownerStream.length() - 1) {
			return false;
		}
		var position = this.__ownerStream.position();
		var nextRecordType = this._readBlockType(this.__ownerStreamReader);
		if (this._shouldAppendNextBlockIfType(type, nextRecordType) == false) {
			this.__ownerStream.position(position);
			return false;
		}
		var nextRecordLength = this._readBlockLength(this.__ownerStreamReader);
		this.__length += nextRecordLength;
		this.__blocks.add(this._createRecordBlock(this.__ownerStream.position(), nextRecordLength));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendNextBlockIfType(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo Infragistics.Documents.Excel.Serialization.BiffRecordStream::CreateRecordBlock(System.Int64, System.Int32)" />*/
	_createRecordBlock: function (blockStart, blockLength) {
		return new $.ig.BiffRecordStream_RecordBlockInfo(blockStart, blockLength, this._maximumBlockSize());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo Infragistics.Documents.Excel.Serialization.BiffRecordStream::CreateRecordBlock(System.Int64, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::InitializeAlternateStream(Infragistics.Documents.Excel.Serialization.BiffRecordStream, System.IO.Stream, System.Int64)" />*/
	_initializeAlternateStream: function (copyStream, newWorkbookStream, startPositionInNewStream) {
		copyStream.__cachedWorkbookStreamPosition = -1;
		copyStream.__length = this.__length;
		copyStream.__position = this.__position;
		copyStream.__blocks = new $.ig.List$1($.ig.BiffRecordStream_RecordBlockInfo.prototype.$type, 0);
		var offset = startPositionInNewStream - this.__blocks.__inner[0].blockStart();
		var en = this.__blocks.getEnumerator();
		while (en.moveNext()) {
			var block = en.current();
			copyStream.__blocks.add(new $.ig.BiffRecordStream_RecordBlockInfo(block.blockStart() + offset, block.blockLength(), block.maximumBlockLength()));
		}
		copyStream.__currentBlock = this.__currentBlock;
		copyStream.__positionInCurrentBlock = this.__positionInCurrentBlock;
		copyStream.__recordType = this.__recordType;
		copyStream.__isOpen = this.__isOpen;
		copyStream._loadManager(this._loadManager());
		copyStream.__ownerStream = newWorkbookStream;
		copyStream.__parentStream = this.__parentStream;
		copyStream.saveManager(this.saveManager());
		if (this.__subStreams != null) {
			copyStream.__subStreams = new $.ig.List$1($.ig.IBiffRecordStream.prototype.$type, 1, this.__subStreams);
		}
		copyStream.__nextBlockType = this.__nextBlockType;
		copyStream.__isFirstBlockHeaderWritten = this.__isFirstBlockHeaderWritten;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::InitializeAlternateStream(Infragistics.Documents.Excel.Serialization.BiffRecordStream, System.IO.Stream, System.Int64)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringHelper(System.Int32)" />*/
	_readFormattedStringHelper: function (remainingLength) {
		if (this.position() == this.length()) {
			return null;
		}
		var optionFlags = this.readByte();
		var charCompression = (optionFlags & 1) == 0;
		var hasAsianPhoneticSettings = (optionFlags & 4) == 4;
		var hasRichText = (optionFlags & 8) == 8;
		if (hasRichText && this.position() + 1 >= this.length()) {
			return null;
		}
		var richTextFormattingRuns = hasRichText ? this._readUInt16() : 0;
		var asianPhoneticSettingsSize = 0;
		if (hasAsianPhoneticSettings) {
			if (this.position() + 3 >= this.length()) {
				return null;
			}
			asianPhoneticSettingsSize = this._readInt32();
		}
		var encoding = charCompression ? $.ig.excel.Workbook.prototype._invariantCompressedTextEncoding : $.ig.Encoding.prototype.unicode();
		var bytesToRead = remainingLength;
		if (charCompression == false) {
			bytesToRead *= 2;
		}
		var data = new Array(bytesToRead);
		var bytesRead = this._readFromCurrentBlock(data, 0, bytesToRead);
		var value = encoding.getString1(data, 0, bytesRead);
		if (value.length != remainingLength && this._bytesAvailableInCurrentBlock() == 0) {
			var additionalInfo = this._readFormattedStringHelper(remainingLength - value.length);
			if (additionalInfo == null) {
				return null;
			}
			value += additionalInfo._unformattedText;
			$.ig.ExcelUtils.prototype.debugAssert(value.length == remainingLength, "The full string waas not read in.");
		}
		var info = new $.ig.BiffRecordStream_FormattedStringInfo();
		info._asianPhoneticSettingsSize = asianPhoneticSettingsSize;
		info._hasRichText = hasRichText;
		info._richTextFormattingRuns = richTextFormattingRuns;
		info._unformattedText = value;
		return info;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringHelper(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::ShouldAppendNextBlockIfType(System.Int32, System.Int32)" />*/
	_shouldAppendNextBlockIfType: function (expectedType, actualType) {
		return expectedType == actualType;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BiffRecordStream::ShouldAppendNextBlockIfType(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteToCurrentBlock(, System.Int32, System.Int32)" />*/
	_writeToCurrentBlock: function (buffer, offset, count) {
		this._syncWorkbookStreamPosition();
		var currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
		if (this.__positionInCurrentBlock == currentBlockInfo.maximumBlockLength()) {
			this._incrementCurrentBlock();
			currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
			this.__positionInCurrentBlock = 0;
			this.__ownerStream.position(currentBlockInfo.blockStart());
			this.__cachedWorkbookStreamPosition = this.__ownerStream.position();
		}
		var bytesToWrite = Math.min(count, currentBlockInfo.maximumBlockLength() - this.__positionInCurrentBlock);
		this.___transform.transform(this.__ownerStream.position(), buffer, offset, bytesToWrite);
		this.__ownerStream.write(buffer, offset, bytesToWrite);
		var bytesWritten = (this.__ownerStream.position() - this.__cachedWorkbookStreamPosition);
		$.ig.ExcelUtils.prototype.debugAssert(bytesWritten == bytesToWrite, null);
		if (bytesWritten > 0) {
			this.__currentBlockWasModified = true;
		}
		this.__positionInCurrentBlock += bytesWritten;
		this.__position += bytesWritten;
		this.__cachedWorkbookStreamPosition += bytesWritten;
		$.ig.ExcelUtils.prototype.debugAssert(this.__positionInCurrentBlock <= currentBlockInfo.maximumBlockLength(), null);
		return bytesWritten;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteToCurrentBlock(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AdvancePositionInBuffer(, System.Int32, System.Int32)" />*/
	_advancePositionInBuffer: function (buffer, bufferPosition, count) {
		if (bufferPosition + count > buffer.length) {
			var $ret = this._cacheNextBlock(buffer, bufferPosition);
			buffer = $ret.p0;
			bufferPosition = $ret.p1;
		}
		bufferPosition += count;
		return {
			p0: buffer,
			p1: bufferPosition
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AdvancePositionInBuffer(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendNewBlock()" />*/
	_appendNewBlock: function () {
		this._writeNewBlock(this._getNextBlockType());
		this.__cachedWorkbookStreamPosition += 4;
		this._incrementCurrentBlock();
		this.__positionInCurrentBlock = 0;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::AppendNewBlock()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CacheNextBlock(, System.Int32)" />*/
	_cacheNextBlock: function (buffer, bufferPosition) {
		var copyEndCount = 0;
		if (bufferPosition < buffer.length) {
			copyEndCount = buffer.length - bufferPosition;
		}
		var currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
		var currentBlockLength = currentBlockInfo.blockLength();
		var blockLength;
		if (this.__positionInCurrentBlock == currentBlockLength) {
			blockLength = this.__blocks.__inner[this.__currentBlock + 1].blockLength();
		} else {
			blockLength = currentBlockLength - this.__positionInCurrentBlock;
		}
		var newBuffer = new Array(copyEndCount + blockLength);
		if (copyEndCount != 0) {
			$.ig.Buffer.prototype.blockCopy(buffer, bufferPosition, newBuffer, 0, copyEndCount);
		}
		this._readFromCurrentBlock(newBuffer, copyEndCount, blockLength);
		bufferPosition = 0;
		buffer = newBuffer;
		return {
			p0: buffer,
			p1: bufferPosition
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CacheNextBlock(, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CellAddress Infragistics.Documents.Excel.Serialization.BiffRecordStream::CellAddressFromEncodedValues(System.UInt16, System.UInt16)" />*/
	_cellAddressFromEncodedValues: function (encodedRow, encodedColumn) {
		var relativeColumnIndex = (encodedColumn & 16384) == 16384;
		var relativeRowIndex = (encodedColumn & 32768) == 32768;
		var column = (encodedColumn & 255);
		return new $.ig.CellAddress(1, encodedRow, relativeRowIndex, column, relativeColumnIndex);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CellAddress Infragistics.Documents.Excel.Serialization.BiffRecordStream::CellAddressFromEncodedValues(System.UInt16, System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CellAddressToEncodedValues(Infragistics.Documents.Excel.FormulaUtilities.CellAddress, System.UInt16, System.UInt16)" />*/
	_cellAddressToEncodedValues: function (address, encodedRow, encodedColumn) {
		encodedColumn = address.column();
		if (address.columnAddressIsRelative()) {
			encodedColumn |= 16384;
		}
		if (address.rowAddressIsRelative()) {
			encodedColumn |= 32768;
		}
		encodedRow = address.row();
		return {
			p1: encodedRow,
			p2: encodedColumn
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CellAddressToEncodedValues(Infragistics.Documents.Excel.FormulaUtilities.CellAddress, System.UInt16, System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CloseCurrentBlock()" />*/
	_closeCurrentBlock: function () {
		if (this.__currentBlockWasModified) {
			var currentPosition = this.__ownerStream.position();
			var currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
			this.__ownerStream.position(currentBlockInfo.blockStart() - this._blockLengthSize());
			this._writeBlockLength(this.__ownerStream, currentBlockInfo.blockLength(), false);
			this.__ownerStream.position(currentPosition);
			this.__currentBlockWasModified = false;
		} else if (this.__isFirstBlockHeaderWritten == false) {
			this._writeFirstBlockHeader(0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::CloseCurrentBlock()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetNextBlockType()" />*/
	_getNextBlockType: function () {
		var type = this._nextBlockTypeInternal();
		if (type == this._defaultRecordId()) {
			return this._getDefaultContinuationBlockType();
		}
		this._nextBlockTypeInternal(this._defaultRecordId());
		return type;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::GetNextBlockType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::IncrementCurrentBlock()" />*/
	_incrementCurrentBlock: function () {
		this._closeCurrentBlock();
		this._setCurrentBlock(this.__currentBlock + 1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::IncrementCurrentBlock()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadAsianPhoneticSettingsBlock(System.Int32)" />*/
	_readAsianPhoneticSettingsBlock: function (asianPhoneticSettingsSize) {
		this.seek(asianPhoneticSettingsSize, $.ig.SeekOrigin.prototype.current);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadAsianPhoneticSettingsBlock(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadAsianPhoneticSettingsBlockFromBuffer(, System.Int32, System.Int32)" />*/
	_readAsianPhoneticSettingsBlockFromBuffer: function (buffer, bufferPosition, asianPhoneticSettingsSize) {
		var $ret = this._advancePositionInBuffer(buffer, bufferPosition, asianPhoneticSettingsSize);
		buffer = $ret.p0;
		bufferPosition = $ret.p1;
		return {
			p0: buffer,
			p1: bufferPosition
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadAsianPhoneticSettingsBlockFromBuffer(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringFromBufferHelper(System.Int32, , System.Int32)" />*/
	_readFormattedStringFromBufferHelper: function (remainingLength, data, dataIndex) {
		var $self = this;
		var optionFlags = (function () { var $ret = $self.readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var charCompression = (optionFlags & 1) == 0;
		var hasAsianPhoneticSettings = (optionFlags & 4) == 4;
		var hasRichText = (optionFlags & 8) == 8;
		var richTextFormattingRuns = hasRichText ? (function () { var $ret = $self._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()) : 0;
		var asianPhoneticSettingsSize = 0;
		if (hasAsianPhoneticSettings) {
			asianPhoneticSettingsSize = (function () { var $ret = $self._readInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		}
		var encoding = charCompression ? $.ig.excel.Workbook.prototype._invariantCompressedTextEncoding : $.ig.Encoding.prototype.unicode();
		var bytesToRead = remainingLength;
		if (charCompression == false) {
			bytesToRead *= 2;
		}
		var bytesRead = Math.min(bytesToRead, data.length - dataIndex);
		var value = encoding.getString1(data, dataIndex, bytesRead);
		dataIndex += bytesRead;
		if (value.length != remainingLength && dataIndex >= data.length) {
			var $ret = this._cacheNextBlock(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
			var additionalInfo = (function () { var $ret = $self._readFormattedStringFromBufferHelper(remainingLength - value.length, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
			value += additionalInfo._unformattedText;
		}
		var info = new $.ig.BiffRecordStream_FormattedStringInfo();
		info._asianPhoneticSettingsSize = asianPhoneticSettingsSize;
		info._hasRichText = hasRichText;
		info._richTextFormattingRuns = richTextFormattingRuns;
		info._unformattedText = value;
		return {
			ret: info,
			p1: data,
			p2: dataIndex
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattedStringFromBufferHelper(System.Int32, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattingRuns(Infragistics.Documents.Excel.FormattedStringElement, System.UInt16)" />*/
	_readFormattingRuns: function (formattedString, richTextFormattingRuns) {
		var workbook = this._loadManager()._workbook();
		for (var i = 0; i < richTextFormattingRuns; i++) {
			var firstFormattedChar = this._readUInt16();
			var fontRecordIndex = this._readUInt16();
			var formattingRun = new $.ig.FormattedStringRun(formattedString, firstFormattedChar);
			formattingRun.getFontInternal1(workbook).setFontFormatting(this._loadManager()._fonts().__inner[fontRecordIndex]);
			formattedString._formattingRuns().add(formattingRun);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattingRuns(Infragistics.Documents.Excel.FormattedStringElement, System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattingRunsFromBuffer(Infragistics.Documents.Excel.FormattedStringElement, System.UInt16, , System.Int32)" />*/
	_readFormattingRunsFromBuffer: function (formattedString, richTextFormattingRuns, buffer, bufferPosition) {
		var $self = this;
		var loadManager = this._loadManager();
		var workbook = loadManager._workbook();
		for (var i = 0; i < richTextFormattingRuns; i++) {
			var firstFormattedChar = (function () { var $ret = $self._readUInt16FromBuffer(buffer, bufferPosition); buffer = $ret.p0; bufferPosition = $ret.p1; return $ret.ret; }());
			var fontRecordIndex = (function () { var $ret = $self._readUInt16FromBuffer(buffer, bufferPosition); buffer = $ret.p0; bufferPosition = $ret.p1; return $ret.ret; }());
			if (firstFormattedChar < formattedString._unformattedStringLength()) {
				var formattingRun = new $.ig.FormattedStringRun(formattedString, firstFormattedChar);
				formattingRun.getFont(workbook).setFontFormatting(loadManager._fonts().__inner[fontRecordIndex]);
				formattedString._formattingRuns().add(formattingRun);
			}
		}
		return {
			p2: buffer,
			p3: bufferPosition
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFormattingRunsFromBuffer(Infragistics.Documents.Excel.FormattedStringElement, System.UInt16, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFromCurrentBlock(, System.Int32, System.Int32)" />*/
	_readFromCurrentBlock: function (buffer, offset, count) {
		if (count == 0) {
			return 0;
		}
		this._syncWorkbookStreamPosition();
		var currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
		var currentBlockLength = currentBlockInfo.blockLength();
		if (this.__positionInCurrentBlock == currentBlockLength) {
			if (this.__currentBlock == this.__blocks.count() - 1) {
				$.ig.ExcelUtils.prototype.debugFail("We shouldn't have read past the end of the stream.");
				return 0;
			} else {
				this._incrementCurrentBlock();
				currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
				this.__positionInCurrentBlock = 0;
				this.__ownerStream.position(currentBlockInfo.blockStart());
				this.__cachedWorkbookStreamPosition = this.__ownerStream.position();
				currentBlockLength = currentBlockInfo.blockLength();
			}
		}
		var bytesToRead = Math.min(count, currentBlockLength - this.__positionInCurrentBlock);
		var bytesRead = this.__ownerStream.read(buffer, offset, bytesToRead);
		this.___transform.transform(this.__cachedWorkbookStreamPosition, buffer, offset, bytesRead);
		$.ig.ExcelUtils.prototype.debugAssert(bytesRead == bytesToRead, null);
		this.__positionInCurrentBlock += bytesRead;
		this.__position += bytesRead;
		this.__cachedWorkbookStreamPosition += bytesRead;
		$.ig.ExcelUtils.prototype.debugAssert(this.__positionInCurrentBlock <= currentBlockLength, null);
		return bytesToRead;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::ReadFromCurrentBlock(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SetCurrentBlock(System.Int32)" />*/
	_setCurrentBlock: function (currentBlock) {
		this.__currentBlock = currentBlock;
		if (this.__currentBlock < this.__blocks.count()) {
			this.___transform.setCurrentBlockLength(this.__blocks.__inner[this.__currentBlock].blockLength());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SetCurrentBlock(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SyncPositionMembers()" />*/
	_syncPositionMembers: function () {
		this._closeCurrentBlock();
		this._setCurrentBlock(0);
		var recordPosition = 0;
		while (true) {
			if (this.__currentBlock == this.__blocks.count()) {
				this.__cachedWorkbookStreamPosition = -1;
				return;
			}
			var currentBlockInfo = this.__blocks.__inner[this.__currentBlock];
			var currentBlockLength = currentBlockInfo.blockLength();
			var underlyingStreamPosition = currentBlockInfo.blockStart();
			this.__positionInCurrentBlock = (this.__position - recordPosition);
			if (this.__positionInCurrentBlock <= currentBlockLength) {
				underlyingStreamPosition += this.__positionInCurrentBlock;
				this.__cachedWorkbookStreamPosition = underlyingStreamPosition;
				this.__ownerStream.position(this.__cachedWorkbookStreamPosition);
				return;
			}
			recordPosition += currentBlockLength;
			this._incrementCurrentBlock();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::SyncPositionMembers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteFirstBlockHeader(System.Int32)" />*/
	_writeFirstBlockHeader: function (assumedBlockLength) {
		var headerPosition = this._getStartOfRecord();
		if (this.__cachedWorkbookStreamPosition != headerPosition || this.__cachedWorkbookStreamPosition != this.__ownerStream.position()) {
			this.__ownerStream.position(headerPosition);
			this.__cachedWorkbookStreamPosition = headerPosition;
		}
		this._writeBlockType(this.__ownerStream, this.__recordType);
		this._writeBlockLength(this.__ownerStream, assumedBlockLength, false);
		this.__isFirstBlockHeaderWritten = true;
		this.__cachedWorkbookStreamPosition = this.__ownerStream.position();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteFirstBlockHeader(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteFormattedStringHelper(Infragistics.Documents.Excel.StringElement, System.Int32, System.Boolean, System.Boolean, Infragistics.Documents.Excel.LengthType, System.Boolean, System.Boolean)" />*/
	_writeFormattedStringHelper: function (value, startPosition, writeHeader, writeLength, lengthType, allowCharCompression, writeFormattingRuns) {
		var formattedStringElement = $.ig.util.cast($.ig.FormattedStringElement.prototype.$type, value);
		var formattedRunCount = 0;
		var formattedRunStart = 0;
		if (formattedStringElement != null) {
			formattedRunCount = formattedStringElement._formattingRuns().count();
			if (formattedRunCount != 0) {
				var run = formattedStringElement._formattingRuns().__inner[0];
				if (run.firstFormattedCharAbsolute() == 0) {
					var fontProxy = run.getFontInternal1(this.saveManager()._workbook());
					if (fontProxy._saveIndex().getValueOrDefault() == 0) {
						formattedRunStart++;
						formattedRunCount--;
					}
				}
			}
		}
		var headerLength = 0;
		var hasRichText = false;
		if (writeHeader) {
			if (writeLength) {
				if (lengthType == $.ig.LengthType.prototype.eightBit) {
					headerLength += 1;
				} else {
					headerLength += 2;
				}
			}
			if (writeFormattingRuns) {
				hasRichText = formattedRunCount != 0;
			}
		}
		headerLength++;
		if (hasRichText) {
			headerLength += 2;
		}
		var minLengthNeededInCurrentBlock = headerLength;
		if (startPosition < value._unformattedString().length) {
			if (allowCharCompression == false || $.ig.ExcelUtils.prototype.isUnicodeString(value._unformattedString().substr(startPosition, 1))) {
				minLengthNeededInCurrentBlock += 2;
			} else {
				minLengthNeededInCurrentBlock += 1;
			}
		}
		if (this._bytesAvailableInCurrentBlock() < minLengthNeededInCurrentBlock) {
			this._syncWorkbookStreamPosition();
			this._closeCurrentBlock();
			this._appendNewBlock();
			$.ig.ExcelUtils.prototype.debugAssert(this.__positionInCurrentBlock == 0, null);
		}
		var lengthForStringInBlock = this._bytesAvailableInCurrentBlock() - headerLength;
		if (writeHeader) {
			if (writeLength) {
				if (lengthType == $.ig.LengthType.prototype.eightBit) {
					this._write9(value._unformattedString().length);
				} else {
					this._write17(value._unformattedString().length);
				}
			}
		}
		var availableLengthInString = value._unformattedString().length - startPosition;
		var portion;
		var charCompression;
		if (allowCharCompression) {
			portion = value._unformattedString().substr(startPosition, Math.min(availableLengthInString, lengthForStringInBlock));
			charCompression = true;
			if ($.ig.ExcelUtils.prototype.isUnicodeString(portion)) {
				portion = value._unformattedString().substr(startPosition, Math.min(availableLengthInString, $.ig.intDivide(lengthForStringInBlock, 2)));
				charCompression = false;
			}
		} else {
			portion = value._unformattedString().substr(startPosition, Math.min(availableLengthInString, $.ig.intDivide(lengthForStringInBlock, 2)));
			charCompression = false;
		}
		var optionFlags = 0;
		{
			if (charCompression == false) {
				optionFlags |= 1;
			}
			if (hasRichText) {
				optionFlags |= 8;
			}
		}
		this._write9(optionFlags);
		if (hasRichText) {
			this._write17(formattedRunCount);
		}
		var encoding = charCompression ? $.ig.excel.Workbook.prototype._invariantCompressedTextEncoding : $.ig.Encoding.prototype.unicode();
		this._write2(encoding.getBytes1(portion));
		var nextStartPosition = startPosition + portion.length;
		if (nextStartPosition < value._unformattedString().length) {
			this._writeFormattedStringHelper(value, nextStartPosition, false, false, lengthType, allowCharCompression, writeFormattingRuns);
		}
		if (hasRichText) {
			for (var i = formattedRunStart; i < formattedStringElement._formattingRuns().count(); i++) {
				var run1 = formattedStringElement._formattingRuns().__inner[i];
				if (this._bytesAvailableInCurrentBlock() < 4) {
					this._closeCurrentBlock();
					this._appendNewBlock();
				}
				this._write17(run1.firstFormattedCharAbsolute());
				var fontIndex = 0;
				if (run1.hasFont()) {
					var saveIndex = run1.getFontInternal1(this.saveManager()._workbook())._saveIndex();
					$.ig.ExcelUtils.prototype.debugAssert($.ig.util.nullableNotEquals(saveIndex, null), "Unknown font index");
					fontIndex = saveIndex.getValueOrDefault();
				}
				this._write17(fontIndex);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteFormattedStringHelper(Infragistics.Documents.Excel.StringElement, System.Int32, System.Boolean, System.Boolean, Infragistics.Documents.Excel.LengthType, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteNewBlock(System.Int32)" />*/
	_writeNewBlock: function (newBlockType) {
		this._writeBlockType(this.__ownerStream, newBlockType);
		this._writeBlockLength(this.__ownerStream, 0, false);
		this.__blocks.add(this._createRecordBlock(this.__ownerStream.position(), 0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream::WriteNewBlock(System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::BlockLengthSize()" />*/
	_blockLengthSize: function () {
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::BlockLengthSize()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::BlockTypeSize()" />*/
	_blockTypeSize: function () {
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::BlockTypeSize()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::DefaultRecordId()" />*/
	_defaultRecordId: function () {
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::DefaultRecordId()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::MaximumBlockSize()" />*/
	_maximumBlockSize: function () {
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::MaximumBlockSize()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BiffRecordStream::Blocks()" />*/
	_blocks: function () {
		return this.__blocks;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BiffRecordStream::Blocks()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::BytesAvailableInCurrentBlock()" />*/
	_bytesAvailableInCurrentBlock: function () {
		this._syncWorkbookStreamPosition();
		return this.__blocks.__inner[this.__currentBlock].maximumBlockLength() - this.__positionInCurrentBlock;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::BytesAvailableInCurrentBlock()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::EndUnderlyingStreamPosition()" />*/
	endUnderlyingStreamPosition: function () {
		var maxPosition = this.__blocks.__inner[this.__blocks.count() - 1].blockEnd();
		if (this.__subStreams != null) {
			var en = this.__subStreams.getEnumerator();
			while (en.moveNext()) {
				var stream = en.current();
				maxPosition = Math.max(maxPosition, stream.endUnderlyingStreamPosition());
			}
		}
		return maxPosition;
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream::EndUnderlyingStreamPosition()" />*/
	,
	__loadManager: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManager Infragistics.Documents.Excel.Serialization.BiffRecordStream::LoadManager()" />*/
	_loadManager: function (value) {
		if (arguments.length === 1) {
			this.__loadManager = value;
			return value;
		} else {
			return this.__loadManager;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManager Infragistics.Documents.Excel.Serialization.BiffRecordStream::LoadManager()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::NextBlockTypeInternal()" />*/
	_nextBlockTypeInternal: function (value) {
		if (arguments.length === 1) {
			this.__nextBlockType = value;
			return value;
		} else {
			return this.__nextBlockType;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::NextBlockTypeInternal()" />*/
	,
	/*<BeginProperty Name="System.IO.Stream Infragistics.Documents.Excel.Serialization.BiffRecordStream::OwnerStream()" />*/
	_ownerStream: function () {
		return this.__ownerStream;
	}
	/*<EndProperty Name="System.IO.Stream Infragistics.Documents.Excel.Serialization.BiffRecordStream::OwnerStream()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::PositionInCurrentBlock()" />*/
	_positionInCurrentBlock: function () {
		return this.__positionInCurrentBlock;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::PositionInCurrentBlock()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::RecordTypeInternal()" />*/
	_recordTypeInternal: function () {
		return this.__recordType;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream::RecordTypeInternal()" />*/
	,
	_saveManager: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManager Infragistics.Documents.Excel.Serialization.BiffRecordStream::SaveManager()" />*/
	saveManager: function (value) {
		if (arguments.length === 1) {
			this._saveManager = value;
			return value;
		} else {
			return this._saveManager;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManager Infragistics.Documents.Excel.Serialization.BiffRecordStream::SaveManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Core.MsoCrypto.InPlaceTransform Infragistics.Documents.Excel.Serialization.BiffRecordStream::Transform()" />*/
	_transform: function () {
		return this.___transform;
	}
	/*<EndProperty Name="Infragistics.Documents.Core.MsoCrypto.InPlaceTransform Infragistics.Documents.Excel.Serialization.BiffRecordStream::Transform()" />*/
	,
	$type: new $.ig.Type('BiffRecordStream', $.ig.Stream.prototype.$type, [$.ig.IBiffRecordStream.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo" />*/

$.ig.util.defType('BiffRecordStream_RecordBlockInfo', 'Object', {
	_blockStart: 0,
	_blockLength: 0,
	_maximumBlockLength: 0,
	init: function (blockStart, blockLength, maximumBlockLength) {
		$.ig.Object.prototype.init.call(this);
		this._blockStart = blockStart;
		this._blockLength = blockLength;
		this._maximumBlockLength = maximumBlockLength;
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::CapBlock()" />*/
	capBlock: function () {
		this._maximumBlockLength = this._blockLength;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::CapBlock()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::BlockEnd()" />*/
	blockEnd: function () {
		return this._blockStart + this._blockLength;
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::BlockEnd()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::BlockLength()" />*/
	blockLength: function (value) {
		if (arguments.length === 1) {
			this._blockLength = value;
			return value;
		} else {
			return this._blockLength;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::BlockLength()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::BlockStart()" />*/
	blockStart: function () {
		return this._blockStart;
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::BlockStart()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::MaximumBlockLength()" />*/
	maximumBlockLength: function () {
		return this._maximumBlockLength;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo::MaximumBlockLength()" />*/
	,
	$type: new $.ig.Type('BiffRecordStream_RecordBlockInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_RecordBlockInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo" />*/

$.ig.util.defType('BiffRecordStream_FormattedStringInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_unformattedText: null,
	_hasRichText: false,
	_asianPhoneticSettingsSize: 0,
	_richTextFormattingRuns: 0,
	$type: new $.ig.Type('BiffRecordStream_FormattedStringInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.TableColumnFilterData" />*/

$.ig.util.defType('TableColumnFilterData', 'Object', {
	_allowedTextValues: null,
	_column: null,
	_needsAUTOFILTER12Record: false,
	_shouldSaveIn2003Formats: false,
	init: function (column) {
		var $self = this;
		$.ig.Object.prototype.init.call(this);
		this._column = column;
		if (this._column.filter() == null) {
			this._shouldSaveIn2003Formats = false;
			return;
		}
		this._shouldSaveIn2003Formats = (function () { var $ret = $self._column.filter()._shouldSaveIn2003Formats($self._needsAUTOFILTER12Record, $self._allowedTextValues); $self._needsAUTOFILTER12Record = $ret.p0; $self._allowedTextValues = $ret.p1; return $ret.ret; }());
	},
	$type: new $.ig.Type('TableColumnFilterData', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.TableColumnFilterData" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream" />*/

$.ig.util.defType('Biff8RecordStream', 'BiffRecordStream', {
	__allowWriteForTXORecord: false,
	__readingTextForTXORecord: false,
	init: function (initNumber, transform) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
				case 3:
					this.init3.apply(this, arguments);
					break;
				case 4:
					this.init4.apply(this, arguments);
					break;
			}
			return;
		}
		this.__allowWriteForTXORecord = true;
		this.__readingTextForTXORecord = false;
		$.ig.BiffRecordStream.prototype.init.call(this, 0, transform);
	},
	init1: function (initNumber, loadManager) {
		$.ig.Biff8RecordStream.prototype.init2.call(this, 2, loadManager, loadManager._workbookStream(), loadManager._workbookStreamReader());
	},
	init2: function (initNumber, loadManager, ownerStream, reader) {
		this.__allowWriteForTXORecord = true;
		this.__readingTextForTXORecord = false;
		$.ig.BiffRecordStream.prototype.init1.call(this, 1, loadManager, ownerStream, reader, loadManager._readRecordTransform());
		loadManager._onRecordLoading(this);
	},
	init3: function (initNumber, saveManager, recordType) {
		this.__allowWriteForTXORecord = true;
		this.__readingTextForTXORecord = false;
		$.ig.BiffRecordStream.prototype.init2.call(this, 2, saveManager, saveManager._workbookStream(), recordType, saveManager._writeRecordTransform());
		saveManager._onRecordSaving(this);
	},
	init4: function (initNumber, saveManager, ownerStream, reader) {
		this.__allowWriteForTXORecord = true;
		this.__readingTextForTXORecord = false;
		$.ig.BiffRecordStream.prototype.init1.call(this, 1, null, ownerStream, reader, saveManager._writeRecordTransform());
		this.saveManager(saveManager);
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::BlockLengthSize()" />*/
	_blockLengthSize: function () {
		return 2;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::BlockLengthSize()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::BlockTypeSize()" />*/
	_blockTypeSize: function () {
		return 2;
	}
	/*<EndProperty Name="System.Int64 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::BlockTypeSize()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::CopyForAlternateStream(System.IO.Stream, System.Int64)" />*/
	_copyForAlternateStream: function (newWorkbookStream, startPositionInNewStream) {
		var copyStream = new $.ig.Biff8RecordStream(0, this._transform());
		this._initializeAlternateStream(copyStream, newWorkbookStream, startPositionInNewStream);
		return copyStream;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::CopyForAlternateStream(System.IO.Stream, System.Int64)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::DefaultRecordId()" />*/
	_defaultRecordId: function () {
		return $.ig.BIFF8RecordType.prototype.$default;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::DefaultRecordId()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::Dispose(System.Boolean)" />*/
	disposeCore: function (disposing) {
		$.ig.ExcelUtils.prototype.debugAssert(disposing, "The stream should have been explicitly closed: " + $.ig.BIFF8RecordType.prototype.getBox(this._recordType()));
		$.ig.BiffRecordStream.prototype.disposeCore.call(this, disposing);
		if (disposing) {
			var loadManager = this._loadManagerBiff8();
			if (loadManager != null) {
				loadManager._onRecordLoaded(this);
			}
			var saveManager = this._saveManagerBiff8();
			if (saveManager != null) {
				saveManager._onRecordSaved(this);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::Dispose(System.Boolean)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::MaximumBlockSize()" />*/
	_maximumBlockSize: function () {
		return $.ig.Biff8RecordStream.prototype._maxBlockSize;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::MaximumBlockSize()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::GetDefaultContinuationBlockType()" />*/
	_getDefaultContinuationBlockType: function () {
		return $.ig.Biff8RecordBase.prototype.getContinuationBlockType(this._recordType());
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::GetDefaultContinuationBlockType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFormattedStringHelper(System.Int32)" />*/
	_readFormattedStringHelper: function (remainingLength) {
		if (this.__readingTextForTXORecord && this.length() == this.position()) {
			this._appendNextBlockIfType($.ig.BIFF8RecordType.prototype.cONTINUE);
		}
		return $.ig.BiffRecordStream.prototype._readFormattedStringHelper.call(this, remainingLength);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream_FormattedStringInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFormattedStringHelper(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadBlockLength(System.IO.BinaryReader)" />*/
	_readBlockLength: function (ownerStreamReader) {
		return ownerStreamReader.readUInt16();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadBlockLength(System.IO.BinaryReader)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadBlockType(System.IO.BinaryReader)" />*/
	_readBlockType: function (ownerStreamReader) {
		return ownerStreamReader.readUInt16();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadBlockType(System.IO.BinaryReader)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ShouldAppendNextBlockIfType(System.Int32, System.Int32)" />*/
	_shouldAppendNextBlockIfType: function (expectedType, actualType) {
		if (this._recordType() == $.ig.BIFF8RecordType.prototype.tXO) {
			if (this._isAllTXODataAppended()) {
				return false;
			}
		}
		if ($.ig.BiffRecordStream.prototype._shouldAppendNextBlockIfType.call(this, expectedType, actualType)) {
			return true;
		}
		var actualBIFF8Type = actualType;
		if (actualBIFF8Type == $.ig.Biff8RecordBase.prototype.getContinuationBlockType(expectedType)) {
			return true;
		}
		if (this._recordType() == $.ig.BIFF8RecordType.prototype.mSODRAWINGGROUP && actualBIFF8Type == $.ig.BIFF8RecordType.prototype.mSODRAWINGGROUP) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ShouldAppendNextBlockIfType(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteBlockLength(System.IO.Stream, System.Int32, System.Boolean)" />*/
	_writeBlockLength: function (ownerStream, length, isAfterLengthPosition) {
		if (isAfterLengthPosition) {
			ownerStream.seek(-2, $.ig.SeekOrigin.prototype.current);
		}
		ownerStream.write($.ig.BitConverter.prototype.getBytes7(length), 0, 2);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteBlockLength(System.IO.Stream, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteBlockType(System.IO.Stream, System.Int32)" />*/
	_writeBlockType: function (ownerStream, type) {
		ownerStream.write($.ig.BitConverter.prototype.getBytes7(type), 0, 2);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteBlockType(System.IO.Stream, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteToCurrentBlock(, System.Int32, System.Int32)" />*/
	_writeToCurrentBlock: function (buffer, offset, count) {
		if (this.__allowWriteForTXORecord == false) {
			$.ig.ExcelUtils.prototype.debugAssert(this._recordType() == $.ig.BIFF8RecordType.prototype.tXO, "allowWriteForTXORecord should only be set to false for TXO records.");
			$.ig.ExcelUtils.prototype.debugFail("Cannot write to TXO record anymore.");
			return count;
		}
		return $.ig.BiffRecordStream.prototype._writeToCurrentBlock.call(this, buffer, offset, count);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteToCurrentBlock(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::DebugLogRecord()" />*/
	_debugLogRecord: function () {
		if ($.ig.WorkbookSerializationDataExcel2003.prototype.debugWriteFullRecords) {
			var oldPosition = this.position();
			this.position(0);
			var data = this._readBytes(this.length());
			if ($.ig.Enum.prototype.isDefined($.ig.BIFF8RecordType.prototype.$type, $.ig.BIFF8RecordType.prototype.getBox(this._recordType()))) {
				$.ig.Debug.prototype.writeLine($.ig.util.stringFormat2($.ig.ExcelUtils.prototype.currentCulture(), "{0}: {1}", [ $.ig.BIFF8RecordType.prototype.getBox(this._recordType()), $.ig.BitConverter.prototype.toString1(data) ]));
			} else {
				$.ig.Debug.prototype.writeLine($.ig.util.stringFormat2($.ig.ExcelUtils.prototype.currentCulture(), "{0:X}: {1}", [ $.ig.BIFF8RecordType.prototype.getBox(this._recordType()), $.ig.BitConverter.prototype.toString1(data) ]));
			}
			this.position(oldPosition);
		} else {
			$.ig.ExcelUtils.prototype.debugWriteLineIf($.ig.WorkbookSerializationDataExcel2003.prototype.debugWriteRecords, $.ig.BIFF8RecordType.prototype.getBox(this._recordType()) + ": " + this.length());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::DebugLogRecord()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ExtractFixedValue(Infragistics.Documents.Excel.Filtering.CustomFilterCondition, Infragistics.Documents.Excel.Filtering.FixedValuesFilter)" />*/
	_extractFixedValue: function (condition, fixedValuesFilter) {
		if (condition != null) {
			if (condition.comparisonOperator() != $.ig.excel.ExcelComparisonOperator.equals || condition._hasWildcards()) {
				return false;
			}
			var stringValue = $.ig.util.cast(String, condition.value());
			if (stringValue == null) {
				return false;
			}
			if (stringValue.length == 0) {
				fixedValuesFilter.includeBlanks(true);
			} else {
				fixedValuesFilter.displayValues().add($.ig.ExcelUtils.prototype.unescapeWildcards(stringValue));
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ExtractFixedValue(Infragistics.Documents.Excel.Filtering.CustomFilterCondition, Infragistics.Documents.Excel.Filtering.FixedValuesFilter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::GetRawColorInfoValues(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem, Infragistics.Documents.Excel.Serialization.BIFF8.XColorType, System.Double, System.UInt32)" />*/
	_getRawColorInfoValues: function (colorInfo, item, colorType, tint, xClrValue) {
		tint = 0;
		xClrValue = 0;
		if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(colorInfo, null)) {
			colorType = $.ig.XColorType.prototype.notSet;
		} else {
			if (colorInfo._tint$i().hasValue()) {
				tint = colorInfo._tint$i().value();
			}
			if (colorInfo.isAutomatic()) {
				colorType = $.ig.XColorType.prototype.auto;
			} else if (colorInfo._color$i().hasValue()) {
				var color = colorInfo._color$i().value();
				if ($.ig.ExcelUtils.prototype.colorIsSystem(color)) {
					colorType = $.ig.XColorType.prototype.indexed;
					xClrValue = $.ig.util.intSToU(colorInfo._getIndex(this.saveManager()._workbook(), item));
				} else {
					colorType = $.ig.XColorType.prototype.rGB;
					xClrValue = $.ig.ExcelUtils.prototype.encodeLongRGBA(colorInfo._color$i().value());
				}
			} else if (colorInfo._themeColorType$i().hasValue()) {
				colorType = $.ig.XColorType.prototype.themed;
				xClrValue = colorInfo._themeColorType$i().value();
			} else {
				$.ig.ExcelUtils.prototype.debugFail("This is unexpected.");
				colorType = $.ig.XColorType.prototype.notSet;
			}
		}
		return {
			p2: colorType,
			p3: tint,
			p4: xClrValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::GetRawColorInfoValues(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem, Infragistics.Documents.Excel.Serialization.BIFF8.XColorType, System.Double, System.UInt32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Filtering.CustomFilterCondition Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::InterpretAFDOper(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper)" />*/
	_interpretAFDOper: function (doper) {
		switch (doper._vt) {
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTUndefined: break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTRk:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTString:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTBoolErr:
				return $.ig.excel.CustomFilterCondition.prototype._createCustomFilterCondition(doper._grbitSign, doper.resolvedValue());
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks: return $.ig.excel.CustomFilterCondition.prototype._createCustomFilterCondition($.ig.ST_FilterOperator.prototype.equal, String.empty());
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTNonBlanks: return $.ig.excel.CustomFilterCondition.prototype._createCustomFilterCondition($.ig.ST_FilterOperator.prototype.notEqual, String.empty());
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown AFDOper.vt value.");
				break;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Filtering.CustomFilterCondition Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::InterpretAFDOper(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::IsAllTXODataAppended()" />*/
	_isAllTXODataAppended: function () {
		var $self = this;
		var originalOwnerPosition = this._ownerStream().position();
		var originalPosition = this.position();
		try {
			this.position(10);
			var stringLength = this._readUInt16();
			if (stringLength == 0) {
				return true;
			}
			if (this._blocks().count() < 3) {
				return false;
			}
			var lengthOfFormattingRuns = this._readUInt16();
			this.position(18);
			var value;
			if ((function () { var $ret = $self._tryReadFormattedString(stringLength, value); value = $ret.p1; return $ret.ret; }()) == false) {
				return false;
			}
			$.ig.ExcelUtils.prototype.debugAssert(value._unformattedString().length == stringLength, "The string in the TXO record does not have the correct length.");
			if (lengthOfFormattingRuns > this.length() - this.position()) {
				return false;
			}
			$.ig.ExcelUtils.prototype.debugAssert(lengthOfFormattingRuns == this.length() - this.position(), "There should not be any other data in the TXO record.");
			return true;
		}
		finally {
			this.position(originalPosition);
			this._ownerStream().position(originalOwnerPosition);
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::IsAllTXODataAppended()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAF12CellIcon(System.Nullable, System.UInt32)" />*/
	_readAF12CellIcon: function (iconset, iconIndex) {
		var iIconSet = this._readUInt32();
		iconIndex = this._readUInt32();
		if (iIconSet == 4294967295) {
			iconset = $.ig.util.toNullable($.ig.ST_IconSetType.prototype.$type, null);
		} else {
			iconset = $.ig.util.toNullable($.ig.ST_IconSetType.prototype.$type, iIconSet);
		}
		return {
			p0: iconset,
			p1: iconIndex
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAF12CellIcon(System.Nullable, System.UInt32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAF12CellIcon(Infragistics.Documents.OfficeOpenXml.Excel.ST_IconSetType, System.UInt32)" />*/
	_writeAF12CellIcon: function (iconset, iconIndex) {
		this._write18(iconset);
		this._write18(iconIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAF12CellIcon(Infragistics.Documents.OfficeOpenXml.Excel.ST_IconSetType, System.UInt32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAF12Criteria(Infragistics.Documents.Excel.Worksheet)" />*/
	_readAF12Criteria: function (worksheet) {
		this._readFrtRefHeader1(worksheet, $.ig.BIFF8RecordType.prototype.cONTINUEFRT12);
		var doper = this._readAFDOper(true);
		if (doper._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTString) {
			doper._stringValue = this._readXLUnicodeStringNoCch($.ig.util.getValue(doper._vtValue));
		}
		return doper;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAF12Criteria(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAF12Criteria(Infragistics.Documents.Excel.WorksheetRegion, Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper)" />*/
	_writeAF12Criteria: function (filterRegion, doper) {
		this._writeFrtRefHeader1(filterRegion, $.ig.BIFF8RecordType.prototype.cONTINUEFRT12);
		this._writeAFDOper(doper, true);
		if (doper._stringValue != null) {
			this._writeXLUnicodeStringNoCch(doper._stringValue);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAF12Criteria(Infragistics.Documents.Excel.WorksheetRegion, Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Filtering.FixedDateGroup Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAF12DateInfo(Infragistics.Documents.Excel.Worksheet)" />*/
	_readAF12DateInfo: function (worksheet) {
		this._readFrtRefHeader1(worksheet, $.ig.BIFF8RecordType.prototype.cONTINUEFRT12);
		var year = this._readUInt16();
		var month = this._readUInt16();
		var day = this._readUInt32();
		var hour = this._readUInt16();
		var minute = this._readUInt16();
		var second = this._readUInt16();
		var unused1 = this._readUInt16();
		var reserved1 = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 0, "The reserved1 value is incorrect.");
		var nodeType = this._readUInt32();
		return $.ig.excel.FixedDateGroup.prototype._createFixedDateGroup(nodeType, year, $.ig.util.toNullable($.ig.Number.prototype.$type, month), $.ig.util.toNullable($.ig.Number.prototype.$type, day), $.ig.util.toNullable($.ig.Number.prototype.$type, hour), $.ig.util.toNullable($.ig.Number.prototype.$type, minute), $.ig.util.toNullable($.ig.Number.prototype.$type, second));
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Filtering.FixedDateGroup Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAF12DateInfo(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAF12DateInfo(Infragistics.Documents.Excel.WorksheetRegion, Infragistics.Documents.Excel.Filtering.FixedDateGroup)" />*/
	_writeAF12DateInfo: function (filterRegion, fixedDateGroup) {
		this._writeFrtRefHeader1(filterRegion, $.ig.BIFF8RecordType.prototype.cONTINUEFRT12);
		this._write17(fixedDateGroup.value().getFullYear());
		this._write17($.ig.Date.prototype.getMonth(fixedDateGroup.value()));
		this._write18($.ig.util.intSToU(fixedDateGroup.value().getDate()));
		this._write17(fixedDateGroup.value().getHours());
		this._write17(fixedDateGroup.value().getMinutes());
		this._write17(fixedDateGroup.value().getSeconds());
		this._write17(0);
		this._write18($.ig.util.intSToU(0));
		this._write18(fixedDateGroup._dateTimeGrouping());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAF12DateInfo(Infragistics.Documents.Excel.WorksheetRegion, Infragistics.Documents.Excel.Filtering.FixedDateGroup)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOper(System.Boolean)" />*/
	_readAFDOper: function (isInAutoFilter12Record) {
		var afdoper = new $.ig.Biff8RecordStream_AFDOper(0);
		afdoper._vt = this.readByte();
		afdoper._grbitSign = this.readByte();
		switch (afdoper._vt) {
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTUndefined:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTNonBlanks:
				this._readBytes(8);
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTRk:
				$.ig.ExcelUtils.prototype.debugAssert(isInAutoFilter12Record == false, "This value cannot appear in AutoFilter12 records.");
				afdoper._vtValue = this._readAFDOperRk();
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble:
				afdoper._vtValue = this._readXnum();
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTString:
				afdoper._vtValue = this._readAFDOperStr(isInAutoFilter12Record);
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTBoolErr:
				afdoper._vtValue = this._readAFDOperBoolErr();
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown AFDOper.vt value.");
				break;
		}
		return afdoper;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOper(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAFDOper(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper, System.Boolean)" />*/
	_writeAFDOper: function (afdoper, isInAutoFilter12Record) {
		this._write9(afdoper._vt);
		this._write9(afdoper._grbitSign);
		switch (afdoper._vt) {
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTUndefined:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks:
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTNonBlanks:
				this._write2(new Array(8));
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble:
				this._writeXnum(afdoper._vtValue);
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTString:
				this._writeAFDOperStr($.ig.util.getValue(afdoper._vtValue), afdoper.hasWildcards(), isInAutoFilter12Record);
				break;
			case $.ig.Biff8RecordStream_AFDOper.prototype.vTBoolErr:
				this._writeAFDOperBoolErr(afdoper._vtValue);
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown AFDOper.vt value.");
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAFDOper(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOperBoolErr()" />*/
	_readAFDOperBoolErr: function () {
		var bes = this._readBes();
		var unused1 = this._readUInt16();
		var unused2 = this._readUInt32();
		return bes;
	}
	/*<EndMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOperBoolErr()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAFDOperBoolErr(System.Object)" />*/
	_writeAFDOperBoolErr: function (value) {
		this._writeBes(value);
		this._write17(0);
		this._write18($.ig.util.intSToU(0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAFDOperBoolErr(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOperRk()" />*/
	_readAFDOperRk: function () {
		var rk = this._readUInt32();
		var unused1 = this._readUInt32();
		return $.ig.ExcelUtils.prototype.decodeRKValue(rk);
	}
	/*<EndMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOperRk()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOperStr(System.Boolean)" />*/
	_readAFDOperStr: function (isInAutoFilter12Record) {
		if (isInAutoFilter12Record == false) {
			var unused1 = this._readUInt32();
		}
		var cch = this.readByte();
		var fCompare = this.readByte();
		$.ig.ExcelUtils.prototype.debugAssert(fCompare == 0 || fCompare == 1, "The fCompare value is incorrect.");
		var reserved1 = this.readByte();
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 0, "The reserved1 value is incorrect.");
		var unused2 = this.readByte();
		if (isInAutoFilter12Record) {
			var unused3 = this._readUInt32();
		}
		return cch;
	}
	/*<EndMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAFDOperStr(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAFDOperStr(System.Byte, System.Boolean, System.Boolean)" />*/
	_writeAFDOperStr: function (cch, hasWildcards, isInAutoFilter12Record) {
		var fCompare = (hasWildcards ? 0 : 1);
		if (isInAutoFilter12Record == false) {
			this._write18($.ig.util.intSToU(0));
		}
		this._write9(cch);
		this._write9(fCompare);
		this._write9(0);
		this._write9(0);
		if (isInAutoFilter12Record) {
			this._write18($.ig.util.intSToU(0));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAFDOperStr(System.Byte, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Filtering.Filter Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAutoFilter(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetTableColumn)" />*/
	_readAutoFilter: function (worksheet, column) {
		var iEntry = this._readUInt16();
		var temp16 = this._readUInt16();
		var wJoin = $.ig.ExcelUtils.prototype.getBits2(temp16, 0, 1);
		var fSimple1 = $.ig.ExcelUtils.prototype.testBit(temp16, 2);
		var fSimple2 = $.ig.ExcelUtils.prototype.testBit(temp16, 3);
		var fTopN = $.ig.ExcelUtils.prototype.testBit(temp16, 4);
		var fTop = $.ig.ExcelUtils.prototype.testBit(temp16, 5);
		var fPercent = $.ig.ExcelUtils.prototype.testBit(temp16, 6);
		var wTopN = $.ig.ExcelUtils.prototype.getBits2(temp16, 7, 15);
		var doper1 = this._readAFDOper(false);
		var doper2 = this._readAFDOper(false);
		if (fTopN) {
			var filterType = $.ig.excel.TopOrBottomFilter.prototype._getFilterType(fPercent, fTop);
			var referenceValue = NaN;
			if (typeof doper1.resolvedValue() === 'number') {
				referenceValue = doper1.resolvedValue();
			}
			var top10Filter = new $.ig.excel.TopOrBottomFilter(2, column, filterType, wTopN, referenceValue);
			$.ig.ExcelUtils.prototype.debugAssert($.ig.util.isNaN(referenceValue) || top10Filter._filterOperator() == doper1._grbitSign, "The doper1 structure was written out incorrectly.");
			return top10Filter;
		}
		if (doper1._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTString) {
			doper1._stringValue = this._readXLUnicodeStringNoCch($.ig.util.getValue(doper1._vtValue));
		}
		if (doper2._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTString) {
			doper2._stringValue = this._readXLUnicodeStringNoCch($.ig.util.getValue(doper2._vtValue));
		}
		var condition1 = $.ig.Biff8RecordStream.prototype._interpretAFDOper(doper1);
		var condition2 = $.ig.Biff8RecordStream.prototype._interpretAFDOper(doper2);
		if (condition1 != null || condition2 != null) {
			var fixedValuesFilter = new $.ig.excel.FixedValuesFilter(column);
			if ($.ig.Biff8RecordStream.prototype._extractFixedValue(condition1, fixedValuesFilter) && $.ig.Biff8RecordStream.prototype._extractFixedValue(condition2, fixedValuesFilter)) {
				var allowedValuesCount = fixedValuesFilter._getAllowedItemCount();
				if (allowedValuesCount == 0) {
					return null;
				}
				if (allowedValuesCount == 1 || wJoin == $.ig.excel.ConditionalOperator.or) {
					var dataAreaTopRowIndex;
					var dataAreaBottomRowIndex;
					var $ret = column.table()._getDataAreaRowIndexes1(dataAreaTopRowIndex, dataAreaBottomRowIndex);
					dataAreaTopRowIndex = $ret.p0;
					dataAreaBottomRowIndex = $ret.p1;
					var foundMatchingCell = false;
					for (var rowIndex = dataAreaTopRowIndex; rowIndex <= dataAreaBottomRowIndex; rowIndex++) {
						var row = worksheet.rows()._getIfCreated(rowIndex);
						if (fixedValuesFilter._meetsCriteria(worksheet, row, column._worksheetColumnIndex())) {
							foundMatchingCell = true;
							break;
						}
					}
					if (foundMatchingCell) {
						return fixedValuesFilter;
					}
				}
			}
		}
		if (condition1 == null) {
			if (condition2 == null) {
				return null;
			}
			condition1 = condition2;
			condition2 = null;
		}
		return new $.ig.excel.CustomFilter(1, column, condition1, condition2, wJoin);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Filtering.Filter Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadAutoFilter(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetTableColumn)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAutoFilter(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Serialization.BIFF8.TableColumnFilterData)" />*/
	_writeAutoFilter: function (column, filterData) {
		var wJoin = $.ig.excel.ConditionalOperator.and;
		var doper1 = null;
		var doper2 = null;
		var customFilter = $.ig.util.cast($.ig.excel.CustomFilter.prototype.$type, column.filter());
		if (customFilter != null) {
			wJoin = customFilter.conditionalOperator();
			doper1 = new $.ig.Biff8RecordStream_AFDOper(3, this.saveManager(), customFilter.condition1());
			doper2 = new $.ig.Biff8RecordStream_AFDOper(3, this.saveManager(), customFilter.condition2());
		}
		var fixedValuesFilter = $.ig.util.cast($.ig.excel.FixedValuesFilter.prototype.$type, column.filter());
		if (fixedValuesFilter != null && filterData._shouldSaveIn2003Formats && filterData._needsAUTOFILTER12Record == false) {
			if (fixedValuesFilter.includeBlanks()) {
				var blankDoper = new $.ig.Biff8RecordStream_AFDOper(0);
				blankDoper._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks;
				if (filterData._allowedTextValues != null && filterData._allowedTextValues.count() != 0) {
					wJoin = $.ig.excel.ConditionalOperator.or;
					doper1 = new $.ig.Biff8RecordStream_AFDOper(1, $.ig.ExcelUtils.prototype.escapeWildcards(filterData._allowedTextValues.item(0)));
					doper2 = blankDoper;
				} else {
					doper1 = blankDoper;
				}
			} else if (filterData._allowedTextValues != null && filterData._allowedTextValues.count() != 0) {
				doper1 = new $.ig.Biff8RecordStream_AFDOper(1, $.ig.ExcelUtils.prototype.escapeWildcards(filterData._allowedTextValues.item(0)));
				if (filterData._allowedTextValues.count() != 1) {
					wJoin = $.ig.excel.ConditionalOperator.or;
					doper2 = new $.ig.Biff8RecordStream_AFDOper(1, $.ig.ExcelUtils.prototype.escapeWildcards(filterData._allowedTextValues.item(1)));
				}
			}
		}
		var fTopN = false;
		var fTop = false;
		var fPercent = false;
		var wTopN = 0;
		var topOrBottomFilter = $.ig.util.cast($.ig.excel.TopOrBottomFilter.prototype.$type, column.filter());
		if (topOrBottomFilter != null) {
			fTopN = true;
			fTop = topOrBottomFilter._isTop();
			fPercent = topOrBottomFilter._isPercent();
			wTopN = topOrBottomFilter.value();
			if ($.ig.util.isNaN(topOrBottomFilter._referenceValue()) == false) {
				doper1 = new $.ig.Biff8RecordStream_AFDOper(2, topOrBottomFilter._referenceValue(), topOrBottomFilter._filterOperator());
			}
		}
		if (doper1 == null) {
			doper1 = new $.ig.Biff8RecordStream_AFDOper(0);
		}
		if (doper2 == null) {
			doper2 = new $.ig.Biff8RecordStream_AFDOper(0);
		}
		this._write17(0);
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.addBits1(temp16, wJoin, 0, 1);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, fTopN, 4);
		temp16 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit2(temp16, fTop, 5);
		temp16 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.setBit2(temp16, fPercent, 6);
		temp16 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.addBits1(temp16, wTopN, 7, 15);
		temp16 = $ret4.p0;
		this._write17(temp16);
		this._writeAFDOper(doper1, false);
		this._writeAFDOper(doper2, false);
		var str1 = $.ig.util.cast(String, doper1.resolvedValue());
		if (str1 != null) {
			this._writeXLUnicodeStringNoCch(str1);
		}
		var str2 = $.ig.util.cast(String, doper2.resolvedValue());
		if (str2 != null) {
			this._writeXLUnicodeStringNoCch(str2);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteAutoFilter(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Serialization.BIFF8.TableColumnFilterData)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadBes()" />*/
	_readBes: function () {
		var bBoolErr = this.readByte();
		var fError = this.readByte();
		$.ig.ExcelUtils.prototype.debugAssert(fError == 0 || fError == 1, "The fError value is incorrect.");
		if (fError == 0) {
			$.ig.ExcelUtils.prototype.debugAssert(bBoolErr == 0 || bBoolErr == 1, "The bBoolErr value is incorrect.");
			return bBoolErr != 0;
		}
		return $.ig.excel.ErrorValue.prototype._fromValue(bBoolErr);
	}
	/*<EndMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadBes()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteBes(System.Object)" />*/
	_writeBes: function (value) {
		var bBoolErr;
		var fError;
		if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null) {
			bBoolErr = value ? 1 : 0;
			fError = 0;
		} else {
			bBoolErr = (value)._value();
			fError = 1;
		}
		this._write9(bBoolErr);
		this._write9(fError);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteBes(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCachedDiskHeader(Infragistics.Documents.Excel.WorksheetTableColumn, System.Boolean)" />*/
	_readCachedDiskHeader: function (column, fSaveStyleName) {
		var cbdxfHdrDisk = this._readUInt32();
		var rgHdrDisk = null;
		if (cbdxfHdrDisk != 0) {
			rgHdrDisk = this._readDXFN12List(cbdxfHdrDisk);
		}
		var headerStyle = null;
		if (fSaveStyleName) {
			var strStyleName = this._readXLUnicodeString();
			headerStyle = this._loadManager()._workbook().styles()._item1(strStyleName);
			$.ig.ExcelUtils.prototype.debugAssert(headerStyle != null, "We should have a style here.");
		}
		if (rgHdrDisk != null || headerStyle != null) {
			this._loadManager()._setAreaFormatInfo$1($.ig.excel.WorksheetTableColumnArea.prototype.$type, column.areaFormats(), $.ig.excel.WorksheetTableColumnArea.headerCell, $.ig.excel.WorksheetTableColumn.prototype._canAreaFormatValueBeSet, headerStyle, rgHdrDisk);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCachedDiskHeader(Infragistics.Documents.Excel.WorksheetTableColumn, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCachedDiskHeader(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.WorkbookStyle, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeCachedDiskHeader: function (column, dxfHeaderStyle, dxfHeader) {
		var cbdxfHdrDiskPosition = this.position();
		this._write18($.ig.util.intSToU(0));
		this._writeDXFN12ListAndSizeField(cbdxfHdrDiskPosition, dxfHeader);
		if (dxfHeaderStyle != null) {
			this._writeXLUnicodeString(dxfHeaderStyle.name());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCachedDiskHeader(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.WorkbookStyle, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCFColor()" />*/
	_readCFColor: function () {
		var xclrType = this._readUInt32();
		var xClrValue = this._readUInt32();
		var numTint = this._readDouble();
		var tint = $.ig.util.toNullable(Number, null);
		if (numTint != 0) {
			tint = $.ig.util.toNullable(Number, numTint);
		}
		return $.ig.ExcelUtils.prototype.getColorInfoFromRawValues(this._loadManager()._workbook(), xclrType, xClrValue, tint);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCFColor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCFColor(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	_writeCFColor: function (colorInfo, item) {
		var colorType;
		var tint;
		var xClrValue;
		var $ret = this._getRawColorInfoValues(colorInfo, item, colorType, tint, xClrValue);
		colorType = $ret.p2;
		tint = $ret.p3;
		xClrValue = $ret.p4;
		this._write18(colorType);
		this._write18(xClrValue);
		this._write10(tint);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCFColor(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCFFlag(System.Nullable, System.UInt32)" />*/
	_readCFFlag: function (iconset, iconIndex) {
		var iIconSet = this._readUInt32();
		iconIndex = this._readUInt32();
		if (iIconSet == 4294967295) {
			iconset = $.ig.util.toNullable($.ig.ST_IconSetType.prototype.$type, null);
		} else {
			iconset = $.ig.util.toNullable($.ig.ST_IconSetType.prototype.$type, iIconSet);
		}
		return {
			p0: iconset,
			p1: iconIndex
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCFFlag(System.Nullable, System.UInt32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCFFlag(Infragistics.Documents.OfficeOpenXml.Excel.ST_IconSetType, System.UInt32)" />*/
	_writeCFFlag: function (iconset, iconIndex) {
		this._write18(iconset);
		this._write18(iconIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCFFlag(Infragistics.Documents.OfficeOpenXml.Excel.ST_IconSetType, System.UInt32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Sorting.SortCondition Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCondDataValue(Infragistics.Documents.OfficeOpenXml.Excel.ST_SortBy, Infragistics.Documents.Excel.Sorting.SortDirection)" />*/
	_readCondDataValue: function (sortOn, sortDirection) {
		var condDataValue = this._readUInt32();
		var sortCondition;
		switch (sortOn) {
			case $.ig.ST_SortBy.prototype.value:
				$.ig.ExcelUtils.prototype.debugAssert(condDataValue == 0, "The condDataValue value is incorrect.");
				sortCondition = new $.ig.excel.OrderedSortCondition(sortDirection);
				break;
			case $.ig.ST_SortBy.prototype.cellColor:
				sortCondition = $.ig.excel.FillSortCondition.prototype._createFillSortCondition(this._loadManager(), $.ig.util.toNullable($.ig.Number.prototype.$type, condDataValue), sortDirection);
				break;
			case $.ig.ST_SortBy.prototype.fontColor:
				sortCondition = $.ig.excel.FontColorSortCondition.prototype._createFontColorSortCondition(this._loadManager(), $.ig.util.toNullable($.ig.Number.prototype.$type, condDataValue), sortDirection);
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown sortOn value: " + $.ig.ST_SortBy.prototype.getBox(sortOn));
				sortCondition = null;
				break;
		}
		var reserved = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved value is incorrect.");
		return sortCondition;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Sorting.SortCondition Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadCondDataValue(Infragistics.Documents.OfficeOpenXml.Excel.ST_SortBy, Infragistics.Documents.Excel.Sorting.SortDirection)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCondDataValue(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Sorting.SortCondition)" />*/
	_writeCondDataValue: function (column, sortCondition) {
		this._write18(this.saveManager()._getColumnSortConditionDxfIds(column).getValueOrDefault());
		this._write18($.ig.util.intSToU(0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteCondDataValue(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Sorting.SortCondition)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFALC(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	_readDXFALC: function (format, alchNinch, alcvNinch, wrapNinch, trotNinch, kintoNinch, cIndentNinch, fShrinkNinch, fMergeCellNinch, iReadingOrderNinch) {
		var temp32 = this._readUInt32();
		var alc = $.ig.ExcelUtils.prototype.getBits3(temp32, 0, 2);
		var fWrap = $.ig.ExcelUtils.prototype.testBit1(temp32, 3);
		var alcv = $.ig.ExcelUtils.prototype.getBits3(temp32, 4, 6);
		var fJustLast = $.ig.ExcelUtils.prototype.testBit1(temp32, 7);
		$.ig.ExcelUtils.prototype.debugAssert(fJustLast == false || alc == $.ig.excel.HorizontalCellAlignment.distributed, "The fJustLast value is incorrect.");
		var trot = $.ig.ExcelUtils.prototype.getBits3(temp32, 8, 15);
		var cIndent = $.ig.ExcelUtils.prototype.getBits3(temp32, 16, 19);
		var fShrinkToFit = $.ig.ExcelUtils.prototype.testBit1(temp32, 20);
		var fMergedCell = $.ig.ExcelUtils.prototype.testBit1(temp32, 21);
		var iReadingOrder = $.ig.ExcelUtils.prototype.getBits3(temp32, 22, 23);
		var iIndent = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(-15 <= iIndent && iIndent <= 255, "The iIndent value is incorrect");
		if (alchNinch == false) {
			format.alignment(alc);
		}
		if (alcvNinch == false) {
			format.verticalAlignment(alcv);
		}
		if (wrapNinch == false) {
			format._wrapText$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(fWrap));
		}
		if (trotNinch == false) {
			format.rotation(trot);
		}
		if (kintoNinch == false && fJustLast) {
			format._addIndent(true);
		}
		if (cIndentNinch == false) {
			format.indent(cIndent);
			if (iIndent != 255) {
				format.indent(format.indent() + iIndent);
			}
		}
		if (fShrinkNinch == false) {
			format._shrinkToFit$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(fShrinkToFit));
		}
		if (fMergeCellNinch == false) {
		}
		if (iReadingOrderNinch == false) {
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFALC(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFALC(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	_writeDXFALC: function (format, alchNinch, alcvNinch, wrapNinch, trotNinch, kintoNinch, cIndentNinch, fShrinkNinch, fMergeCellNinch, iReadingOrderNinch) {
		var alc = $.ig.excel.HorizontalCellAlignment.general;
		var fWrap = false;
		var alcv = $.ig.excel.VerticalCellAlignment.bottom;
		var fJustLast = false;
		var trot = 0;
		var cIndent = 0;
		var fShrinkToFit = false;
		var fMergedCell = false;
		var iReadingOrder = 0;
		var iIndent = 255;
		if (alchNinch == false) {
			alc = format._alignmentResolved();
		}
		if (alcvNinch == false) {
			alcv = format._verticalAlignmentResolved();
		}
		if (wrapNinch == false) {
			fWrap = $.ig.util.nullableEquals(format._wrapTextResolved(), true);
		}
		if (trotNinch == false) {
			trot = format._rotationResolved();
		}
		if (cIndentNinch == false) {
			var indentResolved = format._indentResolved();
			cIndent = Math.min($.ig.WorksheetCellFormatData.prototype._maxIndent2003, indentResolved);
			if ($.ig.WorksheetCellFormatData.prototype._maxIndent2003 < indentResolved) {
				iIndent = indentResolved - cIndent;
			}
		}
		if (fShrinkNinch == false) {
			fShrinkToFit = $.ig.util.nullableEquals(format._shrinkToFitResolved(), true);
		}
		var temp32 = 0;
		var $ret = $.ig.ExcelUtils.prototype.addBits2(temp32, alc, 0, 2);
		temp32 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit4(temp32, fWrap, 3);
		temp32 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.addBits2(temp32, alcv, 4, 6);
		temp32 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.setBit4(temp32, fJustLast, 7);
		temp32 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.addBits2(temp32, trot, 8, 15);
		temp32 = $ret4.p0;
		var $ret5 = $.ig.ExcelUtils.prototype.addBits2(temp32, cIndent, 16, 19);
		temp32 = $ret5.p0;
		var $ret6 = $.ig.ExcelUtils.prototype.setBit4(temp32, fShrinkToFit, 20);
		temp32 = $ret6.p0;
		var $ret7 = $.ig.ExcelUtils.prototype.setBit4(temp32, fMergedCell, 21);
		temp32 = $ret7.p0;
		var $ret8 = $.ig.ExcelUtils.prototype.addBits2(temp32, iReadingOrder, 22, 23);
		temp32 = $ret8.p0;
		this._write18(temp32);
		this._write12(iIndent);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFALC(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFBdr(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	_readDXFBdr: function (format, glLeftNinch, glRightNinch, glTopNinch, glBottomNinch, glDiagDownNinch, glDiagUpNinch) {
		var temp32 = this._readUInt32();
		var dgLeft = $.ig.ExcelUtils.prototype.getBits3(temp32, 0, 3);
		var dgRight = $.ig.ExcelUtils.prototype.getBits3(temp32, 4, 7);
		var dgTop = $.ig.ExcelUtils.prototype.getBits3(temp32, 8, 11);
		var dgBottom = $.ig.ExcelUtils.prototype.getBits3(temp32, 12, 15);
		var icvLeft = $.ig.ExcelUtils.prototype.getBits3(temp32, 16, 22);
		var icvRight = $.ig.ExcelUtils.prototype.getBits3(temp32, 23, 29);
		var bitDiagDown = $.ig.ExcelUtils.prototype.testBit1(temp32, 30);
		var bitDiagUp = $.ig.ExcelUtils.prototype.testBit1(temp32, 31);
		temp32 = this._readUInt32();
		var icvTop = $.ig.ExcelUtils.prototype.getBits3(temp32, 0, 6);
		var icvBottom = $.ig.ExcelUtils.prototype.getBits3(temp32, 7, 13);
		var icvDiag = $.ig.ExcelUtils.prototype.getBits3(temp32, 14, 20);
		var dgDiag = $.ig.ExcelUtils.prototype.getBits3(temp32, 21, 24);
		var workbook = this._loadManager()._workbook();
		if (glLeftNinch == false) {
			format.leftBorderStyle(dgLeft);
			if (dgLeft != $.ig.excel.CellBorderLineStyle.none) {
				format.leftBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvLeft));
			}
		}
		if (glRightNinch == false) {
			format.rightBorderStyle(dgRight);
			if (dgRight != $.ig.excel.CellBorderLineStyle.none) {
				format.rightBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvRight));
			}
		}
		if (glTopNinch == false) {
			format.topBorderStyle(dgTop);
			if (dgTop != $.ig.excel.CellBorderLineStyle.none) {
				format.topBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvTop));
			}
		}
		if (glBottomNinch == false) {
			format.bottomBorderStyle(dgBottom);
			if (dgBottom != $.ig.excel.CellBorderLineStyle.none) {
				format.bottomBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvBottom));
			}
		}
		var diagonalBorders = $.ig.excel.DiagonalBorders.none;
		if (glDiagDownNinch == false && bitDiagDown) {
			diagonalBorders |= $.ig.excel.DiagonalBorders.diagonalDown;
		}
		if (glDiagUpNinch == false && bitDiagUp) {
			diagonalBorders |= $.ig.excel.DiagonalBorders.diagonalUp;
		}
		if (glDiagDownNinch == false || glDiagUpNinch == false) {
			format.diagonalBorders(diagonalBorders);
			format.diagonalBorderStyle(dgDiag);
			if (dgDiag != $.ig.excel.CellBorderLineStyle.none) {
				format.diagonalBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvDiag));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFBdr(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFBdr(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	_writeDXFBdr: function (format, glLeftNinch, glRightNinch, glTopNinch, glBottomNinch, glDiagDownNinch, glDiagUpNinch) {
		var dgLeft = $.ig.excel.CellBorderLineStyle.none;
		var dgRight = $.ig.excel.CellBorderLineStyle.none;
		var dgTop = $.ig.excel.CellBorderLineStyle.none;
		var dgBottom = $.ig.excel.CellBorderLineStyle.none;
		var icvLeft = 0;
		var icvRight = 0;
		var bitDiagDown = false;
		var bitDiagUp = false;
		var icvTop = 0;
		var icvBottom = 0;
		var icvDiag = 0;
		var dgDiag = $.ig.excel.CellBorderLineStyle.none;
		var workbook = this.saveManager()._workbook();
		if (glLeftNinch == false) {
			dgLeft = format._leftBorderStyleResolved();
			if (dgLeft != $.ig.excel.CellBorderLineStyle.none) {
				icvLeft = format._leftBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
			}
		}
		if (glRightNinch == false) {
			dgRight = format._rightBorderStyleResolved();
			if (dgRight != $.ig.excel.CellBorderLineStyle.none) {
				icvRight = format._rightBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
			}
		}
		if (glTopNinch == false) {
			dgTop = format._topBorderStyleResolved();
			if (dgTop != $.ig.excel.CellBorderLineStyle.none) {
				icvTop = format._topBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
			}
		}
		if (glBottomNinch == false) {
			dgBottom = format._bottomBorderStyleResolved();
			if (dgBottom != $.ig.excel.CellBorderLineStyle.none) {
				icvBottom = format._bottomBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
			}
		}
		if (glDiagDownNinch == false || glDiagUpNinch == false) {
			dgDiag = format._diagonalBorderStyleResolved();
			if (dgDiag != $.ig.excel.CellBorderLineStyle.none) {
				icvDiag = format._diagonalBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
			}
			var diagonalBorders = format._diagonalBordersResolved();
			if ($.ig.ExcelUtils.prototype.testFlag(diagonalBorders, $.ig.excel.DiagonalBorders.diagonalDown)) {
				bitDiagDown = true;
			}
			if ($.ig.ExcelUtils.prototype.testFlag(diagonalBorders, $.ig.excel.DiagonalBorders.diagonalUp)) {
				bitDiagUp = true;
			}
		}
		var temp32 = 0;
		var $ret = $.ig.ExcelUtils.prototype.addBits2(temp32, dgLeft, 0, 3);
		temp32 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.addBits2(temp32, dgRight, 4, 7);
		temp32 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.addBits2(temp32, dgTop, 8, 11);
		temp32 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.addBits2(temp32, dgBottom, 12, 15);
		temp32 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvLeft, 16, 22);
		temp32 = $ret4.p0;
		var $ret5 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvRight, 23, 29);
		temp32 = $ret5.p0;
		var $ret6 = $.ig.ExcelUtils.prototype.setBit4(temp32, bitDiagDown, 30);
		temp32 = $ret6.p0;
		var $ret7 = $.ig.ExcelUtils.prototype.setBit4(temp32, bitDiagUp, 31);
		temp32 = $ret7.p0;
		this._write18(temp32);
		temp32 = 0;
		var $ret8 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvTop, 0, 6);
		temp32 = $ret8.p0;
		var $ret9 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvBottom, 7, 13);
		temp32 = $ret9.p0;
		var $ret10 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvDiag, 14, 20);
		temp32 = $ret10.p0;
		var $ret11 = $.ig.ExcelUtils.prototype.addBits2(temp32, dgDiag, 21, 24);
		temp32 = $ret11.p0;
		this._write18(temp32);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFBdr(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFFntD(Infragistics.Documents.Excel.IWorkbookFont, System.Boolean)" />*/
	_readDXFFntD: function (font, fIfntNinch) {
		var cchFont = this.readByte();
		var stFontNameStart = this.position();
		var stFontName = null;
		if (cchFont != 0) {
			stFontName = this._readXLUnicodeStringNoCch(cchFont);
		}
		var stFontNameEnd = this.position();
		var unused1 = this._readBytes(63 - (stFontNameEnd - stFontNameStart));
		var stxp = this._readStxp();
		var icvFore = this._readInt32();
		var reserved = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved value is incorrect.");
		var tsNinch = this._readTs();
		var fSssNinch = this._readUInt32();
		var fUlsNinch = this._readUInt32();
		var fBlsNinch = this._readUInt32();
		var unused = this._readUInt32();
		var ich = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(ich >= -1, "The ich value is incorrect.");
		$.ig.ExcelUtils.prototype.debugAssert(ich == -1 || ich == 0, "Figure out what to do when this is not -1 or 0.");
		var cch = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(cch == -1 || cch == 0, "Figure out what to do when this is not -1 or 0.");
		var iFnt = this._readUInt16();
		if (fIfntNinch || iFnt > 0) {
			font.name(stFontName);
		}
		if (stxp._twpHeight != -1) {
			font.height(stxp._twpHeight);
		}
		if (tsNinch._ftsItalic == false) {
			font._italic$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(stxp._ts._ftsItalic));
		}
		if (tsNinch._ftsStrikeout == false) {
			font._strikeout$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(stxp._ts._ftsStrikeout));
		}
		if (fBlsNinch == 0) {
			var t1 = stxp._bls;
			L0: while (true) {
				switch (t1) {
					case $.ig.ExcelUtils.prototype.biff8RecordStream_FontNormalWeight:
						font._bold$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, false));
						break;
					case $.ig.ExcelUtils.prototype.biff8RecordStream_FontBoldWeight:
						font._bold$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, true));
						break;
					case 65535: break;
					default:
						$.ig.ExcelUtils.prototype.debugFail("Unknown stxp.bls value.");
						if (stxp._bls < $.ig.ExcelUtils.prototype.biff8RecordStream_FontNormalWeight) {
							t1 = $.ig.ExcelUtils.prototype.biff8RecordStream_FontNormalWeight;
							continue L0;
						}
						t1 = $.ig.ExcelUtils.prototype.biff8RecordStream_FontBoldWeight;
						continue L0;
				}
				break;
			}
		}
		if (fSssNinch == 0) {
			if (stxp._sss != 65535) {
				var testValue = stxp._sss;
				if ($.ig.Enum.prototype.isDefined($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, $.ig.excel.FontSuperscriptSubscriptStyle.prototype.getBox(testValue))) {
					font.superscriptSubscriptStyle(testValue);
				} else {
					$.ig.ExcelUtils.prototype.debugFail("Unknown stxp.sss value.");
				}
			}
		}
		if (fUlsNinch == 0) {
			if (stxp._uls != 255) {
				var testValue1 = stxp._uls;
				if ($.ig.Enum.prototype.isDefined($.ig.excel.FontUnderlineStyle.prototype.$type, $.ig.excel.FontUnderlineStyle.prototype.getBox(testValue1))) {
					font.underlineStyle(testValue1);
				} else {
					$.ig.ExcelUtils.prototype.debugFail("Unknown stxp.uls value.");
				}
			}
		}
		if (icvFore != -1) {
			font.colorInfo(new $.ig.excel.WorkbookColorInfo(this._loadManager()._workbook().palette()._getColorAtAbsoluteIndex(icvFore)));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFFntD(Infragistics.Documents.Excel.IWorkbookFont, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFFntD(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	_writeDXFFntD: function (font) {
		var stFontNameStart = this.position() + 1;
		if (font.name() == null) {
			this.writeByte(0);
		} else {
			this.writeByte(font.name().length);
			this._writeXLUnicodeStringNoCch1(font.name(), true);
		}
		var unused1Size = 63 - (this.position() - stFontNameStart);
		this._write2(new Array(unused1Size));
		var ts = new $.ig.Biff8RecordStream_Ts();
		ts._ftsItalic = $.ig.util.nullableEquals(font._italic$i(), true);
		ts._ftsStrikeout = $.ig.util.nullableEquals(font._strikeout$i(), true);
		var stxp = new $.ig.Biff8RecordStream_Stxp();
		stxp._twpHeight = font.height();
		stxp._ts = ts;
		switch ($.ig.ExcelUtils.prototype.toInt(font._bold$i())) {
			case 0:
				stxp._bls = 65535;
				break;
			case 2:
				stxp._bls = 400;
				break;
			case 1:
				stxp._bls = 700;
				break;
		}
		stxp._sss = font.superscriptSubscriptStyle();
		stxp._uls = font.underlineStyle();
		this._writeStxp(stxp);
		var icvFore = -1;
		if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(font.colorInfo(), null)) {
			icvFore = font.colorInfo()._getIndex(this.saveManager()._workbook(), $.ig.ColorableItem.prototype.cellFont);
		}
		this._write12(icvFore);
		this._write18($.ig.util.intSToU(0));
		var tsNinch = new $.ig.Biff8RecordStream_Ts();
		tsNinch._ftsItalic = ($.ig.util.nullableEquals(font._italic$i(), null));
		tsNinch._ftsStrikeout = ($.ig.util.nullableEquals(font._strikeout$i(), null));
		this._writeTs(tsNinch);
		var fSssNinch = (font.superscriptSubscriptStyle() == $.ig.excel.FontSuperscriptSubscriptStyle.$default) ? $.ig.util.intSToU(1) : 0;
		this._write18(fSssNinch);
		var fUlsNinch = (font.underlineStyle() == $.ig.excel.FontUnderlineStyle.$default) ? $.ig.util.intSToU(1) : 0;
		this._write18(fUlsNinch);
		var fBlsNinch = ($.ig.util.nullableEquals(font._bold$i(), null)) ? $.ig.util.intSToU(1) : 0;
		this._write18(fBlsNinch);
		this._write18($.ig.util.intSToU(0));
		this._write12(0);
		this._write12(0);
		if (font.name() == null) {
			this._write17(0);
		} else {
			this._write17(1);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFFntD(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFN()" />*/
	_readDXFN: function () {
		var temp32 = this._readUInt32();
		var alchNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 0);
		var alcvNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 1);
		var wrapNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 2);
		var trotNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 3);
		var kintoNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 4);
		var cIndentNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 5);
		var fShrinkNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 6);
		var fMergeCellNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 7);
		var lockedNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 8);
		var hiddenNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 9);
		var glLeftNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 10);
		var glRightNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 11);
		var glTopNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 12);
		var glBottomNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 13);
		var glDiagDownNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 14);
		var glDiagUpNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 15);
		var flsNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 16);
		var icvFNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 17);
		var icvBNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 18);
		var ifmtNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 19);
		var fIfntNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 20);
		var unused1 = $.ig.ExcelUtils.prototype.testBit1(temp32, 21);
		var reserved1 = $.ig.ExcelUtils.prototype.getBits3(temp32, 22, 24);
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 0, "The reserved1 value is incorrect.");
		var ibitAtrNum = $.ig.ExcelUtils.prototype.testBit1(temp32, 25);
		var ibitAtrFnt = $.ig.ExcelUtils.prototype.testBit1(temp32, 26);
		var ibitAtrAlc = $.ig.ExcelUtils.prototype.testBit1(temp32, 27);
		var ibitAtrBdr = $.ig.ExcelUtils.prototype.testBit1(temp32, 28);
		var ibitAtrPat = $.ig.ExcelUtils.prototype.testBit1(temp32, 29);
		var ibitAtrProt = $.ig.ExcelUtils.prototype.testBit1(temp32, 30);
		var iReadingOrderNinch = $.ig.ExcelUtils.prototype.testBit1(temp32, 31);
		var temp16 = this._readUInt16();
		var fIfmtUser = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		var unused2 = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		var fNewBorder = $.ig.ExcelUtils.prototype.testBit(temp16, 2);
		var reserved2 = $.ig.ExcelUtils.prototype.getBits2(temp16, 3, 14);
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 0, "The reserved2 value is incorrect.");
		var fZeroInited = $.ig.ExcelUtils.prototype.testBit(temp16, 15);
		var format = this._loadManager()._workbook()._createNewWorksheetCellFormatInternal($.ig.WorksheetCellFormatType.prototype.differentialFormat);
		if (ibitAtrNum) {
			this._readDXFNum(format, fIfmtUser, ifmtNinch);
		}
		if (ibitAtrFnt) {
			this._readDXFFntD(format.font(), fIfntNinch);
		}
		if (ibitAtrAlc) {
			this._readDXFALC(format, alchNinch, alcvNinch, wrapNinch, trotNinch, kintoNinch, cIndentNinch, fShrinkNinch, fMergeCellNinch, iReadingOrderNinch);
		}
		if (ibitAtrBdr) {
			this._readDXFBdr(format, glLeftNinch, glRightNinch, glTopNinch, glBottomNinch, glDiagDownNinch, glDiagUpNinch);
		}
		if (ibitAtrPat) {
			this._readDXFPat(format, flsNinch, icvFNinch, icvBNinch);
		}
		if (ibitAtrProt) {
			this._readDXFProt(format, lockedNinch, hiddenNinch);
		}
		return format;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFN()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeDXFN: function (format) {
		var alchNinch = format.alignment() == $.ig.excel.HorizontalCellAlignment.$default;
		var alcvNinch = format.verticalAlignment() == $.ig.excel.VerticalCellAlignment.$default;
		var wrapNinch = $.ig.util.nullableEquals(format._wrapText$i(), null);
		var trotNinch = format.rotation() == -1;
		var kintoNinch = true;
		var cIndentNinch = format.indent() == -1;
		var fShrinkNinch = $.ig.util.nullableEquals(format._shrinkToFit$i(), null);
		var fMergeCellNinch = true;
		var lockedNinch = $.ig.util.nullableEquals(format._locked$i(), null);
		var hiddenNinch = true;
		var glLeftNinch = format.leftBorderStyle() == $.ig.excel.CellBorderLineStyle.$default && $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(format.leftBorderColorInfo(), null);
		var glRightNinch = format.rightBorderStyle() == $.ig.excel.CellBorderLineStyle.$default && $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(format.rightBorderColorInfo(), null);
		var glTopNinch = format.topBorderStyle() == $.ig.excel.CellBorderLineStyle.$default && $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(format.topBorderColorInfo(), null);
		var glBottomNinch = format.bottomBorderStyle() == $.ig.excel.CellBorderLineStyle.$default && $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(format.bottomBorderColorInfo(), null);
		var glDiagDownNinch = format.diagonalBorderStyle() == $.ig.excel.CellBorderLineStyle.$default && $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(format.diagonalBorderColorInfo(), null) && format.diagonalBorders() == $.ig.excel.DiagonalBorders.$default;
		var glDiagUpNinch = glDiagDownNinch;
		var flsNinch = format.fill() == null;
		var icvFNinch = flsNinch;
		var icvBNinch = flsNinch;
		var ifmtNinch = format._formatStringIndex() == -1;
		var iReadingOrderNinch = true;
		var ibitAtrNum = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyNumberFormatting);
		var ibitAtrFnt = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting);
		var ibitAtrAlc = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyAlignmentFormatting);
		var ibitAtrBdr = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyBorderFormatting);
		var ibitAtrPat = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyFillFormatting);
		var ibitAtrProt = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyProtectionFormatting);
		var temp32 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit4(temp32, alchNinch, 0);
		temp32 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit4(temp32, alcvNinch, 1);
		temp32 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit4(temp32, wrapNinch, 2);
		temp32 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.setBit4(temp32, trotNinch, 3);
		temp32 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.setBit4(temp32, kintoNinch, 4);
		temp32 = $ret4.p0;
		var $ret5 = $.ig.ExcelUtils.prototype.setBit4(temp32, cIndentNinch, 5);
		temp32 = $ret5.p0;
		var $ret6 = $.ig.ExcelUtils.prototype.setBit4(temp32, fShrinkNinch, 6);
		temp32 = $ret6.p0;
		var $ret7 = $.ig.ExcelUtils.prototype.setBit4(temp32, fMergeCellNinch, 7);
		temp32 = $ret7.p0;
		var $ret8 = $.ig.ExcelUtils.prototype.setBit4(temp32, lockedNinch, 8);
		temp32 = $ret8.p0;
		var $ret9 = $.ig.ExcelUtils.prototype.setBit4(temp32, hiddenNinch, 9);
		temp32 = $ret9.p0;
		var $ret10 = $.ig.ExcelUtils.prototype.setBit4(temp32, glLeftNinch, 10);
		temp32 = $ret10.p0;
		var $ret11 = $.ig.ExcelUtils.prototype.setBit4(temp32, glRightNinch, 11);
		temp32 = $ret11.p0;
		var $ret12 = $.ig.ExcelUtils.prototype.setBit4(temp32, glTopNinch, 12);
		temp32 = $ret12.p0;
		var $ret13 = $.ig.ExcelUtils.prototype.setBit4(temp32, glBottomNinch, 13);
		temp32 = $ret13.p0;
		var $ret14 = $.ig.ExcelUtils.prototype.setBit4(temp32, glDiagDownNinch, 14);
		temp32 = $ret14.p0;
		var $ret15 = $.ig.ExcelUtils.prototype.setBit4(temp32, glDiagUpNinch, 15);
		temp32 = $ret15.p0;
		var $ret16 = $.ig.ExcelUtils.prototype.setBit4(temp32, flsNinch, 16);
		temp32 = $ret16.p0;
		var $ret17 = $.ig.ExcelUtils.prototype.setBit4(temp32, icvFNinch, 17);
		temp32 = $ret17.p0;
		var $ret18 = $.ig.ExcelUtils.prototype.setBit4(temp32, icvBNinch, 18);
		temp32 = $ret18.p0;
		var $ret19 = $.ig.ExcelUtils.prototype.setBit4(temp32, ifmtNinch, 19);
		temp32 = $ret19.p0;
		var $ret20 = $.ig.ExcelUtils.prototype.setBit4(temp32, true, 20);
		temp32 = $ret20.p0;
		var $ret21 = $.ig.ExcelUtils.prototype.setBit4(temp32, true, 21);
		temp32 = $ret21.p0;
		var $ret22 = $.ig.ExcelUtils.prototype.setBit4(temp32, ibitAtrNum, 25);
		temp32 = $ret22.p0;
		var $ret23 = $.ig.ExcelUtils.prototype.setBit4(temp32, ibitAtrFnt, 26);
		temp32 = $ret23.p0;
		var $ret24 = $.ig.ExcelUtils.prototype.setBit4(temp32, ibitAtrAlc, 27);
		temp32 = $ret24.p0;
		var $ret25 = $.ig.ExcelUtils.prototype.setBit4(temp32, ibitAtrBdr, 28);
		temp32 = $ret25.p0;
		var $ret26 = $.ig.ExcelUtils.prototype.setBit4(temp32, ibitAtrPat, 29);
		temp32 = $ret26.p0;
		var $ret27 = $.ig.ExcelUtils.prototype.setBit4(temp32, ibitAtrProt, 30);
		temp32 = $ret27.p0;
		var $ret28 = $.ig.ExcelUtils.prototype.setBit4(temp32, iReadingOrderNinch, 31);
		temp32 = $ret28.p0;
		this._write18(temp32);
		var fIfmtUser = false;
		if (ibitAtrNum) {
			fIfmtUser = (this.saveManager()._workbook()._formats().isStandardFormat(format._formatStringIndexResolved()) == false);
		}
		var temp16 = 0;
		var $ret29 = $.ig.ExcelUtils.prototype.setBit2(temp16, fIfmtUser, 0);
		temp16 = $ret29.p0;
		var $ret30 = $.ig.ExcelUtils.prototype.setBit2(temp16, true, 1);
		temp16 = $ret30.p0;
		var $ret31 = $.ig.ExcelUtils.prototype.setBit2(temp16, false, 2);
		temp16 = $ret31.p0;
		var $ret32 = $.ig.ExcelUtils.prototype.setBit2(temp16, true, 15);
		temp16 = $ret32.p0;
		this._write17(temp16);
		if (ibitAtrNum) {
			this._writeDXFNum(format, fIfmtUser);
		}
		if (ibitAtrFnt) {
			this._writeDXFFntD(format.font());
		}
		if (ibitAtrAlc) {
			this._writeDXFALC(format, alchNinch, alcvNinch, wrapNinch, trotNinch, kintoNinch, cIndentNinch, fShrinkNinch, fMergeCellNinch, iReadingOrderNinch);
		}
		if (ibitAtrBdr) {
			this._writeDXFBdr(format, glLeftNinch, glRightNinch, glTopNinch, glBottomNinch, glDiagDownNinch, glDiagUpNinch);
		}
		if (ibitAtrPat) {
			this._writeDXFPat(format, flsNinch, icvFNinch, icvBNinch);
		}
		if (ibitAtrProt) {
			this._writeDXFProt(format, lockedNinch, hiddenNinch);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFN12List(System.Int32)" />*/
	_readDXFN12List: function (size) {
		var endDXFN12List = this.position() + size;
		var dxfn = this._readDXFN();
		if (this.position() < endDXFN12List) {
			this._readXFExtNoFRT(dxfn);
		}
		return dxfn;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFN12List(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN12List(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeDXFN12List: function (format) {
		this._writeDXFN(format);
		this._writeXFExtNoFRT(format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN12List(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFN12NoCB()" />*/
	_readDXFN12NoCB: function () {
		var dxfn = this._readDXFN();
		if (this.position() < this.length()) {
			this._readXFExtNoFRT(dxfn);
		}
		return dxfn;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFN12NoCB()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN12NoCB(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeDXFN12NoCB: function (format) {
		this._writeDXFN(format);
		this._writeXFExtNoFRT(format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN12NoCB(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFNum(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean)" />*/
	_readDXFNum: function (format, fIfmtUser, ifmtNinch) {
		if (fIfmtUser) {
			this._readDXFNumUsr(format);
		} else {
			this._readDXFNumIFmt(format, ifmtNinch);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFNum(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFNum(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	_writeDXFNum: function (format, fIfmtUser) {
		if (fIfmtUser) {
			this._writeDXFNumUsr(format);
		} else {
			this._writeDXFNumIFmt(format);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFNum(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFNumIFmt(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	_readDXFNumIFmt: function (format, ifmtNinch) {
		var unused = this.readByte();
		var ifmt = this.readByte();
		if (ifmtNinch == false) {
			format._formatStringIndex($.ig.WorkbookFormatCollection.prototype.fromDxfIndex(ifmt));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFNumIFmt(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFNumIFmt(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeDXFNumIFmt: function (format) {
		this.writeByte(0);
		var ifmt = $.ig.WorkbookFormatCollection.prototype.toDxfIndex($.ig.util.intSToU(format._formatStringIndexResolved()));
		this.writeByte(ifmt);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFNumIFmt(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFNumUsr(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_readDXFNumUsr: function (format) {
		var cb = this._readUInt16();
		var fmt = this._readXLUnicodeString();
		format.formatString(fmt);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFNumUsr(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFNumUsr(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeDXFNumUsr: function (format) {
		var recordStart = this.position();
		this._write17(0);
		this._writeXLUnicodeString(format._formatStringResolved());
		var recordEnd = this.position();
		var cb = (recordEnd - recordStart);
		this.position(recordStart);
		this._write17(cb);
		this.position(recordEnd);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFNumUsr(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFPat(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean)" />*/
	_readDXFPat: function (format, flsNinch, icvFNinch, icvBNinch) {
		var temp32 = this._readUInt32();
		var fls = $.ig.ExcelUtils.prototype.getBits3(temp32, 10, 15);
		var icvForeground = $.ig.ExcelUtils.prototype.getBits3(temp32, 16, 22);
		var icvBackground = $.ig.ExcelUtils.prototype.getBits3(temp32, 23, 29);
		var fillPattern = $.ig.excel.FillPatternStyle.none;
		if (flsNinch == false) {
			fillPattern = fls;
		}
		var workbook = this._loadManager()._workbook();
		var foregroundColorInfo = null;
		if (icvFNinch == false) {
			foregroundColorInfo = new $.ig.excel.WorkbookColorInfo(workbook, icvForeground);
		}
		var backgroundColorInfo = null;
		if (icvBNinch == false) {
			backgroundColorInfo = new $.ig.excel.WorkbookColorInfo(workbook, icvBackground);
		}
		if (flsNinch && icvFNinch && icvBNinch) {
			return;
		}
		format.fill(new $.ig.excel.CellFillPattern(backgroundColorInfo, foregroundColorInfo, fillPattern, format, true));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFPat(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFPat(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean)" />*/
	_writeDXFPat: function (format, flsNinch, icvFNinch, icvBNinch) {
		var fls = $.ig.excel.FillPatternStyle.none;
		var icvForeground = 0;
		var icvBackground = 0;
		var fillResolved = format._fillResolved();
		if (flsNinch == false) {
			fls = format._getFillPattern(fillResolved);
		}
		var workbook = this.saveManager()._workbook();
		if (icvFNinch == false) {
			icvForeground = format._getFileFormatFillPatternColor(fillResolved, false, true)._getIndex(workbook, $.ig.ColorableItem.prototype.cellFill);
		}
		if (icvBNinch == false) {
			icvBackground = format._getFileFormatFillPatternColor(fillResolved, true, true)._getIndex(workbook, $.ig.ColorableItem.prototype.cellFill);
		}
		var temp32 = 0;
		var $ret = $.ig.ExcelUtils.prototype.addBits2(temp32, fls, 10, 15);
		temp32 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvForeground, 16, 22);
		temp32 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvBackground, 23, 29);
		temp32 = $ret2.p0;
		this._write18(temp32);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFPat(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFProt(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean)" />*/
	_readDXFProt: function (format, lockedNinch, hiddenNinch) {
		var temp16 = this._readUInt16();
		var fLocked = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		var fHidden = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		if (lockedNinch == false) {
			format._locked$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(fLocked));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadDXFProt(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFProt(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean)" />*/
	_writeDXFProt: function (format, lockedNinch, hiddenNinch) {
		var fLocked = true;
		var fHidden = false;
		if (lockedNinch == false) {
			fLocked = $.ig.util.nullableEquals(format._lockedResolved(), true);
		}
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, fLocked, 0);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, fHidden, 1);
		temp16 = $ret1.p0;
		this._write17(temp16);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFProt(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.ExtProp Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadExtProp()" />*/
	_readExtProp: function () {
		var startPosition = this.position();
		var extType = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.ExtPropType.prototype.$type, $.ig.ExtPropType.prototype.getBox(extType)), "This is not a valid extProp.");
		var cb = this._readUInt16();
		try {
			switch (extType) {
				case $.ig.ExtPropType.prototype.backgroundColor:
				case $.ig.ExtPropType.prototype.bottomBorderColor:
				case $.ig.ExtPropType.prototype.cellTextColor:
				case $.ig.ExtPropType.prototype.diagonalBorderColor:
				case $.ig.ExtPropType.prototype.foregroundColor:
				case $.ig.ExtPropType.prototype.leftBorderColor:
				case $.ig.ExtPropType.prototype.rightBorderColor:
				case $.ig.ExtPropType.prototype.topBorderColor:
					return new $.ig.ExtPropColorLoaded(this._readFullColorExt(), extType);
				case $.ig.ExtPropType.prototype.fontScheme:
					var fontScheme = this.readByte();
					$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.FontScheme.prototype.$type, $.ig.FontScheme.prototype.getBox(fontScheme)), "This is not a valid FontScheme.");
					return new $.ig.ExtPropFontScheme(fontScheme);
				case $.ig.ExtPropType.prototype.gradientFill: return new $.ig.ExtPropGradientFillLoaded(this._readXFExtGradient());
				case $.ig.ExtPropType.prototype.textIndentationLevel:
					var textIndentationLevel = this._readUInt16();
					$.ig.ExcelUtils.prototype.debugAssert(textIndentationLevel <= $.ig.WorksheetCellFormatData.prototype._maxIndent2007, "This is not a valid TextIndentationLevel.");
					textIndentationLevel = Math.min($.ig.WorksheetCellFormatData.prototype._maxIndent2007, textIndentationLevel);
					return new $.ig.ExtPropTextIndentationLevel(textIndentationLevel);
				default:
					$.ig.ExcelUtils.prototype.debugFail("Unknown ExtPropType: " + $.ig.ExtPropType.prototype.getBox(extType));
					return null;
			}
		}
		finally {
			var endPosition = startPosition + cb;
			$.ig.ExcelUtils.prototype.debugAssert(this.position() == endPosition, "We did not read in the full ExtProp.");
			this.position(endPosition);
		}
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.ExtProp Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadExtProp()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteExtProp(Infragistics.Documents.Excel.Serialization.BIFF8.ExtProp)" />*/
	_writeExtProp: function (extProp) {
		if (extProp == null) {
			$.ig.ExcelUtils.prototype.debugFail("The extProp is null.");
			return;
		}
		var startPosition = this.position();
		this._write17(extProp.extType());
		this._write17(0);
		extProp.save(this);
		var endPostion = this.position();
		var cb = (endPostion - startPosition);
		this.position(startPosition + 2);
		this._write11(cb);
		this.position(endPostion);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteExtProp(Infragistics.Documents.Excel.Serialization.BIFF8.ExtProp)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetProtectedRange Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFeatProtection()" />*/
	_readFeatProtection: function () {
		var fSD = this._readUInt32();
		var wPassword = this._readUInt32();
		var stTitle = this._readXLUnicodeString();
		var sdBytes = null;
		if (fSD != 0) {
			sdBytes = this._readSDContainer();
		}
		var range = new $.ig.excel.WorksheetProtectedRange(stTitle);
		if (wPassword != 0) {
			range.__passwordInfo.pendingValidationInfo($.ig.ProtectionValidationInfo.prototype.create1(wPassword));
		}
		if (sdBytes != null) {
			range._initializeSecurityDescriptor(sdBytes);
		}
		return range;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetProtectedRange Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFeatProtection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFeatProtection(Infragistics.Documents.Excel.WorksheetProtectedRange)" />*/
	_writeFeatProtection: function (range) {
		var sdBytes = range._getSecurityDescriptorAsBinaryForm();
		var fsd = $.ig.util.intSToU((sdBytes != null && sdBytes.length > 0 ? 1 : 0));
		$.ig.CryptoUtilities.prototype.writeUInt32(this, fsd);
		var wPassword = range.__passwordInfo.getXorPasswordValue();
		$.ig.CryptoUtilities.prototype.writeUInt32(this, (!$.ig.util.nullableIsNull(wPassword) ? wPassword.value() : 0));
		this._writeXLUnicodeString(range.title());
		if (fsd != 0) {
			this._writeSDContainer(sdBytes);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFeatProtection(Infragistics.Documents.Excel.WorksheetProtectedRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Filtering.Filter Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFeat11FdaAutoFilter(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetTableColumn)" />*/
	_readFeat11FdaAutoFilter: function (worksheet, column) {
		var cbAutoFilter = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(cbAutoFilter <= 2080, "The cbAutoFilter value is incorrect");
		var unused = this._readUInt16();
		if (cbAutoFilter == 0) {
			return null;
		}
		return this._readAutoFilter(worksheet, column);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Filtering.Filter Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFeat11FdaAutoFilter(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetTableColumn)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFeat11FdaAutoFilter(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Serialization.BIFF8.TableColumnFilterData)" />*/
	_writeFeat11FdaAutoFilter: function (column, filterData) {
		var cbAutoFilterPosition = this.position();
		this._write18($.ig.util.intSToU(0));
		this._write17(65535);
		if (filterData != null && filterData._shouldSaveIn2003Formats) {
			var start = this.position();
			this._writeAutoFilter(column, filterData);
			var end = this.position();
			var size = (end - start);
			this.position(cbAutoFilterPosition);
			this._write17(size);
			this.position(end);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFeat11FdaAutoFilter(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Serialization.BIFF8.TableColumnFilterData)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetTableColumn Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFeat11FieldDataItem(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetTable, System.Boolean, System.UInt32)" />*/
	_readFeat11FieldDataItem: function (worksheet, table, fSingleCell, crwHeader) {
		var $self = this;
		var idField = this._readUInt32();
		var lfdt = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(lfdt == 0, "The lfdt value is incorrect.");
		var lfxidt = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(lfdt == 0, "The lfxidt value is incorrect.");
		var ilta = this._readUInt32();
		var cbFmtAgg = this._readUInt32();
		var istnAgg = this._readInt32();
		var temp32 = this._readUInt32();
		var fAutoFilter = $.ig.ExcelUtils.prototype.testBit1(temp32, 0);
		var fAutoFilterHidden = $.ig.ExcelUtils.prototype.testBit1(temp32, 1);
		var fLoadXmapi = $.ig.ExcelUtils.prototype.testBit1(temp32, 2);
		$.ig.ExcelUtils.prototype.debugAssert(fLoadXmapi == false, "The fLoadXmapi value is incorrect.");
		var fLoadFmla = $.ig.ExcelUtils.prototype.testBit1(temp32, 3);
		$.ig.ExcelUtils.prototype.debugAssert(fLoadFmla == false, "The fLoadFmla value is incorrect.");
		var unused1 = $.ig.ExcelUtils.prototype.getBits3(temp32, 4, 5);
		var reserved2 = $.ig.ExcelUtils.prototype.testBit1(temp32, 6);
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == false, "The reserved2 value is incorrect.");
		var fLoadTotalFmla = $.ig.ExcelUtils.prototype.testBit1(temp32, 7);
		$.ig.ExcelUtils.prototype.debugAssert(ilta == $.ig.ST_TotalsRowFunction.prototype.custom || fLoadTotalFmla == false, "The fLoadTotalFmla value is incorrect.");
		var fLoadTotalArray = $.ig.ExcelUtils.prototype.testBit1(temp32, 8);
		$.ig.ExcelUtils.prototype.debugAssert(fLoadTotalArray == false || fLoadTotalFmla, "The fLoadTotalArray value is incorrect.");
		var fSaveStyleName = $.ig.ExcelUtils.prototype.testBit1(temp32, 9);
		var fLoadTotalStr = $.ig.ExcelUtils.prototype.testBit1(temp32, 10);
		$.ig.ExcelUtils.prototype.debugAssert(ilta == 0 || fLoadTotalStr == false, "The fLoadTotalStr value is incorrect.");
		var fAutoCreateCalcCol = $.ig.ExcelUtils.prototype.testBit1(temp32, 11);
		var unused2 = $.ig.ExcelUtils.prototype.getBits3(temp32, 12, 31);
		var cbFmtInsertRow = this._readUInt32();
		var istnInsertRow = this._readInt32();
		var strFieldName = this._readXLUnicodeString();
		$.ig.ExcelUtils.prototype.debugAssert(strFieldName != null && 1 <= strFieldName.length && strFieldName.length <= 255, "The strFieldName value is incorrect.");
		var columnName = strFieldName;
		if (fSingleCell == false) {
			var strCaption = this._readXLUnicodeString();
			$.ig.ExcelUtils.prototype.debugAssert(strCaption != null && 1 <= strCaption.length && strCaption.length <= 255, "The strCaption value is incorrect.");
			columnName = strCaption;
		}
		var column = table._insertColumn1(idField);
		column.name(columnName);
		column.totalFormula(this._loadManager()._workbook()._getTotalFormula(column, ilta));
		var totalsDxfStyle = this._loadManagerBiff8()._getLoadedStyle(istnAgg);
		var totalsDxf = null;
		if (cbFmtAgg != 0) {
			totalsDxf = this._readDXFN12List(cbFmtAgg);
		}
		var dataDxfStyle = this._loadManagerBiff8()._getLoadedStyle(istnInsertRow);
		var dataDxf = null;
		if (cbFmtInsertRow != 0) {
			dataDxf = this._readDXFN12List(cbFmtInsertRow);
		}
		if (fAutoFilter) {
			column.filter(this._readFeat11FdaAutoFilter(worksheet, column));
		}
		if (fLoadXmapi) {
			$.ig.ExcelUtils.prototype.debugFail("Load the rgXmap.");
		}
		if (fLoadFmla) {
			$.ig.ExcelUtils.prototype.debugFail("Load the fmla.");
		}
		if (fLoadTotalFmla) {
			var type = fLoadTotalArray ? $.ig.FormulaType.prototype.arrayFormula : $.ig.FormulaType.prototype.formula;
			var remainingData = this._readBytes((this.length() - this.position()));
			var dataIndex = 0;
			var totalFmla = (function () { var $ret = $self._loadManagerBiff8()._loadFormula(type, remainingData, dataIndex); remainingData = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
			this.seek(dataIndex - remainingData.length, $.ig.SeekOrigin.prototype.current);
			column.totalFormula(totalFmla);
		}
		if (fLoadTotalStr) {
			var strTotal = this._readXLUnicodeString();
			column.totalLabel(strTotal);
		}
		if (crwHeader == 0 && fSingleCell == false) {
			this._readCachedDiskHeader(column, fSaveStyleName);
		}
		this._loadManager()._setAreaFormatInfo$1($.ig.excel.WorksheetTableColumnArea.prototype.$type, column.areaFormats(), $.ig.excel.WorksheetTableColumnArea.dataArea, $.ig.excel.WorksheetTableColumn.prototype._canAreaFormatValueBeSet, dataDxfStyle, dataDxf);
		this._loadManager()._setAreaFormatInfo$1($.ig.excel.WorksheetTableColumnArea.prototype.$type, column.areaFormats(), $.ig.excel.WorksheetTableColumnArea.totalCell, $.ig.excel.WorksheetTableColumn.prototype._canAreaFormatValueBeSet, totalsDxfStyle, totalsDxf);
		if (fAutoCreateCalcCol) {
			var dataAreaTopRowIndex;
			var dataAreaBottomRowIndex;
			var $ret = table._getDataAreaRowIndexes1(dataAreaTopRowIndex, dataAreaBottomRowIndex);
			dataAreaTopRowIndex = $ret.p0;
			dataAreaBottomRowIndex = $ret.p1;
			var formula = worksheet.rows().item(dataAreaBottomRowIndex).cells().item(column._worksheetColumnIndex()).formula();
			if (formula != null) {
				formula = formula._toNonSharedFormula(dataAreaBottomRowIndex, column._worksheetColumnIndex(), this._loadManager()._workbook().currentFormat());
				column._setInitialColumnFormula(formula);
			}
		}
		return column;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetTableColumn Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFeat11FieldDataItem(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetTable, System.Boolean, System.UInt32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFeat11FieldDataItem(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.SortedList, System.Boolean)" />*/
	_writeFeat11FieldDataItem: function (column, columnsFilterData, fSingleCell) {
		var dxfDataStyle;
		var dxfData;
		var $ret = this.saveManager()._getAreaFormatInfo$1($.ig.excel.WorksheetTableColumnArea.prototype.$type, column.areaFormats(), $.ig.excel.WorksheetTableColumnArea.dataArea, dxfDataStyle, dxfData);
		dxfDataStyle = $ret.p2;
		dxfData = $ret.p3;
		var dxfTotalsStyle;
		var dxfTotals;
		var $ret1 = this.saveManager()._getAreaFormatInfo$1($.ig.excel.WorksheetTableColumnArea.prototype.$type, column.areaFormats(), $.ig.excel.WorksheetTableColumnArea.totalCell, dxfTotalsStyle, dxfTotals);
		dxfTotalsStyle = $ret1.p2;
		dxfTotals = $ret1.p3;
		var istnInsertRow = -1;
		if (dxfDataStyle != null) {
			istnInsertRow = this._saveManagerBiff8()._styles().indexOf(dxfDataStyle);
		}
		var istnAgg = -1;
		if (dxfTotalsStyle != null) {
			istnAgg = this._saveManagerBiff8()._styles().indexOf(dxfTotalsStyle);
		}
		this._write18(column._id());
		this._write18($.ig.util.intSToU(0));
		this._write18($.ig.util.intSToU(0));
		var ilta = this.saveManager()._workbook()._getTotalRowFunction(column);
		this._write18(ilta);
		var cbFmtAggPosition = this.position();
		this._write18($.ig.util.intSToU(0));
		this._write12(istnAgg);
		var filterData;
		var $ret2 = columnsFilterData._tryGetValue(column.index(), filterData);
		filterData = $ret2.p1;
		var fAutoFilter = (filterData != null && filterData._shouldSaveIn2003Formats) || column.table().isFilterUIVisible();
		var writeCustomFormula = ilta == $.ig.ST_TotalsRowFunction.prototype.custom;
		var writeTotalLabel = ilta == $.ig.ST_TotalsRowFunction.prototype.none && column.table().isTotalsRowVisible() == false && column.totalLabel() != null;
		var dxfHeaderStyle = null;
		var dxfHeader = null;
		if (column.table().isHeaderRowVisible() == false) {
			var $ret3 = this.saveManager()._getAreaFormatInfo$1($.ig.excel.WorksheetTableColumnArea.prototype.$type, column.areaFormats(), $.ig.excel.WorksheetTableColumnArea.headerCell, dxfHeaderStyle, dxfHeader);
			dxfHeaderStyle = $ret3.p2;
			dxfHeader = $ret3.p3;
		}
		var fSaveStyleName = (dxfHeaderStyle != null);
		var temp32 = 0;
		var $ret4 = $.ig.ExcelUtils.prototype.setBit4(temp32, fAutoFilter, 0);
		temp32 = $ret4.p0;
		var $ret5 = $.ig.ExcelUtils.prototype.setBit4(temp32, writeCustomFormula, 7);
		temp32 = $ret5.p0;
		var $ret6 = $.ig.ExcelUtils.prototype.setBit4(temp32, writeCustomFormula && $.ig.util.cast($.ig.excel.ArrayFormula.prototype.$type, column.totalFormula()) !== null, 8);
		temp32 = $ret6.p0;
		var $ret7 = $.ig.ExcelUtils.prototype.setBit4(temp32, fSaveStyleName, 9);
		temp32 = $ret7.p0;
		var $ret8 = $.ig.ExcelUtils.prototype.setBit4(temp32, writeTotalLabel, 10);
		temp32 = $ret8.p0;
		var $ret9 = $.ig.ExcelUtils.prototype.setBit4(temp32, column.columnFormula() != null, 11);
		temp32 = $ret9.p0;
		this._write18(temp32);
		var cbFmtInsertRowPosition = this.position();
		this._write18($.ig.util.intSToU(0));
		this._write12(istnInsertRow);
		this._writeXLUnicodeString(column._id().toString());
		if (fSingleCell == false) {
			this._writeXLUnicodeString(column.name());
		}
		this._writeDXFN12ListAndSizeField(cbFmtAggPosition, dxfTotals);
		this._writeDXFN12ListAndSizeField(cbFmtInsertRowPosition, dxfData);
		if (fAutoFilter) {
			this._writeFeat11FdaAutoFilter(column, filterData);
		}
		if (writeCustomFormula) {
			this._saveManagerBiff8()._saveFormula(column.totalFormula(), true, false, true);
		}
		if (writeTotalLabel) {
			this._writeXLUnicodeString(column.totalLabel());
		}
		if (column.table().isHeaderRowVisible() == false) {
			this._writeCachedDiskHeader(column, dxfHeaderStyle, dxfHeader);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFeat11FieldDataItem(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.SortedList, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFileMoniker()" />*/
	_readFileMoniker: function () {
		var cAnti = this._readUInt16();
		var ansiLength = this._readUInt32();
		var ansiBytes = this._readBytes(ansiLength);
		var ansiPath = $.ig.excel.Workbook.prototype._invariantCompressedTextEncoding.getString1(ansiBytes, 0, ansiLength - 1);
		for (var i = 0; i < cAnti; i++) {
			ansiPath = "..\\" + ansiPath;
		}
		var endServer = this._readUInt16();
		var versionNumber = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(versionNumber == 57005, "The versionNumber value is not as expected");
		var reserved1 = this._readBytes(16);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality(new $.ig.Guid(1, reserved1), new $.ig.Guid()), "The reserved1 value is not as expected");
		var reserved2 = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 0, "The reserved2 value is not as expected");
		var cbUnicodePathSize = this._readUInt32();
		if (cbUnicodePathSize == 0) {
			return ansiPath;
		}
		var cbUnicodePathBytes = this._readUInt32();
		var usKeyValue = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(usKeyValue == 3, "The usKeyValue value is not as expected");
		var unicodePathBytes = this._readBytes(cbUnicodePathBytes);
		var unicodePath = $.ig.Encoding.prototype.unicode().getString(unicodePathBytes);
		for (var i1 = 0; i1 < cAnti; i1++) {
			unicodePath = "..\\" + unicodePath;
		}
		return unicodePath;
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFileMoniker()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFileMoniker(System.String)" />*/
	_writeFileMoniker: function (value) {
		var cAnti = 0;
		while (value.startsWith("..\\")) {
			value = value.substr(3);
			cAnti++;
		}
		this._write17(cAnti);
		var ansiBytes = $.ig.excel.Workbook.prototype._invariantCompressedTextEncoding.getBytes1(value);
		this._write18($.ig.util.intSToU((ansiBytes.length + 1)));
		this._write2(ansiBytes);
		this.writeByte(0);
		this._write17(65535);
		this._write17(57005);
		this._write2(new Array(16));
		this._write18($.ig.util.intSToU(0));
		if (cAnti == 0 && $.ig.excel.Workbook.prototype._invariantCompressedTextEncoding.getString(ansiBytes) == value) {
			this._write18($.ig.util.intSToU(0));
		} else {
			var cbUnicodePathSize = (value.length * 2) + 6;
			this._write18($.ig.util.intSToU(cbUnicodePathSize));
			var cbUnicodePathBytes = value.length * 2;
			this._write18($.ig.util.intSToU(cbUnicodePathBytes));
			this._write17(3);
			this._write2($.ig.Encoding.prototype.unicode().getBytes1(value));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFileMoniker(System.String)" />*/
	,
	/*<BeginMethod Name="System.DateTime Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFileTime()" />*/
	_readFileTime: function () {
		var dwLowDateTime = this._readUInt32();
		var dwHighDateTime = this._readUInt32();
		var fileTime = $.ig.util.u32BitwiseOr($.ig.util.u32LS(dwHighDateTime, 32), dwLowDateTime);
		return $.ig.Date.prototype.fromFileTimeUtc(fileTime);
	}
	/*<EndMethod Name="System.DateTime Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFileTime()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.FontScheme Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFontScheme()" />*/
	_readFontScheme: function () {
		return this.readByte();
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.FontScheme Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFontScheme()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFontScheme(Infragistics.Documents.Excel.Serialization.BIFF8.FontScheme)" />*/
	_writeFontScheme: function (fontScheme) {
		this._write9(fontScheme);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFontScheme(Infragistics.Documents.Excel.Serialization.BIFF8.FontScheme)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFormat(System.UInt16, System.String)" />*/
	_readFormat: function (numFmtId, format) {
		numFmtId = this._readUInt16();
		format = this._readXLUnicodeString();
		return {
			p0: numFmtId,
			p1: format
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFormat(System.UInt16, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFormat(System.UInt16, System.String)" />*/
	_writeFormat: function (numFmtId, format) {
		this._write17(numFmtId);
		this._writeXLUnicodeString(format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFormat(System.UInt16, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtHeader()" />*/
	_readFrtHeader: function () {
		var rt = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(rt == this._recordTypeInternal(), "The repeated type does not match.");
		var frtFlags = this._readUInt16();
		this.seek(8, $.ig.SeekOrigin.prototype.current);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtHeader()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtHeader()" />*/
	_writeFrtHeader: function () {
		this._write17(this._recordTypeInternal());
		this._write17(0);
		this._write2(new Array(8));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtHeader()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtHeaderU(Infragistics.Documents.Excel.Worksheet)" />*/
	_readFrtHeaderU: function (worksheet) {
		var rt = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(rt == this._recordTypeInternal(), "The repeated type does not match.");
		var frtFlags = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(frtFlags == 1, "The frtFlags are incorrect.");
		return this._readRef8U(worksheet);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtHeaderU(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtHeaderU(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_writeFrtHeaderU: function (region) {
		this._write17(this._recordTypeInternal());
		this._write17(1);
		this._writeRef8U(region);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtHeaderU(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtRefHeader(Infragistics.Documents.Excel.Worksheet)" />*/
	_readFrtRefHeader: function (worksheet) {
		return this._readFrtRefHeader1(worksheet, this._recordType());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtRefHeader(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtRefHeader(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	_readFrtRefHeader1: function (worksheet, recordType) {
		var rt = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(rt == recordType, "The repeated type does not match.");
		var frtFlags = this._readUInt16();
		if ($.ig.ExcelUtils.prototype.testBit(frtFlags, 0)) {
			return this._readRef8U(worksheet);
		}
		this.seek(8, $.ig.SeekOrigin.prototype.current);
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtRefHeader(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtRefHeader(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_writeFrtRefHeader: function (region) {
		this._writeFrtRefHeader1(region, this._recordType());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtRefHeader(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtRefHeader(Infragistics.Documents.Excel.WorksheetRegion, Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	_writeFrtRefHeader1: function (region, recordType) {
		this._write17(recordType);
		if (region != null) {
			this._write17(1);
			this._writeRef8U(region);
		} else {
			this._write17(0);
			this._write2(new Array(8));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtRefHeader(Infragistics.Documents.Excel.WorksheetRegion, Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtRefHeaderNoGrbit(Infragistics.Documents.Excel.Worksheet)" />*/
	_readFrtRefHeaderNoGrbit: function (worksheet) {
		var rt = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(rt == this._recordTypeInternal(), "The repeated type does not match.");
		return this._readRef8U(worksheet);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFrtRefHeaderNoGrbit(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtRefHeaderNoGrbit(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_writeFrtRefHeaderNoGrbit: function (region) {
		this._write17(this._recordTypeInternal());
		this._writeRef8U(region);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFrtRefHeaderNoGrbit(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.FullColorExtInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFullColorExt()" />*/
	_readFullColorExt: function () {
		var info = new $.ig.FullColorExtInfo();
		info._colorType = this._readUInt16();
		info._nTintShade = this._readInt16();
		info._xClrValue = this._readUInt32();
		this.seek(8, $.ig.SeekOrigin.prototype.current);
		return info;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.FullColorExtInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadFullColorExt()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFullColorExt(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	writeFullColorExt: function (colorInfo, item) {
		var colorType;
		var tint;
		var xClrValue;
		var $ret = this._getRawColorInfoValues(colorInfo, item, colorType, tint, xClrValue);
		colorType = $ret.p2;
		tint = $ret.p3;
		xClrValue = $ret.p4;
		var nTintShade = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(tint * 32767));
		this._write17(colorType);
		this._write11(nTintShade);
		this._write18(xClrValue);
		this._write2(new Array(8));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteFullColorExt(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.GradStopInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadGradStop()" />*/
	_readGradStop: function () {
		var info = new $.ig.GradStopInfo();
		info._xclrType = this._readUInt16();
		info._xClrValue = this._readUInt32();
		info._numPosition = this._readDouble();
		info._numTint = this._readDouble();
		return info;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.GradStopInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadGradStop()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteGradStop(Infragistics.Documents.Excel.CellFillGradientStop)" />*/
	_writeGradStop: function (gradientStop) {
		var numPosition = gradientStop.offset();
		var colorType;
		var tint;
		var xClrValue;
		var $ret = this._getRawColorInfoValues(gradientStop.colorInfo(), $.ig.ColorableItem.prototype.cellFill, colorType, tint, xClrValue);
		colorType = $ret.p2;
		tint = $ret.p3;
		xClrValue = $ret.p4;
		this._write17(colorType);
		this._write18(xClrValue);
		this._write10(numPosition);
		this._write10(tint);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteGradStop(Infragistics.Documents.Excel.CellFillGradientStop)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadHorizAlign()" />*/
	_readHorizAlign: function () {
		var value = this.readByte();
		if (value == 255) {
			return $.ig.excel.HorizontalCellAlignment.$default;
		}
		return value;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadHorizAlign()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteHorizAlign(Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	_writeHorizAlign: function (value) {
		if (value == $.ig.excel.HorizontalCellAlignment.$default) {
			this._write9(255);
		} else {
			this._write9(value);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteHorizAlign(Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadHyperlinkMoniker()" />*/
	_readHyperlinkMoniker: function () {
		var monikerClsid = new $.ig.Guid(1, this._readBytes(16));
		if ($.ig.Guid.prototype.l_op_Equality(monikerClsid, $.ig.Biff8RecordStream.prototype.__urlMonikerClsid)) {
			return this._readURLMoniker();
		} else if ($.ig.Guid.prototype.l_op_Equality(monikerClsid, $.ig.Biff8RecordStream.prototype.__fileMonikerClsid)) {
			return this._readFileMoniker();
		} else if ($.ig.Guid.prototype.l_op_Equality(monikerClsid, $.ig.Biff8RecordStream.prototype.__compositeMonikerClsid)) {
			$.ig.ExcelUtils.prototype.debugFail("Composite moniker not yet supported.");
		} else if ($.ig.Guid.prototype.l_op_Equality(monikerClsid, $.ig.Biff8RecordStream.prototype.__antiMonikerClsid)) {
			$.ig.ExcelUtils.prototype.debugFail("Anti moniker not yet supported.");
		} else if ($.ig.Guid.prototype.l_op_Equality(monikerClsid, $.ig.Biff8RecordStream.prototype.__itemMonikerClsid)) {
			$.ig.ExcelUtils.prototype.debugFail("Item moniker not yet supported.");
		} else {
			$.ig.ExcelUtils.prototype.debugFail("Unknown hyperlink moniker Clsid: " + monikerClsid);
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadHyperlinkMoniker()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteHyperlinkMoniker(System.String)" />*/
	_writeHyperlinkMoniker: function (value) {
		var uri;
		if (!(function () { var $ret = $.ig.Uri.prototype.tryCreate(value, $.ig.UriKind.prototype.relativeOrAbsolute, uri); uri = $ret.p2; return $ret.ret; }())) {
			this._write2($.ig.Biff8RecordStream.prototype.__urlMonikerClsid.toByteArray());
			this._writeURLMoniker(value);
		} else if (uri.isAbsoluteUri() == false || uri.scheme().toLowerCase() == "file") {
			this._write2($.ig.Biff8RecordStream.prototype.__fileMonikerClsid.toByteArray());
			this._writeFileMoniker(value);
		} else {
			this._write2($.ig.Biff8RecordStream.prototype.__urlMonikerClsid.toByteArray());
			this._writeURLMoniker1(uri);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteHyperlinkMoniker(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadHyperlinkString()" />*/
	_readHyperlinkString: function () {
		var length = this._readUInt32();
		var bytes = this._readBytes((length * 2));
		$.ig.ExcelUtils.prototype.debugAssert(bytes[bytes.length - 2] == 0 && bytes[bytes.length - 1] == 0, "The string should be null terminated");
		return $.ig.Encoding.prototype.unicode().getString1(bytes, 0, bytes.length - 2);
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadHyperlinkString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteHyperlinkString(System.String)" />*/
	_writeHyperlinkString: function (value) {
		var bytes = new Array((value.length + 1) * 2);
		this._write18($.ig.util.intSToU((value.length + 1)));
		$.ig.Encoding.prototype.unicode().getBytes3(value, 0, value.length, bytes, 0);
		this._write2(bytes);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteHyperlinkString(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadList12BlockLevel(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_readList12BlockLevel: function (table) {
		var cbdxfHeader = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(0 <= cbdxfHeader, "The cbdxfHeader value is incorrect.");
		var istnHeader = this._readInt32();
		var headerStyle = this._loadManagerBiff8()._getLoadedStyle(istnHeader);
		var cbdxfData = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(0 <= cbdxfData, "The cbdxfHeader value is incorrect.");
		var istnData = this._readInt32();
		var dataStyle = this._loadManagerBiff8()._getLoadedStyle(istnData);
		var cbdxfAgg = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(0 <= cbdxfAgg, "The cbdxfAgg value is incorrect.");
		var istnAgg = this._readInt32();
		var totalsStyle = this._loadManagerBiff8()._getLoadedStyle(istnAgg);
		var cbdxfBorder = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(0 <= cbdxfBorder, "The cbdxfBorder value is incorrect.");
		var cbdxfHeaderBorder = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(0 <= cbdxfHeaderBorder, "The cbdxfHeaderBorder value is incorrect.");
		var cbdxfAggBorder = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(0 <= cbdxfAggBorder, "The cbdxfAggBorder value is incorrect.");
		var dxfHeader = null;
		if (cbdxfHeader != 0) {
			dxfHeader = this._readDXFN12List(cbdxfHeader);
		}
		var dxfData = null;
		if (cbdxfData != 0) {
			dxfData = this._readDXFN12List(cbdxfData);
		}
		var dxfAgg = null;
		if (cbdxfAgg != 0) {
			dxfAgg = this._readDXFN12List(cbdxfAgg);
		}
		var dxfBorder = null;
		if (cbdxfBorder != 0) {
			dxfBorder = this._readDXFN12List(cbdxfBorder);
		}
		var dxfHeaderBorder = null;
		if (cbdxfHeaderBorder != 0) {
			dxfHeaderBorder = this._readDXFN12List(cbdxfHeaderBorder);
		}
		var dxfAggBorder = null;
		if (cbdxfAggBorder != 0) {
			dxfAggBorder = this._readDXFN12List(cbdxfAggBorder);
		}
		if (istnHeader != -1) {
			var stHeader = this._readXLUnicodeString();
			$.ig.ExcelUtils.prototype.debugAssert(headerStyle != null && stHeader == headerStyle.name(), "The stHeader value is incorrect.");
		}
		if (istnData != -1) {
			var stData = this._readXLUnicodeString();
			$.ig.ExcelUtils.prototype.debugAssert(dataStyle != null && stData == dataStyle.name(), "The stData value is incorrect.");
		}
		if (istnAgg != -1) {
			var stAgg = this._readXLUnicodeString();
			$.ig.ExcelUtils.prototype.debugAssert(totalsStyle != null && stAgg == totalsStyle.name(), "The stAgg value is incorrect.");
		}
		this._loadManager()._setAreaFormatInfo$11($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.headerRow, $.ig.excel.WorksheetTable.prototype._canAreaFormatValueBeSet, headerStyle, dxfHeader, dxfHeaderBorder, [ $.ig.CellFormatValue.prototype.bottomBorderColorInfo, $.ig.CellFormatValue.prototype.bottomBorderStyle ]);
		this._loadManager()._setAreaFormatInfo$1($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.dataArea, $.ig.excel.WorksheetTable.prototype._canAreaFormatValueBeSet, dataStyle, dxfData);
		this._loadManager()._setAreaFormatInfo$11($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.totalsRow, $.ig.excel.WorksheetTable.prototype._canAreaFormatValueBeSet, totalsStyle, dxfAgg, dxfAggBorder, [ $.ig.CellFormatValue.prototype.topBorderColorInfo, $.ig.CellFormatValue.prototype.topBorderStyle ]);
		this._loadManager()._setAreaFormatInfo$11($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.wholeTable, $.ig.excel.WorksheetTable.prototype._canAreaFormatValueBeSet, null, null, dxfBorder, [ $.ig.CellFormatValue.prototype.leftBorderColorInfo, $.ig.CellFormatValue.prototype.leftBorderStyle, $.ig.CellFormatValue.prototype.topBorderColorInfo, $.ig.CellFormatValue.prototype.topBorderStyle, $.ig.CellFormatValue.prototype.rightBorderColorInfo, $.ig.CellFormatValue.prototype.rightBorderStyle, $.ig.CellFormatValue.prototype.bottomBorderColorInfo, $.ig.CellFormatValue.prototype.bottomBorderStyle ]);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadList12BlockLevel(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteList12BlockLevel(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_writeList12BlockLevel: function (table) {
		var recordStart = this.position();
		var headerStyle;
		var dxfHeader;
		var dxfHeaderBorder;
		var $ret = this.saveManager()._getAreaFormatInfo$11($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.headerRow, headerStyle, dxfHeader, dxfHeaderBorder, [ $.ig.CellFormatValue.prototype.bottomBorderColorInfo, $.ig.CellFormatValue.prototype.bottomBorderStyle ]);
		headerStyle = $ret.p2;
		dxfHeader = $ret.p3;
		dxfHeaderBorder = $ret.p4;
		var dataStyle;
		var dxfData;
		var $ret1 = this.saveManager()._getAreaFormatInfo$1($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.dataArea, dataStyle, dxfData);
		dataStyle = $ret1.p2;
		dxfData = $ret1.p3;
		var totalsStyle;
		var dxfAgg;
		var dxfAggBorder;
		var $ret2 = this.saveManager()._getAreaFormatInfo$11($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.totalsRow, totalsStyle, dxfAgg, dxfAggBorder, [ $.ig.CellFormatValue.prototype.topBorderColorInfo, $.ig.CellFormatValue.prototype.topBorderStyle ]);
		totalsStyle = $ret2.p2;
		dxfAgg = $ret2.p3;
		dxfAggBorder = $ret2.p4;
		var notUsed1;
		var notUsed2;
		var dxfBorder;
		var $ret3 = this.saveManager()._getAreaFormatInfo$11($.ig.excel.WorksheetTableArea.prototype.$type, table.areaFormats(), $.ig.excel.WorksheetTableArea.wholeTable, notUsed1, notUsed2, dxfBorder, [ $.ig.CellFormatValue.prototype.leftBorderColorInfo, $.ig.CellFormatValue.prototype.leftBorderStyle, $.ig.CellFormatValue.prototype.topBorderColorInfo, $.ig.CellFormatValue.prototype.topBorderStyle, $.ig.CellFormatValue.prototype.rightBorderColorInfo, $.ig.CellFormatValue.prototype.rightBorderStyle, $.ig.CellFormatValue.prototype.bottomBorderColorInfo, $.ig.CellFormatValue.prototype.bottomBorderStyle ]);
		notUsed1 = $ret3.p2;
		notUsed2 = $ret3.p3;
		dxfBorder = $ret3.p4;
		var istnHeader = -1;
		if (headerStyle != null) {
			istnHeader = this._saveManagerBiff8()._styles().indexOf(headerStyle);
		}
		var istnData = -1;
		if (dataStyle != null) {
			istnData = this._saveManagerBiff8()._styles().indexOf(dataStyle);
		}
		var istnAgg = -1;
		if (totalsStyle != null) {
			istnAgg = this._saveManagerBiff8()._styles().indexOf(totalsStyle);
		}
		this._write12(0);
		this._write12(istnHeader);
		this._write12(0);
		this._write12(istnData);
		this._write12(0);
		this._write12(istnAgg);
		this._write12(0);
		this._write12(0);
		this._write12(0);
		this._writeDXFN12ListAndSizeField(recordStart, dxfHeader);
		this._writeDXFN12ListAndSizeField(recordStart + 8, dxfData);
		this._writeDXFN12ListAndSizeField(recordStart + 16, dxfAgg);
		this._writeDXFN12ListAndSizeField(recordStart + 24, dxfBorder);
		this._writeDXFN12ListAndSizeField(recordStart + 28, dxfHeaderBorder);
		this._writeDXFN12ListAndSizeField(recordStart + 32, dxfAggBorder);
		if (headerStyle != null) {
			this._writeXLUnicodeString(headerStyle.name());
		}
		if (dataStyle != null) {
			this._writeXLUnicodeString(dataStyle.name());
		}
		if (totalsStyle != null) {
			this._writeXLUnicodeString(totalsStyle.name());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteList12BlockLevel(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadList12DisplayName(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_readList12DisplayName: function (table) {
		var stListName = this._readXLUnicodeString();
		$.ig.ExcelUtils.prototype.debugAssert(stListName == table.name(), "The stListName is incorrect.");
		var stListComment = this._readXLUnicodeString();
		if (String.isNullOrEmpty(stListComment) == false) {
			table.comment(stListComment);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadList12DisplayName(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteList12DisplayName(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_writeList12DisplayName: function (table) {
		this._writeXLUnicodeString(table.name());
		this._writeXLUnicodeString((function ($t) { return $t != null ? $t : String.empty(); }(table.comment())));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteList12DisplayName(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadList12TableStyleClientInfo(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_readList12TableStyleClientInfo: function (table) {
		var temp16 = this._readUInt16();
		var fFirstColumn = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		var fLastColumn = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		var fRowStripes = $.ig.ExcelUtils.prototype.testBit(temp16, 2);
		var fColumnStripes = $.ig.ExcelUtils.prototype.testBit(temp16, 3);
		var fDefaultStyle = $.ig.ExcelUtils.prototype.testBit(temp16, 6);
		var stListStyleName = this._readXLUnicodeString();
		table.style(this._loadManager()._workbook()._getTableStyle(stListStyleName));
		table.displayBandedColumns(fColumnStripes);
		table.displayBandedRows(fRowStripes);
		table.displayFirstColumnFormatting(fFirstColumn);
		table.displayLastColumnFormatting(fLastColumn);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadList12TableStyleClientInfo(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteList12TableStyleClientInfo(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_writeList12TableStyleClientInfo: function (table) {
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, table.displayFirstColumnFormatting(), 0);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, table.displayLastColumnFormatting(), 1);
		temp16 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit2(temp16, table.displayBandedRows(), 2);
		temp16 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.setBit2(temp16, table.displayBandedColumns(), 3);
		temp16 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.setBit2(temp16, table.style() == this.saveManager()._workbook().defaultTableStyle(), 6);
		temp16 = $ret4.p0;
		this._write17(temp16);
		this._writeXLUnicodeString(table.style().name());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteList12TableStyleClientInfo(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadLPWideString()" />*/
	_readLPWideString: function () {
		var cchCharacters = this._readUInt16();
		var data = this._readBytes(cchCharacters * 2);
		return $.ig.Encoding.prototype.unicode().getString(data);
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadLPWideString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteLPWideString(System.String)" />*/
	_writeLPWideString: function (value) {
		this._write17(value.length);
		this._write2($.ig.Encoding.prototype.unicode().getBytes1(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteLPWideString(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadRef8U(Infragistics.Documents.Excel.Worksheet)" />*/
	_readRef8U: function (worksheet) {
		var firstRow = this._readUInt16();
		var lastRow = this._readUInt16();
		var firstColumn = this._readUInt16();
		var lastColumn = this._readUInt16();
		return worksheet._getCachedRegion1(firstRow, firstColumn, lastRow, lastColumn);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadRef8U(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteRef8U(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_writeRef8U: function (region) {
		this._write17(region.firstRow());
		this._write17(region.lastRow());
		this._write17(region._firstColumnInternal());
		this._write17(region._lastColumnInternal());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteRef8U(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadRefU(Infragistics.Documents.Excel.Worksheet)" />*/
	_readRefU: function (worksheet) {
		var firstRow = this._readUInt16();
		var lastRow = this._readUInt16();
		var firstColumn = this.readByte();
		var lastColumn = this.readByte();
		return worksheet._getCachedRegion1(firstRow, firstColumn, lastRow, lastColumn);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadRefU(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteRefU(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_writeRefU: function (region) {
		this._write17(region.firstRow());
		this._write17(region.lastRow());
		this._write9(region._firstColumnInternal());
		this._write9(region._lastColumnInternal());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteRefU(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadRFX(Infragistics.Documents.Excel.Worksheet)" />*/
	_readRFX: function (worksheet) {
		var rwFirst = this._readUInt32();
		var rwLast = this._readUInt32();
		var colFirst = this._readUInt32();
		var colLast = this._readUInt32();
		return worksheet._getCachedRegion1(rwFirst, colFirst, rwLast, colLast);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegion Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadRFX(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteRFX(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_writeRFX: function (region) {
		this._write18($.ig.util.intSToU(region.firstRow()));
		this._write18($.ig.util.intSToU(region.lastRow()));
		this._write18(region._firstColumnInternal());
		this._write18(region._lastColumnInternal());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteRFX(Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadScript()" />*/
	_readScript: function () {
		return this._readUInt16();
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadScript()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteScript(Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle)" />*/
	_writeScript: function (value) {
		this._write17(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteScript(Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadSDContainer()" />*/
	_readSDContainer: function () {
		var cbSD = this._readUInt32();
		return this._readBytes(cbSD);
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadSDContainer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteSDContainer()" />*/
	_writeSDContainer: function (binaryForm) {
		$.ig.CryptoUtilities.prototype.writeUInt32(this, $.ig.util.intSToU(binaryForm.length));
		this._write2(binaryForm);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteSDContainer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadSortCond12(Infragistics.Documents.Excel.WorksheetTable)" />*/
	_readSortCond12: function (table) {
		this._readFrtRefHeader1(table.worksheet(), $.ig.BIFF8RecordType.prototype.cONTINUEFRT12);
		var temp16 = this._readUInt16();
		var fSortDes = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		var sortOn = $.ig.ExcelUtils.prototype.getBits2(temp16, 1, 4);
		var reserved = $.ig.ExcelUtils.prototype.getBits2(temp16, 5, 15);
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved value is incorrect.");
		var rfx = this._readRFX(table.worksheet());
		var tableColumnIndex = rfx.firstColumn() - table._wholeTableAddress()._firstColumnIndex();
		if (tableColumnIndex < 0 || table.columns().count() <= tableColumnIndex) {
			$.ig.ExcelUtils.prototype.debugFail("The rfx value is out of range.");
			return;
		}
		var column = table.columns()._item(tableColumnIndex);
		$.ig.ExcelUtils.prototype.debugAssert(column._sortRegion().equals(rfx), "The rfx value is incorrect.");
		var sortDirection = fSortDes ? $.ig.excel.SortDirection.descending : $.ig.excel.SortDirection.ascending;
		var sortCondition;
		switch (sortOn) {
			case $.ig.ST_SortBy.prototype.value:
			case $.ig.ST_SortBy.prototype.cellColor:
			case $.ig.ST_SortBy.prototype.fontColor:
				sortCondition = this._readCondDataValue(sortOn, sortDirection);
				break;
			case $.ig.ST_SortBy.prototype.icon:
				var iconSet;
				var iconIndex;
				var $ret = this._readCFFlag(iconSet, iconIndex);
				iconSet = $ret.p0;
				iconIndex = $ret.p1;
				if (iconSet.hasValue()) {
					sortCondition = new $.ig.IconSortCondition(iconSet.value(), $.ig.util.toNullable($.ig.Number.prototype.$type, iconIndex), sortDirection);
				} else {
					sortCondition = null;
				}
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown ST_SortBy value: " + $.ig.ST_SortBy.prototype.getBox(sortOn));
				return;
		}
		var cchSt = this._readInt32();
		if (sortCondition == null) {
			return;
		}
		if (sortOn != $.ig.ST_SortBy.prototype.value) {
			$.ig.ExcelUtils.prototype.debugAssert(cchSt == 0, "The cchSt value is incorrect.");
		} else {
			if (cchSt > 0) {
				var stSslist = this._readXLUnicodeStringNoCch(cchSt);
				sortCondition = new $.ig.excel.CustomListSortCondition(sortDirection, stSslist.split(','));
			}
		}
		table.sortSettings().sortConditions().add(column, sortCondition);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadSortCond12(Infragistics.Documents.Excel.WorksheetTable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteSortCond12(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Sorting.SortCondition)" />*/
	_writeSortCond12: function (column, sortCondition) {
		this._writeFrtRefHeader1(null, $.ig.BIFF8RecordType.prototype.cONTINUEFRT12);
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, sortCondition.sortDirection() == $.ig.excel.SortDirection.descending, 0);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.addBits1(temp16, sortCondition._sortByValue(), 1, 4);
		temp16 = $ret1.p0;
		this._write17(temp16);
		this._writeRFX(column._sortRegion());
		switch (sortCondition._sortByValue()) {
			case $.ig.ST_SortBy.prototype.value:
			case $.ig.ST_SortBy.prototype.cellColor:
			case $.ig.ST_SortBy.prototype.fontColor:
				this._writeCondDataValue(column, sortCondition);
				break;
			case $.ig.ST_SortBy.prototype.icon:
				var iconSortCondition = $.ig.util.cast($.ig.IconSortCondition.prototype.$type, sortCondition);
				if (iconSortCondition != null) {
					this._writeCFFlag(iconSortCondition._iconSet(), iconSortCondition._iconIndex().getValueOrDefault());
				} else {
					$.ig.ExcelUtils.prototype.debugFail("We should have an IconSortCondition instance here.");
				}
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown ST_SortBy value: " + $.ig.ST_SortBy.prototype.getBox(sortCondition._sortByValue()));
				return;
		}
		var customListSortCondition = $.ig.util.cast($.ig.excel.CustomListSortCondition.prototype.$type, sortCondition);
		if (customListSortCondition == null) {
			this._write12(0);
		} else {
			var customList = customListSortCondition._getListString();
			this._write12(customList.length);
			this._writeXLUnicodeStringNoCch(customList);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteSortCond12(Infragistics.Documents.Excel.WorksheetTableColumn, Infragistics.Documents.Excel.Sorting.SortCondition)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Stxp Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadStxp()" />*/
	_readStxp: function () {
		var stxp = new $.ig.Biff8RecordStream_Stxp();
		stxp._twpHeight = this._readInt32();
		stxp._ts = this._readTs();
		stxp._bls = this._readUInt16();
		stxp._sss = this._readUInt16();
		stxp._uls = this.readByte();
		stxp._bFamily = this.readByte();
		stxp._bCharSet = this.readByte();
		var unused = this.readByte();
		return stxp;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Stxp Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadStxp()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteStxp(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Stxp)" />*/
	_writeStxp: function (stxp) {
		this._write12(stxp._twpHeight);
		this._writeTs(stxp._ts);
		this._write17(stxp._bls);
		this._write17(stxp._sss);
		this.writeByte(stxp._uls);
		this.writeByte(stxp._bFamily);
		this.writeByte(stxp._bCharSet);
		this.writeByte(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteStxp(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Stxp)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetTable Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadTableFeatureType(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetRegion)" />*/
	_readTableFeatureType: function (worksheet, tableRegion) {
		var lt = this._readUInt32();
		if (lt != $.ig.SourceType.prototype.range) {
			$.ig.ExcelUtils.prototype.debugFail("Not sure how to load other types of tables.");
			return null;
		}
		var idList = this._readUInt32();
		var crwHeader = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(crwHeader == 0 || crwHeader == 1, "The crwHeader value is incorrect.");
		var crwTotals = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(crwTotals == 0 || crwTotals == 1, "The crwTotals value is incorrect.");
		var idFieldNext = this._readUInt32();
		var cbFSData = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(cbFSData == 64, "The cbFSData value is incorrect.");
		var rupBuilt = this._readUInt16();
		var unused1 = this._readUInt16();
		var temp16 = this._readUInt16();
		var unused2 = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		var fAutoFilter = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		var fPersistAutoFilter = $.ig.ExcelUtils.prototype.testBit(temp16, 2);
		var fShowInsertRow = $.ig.ExcelUtils.prototype.testBit(temp16, 3);
		var fInsertRowInsCells = $.ig.ExcelUtils.prototype.testBit(temp16, 4);
		var fLoadPldwIdDeleted = $.ig.ExcelUtils.prototype.testBit(temp16, 5);
		var fShownTotalRow = $.ig.ExcelUtils.prototype.testBit(temp16, 6);
		var reserved1 = $.ig.ExcelUtils.prototype.testBit(temp16, 7);
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == false, "the reserved1 value is incorrect.");
		var fNeedsCommit = $.ig.ExcelUtils.prototype.testBit(temp16, 8);
		var fSingleCell = $.ig.ExcelUtils.prototype.testBit(temp16, 9);
		$.ig.ExcelUtils.prototype.debugAssert(fSingleCell == false, "fSingleCell should only be True when lt is XML.");
		var reserved2 = $.ig.ExcelUtils.prototype.testBit(temp16, 10);
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == false, "the reserved2 value is incorrect.");
		var fApplyAutoFilter = $.ig.ExcelUtils.prototype.testBit(temp16, 11);
		var fForceInsertToBeVis = $.ig.ExcelUtils.prototype.testBit(temp16, 12);
		var fCompressedXml = $.ig.ExcelUtils.prototype.testBit(temp16, 13);
		var fLoadCSPName = $.ig.ExcelUtils.prototype.testBit(temp16, 14);
		var fLoadPldwIdChanged = $.ig.ExcelUtils.prototype.testBit(temp16, 15);
		temp16 = this._readUInt16();
		var verXL = $.ig.ExcelUtils.prototype.getBits2(temp16, 0, 3);
		var fLoadEntryId = $.ig.ExcelUtils.prototype.testBit(temp16, 4);
		var fLoadPllstclInvalid = $.ig.ExcelUtils.prototype.testBit(temp16, 5);
		var fGoodRupBld = $.ig.ExcelUtils.prototype.testBit(temp16, 6);
		var unused3 = $.ig.ExcelUtils.prototype.testBit(temp16, 7);
		var fPublished = $.ig.ExcelUtils.prototype.testBit(temp16, 8);
		var reserved3 = $.ig.ExcelUtils.prototype.getBits2(temp16, 9, 15);
		var lPosStmCache = this._readUInt32();
		var cbStmCache = this._readUInt32();
		var cchStmCache = this._readUInt32();
		var lem = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(lem == 0, "the lem value is incorrect.");
		var rgbHashParam = this._readBytes(16);
		var rgbName = this._readXLUnicodeString();
		var cFieldData = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(1 <= cFieldData && cFieldData <= 256, "cFieldData");
		if (fLoadCSPName) {
			var cSPName = this._readXLUnicodeString();
		}
		if (fLoadEntryId) {
			var entryId = this._readXLUnicodeString();
			$.ig.ExcelUtils.prototype.debugAssert(entryId == idList.toString(), "The entryId value is incorrect.");
		}
		var table = new $.ig.excel.WorksheetTable(rgbName, idList, tableRegion.firstRow(), tableRegion.lastRow(), tableRegion._firstColumnInternal(), tableRegion._lastColumnInternal());
		table.isHeaderRowVisible((crwHeader != 0));
		if (table.isHeaderRowVisible()) {
			table.isFilterUIVisible(fAutoFilter);
		}
		table.isTotalsRowVisible((crwTotals != 0));
		table._nextColumnId(idFieldNext);
		table._isInsertRowVisible(fShowInsertRow && fForceInsertToBeVis);
		table._wereCellsShiftedToShowInsertRow(fInsertRowInsCells);
		table._hasTotalsRowEverBeenVisible(fShownTotalRow);
		table._published(fPublished);
		table.style(this._loadManager()._workbook().defaultTableStyle());
		for (var i = 0; i < cFieldData; i++) {
			this._readFeat11FieldDataItem(worksheet, table, fSingleCell, crwHeader);
		}
		if (fLoadPldwIdDeleted) {
			$.ig.ExcelUtils.prototype.debugFail("Load idDeleted.");
		}
		if (fLoadPldwIdChanged) {
			$.ig.ExcelUtils.prototype.debugFail("Load idChanged.");
		}
		if (fLoadPllstclInvalid) {
			$.ig.ExcelUtils.prototype.debugFail("Load cellInvalid.");
		}
		return table;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetTable Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadTableFeatureType(Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteTableFeatureType(Infragistics.Documents.Excel.WorksheetTable, Infragistics.SortedList)" />*/
	_writeTableFeatureType: function (table, columnsFilterData) {
		var fSingleCell = false;
		this._write18($.ig.SourceType.prototype.range);
		this._write18(table._id());
		this._write18($.ig.util.intSToU((table.isHeaderRowVisible() ? 1 : 0)));
		this._write18($.ig.util.intSToU((table.isTotalsRowVisible() ? 1 : 0)));
		this._write18(table._nextColumnId());
		this._write18($.ig.util.intSToU(64));
		this._write17(0);
		this._write17(0);
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, table.isFilterUIVisible(), 1);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, table.isFilterUIVisible(), 2);
		temp16 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit2(temp16, table._isInsertRowVisible(), 3);
		temp16 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.setBit2(temp16, table._wereCellsShiftedToShowInsertRow(), 4);
		temp16 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.setBit2(temp16, table._hasTotalsRowEverBeenVisible(), 6);
		temp16 = $ret4.p0;
		var $ret5 = $.ig.ExcelUtils.prototype.setBit2(temp16, fSingleCell, 9);
		temp16 = $ret5.p0;
		var $ret6 = $.ig.ExcelUtils.prototype.setBit2(temp16, true, 11);
		temp16 = $ret6.p0;
		var $ret7 = $.ig.ExcelUtils.prototype.setBit2(temp16, table._isInsertRowVisible(), 12);
		temp16 = $ret7.p0;
		this._write17(temp16);
		temp16 = 0;
		var $ret8 = $.ig.ExcelUtils.prototype.addBits1(temp16, 14, 0, 3);
		temp16 = $ret8.p0;
		var $ret9 = $.ig.ExcelUtils.prototype.setBit2(temp16, true, 4);
		temp16 = $ret9.p0;
		var $ret10 = $.ig.ExcelUtils.prototype.setBit2(temp16, false, 6);
		temp16 = $ret10.p0;
		var $ret11 = $.ig.ExcelUtils.prototype.setBit2(temp16, table._published(), 8);
		temp16 = $ret11.p0;
		this._write17(temp16);
		this._write18($.ig.util.intSToU(0));
		this._write18($.ig.util.intSToU(0));
		this._write18($.ig.util.intSToU(0));
		this._write18($.ig.util.intSToU(0));
		this._write2(new Array(16));
		this._writeXLUnicodeString(table.name());
		this._write17(table.columns().count());
		this._writeXLUnicodeString(table._id().toString());
		for (var i = 0; i < table.columns().count(); i++) {
			this._writeFeat11FieldDataItem(table.columns()._item(i), columnsFilterData, fSingleCell);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteTableFeatureType(Infragistics.Documents.Excel.WorksheetTable, Infragistics.SortedList)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Ts Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadTs()" />*/
	_readTs: function () {
		var ts = new $.ig.Biff8RecordStream_Ts();
		var temp32 = this._readUInt32();
		ts._ftsItalic = $.ig.ExcelUtils.prototype.testBit1(temp32, 1);
		ts._ftsStrikeout = $.ig.ExcelUtils.prototype.testBit1(temp32, 7);
		return ts;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Ts Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadTs()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteTs(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Ts)" />*/
	_writeTs: function (ts) {
		var temp32 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit4(temp32, ts._ftsItalic, 1);
		temp32 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit4(temp32, ts._ftsStrikeout, 7);
		temp32 = $ret1.p0;
		this._write18(temp32);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteTs(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Ts)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadUnderline()" />*/
	_readUnderline: function () {
		return this._readUInt16();
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadUnderline()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteUnderline(Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	_writeUnderline: function (underlineStyle) {
		this._write17(underlineStyle);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteUnderline(Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadUnicodeString(System.UInt16)" />*/
	_readUnicodeString: function (cch) {
		var data = this._readBytes(cch * 2);
		return $.ig.Encoding.prototype.unicode().getString(data);
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadUnicodeString(System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteUnicodeString(System.String)" />*/
	_writeUnicodeString: function (value) {
		this._write2($.ig.Encoding.prototype.unicode().getBytes1(value));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteUnicodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadURLMoniker()" />*/
	_readURLMoniker: function () {
		var length = this._readUInt32();
		var startPosition = this.position();
		var url = this._readNullTerminatedUnicodeString();
		if (length == this.position() - startPosition) {
			return url;
		}
		var serialGUID = new $.ig.Guid(1, this._readBytes(16));
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality($.ig.Biff8RecordStream.prototype.__serialGuid, serialGUID), "The serialGUID is not the expected value.");
		var serialVersion = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(serialVersion == 0, "The serialVersion is not the expected value.");
		var uriFlags = this._readUInt32();
		var createAllowRelative = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 0);
		var createAllowImplicitWildcardScheme = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 1);
		var createAllowImplicitFileScheme = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 2);
		var createNoFrag = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 3);
		var createNoCanonicalize = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 4);
		var createCanonicalize = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 5);
		var createFileUseDosPath = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 6);
		var createDecodeExtraInfo = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 7);
		var createNoDecodeExtraInfo = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 8);
		var createCrackUnknownSchemes = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 9);
		var createNoCrackUnknownSchemes = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 10);
		var createPreProcessHtmlUri = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 11);
		var createNoPreProcessHtmlUri = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 12);
		var createIESettings = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 13);
		var createNoIESettings = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 14);
		var createNoEncodeForbiddenCharacters = $.ig.ExcelUtils.prototype.testBit1(uriFlags, 15);
		return url;
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadURLMoniker()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteURLMoniker(System.Uri)" />*/
	_writeURLMoniker1: function (uri) {
		var value;
		try {
			value = $.ig.Uri.prototype.escapeUriString(uri.toString());
		}
		catch (e) {
			value = uri.originalString();
		}
		this._writeURLMoniker(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteURLMoniker(System.Uri)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteURLMoniker(System.String)" />*/
	_writeURLMoniker: function (value) {
		var length = $.ig.util.intSToU(((value.length + 1) * 2 + 24));
		this._write18(length);
		this._writeNullTerminatedUnicodeString(value);
		this._write2($.ig.Biff8RecordStream.prototype.__serialGuid.toByteArray());
		this._write18($.ig.util.intSToU(0));
		var uriFlags = 43941;
		this._write18(uriFlags);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteURLMoniker(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFExtGradientInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFExtGradient()" />*/
	_readXFExtGradient: function () {
		var info = new $.ig.XFExtGradientInfo();
		info._type = this._readInt32();
		$.ig.ExcelUtils.prototype.debugAssert(info._type == 0 || info._type == 1, "The type is not valid.");
		info._numDegree = this._readDouble();
		info._numFillToLeft = this._readDouble();
		info._numFillToRight = this._readDouble();
		info._numFillToTop = this._readDouble();
		info._numFillToBottom = this._readDouble();
		var cGradStops = this._readUInt32();
		info._rgGradStops = new Array(cGradStops);
		for (var i = 0; i < cGradStops; i++) {
			info._rgGradStops[i] = this._readGradStop();
		}
		return info;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFExtGradientInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFExtGradient()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFExtGradient(Infragistics.Documents.Excel.CellFillGradient)" />*/
	writeXFExtGradient: function (gradientFill) {
		var type = 0;
		var numDegree = 0;
		var numFillToLeft = 0;
		var numFillToRight = 0;
		var numFillToTop = 0;
		var numFillToBottom = 0;
		var linearGradient = $.ig.util.cast($.ig.excel.CellFillLinearGradient.prototype.$type, gradientFill);
		var rectangularGradient = $.ig.util.cast($.ig.excel.CellFillRectangularGradient.prototype.$type, gradientFill);
		if (linearGradient != null) {
			type = 0;
			numDegree = linearGradient.angle();
		} else if (rectangularGradient != null) {
			type = 1;
			numFillToLeft = rectangularGradient.left();
			numFillToRight = rectangularGradient.right();
			numFillToTop = rectangularGradient.top();
			numFillToBottom = rectangularGradient.bottom();
		} else {
			$.ig.ExcelUtils.prototype.debugFail("Unknown gradient type.");
		}
		this._write12(type);
		this._write10(numDegree);
		this._write10(numFillToLeft);
		this._write10(numFillToRight);
		this._write10(numFillToTop);
		this._write10(numFillToBottom);
		this._write18($.ig.util.intSToU(gradientFill.stops().count()));
		for (var i = 0; i < gradientFill.stops().count(); i++) {
			this._writeGradStop(gradientFill.stops().item(i));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFExtGradient(Infragistics.Documents.Excel.CellFillGradient)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFExtNoFRT(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_readXFExtNoFRT: function (dxfn) {
		var reserved1 = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 0, "The reserved1 value is incorrect.");
		var reserved2 = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 65535, "The reserved2 value is incorrect.");
		var reserved3 = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved3 == 0, "The reserved3 value is incorrect.");
		var cexts = this._readUInt16();
		for (var i = 0; i < cexts; i++) {
			var extProp = this._readExtProp();
			extProp.applyTo(this._loadManagerBiff8(), dxfn);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFExtNoFRT(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFExtNoFRT(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeXFExtNoFRT: function (format) {
		var props = format._getXFEXTProps();
		if (props.count() == 0) {
			return;
		}
		this._write17(0);
		this._write17(65535);
		this._write17(0);
		this._write17(props.count());
		for (var i = 0; i < props.count(); i++) {
			this._writeExtProp(props.__inner[i]);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFExtNoFRT(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFProp Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFProp()" />*/
	_readXFProp: function () {
		var xfPropType = this._readUInt16();
		var cb = this._readUInt16();
		switch (xfPropType) {
			case $.ig.XFPropType.prototype.bottomBorder:
			case $.ig.XFPropType.prototype.diagonalBorder:
			case $.ig.XFPropType.prototype.horizontalBorder:
			case $.ig.XFPropType.prototype.leftBorder:
			case $.ig.XFPropType.prototype.rightBorder:
			case $.ig.XFPropType.prototype.topBorder:
			case $.ig.XFPropType.prototype.verticalBorder:
				var borderColor;
				var borderStyle;
				var $ret = this._readXFPropBorder(borderColor, borderStyle);
				borderColor = $ret.p0;
				borderStyle = $ret.p1;
				return new $.ig.XFPropBorderLoaded(xfPropType, borderColor, borderStyle);
			case $.ig.XFPropType.prototype.cellMerged:
			case $.ig.XFPropType.prototype.diagonalDownBorder:
			case $.ig.XFPropType.prototype.diagonalUpBorder:
			case $.ig.XFPropType.prototype.fontCondensed:
			case $.ig.XFPropType.prototype.fontExtended:
			case $.ig.XFPropType.prototype.fontItalic:
			case $.ig.XFPropType.prototype.fontOutline:
			case $.ig.XFPropType.prototype.fontShadow:
			case $.ig.XFPropType.prototype.fontStrikethrough:
			case $.ig.XFPropType.prototype.hidden:
			case $.ig.XFPropType.prototype.justifyDistributed:
			case $.ig.XFPropType.prototype.locked:
			case $.ig.XFPropType.prototype.shrinkToFit:
			case $.ig.XFPropType.prototype.wrappedText:
				return new $.ig.XFPropBool(2, xfPropType, this.readByte());
			case $.ig.XFPropType.prototype.foregroundColor:
			case $.ig.XFPropType.prototype.backgroundColor:
			case $.ig.XFPropType.prototype.fontColor:
				return new $.ig.XFPropColorLoaded(xfPropType, this._readXFPropColor());
			case $.ig.XFPropType.prototype.fontBold: return new $.ig.XFPropFontBold(0, this._readUInt16());
			case $.ig.XFPropType.prototype.fontCharacterSet:
			case $.ig.XFPropType.prototype.fontFamily:
			case $.ig.XFPropType.prototype.readingOrder:
				return new $.ig.XFPropByte(xfPropType, this.readByte());
			case $.ig.XFPropType.prototype.fontHeight: return new $.ig.XFPropFontHeight(this._readUInt32());
			case $.ig.XFPropType.prototype.fontName: return new $.ig.XFPropFontName(this._readLPWideString());
			case $.ig.XFPropType.prototype.fontUnderline: return new $.ig.XFPropFontUnderline(this._readUnderline());
			case $.ig.XFPropType.prototype.fontScheme: return new $.ig.XFPropFontScheme(this._readFontScheme());
			case $.ig.XFPropType.prototype.fontSubscriptSuperscript: return new $.ig.XFPropFontSubscriptSuperscript(this._readScript());
			case $.ig.XFPropType.prototype.gradientFill: return this._readXFPropGradientFill();
			case $.ig.XFPropType.prototype.gradientStop: return this._readXFPropGradientStop();
			case $.ig.XFPropType.prototype.horizontalAlignment: return new $.ig.XFPropHorizontalAlignment(this._readHorizAlign());
			case $.ig.XFPropType.prototype.numberFormat:
				var numFmtId;
				var format;
				var $ret1 = this._readFormat(numFmtId, format);
				numFmtId = $ret1.p0;
				format = $ret1.p1;
				return new $.ig.XFPropNumberFormat(numFmtId, format);
			case $.ig.XFPropType.prototype.numberFormatId: return new $.ig.XFPropNumberFormatId(this._readUInt16());
			case $.ig.XFPropType.prototype.patternFill:
				var fillPatternStyle = this.readByte();
				$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.excel.FillPatternStyle.prototype.$type, $.ig.excel.FillPatternStyle.prototype.getBox(fillPatternStyle)), "This is not a valid FillPatternStyle.");
				return new $.ig.XFPropFillPattern(fillPatternStyle);
			case $.ig.XFPropType.prototype.textIndentationLevel: return new $.ig.XFPropTextIndentationLevel(this._readUInt16());
			case $.ig.XFPropType.prototype.textIndentationLevelRelative: return new $.ig.XFPropTextIndentationLevelRelative(this._readInt16());
			case $.ig.XFPropType.prototype.textRotation: return new $.ig.XFPropTextRotation(this.readByte());
			case $.ig.XFPropType.prototype.verticalAlignment: return new $.ig.XFPropVerticalAlignment(this._readVertAlign());
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown XFPropType: " + $.ig.XFPropType.prototype.getBox(xfPropType));
				return null;
		}
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFProp Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFProp()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFProp(Infragistics.Documents.Excel.Serialization.BIFF8.XFProp)" />*/
	_writeXFProp: function (xfProp) {
		var recordStart = this.position();
		this._write17(xfProp.type());
		this._write17(0);
		switch (xfProp.type()) {
			case $.ig.XFPropType.prototype.bottomBorder:
			case $.ig.XFPropType.prototype.diagonalBorder:
			case $.ig.XFPropType.prototype.horizontalBorder:
			case $.ig.XFPropType.prototype.leftBorder:
			case $.ig.XFPropType.prototype.rightBorder:
			case $.ig.XFPropType.prototype.topBorder:
			case $.ig.XFPropType.prototype.verticalBorder:
				var xfPropBorder = xfProp;
				var borderColor = xfPropBorder.getBorderColor(this.saveManager()._workbook());
				var borderStyle = xfPropBorder.borderStyle();
				this._writeXFPropBorder(borderColor, borderStyle);
				break;
			case $.ig.XFPropType.prototype.cellMerged:
			case $.ig.XFPropType.prototype.diagonalDownBorder:
			case $.ig.XFPropType.prototype.diagonalUpBorder:
			case $.ig.XFPropType.prototype.fontCondensed:
			case $.ig.XFPropType.prototype.fontExtended:
			case $.ig.XFPropType.prototype.fontItalic:
			case $.ig.XFPropType.prototype.fontOutline:
			case $.ig.XFPropType.prototype.fontShadow:
			case $.ig.XFPropType.prototype.fontStrikethrough:
			case $.ig.XFPropType.prototype.hidden:
			case $.ig.XFPropType.prototype.justifyDistributed:
			case $.ig.XFPropType.prototype.locked:
			case $.ig.XFPropType.prototype.shrinkToFit:
			case $.ig.XFPropType.prototype.wrappedText:
				this._write9((xfProp).valueByte());
				break;
			case $.ig.XFPropType.prototype.foregroundColor:
			case $.ig.XFPropType.prototype.backgroundColor:
				this._writeXFPropColor((xfProp).colorInfo(), $.ig.ColorableItem.prototype.cellFill);
				break;
			case $.ig.XFPropType.prototype.fontBold:
				this._write17((xfProp).fontWeight());
				break;
			case $.ig.XFPropType.prototype.fontCharacterSet:
			case $.ig.XFPropType.prototype.fontFamily:
			case $.ig.XFPropType.prototype.readingOrder:
				this._write17((xfProp).value());
				break;
			case $.ig.XFPropType.prototype.fontColor:
				this._writeXFPropColor((xfProp).colorInfo(), $.ig.ColorableItem.prototype.cellFont);
				break;
			case $.ig.XFPropType.prototype.fontHeight:
				this._write18((xfProp).fontHeight());
				break;
			case $.ig.XFPropType.prototype.fontName:
				this._writeLPWideString((xfProp).fontName());
				break;
			case $.ig.XFPropType.prototype.fontUnderline:
				this._writeUnderline((xfProp).underlineStyle());
				break;
			case $.ig.XFPropType.prototype.fontScheme:
				this._writeFontScheme((xfProp).fontScheme());
				break;
			case $.ig.XFPropType.prototype.fontSubscriptSuperscript:
				this._writeScript((xfProp).style());
				break;
			case $.ig.XFPropType.prototype.gradientFill:
				this._writeXFPropGradientFill(xfProp);
				break;
			case $.ig.XFPropType.prototype.gradientStop:
				this._writeXFPropGradientStop(xfProp);
				break;
			case $.ig.XFPropType.prototype.horizontalAlignment:
				this._writeHorizAlign((xfProp).alignment());
				break;
			case $.ig.XFPropType.prototype.numberFormat:
				var xfPropNumberFormat = $.ig.util.cast($.ig.XFPropNumberFormat.prototype.$type, xfProp);
				var numFmtId = xfPropNumberFormat.numFmtId();
				var format = xfPropNumberFormat.format();
				var $ret = this._readFormat(numFmtId, format);
				numFmtId = $ret.p0;
				format = $ret.p1;
				break;
			case $.ig.XFPropType.prototype.numberFormatId:
				this._write17((xfProp).fmtId());
				break;
			case $.ig.XFPropType.prototype.patternFill:
				this._write9((xfProp).fillPattern());
				break;
			case $.ig.XFPropType.prototype.textIndentationLevel:
				this._write17((xfProp).indent());
				break;
			case $.ig.XFPropType.prototype.textIndentationLevelRelative:
				this._write11((xfProp).indentOffset());
				break;
			case $.ig.XFPropType.prototype.textRotation:
				this._write9((xfProp).rotation());
				break;
			case $.ig.XFPropType.prototype.verticalAlignment:
				this._writeVertAlign((xfProp).verticalAlignment());
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown XFPropType: " + $.ig.XFPropType.prototype.getBox(xfProp.type()));
				break;
		}
		var recordEnd = this.position();
		var cb = (recordEnd - recordStart);
		this.position(recordStart + 2);
		this._write17(cb);
		this.position(recordEnd);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFProp(Infragistics.Documents.Excel.Serialization.BIFF8.XFProp)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropBorder(Infragistics.Documents.Excel.Serialization.BIFF8.XFPropColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	_readXFPropBorder: function (borderColor, borderStyle) {
		borderColor = this._readXFPropColor();
		borderStyle = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.excel.CellBorderLineStyle.prototype.$type, $.ig.excel.CellBorderLineStyle.prototype.getBox(borderStyle)), "The dgBorder value is incorrect.");
		return {
			p0: borderColor,
			p1: borderStyle
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropBorder(Infragistics.Documents.Excel.Serialization.BIFF8.XFPropColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropBorder(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	_writeXFPropBorder: function (borderColor, borderStyle) {
		this._writeXFPropColor(borderColor, $.ig.ColorableItem.prototype.cellBorder);
		this._write17(borderStyle);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropBorder(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFPropColorInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropColor()" />*/
	_readXFPropColor: function () {
		var info = new $.ig.XFPropColorInfo();
		info._temp8 = this.readByte();
		info._icv = this.readByte();
		info._nTintShade = this._readInt16();
		info._dwRgba = this._readUInt32();
		return info;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFPropColorInfo Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropColor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropColor(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	_writeXFPropColor: function (colorInfo, item) {
		var colorType;
		var tint;
		var xClrValue;
		var $ret = this._getRawColorInfoValues(colorInfo, item, colorType, tint, xClrValue);
		colorType = $ret.p2;
		tint = $ret.p3;
		xClrValue = $ret.p4;
		var icv = 255;
		var dwRgba = xClrValue;
		if (colorType == $.ig.XColorType.prototype.themed || colorType == $.ig.XColorType.prototype.indexed) {
			icv = xClrValue;
		}
		var nTintShade = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(tint * 32767));
		var temp8 = 0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit(temp8, true, 0);
		temp8 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.addBits(temp8, colorType, 1, 7);
		temp8 = $ret2.p0;
		this._write9(temp8);
		this._write9(icv);
		this._write11(nTintShade);
		this._write18(dwRgba);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropColor(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.ColorableItem)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientFill Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropGradientFill()" />*/
	_readXFPropGradientFill: function () {
		var type = this._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(type == 0 || type == 1, "The type is incorrect.");
		var numDegree = this._readDouble();
		var numFillToLeft = this._readDouble();
		var numFillToRight = this._readDouble();
		var numFillToTop = this._readDouble();
		var numFillToBottom = this._readDouble();
		return new $.ig.XFPropGradientFill(type != 0, numDegree, numFillToLeft, numFillToRight, numFillToTop, numFillToBottom);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientFill Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropGradientFill()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropGradientFill(Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientFill)" />*/
	_writeXFPropGradientFill: function (xfProp) {
		this._write18($.ig.util.intSToU((xfProp.isRectangular() ? 1 : 0)));
		this._write10(xfProp.numDegree());
		this._write10(xfProp.numFillToLeft());
		this._write10(xfProp.numFillToRight());
		this._write10(xfProp.numFillToTop());
		this._write10(xfProp.numFillToBottom());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropGradientFill(Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientFill)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientStopLoaded Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropGradientStop()" />*/
	_readXFPropGradientStop: function () {
		var unused = this._readUInt16();
		var numPosition = this._readDouble();
		var color = this._readXFPropColor();
		return new $.ig.XFPropGradientStopLoaded(color, numPosition);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientStopLoaded Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFPropGradientStop()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropGradientStop(Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientStop)" />*/
	_writeXFPropGradientStop: function (xfProp) {
		this._write17(0);
		this._write10(xfProp.numPosition());
		this._writeXFPropColor(xfProp.getColor(this.saveManager()._workbook()), $.ig.ColorableItem.prototype.cellFill);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFPropGradientStop(Infragistics.Documents.Excel.Serialization.BIFF8.XFPropGradientStop)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFProps()" />*/
	_readXFProps: function () {
		var reserved = this._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "We were expecting reserved to be 0.");
		var cprops = this._readUInt16();
		var props = new Array(cprops);
		for (var i = 0; i < cprops; i++) {
			props[i] = this._readXFProp();
		}
		return props;
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXFProps()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ApplyXFProps(Infragistics.Documents.Excel.Workbook, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, )" />*/
	_applyXFProps: function (workbook, format, fUIFill, props) {
		var fillPattern = $.ig.util.toNullable($.ig.excel.FillPatternStyle.prototype.$type, null);
		var backgroundColor = null;
		var foregroundColor = null;
		var gradient = null;
		var stops = new $.ig.List$1($.ig.excel.CellFillGradientStop.prototype.$type, 0);
		for (var i = 0; i < props.length; i++) {
			var prop = props[i];
			if (prop == null) {
				continue;
			}
			switch (prop.type()) {
				case $.ig.XFPropType.prototype.patternFill:
					fillPattern = $.ig.util.toNullable($.ig.excel.FillPatternStyle.prototype.$type, (prop).fillPattern());
					break;
				case $.ig.XFPropType.prototype.backgroundColor:
					backgroundColor = (prop).getColor(workbook);
					break;
				case $.ig.XFPropType.prototype.foregroundColor:
					foregroundColor = (prop).getColor(workbook);
					break;
				case $.ig.XFPropType.prototype.gradientFill:
					gradient = prop;
					break;
				case $.ig.XFPropType.prototype.gradientStop:
					var xfStop = prop;
					stops.add(new $.ig.excel.CellFillGradientStop(xfStop.getColor(workbook), xfStop.numPosition()));
					break;
				default:
					prop.applyTo(workbook, format);
					break;
			}
		}
		$.ig.ExcelUtils.prototype.debugAssert(fillPattern.hasValue() == false || gradient == null, "We cannot have both a fill pattern and gradient.");
		$.ig.ExcelUtils.prototype.debugAssert(gradient == null || stops.count() >= 2, "We should have at least 2 gradient stops.");
		if (gradient != null && stops.count() >= 2) {
			if (gradient.isRectangular()) {
				format.fill(new $.ig.excel.CellFillRectangularGradient(gradient.numFillToLeft(), gradient.numFillToTop(), gradient.numFillToRight(), gradient.numFillToBottom(), stops.toArray()));
			} else {
				format.fill(new $.ig.excel.CellFillLinearGradient(gradient.numDegree(), stops.toArray()));
			}
		} else if (fillPattern.hasValue() || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(backgroundColor, null) || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(foregroundColor, null)) {
			if (fillPattern.hasValue() == false) {
				fillPattern = $.ig.util.toNullable($.ig.excel.FillPatternStyle.prototype.$type, $.ig.excel.FillPatternStyle.solid);
			}
			$.ig.ExcelUtils.prototype.debugAssert(fUIFill != format._doesReverseColorsForSolidFill(), "This is unexpected. May have to swap solid colors manually here if these differ.");
			format.fill(new $.ig.excel.CellFillPattern(backgroundColor, foregroundColor, fillPattern.value(), format, true));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ApplyXFProps(Infragistics.Documents.Excel.Workbook, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFProps(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeXFProps: function (format) {
		this._write17(0);
		var xfProps = format._getXFProps();
		this._write17(xfProps.count());
		for (var i = 0; i < xfProps.count(); i++) {
			this._writeXFProp(xfProps.__inner[i]);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXFProps(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadVertAlign()" />*/
	_readVertAlign: function () {
		return this.readByte();
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadVertAlign()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteVertAlign(Infragistics.Documents.Excel.VerticalCellAlignment)" />*/
	_writeVertAlign: function (value) {
		$.ig.ExcelUtils.prototype.debugAssert(value != $.ig.excel.VerticalCellAlignment.$default, "The default value cannot be used here.");
		this._write9(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteVertAlign(Infragistics.Documents.Excel.VerticalCellAlignment)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXLUnicodeString()" />*/
	_readXLUnicodeString: function () {
		var cch = this._readUInt16();
		return this._readXLUnicodeStringNoCch(cch);
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXLUnicodeString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXLUnicodeString(System.String)" />*/
	_writeXLUnicodeString: function (value) {
		this._write17(value.length);
		this._writeXLUnicodeStringNoCch(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXLUnicodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXLUnicodeStringNoCch(System.UInt16)" />*/
	_readXLUnicodeStringNoCch: function (cch) {
		var temp8 = this.readByte();
		var fHighByte = $.ig.ExcelUtils.prototype.testBit(temp8, 0);
		var reserved = $.ig.ExcelUtils.prototype.getBits(temp8, 1, 7);
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved field is incorrect.");
		var data = new Array(cch * 2);
		for (var bytePosition = 0; bytePosition < data.length; bytePosition++) {
			data[bytePosition] = this.readByte();
			if (fHighByte == false) {
				data[++bytePosition] = 0;
			}
		}
		return $.ig.Encoding.prototype.unicode().getString(data);
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXLUnicodeStringNoCch(System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXLUnicodeStringNoCch(System.String)" />*/
	_writeXLUnicodeStringNoCch: function (value) {
		this._writeXLUnicodeStringNoCch1(value, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXLUnicodeStringNoCch(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXLUnicodeStringNoCch(System.String, System.Boolean)" />*/
	_writeXLUnicodeStringNoCch1: function (value, force2BytesPerChar) {
		var bytes = $.ig.Encoding.prototype.unicode().getBytes1(value);
		var fHighByte = false;
		var lowBytes = new Array($.ig.intDivide(bytes.length, 2));
		if (force2BytesPerChar) {
			fHighByte = true;
		} else {
			for (var i = 1; i < bytes.length; i += 2) {
				if (bytes[i] != 0) {
					fHighByte = true;
					break;
				}
				lowBytes[$.ig.intDivide(i, 2)] = bytes[i - 1];
			}
		}
		var rgb = fHighByte ? bytes : lowBytes;
		this.writeByte($.ig.Convert.prototype.toByte(fHighByte));
		this._write2(rgb);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXLUnicodeStringNoCch(System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXnum()" />*/
	_readXnum: function () {
		return this._readDouble();
	}
	/*<EndMethod Name="System.Double Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ReadXnum()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXnum(System.Double)" />*/
	_writeXnum: function (value) {
		this._write10(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteXnum(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN12ListAndSizeField(System.Int64, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_writeDXFN12ListAndSizeField: function (cbPosition, dxf) {
		if (dxf == null) {
			return;
		}
		var dxfHeaderStart = this.position();
		this._writeDXFN12List(dxf);
		var dxfHeaderEnd = this.position();
		var cbdxfHeader = (dxfHeaderEnd - dxfHeaderStart);
		this.position(cbPosition);
		this._write12(cbdxfHeader);
		this.position(dxfHeaderEnd);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::WriteDXFN12ListAndSizeField(System.Int64, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::LoadManagerBiff8()" />*/
	_loadManagerBiff8: function () {
		return this._loadManager();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::LoadManagerBiff8()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::NextBlockType()" />*/
	_nextBlockType: function (value) {
		if (arguments.length === 1) {
			this._nextBlockTypeInternal(value);
			return value;
		} else {
			return this._nextBlockTypeInternal();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::NextBlockType()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ParentStream()" />*/
	_parentStream: function () {
		return (this).parentStreamRaw();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::ParentStream()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::RecordType()" />*/
	_recordType: function () {
		return this._recordTypeInternal();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::RecordType()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::SaveManagerBiff8()" />*/
	_saveManagerBiff8: function () {
		return this.saveManager();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003 Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream::SaveManagerBiff8()" />*/
	,
	$type: new $.ig.Type('Biff8RecordStream', $.ig.BiffRecordStream.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper" />*/

$.ig.util.defType('Biff8RecordStream_AFDOper', 'Object', {
	_vt: 0,
	_grbitSign: 0,
	_vtValue: null,
	_stringValue: null,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
				case 3:
					this.init3.apply(this, arguments);
					break;
			}
			return;
		}
		this._grbitSign = $.ig.ST_FilterOperator.prototype.equal;
		$.ig.Object.prototype.init.call(this);
	},
	init1: function (initNumber, value) {
		this._grbitSign = $.ig.ST_FilterOperator.prototype.equal;
		$.ig.Object.prototype.init.call(this);
		if (value.length > 255) {
			$.ig.ExcelUtils.prototype.debugFail("Strings longer than 255 characters cannot be saved in the AFDOper structure.");
			value = value.substr(0, 255);
		}
		this._stringValue = value;
		this._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTString;
		this._vtValue = value.length;
	},
	init2: function (initNumber, value, operatorValue) {
		this._grbitSign = $.ig.ST_FilterOperator.prototype.equal;
		$.ig.Object.prototype.init.call(this);
		this.initialize(value, operatorValue);
	},
	init3: function (initNumber, saveManager, condition) {
		this._grbitSign = $.ig.ST_FilterOperator.prototype.equal;
		$.ig.Object.prototype.init.call(this);
		if (condition == null) {
			return;
		}
		var operatorValue;
		var val;
		var $ret = condition._getSaveValues(saveManager, operatorValue, val);
		operatorValue = $ret.p1;
		val = $ret.p2;
		this.initialize(val, operatorValue);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper::Initialize(System.Object, Infragistics.Documents.OfficeOpenXml.Excel.ST_FilterOperator)" />*/
	initialize: function (value, operatorValue) {
		this._grbitSign = operatorValue;
		var strValue = $.ig.util.cast(String, value);
		if (strValue != null) {
			if (strValue.length == 0 && this._grbitSign == $.ig.ST_FilterOperator.prototype.notEqual) {
				this._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTNonBlanks;
			} else {
				this._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTString;
				this._stringValue = strValue;
				this._vtValue = this._stringValue.length;
			}
		} else {
			this._vtValue = value;
			if (typeof value === 'number') {
				this._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble;
			} else if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null || $.ig.util.cast($.ig.excel.ErrorValue.prototype.$type, value) !== null) {
				this._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTBoolErr;
			} else {
				$.ig.ExcelUtils.prototype.debugFail("Unknown value type.");
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper::Initialize(System.Object, Infragistics.Documents.OfficeOpenXml.Excel.ST_FilterOperator)" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper::ResolvedValue()" />*/
	resolvedValue: function () {
		if (this._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTString) {
			return this._stringValue;
		}
		return this._vtValue;
	}
	/*<EndProperty Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper::ResolvedValue()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper::HasWildcards()" />*/
	hasWildcards: function () {
		if (this._vt != $.ig.Biff8RecordStream_AFDOper.prototype.vTString) {
			return false;
		}
		return this._stringValue.contains($.ig.excel.CustomFilterCondition.prototype._wildcardNChars) || this._stringValue.contains($.ig.excel.CustomFilterCondition.prototype._wildcardSingleChar);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper::HasWildcards()" />*/
	,
	$type: new $.ig.Type('Biff8RecordStream_AFDOper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Stxp" />*/

$.ig.util.defType('Biff8RecordStream_Stxp', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_twpHeight: 0,
	_ts: null,
	_bls: 0,
	_sss: 0,
	_uls: 0,
	_bFamily: 0,
	_bCharSet: 0,
	$type: new $.ig.Type('Biff8RecordStream_Stxp', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Stxp" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Ts" />*/

$.ig.util.defType('Biff8RecordStream_Ts', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_ftsItalic: false,
	_ftsStrikeout: false,
	$type: new $.ig.Type('Biff8RecordStream_Ts', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_Ts" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods" />*/

$.ig.util.defType('ObjExtensionMethods', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadObj(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadObj: function (obj, loadManager) {
		obj._cmo = $.ig.ObjExtensionMethods.prototype.loadFtCmo(loadManager);
		var objectType = obj._cmo.ot();
		switch (objectType) {
			case $.ig.ObjectType.prototype.group:
				obj._gmo = $.ig.ObjExtensionMethods.prototype.loadFtGmo(loadManager);
				break;
			case $.ig.ObjectType.prototype.picture:
				obj._pictFormat = $.ig.ObjExtensionMethods.prototype.loadFtCf(loadManager) || new $.ig.FtCf();
				obj._pictFlags = $.ig.ObjExtensionMethods.prototype.loadFtPioGrbit(loadManager) || new $.ig.FtPioGrbit(false);
				break;
			case $.ig.ObjectType.prototype.checkBox:
			case $.ig.ObjectType.prototype.optionButton:
				obj._cbls = $.ig.ObjExtensionMethods.prototype.loadFtCbls(loadManager);
				if (objectType == $.ig.ObjectType.prototype.optionButton) {
					obj._rbo = $.ig.ObjExtensionMethods.prototype.loadFtRbo(loadManager);
				}
				break;
			case $.ig.ObjectType.prototype.spinner:
			case $.ig.ObjectType.prototype.scrollBar:
			case $.ig.ObjectType.prototype.listBox:
			case $.ig.ObjectType.prototype.comboBox:
				obj._sbs = $.ig.ObjExtensionMethods.prototype.loadFtSbs(loadManager);
				break;
			case $.ig.ObjectType.prototype.comment:
				obj._nts = $.ig.ObjExtensionMethods.prototype.loadFtNts(loadManager);
				break;
		}
		obj._macro = $.ig.ObjExtensionMethods.prototype.tryLoadFtMacro(loadManager);
		switch (objectType) {
			case $.ig.ObjectType.prototype.picture:
				obj._pictFmla = $.ig.ObjExtensionMethods.prototype.tryLoadFtPictFmla(loadManager, obj);
				break;
			case $.ig.ObjectType.prototype.checkBox:
			case $.ig.ObjectType.prototype.optionButton:
				obj._linkFmla = $.ig.ObjExtensionMethods.prototype.tryLoadObjLinkFmla(loadManager, obj);
				obj._checkBox = $.ig.ObjExtensionMethods.prototype.loadFtCblsData(loadManager, obj);
				if (objectType == $.ig.ObjectType.prototype.optionButton) {
					obj._radioButton = $.ig.ObjExtensionMethods.prototype.loadFtRboData(loadManager);
				}
				break;
			case $.ig.ObjectType.prototype.spinner:
			case $.ig.ObjectType.prototype.scrollBar:
			case $.ig.ObjectType.prototype.listBox:
			case $.ig.ObjectType.prototype.comboBox:
				obj._linkFmla = $.ig.ObjExtensionMethods.prototype.tryLoadObjLinkFmla(loadManager, obj);
				if (objectType == $.ig.ObjectType.prototype.listBox || objectType == $.ig.ObjectType.prototype.comboBox) {
					obj._list = $.ig.ObjExtensionMethods.prototype.loadFtLbsData(loadManager, obj);
				}
				break;
			case $.ig.ObjectType.prototype.editBox:
				obj._edit = $.ig.ObjExtensionMethods.prototype.loadFtEdoData(loadManager);
				break;
			case $.ig.ObjectType.prototype.groupBox:
				obj._gbo = $.ig.ObjExtensionMethods.prototype.loadFtGboData(loadManager);
				break;
		}
		if (objectType != $.ig.ObjectType.prototype.listBox && objectType != $.ig.ObjectType.prototype.comboBox) {
			var reserved = loadManager._currentRecordStream()._readUInt32();
			$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The end of this stream should be zero.");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadObj(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save16: function (obj, saveManager) {
		if (obj._cmo == null) {
			$.ig.ExcelUtils.prototype.debugFail("The cmo field must not be null.");
			return;
		}
		$.ig.ObjExtensionMethods.prototype.save3(obj._cmo, saveManager);
		var objectType = obj._cmo.ot();
		switch (objectType) {
			case $.ig.ObjectType.prototype.group:
				if (obj._gmo == null) {
					$.ig.ExcelUtils.prototype.debugFail("The gmo field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save6(obj._gmo, saveManager);
				break;
			case $.ig.ObjectType.prototype.picture:
				if (obj._pictFormat == null) {
					$.ig.ExcelUtils.prototype.debugFail("The pictFormat field must not be null.");
					return;
				}
				if (obj._pictFlags == null) {
					$.ig.ExcelUtils.prototype.debugFail("The pictFlags field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save2(obj._pictFormat, saveManager);
				$.ig.ObjExtensionMethods.prototype.save11(obj._pictFlags, saveManager);
				break;
			case $.ig.ObjectType.prototype.checkBox:
			case $.ig.ObjectType.prototype.optionButton:
				if (obj._cbls == null) {
					$.ig.ExcelUtils.prototype.debugFail("The cbls field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save(obj._cbls, saveManager);
				if (objectType == $.ig.ObjectType.prototype.optionButton) {
					if (obj._rbo == null) {
						$.ig.ExcelUtils.prototype.debugFail("The rbo field must not be null.");
						return;
					}
					$.ig.ObjExtensionMethods.prototype.save12(obj._rbo, saveManager);
				}
				break;
			case $.ig.ObjectType.prototype.spinner:
			case $.ig.ObjectType.prototype.scrollBar:
			case $.ig.ObjectType.prototype.listBox:
			case $.ig.ObjectType.prototype.comboBox:
				if (obj._sbs == null) {
					$.ig.ExcelUtils.prototype.debugFail("The sbs field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save14(obj._sbs, saveManager);
				break;
			case $.ig.ObjectType.prototype.comment:
				if (obj._nts == null) {
					$.ig.ExcelUtils.prototype.debugFail("The nts field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save9(obj._nts, saveManager);
				break;
		}
		if (obj._macro != null) {
			$.ig.ObjExtensionMethods.prototype.save8(obj._macro, saveManager);
		}
		switch (objectType) {
			case $.ig.ObjectType.prototype.picture:
				if (obj._pictFmla != null) {
					$.ig.ObjExtensionMethods.prototype.save10(obj._pictFmla, saveManager, obj);
				}
				break;
			case $.ig.ObjectType.prototype.checkBox:
			case $.ig.ObjectType.prototype.optionButton:
				if (obj._linkFmla != null) {
					$.ig.ObjExtensionMethods.prototype.save19(obj._linkFmla, saveManager, obj);
				}
				if (obj._checkBox == null) {
					$.ig.ExcelUtils.prototype.debugFail("The checkBox field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save1(obj._checkBox, saveManager, obj);
				if (objectType == $.ig.ObjectType.prototype.optionButton) {
					if (obj._radioButton == null) {
						$.ig.ExcelUtils.prototype.debugFail("The radioButton field must not be null.");
						return;
					}
					$.ig.ObjExtensionMethods.prototype.save13(obj._radioButton, saveManager);
				}
				break;
			case $.ig.ObjectType.prototype.spinner:
			case $.ig.ObjectType.prototype.scrollBar:
			case $.ig.ObjectType.prototype.listBox:
			case $.ig.ObjectType.prototype.comboBox:
				if (obj._linkFmla != null) {
					$.ig.ObjExtensionMethods.prototype.save19(obj._linkFmla, saveManager, obj);
				}
				if (objectType == $.ig.ObjectType.prototype.listBox || objectType == $.ig.ObjectType.prototype.comboBox) {
					if (obj._list == null) {
						$.ig.ExcelUtils.prototype.debugFail("The list field must not be null.");
						return;
					}
					$.ig.ObjExtensionMethods.prototype.save7(obj._list, saveManager, obj);
				}
				break;
			case $.ig.ObjectType.prototype.editBox:
				if (obj._edit == null) {
					$.ig.ExcelUtils.prototype.debugFail("The edit field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save4(obj._edit, saveManager);
				break;
			case $.ig.ObjectType.prototype.groupBox:
				if (obj._gbo == null) {
					$.ig.ExcelUtils.prototype.debugFail("The gbo field must not be null.");
					return;
				}
				$.ig.ObjExtensionMethods.prototype.save5(obj._gbo, saveManager);
				break;
		}
		if (objectType != $.ig.ObjectType.prototype.listBox && objectType != $.ig.ObjectType.prototype.comboBox) {
			saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCbls Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCbls(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtCbls: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.checkBoxLink) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtCbls();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtCbls.prototype.recordSize, "The cb field is incorrect for an FtCbls");
		result._unused1 = stream._readUInt32();
		result._unused2 = stream._readUInt32();
		result._unused3 = stream._readUInt32();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCbls Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCbls(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCbls, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (ftcbls, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.checkBoxLink);
		stream._write17($.ig.FtCbls.prototype.recordSize);
		stream._write18(ftcbls._unused1);
		stream._write18(ftcbls._unused2);
		stream._write18(ftcbls._unused3);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCbls, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCblsData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCblsData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	loadFtCblsData: function (loadManager, owner) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.checkBoxData) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtCblsData();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtCblsData.prototype.recordSize, "The cb field is incorrect for an FtCblsData");
		result._fChecked = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._fChecked != 2 || owner.cmo().ot() == $.ig.ObjectType.prototype.checkBox, "The fChecked field MUST NOT have the value 0x0002 if the cmo.ot field of the Obj record that contains this FtPioGrbit is not equal to 0x0B.");
		result._accel = stream._readUInt16();
		var mustBeZero = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(mustBeZero == 0, "The reserved field must be zero.");
		var temp = stream._readUInt16();
		result._fNo3d = (temp & 1) == 1;
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCblsData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCblsData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCblsData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	save1: function (ftcblsdata, saveManager, obj) {
		var stream = saveManager._currentRecordStream();
		var temp = 0;
		if (ftcblsdata._fNo3d) {
			temp |= 1;
		}
		stream._write17($.ig.OBJRecordType.prototype.checkBoxData);
		stream._write17($.ig.FtCblsData.prototype.recordSize);
		stream._write17(ftcblsdata._fChecked);
		stream._write17(ftcblsdata._accel);
		stream._write17(0);
		stream._write17(temp);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCblsData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCf Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCf(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtCf: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.clipboardFormat) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtCf();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtCf.prototype.recordSize, "The cb field is incorrect for an FtCf");
		result._format = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.PictureClipboardFormat.prototype.$type, $.ig.PictureClipboardFormat.prototype.getBox(result._format)), "Undefined picture format.");
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCf Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCf(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCf, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save2: function (ftcf, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.clipboardFormat);
		stream._write17($.ig.FtCf.prototype.recordSize);
		stream._write17(ftcf._format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCf, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCmo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCmo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtCmo: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.commonObjectData) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtCmo(0);
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtCmo.prototype.recordSize, "The cb field is incorrect for an FtCmo");
		result._ot = stream._readUInt16();
		result._id = stream._readUInt16();
		result._optionFlags = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.ObjectType.prototype.$type, $.ig.ObjectType.prototype.getBox(result._ot)), null);
		result._unused1 = stream._readUInt32();
		result._unused2 = stream._readUInt32();
		result._unused3 = stream._readUInt32();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCmo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtCmo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCmo, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save3: function (ftcmo, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.commonObjectData);
		stream._write17($.ig.FtCmo.prototype.recordSize);
		stream._write17(ftcmo._ot);
		stream._write17(ftcmo._id);
		stream._write17(ftcmo._optionFlags);
		stream._write18(ftcmo._unused1);
		stream._write18(ftcmo._unused2);
		stream._write18(ftcmo._unused3);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtCmo, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtEdoData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtEdoData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtEdoData: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.editControlData) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtEdoData();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtEdoData.prototype.recordSize, "The cb field is incorrect for an FtEdoData");
		result._ivEdit = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._ivEdit >= 0 && result._ivEdit <= 4, "The ivEdit field must be between 0 and 4, inclusive.");
		var fMultiLine = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(fMultiLine == 0 || fMultiLine == 1, "The fMultiLine field must be zero or one.");
		result._fMultiLine = (fMultiLine != 0);
		var fVScroll = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(fVScroll == 0 || fVScroll == 1, "The fVScroll field must be zero or one.");
		result._fVScroll = (fVScroll != 0);
		result._id = stream._readUInt16();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtEdoData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtEdoData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtEdoData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save4: function (data, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.editControlData);
		stream._write17($.ig.FtEdoData.prototype.recordSize);
		stream._write17(data._ivEdit);
		stream._write17((data._fMultiLine ? 1 : 0));
		stream._write17((data._fVScroll ? 1 : 0));
		stream._write17(data._id);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtEdoData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGboData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtGboData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtGboData: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.groupBoxData) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtGboData();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtGboData.prototype.recordSize, "The cb field is incorrect for an FtGboData");
		result._accel = stream._readUInt16();
		var reserved = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved file must be zero.");
		var temp = stream._readUInt16();
		result._fNo3d = (temp & 1) == 1;
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGboData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtGboData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGboData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save5: function (data, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.groupBoxData);
		stream._write17($.ig.FtGboData.prototype.recordSize);
		stream._write17(data._accel);
		stream._write17(0);
		stream._write17((data._fNo3d ? 1 : 0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGboData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGmo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtGmo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtGmo: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.groupMarker) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtGmo();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtGmo.prototype.recordSize, "The cb field is incorrect for an FtGmo");
		result._unused = stream._readUInt16();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGmo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtGmo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGmo, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save6: function (gmo, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.groupMarker);
		stream._write17($.ig.FtGmo.prototype.recordSize);
		stream._write17(gmo._unused);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtGmo, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtLbsData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtLbsData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	loadFtLbsData: function (loadManager, owner) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.listBoxData) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtLbsData();
		result._cbFContinued = stream._readUInt16();
		if (result._cbFContinued != 0) {
			result._fmla = $.ig.ObjExtensionMethods.prototype.loadObjFmla(loadManager);
			result._cLines = stream._readUInt16();
			$.ig.ExcelUtils.prototype.debugAssert(result._cLines <= 32767, "The cLines field must be less than or equal to 0x7FFF.");
			result._iSel = stream._readUInt16();
			$.ig.ExcelUtils.prototype.debugAssert(result._iSel <= result._cLines, "The iSel field must be less than or equal to the cLines field.");
			result._flags = stream._readUInt16();
			var fValidPlex = (result._flags & 2) == 2;
			var wListSelType = ((result._flags & 48) >> 4);
			result._idEdit = stream._readUInt16();
			if (owner.cmo().ot() == $.ig.ObjectType.prototype.comboBox) {
				result._dropData = $.ig.ObjExtensionMethods.prototype.loadLbsDropData(loadManager);
			}
			if (fValidPlex) {
				result._rgLines = new Array(result._cLines);
				for (var i = 0; i < result._cLines; i++) {
					result._rgLines[i] = stream._readXLUnicodeString();
				}
			}
			if (wListSelType != 0) {
				result._bsels = new Array(result._cLines);
				for (var i1 = 0; i1 < result._cLines; i1++) {
					var value = stream.readByte();
					$.ig.ExcelUtils.prototype.debugAssert(value == 0 || value == 1, "Each value in the bsels field must be zero or one.");
					result._bsels[i1] = (value != 0);
				}
			}
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtLbsData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtLbsData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtLbsData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	save7: function (data, saveManager, owner) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.listBoxData);
		stream._write17(data._cbFContinued);
		if (data._cbFContinued == 0) {
			return;
		}
		$.ig.ObjExtensionMethods.prototype.save18(data._fmla, saveManager);
		stream._write17(data._cLines);
		stream._write17(data._iSel);
		stream._write17(data._flags);
		stream._write17(data._idEdit);
		if (owner.cmo().ot() == $.ig.ObjectType.prototype.comboBox) {
			$.ig.ExcelUtils.prototype.debugAssert(data._dropData != null, "We must have a dropData field in data case.");
			if (data._dropData != null) {
				$.ig.ObjExtensionMethods.prototype.save15(data._dropData, stream);
			}
		}
		if (data._rgLines != null) {
			for (var i = 0; i < data._cLines; i++) {
				stream._writeXLUnicodeString(data._rgLines[i]);
			}
		}
		if (data._bsels != null) {
			for (var i1 = 0; i1 < data._cLines; i1++) {
				stream._write9((data._bsels[i1] ? 1 : 0));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtLbsData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtMacro, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save8: function (macro, saveManager) {
		if (macro.fmla() == null) {
			$.ig.ExcelUtils.prototype.debugFail("This record should only exist if it has a fmla value.");
			return;
		}
		saveManager._currentRecordStream()._write17($.ig.OBJRecordType.prototype.macro);
		$.ig.ObjExtensionMethods.prototype.save18(macro.fmla(), saveManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtMacro, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtMacro Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::TryLoadFtMacro(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	tryLoadFtMacro: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt1(loadManager, $.ig.OBJRecordType.prototype.macro, false) == false) {
			return null;
		}
		var result = new $.ig.FtMacro();
		result._fmla = $.ig.ObjExtensionMethods.prototype.loadObjFmla(loadManager);
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtMacro Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::TryLoadFtMacro(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtNts Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtNts(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtNts: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.note) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtNts();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtNts.prototype.recordSize, "The cb field is incorrect for an FtNts");
		result._guid = new $.ig.Guid(1, stream._readBytes(16));
		result._fSharedNote = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._fSharedNote == 0 || result._fSharedNote == 1, "The fSharedNote field must be zero or one.");
		result._unused = stream._readUInt32();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtNts Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtNts(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtNts, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save9: function (ftnts, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.note);
		stream._write17($.ig.FtNts.prototype.recordSize);
		stream._write2(ftnts._guid.toByteArray());
		stream._write17(ftnts._fSharedNote);
		stream._write18(ftnts._unused);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtNts, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPictFmla, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	save10: function (pictfmla, saveManager, owner) {
		if (pictfmla._fmla == null) {
			$.ig.ExcelUtils.prototype.debugFail("The fmla field must not be null.");
			return;
		}
		if (owner.pictFlags().fCtl() && pictfmla.key() == null) {
			$.ig.ExcelUtils.prototype.debugFail("The key field must not be null if the pcitFlags.fCtl flag is True in the owning OBJ record.");
			return;
		}
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.pictureFormulaStyleMacro);
		stream._write17(0);
		var start = stream.position();
		$.ig.ObjExtensionMethods.prototype.save18(pictfmla.fmla(), saveManager);
		var formula = pictfmla.getFormula();
		if (formula != null && formula._postfixTokenList().length >= 1 && $.ig.util.cast($.ig.TblToken.prototype.$type, formula._postfixTokenList()[0]) !== null) {
			stream._write18(pictfmla._lPosInCtlStm);
			if (owner.pictFlags().fPrstm()) {
				stream._write18(pictfmla._cbBufInCtlStm);
			}
		}
		if (owner.pictFlags().fCtl()) {
			$.ig.ObjExtensionMethods.prototype.save21(pictfmla._key, saveManager);
		}
		var end = stream.position();
		var cb = (end - start);
		stream.position(start - 2);
		stream._write17(cb);
		stream.position(end);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPictFmla, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPictFmla Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::TryLoadFtPictFmla(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	tryLoadFtPictFmla: function (loadManager, owner) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt1(loadManager, $.ig.OBJRecordType.prototype.pictureFormulaStyleMacro, false) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtPictFmla();
		var cb = stream._readUInt16();
		var start = stream.position();
		result._fmla = $.ig.ObjExtensionMethods.prototype.loadObjFmla(loadManager);
		var formula = result.getFormula();
		if (formula != null && formula._postfixTokenList().length >= 1 && $.ig.util.cast($.ig.TblToken.prototype.$type, formula._postfixTokenList()[0]) !== null) {
			result._lPosInCtlStm = stream._readUInt32();
			if (owner.pictFlags().fPrstm()) {
				result._cbBufInCtlStm = stream._readUInt32();
			}
		}
		if (owner.pictFlags().fCtl()) {
			result._key = $.ig.ObjExtensionMethods.prototype.loadPictFmlaKey(loadManager);
		}
		$.ig.ExcelUtils.prototype.debugAssert(cb == stream.position() - start, "The cb field was incorrect.");
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPictFmla Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::TryLoadFtPictFmla(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPioGrbit Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtPioGrbit(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtPioGrbit: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.pictureOptionFlags) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtPioGrbit(true);
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtPioGrbit.prototype.recordSize, "The cb field is incorrect for an FtPioGrbit");
		result._data = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result.fDde() == false || result.fCtl() == false, "fDde and DCtrl cannot both be True.");
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPioGrbit Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtPioGrbit(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPioGrbit, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save11: function (data, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.pictureOptionFlags);
		stream._write17($.ig.FtPioGrbit.prototype.recordSize);
		stream._write17(data._data);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtPioGrbit, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRbo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtRbo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtRbo: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.radioButton) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtRbo();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtRbo.prototype.recordSize, "The cb field is incorrect for an FtRbo");
		result._unused1 = stream._readUInt32();
		result._unused2 = stream._readUInt16();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRbo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtRbo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRbo, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save12: function (data, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.radioButton);
		stream._write17($.ig.FtRbo.prototype.recordSize);
		stream._write18(data._unused1);
		stream._write17(data._unused2);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRbo, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRboData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtRboData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtRboData: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.radioButtonData) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtRboData();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtRboData.prototype.recordSize, "The cb field is incorrect for an FtRboData");
		result._idRadNext = stream._readUInt16();
		var fFirstBtn = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(fFirstBtn == 0 || fFirstBtn == 1, "The fFirstBtn must be zero or one.");
		result._fFirstBtn = (fFirstBtn != 0);
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRboData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtRboData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRboData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save13: function (data, saveManager) {
		var stream = saveManager._currentRecordStream();
		if (data._idRadNextShape != null && data._idRadNextShape.worksheet() != null) {
			data._idRadNext = data._idRadNextShape._obj().cmo().id();
		} else {
			data._idRadNext = 0;
		}
		stream._write17($.ig.OBJRecordType.prototype.radioButtonData);
		stream._write17($.ig.FtRboData.prototype.recordSize);
		stream._write17(data._idRadNext);
		stream._write17((data._fFirstBtn ? 1 : 0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtRboData, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtSbs Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtSbs(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadFtSbs: function (loadManager) {
		if ($.ig.ObjUtilities.prototype.readAndVerifyFt(loadManager, $.ig.OBJRecordType.prototype.scrollBar) == false) {
			return null;
		}
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.FtSbs();
		var cb = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.FtSbs.prototype.recordSize, "The cb field is incorrect for an FtSbs");
		result._unused1 = stream._readUInt32();
		result._iVal = stream._readUInt16();
		result._iMin = stream._readUInt16();
		result._iMax = stream._readUInt16();
		result._dInc = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._dInc > 0, "the dInc value must be greater than zero.");
		result._dPage = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._dPage > 0, "the dInc value must be greater than zero.");
		result._fHoriz = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._fHoriz == 0 || result._fHoriz == 1, "The fHoriz field must be zero or one.");
		result._dxScroll = stream._readUInt16();
		result._flags = stream._readUInt16();
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtSbs Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadFtSbs(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtSbs, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save14: function (data, saveManager) {
		var stream = saveManager._currentRecordStream();
		stream._write17($.ig.OBJRecordType.prototype.scrollBar);
		stream._write17($.ig.FtSbs.prototype.recordSize);
		stream._write18(data._unused1);
		stream._write17(data._iVal);
		stream._write17(data._iMin);
		stream._write17(data._iMax);
		stream._write17(data._dInc);
		stream._write17(data._dPage);
		stream._write17(data._fHoriz);
		stream._write17(data._dxScroll);
		stream._write17(data._flags);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.FtSbs, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjectParsedFormula Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadObjectParsedFormula(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadObjectParsedFormula: function (loadManager) {
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.ObjectParsedFormula();
		var temp = stream._readUInt16();
		var cce = (temp & 61439);
		$.ig.ExcelUtils.prototype.debugAssert(cce > 0, "The length of rgce must be greater than zero.");
		var A = (temp & 32768);
		$.ig.ExcelUtils.prototype.debugAssert(A == 0, "This field must be zero.");
		result._unused = stream._readUInt32();
		result._rgce = $.ig.ObjExtensionMethods.prototype.loadRgce(loadManager, cce);
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjectParsedFormula Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadObjectParsedFormula(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjectParsedFormula, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save17: function (fmla, saveManager) {
		if (fmla._rgce == null) {
			$.ig.ExcelUtils.prototype.debugFail("The rgce field must not be null.");
			return;
		}
		var stream = saveManager._currentRecordStream();
		stream._write17(0);
		stream._write18(fmla._unused);
		var start = stream.position();
		$.ig.ObjExtensionMethods.prototype.save22(fmla._rgce, saveManager);
		var end = stream.position();
		var cce = (end - start);
		stream.position(start - 6);
		stream._write17(cce);
		stream.position(end);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjectParsedFormula, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjFmla Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadObjFmla(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadObjFmla: function (loadManager) {
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.ObjFmla();
		var cbFmla = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cbFmla % 2 == 0, "The length must be even.");
		var startPosition = stream.position();
		if (cbFmla > 0) {
			result._fmla = $.ig.ObjExtensionMethods.prototype.loadObjectParsedFormula(loadManager);
			var formula = result.getFormula();
			if (formula != null && formula._postfixTokenList().length >= 1 && $.ig.util.cast($.ig.TblToken.prototype.$type, formula._postfixTokenList()[0]) !== null) {
				result._embedInfo = $.ig.ObjExtensionMethods.prototype.loadPictFmlaEmbedInfo(loadManager);
			}
		}
		var remaining = cbFmla - (stream.position() - startPosition);
		stream._readBytes(remaining);
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjFmla Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadObjFmla(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjFmla, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save18: function (fmla, saveManager) {
		var formula = fmla.getFormula();
		var saveEmbedInfo = formula != null && formula._postfixTokenList().length >= 1 && $.ig.util.cast($.ig.TblToken.prototype.$type, formula._postfixTokenList()[0]) !== null;
		if (saveEmbedInfo && fmla._embedInfo == null) {
			$.ig.ExcelUtils.prototype.debugFail("The embedInfo field must not be null when the first ptg of the formula is a Tbl token.");
			return;
		}
		var stream = saveManager._currentRecordStream();
		stream._write17(0);
		if (fmla._fmla == null) {
			return;
		}
		var start = stream.position();
		$.ig.ObjExtensionMethods.prototype.save17(fmla._fmla, saveManager);
		if (saveEmbedInfo) {
			$.ig.ObjExtensionMethods.prototype.save20(fmla._embedInfo, stream);
		}
		var end = stream.position();
		var cbFmla = end - start;
		if (cbFmla % 4 != 0) {
			var padding = (4 - (cbFmla % 4));
			stream._write2(new Array(padding));
			cbFmla += padding;
		}
		stream.position(start - 2);
		stream._write17(cbFmla);
		stream.seek(cbFmla, $.ig.SeekOrigin.prototype.current);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjFmla, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjLinkFmla, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	save19: function (link, saveManager, owner) {
		if (link._fmla == null) {
			$.ig.ExcelUtils.prototype.debugFail("This record should only exist if it has a fmla value.");
			return;
		}
		var ft;
		switch (owner.cmo().ot()) {
			case $.ig.ObjectType.prototype.checkBox:
			case $.ig.ObjectType.prototype.optionButton:
				ft = $.ig.OBJRecordType.prototype.checkBoxLinkFormulaStyleMacro;
				break;
			case $.ig.ObjectType.prototype.spinner:
			case $.ig.ObjectType.prototype.scrollBar:
			case $.ig.ObjectType.prototype.listBox:
			case $.ig.ObjectType.prototype.comboBox:
				ft = $.ig.OBJRecordType.prototype.scrollBarFormulaStyleMacro;
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("The ObjLinkFmla should not exist.");
				return;
		}
		saveManager._currentRecordStream()._write17(ft);
		$.ig.ObjExtensionMethods.prototype.save18(link._fmla, saveManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjLinkFmla, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjLinkFmla Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::TryLoadObjLinkFmla(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	tryLoadObjLinkFmla: function (loadManager, owner) {
		switch (owner.cmo().ot()) {
			case $.ig.ObjectType.prototype.checkBox:
			case $.ig.ObjectType.prototype.optionButton:
				if ($.ig.ObjUtilities.prototype.readAndVerifyFt1(loadManager, $.ig.OBJRecordType.prototype.checkBoxLinkFormulaStyleMacro, false) == false) {
					return null;
				}
				break;
			case $.ig.ObjectType.prototype.spinner:
			case $.ig.ObjectType.prototype.scrollBar:
			case $.ig.ObjectType.prototype.listBox:
			case $.ig.ObjectType.prototype.comboBox:
				if ($.ig.ObjUtilities.prototype.readAndVerifyFt1(loadManager, $.ig.OBJRecordType.prototype.scrollBarFormulaStyleMacro, false) == false) {
					return null;
				}
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("The ObjLinkFmla should not exist.");
				return null;
		}
		var result = new $.ig.ObjLinkFmla();
		result._fmla = $.ig.ObjExtensionMethods.prototype.loadObjFmla(loadManager);
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjLinkFmla Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::TryLoadObjLinkFmla(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaKey Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadPictFmlaKey(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadPictFmlaKey: function (loadManager) {
		var result = new $.ig.PictFmlaKey();
		var cbKey = loadManager._currentRecordStream()._readUInt32();
		result._keyBuf = loadManager._currentRecordStream()._readBytes(cbKey);
		result._fmlaLinkedCell = $.ig.ObjExtensionMethods.prototype.loadObjFmla(loadManager);
		result._fmlaListFillRange = $.ig.ObjExtensionMethods.prototype.loadObjFmla(loadManager);
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaKey Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadPictFmlaKey(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaKey, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save21: function (key, saveManager) {
		if (key._fmlaLinkedCell == null) {
			$.ig.ExcelUtils.prototype.debugFail("The fmlaLinkedCell field must not be null.");
			return;
		}
		if (key._fmlaListFillRange == null) {
			$.ig.ExcelUtils.prototype.debugFail("The fmlaListFillRange field must not be null.");
			return;
		}
		var stream = saveManager._currentRecordStream();
		stream._write18($.ig.util.intSToU(key._keyBuf.length));
		stream._write2(key._keyBuf);
		$.ig.ObjExtensionMethods.prototype.save18(key._fmlaLinkedCell, saveManager);
		$.ig.ObjExtensionMethods.prototype.save18(key._fmlaListFillRange, saveManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaKey, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Rgce Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadRgce(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.UInt16)" />*/
	loadRgce: function (loadManager, length) {
		var result = new $.ig.Rgce();
		var dataIndex = 0;
		var data = loadManager._currentRecordStream()._readBytes(length);
		result._formula = (function () { var $ret = loadManager._loadFormula1($.ig.FormulaType.prototype.namedReferenceFormula, length, data, dataIndex); data = $ret.p2; dataIndex = $ret.p3; return $ret.ret; }());
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Rgce Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadRgce(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.UInt16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Rgce, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save22: function (rgce, saveManager) {
		if (rgce._formula == null) {
			$.ig.ExcelUtils.prototype.debugFail("The formula must not be null.");
			return;
		}
		saveManager._saveFormula(rgce._formula, false, false, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Rgce, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.LbsDropData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadLbsDropData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadLbsDropData: function (loadManager) {
		var stream = loadManager._currentRecordStream();
		var result = new $.ig.LbsDropData();
		var temp = stream._readUInt16();
		result._wStyle = (temp & 3);
		$.ig.ExcelUtils.prototype.debugAssert(result._wStyle >= 0 && result._wStyle <= 2, "The value of the wStyle field must be between 0 and 2.");
		result._cLine = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._cLine <= 32767, "The value of the cLines field must be less than or equal to 0x7FFF");
		result._dxMin = stream._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(result._dxMin <= 32767, "The value of the dxMin field must be less than or equal to 0x7FFF");
		var start = stream.position();
		result._str = stream._readXLUnicodeString();
		var strLength = stream.position() - start;
		if (strLength % 2 == 1) {
			stream.readByte();
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.LbsDropData Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadLbsDropData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.LbsDropData, Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	save15: function (data, stream) {
		var temp = 0;
		temp |= data._wStyle;
		stream._write17(temp);
		stream._write17(data._cLine);
		stream._write17(data._dxMin);
		var start = stream.position();
		stream._writeXLUnicodeString(data._str);
		var strLength = stream.position() - start;
		if (strLength % 2 == 1) {
			stream.writeByte(0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.LbsDropData, Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaEmbedInfo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadPictFmlaEmbedInfo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadPictFmlaEmbedInfo: function (loadManager) {
		var result = new $.ig.PictFmlaEmbedInfo();
		var ttb = loadManager._currentRecordStream().readByte();
		$.ig.ExcelUtils.prototype.debugAssert(ttb == 3, "The ttb field is incorrect.");
		var cbClass = loadManager._currentRecordStream().readByte();
		var reserved = loadManager._currentRecordStream().readByte();
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved field is incorrect.");
		if (cbClass != 0) {
			result._strClass = loadManager._currentRecordStream()._readXLUnicodeStringNoCch(cbClass);
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaEmbedInfo Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::LoadPictFmlaEmbedInfo(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaEmbedInfo, Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	save20: function (info, stream) {
		var cbClass = 0;
		if (info._strClass != null) {
			cbClass = info._strClass.length;
		}
		stream.writeByte(3);
		stream.writeByte(cbClass);
		stream.writeByte(0);
		stream._writeXLUnicodeStringNoCch(info._strClass);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods::Save(Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.PictFmlaEmbedInfo, Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	$type: new $.ig.Type('ObjExtensionMethods', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjExtensionMethods" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjUtilities" />*/

$.ig.util.defType('ObjUtilities', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjUtilities::ReadAndVerifyFt(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.OBJRecordType)" />*/
	readAndVerifyFt: function (loadManager, expectedFt) {
		return $.ig.ObjUtilities.prototype.readAndVerifyFt1(loadManager, expectedFt, true);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjUtilities::ReadAndVerifyFt(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.OBJRecordType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjUtilities::ReadAndVerifyFt(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.OBJRecordType, System.Boolean)" />*/
	readAndVerifyFt1: function (loadManager, expectedFt, isRequired) {
		var ft = loadManager._currentRecordStream()._readUInt16();
		if (ft != expectedFt) {
			$.ig.ExcelUtils.prototype.debugAssert(isRequired == false, "The ft field is incorrect.");
			loadManager._currentRecordStream().seek(-2, $.ig.SeekOrigin.prototype.current);
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjUtilities::ReadAndVerifyFt(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.OBJRecordType, System.Boolean)" />*/
	,
	$type: new $.ig.Type('ObjUtilities', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.ObjUtilities" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase" />*/

$.ig.util.defType('EscherRecordBase', 'Object', {
	_parentRecord: null,
	_version: 0,
	_instance: 0,
	_recordLength: 0,
	init: function (version, instance, recordLength) {
		$.ig.Object.prototype.init.call(this);
		this._version = version;
		this._instance = instance;
		this._recordLength = recordLength;
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::ParentRecord()" />*/
	parentRecord: function (value) {
		if (arguments.length === 1) {
			this._parentRecord = value;
			return value;
		} else {
			return this._parentRecord;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::ParentRecord()" />*/
	,
	/*<BeginProperty Name="System.UInt16 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Instance()" />*/
	instance: function (value) {
		if (arguments.length === 1) {
			this._instance = value;
			return value;
		} else {
			return this._instance;
		}
	}
	/*<EndProperty Name="System.UInt16 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Instance()" />*/
	,
	/*<BeginProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::RecordLength()" />*/
	recordLength: function (value) {
		if (arguments.length === 1) {
			if (this.parentRecord() != null) {
				if (this._recordLength < value) {
					this.parentRecord().recordLength(this.parentRecord().recordLength() + (value - this._recordLength));
				} else {
					this.parentRecord().recordLength(this.parentRecord().recordLength() - (this._recordLength - value));
				}
			}
			this._recordLength = value;
			return value;
		} else {
			return this._recordLength;
		}
	}
	/*<EndProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::RecordLength()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::ToString()" />*/
	toString: function () {
		return $.ig.EscherRecordType.prototype.$getName(this.type()) + ": " + this._recordLength;
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::ToString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var header = 0;
		header |= this._version;
		header |= ((this._instance & 4095) << 4);
		header |= (this.type() << 16);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(header));
		saveManager._currentRecordStream()._write18(this._recordLength);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Type()" />*/
	type: function () {
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::Type()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::LoadRecord(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase)" />*/
	loadRecord: function (loadManager, parentRecord) {
		var header = loadManager._currentRecordStream()._readUInt32();
		var recordLength = loadManager._currentRecordStream()._readUInt32();
		var version = (header & 15);
		var instance = ((header & 65520) >>> 4);
		var type = (($.ig.util.u32BitwiseAnd(header, 4294901760)) >>> 16);
		var record = $.ig.EscherRecordBase.prototype.createEscherRecord(type, version, instance, recordLength);
		if (record == null) {
			return record;
		}
		record._parentRecord = parentRecord;
		var endPosition = loadManager._currentRecordStream().position() + recordLength;
		if (record != null) {
			$.ig.ExcelUtils.prototype.debugWriteLineIf($.ig.WorkbookSerializationDataExcel2003.prototype.debugWriteRecords, $.ig.EscherRecordType.prototype.getBox(type) + ": " + recordLength);
			$.ig.ExcelUtils.prototype.debugAssert(record.type() == type, "The wrong record has been created.");
			record.load(loadManager);
			$.ig.ExcelUtils.prototype.debugAssert(endPosition == loadManager._currentRecordStream().position(), "The full record wasn't read in for the type " + $.ig.EscherRecordType.prototype.getBox(type));
		}
		loadManager._currentRecordStream().position(endPosition);
		return record;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::LoadRecord(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::CreateEscherRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType, System.Byte, System.UInt16, System.UInt32)" />*/
	createEscherRecord: function (type, version, instance, recordLength) {
		switch (type) {
			case $.ig.EscherRecordType.prototype.drawingGroupContainer: return new $.ig.DrawingGroupContainer(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.bLIPStoreContainer: return new $.ig.BLIPStoreContainer(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.drawingContainer: return new $.ig.DrawingContainer(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.groupContainer: return new $.ig.GroupContainer(2, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.shapeContainer: return new $.ig.ShapeContainer(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.solverContainer: return new $.ig.SolverContainer(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.drawingGroup: return new $.ig.DrawingGroup(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.bLIPStoreEntry: return new $.ig.BLIPStoreEntry(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.drawing: return new $.ig.Drawing(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.groupShape: return new $.ig.GroupShape(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.shape: return new $.ig.EscherShape(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.propertyTable1: return new $.ig.PropertyTable1(2, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.textbox: break;
			case $.ig.EscherRecordType.prototype.clientTextbox: return new $.ig.ClientTextBox(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.anchor: break;
			case $.ig.EscherRecordType.prototype.childAnchor: return new $.ig.ChildAnchor(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.clientAnchor: return new $.ig.ClientAnchor(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.clientData: return new $.ig.ClientData(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.connectorRule: return new $.ig.ConnectorRule(version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.alignRule: break;
			case $.ig.EscherRecordType.prototype.arcRule: break;
			case $.ig.EscherRecordType.prototype.clientRule: break;
			case $.ig.EscherRecordType.prototype.classID: break;
			case $.ig.EscherRecordType.prototype.calloutRule: return new $.ig.CalloutRule(version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.regroup: return new $.ig.Regroup(version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.selections: return new $.ig.Selections(version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.colorMRU: break;
			case $.ig.EscherRecordType.prototype.deletedPSPL: break;
			case $.ig.EscherRecordType.prototype.splitMenuColors: return new $.ig.SplitMenuColors(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.oLEObject: break;
			case $.ig.EscherRecordType.prototype.colorScheme: break;
			case $.ig.EscherRecordType.prototype.propertyTable2: return new $.ig.PropertyTable2(1, version, instance, recordLength);
			case $.ig.EscherRecordType.prototype.propertyTable3: return new $.ig.PropertyTable3(2, version, instance, recordLength);
			default:
				if ($.ig.EscherRecordType.prototype.bLIPMin <= type && type <= $.ig.EscherRecordType.prototype.bLIPMax) {
					return new $.ig.BLIP(1, type, version, instance, recordLength);
				}
				$.ig.ExcelUtils.prototype.debugFail("Unknown escher record type: " + $.ig.EscherRecordType.prototype.getBox(type));
				return null;
		}
		$.ig.ExcelUtils.prototype.debugFail("A known escher record type was not created: " + $.ig.EscherRecordType.prototype.getBox(type));
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase::CreateEscherRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType, System.Byte, System.UInt16, System.UInt32)" />*/
	,
	$type: new $.ig.Type('EscherRecordBase', $.ig.Object.prototype.$type, [$.ig.IEscherRecord.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP" />*/

$.ig.util.defType('BLIP', 'EscherRecordBase', {
	_type: 0,
	_blipType: 0,
	_image: null,
	_imageData: null,
	_secondaryId: null,
	_tag: 0,
	_emfData: null,
	staticInit: function () {
		$.ig.BLIP.prototype.__initializeStreamByBlipType = new $.ig.Dictionary$2($.ig.BLIPType.prototype.$type, $.ig.Action$2.prototype.$type.specialize($.ig.BLIP.prototype.$type, $.ig.Stream.prototype.$type), 0);
		$.ig.BLIP.prototype.__initializeStreamByBlipType.item($.ig.BLIPType.prototype.jPEG, function (blip, s) { blip._image.save(s, $.ig.ImageFormat.prototype.jpeg); });
		$.ig.BLIP.prototype.__initializeStreamByBlipType.item($.ig.BLIPType.prototype.pNG, function (blip, s) { blip._image.save(s, $.ig.ImageFormat.prototype.png); });
		$.ig.BLIP.prototype.__saveActionsByBlipType = new $.ig.Dictionary$2($.ig.BLIPType.prototype.$type, $.ig.Action$2.prototype.$type.specialize($.ig.BLIP.prototype.$type, $.ig.WorkbookSaveManagerExcel2003.prototype.$type), 0);
		$.ig.BLIP.prototype.__saveActionsByBlipType.item($.ig.BLIPType.prototype.jPEG, function (blip, m) {
			$.ig.ExcelUtils.prototype.debugAssert(blip.instance() == $.ig.BLIPRecordType.prototype.jPEG, null);
			blip.saveBitmap(m);
		});
		$.ig.BLIP.prototype.__saveActionsByBlipType.item($.ig.BLIPType.prototype.pNG, function (blip, m) {
			$.ig.ExcelUtils.prototype.debugAssert(blip.instance() == $.ig.BLIPRecordType.prototype.pNG, null);
			blip.saveBitmap(m);
		});
	},
	init: function (initNumber, image) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		this._secondaryId = new $.ig.Guid();
		$.ig.EscherRecordBase.prototype.init.call(this, 0, 0, 0);
		this._tag = 255;
		this._image = image;
		try {
			var format = this._image.rawFormat();
			if (format.equals($.ig.ImageFormat.prototype.emf)) {
				this._blipType = $.ig.BLIPType.prototype.eMF;
				this.instance($.ig.BLIPRecordType.prototype.eMF);
			} else if (format.equals($.ig.ImageFormat.prototype.wmf)) {
				this._blipType = $.ig.BLIPType.prototype.wMF;
				this.instance($.ig.BLIPRecordType.prototype.wMF);
			} else if (format.equals($.ig.ImageFormat.prototype.jpeg)) {
				this._blipType = $.ig.BLIPType.prototype.jPEG;
				this.instance($.ig.BLIPRecordType.prototype.jPEG);
			} else {
				this._blipType = $.ig.BLIPType.prototype.pNG;
				this.instance($.ig.BLIPRecordType.prototype.pNG);
			}
		}
		catch (ex) {
			throw new $.ig.InvalidOperationException(2, $.ig.excel.locale.getString("LE_InvalidOperationException_ImageDisposed"), ex);
		}
		{
			var stream = new $.ig.MemoryStream(0);
			try {
				this.initializeStream(stream);
				stream.position(0);
				this._imageData = new Array(stream.length());
				stream.read(this._imageData, 0, this._imageData.length);
			}
			finally {
				if (stream != null) {
					stream.dispose();
				}
			}
		}
		this._type = (this._blipType + $.ig.EscherRecordType.prototype.bLIPMin);
		this.recordLength($.ig.util.intSToU(this._imageData.length) + 17);
		this._secondaryId = $.ig.ExcelUtils.prototype.computeMD4Hash(this._imageData);
		if (this._blipType == $.ig.BLIPType.prototype.eMF || this._blipType == $.ig.BLIPType.prototype.wMF) {
			try {
				{
					var compressedStream = new $.ig.MemoryStream(0);
					try {
						{
							var zipStream = new $.ig.GZipStream(compressedStream, $.ig.CompressionMode.prototype.compress);
							try {
								zipStream.write(this._imageData, 0, this._imageData.length);
							}
							finally {
								if (zipStream != null) {
									zipStream.dispose();
								}
							}
						}
						var rawCompressedData = compressedStream.toArray();
						var HeaderLength = 10;
						this._emfData = new Array(rawCompressedData.length - HeaderLength + 2);
						this._emfData[0] = 0;
						this._emfData[1] = 0;
						$.ig.Buffer.prototype.blockCopy(rawCompressedData, HeaderLength, this._emfData, 2, this._emfData.length - 2);
						this.recordLength($.ig.util.intSToU((50 + this._emfData.length)));
					}
					finally {
						if (compressedStream != null) {
							compressedStream.dispose();
						}
					}
				}
			}
			catch (ex1) {
				$.ig.ExcelUtils.prototype.debugFail("Exception when saving EMF file: " + ex1.toString());
				this.recordLength($.ig.util.intSToU((50 + this._imageData.length)));
			}
		}
	},
	init1: function (initNumber, type, version, instance, recordLength) {
		this._secondaryId = new $.ig.Guid();
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		this._type = type;
		this._blipType = (this._type - $.ig.EscherRecordType.prototype.bLIPMin);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.BLIPRecordType.prototype.$type, $.ig.BLIPRecordType.prototype.getBox(this.instance())), null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		switch (this._blipType) {
			case $.ig.BLIPType.prototype.jPEG:
				$.ig.ExcelUtils.prototype.debugAssert(this.instance() == $.ig.BLIPRecordType.prototype.jPEG, null);
				this.loadBitmap(loadManager, $.ig.ImageFormat.prototype.jpeg);
				break;
			case $.ig.BLIPType.prototype.pNG:
				$.ig.ExcelUtils.prototype.debugAssert(this.instance() == $.ig.BLIPRecordType.prototype.pNG, null);
				this.loadBitmap(loadManager, $.ig.ImageFormat.prototype.png);
				break;
			case $.ig.BLIPType.prototype.dIB:
				$.ig.ExcelUtils.prototype.debugAssert(this.instance() == $.ig.BLIPRecordType.prototype.dIB, null);
				this.loadDIB(loadManager);
				break;
			case $.ig.BLIPType.prototype.eMF:
				$.ig.ExcelUtils.prototype.debugAssert(this.instance() == $.ig.BLIPRecordType.prototype.eMF, null);
				this.loadEMF(loadManager);
				break;
			case $.ig.BLIPType.prototype.wMF:
				$.ig.ExcelUtils.prototype.debugAssert(this.instance() == $.ig.BLIPRecordType.prototype.wMF, null);
				this.loadEMF(loadManager);
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown blip type: " + $.ig.BLIPType.prototype.getBox(this._blipType));
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var $self = this;
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		var saveAction;
		if ((function () { var $ret = $.ig.BLIP.prototype.__saveActionsByBlipType.tryGetValue($self._blipType, saveAction); saveAction = $ret.p1; return $ret.ret; }()) == false) {
			$.ig.ExcelUtils.prototype.debugFail("Unknown blip type: " + $.ig.BLIPType.prototype.getBox(this._blipType));
			saveAction = $.ig.BLIP.prototype.__saveActionsByBlipType.item($.ig.BLIPType.prototype.jPEG);
		}
		saveAction(this, saveManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::InitializeStream(System.IO.Stream)" />*/
	initializeStream: function (stream) {
		var $self = this;
		var initialization;
		if ((function () { var $ret = $.ig.BLIP.prototype.__initializeStreamByBlipType.tryGetValue($self._blipType, initialization); initialization = $ret.p1; return $ret.ret; }()) == false) {
			$.ig.ExcelUtils.prototype.debugFail("Unhandled blip type: " + $.ig.BLIPType.prototype.getBox(this._blipType));
			initialization = $.ig.BLIP.prototype.__initializeStreamByBlipType.item($.ig.BLIPType.prototype.jPEG);
		}
		initialization(this, stream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::InitializeStream(System.IO.Stream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::LoadBitmap(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Imaging.ImageFormat)" />*/
	loadBitmap: function (loadManager, imageFormat) {
		this._secondaryId = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		this._tag = loadManager._currentRecordStream().readByte();
		this._imageData = loadManager._currentRecordStream()._readBytes((this.recordLength() - 17));
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality(this._secondaryId, $.ig.ExcelUtils.prototype.computeMD4Hash(this._imageData)), null);
		var memStream = new $.ig.MemoryStream(2, this._imageData);
		this._image = new $.ig.ExcelImage(imageFormat, memStream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::LoadBitmap(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Imaging.ImageFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::LoadDIB(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadDIB: function (loadManager) {
		this._secondaryId = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		this._tag = loadManager._currentRecordStream().readByte();
		var remainingLength = (this.recordLength() - 17);
		var data = new Array(14 + remainingLength);
		loadManager._currentRecordStream().read(data, 14, remainingLength);
		var memStream = new $.ig.MemoryStream(2, data);
		var writer = new $.ig.BinaryWriter(1, memStream);
		writer.write5(66);
		writer.write5(77);
		writer.write9(data.length);
		writer.write9(0);
		writer.write9(54);
		memStream.position(0);
		this._image = new $.ig.ExcelImage($.ig.ImageFormat.prototype.dib, memStream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::LoadDIB(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::LoadEMF(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadEMF: function (loadManager) {
		this._secondaryId = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		var metafileSize = loadManager._currentRecordStream()._readInt32();
		var rcBoundsLeft = loadManager._currentRecordStream()._readInt32();
		var rcBoundsTop = loadManager._currentRecordStream()._readInt32();
		var rcBoundsRight = loadManager._currentRecordStream()._readInt32();
		var rcBoundsBottom = loadManager._currentRecordStream()._readInt32();
		var ptSizeX = loadManager._currentRecordStream()._readInt32();
		var ptSizeY = loadManager._currentRecordStream()._readInt32();
		var cachedSize = loadManager._currentRecordStream()._readInt32();
		var compression = loadManager._currentRecordStream().readByte();
		var filter = loadManager._currentRecordStream().readByte();
		this._emfData = loadManager._currentRecordStream()._readBytes(cachedSize);
		if (compression == 0) {
			this._imageData = $.ig.BLIP.prototype.decompressEMF(this._emfData, false);
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(compression == 254, "Unexpected compression value.");
			this._imageData = this._emfData;
		}
		if (this._imageData == null) {
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality(this._secondaryId, $.ig.ExcelUtils.prototype.computeMD4Hash(this._imageData)), null);
		var memStream = new $.ig.MemoryStream(2, this._imageData);
		this._image = new $.ig.ExcelImage($.ig.ImageFormat.prototype.emf, memStream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::LoadEMF(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::DecompressEMF(, System.Boolean)" />*/
	decompressEMF: function (emfData, removeTrailer) {
		{
			var ms = new $.ig.MemoryStream(0);
			try {
				ms.writeByte(31);
				ms.writeByte(139);
				ms.writeByte(8);
				ms.writeByte(0);
				ms.writeByte(0);
				ms.writeByte(0);
				ms.writeByte(0);
				ms.writeByte(0);
				ms.writeByte(2);
				ms.writeByte(255);
				var extra = removeTrailer && emfData.length > 8 ? 8 : 0;
				ms.write(emfData, 2, emfData.length - (2 + extra));
				ms.flush();
				ms.position(0);
				{
					var resultStream = new $.ig.MemoryStream(0);
					try {
						try {
							{
								var zipStream = new $.ig.GZipStream(ms, $.ig.CompressionMode.prototype.decompress);
								try {
									var buffer = new Array(4096);
									var read;
									{
										while ((read = zipStream.read(buffer, 0, buffer.length)) > 0) {
											resultStream.write(buffer, 0, read);
										}
									}
									resultStream.flush();
									return resultStream.toArray();
								}
								finally {
									if (zipStream != null) {
										zipStream.dispose();
									}
								}
							}
						}
						catch (ex) {
							$.ig.ExcelUtils.prototype.debugFail("Exception when loading EMF file (this may be expected on SL): " + ex.toString());
						}
					}
					finally {
						if (resultStream != null) {
							resultStream.dispose();
						}
					}
				}
			}
			finally {
				if (ms != null) {
					ms.dispose();
				}
			}
		}
		return null;
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::DecompressEMF(, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::SaveBitmap(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	saveBitmap: function (saveManager) {
		saveManager._currentRecordStream()._write2(this._secondaryId.toByteArray());
		saveManager._currentRecordStream()._write9(this._tag);
		saveManager._currentRecordStream()._write2(this._imageData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::SaveBitmap(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::BlipType()" />*/
	blipType: function () {
		return this._blipType;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::BlipType()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.MockClasses.Image Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Image()" />*/
	image: function () {
		return this._image;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.MockClasses.Image Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Image()" />*/
	,
	/*<BeginProperty Name="System.Guid Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::SecondaryID()" />*/
	secondaryID: function () {
		return this._secondaryId;
	}
	/*<EndProperty Name="System.Guid Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::SecondaryID()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Type()" />*/
	type: function () {
		return this._type;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP::Type()" />*/
	,
	$type: new $.ig.Type('BLIP', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase" />*/

$.ig.util.defType('EscherRecordContainerBase', 'EscherRecordBase', {
	_childRecords: null,
	init: function (version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 15, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::AddChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	addChildRecord: function (record) {
		if (this._childRecords == null) {
			this._childRecords = new $.ig.List$1($.ig.EscherRecordBase.prototype.$type, 0);
		}
		if (this.validateChildRecord(record)) {
			record.parentRecord(this);
			this._childRecords.add(record);
			this.recordLength(this.recordLength() + (8 + record.recordLength()));
		} else {
			$.ig.ExcelUtils.prototype.debugFail("This record cannot be stored in this container.");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::AddChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase.T Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::GetChildRecord`1()" />*/
	getChildRecord$1: function ($t) {
		if (this._childRecords == null) {
			return null;
		}
		var en = this._childRecords.getEnumerator();
		while (en.moveNext()) {
			var childRecord = en.current();
			if ($t.isAssignableFrom(childRecord.getType())) {
				return childRecord;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase.T Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::GetChildRecord`1()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugIndent();
		this._childRecords = new $.ig.List$1($.ig.EscherRecordBase.prototype.$type, 0);
		var endPosition = loadManager._currentRecordStream().position() + this.recordLength();
		while (loadManager._currentRecordStream().position() < endPosition) {
			if (loadManager._currentRecordStream().position() == loadManager._currentRecordStream().length()) {
				$.ig.ExcelUtils.prototype.debugFail("The end of the stream has been reached and the remaining child records could not be read.");
				break;
			}
			var childRecord = $.ig.EscherRecordBase.prototype.loadRecord(loadManager, this);
			if (childRecord != null) {
				if (this.validateChildRecord(childRecord)) {
					this._childRecords.add(childRecord);
				} else {
					childRecord.parentRecord(null);
					$.ig.ExcelUtils.prototype.debugFail("The loaded record cannot be stored in this container.");
				}
			}
		}
		$.ig.ExcelUtils.prototype.debugIndent();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		if (this._childRecords == null) {
			$.ig.ExcelUtils.prototype.debugFail("An empty container should not be saving.");
			return;
		}
		var en = this._childRecords.getEnumerator();
		while (en.moveNext()) {
			var childRecord = en.current();
			childRecord.save(saveManager);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		if (this._childRecords != null) {
			var en = this._childRecords.getEnumerator();
			while (en.moveNext()) {
				var record = en.current();
				sb.append5("\t");
				sb.append5($.ig.util.replace(record.toString(), "\n", "\n\t"));
				sb.append5("\n");
			}
		}
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::ToString()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::ChildRecordCount()" />*/
	childRecordCount: function () {
		return this._childRecords == null ? 0 : this._childRecords.count();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase::ChildRecordCount()" />*/
	,
	$type: new $.ig.Type('EscherRecordContainerBase', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordContainerBase" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreContainer" />*/

$.ig.util.defType('BLIPStoreContainer', 'EscherRecordContainerBase', {
	init: function (initNumber, images) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, images.count(), 0);
		var en = images.getEnumerator();
		while (en.moveNext()) {
			var holder = en.current();
			var blip = new $.ig.BLIP(0, holder.image());
			var blipStoreEntry = new $.ig.BLIPStoreEntry(0, blip, holder.referenceCount());
			this.addChildRecord(blipStoreEntry);
		}
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, version, instance, recordLength);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
		if (childRecord.type() == $.ig.EscherRecordType.prototype.bLIPStoreEntry) {
			return true;
		}
		if ($.ig.EscherRecordType.prototype.bLIPMin <= childRecord.type() && childRecord.type() <= $.ig.EscherRecordType.prototype.bLIPMax) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreContainer::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.bLIPStoreContainer;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreContainer::Type()" />*/
	,
	$type: new $.ig.Type('BLIPStoreContainer', $.ig.EscherRecordContainerBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreContainer" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry" />*/

$.ig.util.defType('BLIPStoreEntry', 'EscherRecordBase', {
	_typeForWin32: 0,
	_typeForMacOS: 0,
	_blipId: null,
	_tag: 0,
	_blipStreamSize: 0,
	_referenceCountOnTheBlip: 0,
	_fileOffsetInDelayStream: 0,
	_usage: 0,
	_blip: null,
	init: function (initNumber, blip, referenceCountOnTheBlip) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		this._blipId = new $.ig.Guid();
		$.ig.EscherRecordBase.prototype.init.call(this, 2, blip.blipType(), 36 + 8 + blip.recordLength());
		this._typeForWin32 = blip.blipType();
		this._typeForMacOS = blip.blipType();
		this._blipId = blip.secondaryID();
		this._tag = 255;
		this._blipStreamSize = blip.recordLength() + 8;
		this._referenceCountOnTheBlip = referenceCountOnTheBlip;
		this._usage = $.ig.BLIPUsage.prototype.$default;
		this._blip = blip;
	},
	init1: function (initNumber, version, instance, recordLength) {
		this._blipId = new $.ig.Guid();
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 2, null);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.BLIPType.prototype.$type, $.ig.BLIPType.prototype.getBox(this.instance())), null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._typeForWin32 = loadManager._currentRecordStream().readByte();
		this._typeForMacOS = loadManager._currentRecordStream().readByte();
		this._blipId = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		this._tag = loadManager._currentRecordStream()._readUInt16();
		this._blipStreamSize = loadManager._currentRecordStream()._readUInt32();
		this._referenceCountOnTheBlip = loadManager._currentRecordStream()._readUInt32();
		this._fileOffsetInDelayStream = loadManager._currentRecordStream()._readUInt32();
		this._usage = loadManager._currentRecordStream().readByte();
		var lengthOfBlipName = loadManager._currentRecordStream().readByte();
		loadManager._currentRecordStream().readByte();
		loadManager._currentRecordStream().readByte();
		$.ig.ExcelUtils.prototype.debugAssert(this._fileOffsetInDelayStream == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(lengthOfBlipName == 0, null);
		if (this._blipStreamSize > 0) {
			this._blip = $.ig.EscherRecordBase.prototype.loadRecord(loadManager, null);
			$.ig.ExcelUtils.prototype.debugAssert(this._blip.recordLength() + 8 == this._blipStreamSize, null);
			$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality(this._blip.secondaryID(), this._blipId), null);
			loadManager._images().add(new $.ig.WorkbookSerializationDataExcel2003_ImageHolder(this._blip.image(), this._referenceCountOnTheBlip));
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(this._typeForWin32 == $.ig.BLIPType.prototype.error, null);
			$.ig.ExcelUtils.prototype.debugAssert(this._typeForMacOS == $.ig.BLIPType.prototype.error, null);
			$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality(this._blipId, new $.ig.Guid(0)), null);
			$.ig.ExcelUtils.prototype.debugAssert(this.recordLength() == 36, null);
			$.ig.ExcelUtils.prototype.debugAssert(this._referenceCountOnTheBlip == 0, null);
			loadManager._images().add(new $.ig.WorkbookSerializationDataExcel2003_ImageHolder(null, this._referenceCountOnTheBlip));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._write9(this._typeForWin32);
		saveManager._currentRecordStream()._write9(this._typeForMacOS);
		saveManager._currentRecordStream()._write2(this._blipId.toByteArray());
		saveManager._currentRecordStream()._write17(this._tag);
		saveManager._currentRecordStream()._write18(this._blipStreamSize);
		saveManager._currentRecordStream()._write18(this._referenceCountOnTheBlip);
		saveManager._currentRecordStream()._write18(this._fileOffsetInDelayStream);
		saveManager._currentRecordStream()._write9(this._usage);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
		if (this._blip != null) {
			this._blip.save(saveManager);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("Reference Count on the BLIP: " + this._referenceCountOnTheBlip);
		sb.append5("\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.bLIPStoreEntry;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry::Type()" />*/
	,
	$type: new $.ig.Type('BLIPStoreEntry', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIPStoreEntry" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule" />*/

$.ig.util.defType('CalloutRule', 'EscherRecordBase', {
	_ruleId: 0,
	_shapeId: 0,
	init: function (version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var $self = this;
		this._ruleId = loadManager._currentRecordStream()._readUInt32();
		this._shapeId = loadManager._currentRecordStream()._readUInt32();
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var ownerCollection;
		var shape = (function () { var $ret = worksheet._getShapeById1($self._shapeId, ownerCollection); ownerCollection = $ret.p1; return $ret.ret; }());
		if (shape == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no shape with the specified shape id.");
			return;
		}
		shape._calloutRule(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._write18(this._ruleId);
		saveManager._currentRecordStream()._write18(this._shapeId);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::ShapeId()" />*/
	shapeId: function (value) {
		if (arguments.length === 1) {
			this._shapeId = value;
			return value;
		} else {
			return this._shapeId;
		}
	}
	/*<EndProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::ShapeId()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.calloutRule;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule::Type()" />*/
	,
	$type: new $.ig.Type('CalloutRule', $.ig.EscherRecordBase.prototype.$type, [$.ig.ICalloutRule.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.CalloutRule" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor" />*/

$.ig.util.defType('ChildAnchor', 'EscherRecordBase', {
	_rectInEMUs: null,
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 0, 0, 16);
		this._rectInEMUs = $.ig.ExcelUtils.prototype.twipsToEMU2(shape._getBoundsInTwips());
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._rectInEMUs = loadManager._currentRecordStream()._readRect();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._writeEMURect(this._rectInEMUs);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("Shape Bounds (EMUS): " + this._rectInEMUs);
		sb.append5("\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.childAnchor;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::Type()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::RectInEMUs()" />*/
	rectInEMUs: function () {
		return this._rectInEMUs;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor::RectInEMUs()" />*/
	,
	$type: new $.ig.Type('ChildAnchor', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ChildAnchor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor" />*/

$.ig.util.defType('ClientAnchor', 'EscherRecordBase', {
	_positioningMode: 0,
	_topLeft: null,
	_topLeftOffset: null,
	_bottomRight: null,
	_bottomRightOffset: null,
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 0, 0, 18);
		this._positioningMode = shape.positioningMode();
		if (shape.topLeftCornerCell().worksheet() == null || shape.bottomRightCornerCell().worksheet() == null) {
			$.ig.ExcelUtils.prototype.debugFail("This is unexpected");
			return;
		}
		this._topLeft = { __x: shape.topLeftCornerCell().columnIndex(), __y: shape.topLeftCornerCell().rowIndex(), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		this._bottomRight = { __x: shape.bottomRightCornerCell().columnIndex(), __y: shape.bottomRightCornerCell().rowIndex(), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		this._topLeftOffset = $.ig.ClientAnchor.prototype.cellOffsetToClientAnchorPoint(shape._topLeftCornerPosition$i());
		this._bottomRightOffset = $.ig.ClientAnchor.prototype.cellOffsetToClientAnchorPoint(shape._bottomRightCornerPosition$i());
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Windows.Point Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::CellOffsetToClientAnchorPoint(System.Windows.Point)" />*/
	cellOffsetToClientAnchorPoint: function (cellOffset) {
		return { __x: $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero((cellOffset.__x / 100) * 1024)), __y: $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero((cellOffset.__y / 100) * 256)), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::CellOffsetToClientAnchorPoint(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::ClientAnchorPointToCellOffset(System.Windows.Point)" />*/
	clientAnchorPointToCellOffset: function (anchorPoint) {
		var cellOffsetX = Math.max(0, (anchorPoint.__x * 100) / 1024);
		var cellOffsetY = Math.max(0, (anchorPoint.__y * 100) / 256);
		return { __x: cellOffsetX, __y: cellOffsetY, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::ClientAnchorPointToCellOffset(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._positioningMode = loadManager._currentRecordStream()._readUInt16();
		var col1 = loadManager._currentRecordStream()._readUInt16();
		var dx1 = loadManager._currentRecordStream()._readUInt16();
		var row1 = loadManager._currentRecordStream()._readUInt16();
		var dy1 = loadManager._currentRecordStream()._readUInt16();
		var col2 = loadManager._currentRecordStream()._readUInt16();
		var dx2 = loadManager._currentRecordStream()._readUInt16();
		var row2 = loadManager._currentRecordStream()._readUInt16();
		var dy2 = loadManager._currentRecordStream()._readUInt16();
		this._topLeft = { __x: col1, __y: row1, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		this._topLeftOffset = { __x: dx1, __y: dy1, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		this._bottomRight = { __x: col2, __y: row2, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		this._bottomRightOffset = { __x: dx2, __y: dy2, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		if (shape == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no shape in the context stack.");
			return;
		}
		shape._setPositioningMode(this._positioningMode, false);
		if (this._bottomRightOffset.__x == 0 && this._bottomRight.__x == worksheet.columns().maxCount()) {
			this._bottomRight.__x -= 1;
			this._bottomRightOffset.__x = 1024;
		}
		if (this._bottomRight.__y == 0 && this._bottomRight.__y == worksheet.rows().maxCount()) {
			this._bottomRight.__y -= 1;
			this._bottomRightOffset.__y = 256;
		}
		shape._bottomRightCornerPosition$i($.ig.ClientAnchor.prototype.clientAnchorPointToCellOffset(this._bottomRightOffset));
		shape._topLeftCornerPosition$i($.ig.ClientAnchor.prototype.clientAnchorPointToCellOffset(this._topLeftOffset));
		shape.bottomRightCornerCell(worksheet.rows().item($.ig.truncate(this._bottomRight.__y)).cells().item($.ig.truncate(this._bottomRight.__x)));
		shape.topLeftCornerCell(worksheet.rows().item($.ig.truncate(this._topLeft.__y)).cells().item($.ig.truncate(this._topLeft.__x)));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._write17(this._positioningMode);
		saveManager._currentRecordStream()._write17($.ig.truncate(this._topLeft.__x));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._topLeftOffset.__x));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._topLeft.__y));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._topLeftOffset.__y));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._bottomRight.__x));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._bottomRightOffset.__x));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._bottomRight.__y));
		saveManager._currentRecordStream()._write17($.ig.truncate(this._bottomRightOffset.__y));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("Top Left Cell: " + this._topLeft);
		sb.append5("\n");
		sb.append5("Top Left Offset: " + this._topLeftOffset);
		sb.append5("\n");
		sb.append5("Bottom Right Cell: " + this._bottomRight);
		sb.append5("\n");
		sb.append5("Bottom Right Offset: " + this._bottomRightOffset);
		sb.append5("\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.clientAnchor;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor::Type()" />*/
	,
	$type: new $.ig.Type('ClientAnchor', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientAnchor" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData" />*/

$.ig.util.defType('ClientData', 'EscherRecordBase', {
	_shape: null,
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 0, 0, 0);
		this._shape = shape;
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(recordLength == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var obj = this.loadObjRecordData(loadManager);
		loadManager._currentRecordStream()._appendNextRecordIfType($.ig.BIFF8RecordType.prototype.mSODRAWING);
		if (obj == null) {
			$.ig.ExcelUtils.prototype.debugFail("We should have parsed OBJ records.");
			return;
		}
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		if (shape == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no shape in the context stack.");
			return;
		}
		shape._obj(obj);
		if (obj != null && obj.cmo() != null && obj.cmo().ot() == $.ig.ObjectType.prototype.comment) {
			var unknownShape = $.ig.util.cast($.ig.excel.UnknownShape.prototype.$type, shape);
			if (unknownShape != null) {
				var comment = new $.ig.excel.WorksheetCellComment(unknownShape);
				loadManager._contextStack().replaceItem(unknownShape, comment);
				loadManager._loadedComments().add(comment);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::LoadObjRecordData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadObjRecordData: function (loadManager) {
		if ($.ig.util.nullableNotEquals(loadManager._currentRecordStream()._readNextBlockType(), $.ig.BIFF8RecordType.prototype.oBJ)) {
			return null;
		}
		var obj = new $.ig.Obj(0);
		{
			var objStream = new $.ig.Biff8RecordStream(1, loadManager);
			try {
				objStream._debugLogRecord();
				$.ig.ObjExtensionMethods.prototype.loadObj(obj, loadManager);
			}
			finally {
				if (objStream != null) {
					objStream.dispose();
				}
			}
		}
		$.ig.ExcelUtils.prototype.debugAssert(obj.cmo() != null, "The Obj records were not loaded correctly.");
		if (obj.cmo() != null && obj.cmo().ot() == $.ig.ObjectType.prototype.chart) {
			var startStreamPosition = loadManager._workbookStream().position();
			{
				var bofStream = new $.ig.Biff8RecordStream(1, loadManager);
				try {
					$.ig.ExcelUtils.prototype.debugAssert(bofStream._recordType() == $.ig.BIFF8RecordType.prototype.bOF, "The chart shape must have a data stream for the chart data.");
					$.ig.ExcelUtils.prototype.debugIndent();
					bofStream._debugLogRecord();
				}
				finally {
					if (bofStream != null) {
						bofStream.dispose();
					}
				}
			}
			var chartFonts = new $.ig.List$1($.ig.FontXInfo.prototype.$type, 0);
			var braiFormulas = new $.ig.List$1($.ig.excel.Formula.prototype.$type, 0);
			while (true) {
				{
					var chartRecord = new $.ig.Biff8RecordStream(1, loadManager);
					try {
						$.ig.ExcelUtils.prototype.debugAssert(chartRecord._recordType() != $.ig.BIFF8RecordType.prototype.bOF, "A new sub stream should not have been started in the chart data.");
						chartRecord._debugLogRecord();
						switch (chartRecord._recordType()) {
							case $.ig.BIFF8RecordType.prototype.bRAI:
								{
									var braiData = chartRecord._readBytes(chartRecord.length());
									var braiDataIndex = $.ig.ClientData.prototype._bRAIRecordFormulaOffset;
									var formula = (function () { var $ret = loadManager._loadFormula($.ig.FormulaType.prototype.formula, braiData, braiDataIndex); braiData = $ret.p1; braiDataIndex = $ret.p2; return $ret.ret; }());
									braiFormulas.add(formula);
								}
								break;
							case $.ig.BIFF8RecordType.prototype.fONTX:
								{
									var iFont = chartRecord._readUInt16();
									chartFonts.add(new $.ig.FontXInfo(iFont, loadManager));
								}
								break;
						}
						if (chartRecord._recordType() == $.ig.BIFF8RecordType.prototype.eOF) {
							break;
						}
					}
					finally {
						if (chartRecord != null) {
							chartRecord.dispose();
						}
					}
				}
			}
			$.ig.ExcelUtils.prototype.debugUnindent();
			var endStreamPosition = loadManager._workbookStream().position();
			loadManager._workbookStream().position(startStreamPosition);
			var data = new Array(endStreamPosition - startStreamPosition);
			loadManager._workbookStream().read(data, 0, data.length);
			var unknownShape = $.ig.util.cast($.ig.excel.UnknownShape.prototype.$type, loadManager._contextStack().pop());
			var chart;
			if (unknownShape == null) {
				$.ig.ExcelUtils.prototype.debugFail("There should be an UnknownShape at the top of the ContextStack.");
				chart = new $.ig.excel.WorksheetChart(0);
			} else {
				chart = new $.ig.excel.WorksheetChart(1, unknownShape);
			}
			chart._excel2003RoundTripData(new $.ig.BinaryData(data));
			chart._fontXInfos(chartFonts);
			chart._braiFormulas(braiFormulas);
			loadManager._contextStack().push(chart);
		}
		var nextObj = this.loadObjRecordData(loadManager);
		$.ig.ExcelUtils.prototype.debugAssert(nextObj == null, "Figure out how to merge these two Obj records.");
		return obj;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.OBJRecords.Obj Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::LoadObjRecordData(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		if (this._shape._obj() == null) {
			$.ig.ExcelUtils.prototype.debugFail("The Obj record should have been initialized.");
			this._shape._obj(new $.ig.Obj(1, this._shape));
		}
		var cmo = this._shape._obj().cmo();
		$.ig.ExcelUtils.prototype.debugAssert(cmo != null, "The shape Obj was not initialized correctly.");
		{
			var objStream = new $.ig.Biff8RecordStream(3, saveManager, $.ig.BIFF8RecordType.prototype.oBJ);
			try {
				$.ig.ObjExtensionMethods.prototype.save16(this._shape._obj(), saveManager);
			}
			finally {
				if (objStream != null) {
					objStream.dispose();
				}
			}
		}
		if (cmo != null && cmo.ot() == $.ig.ObjectType.prototype.chart) {
			var chart = $.ig.util.cast($.ig.excel.WorksheetChart.prototype.$type, this._shape);
			if (chart != null && chart._excel2003RoundTripData() != null) {
				var fontXIndex = 0;
				var braiFormulaIndex = 0;
				var loadedData = chart._excel2003RoundTripData()._buffer;
				var position = 0;
				while (position < loadedData.length) {
					var recordType = $.ig.BitConverter.prototype.toUInt16(loadedData, position);
					var recordLength = $.ig.BitConverter.prototype.toUInt16(loadedData, position + 2);
					var recordDataPosition = position + $.ig.Biff8RecordStream.prototype._headerSize;
					{
						var chartSubStream = new $.ig.Biff8RecordStream(3, saveManager, recordType);
						try {
							var t1 = recordType;
							L0: while (true) {
								switch (t1) {
									case $.ig.BIFF8RecordType.prototype.bRAI:
										{
											$.ig.ExcelUtils.prototype.debugAssert(recordLength >= 8, "The BRAI record length is incorrect.");
											if (chart._braiFormulas().count() <= braiFormulaIndex) {
												$.ig.ExcelUtils.prototype.debugFail("The number of BRAI records has changed.");
												t1 = void 0;
												continue L0;
											}
											var braiFormula = chart._braiFormulas().__inner[braiFormulaIndex++];
											chartSubStream.write(loadedData, recordDataPosition, $.ig.ClientData.prototype._bRAIRecordFormulaOffset);
											saveManager._saveFormula(braiFormula, true, false, true);
										}
										break;
									case $.ig.BIFF8RecordType.prototype.fONTX:
										{
											$.ig.ExcelUtils.prototype.debugAssert(recordLength == 2, "The FONTX record should have a length of 2.");
											if (chart._fontXInfos().count() <= fontXIndex) {
												$.ig.ExcelUtils.prototype.debugFail("The number of FONTX records has changed.");
												t1 = void 0;
												continue L0;
											}
											var fontInfo = chart._fontXInfos().__inner[fontXIndex++];
											chartSubStream._write17(fontInfo.getIFontValue(saveManager));
										}
										break;
									default:
										chartSubStream.write(loadedData, recordDataPosition, recordLength);
										break;
								}
								break;
							}
						}
						finally {
							if (chartSubStream != null) {
								chartSubStream.dispose();
							}
						}
					}
					position += ($.ig.Biff8RecordStream.prototype._headerSize + recordLength);
				}
			} else {
				$.ig.ExcelUtils.prototype.debugFail("We should have a chart instance here.");
			}
		}
		saveManager._currentRecordStream()._nextBlockType($.ig.BIFF8RecordType.prototype.mSODRAWING);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.clientData;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData::Type()" />*/
	,
	$type: new $.ig.Type('ClientData', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox" />*/

$.ig.util.defType('ClientTextBox', 'EscherRecordBase', {
	_shape: null,
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 0, 0, 0);
		this._shape = shape;
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(recordLength == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		{
			var txoStream = new $.ig.Biff8RecordStream(1, loadManager);
			try {
				$.ig.ExcelUtils.prototype.debugAssert(txoStream._recordType() == $.ig.BIFF8RecordType.prototype.tXO, "We expected a TXO record here.");
				$.ig.WorkItemExtensions.prototype.executeSynchronously(loadManager._loadCurrentRecord());
			}
			finally {
				if (txoStream != null) {
					txoStream.dispose();
				}
			}
		}
		loadManager._currentRecordStream()._appendNextRecordIfType($.ig.BIFF8RecordType.prototype.mSODRAWING);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._contextStack().push(this._shape);
		saveManager._writeRecord($.ig.BIFF8RecordType.prototype.tXO);
		saveManager._currentRecordStream()._nextBlockType($.ig.BIFF8RecordType.prototype.mSODRAWING);
		saveManager._contextStack().pop();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.clientTextbox;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox::Type()" />*/
	,
	$type: new $.ig.Type('ClientTextBox', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientTextBox" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule" />*/

$.ig.util.defType('ConnectorRule', 'EscherRecordBase', {
	init: function (version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 1, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugFail("Implement the loading of the ConnectorRule record");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		$.ig.ExcelUtils.prototype.debugFail("Implement the saving of the ConnectorRule record");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.connectorRule;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule::Type()" />*/
	,
	$type: new $.ig.Type('ConnectorRule', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ConnectorRule" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing" />*/

$.ig.util.defType('Drawing', 'EscherRecordBase', {
	_numberOfShapesInDrawing: 0,
	_lastSPIDGivenToAShape: 0,
	init: function (initNumber, saveManager, worksheet) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 0, worksheet._sheetId(), 8);
		var cache = saveManager._getSerializationCache1(worksheet);
		this._numberOfShapesInDrawing = cache._numberOfShapes;
		this._lastSPIDGivenToAShape = cache._maxAssignedShapeId;
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance > 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(recordLength == 8, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._numberOfShapesInDrawing = loadManager._currentRecordStream()._readUInt32();
		this._lastSPIDGivenToAShape = loadManager._currentRecordStream()._readUInt32();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._write18(this._numberOfShapesInDrawing);
		saveManager._currentRecordStream()._write18(this._lastSPIDGivenToAShape);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("Drawing ID: " + this.instance());
		sb.append5("\n");
		sb.append5("Number of Shapes in this Drawing: " + this._numberOfShapesInDrawing);
		sb.append5("\n");
		sb.append5("Last SPID Given to a Shape: " + this._lastSPIDGivenToAShape);
		sb.append5("\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.drawing;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing::Type()" />*/
	,
	$type: new $.ig.Type('Drawing', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Drawing" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingContainer" />*/

$.ig.util.defType('DrawingContainer', 'EscherRecordContainerBase', {
	init: function (initNumber, saveManager) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, 0, 0);
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("The worksheet is not in the context stack.");
			return;
		}
		this.addChildRecord(new $.ig.Drawing(0, saveManager, worksheet));
		this.addChildRecord(new $.ig.GroupContainer(0, saveManager, worksheet));
		var solverContainer = new $.ig.SolverContainer(0, worksheet);
		if (solverContainer.childRecordCount() > 0) {
			this.addChildRecord(solverContainer);
		}
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
		switch (childRecord.type()) {
			case $.ig.EscherRecordType.prototype.drawing:
			case $.ig.EscherRecordType.prototype.regroup:
			case $.ig.EscherRecordType.prototype.colorScheme:
			case $.ig.EscherRecordType.prototype.groupContainer:
			case $.ig.EscherRecordType.prototype.solverContainer:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingContainer::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.drawingContainer;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingContainer::Type()" />*/
	,
	$type: new $.ig.Type('DrawingContainer', $.ig.EscherRecordContainerBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingContainer" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup" />*/

$.ig.util.defType('DrawingGroup', 'EscherRecordBase', {
	init: function (initNumber, worksheets) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 0, 0, 16 + (8 * $.ig.util.intSToU(worksheets.count())));
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream().seek(this.recordLength(), $.ig.SeekOrigin.prototype.current);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		var totalNumberOfShapes = 0;
		var en = saveManager._worksheets().getEnumerator();
		while (en.moveNext()) {
			var worksheet = en.current();
			totalNumberOfShapes += saveManager._getSerializationCache1(worksheet)._numberOfShapes;
		}
		saveManager._currentRecordStream()._write18(saveManager._maxShapeId());
		saveManager._currentRecordStream()._write18($.ig.util.intSToU((saveManager._worksheets().count() + 1)));
		saveManager._currentRecordStream()._write18(totalNumberOfShapes);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(saveManager._worksheets().count()));
		var en1 = saveManager._worksheets().getEnumerator();
		while (en1.moveNext()) {
			var worksheet1 = en1.current();
			saveManager._currentRecordStream()._write18(worksheet1._sheetId());
			var cache = saveManager._getSerializationCache1(worksheet1);
			saveManager._currentRecordStream()._write18(cache._numberOfShapes);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.drawingGroup;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup::Type()" />*/
	,
	$type: new $.ig.Type('DrawingGroup', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroup" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroupContainer" />*/

$.ig.util.defType('DrawingGroupContainer', 'EscherRecordContainerBase', {
	init: function (initNumber, saveManager) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, 0, 0);
		this.addChildRecord(new $.ig.DrawingGroup(0, saveManager._worksheets()));
		if (saveManager._images().count() > 0) {
			this.addChildRecord(new $.ig.BLIPStoreContainer(0, saveManager._images()));
		}
		if (saveManager._workbook()._drawingProperties1() != null && saveManager._workbook()._drawingProperties1().count() > 0) {
			this.addChildRecord(new $.ig.PropertyTable1(1, saveManager._workbook()._drawingProperties1()));
		}
		if (saveManager._workbook()._drawingProperties3() != null && saveManager._workbook()._drawingProperties3().count() > 0) {
			this.addChildRecord(new $.ig.PropertyTable3(1, saveManager._workbook()._drawingProperties3()));
		}
		this.addChildRecord(new $.ig.SplitMenuColors(0));
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroupContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
		switch (childRecord.type()) {
			case $.ig.EscherRecordType.prototype.drawingGroup:
			case $.ig.EscherRecordType.prototype.classID:
			case $.ig.EscherRecordType.prototype.propertyTable1:
			case $.ig.EscherRecordType.prototype.propertyTable3:
			case $.ig.EscherRecordType.prototype.colorMRU:
			case $.ig.EscherRecordType.prototype.splitMenuColors:
			case $.ig.EscherRecordType.prototype.bLIPStoreContainer:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroupContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroupContainer::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.drawingGroupContainer;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroupContainer::Type()" />*/
	,
	$type: new $.ig.Type('DrawingGroupContainer', $.ig.EscherRecordContainerBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.DrawingGroupContainer" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer" />*/

$.ig.util.defType('GroupContainer', 'EscherRecordContainerBase', {
	init: function (initNumber, saveManager, worksheet) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, 0, 0);
		this.addChildRecord(new $.ig.ShapeContainer(0, saveManager, new $.ig.Shape_PatriarchShape(saveManager, worksheet)));
		this.addChildShapes(saveManager, worksheet.shapes());
		var cache = saveManager._getSerializationCache1(worksheet);
		var en = cache.commentShapes().getEnumerator();
		while (en.moveNext()) {
			var comment = en.current();
			this.addChildRecord(new $.ig.ShapeContainer(0, saveManager, comment));
		}
	},
	init1: function (initNumber, saveManager, group) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, 0, 0);
		this.addChildRecord(new $.ig.ShapeContainer(0, saveManager, group));
		this.addChildShapes(saveManager, group.shapes());
	},
	init2: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::AddChildShapes(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.WorksheetShapeCollection)" />*/
	addChildShapes: function (saveManager, shapes) {
		for (var i = 0; i < shapes.count(); i++) {
			var shape = saveManager._getResolvedShape(shapes.item(i));
			if (shape == null) {
				continue;
			}
			var group = $.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, shape);
			if (group != null) {
				this.addChildRecord(new $.ig.GroupContainer(1, saveManager, group));
			} else {
				this.addChildRecord(new $.ig.ShapeContainer(0, saveManager, shape));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::AddChildShapes(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.WorksheetShapeCollection)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.EscherRecordContainerBase.prototype.load.call(this, loadManager);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.IWorksheetShapeOwner.prototype.$type, loadManager._contextStack().current()) !== null, null);
		var shapeGroup = $.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, loadManager._contextStack().pop());
		if (shapeGroup != null) {
			shapeGroup._onLoadComplete();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
		switch (childRecord.type()) {
			case $.ig.EscherRecordType.prototype.groupContainer:
			case $.ig.EscherRecordType.prototype.shapeContainer:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.groupContainer;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer::Type()" />*/
	,
	$type: new $.ig.Type('GroupContainer', $.ig.EscherRecordContainerBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupContainer" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape" />*/

$.ig.util.defType('GroupShape', 'EscherRecordBase', {
	_rectInEMUs: null,
	init: function (initNumber, group) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 1, 0, 16);
		this._rectInEMUs = $.ig.ExcelUtils.prototype.twipsToEMU2(group._getBoundsInTwips());
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 1, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(recordLength == 16, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._rectInEMUs = loadManager._currentRecordStream()._readRect();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._writeEMURect(this._rectInEMUs);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("Group Bounds (EMUS): " + this._rectInEMUs);
		sb.append5("\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.groupShape;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::Type()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::RectInEMUs()" />*/
	rectInEMUs: function () {
		return this._rectInEMUs;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape::RectInEMUs()" />*/
	,
	$type: new $.ig.Type('GroupShape', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.GroupShape" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase" />*/

$.ig.util.defType('PropertyTableBase', 'EscherRecordBase', {
	_properties: null,
	init: function (initNumber, properties) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.PropertyTableBase.prototype.init1.call(this, 1, 3, properties.count(), 0);
		this._properties = properties;
		var recordLength = 0;
		var en = this._properties.getEnumerator();
		while (en.moveNext()) {
			var property = en.current();
			recordLength += 6;
			if (property._isComplex()) {
				recordLength += $.ig.util.intSToU((property._value())._buffer.length);
			}
		}
		this.recordLength(recordLength);
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 3, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		this._properties = new $.ig.List$1($.ig.PropertyTableBase_PropertyValue.prototype.$type, 0);
		var foundBlipId = false;
		for (var i = 0; i < this.instance(); i++) {
			var propertyHeader = loadManager._currentRecordStream()._readUInt16();
			var value = loadManager._currentRecordStream()._readUInt32();
			var propertyType = (propertyHeader & 16383);
			var isComplex = (propertyHeader & 32768) == 32768;
			var isBlipId = (propertyHeader & 16384) == 16384 && isComplex == false;
			var prop = new $.ig.PropertyTableBase_PropertyValue(1, propertyType, value, isComplex, isBlipId);
			if (isBlipId && shape != null) {
				$.ig.ExcelUtils.prototype.debugAssert(foundBlipId == false, null);
				foundBlipId = true;
				var image = $.ig.util.cast($.ig.IWorksheetImage.prototype.$type, shape);
				$.ig.ExcelUtils.prototype.debugAssert(image != null, null);
				if (image != null) {
					image.image(loadManager._images().__inner[value - 1].image());
					$.ig.ExcelUtils.prototype.debugAssert(image.image() != null, null);
				}
			}
			this._properties.add(prop);
		}
		this._properties.sort();
		var en = this._properties.getEnumerator();
		while (en.moveNext()) {
			var property = en.current();
			if (property._isComplex() == false) {
				continue;
			}
			var complexValueSize = $.ig.util.getValue(property._value());
			if (complexValueSize == 0) {
				property._value(new $.ig.BinaryData(new Array(0)));
				continue;
			}
			if (property._isIMsoArray()) {
				var HeaderSize = 6;
				if (complexValueSize < HeaderSize) {
					$.ig.ExcelUtils.prototype.debugFail("There is not enough bytes for the IMsoArray header.");
					property._value(new $.ig.BinaryData(loadManager._currentRecordStream()._readBytes(complexValueSize)));
				} else {
					var header = loadManager._currentRecordStream()._readBytes(HeaderSize);
					var nElems = $.ig.BitConverter.prototype.toUInt16(header, 0);
					var nElemsAlloc = $.ig.BitConverter.prototype.toUInt16(header, 2);
					var cbElem = $.ig.BitConverter.prototype.toUInt16(header, 4);
					var elementSize = cbElem == 65520 ? 4 : cbElem;
					var remainingDataSize = nElems * elementSize;
					var remainingComplexPropertySize = complexValueSize - HeaderSize;
					var dataToRead = Math.max(remainingDataSize, remainingComplexPropertySize);
					$.ig.ExcelUtils.prototype.debugAssert(dataToRead == remainingDataSize, "There are extra bytes in the complex property value it seems.");
					var data = loadManager._currentRecordStream()._readBytes(dataToRead);
					var allData = new Array(header.length + data.length);
					$.ig.Buffer.prototype.blockCopy(header, 0, allData, 0, header.length);
					$.ig.Buffer.prototype.blockCopy(data, 0, allData, header.length, data.length);
					property._value(new $.ig.BinaryData(allData));
				}
			} else {
				property._value(new $.ig.BinaryData(loadManager._currentRecordStream()._readBytes(complexValueSize)));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		var en = this._properties.getEnumerator();
		while (en.moveNext()) {
			var property = en.current();
			var value = 0;
			var propertyHeader = 0;
			propertyHeader |= property._propertyType();
			if (property._isComplex()) {
				propertyHeader |= 49152;
				var data = $.ig.util.cast($.ig.BinaryData.prototype.$type, property._value());
				$.ig.ExcelUtils.prototype.debugAssert(data != null, null);
				if (data != null) {
					value = $.ig.util.intSToU(data._buffer.length);
				}
			} else {
				value = $.ig.util.getValue(property._value());
			}
			if (property._isBlipId()) {
				propertyHeader |= 16384;
			}
			saveManager._currentRecordStream()._write17(propertyHeader);
			saveManager._currentRecordStream()._write18(value);
		}
		var en1 = this._properties.getEnumerator();
		while (en1.moveNext()) {
			var property1 = en1.current();
			if (property1._isComplex() == false) {
				continue;
			}
			var data1 = $.ig.util.cast($.ig.BinaryData.prototype.$type, property1._value());
			$.ig.ExcelUtils.prototype.debugAssert(data1 != null, null);
			if (data1 != null) {
				saveManager._currentRecordStream()._write2(data1._buffer);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase::Properties()" />*/
	properties: function () {
		return this._properties;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase::Properties()" />*/
	,
	$type: new $.ig.Type('PropertyTableBase', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1" />*/

$.ig.util.defType('PropertyTable1', 'PropertyTableBase', {
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.PropertyTableBase.prototype.init.call(this, 0, shape._drawingProperties1());
	},
	init1: function (initNumber, properties) {
		$.ig.PropertyTableBase.prototype.init.call(this, 0, properties);
	},
	init2: function (initNumber, version, instance, recordLength) {
		$.ig.PropertyTableBase.prototype.init1.call(this, 1, version, instance, recordLength);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.PropertyTableBase.prototype.load.call(this, loadManager);
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		if (shape != null) {
			shape._drawingProperties1(this.properties());
			this.parseLoadedPropertyTableBase_PropertyValues(loadManager, shape);
		} else {
			loadManager._workbook()._drawingProperties1(this.properties());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::DecodeColor(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase_PropertyValue, Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase_PropertyValue)" />*/
	decodeColor: function (loadManager, colorPropertyTableBase_PropertyValue, opacityPropertyTableBase_PropertyValue) {
		var colorPropertyTableBase_PropertyValueResolved = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
		var opacityPropertyTableBase_PropertyValueResolved = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
		if (colorPropertyTableBase_PropertyValue != null) {
			colorPropertyTableBase_PropertyValueResolved = $.ig.util.toNullable($.ig.Number.prototype.$type, $.ig.util.getValue(colorPropertyTableBase_PropertyValue._value()));
		}
		if (opacityPropertyTableBase_PropertyValue != null) {
			opacityPropertyTableBase_PropertyValueResolved = $.ig.util.toNullable($.ig.Number.prototype.$type, $.ig.util.getValue(opacityPropertyTableBase_PropertyValue._value()));
		}
		var argbValue = $.ig.ExcelUtils.prototype.toNullable$1($.ig.Color.prototype.$type, new $.ig.Color());
		var schemeIndex;
		var systemColorValue;
		var paletteIndex;
		var $ret = $.ig.DocCoreUtils.prototype.decodeEscherColor(colorPropertyTableBase_PropertyValueResolved, opacityPropertyTableBase_PropertyValueResolved, argbValue, schemeIndex, systemColorValue, paletteIndex);
		argbValue = $ret.p2;
		schemeIndex = $ret.p3;
		systemColorValue = $ret.p4;
		paletteIndex = $ret.p5;
		if ($.ig.Color.prototype.l_op_Inequality_Lifted(argbValue, $.ig.util.toNullable($.ig.Color.prototype.$type, null))) {
			return $.ig.util.toNullable($.ig.Color.prototype.$type, argbValue.value());
		}
		if ($.ig.util.nullableNotEquals(schemeIndex, null)) {
			return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.ExcelUtils.prototype.toNative(loadManager._workbook().palette()._getColorAtAbsoluteIndex(schemeIndex.value())));
		}
		if ($.ig.util.nullableNotEquals(systemColorValue, null)) {
			switch (systemColorValue.value()) {
				case $.ig.EscherSysIndex.prototype.systemColorButtonFace: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.buttonFaceColor());
				case $.ig.EscherSysIndex.prototype.systemColorWindowText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.windowTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorMenu: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.menuColor());
				case $.ig.EscherSysIndex.prototype.systemColorHighlight: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.highlightColor());
				case $.ig.EscherSysIndex.prototype.systemColorHighlightText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.highlightTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorCaptionText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.activeCaptionTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorActiveCaption: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.activeCaptionColor());
				case $.ig.EscherSysIndex.prototype.systemColorButtonHighlight: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.buttonHighlightColor());
				case $.ig.EscherSysIndex.prototype.systemColorButtonShadow: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.buttonShadowColor());
				case $.ig.EscherSysIndex.prototype.systemColorButtonText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.controlTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorGrayText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.grayTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorInactiveCaption: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.inactiveCaptionColor());
				case $.ig.EscherSysIndex.prototype.systemColorInactiveCaptionText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.inactiveCaptionTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorInfoBackground: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.infoColor());
				case $.ig.EscherSysIndex.prototype.systemColorInfoText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.infoTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorMenuText: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.menuTextColor());
				case $.ig.EscherSysIndex.prototype.systemColorScrollbar: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.scrollBarColor());
				case $.ig.EscherSysIndex.prototype.systemColorWindow: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.windowColor());
				case $.ig.EscherSysIndex.prototype.systemColorWindowFrame: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.windowFrameColor());
				case $.ig.EscherSysIndex.prototype.systemColor3DLight: return $.ig.util.toNullable($.ig.Color.prototype.$type, $.ig.SystemColorsInternal.prototype.controlLightColor());
				default:
					$.ig.ExcelUtils.prototype.debugFail("Don't know how to handle this SysIndex: " + $.ig.EscherSysIndex.prototype.getBox(systemColorValue.value()));
					break;
			}
		}
		$.ig.ExcelUtils.prototype.debugFail("Don't know how to handle this yet.");
		return $.ig.util.toNullable($.ig.Color.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::DecodeColor(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase_PropertyValue, Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase_PropertyValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::ParseLoadedPropertyTableBase_PropertyValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.WorksheetShape)" />*/
	parseLoadedPropertyTableBase_PropertyValues: function (loadManager, shape) {
		var fillStyleColorValue = null;
		var fillStyleOpacityValue = null;
		var fillStyleBooleanProperties = null;
		var lineStyleColorValue = null;
		var lineStyleOpacityValue = null;
		var lineStyleBooleanProperties = null;
		var shapeWithText = $.ig.util.cast($.ig.excel.WorksheetShapeWithText.prototype.$type, shape);
		for (var i = 0; i < this.properties().count(); i++) {
			var propertyValue = this.properties().__inner[i];
			switch (propertyValue._propertyType()) {
				case $.ig.PropertyType.prototype.transformRotation:
					shape._rotation($.ig.ExcelUtils.prototype.fromFixedPoint16_16Value($.ig.util.getValue(propertyValue._value())));
					break;
				case $.ig.PropertyType.prototype.textLeft:
					$.ig.ExcelUtils.prototype.debugAssert(shapeWithText != null, "This property should be written out on a shape with text.");
					if (shapeWithText != null) {
						shapeWithText._leftMargin($.ig.ExcelUtils.prototype.eMUToTwips($.ig.util.getValue(propertyValue._value())));
					}
					break;
				case $.ig.PropertyType.prototype.textTop:
					$.ig.ExcelUtils.prototype.debugAssert(shapeWithText != null, "This property should be written out on a shape with text.");
					if (shapeWithText != null) {
						shapeWithText._topMargin($.ig.ExcelUtils.prototype.eMUToTwips($.ig.util.getValue(propertyValue._value())));
					}
					break;
				case $.ig.PropertyType.prototype.textRight:
					$.ig.ExcelUtils.prototype.debugAssert(shapeWithText != null, "This property should be written out on a shape with text.");
					if (shapeWithText != null) {
						shapeWithText._rightMargin($.ig.ExcelUtils.prototype.eMUToTwips($.ig.util.getValue(propertyValue._value())));
					}
					break;
				case $.ig.PropertyType.prototype.textBottom:
					$.ig.ExcelUtils.prototype.debugAssert(shapeWithText != null, "This property should be written out on a shape with text.");
					if (shapeWithText != null) {
						shapeWithText._bottomMargin($.ig.ExcelUtils.prototype.eMUToTwips($.ig.util.getValue(propertyValue._value())));
					}
					break;
				case $.ig.PropertyType.prototype.fillStyleColor:
					fillStyleColorValue = propertyValue;
					break;
				case $.ig.PropertyType.prototype.fillStyleOpacity:
					fillStyleOpacityValue = propertyValue;
					break;
				case $.ig.PropertyType.prototype.fillStyleBooleanProperties:
					fillStyleBooleanProperties = propertyValue;
					break;
				case $.ig.PropertyType.prototype.lineStyleColor:
					lineStyleColorValue = propertyValue;
					break;
				case $.ig.PropertyType.prototype.lineStyleOpacity:
					lineStyleOpacityValue = propertyValue;
					break;
				case $.ig.PropertyType.prototype.lineStyleBooleanProperties:
					lineStyleBooleanProperties = propertyValue;
					break;
			}
		}
		var Default_fUsefFilled = false;
		var fUsefFilled = Default_fUsefFilled;
		var fFilled = fillStyleBooleanProperties != null || fillStyleColorValue != null;
		if (fillStyleBooleanProperties != null && typeof fillStyleBooleanProperties._value() === 'number') {
			fUsefFilled = $.ig.ExcelUtils.prototype.testBit1($.ig.util.getValue(fillStyleBooleanProperties._value()), $.ig.PropertyTableBase.prototype.fillStyleProp_fUsefFilled);
			if (fUsefFilled) {
				fFilled = $.ig.ExcelUtils.prototype.testBit1($.ig.util.getValue(fillStyleBooleanProperties._value()), $.ig.PropertyTableBase.prototype.fillStyleProp_fFilled);
			}
		}
		if (fFilled) {
			var backgroundColor = $.ig.PropertyTable1.prototype.decodeColor(loadManager, fillStyleColorValue, fillStyleOpacityValue);
			shape.fill($.ig.excel.ShapeFill.prototype.fromColor(!$.ig.util.nullableIsNull(backgroundColor) ? backgroundColor.value() : $.ig.SystemColorsInternal.prototype.windowColor()));
		}
		var Default_fUsefLine = false;
		var fUsefLine = Default_fUsefLine;
		var fLine = lineStyleBooleanProperties != null || lineStyleColorValue != null;
		if (lineStyleBooleanProperties != null && typeof lineStyleBooleanProperties._value() === 'number') {
			fUsefLine = $.ig.ExcelUtils.prototype.testBit1($.ig.util.getValue(lineStyleBooleanProperties._value()), $.ig.PropertyTableBase.prototype.lineStyleProp_fUsefLine);
			if (fUsefLine) {
				fLine = $.ig.ExcelUtils.prototype.testBit1($.ig.util.getValue(lineStyleBooleanProperties._value()), $.ig.PropertyTableBase.prototype.lineStyleProp_fLine);
			}
		}
		if (fLine) {
			var lineColor = $.ig.PropertyTable1.prototype.decodeColor(loadManager, lineStyleColorValue, lineStyleOpacityValue);
			shape.outline($.ig.excel.ShapeOutline.prototype.fromColor(!$.ig.util.nullableIsNull(lineColor) ? lineColor.value() : $.ig.SystemColorsInternal.prototype.windowTextColor()));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::ParseLoadedPropertyTableBase_PropertyValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.propertyTable1;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1::Type()" />*/
	,
	$type: new $.ig.Type('PropertyTable1', $.ig.PropertyTableBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable1" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable2" />*/

$.ig.util.defType('PropertyTable2', 'PropertyTableBase', {
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.PropertyTableBase.prototype.init.call(this, 0, shape._drawingProperties2());
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.PropertyTableBase.prototype.init1.call(this, 1, version, instance, recordLength);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable2::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.PropertyTableBase.prototype.load.call(this, loadManager);
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		if (shape != null) {
			shape._drawingProperties2(this.properties());
		} else {
			$.ig.ExcelUtils.prototype.debugFail("Property table 2 only applies to shapes");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable2::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable2::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.propertyTable2;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable2::Type()" />*/
	,
	$type: new $.ig.Type('PropertyTable2', $.ig.PropertyTableBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable2" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3" />*/

$.ig.util.defType('PropertyTable3', 'PropertyTableBase', {
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.PropertyTableBase.prototype.init.call(this, 0, shape._drawingProperties3());
	},
	init1: function (initNumber, properties) {
		$.ig.PropertyTableBase.prototype.init.call(this, 0, properties);
	},
	init2: function (initNumber, version, instance, recordLength) {
		$.ig.PropertyTableBase.prototype.init1.call(this, 1, version, instance, recordLength);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.PropertyTableBase.prototype.load.call(this, loadManager);
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		if (shape != null) {
			shape._drawingProperties3(this.properties());
			this.parseLoadedPropertyTableBase_PropertyValues(loadManager, shape);
		} else {
			loadManager._workbook()._drawingProperties3(this.properties());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3::ParseLoadedPropertyTableBase_PropertyValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.WorksheetShape)" />*/
	parseLoadedPropertyTableBase_PropertyValues: function (loadManager, shape) {
		var office2007Data = null;
		for (var i = 0; i < this.properties().count(); i++) {
			var propertyValue = this.properties().__inner[i];
			switch (propertyValue._propertyType()) {
				case $.ig.PropertyType.prototype.office2007Data:
					office2007Data = (propertyValue._value())._buffer;
					break;
			}
		}
		if (office2007Data != null && loadManager._packageFactory() != null) {
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3::ParseLoadedPropertyTableBase_PropertyValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.propertyTable3;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3::Type()" />*/
	,
	$type: new $.ig.Type('PropertyTable3', $.ig.PropertyTableBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTable3" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup" />*/

$.ig.util.defType('Regroup', 'EscherRecordBase', {
	_fridNews: null,
	_fridOlds: null,
	init: function (version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._fridNews = new Array(this.instance());
		this._fridOlds = new Array(this.instance());
		for (var i = 0; i < this._fridNews.length; i++) {
			this._fridNews[i] = loadManager._currentRecordStream()._readUInt16();
			this._fridOlds[i] = loadManager._currentRecordStream()._readUInt16();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		if (this._fridNews != null) {
			for (var i = 0; i < this._fridNews.length; i++) {
				saveManager._currentRecordStream()._write17(this._fridNews[i]);
				saveManager._currentRecordStream()._write17(this._fridOlds[i]);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		if (this._fridNews != null) {
			for (var i = 0; i < this._fridNews.length; i++) {
				sb.append3(i);
				sb.append5(": ");
				sb.append3(this._fridNews[i]);
				sb.append5(", ");
				sb.append3(this._fridOlds[i]);
				sb.appendLine();
			}
		}
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.regroup;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup::Type()" />*/
	,
	$type: new $.ig.Type('Regroup', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Regroup" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections" />*/

$.ig.util.defType('Selections', 'EscherRecordBase', {
	init: function (version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var cpsp = loadManager._currentRecordStream()._readUInt32();
		var dgslk = loadManager._currentRecordStream()._readUInt32();
		var spidFocus = loadManager._currentRecordStream()._readUInt32();
		var shapeCount = $.ig.intDivide((loadManager._currentRecordStream().length() - 20), 4);
		for (var i = 0; i < shapeCount; i++) {
			var spid = loadManager._currentRecordStream()._readUInt32();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		$.ig.ExcelUtils.prototype.debugFail("Implement the saving of the Selections record");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.selections;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections::Type()" />*/
	,
	$type: new $.ig.Type('Selections', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Selections" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape" />*/

$.ig.util.defType('EscherShape', 'EscherRecordBase', {
	_shapeId: 0,
	_shape: null,
	init: function (initNumber, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordBase.prototype.init.call(this, 2, shape._type2003().value(), 8);
		this._shape = shape;
		this._shapeId = shape._shapeId();
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 2, null);
		$.ig.ExcelUtils.prototype.debugAssert(recordLength == 8, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		this._shapeId = loadManager._currentRecordStream()._readUInt32();
		var optionFlags = loadManager._currentRecordStream()._readUInt32();
		var isGroupShape = (optionFlags & 1) == 1;
		var isPatriarch = (optionFlags & 4) == 4;
		var isDeleted = (optionFlags & 8) == 8;
		var isOleShape = (optionFlags & 16) == 16;
		var hasMaster = (optionFlags & 32) == 32;
		var flippedHorizontally = (optionFlags & 64) == 64;
		var flippedVertically = (optionFlags & 128) == 128;
		var isConnector = (optionFlags & 256) == 256;
		var isBackground = (optionFlags & 1024) == 1024;
		if (isDeleted) {
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert(hasMaster == false, null);
		$.ig.ExcelUtils.prototype.debugAssert(isBackground == false, null);
		if (isPatriarch) {
			$.ig.ExcelUtils.prototype.debugAssert(loadManager._contextStack().get$1($.ig.excel.WorksheetShapeCollection.prototype.$type) == null, "There should be no shape collection in the context stack");
			loadManager._contextStack().push(loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type));
			return;
		}
		var shape;
		if (isGroupShape) {
			$.ig.ExcelUtils.prototype.debugAssert(this.instance() == $.ig.ShapeType.prototype.notPrimitive, null);
			var group = new $.ig.excel.WorksheetShapeGroup(true);
			shape = group;
			if (this.parentRecord() != null) {
				var groupShapeRecord = this.parentRecord().getChildRecord$1($.ig.GroupShape.prototype.$type);
				if (groupShapeRecord != null) {
					loadManager._setGroupShapeChildBoundsInEmus(group, groupShapeRecord.rectInEMUs());
				}
			}
		} else {
			var type = this.instance();
			var t1 = type;
			L0: while (true) {
				switch (t1) {
					case $.ig.ShapeType.prototype.notPrimitive:
						t1 = void 0;
						continue L0;
					case $.ig.ShapeType.prototype.pictureFrame:
						shape = new $.ig.excel.WorksheetImage(false);
						break;
					case $.ig.ShapeType.prototype.textBox:
						shape = new $.ig.excel.UnknownShape(0, type, optionFlags);
						break;
					default:
						var predefinedShapeType = type;
						if ($.ig.Enum.prototype.isDefined($.ig.excel.PredefinedShapeType.prototype.$type, $.ig.excel.PredefinedShapeType.prototype.getBox(predefinedShapeType))) {
							shape = $.ig.excel.WorksheetShape.prototype._createPredefinedShape1(predefinedShapeType, false);
						} else {
							shape = new $.ig.excel.UnknownShape(0, type, optionFlags);
						}
						break;
				}
				break;
			}
		}
		var unknownShape = $.ig.util.cast($.ig.excel.UnknownShape.prototype.$type, shape);
		if (unknownShape != null) {
			unknownShape._isOleShape(isOleShape);
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(isOleShape == false || $.ig.util.cast($.ig.excel.WorksheetImage.prototype.$type, shape) !== null, "We are not expecting isOleShape to be true on any current 'known' shapes other than images.");
		}
		shape._shapeId(this._shapeId);
		shape.flippedHorizontally(flippedHorizontally);
		shape.flippedVertically(flippedVertically);
		loadManager._contextStack().push(shape);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		var optionFlags = 0;
		var unknownShape = $.ig.util.cast($.ig.excel.UnknownShape.prototype.$type, this._shape);
		if (unknownShape != null) {
			optionFlags = ($.ig.util.u32BitwiseAnd(unknownShape._shapeRecordOptionFlags(), ~2567));
		} else {
			var chartShape = $.ig.util.cast($.ig.excel.WorksheetChart.prototype.$type, this._shape);
			if (chartShape != null) {
				optionFlags = ($.ig.util.u32BitwiseAnd(chartShape._shapeRecordOptionFlags(), ~2567));
			}
		}
		if ($.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, this._shape) !== null) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 1);
		}
		if (this._shape._isTopMost() == false) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 2);
		}
		if ($.ig.util.cast($.ig.Shape_PatriarchShape.prototype.$type, this._shape) !== null) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 4);
		}
		if (unknownShape != null && unknownShape._isOleShape()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 16);
		}
		if (this._shape.flippedHorizontally()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 64);
		}
		if (this._shape.flippedVertically()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 128);
		}
		if (this._shape._isConnector()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 256);
		}
		if (($.ig.util.cast($.ig.Shape_PatriarchShape.prototype.$type, this._shape) !== null) == false) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 512);
		}
		if (this.instance() != 0) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 2048);
		}
		saveManager._currentRecordStream()._write18(this._shapeId);
		saveManager._currentRecordStream()._write18(optionFlags);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("------------------------------");
		sb.append5("\n");
		sb.append5($.ig.EscherRecordBase.prototype.toString.call(this));
		sb.append5("\n\n");
		sb.append5("Shape Type: " + this.instance());
		sb.append5("\n");
		sb.append5("Shape ID: " + this._shapeId);
		sb.append5("\n");
		sb.append5("------------------------------");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::ToString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.shape;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape::Type()" />*/
	,
	$type: new $.ig.Type('EscherShape', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape" />*/

$.ig.util.defType('Shape_PatriarchShape', 'excel.WorksheetShapeGroup', {
	__shapeId: 0,
	init: function (saveManager, worksheet) {
		$.ig.excel.WorksheetShapeGroup.prototype.init.call(this);
		this.__shapeId = saveManager._getSerializationCache1(worksheet)._patriarchShapeId;
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape::GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)" />*/
	_getBoundsInTwips1: function (options) {
		return $.ig.Rect.prototype.empty();
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape::GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape::IsTopMost()" />*/
	_isTopMost: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape::IsTopMost()" />*/
	,
	/*<BeginProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape::ShapeId()" />*/
	_shapeId: function (value) {
		if (arguments.length === 1) {
			$.ig.ExcelUtils.prototype.debugFail("This shape id cannot be set");
			return value;
		} else {
			return this.__shapeId;
		}
	}
	/*<EndProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape::ShapeId()" />*/
	,
	$type: new $.ig.Type('Shape_PatriarchShape', $.ig.excel.WorksheetShapeGroup.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.Shape_PatriarchShape" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer" />*/

$.ig.util.defType('ShapeContainer', 'EscherRecordContainerBase', {
	init: function (initNumber, saveManager, shape) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, 0, 0);
		if (shape._type2003().hasValue() == false) {
			$.ig.ExcelUtils.prototype.debugFail("This shape is invalid.");
			return;
		}
		saveManager._popuplateDrawingProperties(shape);
		var group = $.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, shape);
		if (group != null) {
			this.addChildRecord(new $.ig.GroupShape(0, group));
			if ($.ig.util.cast($.ig.Shape_PatriarchShape.prototype.$type, group) !== null) {
				this.addChildRecord(new $.ig.EscherShape(0, group));
				return;
			}
		}
		this.addChildRecord(new $.ig.EscherShape(0, shape));
		if (shape._hasDrawingProperties1()) {
			shape._drawingProperties1().sort();
			this.addChildRecord(new $.ig.PropertyTable1(0, shape));
		}
		if (shape._hasDrawingProperties2()) {
			shape._drawingProperties2().sort();
			this.addChildRecord(new $.ig.PropertyTable2(0, shape));
		}
		if (shape._hasDrawingProperties3()) {
			shape._drawingProperties3().sort();
			this.addChildRecord(new $.ig.PropertyTable3(0, shape));
		}
		this.addChildRecord($.ig.ShapeContainer.prototype.getAnchorRecord(shape));
		this.addChildRecord(new $.ig.ClientData(0, shape));
		var shapeWithText = $.ig.util.cast($.ig.excel.WorksheetShapeWithText.prototype.$type, shape);
		var comment = $.ig.util.cast($.ig.excel.WorksheetCellComment.prototype.$type, shape);
		if ((shapeWithText != null && shapeWithText._hasText()) || (comment != null)) {
			this.addChildRecord(new $.ig.ClientTextBox(0, shape));
		}
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 0, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.EscherRecordContainerBase.prototype.load.call(this, loadManager);
		if ($.ig.util.cast($.ig.excel.WorksheetShape.prototype.$type, loadManager._contextStack().current()) !== null) {
			var shape = loadManager._contextStack().pop();
			var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
			var shapeOwner = loadManager._contextStack().get$1($.ig.IWorksheetShapeOwner.prototype.$type);
			if (worksheet == null || shapeOwner == null) {
				$.ig.ExcelUtils.prototype.debugFail("There is no worksheet or shape owner in the context stack.");
				return;
			}
			var childAnchor = this.getChildRecord$1($.ig.ChildAnchor.prototype.$type);
			var group = $.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, shapeOwner);
			if (group != null) {
				if (childAnchor != null && worksheet != null) {
					var shapeTransform = $.ig.ShapeContainer.prototype.transformFromEmus(childAnchor.rectInEMUs());
					var absoluteGroupBounds = group._getBoundsInTwips();
					var groupBoundsInEmus = loadManager._getGroupShapeChildBoundsInEmus(group);
					var groupTransform = $.ig.ShapeContainer.prototype.groupTransformFromEmus(absoluteGroupBounds, groupBoundsInEmus);
					var rect = loadManager._getAbsoluteShapeBoundsInTwips(shapeTransform, shape._rotation(), groupTransform, absoluteGroupBounds);
					shape._setBoundsInTwips(worksheet, rect);
				}
			} else if (childAnchor != null) {
				shape._setBoundsInTwips(worksheet, $.ig.ExcelUtils.prototype.eMUToTwips1(childAnchor.rectInEMUs()));
			}
			if ($.ig.excel.WorksheetCell.prototype.l_op_Equality(shape.topLeftCornerCell(), null)) {
				$.ig.ExcelUtils.prototype.debugFail("The shape has not been anchored.");
				return;
			}
			shapeOwner.shapes()._add4(shape, false);
			if ($.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, shape) !== null) {
				loadManager._contextStack().push(shape);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::GetAnchorRecord(Infragistics.Documents.Excel.WorksheetShape)" />*/
	getAnchorRecord: function (shape) {
		if (shape._isTopMost()) {
			return new $.ig.ClientAnchor(0, shape);
		} else {
			return new $.ig.ChildAnchor(0, shape);
		}
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::GetAnchorRecord(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
		switch (childRecord.type()) {
			case $.ig.EscherRecordType.prototype.groupShape:
			case $.ig.EscherRecordType.prototype.shape:
			case $.ig.EscherRecordType.prototype.propertyTable1:
			case $.ig.EscherRecordType.prototype.propertyTable2:
			case $.ig.EscherRecordType.prototype.propertyTable3:
			case $.ig.EscherRecordType.prototype.textbox:
			case $.ig.EscherRecordType.prototype.clientTextbox:
			case $.ig.EscherRecordType.prototype.anchor:
			case $.ig.EscherRecordType.prototype.childAnchor:
			case $.ig.EscherRecordType.prototype.clientAnchor:
			case $.ig.EscherRecordType.prototype.clientData:
			case $.ig.EscherRecordType.prototype.oLEObject:
			case $.ig.EscherRecordType.prototype.deletedPSPL:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.shapeContainer;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::Type()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.OfficeOpenXml.Core.CT_GroupTransform2D Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::GroupTransformFromEmus(System.Windows.Rect, System.Windows.Rect)" />*/
	groupTransformFromEmus: function (mainTransform, childrenTransform) {
		return (function () {
			var $ret = new $.ig.CT_GroupTransform2D();
			$ret.offset((function () {
				var $ret = new $.ig.CT_Point2D();
				$ret.x($.ig.ST_Coordinate.prototype.l_op_Implicit_ST_Coordinate_Int64($.ig.truncate(mainTransform.x())));
				$ret.y($.ig.ST_Coordinate.prototype.l_op_Implicit_ST_Coordinate_Int64($.ig.truncate(mainTransform.y())));
				return $ret;
			}()));
			$ret.extents((function () {
				var $ret = new $.ig.CT_PositiveSize2D();
				$ret.cX($.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_ST_PositiveCoordinate_Int64($.ig.truncate(mainTransform.width())));
				$ret.cY($.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_ST_PositiveCoordinate_Int64($.ig.truncate(mainTransform.height())));
				return $ret;
			}()));
			$ret.childOffset((function () {
				var $ret = new $.ig.CT_Point2D();
				$ret.x($.ig.ST_Coordinate.prototype.l_op_Implicit_ST_Coordinate_Int64($.ig.truncate(childrenTransform.x())));
				$ret.y($.ig.ST_Coordinate.prototype.l_op_Implicit_ST_Coordinate_Int64($.ig.truncate(childrenTransform.y())));
				return $ret;
			}()));
			$ret.childExtents((function () {
				var $ret = new $.ig.CT_PositiveSize2D();
				$ret.cX($.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_ST_PositiveCoordinate_Int64($.ig.truncate(childrenTransform.width())));
				$ret.cY($.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_ST_PositiveCoordinate_Int64($.ig.truncate(childrenTransform.height())));
				return $ret;
			}()));
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.Documents.OfficeOpenXml.Core.CT_GroupTransform2D Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::GroupTransformFromEmus(System.Windows.Rect, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.OfficeOpenXml.Core.CT_Transform2D Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::TransformFromEmus(System.Windows.Rect)" />*/
	transformFromEmus: function (transform) {
		return (function () {
			var $ret = new $.ig.CT_Transform2D();
			$ret.offset((function () {
				var $ret = new $.ig.CT_Point2D();
				$ret.x($.ig.ST_Coordinate.prototype.l_op_Implicit_ST_Coordinate_Int64($.ig.truncate(transform.x())));
				$ret.y($.ig.ST_Coordinate.prototype.l_op_Implicit_ST_Coordinate_Int64($.ig.truncate(transform.y())));
				return $ret;
			}()));
			$ret.extents((function () {
				var $ret = new $.ig.CT_PositiveSize2D();
				$ret.cX($.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_ST_PositiveCoordinate_Int64($.ig.truncate(transform.width())));
				$ret.cY($.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_ST_PositiveCoordinate_Int64($.ig.truncate(transform.height())));
				return $ret;
			}()));
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.Documents.OfficeOpenXml.Core.CT_Transform2D Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer::TransformFromEmus(System.Windows.Rect)" />*/
	,
	$type: new $.ig.Type('ShapeContainer', $.ig.EscherRecordContainerBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ShapeContainer" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer" />*/

$.ig.util.defType('SolverContainer', 'EscherRecordContainerBase', {
	init: function (initNumber, worksheet) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.EscherRecordContainerBase.prototype.init.call(this, 15, 0, 0);
		var records = worksheet._getSolverRecords();
		var en = records.getEnumerator();
		while (en.moveNext()) {
			var record = en.current();
			this.addChildRecord(record);
		}
		this.instance(this.childRecordCount());
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordContainerBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 15, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.EscherRecordContainerBase.prototype.load.call(this, loadManager);
		$.ig.ExcelUtils.prototype.debugAssert(this.instance() == this.childRecordCount(), null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	validateChildRecord: function (childRecord) {
		switch (childRecord.type()) {
			case $.ig.EscherRecordType.prototype.connectorRule:
			case $.ig.EscherRecordType.prototype.alignRule:
			case $.ig.EscherRecordType.prototype.arcRule:
			case $.ig.EscherRecordType.prototype.clientRule:
			case $.ig.EscherRecordType.prototype.calloutRule:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer::ValidateChildRecord(Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordBase)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.solverContainer;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer::Type()" />*/
	,
	$type: new $.ig.Type('SolverContainer', $.ig.EscherRecordContainerBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SolverContainer" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors" />*/

$.ig.util.defType('SplitMenuColors', 'EscherRecordBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SplitMenuColors.prototype.init1.call(this, 1, 0, 4, 16);
	},
	init1: function (initNumber, version, instance, recordLength) {
		$.ig.EscherRecordBase.prototype.init.call(this, version, instance, recordLength);
		$.ig.ExcelUtils.prototype.debugAssert(version == 0, null);
		$.ig.ExcelUtils.prototype.debugAssert(instance == 4, null);
		$.ig.ExcelUtils.prototype.debugAssert(recordLength == 16, null);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		for (var i = 0; i < this.instance(); i++) {
			loadManager._currentRecordStream()._readUInt32();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.EscherRecordBase.prototype.save.call(this, saveManager);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(134217741));
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(134217740));
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(134217751));
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(268435703));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors::Type()" />*/
	type: function () {
		return $.ig.EscherRecordType.prototype.splitMenuColors;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.EscherRecordType Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors::Type()" />*/
	,
	$type: new $.ig.Type('SplitMenuColors', $.ig.EscherRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.SplitMenuColors" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase" />*/

$.ig.util.defType('Biff8RecordBase', 'BiffRecordBase$3', {
	init: function () {
		$.ig.BiffRecordBase$3.prototype.init.call(this, $.ig.BIFF8RecordType.prototype.$type, $.ig.WorkbookLoadManagerExcel2003.prototype.$type, $.ig.WorkbookSaveManagerExcel2003.prototype.$type);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase<Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003>.CreateBiffRecordDelegate Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::CreateBiffRecordCallback()" />*/
	createBiffRecordCallback: function () {
		if ($.ig.Biff8RecordBase.prototype._createBiffRecordCallback == null) {
			$.ig.Biff8RecordBase.prototype._createBiffRecordCallback = $.ig.Biff8RecordBase.prototype.createBiffRecord;
		}
		return $.ig.Biff8RecordBase.prototype._createBiffRecordCallback;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase<Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType, Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003>.CreateBiffRecordDelegate Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::CreateBiffRecordCallback()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::GetContinuationBlockType(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	getContinuationBlockType: function (type) {
		switch (type) {
			case $.ig.BIFF8RecordType.prototype.oBJ:
			case $.ig.BIFF8RecordType.prototype.$default:
				return $.ig.BIFF8RecordType.prototype.$default;
			case $.ig.BIFF8RecordType.prototype.mERGEDCELLS: return $.ig.BIFF8RecordType.prototype.mERGEDCELLS;
			case $.ig.BIFF8RecordType.prototype.tHEME:
			case $.ig.BIFF8RecordType.prototype.aUTOFILTER12:
			case $.ig.BIFF8RecordType.prototype.sORTDATA12:
				return $.ig.BIFF8RecordType.prototype.cONTINUEFRT12;
		}
		return $.ig.BIFF8RecordType.prototype.cONTINUE;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::GetContinuationBlockType(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::CreateBiffRecord(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	createBiffRecord: function (type) {
		switch (type) {
			case 220:
				$.ig.ExcelUtils.prototype.debugFail("Figure out how to handle this record.");
				return null;
			case $.ig.BIFF8RecordType.prototype.record1904: return new $.ig.Record1904();
			case $.ig.BIFF8RecordType.prototype.aCTIVEXMARKER: return new $.ig.ACTIVEXMARKERRecord();
			case $.ig.BIFF8RecordType.prototype.aDDIN: break;
			case $.ig.BIFF8RecordType.prototype.aDDMENU: break;
			case $.ig.BIFF8RecordType.prototype.aRRAY: return new $.ig.ARRAYRecord();
			case $.ig.BIFF8RecordType.prototype.aUTOFILTER: break;
			case $.ig.BIFF8RecordType.prototype.aUTOFILTER12: return new $.ig.AUTOFILTER12Record();
			case $.ig.BIFF8RecordType.prototype.aUTOFILTERINFO: break;
			case $.ig.BIFF8RecordType.prototype.bACKUP: return new $.ig.BACKUPRecord();
			case $.ig.BIFF8RecordType.prototype.bLANK: return new $.ig.BLANKRecord();
			case $.ig.BIFF8RecordType.prototype.bITMAP: return new $.ig.BITMAPRecord();
			case $.ig.BIFF8RecordType.prototype.bOF: return new $.ig.BOFRecord();
			case $.ig.BIFF8RecordType.prototype.bOOKBOOL: return new $.ig.BOOKBOOLRecord();
			case $.ig.BIFF8RecordType.prototype.bOOKEXT: return new $.ig.BOOKEXTRecord();
			case $.ig.BIFF8RecordType.prototype.bOOLERR: return new $.ig.BOOLERRRecord();
			case $.ig.BIFF8RecordType.prototype.bOTTOMMARGIN: return new $.ig.BOTTOMMARGINRecord();
			case $.ig.BIFF8RecordType.prototype.bOUNDSHEET: return new $.ig.BOUNDSHEETRecord();
			case $.ig.BIFF8RecordType.prototype.cALCCOUNT: return new $.ig.CALCCOUNTRecord();
			case $.ig.BIFF8RecordType.prototype.cALCMODE: return new $.ig.CALCMODERecord();
			case $.ig.BIFF8RecordType.prototype.cELLWATCH: break;
			case $.ig.BIFF8RecordType.prototype.cF: break;
			case $.ig.BIFF8RecordType.prototype.cODEPAGE: return new $.ig.CODEPAGERecord();
			case $.ig.BIFF8RecordType.prototype.cOLINFO: return new $.ig.COLINFORecord();
			case $.ig.BIFF8RecordType.prototype.cONDFMT: break;
			case $.ig.BIFF8RecordType.prototype.cONTINUE: break;
			case $.ig.BIFF8RecordType.prototype.cONTINUEFRT: break;
			case $.ig.BIFF8RecordType.prototype.cONTINUEFRT11: break;
			case $.ig.BIFF8RecordType.prototype.cONTINUEFRT12: break;
			case $.ig.BIFF8RecordType.prototype.cOORDLIST: break;
			case $.ig.BIFF8RecordType.prototype.cOUNTRY: return new $.ig.COUNTRYRecord();
			case $.ig.BIFF8RecordType.prototype.cRASHRECERR: break;
			case $.ig.BIFF8RecordType.prototype.cRN: return new $.ig.CRNRecord();
			case $.ig.BIFF8RecordType.prototype.cRTCOOPT: break;
			case $.ig.BIFF8RecordType.prototype.dATALABEXT: break;
			case $.ig.BIFF8RecordType.prototype.dATALABEXTCONTENTS: break;
			case $.ig.BIFF8RecordType.prototype.dBCELL: return new $.ig.DBCELLRecord();
			case $.ig.BIFF8RecordType.prototype.dBQUERYEXT: break;
			case $.ig.BIFF8RecordType.prototype.dCON: break;
			case $.ig.BIFF8RecordType.prototype.dCONBIN: break;
			case $.ig.BIFF8RecordType.prototype.dCONNAME: break;
			case $.ig.BIFF8RecordType.prototype.dCONREF: break;
			case $.ig.BIFF8RecordType.prototype.dEFAULTROWHEIGHT: return new $.ig.DEFAULTROWHEIGHTRecord();
			case $.ig.BIFF8RecordType.prototype.dEFCOLWIDTH: return new $.ig.DEFCOLWIDTHRecord();
			case $.ig.BIFF8RecordType.prototype.dELMENU: break;
			case $.ig.BIFF8RecordType.prototype.dELTA: return new $.ig.DELTARecord();
			case $.ig.BIFF8RecordType.prototype.dIMENSIONS: return new $.ig.DIMENSIONSRecord();
			case $.ig.BIFF8RecordType.prototype.dOCROUTE: break;
			case $.ig.BIFF8RecordType.prototype.dROPDOWNOBJIDS: break;
			case $.ig.BIFF8RecordType.prototype.dSF: return new $.ig.DSFRecord();
			case $.ig.BIFF8RecordType.prototype.dV: return new $.ig.DVRecord();
			case $.ig.BIFF8RecordType.prototype.dVAL: return new $.ig.DVALRecord();
			case $.ig.BIFF8RecordType.prototype.dXF: return new $.ig.DXFRecord();
			case $.ig.BIFF8RecordType.prototype.eDG: break;
			case $.ig.BIFF8RecordType.prototype.eFONT: break;
			case $.ig.BIFF8RecordType.prototype.eOF: return new $.ig.EOFRecord();
			case $.ig.BIFF8RecordType.prototype.eXCEL9FILE: return new $.ig.EXCEL9FILERecord();
			case $.ig.BIFF8RecordType.prototype.eXTERNCOUNT: break;
			case $.ig.BIFF8RecordType.prototype.eXTERNNAME: return new $.ig.EXTERNNAMERecord();
			case $.ig.BIFF8RecordType.prototype.eXTERNSHEET: return new $.ig.EXTERNSHEETRecord();
			case $.ig.BIFF8RecordType.prototype.eXTSST: return new $.ig.EXTSSTRecord();
			case $.ig.BIFF8RecordType.prototype.eXTSTRING: break;
			case $.ig.BIFF8RecordType.prototype.fEAT: return new $.ig.FEATRecord();
			case $.ig.BIFF8RecordType.prototype.fEAT11: return new $.ig.FEAT11Record();
			case $.ig.BIFF8RecordType.prototype.fEAT12: return new $.ig.FEAT12Record();
			case $.ig.BIFF8RecordType.prototype.fEATHEADR: return new $.ig.FEATHEADRRecord();
			case $.ig.BIFF8RecordType.prototype.fEATHEADR11: return new $.ig.FEATHEADR11Record();
			case $.ig.BIFF8RecordType.prototype.fILEPASS: return new $.ig.FILEPASSRecord();
			case $.ig.BIFF8RecordType.prototype.fILESHARING: return new $.ig.FILESHARINGRecord();
			case $.ig.BIFF8RecordType.prototype.fILESHARING2: break;
			case $.ig.BIFF8RecordType.prototype.fILTERMODE: break;
			case $.ig.BIFF8RecordType.prototype.fMQRY: break;
			case $.ig.BIFF8RecordType.prototype.fMSQRY: break;
			case $.ig.BIFF8RecordType.prototype.fNGROUPCOUNT: return new $.ig.FNGROUPCOUNTRecord();
			case $.ig.BIFF8RecordType.prototype.fNGROUPNAME: break;
			case $.ig.BIFF8RecordType.prototype.fONT: return new $.ig.FONTRecord();
			case $.ig.BIFF8RecordType.prototype.fOOTER: return new $.ig.FOOTERRecord();
			case $.ig.BIFF8RecordType.prototype.fORMAT: return new $.ig.FORMATRecord();
			case $.ig.BIFF8RecordType.prototype.fORMULA: return new $.ig.FORMULARecord();
			case $.ig.BIFF8RecordType.prototype.gCW: break;
			case $.ig.BIFF8RecordType.prototype.gRIDSET: return new $.ig.GRIDSETRecord();
			case $.ig.BIFF8RecordType.prototype.gUTS: return new $.ig.GUTSRecord();
			case $.ig.BIFF8RecordType.prototype.hCENTER: return new $.ig.HCENTERRecord();
			case $.ig.BIFF8RecordType.prototype.hEADER: return new $.ig.HEADERRecord();
			case $.ig.BIFF8RecordType.prototype.hEADERFOOTER: return new $.ig.HEADERFOOTERRecord();
			case $.ig.BIFF8RecordType.prototype.hFPicture: return new $.ig.HFPICTURERecord();
			case $.ig.BIFF8RecordType.prototype.hIDEOBJ: return new $.ig.HIDEOBJRecord();
			case $.ig.BIFF8RecordType.prototype.hLINK: return new $.ig.HLINKRecord();
			case $.ig.BIFF8RecordType.prototype.hLINKTOOLTIP: return new $.ig.HLINKTOOLTIPRecord();
			case $.ig.BIFF8RecordType.prototype.hORIZONTALPAGEBREAKS: return new $.ig.HORIZONTALPAGEBREAKSRecord();
			case $.ig.BIFF8RecordType.prototype.iMDATA: break;
			case $.ig.BIFF8RecordType.prototype.iNDEX: return new $.ig.INDEXRecord();
			case $.ig.BIFF8RecordType.prototype.iNTERFACEEND: return new $.ig.INTERFACEENDRecord();
			case $.ig.BIFF8RecordType.prototype.iNTERFACEHDR: return new $.ig.INTERFACEHDRRecord();
			case $.ig.BIFF8RecordType.prototype.iTERATION: return new $.ig.ITERATIONRecord();
			case $.ig.BIFF8RecordType.prototype.lABEL: return new $.ig.LABELRecord();
			case $.ig.BIFF8RecordType.prototype.lABELRANGES: break;
			case $.ig.BIFF8RecordType.prototype.lABELSST: return new $.ig.LABELSSTRecord();
			case $.ig.BIFF8RecordType.prototype.lEFTMARGIN: return new $.ig.LEFTMARGINRecord();
			case $.ig.BIFF8RecordType.prototype.lHNGRAPH: break;
			case $.ig.BIFF8RecordType.prototype.lHRECORD: break;
			case $.ig.BIFF8RecordType.prototype.lIST12: return new $.ig.LIST12Record();
			case $.ig.BIFF8RecordType.prototype.lISTCF: break;
			case $.ig.BIFF8RecordType.prototype.lISTCONDFMT: break;
			case $.ig.BIFF8RecordType.prototype.lISTDV: break;
			case $.ig.BIFF8RecordType.prototype.lISTFIELD: break;
			case $.ig.BIFF8RecordType.prototype.lISTOBJ: break;
			case $.ig.BIFF8RecordType.prototype.lNEXT: break;
			case $.ig.BIFF8RecordType.prototype.lPR: break;
			case $.ig.BIFF8RecordType.prototype.mERGEDCELLS: return new $.ig.MERGEDCELLSRecord();
			case $.ig.BIFF8RecordType.prototype.mKREXT: break;
			case $.ig.BIFF8RecordType.prototype.mMS: return new $.ig.MMSRecord();
			case $.ig.BIFF8RecordType.prototype.mSODRAWING: return new $.ig.MSODRAWINGRecord();
			case $.ig.BIFF8RecordType.prototype.mSODRAWINGGROUP: return new $.ig.MSODRAWINGGROUPRecord();
			case $.ig.BIFF8RecordType.prototype.mSODRAWINGSELECTION: return new $.ig.MSODRAWINGSELECTIONRecord();
			case $.ig.BIFF8RecordType.prototype.mULBLANK: return new $.ig.MULBLANKRecord();
			case $.ig.BIFF8RecordType.prototype.mULRK: return new $.ig.MULRKRecord();
			case $.ig.BIFF8RecordType.prototype.nAME: return new $.ig.NAMERecord();
			case $.ig.BIFF8RecordType.prototype.nAMEEXT: return new $.ig.NAMEEXTRecord();
			case $.ig.BIFF8RecordType.prototype.nOTE: return new $.ig.NOTERecord();
			case $.ig.BIFF8RecordType.prototype.nUMBER: return new $.ig.NUMBERRecord();
			case $.ig.BIFF8RecordType.prototype.oBJ: return new $.ig.OBJRecord();
			case $.ig.BIFF8RecordType.prototype.oBJPROTECT: return new $.ig.OBJPROTECTRecord();
			case $.ig.BIFF8RecordType.prototype.oBPROJ: return new $.ig.OBPROJRecord();
			case $.ig.BIFF8RecordType.prototype.oLEDBCONN: break;
			case $.ig.BIFF8RecordType.prototype.oLESIZE: return new $.ig.OLESIZERecord();
			case $.ig.BIFF8RecordType.prototype.pAGELAYOUTINFO: return new $.ig.PAGELAYOUTINFORecord();
			case $.ig.BIFF8RecordType.prototype.pALETTE: return new $.ig.PALETTERecord();
			case $.ig.BIFF8RecordType.prototype.pANE: return new $.ig.PANERecord();
			case $.ig.BIFF8RecordType.prototype.pASSWORD: return new $.ig.PASSWORDRecord();
			case $.ig.BIFF8RecordType.prototype.pLS: return new $.ig.PLSRecord();
			case $.ig.BIFF8RecordType.prototype.pLV: break;
			case $.ig.BIFF8RecordType.prototype.pRECISION: return new $.ig.PRECISIONRecord();
			case $.ig.BIFF8RecordType.prototype.pRINTGRIDLINES: return new $.ig.PRINTGRIDLINESRecord();
			case $.ig.BIFF8RecordType.prototype.pRINTHEADERS: return new $.ig.PRINTHEADERSRecord();
			case $.ig.BIFF8RecordType.prototype.pROTECT: return new $.ig.PROTECTRecord();
			case $.ig.BIFF8RecordType.prototype.pROT4REV: return new $.ig.PROT4REVRecord();
			case $.ig.BIFF8RecordType.prototype.pROT4REVPASS: return new $.ig.PROT4REVPASSRecord();
			case $.ig.BIFF8RecordType.prototype.pUB: break;
			case $.ig.BIFF8RecordType.prototype.qSI: break;
			case $.ig.BIFF8RecordType.prototype.qSIF: break;
			case $.ig.BIFF8RecordType.prototype.qSIR: break;
			case $.ig.BIFF8RecordType.prototype.qSISXTAG: break;
			case $.ig.BIFF8RecordType.prototype.rEALTIMEDATA: break;
			case $.ig.BIFF8RecordType.prototype.rECALCID: return new $.ig.RECALCIDRecord();
			case $.ig.BIFF8RecordType.prototype.rECIPNAME: break;
			case $.ig.BIFF8RecordType.prototype.rEFMODE: return new $.ig.REFMODERecord();
			case $.ig.BIFF8RecordType.prototype.rEFRESHALL: return new $.ig.REFRESHALLRecord();
			case $.ig.BIFF8RecordType.prototype.rIGHTMARGIN: return new $.ig.RIGHTMARGINRecord();
			case $.ig.BIFF8RecordType.prototype.rK: return new $.ig.RKRecord();
			case $.ig.BIFF8RecordType.prototype.rOW: return new $.ig.ROWRecord();
			case $.ig.BIFF8RecordType.prototype.sAVERECALC: return new $.ig.SAVERECALCRecord();
			case $.ig.BIFF8RecordType.prototype.sCENARIO: break;
			case $.ig.BIFF8RecordType.prototype.sCENMAN: break;
			case $.ig.BIFF8RecordType.prototype.sCENPROTECT: return new $.ig.SCENPROTECTRecord();
			case $.ig.BIFF8RecordType.prototype.sCL: return new $.ig.SCLRecord();
			case $.ig.BIFF8RecordType.prototype.sELECTION: return new $.ig.SELECTIONRecord();
			case $.ig.BIFF8RecordType.prototype.sETUP: return new $.ig.SETUPRecord();
			case $.ig.BIFF8RecordType.prototype.sHEETEXT: return new $.ig.SHEETEXTRecord();
			case $.ig.BIFF8RecordType.prototype.sHRFMLA: return new $.ig.SHRFMLARecord();
			case $.ig.BIFF8RecordType.prototype.sORT: break;
			case $.ig.BIFF8RecordType.prototype.sORTDATA12: return new $.ig.SORTDATA12Record();
			case $.ig.BIFF8RecordType.prototype.sOUND: break;
			case $.ig.BIFF8RecordType.prototype.sST: return new $.ig.SSTRecord();
			case $.ig.BIFF8RecordType.prototype.sTANDARDWIDTH: return new $.ig.STANDARDWIDTHRecord();
			case $.ig.BIFF8RecordType.prototype.sTRING: return new $.ig.STRINGRecord();
			case $.ig.BIFF8RecordType.prototype.sTYLE: return new $.ig.STYLERecord();
			case $.ig.BIFF8RecordType.prototype.sTYLEEXT: return new $.ig.STYLEEXTRecord();
			case $.ig.BIFF8RecordType.prototype.sUB: break;
			case $.ig.BIFF8RecordType.prototype.sUPBOOK: return new $.ig.SUPBOOKRecord();
			case $.ig.BIFF8RecordType.prototype.sXADDL: break;
			case $.ig.BIFF8RecordType.prototype.sXDB: break;
			case $.ig.BIFF8RecordType.prototype.sXDBEX: break;
			case $.ig.BIFF8RecordType.prototype.sXDI: break;
			case $.ig.BIFF8RecordType.prototype.sXDXF: break;
			case $.ig.BIFF8RecordType.prototype.sXEX: break;
			case $.ig.BIFF8RecordType.prototype.sXFDBTYPE: break;
			case $.ig.BIFF8RecordType.prototype.sXFILT: break;
			case $.ig.BIFF8RecordType.prototype.sXFMLA: break;
			case $.ig.BIFF8RecordType.prototype.sXFORMAT: break;
			case $.ig.BIFF8RecordType.prototype.sXFORMULA: break;
			case $.ig.BIFF8RecordType.prototype.sXIDSTM: break;
			case $.ig.BIFF8RecordType.prototype.sXITM: break;
			case $.ig.BIFF8RecordType.prototype.sXIVD: break;
			case $.ig.BIFF8RecordType.prototype.sXLI: break;
			case $.ig.BIFF8RecordType.prototype.sXNAME: break;
			case $.ig.BIFF8RecordType.prototype.sXPAIR: break;
			case $.ig.BIFF8RecordType.prototype.sXPI: break;
			case $.ig.BIFF8RecordType.prototype.sXPIEX: break;
			case $.ig.BIFF8RecordType.prototype.sXRULE: break;
			case $.ig.BIFF8RecordType.prototype.sXSELECT: break;
			case $.ig.BIFF8RecordType.prototype.sXSTRING: break;
			case $.ig.BIFF8RecordType.prototype.sXTBL: break;
			case $.ig.BIFF8RecordType.prototype.sXTBPG: break;
			case $.ig.BIFF8RecordType.prototype.sXTBRGIITM: break;
			case $.ig.BIFF8RecordType.prototype.sXTH: break;
			case $.ig.BIFF8RecordType.prototype.sXVD: break;
			case $.ig.BIFF8RecordType.prototype.sXVDEX: break;
			case $.ig.BIFF8RecordType.prototype.sXVDTEX: break;
			case $.ig.BIFF8RecordType.prototype.sXVI: break;
			case $.ig.BIFF8RecordType.prototype.sXVIEW: break;
			case $.ig.BIFF8RecordType.prototype.sXVIEWEX: break;
			case $.ig.BIFF8RecordType.prototype.sXVIEWEX9: break;
			case $.ig.BIFF8RecordType.prototype.sXVS: break;
			case $.ig.BIFF8RecordType.prototype.tABID: return new $.ig.TABIDRecord();
			case $.ig.BIFF8RecordType.prototype.tABIDCONF: break;
			case $.ig.BIFF8RecordType.prototype.tABLE: return new $.ig.TABLERecord();
			case $.ig.BIFF8RecordType.prototype.tABLESTYLE: return new $.ig.TABLESTYLERecord();
			case $.ig.BIFF8RecordType.prototype.tABLESTYLEELEMENT: return new $.ig.TABLESTYLEELEMENTRecord();
			case $.ig.BIFF8RecordType.prototype.tABLESTYLES: return new $.ig.TABLESTYLESRecord();
			case $.ig.BIFF8RecordType.prototype.tEMPLATE: return new $.ig.TEMPLATERecord();
			case $.ig.BIFF8RecordType.prototype.tHEME: return new $.ig.THEMERecord();
			case $.ig.BIFF8RecordType.prototype.tOPMARGIN: return new $.ig.TOPMARGINRecord();
			case $.ig.BIFF8RecordType.prototype.tXO: return new $.ig.TXORecord();
			case $.ig.BIFF8RecordType.prototype.tXTQUERY: break;
			case $.ig.BIFF8RecordType.prototype.uDDESC: break;
			case $.ig.BIFF8RecordType.prototype.uNCALCED: break;
			case $.ig.BIFF8RecordType.prototype.uSERBVIEW: return new $.ig.USERBVIEWRecord();
			case $.ig.BIFF8RecordType.prototype.uSERSVIEWBEGIN: return new $.ig.USERSVIEWBEGINRecord();
			case $.ig.BIFF8RecordType.prototype.uSERSVIEWEND: return new $.ig.USERSVIEWENDRecord();
			case $.ig.BIFF8RecordType.prototype.uSESELFS: return new $.ig.USESELFSRecord();
			case $.ig.BIFF8RecordType.prototype.vBAOBJECTNAME: return new $.ig.VBAOBJECTNAMERecord();
			case $.ig.BIFF8RecordType.prototype.vCENTER: return new $.ig.VCENTERRecord();
			case $.ig.BIFF8RecordType.prototype.vERTICALPAGEBREAKS: return new $.ig.VERTICALPAGEBREAKSRecord();
			case $.ig.BIFF8RecordType.prototype.wEBPUB: break;
			case $.ig.BIFF8RecordType.prototype.wINDOW1: return new $.ig.WINDOW1Record();
			case $.ig.BIFF8RecordType.prototype.wINDOW2: return new $.ig.WINDOW2Record();
			case $.ig.BIFF8RecordType.prototype.wINDOWPROTECT: return new $.ig.WINDOWPROTECTRecord();
			case $.ig.BIFF8RecordType.prototype.wOPT: break;
			case $.ig.BIFF8RecordType.prototype.wRITEACCESS: return new $.ig.WRITEACCESSRecord();
			case $.ig.BIFF8RecordType.prototype.wRITEPROT: return new $.ig.WRITEPROTRecord();
			case $.ig.BIFF8RecordType.prototype.wSBOOL: return new $.ig.WSBOOLRecord();
			case $.ig.BIFF8RecordType.prototype.xCT: return new $.ig.XCTRecord();
			case $.ig.BIFF8RecordType.prototype.xF: return new $.ig.XFRecord();
			case $.ig.BIFF8RecordType.prototype.xFCRC: return new $.ig.XFCRCRecord();
			case $.ig.BIFF8RecordType.prototype.xFEXT: return new $.ig.XFEXTRecord();
			case $.ig.BIFF8RecordType.prototype.xL5MODIFY: break;
			case $.ig.BIFF8RecordType.prototype.rSTRING: return new $.ig.RSTRINGRecord();
		}
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.BIFF8RecordType.prototype.$type, $.ig.BIFF8RecordType.prototype.getBox(type)) == false, "Unhandled record type: " + $.ig.BIFF8RecordType.prototype.getBox(type));
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.Serialization.BiffRecordBase Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::CreateBiffRecord(Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::CanBeEncrypted()" />*/
	canBeEncrypted: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase::CanBeEncrypted()" />*/
	,
	$type: new $.ig.Type('Biff8RecordBase', $.ig.BiffRecordBase$3.prototype.$type.specialize($.ig.BIFF8RecordType.prototype.$type, $.ig.WorkbookLoadManagerExcel2003.prototype.$type, $.ig.WorkbookSaveManagerExcel2003.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904" />*/

$.ig.util.defType('Record1904', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().dateSystem(loadManager._currentRecordStream()._readUInt16());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(saveManager._workbook().dateSystem());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.record1904;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904::Type()" />*/
	,
	$type: new $.ig.Type('Record1904', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Record1904" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord" />*/

$.ig.util.defType('ACTIVEXMARKERRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugAssert(loadManager._currentRecordStream().length() == 0, "We are expecting this record to be empty.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._workbook()._has2003ActiveXMarker(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.aCTIVEXMARKER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord::Type()" />*/
	,
	$type: new $.ig.Type('ACTIVEXMARKERRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ACTIVEXMARKERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord" />*/

$.ig.util.defType('ARRAYRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var firstRow = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lastRow = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var firstColumn = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lastColumn = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var optionFlags = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var recalculateAlways = (optionFlags & 1) == 1;
		var calculateOnOpen = (optionFlags & 2) == 2;
		var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex);
		data = $ret.p0;
		dataIndex = $ret.p1;
		var formula = (function () { var $ret = loadManager._loadArrayFormula(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		$.ig.ExcelUtils.prototype.debugAssert(formula._recalculateAlways() == recalculateAlways, null);
		formula._isDirtyOnLoad(calculateOnOpen);
		formula._applyTo3(worksheet._getCachedRegion1(firstRow, firstColumn, lastRow, lastColumn));
		var pendingSharedFormulaRoots = new $.ig.List$1($.ig.KeyValuePair$2.prototype.$type.specialize($.ig.WorksheetCellAddress.prototype.$type, $.ig.excel.ExcelCalcValue.prototype.$type), 1, loadManager._pendingSharedFormulaRoots());
		var en = pendingSharedFormulaRoots.getEnumerator();
		while (en.moveNext()) {
			var pair = en.current();
			var cellAddress = pair.key();
			var lastCalculatedValue = pair.value();
			var rowIndex = cellAddress.rowIndex();
			var columnIndex = cellAddress.columnIndex();
			if (firstRow <= rowIndex && rowIndex <= lastRow && firstColumn <= columnIndex && columnIndex <= lastColumn) {
				loadManager._pendingSharedFormulaRoots().remove(cellAddress);
				worksheet.rows().item(rowIndex)._setCachedCalculatedValue(columnIndex, lastCalculatedValue);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var cellContext = saveManager._currentCellContext();
		var arrayInteriorFormula = $.ig.util.cast($.ig.ArrayInteriorFormula.prototype.$type, cellContext.value());
		if (arrayInteriorFormula == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no array formula in the context stack.");
			return;
		}
		var arrayFormula = arrayInteriorFormula._arrayFormula();
		saveManager._currentRecordStream()._write17(arrayFormula.cellRange().firstRow());
		saveManager._currentRecordStream()._write17(arrayFormula.cellRange().lastRow());
		saveManager._currentRecordStream()._write9(arrayFormula.cellRange().firstColumn());
		saveManager._currentRecordStream()._write9(arrayFormula.cellRange().lastColumn());
		var optionFlags = 0;
		if (arrayFormula._recalculateAlways()) {
			optionFlags |= 1;
		}
		if (cellContext.row()._getCellCalcReference(saveManager._currentCellDataContext().columnIndex())._shouldBeRecalculatedOnNextLoad()) {
			optionFlags |= 2;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._saveFormula(arrayFormula, true, false, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.aRRAY;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord::Type()" />*/
	,
	$type: new $.ig.Type('ARRAYRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ARRAYRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record" />*/

$.ig.util.defType('AUTOFILTER12Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var region = loadManager._currentRecordStream()._readFrtRefHeader(worksheet);
		var iEntry = loadManager._currentRecordStream()._readUInt16();
		var fHideArrow = loadManager._currentRecordStream()._readUInt32();
		var ft = loadManager._currentRecordStream()._readUInt32();
		var cft = loadManager._currentRecordStream()._readUInt32();
		var cCriteria = loadManager._currentRecordStream()._readUInt32();
		var cDateGroupings = loadManager._currentRecordStream()._readUInt32();
		var temp16 = loadManager._currentRecordStream()._readUInt16();
		var fWorksheetAutoFilter = $.ig.ExcelUtils.prototype.testBit(temp16, 3);
		var unused2 = loadManager._currentRecordStream()._readUInt32();
		var idList = loadManager._currentRecordStream()._readUInt32();
		if (idList == 4294967295) {
			$.ig.ExcelUtils.prototype.debugFail("Worksheet filtering is not supported yet.");
			return;
		}
		var table = worksheet.tables()._getTableById(idList);
		if (table == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the table.");
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert(table._filterRegion().equals(region), "Something is wrong here.");
		if (table.columns().count() <= iEntry) {
			$.ig.ExcelUtils.prototype.debugFail("The iEntry value is out of range.");
			return;
		}
		var column = table.columns()._item(iEntry);
		var guidSview = loadManager._currentRecordStream()._readBytes(16);
		var filter = null;
		var value = $.ig.util.toNullable(Number, null);
		var maxValue = $.ig.util.toNullable(Number, null);
		switch (cft) {
			case $.ig.AUTOFILTER12Record.prototype.cFTNotCustom: break;
			case $.ig.AUTOFILTER12Record.prototype.cFTAboveAverage:
			case $.ig.AUTOFILTER12Record.prototype.cFTBelowAverage:
				{
					$.ig.ExcelUtils.prototype.debugAssert(cCriteria == 1, "There should be one comparison condition here.");
					var condition1 = null;
					if (cCriteria >= 1) {
						condition1 = loadManager._currentRecordStream()._readAF12Criteria(worksheet);
					}
					var expectedFilterOperator;
					if (cft == $.ig.AUTOFILTER12Record.prototype.cFTAboveAverage) {
						expectedFilterOperator = $.ig.ST_FilterOperator.prototype.greaterThan;
					} else {
						expectedFilterOperator = $.ig.ST_FilterOperator.prototype.lessThan;
					}
					if (condition1 != null && condition1._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble && condition1._grbitSign == expectedFilterOperator) {
						value = $.ig.util.toNullable(Number, condition1._vtValue);
					} else {
						$.ig.ExcelUtils.prototype.debugFail("Couldn't get the minValue");
					}
				}
				break;
			case $.ig.AUTOFILTER12Record.prototype.cFTTomorrow:
			case $.ig.AUTOFILTER12Record.prototype.cFTToday:
			case $.ig.AUTOFILTER12Record.prototype.cFTYesterday:
			case $.ig.AUTOFILTER12Record.prototype.cFTNextWeek:
			case $.ig.AUTOFILTER12Record.prototype.cFTThisWeek:
			case $.ig.AUTOFILTER12Record.prototype.cFTLastWeek:
			case $.ig.AUTOFILTER12Record.prototype.cFTNextMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFTThisMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFTLastMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFTNextQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFTThisQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFTLastQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFTNextYear:
			case $.ig.AUTOFILTER12Record.prototype.cFTThisYear:
			case $.ig.AUTOFILTER12Record.prototype.cFTLastYear:
			case $.ig.AUTOFILTER12Record.prototype.cFTYearToDate:
				{
					$.ig.ExcelUtils.prototype.debugAssert(cCriteria == 2, "There should be two comparison conditions here.");
					var condition11 = null;
					var condition2 = null;
					if (cCriteria >= 1) {
						condition11 = loadManager._currentRecordStream()._readAF12Criteria(worksheet);
						if (cCriteria >= 2) {
							condition2 = loadManager._currentRecordStream()._readAF12Criteria(worksheet);
						}
					}
					if (condition11 != null && condition11._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble && condition11._grbitSign == $.ig.ST_FilterOperator.prototype.greaterThanOrEqual) {
						value = $.ig.util.toNullable(Number, condition11._vtValue);
					} else {
						$.ig.ExcelUtils.prototype.debugFail("Couldn't get the minValue");
					}
					if (condition2 != null && condition2._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble && condition2._grbitSign == $.ig.ST_FilterOperator.prototype.lessThan) {
						maxValue = $.ig.util.toNullable(Number, condition2._vtValue);
					} else {
						$.ig.ExcelUtils.prototype.debugFail("Couldn't get the maxValue");
					}
				}
				break;
			case $.ig.AUTOFILTER12Record.prototype.cFT1stQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFT2ndQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFT3rdQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFT4thQuarter:
			case $.ig.AUTOFILTER12Record.prototype.cFT1stMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT2ndMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT3rdMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT4thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT5thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT6thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT7thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT8thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT9thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT10thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT11thMonth:
			case $.ig.AUTOFILTER12Record.prototype.cFT12thMonth:
				{
					$.ig.ExcelUtils.prototype.debugAssert(cCriteria == 2, "This is unexpected.");
					if (cCriteria >= 1) {
						var condition12 = loadManager._currentRecordStream()._readAF12Criteria(worksheet);
						$.ig.ExcelUtils.prototype.debugAssert(condition12._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble && condition12._grbitSign == $.ig.ST_FilterOperator.prototype.greaterThanOrEqual && condition12._vtValue == $.ig.AUTOFILTER12Record.prototype._datePeriodFilterCondition1Value, "This is unexpected.");
						if (cCriteria >= 2) {
							var condition21 = loadManager._currentRecordStream()._readAF12Criteria(worksheet);
							$.ig.ExcelUtils.prototype.debugAssert(condition21._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTDouble && condition21._grbitSign == $.ig.ST_FilterOperator.prototype.lessThan && condition21._vtValue == $.ig.AUTOFILTER12Record.prototype._datePeriodFilterCondition2Value, "This is unexpected.");
						}
					}
				}
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown cft value in the AutoFilter12 record.");
				break;
		}
		filter = $.ig.excel.DynamicValuesFilter.prototype._createDynamicValuesFilter(loadManager, column, cft, value, maxValue);
		if (filter == null) {
			switch (ft) {
				case 0:
					{
						$.ig.ExcelUtils.prototype.debugAssert(cCriteria != 0 || cDateGroupings != 0, "Either cCriteria or cDateGroupings must be non-zero.");
						var fixedValuesFilter = null;
						if (cCriteria != 0) {
							if (fixedValuesFilter == null) {
								fixedValuesFilter = new $.ig.excel.FixedValuesFilter(column);
							}
							for (var i = 0; i < cCriteria; i++) {
								var doper = loadManager._currentRecordStream()._readAF12Criteria(worksheet);
								if (doper._vt == $.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks) {
									fixedValuesFilter.includeBlanks(true);
								} else if (doper.resolvedValue() != null) {
									fixedValuesFilter.displayValues().add(doper.resolvedValue().toString());
								} else {
									$.ig.ExcelUtils.prototype.debugFail("This is unexpected.");
								}
							}
						}
						if (cDateGroupings != 0) {
							if (fixedValuesFilter == null) {
								fixedValuesFilter = new $.ig.excel.FixedValuesFilter(column);
							}
							for (var i1 = 0; i1 < cDateGroupings; i1++) {
								var fixedDateGroup = loadManager._currentRecordStream()._readAF12DateInfo(worksheet);
								if (fixedDateGroup != null) {
									fixedValuesFilter.dateGroups().add(fixedDateGroup);
								}
							}
						}
						filter = fixedValuesFilter;
					}
					break;
				case 1:
					{
						var format = loadManager._currentRecordStream()._readDXFN12NoCB();
						filter = $.ig.excel.FillFilter.prototype._createFillFilter(column, format);
					}
					break;
				case 2:
					{
						var format1 = loadManager._currentRecordStream()._readDXFN12NoCB();
						filter = $.ig.excel.FontColorFilter.prototype._createFontColorFilter(column, format1);
					}
					break;
				case 3:
					{
						var iconSet;
						var iconIndex;
						var $ret = loadManager._currentRecordStream()._readAF12CellIcon(iconSet, iconIndex);
						iconSet = $ret.p0;
						iconIndex = $ret.p1;
						if (iconSet.hasValue()) {
							filter = new $.ig.IconFilter(column, iconSet.value(), $.ig.util.toNullable($.ig.Number.prototype.$type, iconIndex));
						}
					}
					break;
				default:
					$.ig.ExcelUtils.prototype.debugFail("Unknown ft value in the AutoFilter12 record.");
					break;
			}
		}
		if (filter == null) {
			$.ig.ExcelUtils.prototype.debugFail("No filter was loaded.");
			return;
		}
		column.filter(filter);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var filterData = saveManager._contextStack().get$1($.ig.TableColumnFilterData.prototype.$type);
		if (filterData == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no TableColumnFilterData in the context stack.");
			return;
		}
		var column = filterData._column;
		var filterRegion = column.table()._filterRegion();
		var ft = 0;
		var colorFilter = $.ig.util.cast($.ig.IColorFilter.prototype.$type, column.filter());
		if (colorFilter != null) {
			if (colorFilter.isCellColorFilter()) {
				ft = 1;
			} else {
				ft = 2;
			}
		}
		var iconFilter = $.ig.util.cast($.ig.IconFilter.prototype.$type, column.filter());
		if (iconFilter != null) {
			ft = 3;
		}
		var cft = 0;
		var criteria = new $.ig.List$1($.ig.Biff8RecordStream_AFDOper.prototype.$type, 0);
		var dateGroupings;
		var fixedValuesFilter = $.ig.util.cast($.ig.excel.FixedValuesFilter.prototype.$type, column.filter());
		if (fixedValuesFilter != null) {
			if (filterData._allowedTextValues != null) {
				for (var i = 0; i < filterData._allowedTextValues.count(); i++) {
					criteria.add(new $.ig.Biff8RecordStream_AFDOper(1, filterData._allowedTextValues.item(i)));
				}
			}
			if (fixedValuesFilter.includeBlanks()) {
				var blanksDoper = new $.ig.Biff8RecordStream_AFDOper(0);
				blanksDoper._vt = $.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks;
				criteria.add(blanksDoper);
			}
			dateGroupings = fixedValuesFilter.dateGroups();
		} else {
			dateGroupings = new Array(0);
			var dynamicValuesFilter = $.ig.util.cast($.ig.excel.DynamicValuesFilter.prototype.$type, column.filter());
			if (dynamicValuesFilter != null) {
				cft = $.ig.util.intSToU(dynamicValuesFilter._type2003());
				var averageFilter = $.ig.util.cast($.ig.excel.AverageFilter.prototype.$type, column.filter());
				var datePeriodFilter = $.ig.util.cast($.ig.excel.DatePeriodFilter.prototype.$type, column.filter());
				var dateRangeFilter = $.ig.util.cast($.ig.excel.DateRangeFilter.prototype.$type, column.filter());
				if (averageFilter != null) {
					var filterOperator = averageFilter.type() == $.ig.excel.AverageFilterType.aboveAverage ? $.ig.ST_FilterOperator.prototype.greaterThan : $.ig.ST_FilterOperator.prototype.lessThan;
					criteria.add(new $.ig.Biff8RecordStream_AFDOper(2, averageFilter.average(), filterOperator));
				} else if (datePeriodFilter != null) {
					criteria.add(new $.ig.Biff8RecordStream_AFDOper(2, $.ig.AUTOFILTER12Record.prototype._datePeriodFilterCondition1Value, $.ig.ST_FilterOperator.prototype.greaterThanOrEqual));
					criteria.add(new $.ig.Biff8RecordStream_AFDOper(2, $.ig.AUTOFILTER12Record.prototype._datePeriodFilterCondition2Value, $.ig.ST_FilterOperator.prototype.lessThan));
				} else if (dateRangeFilter != null) {
					var startValue = $.ig.excel.ExcelCalcValue.prototype._dateTimeToExcelDate(saveManager._workbook(), dateRangeFilter.start());
					var endValue = $.ig.excel.ExcelCalcValue.prototype._dateTimeToExcelDate(saveManager._workbook(), dateRangeFilter.end());
					if (startValue.hasValue() && endValue.hasValue()) {
						criteria.add(new $.ig.Biff8RecordStream_AFDOper(2, startValue.value(), $.ig.ST_FilterOperator.prototype.greaterThanOrEqual));
						criteria.add(new $.ig.Biff8RecordStream_AFDOper(2, endValue.value(), $.ig.ST_FilterOperator.prototype.lessThan));
					} else {
						$.ig.ExcelUtils.prototype.debugFail("Something is wrong here.");
					}
				}
			}
		}
		var fWorksheetAutoFilter = column == null;
		var idList = 4294967295;
		if (fWorksheetAutoFilter == false) {
			idList = column.table()._id();
		}
		saveManager._currentRecordStream()._writeFrtRefHeader(filterRegion);
		saveManager._currentRecordStream()._write17(column.index());
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write18(ft);
		saveManager._currentRecordStream()._write18(cft);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(criteria.count()));
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(dateGroupings.count()));
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, fWorksheetAutoFilter, 3);
		temp16 = $ret.p0;
		saveManager._currentRecordStream()._write17(temp16);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write18(idList);
		saveManager._currentRecordStream()._write2(new Array(16));
		switch (ft) {
			case 0:
				{
					for (var i1 = 0; i1 < criteria.count(); i1++) {
						saveManager._currentRecordStream()._capCurrentBlock();
						saveManager._currentRecordStream()._writeAF12Criteria(filterRegion, criteria.__inner[i1]);
					}
					for (var i2 = 0; i2 < dateGroupings.count(); i2++) {
						saveManager._currentRecordStream()._capCurrentBlock();
						saveManager._currentRecordStream()._writeAF12DateInfo(filterRegion, dateGroupings.item(i2));
					}
				}
				break;
			case 1:
			case 2:
				{
					var format = saveManager._createDxf(colorFilter);
					saveManager._currentRecordStream()._writeDXFN12NoCB(format);
				}
				break;
			case 3:
				saveManager._currentRecordStream()._writeAF12CellIcon(iconFilter._iconSet(), iconFilter._iconIndex().getValueOrDefault());
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown ft value in the AutoFilter12 record.");
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.aUTOFILTER12;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record::Type()" />*/
	,
	$type: new $.ig.Type('AUTOFILTER12Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord" />*/

$.ig.util.defType('BACKUPRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var createBackupWhenSaving = loadManager._currentRecordStream()._readUInt16() == 1;
		$.ig.ExcelUtils.prototype.debugAssert(createBackupWhenSaving == false, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bACKUP;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord::Type()" />*/
	,
	$type: new $.ig.Type('BACKUPRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BACKUPRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord" />*/

$.ig.util.defType('BITMAPRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var unknown1 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(unknown1 == 9, null);
		var unknown2 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(unknown2 == 1, null);
		var recordSize = loadManager._currentRecordStream()._readUInt32();
		var unknown3 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(unknown3 == 12, null);
		var unknown4 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(unknown4 == 0, null);
		var width = loadManager._currentRecordStream()._readUInt16();
		var height = loadManager._currentRecordStream()._readUInt16();
		var lineWidth = $.ig.ExcelUtils.prototype.roundUpToMultiple(width * 3, 4);
		var numRgbValues = lineWidth * height;
		$.ig.ExcelUtils.prototype.debugAssert(recordSize == numRgbValues + 12, null);
		var numberOfPlanes = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(numberOfPlanes == 1, null);
		var colorDepth = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(colorDepth == 24, null);
		var rgbValues = loadManager._currentRecordStream()._readBytes(numRgbValues);
		worksheet._imageBackground($.ig.ExcelUtils.prototype.imageFromRGBPixelArray(rgbValues, width, height));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var image = worksheet._imageBackground();
		$.ig.ExcelUtils.prototype.debugAssert(image != null, "The ImageBackground should not be null here");
		if (image == null) {
			return;
		}
		var imageWidth;
		var imageHeight;
		var rgbValues = (function () { var $ret = $.ig.ExcelUtils.prototype.imageToRGBPixelArray(image, imageWidth, imageHeight); imageWidth = $ret.p1; imageHeight = $ret.p2; return $ret.ret; }());
		saveManager._currentRecordStream()._write17(9);
		saveManager._currentRecordStream()._write17(1);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU((rgbValues.length + 12)));
		saveManager._currentRecordStream()._write17(12);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(imageWidth);
		saveManager._currentRecordStream()._write17(imageHeight);
		saveManager._currentRecordStream()._write17(1);
		saveManager._currentRecordStream()._write17(24);
		saveManager._currentRecordStream()._write2(rgbValues);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bITMAP;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord::Type()" />*/
	,
	$type: new $.ig.Type('BITMAPRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BITMAPRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase" />*/

$.ig.util.defType('CellValueRecordBase', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var rowIndex = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var columnIndex = (function () { var $ret = loadManager._currentRecordStream()._readInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var row = loadManager._getRow(worksheet, rowIndex);
		var formatIndex = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var format;
		if (formatIndex < loadManager._formats().count()) {
			format = loadManager._formats().__inner[formatIndex];
		} else {
			format = loadManager._workbook()._cellFormats()._defaultElement();
		}
		{
			row._setCellFormatWhileLoading(columnIndex, format);
		}
		var cellValue;
		var lastCalculatedCellValue;
		var $ret = this.loadCellValue(loadManager, data, dataIndex, cellValue, lastCalculatedCellValue);
		data = $ret.p1;
		dataIndex = $ret.p2;
		cellValue = $ret.p3;
		lastCalculatedCellValue = $ret.p4;
		var formula = $.ig.util.cast($.ig.excel.Formula.prototype.$type, cellValue);
		if (formula != null) {
			if (formula._isReferenceFormula() == false) {
				formula._applyTo4(row, columnIndex);
				row._setCachedCalculatedValue(columnIndex, $.ig.CalcUtilities.prototype.createExcelCalcValue(lastCalculatedCellValue));
			} else {
				var expToken = $.ig.util.cast($.ig.ExpToken.prototype.$type, formula._postfixTokenList()[0]);
				if (expToken != null) {
					var expTokenColumnIndex = expToken.cellAddress().column();
					var expTokenRowIndex = expToken.cellAddress().row();
					var sourceCellAddress = new $.ig.WorksheetCellAddress(1, expTokenRowIndex, expTokenColumnIndex);
					var sharedFormula;
					if ((function () { var $ret = loadManager._sharedFormulasInCurrentWorksheet().tryGetValue(sourceCellAddress, sharedFormula); sharedFormula = $ret.p1; return $ret.ret; }())) {
						sharedFormula._applyTo4(row, columnIndex);
						row._setCachedCalculatedValue(columnIndex, $.ig.CalcUtilities.prototype.createExcelCalcValue(lastCalculatedCellValue));
					} else if (expTokenRowIndex == row.index() && expTokenColumnIndex == columnIndex) {
						loadManager._pendingSharedFormulaRoots().item(sourceCellAddress, $.ig.CalcUtilities.prototype.createExcelCalcValue(lastCalculatedCellValue));
					}
				}
			}
		} else {
			row._setCellValueRaw(columnIndex, cellValue, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var cellContext = saveManager._currentCellContext();
		var cellDataContext = saveManager._currentCellDataContext();
		var initialData = new $.ig.MemoryStream(1, 32);
		initialData.write($.ig.BitConverter.prototype.getBytes7(cellContext.row().index()), 0, 2);
		initialData.write($.ig.BitConverter.prototype.getBytes3(cellDataContext.columnIndex()), 0, 2);
		var formatIndex = saveManager._getCellFormatIndex(cellDataContext.cellFormatData());
		if (formatIndex < 0) {
			$.ig.ExcelUtils.prototype.debugFail("Unknown format index");
			formatIndex = 0;
		}
		initialData.write($.ig.BitConverter.prototype.getBytes7(formatIndex), 0, 2);
		this.saveCellValue(saveManager, initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	$type: new $.ig.Type('CellValueRecordBase', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellValueRecordBase" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord" />*/

$.ig.util.defType('BLANKRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		cellValue = lastCalculatedCellValue = null;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		$.ig.ExcelUtils.prototype.debugAssert($.ig.ExcelUtils.prototype.isNullResolved(saveManager._currentCellContext().value()), "A non-null value should not be serialized with a BLANK record.");
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bLANK;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord::Type()" />*/
	,
	$type: new $.ig.Type('BLANKRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BLANKRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord" />*/

$.ig.util.defType('BOFRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var version = loadManager._currentRecordStream()._readUInt16();
		var invalidVersionName = null;
		switch (version) {
			case $.ig.BOFRecord_BiffVersion.prototype.biff2_1:
			case $.ig.BOFRecord_BiffVersion.prototype.biff2_2:
			case $.ig.BOFRecord_BiffVersion.prototype.biff2_3:
				invalidVersionName = "BIFF2";
				break;
			case $.ig.BOFRecord_BiffVersion.prototype.biff3:
				invalidVersionName = "BIFF3";
				break;
			case $.ig.BOFRecord_BiffVersion.prototype.biff4:
				invalidVersionName = "BIFF4";
				break;
			case $.ig.BOFRecord_BiffVersion.prototype.biff5:
				invalidVersionName = "BIFF5/BIFF7";
				break;
			case $.ig.BOFRecord_BiffVersion.prototype.biff8: break;
			default: throw new $.ig.InvalidOperationException(1, $.ig.excel.locale.getString("LE_InvalidOperationException_UnknownBIFFFormat"));
		}
		if (invalidVersionName != null) {
			throw new $.ig.InvalidOperationException(1, $.ig.excel.locale.getString("LE_InvalidOperationException_UnsupportedBIFFFormat", [ invalidVersionName ]));
		}
		var substreamType = loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		switch (substreamType) {
			case $.ig.SubstreamType.prototype.workbookGlobals:
				{
					loadManager._contextStack().push(loadManager._workbook());
				}
				break;
			case $.ig.SubstreamType.prototype.worksheet:
				{
					var worksheet = loadManager._workbook().worksheets()._item(loadManager._nextWorksheetIndex());
					loadManager._contextStack().push(worksheet.displayOptions());
					loadManager._contextStack().push(worksheet.printOptions());
					loadManager._contextStack().push(worksheet);
				}
				break;
			default:
				{
					$.ig.ExcelUtils.prototype.debugFail("Unknown substream type");
					loadManager._currentRecordStream().position(loadManager._currentRecordStream().length());
					while (true) {
						{
							var stream = new $.ig.Biff8RecordStream(1, loadManager);
							try {
								stream._debugLogRecord();
								stream.position(stream.length());
								if (stream._recordType() == $.ig.BIFF8RecordType.prototype.eOF || loadManager._workbookStream().position() == loadManager._workbookStream().length()) {
									break;
								}
							}
							finally {
								if (stream != null) {
									stream.dispose();
								}
							}
						}
					}
					(function ($obj) { var $value = $obj._nextWorksheetIndex(); $obj._nextWorksheetIndex($value + 1); return $value; }(loadManager));
				}
				break;
		}
		if (loadManager._currentRecordStream().position() == loadManager._currentRecordStream().length()) {
			return;
		}
		loadManager._currentRecordStream()._readUInt32();
		loadManager._currentRecordStream()._readUInt32();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.BOFRecord_BiffVersion.prototype.biff8);
		var currentStream = saveManager._contextStack().current();
		var worksheet = $.ig.util.cast($.ig.excel.Worksheet.prototype.$type, currentStream);
		if (worksheet != null) {
			saveManager._currentRecordStream()._write17($.ig.SubstreamType.prototype.worksheet);
		} else {
			saveManager._currentRecordStream()._write17($.ig.SubstreamType.prototype.workbookGlobals);
		}
		saveManager._currentRecordStream()._write17(3515);
		saveManager._currentRecordStream()._write17(1996);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write18($.ig.BOFRecord_BiffVersion.prototype.biff8);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::CanBeEncrypted()" />*/
	canBeEncrypted: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::CanBeEncrypted()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bOF;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord::Type()" />*/
	,
	$type: new $.ig.Type('BOFRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOFRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord" />*/

$.ig.util.defType('BOOKBOOLRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var bookBook = loadManager._currentRecordStream()._readUInt16();
		var fNoSaveSup = (bookBook & $.ig.BOOKBOOLRecord.prototype._fNoSaveSupBit) == $.ig.BOOKBOOLRecord.prototype._fNoSaveSupBit;
		loadManager._workbook().saveExternalLinkedValues((fNoSaveSup == false));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var bookBool = 0;
		if (saveManager._workbook().saveExternalLinkedValues() == false) {
			bookBool |= $.ig.BOOKBOOLRecord.prototype._fNoSaveSupBit;
		}
		saveManager._currentRecordStream()._write17(bookBool);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bOOKBOOL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord::Type()" />*/
	,
	$type: new $.ig.Type('BOOKBOOLRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord" />*/

$.ig.util.defType('BOOKEXTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("Implement");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bOOKEXT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord::Type()" />*/
	,
	$type: new $.ig.Type('BOOKEXTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKEXTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord" />*/

$.ig.util.defType('BOOLERRRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		var value = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var isError = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()) == 1;
		if (isError) {
			cellValue = $.ig.excel.ErrorValue.prototype._fromValue(value);
		} else {
			cellValue = $.ig.Convert.prototype.toBoolean1(value);
		}
		lastCalculatedCellValue = cellValue;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		var value = saveManager._currentCellContext().value();
		var error = $.ig.util.cast($.ig.excel.ErrorValue.prototype.$type, value);
		if (error != null) {
			initialData.writeByte(error._value());
			initialData.writeByte(1);
		} else if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null) {
			initialData.writeByte($.ig.Convert.prototype.toByte(value));
			initialData.writeByte(0);
		} else {
			$.ig.ExcelUtils.prototype.debugFail("Incorrect cell value type");
		}
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bOOLERR;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord::Type()" />*/
	,
	$type: new $.ig.Type('BOOLERRRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOLERRRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord" />*/

$.ig.util.defType('BOTTOMMARGINRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		printOptions.bottomMargin(loadManager._currentRecordStream()._readDouble());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write10(printOptions.bottomMargin());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bOTTOMMARGIN;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord::Type()" />*/
	,
	$type: new $.ig.Type('BOTTOMMARGINRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOTTOMMARGINRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord" />*/

$.ig.util.defType('BOUNDSHEETRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt32();
		var visibility = loadManager._currentRecordStream().readByte();
		var type = loadManager._currentRecordStream().readByte();
		var formattedName = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.eightBit);
		{
			var sheetId;
			if ((function () { var $ret = loadManager._worksheetIdsByIndex().tryGetValue(loadManager._workbook().worksheets().count(), sheetId); sheetId = $ret.p1; return $ret.ret; }()) == false) {
				sheetId = loadManager._workbook()._getNewSheetId();
			}
			var worksheet = loadManager._workbook().worksheets()._add1(formattedName._unformattedString(), sheetId);
			worksheet._shouldSaveDefaultColumnWidths256th(false);
			worksheet._type(type);
			worksheet.displayOptions().visibility(visibility);
			worksheet._showExpansionIndicatorBelowGroup(true);
			loadManager._updateWorksheetReferenceInCurrentWorkbook(worksheet);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no worksheet in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write9(worksheet.displayOptions().visibility());
		saveManager._currentRecordStream()._write9($.ig.SheetType.prototype.worksheet);
		saveManager._currentRecordStream()._write15(worksheet.name(), $.ig.LengthType.prototype.eightBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.bOUNDSHEET;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord::Type()" />*/
	,
	$type: new $.ig.Type('BOUNDSHEETRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOUNDSHEETRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord" />*/

$.ig.util.defType('CALCCOUNTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().maxRecursionIterations(loadManager._currentRecordStream()._readUInt16());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(saveManager._workbook().maxRecursionIterations());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.cALCCOUNT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord::Type()" />*/
	,
	$type: new $.ig.Type('CALCCOUNTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCCOUNTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord" />*/

$.ig.util.defType('CALCMODERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var calcMode = loadManager._currentRecordStream()._readUInt16();
		loadManager._workbook().calculationMode(calcMode);
		if ($.ig.Enum.prototype.isDefined($.ig.excel.CalculationMode.prototype.$type, $.ig.excel.CalculationMode.prototype.getBox(loadManager._workbook().calculationMode())) == false) {
			$.ig.ExcelUtils.prototype.debugFail("Unknown calculation mode.");
			loadManager._workbook().calculationMode($.ig.excel.CalculationMode.automaticExceptForDataTables);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(saveManager._workbook().calculationMode());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.cALCMODE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord::Type()" />*/
	,
	$type: new $.ig.Type('CALCMODERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CALCMODERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord" />*/

$.ig.util.defType('CODEPAGERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var codePage = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.ExcelUtils.prototype.encodingGetCodePage($.ig.Encoding.prototype.unicode()) == codePage, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.ExcelUtils.prototype.encodingGetCodePage($.ig.Encoding.prototype.unicode()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.cODEPAGE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord::Type()" />*/
	,
	$type: new $.ig.Type('CODEPAGERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CODEPAGERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord" />*/

$.ig.util.defType('COLINFORecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var firstColumnInRange = loadManager._currentRecordStream()._readUInt16();
		var lastColumnInRange = loadManager._currentRecordStream()._readUInt16();
		var columnWidth = loadManager._currentRecordStream()._readUInt16();
		var formatIndex = loadManager._currentRecordStream()._readUInt16();
		if (formatIndex < 0) {
			$.ig.ExcelUtils.prototype.debugFail("Unknown format index");
			formatIndex = 0;
		}
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var hidden = (optionFlags & 1) == 1;
		var outlineLevel = (optionFlags & 1792) >> 8;
		var collapsed = (optionFlags & 4096) == 4096;
		var format = loadManager._formats().__inner[formatIndex];
		if (lastColumnInRange == 256) {
			worksheet._defaultColumnFormat(format._cloneInternal());
		}
		if (firstColumnInRange != 256) {
			lastColumnInRange = Math.min(255, lastColumnInRange);
			worksheet._onColumnBlockLoaded(firstColumnInRange, lastColumnInRange, columnWidth, hidden, outlineLevel, format, false);
		}
		loadManager._currentRecordStream().seek(2, $.ig.SeekOrigin.prototype.current);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var columnInfo = saveManager._contextStack().get$1($.ig.WorksheetColumnBlock.prototype.$type);
		if (columnInfo == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no column info in the context stack.");
			return;
		}
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(columnInfo.firstColumnIndex());
		var lastColumnIndex = columnInfo.lastColumnIndex();
		if (lastColumnIndex == 255) {
			lastColumnIndex = 256;
		}
		saveManager._currentRecordStream()._write17(lastColumnIndex);
		if (columnInfo.width() < 0) {
			saveManager._currentRecordStream()._write17(worksheet.defaultColumnWidth());
		} else {
			saveManager._currentRecordStream()._write17(columnInfo.width());
		}
		saveManager._currentRecordStream()._write17(saveManager._getCellFormatIndex(columnInfo.cellFormat()));
		var optionFlags = 2;
		if (columnInfo.hidden()) {
			optionFlags |= 1;
		}
		optionFlags |= (columnInfo.outlineLevel() << 8);
		if (saveManager._doesColumnBlockHaveCollapseIndicator(columnInfo)) {
			optionFlags |= 4096;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.cOLINFO;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord::Type()" />*/
	,
	$type: new $.ig.Type('COLINFORecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COLINFORecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord" />*/

$.ig.util.defType('COUNTRYRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(1);
		saveManager._currentRecordStream()._write17(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.cOUNTRY;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord::Type()" />*/
	,
	$type: new $.ig.Type('COUNTRYRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.COUNTRYRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord" />*/

$.ig.util.defType('CRNRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var externalWorksheet = $.ig.util.cast($.ig.WorksheetReferenceExternal.prototype.$type, loadManager._currentExternalWorksheetReference());
		if (externalWorksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no active external worksheet reference.");
			return;
		}
		var lastColumnIndex = loadManager._currentRecordStream().readByte();
		var firstColumnIndex = loadManager._currentRecordStream().readByte();
		var rowIndex = loadManager._currentRecordStream()._readUInt16();
		for (var columnIndex = firstColumnIndex; columnIndex <= lastColumnIndex; columnIndex++) {
			var grbit = loadManager._currentRecordStream().readByte();
			var value;
			switch (grbit) {
				case 1:
					value = loadManager._currentRecordStream()._readDouble();
					break;
				case 2:
					value = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit);
					break;
				case 4:
					value = loadManager._currentRecordStream()._readUInt16() != 0;
					loadManager._currentRecordStream().seek(6, $.ig.SeekOrigin.prototype.current);
					break;
				case 16:
					value = $.ig.excel.ErrorValue.prototype._fromValue(loadManager._currentRecordStream()._readUInt16());
					loadManager._currentRecordStream().seek(6, $.ig.SeekOrigin.prototype.current);
					break;
				default:
					$.ig.ExcelUtils.prototype.debugFail("Unknown grbit: " + grbit);
					value = null;
					return;
			}
			externalWorksheet.setCachedValue(rowIndex, columnIndex, value);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("Implement");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.cRN;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord::Type()" />*/
	,
	$type: new $.ig.Type('CRNRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CRNRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord" />*/

$.ig.util.defType('DBCELLRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._onDBCellRecordLoaded();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var dbcellInfo = saveManager._contextStack().get$1($.ig.DBCELLRecord_DBCELLInfo.prototype.$type);
		if (dbcellInfo == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no info for this db cell record.");
			return;
		}
		saveManager._currentRecordStream()._syncWorkbookStreamPosition();
		var startPosition = saveManager._currentRecordStream()._getStartOfRecord();
		var positionAfterFirstRow = dbcellInfo.firstRowPosition() + 20;
		var firstCellInRowOffsets = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		firstCellInRowOffsets.add((dbcellInfo.firstCellInRowPositions().__inner[0] - positionAfterFirstRow));
		for (var i = 0; i < dbcellInfo.firstCellInRowPositions().count() - 1; i++) {
			firstCellInRowOffsets.add((dbcellInfo.firstCellInRowPositions().__inner[i + 1] - dbcellInfo.firstCellInRowPositions().__inner[i]));
		}
		saveManager._currentRecordStream()._write18((startPosition - dbcellInfo.firstRowPosition()));
		var en = firstCellInRowOffsets.getEnumerator();
		while (en.moveNext()) {
			var firstCellInRowOffset = en.current();
			saveManager._currentRecordStream()._write17(firstCellInRowOffset);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dBCELL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord::Type()" />*/
	,
	$type: new $.ig.Type('DBCELLRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord_DBCELLInfo" />*/

$.ig.util.defType('DBCELLRecord_DBCELLInfo', 'Object', {
	_firstCellInRowPositions: null,
	_firstRowPosition: 0,
	init: function (firstRowPosition, firstCellInRowPositions) {
		$.ig.Object.prototype.init.call(this);
		this._firstCellInRowPositions = firstCellInRowPositions;
		this._firstRowPosition = firstRowPosition;
	},
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord_DBCELLInfo::FirstCellInRowPositions()" />*/
	firstCellInRowPositions: function () {
		return this._firstCellInRowPositions;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord_DBCELLInfo::FirstCellInRowPositions()" />*/
	,
	/*<BeginProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord_DBCELLInfo::FirstRowPosition()" />*/
	firstRowPosition: function () {
		return this._firstRowPosition;
	}
	/*<EndProperty Name="System.UInt32 Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord_DBCELLInfo::FirstRowPosition()" />*/
	,
	$type: new $.ig.Type('DBCELLRecord_DBCELLInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DBCELLRecord_DBCELLInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord" />*/

$.ig.util.defType('DEFAULTROWHEIGHTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var rowHeightAndDefaultFontHeightDontMatch = (optionFlags & 1) == 1;
		worksheet._defaultRowHidden((optionFlags & 2) == 2);
		worksheet._defaultRowHasThickTop((optionFlags & 4) == 4);
		worksheet._defaultRowHasThickBottom((optionFlags & 8) == 8);
		var defaultRowHeight = loadManager._currentRecordStream()._readUInt16();
		if (rowHeightAndDefaultFontHeightDontMatch) {
			worksheet.defaultRowHeight(defaultRowHeight);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var optionFlags = 0;
		if (worksheet._hasCustomDefaultRowHeight()) {
			optionFlags |= 1;
		}
		if (worksheet._defaultRowHidden()) {
			optionFlags |= 2;
		}
		if (worksheet._defaultRowHasThickTop()) {
			optionFlags |= 4;
		}
		if (worksheet._defaultRowHasThickBottom()) {
			optionFlags |= 8;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(worksheet.defaultRowHeight());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dEFAULTROWHEIGHT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord::Type()" />*/
	,
	$type: new $.ig.Type('DEFAULTROWHEIGHTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFAULTROWHEIGHTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord" />*/

$.ig.util.defType('DEFCOLWIDTHRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var temp = loadManager._currentRecordStream()._readUInt16();
		worksheet._setDefaultColumnWidth1(temp, $.ig.excel.WorksheetColumnWidthUnit.characterPaddingExcluded, true, false);
		worksheet.__hasExplicitlyLoadedDefaultColumnWidth = true;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var displayCharacters = $.ig.truncate($.ig.MathUtilities.prototype.truncate(worksheet.getDefaultColumnWidth($.ig.excel.WorksheetColumnWidthUnit.characterPaddingExcluded)));
		saveManager._currentRecordStream()._write17(displayCharacters);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dEFCOLWIDTH;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord::Type()" />*/
	,
	$type: new $.ig.Type('DEFCOLWIDTHRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DEFCOLWIDTHRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord" />*/

$.ig.util.defType('DELTARecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().maxChangeInIteration(loadManager._currentRecordStream()._readDouble());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write10(saveManager._workbook().maxChangeInIteration());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dELTA;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord::Type()" />*/
	,
	$type: new $.ig.Type('DELTARecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DELTARecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord" />*/

$.ig.util.defType('DIMENSIONSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt32();
		loadManager._currentRecordStream()._readUInt32();
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		var mustBeZero = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(mustBeZero == 0, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var cache = saveManager._getSerializationCache1(worksheet);
		saveManager._currentRecordStream()._write18(cache._firstRow);
		saveManager._currentRecordStream()._write18(cache._firstRowInUndefinedTail);
		saveManager._currentRecordStream()._write17(cache._firstColumn);
		saveManager._currentRecordStream()._write17(cache._firstColumnInUndefinedTail);
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dIMENSIONS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord::Type()" />*/
	,
	$type: new $.ig.Type('DIMENSIONSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DIMENSIONSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord" />*/

$.ig.util.defType('DSFRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var isDoubleStreamFile = loadManager._currentRecordStream()._readUInt16() == 1;
		$.ig.ExcelUtils.prototype.debugAssert(isDoubleStreamFile == false, "Make sure double stream files are handled correctly.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dSF;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord::Type()" />*/
	,
	$type: new $.ig.Type('DSFRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DSFRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord" />*/

$.ig.util.defType('DVALRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var wDviFlags = loadManager._currentRecordStream()._readUInt16();
		var xLeft = loadManager._currentRecordStream()._readInt32();
		var yLeft = loadManager._currentRecordStream()._readInt32();
		var idObj = loadManager._currentRecordStream()._readInt32();
		var idcMac = loadManager._currentRecordStream()._readInt32();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		if (worksheet._hasDataValidationRules() == false) {
			$.ig.ExcelUtils.prototype.debugFail("The worksheet had no data validation info.");
			return;
		}
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write12(0);
		saveManager._currentRecordStream()._write12(0);
		saveManager._currentRecordStream()._write12(-1);
		saveManager._currentRecordStream()._write12(worksheet.dataValidationRules().count());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dVAL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord::Type()" />*/
	,
	$type: new $.ig.Type('DVALRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVALRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord" />*/

$.ig.util.defType('DVRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var dwDvFlags = (function () { var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var valType = (dwDvFlags & 15);
		var errStyle = ((dwDvFlags & 112) >>> 4);
		var fStrLookup = (dwDvFlags & 128) != 0;
		var fAllowBlank = (dwDvFlags & 256) != 0;
		var fSuppressCombo = (dwDvFlags & 512) != 0;
		var mdImeMode = (dwDvFlags & 261120) >>> 10;
		var fShowInputMsg = (dwDvFlags & 262144) != 0;
		var fShowErrorMsg = (dwDvFlags & 524288) != 0;
		var typOperator = ((dwDvFlags & 15728640) >>> 20);
		var rule;
		switch (valType) {
			case $.ig.DataValidationType.prototype.anyValue:
				rule = new $.ig.excel.AnyValueDataValidationRule();
				break;
			case $.ig.DataValidationType.prototype.list:
				var listRule = new $.ig.excel.ListDataValidationRule();
				listRule.showDropdown((fSuppressCombo == false));
				rule = listRule;
				break;
			case $.ig.DataValidationType.prototype.formula:
				rule = new $.ig.excel.CustomDataValidationRule();
				break;
			case $.ig.DataValidationType.prototype.date:
			case $.ig.DataValidationType.prototype.decimal:
			case $.ig.DataValidationType.prototype.textLength:
			case $.ig.DataValidationType.prototype.time:
			case $.ig.DataValidationType.prototype.wholeNumber:
				switch (typOperator) {
					case $.ig.DataValidationOperatorType.prototype.between:
					case $.ig.DataValidationOperatorType.prototype.notBetween:
						rule = new $.ig.excel.TwoConstraintDataValidationRule(typOperator, valType);
						break;
					case $.ig.DataValidationOperatorType.prototype.equal:
					case $.ig.DataValidationOperatorType.prototype.notEqual:
					case $.ig.DataValidationOperatorType.prototype.greaterThan:
					case $.ig.DataValidationOperatorType.prototype.lessThan:
					case $.ig.DataValidationOperatorType.prototype.greaterThanOrEqual:
					case $.ig.DataValidationOperatorType.prototype.lessThanOrEqual:
						rule = new $.ig.excel.OneConstraintDataValidationRule(typOperator, valType);
						break;
					default:
						$.ig.ExcelUtils.prototype.debugFail("Unknown DataValidationOperatorType: " + $.ig.DataValidationOperatorType.prototype.getBox(typOperator));
						return;
				}
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown DataValidationType: " + $.ig.DataValidationType.prototype.getBox(valType));
				return;
		}
		rule._allowNullInternal(fAllowBlank);
		rule.errorStyle(errStyle);
		rule.showInputMessage(fShowInputMsg);
		rule.showErrorMessageForInvalidValue(fShowErrorMsg);
		var promptBoxTitle = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
		var $ret = $.ig.DVRecord.prototype.decodeDVString(promptBoxTitle);
		promptBoxTitle = $ret.p0;
		rule.inputMessageTitle(promptBoxTitle);
		var errorTitle = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
		var $ret1 = $.ig.DVRecord.prototype.decodeDVString(errorTitle);
		errorTitle = $ret1.p0;
		rule.errorMessageTitle(errorTitle);
		var promptBoxMessage = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
		var $ret2 = $.ig.DVRecord.prototype.decodeDVString(promptBoxMessage);
		promptBoxMessage = $ret2.p0;
		rule.inputMessageDescription(promptBoxMessage);
		var errorMessage = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
		var $ret3 = $.ig.DVRecord.prototype.decodeDVString(errorMessage);
		errorMessage = $ret3.p0;
		rule.errorMessageDescription(errorMessage);
		var formulaForFirstConditionTokenArraySize = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		dataIndex += 2;
		var formulaForFirstCondition = (function () { var $ret = loadManager._loadFormula1(rule._formulaType(), formulaForFirstConditionTokenArraySize, data, dataIndex); data = $ret.p2; dataIndex = $ret.p3; return $ret.ret; }());
		rule._setFormula1(formulaForFirstCondition, null);
		if (fStrLookup && formulaForFirstCondition != null && formulaForFirstCondition._postfixTokenList().length == 1) {
			var token = $.ig.util.cast($.ig.StrToken.prototype.$type, formulaForFirstCondition._postfixTokenList()[0]);
			if (token != null) {
				formulaForFirstCondition._postfixTokenList()[0] = new $.ig.StrToken(1, $.ig.util.replace(token.value(), '\0', ','));
			}
		}
		var formulaForSecondConditionTokenArraySize = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		dataIndex += 2;
		var formulaForSecondCondition = (function () { var $ret = loadManager._loadFormula1(rule._formulaType(), formulaForSecondConditionTokenArraySize, data, dataIndex); data = $ret.p2; dataIndex = $ret.p3; return $ret.ret; }());
		rule._setFormula2(formulaForSecondCondition, null);
		var ranges = (function () { var $ret = loadManager._currentRecordStream()._readFormulaCellAddressRangeListFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var references = new $.ig.excel.WorksheetReferenceCollection(worksheet);
		var en = ranges.getEnumerator();
		while (en.moveNext()) {
			var range = en.current();
			var region = range.getTargetRegion1(worksheet, -1, -1, false);
			if (region != null) {
				references._add(region);
			} else {
				$.ig.ExcelUtils.prototype.debugFail("This is unexpected.");
			}
		}
		worksheet.dataValidationRules()._addInternal(rule, references);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var rule = saveManager._contextStack().get$1($.ig.excel.DataValidationRule.prototype.$type);
		var ranges = saveManager._contextStack().get$1($.ig.List$1.prototype.$type.specialize($.ig.CellAddressRange.prototype.$type));
		if (rule == null || ranges == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no data validation rule in the context stack.");
			return;
		}
		var listRule = $.ig.util.cast($.ig.excel.ListDataValidationRule.prototype.$type, rule);
		var formula1 = rule._getFormula1(null);
		var dwDvFlags = 0;
		dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, rule._validationType());
		dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, $.ig.util.u32LS(rule.errorStyle(), 4));
		if (listRule != null && formula1 != null && formula1._postfixTokenList().length == 1 && $.ig.util.cast($.ig.StrToken.prototype.$type, formula1._postfixTokenList()[0]) !== null) {
			formula1 = formula1._clone();
			var strToken = formula1._postfixTokenList()[0];
			formula1._postfixTokenList()[0] = new $.ig.StrToken(1, $.ig.util.replace(strToken.value(), ",", "\0"));
			dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, 128);
		}
		if (rule._allowNullInternal()) {
			dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, 256);
		}
		if (listRule != null && listRule.showDropdown() == false) {
			dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, 512);
		}
		if (rule.showInputMessage()) {
			dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, 262144);
		}
		if (rule.showErrorMessageForInvalidValue()) {
			dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, 524288);
		}
		dwDvFlags = $.ig.util.u32BitwiseOr(dwDvFlags, $.ig.util.u32LS(rule._operatorType(), 20));
		saveManager._currentRecordStream()._write18(dwDvFlags);
		var promptBoxTitle = rule.inputMessageTitle();
		var $ret = $.ig.DVRecord.prototype.encodeDVString(promptBoxTitle);
		promptBoxTitle = $ret.p0;
		saveManager._currentRecordStream()._write15(promptBoxTitle, $.ig.LengthType.prototype.sixteenBit);
		var errorTitle = rule.errorMessageTitle();
		var $ret1 = $.ig.DVRecord.prototype.encodeDVString(errorTitle);
		errorTitle = $ret1.p0;
		saveManager._currentRecordStream()._write15(errorTitle, $.ig.LengthType.prototype.sixteenBit);
		var promptBoxMessage = rule.inputMessageDescription();
		promptBoxMessage = $.ig.ExcelUtils.prototype.removeCarriageReturns(promptBoxMessage);
		var $ret2 = $.ig.DVRecord.prototype.encodeDVString(promptBoxMessage);
		promptBoxMessage = $ret2.p0;
		saveManager._currentRecordStream()._write15(promptBoxMessage, $.ig.LengthType.prototype.sixteenBit);
		var errorMessage = rule.errorMessageDescription();
		errorMessage = $.ig.ExcelUtils.prototype.removeCarriageReturns(errorMessage);
		var $ret3 = $.ig.DVRecord.prototype.encodeDVString(errorMessage);
		errorMessage = $ret3.p0;
		saveManager._currentRecordStream()._write15(errorMessage, $.ig.LengthType.prototype.sixteenBit);
		var formula1LengthPos = saveManager._currentRecordStream().position();
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(0);
		if (formula1 != null) {
			var formula1Length = saveManager._saveFormula(formula1, false, false, false);
			var currentPos = saveManager._currentRecordStream().position();
			saveManager._currentRecordStream().position(formula1LengthPos);
			saveManager._currentRecordStream()._write12(formula1Length);
			saveManager._currentRecordStream().position(currentPos);
		}
		var formula2LengthPos = saveManager._currentRecordStream().position();
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(0);
		var formula2 = rule._getFormula2(null);
		if (formula2 != null) {
			var formula2Length = saveManager._saveFormula(formula2, false, false, false);
			var currentPos1 = saveManager._currentRecordStream().position();
			saveManager._currentRecordStream().position(formula2LengthPos);
			saveManager._currentRecordStream()._write12(formula2Length);
			saveManager._currentRecordStream().position(currentPos1);
		}
		var rangesWritten = saveManager._currentRecordStream()._write1(ranges, false);
		ranges.removeRange(0, rangesWritten);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dV;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::Type()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::DecodeDVString(System.String)" />*/
	decodeDVString: function (promptBoxTitle) {
		if (promptBoxTitle.length == 1 && promptBoxTitle.charAt(0) == String.fromCharCode(0)) {
			promptBoxTitle = String.empty();
		}
		return {
			p0: promptBoxTitle
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::DecodeDVString(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::EncodeDVString(System.String)" />*/
	encodeDVString: function (promptBoxTitle) {
		if (String.isNullOrEmpty(promptBoxTitle)) {
			promptBoxTitle = "\0";
		}
		return {
			p0: promptBoxTitle
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord::EncodeDVString(System.String)" />*/
	,
	$type: new $.ig.Type('DVRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DVRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord" />*/

$.ig.util.defType('DXFRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var info = new $.ig.DXFRecordInfo();
		var temp16 = loadManager._currentRecordStream()._readUInt16();
		info._fUIFill = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		$.ig.ExcelUtils.prototype.debugAssert(info._fUIFill, "Excel seems to have a problem opening files when fUIFill is False. If Excel opens this file correctly, find out when we should use that value.");
		var fNewBorder = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		var reserved = $.ig.ExcelUtils.prototype.getBits2(temp16, 3, 15);
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved value is incorrect.");
		info._props = loadManager._currentRecordStream()._readXFProps();
		loadManager._deferredDXFRecords().add(info);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecordInfo)" />*/
	loadHelper: function (loadManager, info) {
		var dxf = loadManager._workbook()._createNewWorksheetCellFormatInternal($.ig.WorksheetCellFormatType.prototype.differentialFormat);
		$.ig.Biff8RecordStream.prototype._applyXFProps(loadManager._workbook(), dxf, info._fUIFill, info._props);
		loadManager._dxfs().add(dxf);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecordInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var format = saveManager._contextStack().get$1($.ig.WorksheetCellFormatData.prototype.$type);
		if (format == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetCellFormatData in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		var fUIFill = true;
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, fUIFill, 0);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, true, 1);
		temp16 = $ret1.p0;
		saveManager._currentRecordStream()._write17(temp16);
		saveManager._currentRecordStream()._writeXFProps(format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.dXF;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord::Type()" />*/
	,
	$type: new $.ig.Type('DXFRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecordInfo" />*/

$.ig.util.defType('DXFRecordInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_fUIFill: false,
	_props: null,
	$type: new $.ig.Type('DXFRecordInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.DXFRecordInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord" />*/

$.ig.util.defType('EOFRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::IsAsyncLoadingSupported()" />*/
	isAsyncLoadingSupported: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::IsAsyncLoadingSupported()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugFail("Use LoadAsync for te SSTRecord as it could be long running.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::LoadAsync(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadAsync: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.excel.Workbook.prototype.$type, loadManager._contextStack().current()) !== null || $.ig.util.cast($.ig.excel.Worksheet.prototype.$type, loadManager._contextStack().current()) !== null, null);
		var currentContext = loadManager._contextStack().pop();
		return $.ig.Async.prototype.$if($.ig.util.cast($.ig.excel.Workbook.prototype.$type, currentContext) !== null, function () {
			return $.ig.WorkItemExtensions.prototype.then(loadManager._verifyFormatsLoaded(), function () {
				loadManager._onAfterLoadGlobalSettings();
			}, 0);
		}, function () {
			var worksheet = $.ig.util.cast($.ig.excel.Worksheet.prototype.$type, currentContext);
			$.ig.ExcelUtils.prototype.debugAssert(worksheet != null, null);
			if (worksheet != null) {
				worksheet.shapes()._removeInvalidShapes();
			}
			loadManager._contextStack().pop();
			loadManager._contextStack().pop();
			(function ($obj) { var $value = $obj._nextWorksheetIndex(); $obj._nextWorksheetIndex($value + 1); return $value; }(loadManager));
			loadManager._sharedFormulasInCurrentWorksheet().clear();
			loadManager._pendingSharedFormulaRoots().clear();
			return null;
		});
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::LoadAsync(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.eOF;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord::Type()" />*/
	,
	$type: new $.ig.Type('EOFRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EOFRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord" />*/

$.ig.util.defType('EXCEL9FILERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.eXCEL9FILE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord::Type()" />*/
	,
	$type: new $.ig.Type('EXCEL9FILERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXCEL9FILERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord" />*/

$.ig.util.defType('EXTERNNAMERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var data = new Array(0);
		var dataIndex = 0;
		var optionFlags = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var fBuiltIn = $.ig.ExcelUtils.prototype.testBit(optionFlags, 0);
		var fWantAdvise = $.ig.ExcelUtils.prototype.testBit(optionFlags, 1);
		var fWantPict = $.ig.ExcelUtils.prototype.testBit(optionFlags, 2);
		var fOle = $.ig.ExcelUtils.prototype.testBit(optionFlags, 3);
		var fOleLink = $.ig.ExcelUtils.prototype.testBit(optionFlags, 4);
		if (fOleLink) {
			var lStgName = (function () { var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
			var linkName = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.eightBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
			loadManager._currentExternalWorkbookReference().getNamedReference(linkName, loadManager._currentExternalWorkbookReference(), true);
			var oleLinkReference = $.ig.util.cast($.ig.OleLinkWorkbookReference.prototype.$type, loadManager._currentExternalWorkbookReference());
			if (oleLinkReference != null) {
				oleLinkReference.items().add(new $.ig.OleItem(linkName, false, fWantAdvise, fWantPict));
			} else {
				$.ig.ExcelUtils.prototype.debugFail("We are expecting an OleLinkWorkbookReference to be loading here.");
			}
		} else {
			var indexToSheetThatContainsName = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
			var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex);
			data = $ret.p0;
			dataIndex = $ret.p1;
			var workbookReferences = loadManager._workbookReferences();
			var workbook = workbookReferences.__inner[workbookReferences.count() - 1];
			$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.CurrentWorkbookReference.prototype.$type, workbook) !== null) == false, null);
			var externalName = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.eightBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
			var formula = (function () { var $ret = loadManager._loadFormula($.ig.FormulaType.prototype.externalNamedReferenceFormula, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
			var scope = workbook;
			if (indexToSheetThatContainsName > 0) {
				scope = workbook.getWorksheetReference1(indexToSheetThatContainsName - 1);
			}
			if (fBuiltIn) {
				externalName = $.ig.excel.NamedReferenceBase.prototype._nameFromBuiltInName(externalName.charAt(0).charCodeAt(0));
			}
			var namedReference = workbook.getNamedReference(externalName, scope, true);
			namedReference._setFormulaInternal(formula, false);
			$.ig.ExcelUtils.prototype.debugAssert(fBuiltIn == namedReference._isBuiltIn(), null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var namedReference = saveManager._contextStack().get$1($.ig.excel.NamedReferenceBase.prototype.$type);
		if (namedReference == null || namedReference._formulaInternal() == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no named reference in the context stack.");
			return;
		}
		var item = null;
		var oleLinkNamedReference = $.ig.util.cast($.ig.OleLinkNamedReference.prototype.$type, namedReference);
		if (oleLinkNamedReference != null) {
			var oleLinkWorkbookReference = $.ig.util.cast($.ig.OleLinkWorkbookReference.prototype.$type, oleLinkNamedReference._workbookReference());
			if (oleLinkWorkbookReference != null) {
				item = $.ig.Enumerable.prototype.firstOrDefault$11($.ig.OleItem.prototype.$type, oleLinkWorkbookReference.items(), function (i) { return $.ig.StringUtilities.prototype.stringComparerInvariantCultureIgnoreCase().equalsC(i._name, oleLinkNamedReference.name()); });
				if (item == null) {
					item = new $.ig.OleItem(oleLinkNamedReference.name(), false, true, false);
					oleLinkWorkbookReference.items().add(item);
				}
			}
		}
		var name = namedReference.name();
		if (namedReference._isBuiltIn()) {
			name = (String.fromCharCode(namedReference._builtInName())).toString();
		}
		var optionFlags = 0;
		if (namedReference._isBuiltIn()) {
			var $ret = $.ig.ExcelUtils.prototype.setBit2(optionFlags, true, 0);
			optionFlags = $ret.p0;
		}
		if (item != null && item._advise) {
			var $ret1 = $.ig.ExcelUtils.prototype.setBit2(optionFlags, true, 1);
			optionFlags = $ret1.p0;
		}
		if (item != null && item._preferPic) {
			var $ret2 = $.ig.ExcelUtils.prototype.setBit2(optionFlags, true, 2);
			optionFlags = $ret2.p0;
		}
		if (namedReference._type() == $.ig.NameType.prototype.oleObject) {
			var $ret3 = $.ig.ExcelUtils.prototype.setBit2(optionFlags, true, 4);
			optionFlags = $ret3.p0;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		if (namedReference._type() == $.ig.NameType.prototype.oleObject) {
			saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
			saveManager._currentRecordStream()._write15(name, $.ig.LengthType.prototype.eightBit);
		} else {
			if ($.ig.util.cast($.ig.WorkbookReferenceBase.prototype.$type, namedReference.scope()) !== null) {
				saveManager._currentRecordStream()._write17(0);
			} else {
				$.ig.ExcelUtils.prototype.debugAssert((namedReference.scope()).isMultiSheet() == false, "The scope cannot be a worksheet range.");
				saveManager._currentRecordStream()._write17(((namedReference.scope()).firstWorksheetIndex() + 1));
			}
			saveManager._currentRecordStream()._write17(0);
			saveManager._currentRecordStream()._write15(name, $.ig.LengthType.prototype.eightBit);
			saveManager._saveFormula(namedReference._formulaInternal(), true, true, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.eXTERNNAME;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord::Type()" />*/
	,
	$type: new $.ig.Type('EXTERNNAMERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNNAMERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord" />*/

$.ig.util.defType('EXTERNSHEETRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var numberOfREFStructures = loadManager._currentRecordStream()._readUInt16();
		var workbookReferences = loadManager._workbookReferences();
		var worksheetReferences = loadManager._worksheetReferences();
		for (var i = 0; i < numberOfREFStructures; i++) {
			var supbookRecordIndex = loadManager._currentRecordStream()._readUInt16();
			var firstSheetInReference = loadManager._currentRecordStream()._readInt16();
			var lastSheetInReference = loadManager._currentRecordStream()._readInt16();
			var workbook = workbookReferences.__inner[supbookRecordIndex];
			var reference;
			$.ig.ExcelUtils.prototype.debugAssert(firstSheetInReference != $.ig.ExcelUtils.prototype.eXTERNSHEETRecord_WorkbookLevelReferenceIndex || lastSheetInReference == firstSheetInReference, "This is unexpected.");
			var firstReference = workbook.getWorksheetReference1(firstSheetInReference);
			if (lastSheetInReference == firstSheetInReference) {
				reference = firstReference;
			} else {
				var lastReference = workbook.getWorksheetReference1(lastSheetInReference);
				reference = workbook.getMultiSheetReference(firstReference, lastReference);
			}
			worksheetReferences.add(reference);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheetReferences = saveManager._worksheetReferences();
		var workbookReferences = saveManager._workbookReferences();
		saveManager._currentRecordStream()._write17(worksheetReferences.count());
		var en = worksheetReferences.getEnumerator();
		while (en.moveNext()) {
			var reference = en.current();
			var index = workbookReferences.indexOf(reference.workbookReference());
			$.ig.ExcelUtils.prototype.debugAssert(index >= 0, "This is unexpected.");
			saveManager._currentRecordStream()._write17(index);
			saveManager._currentRecordStream()._write11(reference.firstWorksheetIndex());
			saveManager._currentRecordStream()._write11(reference.lastWorksheetIndex());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.eXTERNSHEET;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord::Type()" />*/
	,
	$type: new $.ig.Type('EXTERNSHEETRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTERNSHEETRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord" />*/

$.ig.util.defType('EXTSSTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		if ($.ig.util.nullableNotEquals(loadManager._deferredSstRecordPosition(), null)) {
			loadManager._deferredExtSstRecordPosition($.ig.util.toNullable($.ig.Number.prototype.$type, loadManager._currentRecordStream()._getStartOfRecord()));
			return;
		}
		var numberOfStringsInPortion = loadManager._currentRecordStream()._readUInt16();
		if (numberOfStringsInPortion == 0) {
			$.ig.ExcelUtils.prototype.debugFail("I'm not really sure why this is happening, but I still don't know what it means, so just bail because it doesn't seem to cause any problems.");
			return;
		}
		var numberOfStrings = loadManager._sharedStringTable().count();
		if (numberOfStrings > 0) {
			var numberOfPortions = ($.ig.intDivide((numberOfStrings - 1), numberOfStringsInPortion)) + 1;
			for (var i = 0; i < numberOfPortions; i++) {
				if (loadManager._currentRecordStream().position() == loadManager._currentRecordStream().length()) {
					break;
				}
				loadManager._currentRecordStream()._readUInt32();
				loadManager._currentRecordStream()._readUInt16();
				loadManager._currentRecordStream()._readUInt16();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.EXTSSTRecord.prototype._bucketSize);
		if (saveManager._totalSharedStringCount() > 0) {
			for (var i = 0; i < saveManager._extSstData().count(); i++) {
				var item = saveManager._extSstData().__inner[i];
				saveManager._currentRecordStream()._write18(item._absolutePosition);
				saveManager._currentRecordStream()._write17(item._offsetInRecordBlock);
				saveManager._currentRecordStream()._write17(0);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.eXTSST;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord::Type()" />*/
	,
	$type: new $.ig.Type('EXTSSTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record" />*/

$.ig.util.defType('FEAT11Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var region = loadManager._currentRecordStream()._readFrtHeaderU(worksheet);
		var isf = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(isf == $.ig.SharedFeatureType.prototype.list, "The isf value is incorrect.");
		var reserved1 = loadManager._currentRecordStream().readByte();
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 0, "The reserved1 value is incorrect.");
		var reserved2 = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 0, "The reserved2 value is incorrect.");
		var cref2 = loadManager._currentRecordStream()._readUInt16();
		var cbFeatData = loadManager._currentRecordStream()._readUInt32();
		var rgbFeat = cbFeatData;
		if (rgbFeat == 0) {
			rgbFeat = (loadManager._currentRecordStream().length() - (8 * cref2) - 27);
		}
		var reserved3 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved3 == 0, "The reserved3 value is incorrect.");
		var refs2 = new Array(cref2);
		for (var i = 0; i < cref2; i++) {
			refs2[i] = loadManager._currentRecordStream()._readRef8U(worksheet);
		}
		$.ig.ExcelUtils.prototype.debugAssert(refs2.length == 1 && refs2[0] == region, "This is unexpected.");
		var tableRegion = region;
		if (refs2.length == 1) {
			tableRegion = refs2[0];
		}
		var table = loadManager._currentRecordStream()._readTableFeatureType(worksheet, tableRegion);
		if (table != null) {
			worksheet.tables()._internalAdd(table);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var table = saveManager._contextStack().get$1($.ig.excel.WorksheetTable.prototype.$type);
		var columnsFilterData = saveManager._contextStack().get$1($.ig.SortedList$2.prototype.$type.specialize($.ig.Number.prototype.$type, $.ig.TableColumnFilterData.prototype.$type));
		if (table == null || columnsFilterData == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetTable in the context stack.");
			return;
		}
		var tableRegion = table.wholeTableRegion();
		saveManager._currentRecordStream()._writeFrtHeaderU(tableRegion);
		saveManager._currentRecordStream()._write17($.ig.SharedFeatureType.prototype.list);
		saveManager._currentRecordStream().writeByte(0);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write17(1);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._writeRef8U(tableRegion);
		saveManager._currentRecordStream()._writeTableFeatureType(table, columnsFilterData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fEAT11;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record::Type()" />*/
	,
	$type: new $.ig.Type('FEAT11Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT11Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT12Record" />*/

$.ig.util.defType('FEAT12Record', 'FEAT11Record', {
	init: function () {
		$.ig.FEAT11Record.prototype.init.call(this);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT12Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fEAT12;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT12Record::Type()" />*/
	,
	$type: new $.ig.Type('FEAT12Record', $.ig.FEAT11Record.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEAT12Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record" />*/

$.ig.util.defType('FEATHEADR11Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var isf = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(isf == $.ig.SharedFeatureType.prototype.list, "The isf value is incorrect.");
		var reserved1 = loadManager._currentRecordStream().readByte();
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 1, "The reserved1 value is incorrect.");
		var reserved2 = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 4294967295, "The reserved2 value is incorrect.");
		var reserved3 = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved3 == 4294967295, "The reserved3 value is incorrect.");
		var idListNext = loadManager._currentRecordStream()._readUInt32();
		loadManager._workbook()._nextTableId(idListNext);
		var reserved4 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved4 == 0, "The reserved4 value is incorrect.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write17($.ig.SharedFeatureType.prototype.list);
		saveManager._currentRecordStream().writeByte(1);
		saveManager._currentRecordStream()._write18(4294967295);
		saveManager._currentRecordStream()._write18(4294967295);
		saveManager._currentRecordStream()._write18(saveManager._workbook()._nextTableId());
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fEATHEADR11;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record::Type()" />*/
	,
	$type: new $.ig.Type('FEATHEADR11Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADR11Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord" />*/

$.ig.util.defType('FEATHEADRRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var isf = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(isf == $.ig.SharedFeatureType.prototype.protection || isf == $.ig.SharedFeatureType.prototype.fec2 || isf == $.ig.SharedFeatureType.prototype.factoid, "The isf value is incorrect.");
		if (isf == $.ig.SharedFeatureType.prototype.protection) {
			var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
			var stream = loadManager._currentRecordStream();
			var reserved = stream.readByte();
			var cbHdrData = stream._readInt32();
			$.ig.ExcelUtils.prototype.debugAssert(cbHdrData == -1 || stream.length() == stream.position(), null);
			if (cbHdrData == -1) {
				var headerBytes = stream._readBytes((stream.length() - stream.position()));
				$.ig.ExcelUtils.prototype.debugAssert(headerBytes.length == 4, "Expected 4 bytes for the EnhancedProtection");
				var protection = worksheet.protection();
				protection.allowEditObjects((headerBytes[0] & 1) != 0);
				protection.allowEditScenarios((headerBytes[0] & 2) != 0);
				protection.allowFormattingCells((headerBytes[0] & 4) != 0);
				protection.allowFormattingColumns((headerBytes[0] & 8) != 0);
				protection.allowFormattingRows((headerBytes[0] & 16) != 0);
				protection.allowInsertingColumns((headerBytes[0] & 32) != 0);
				protection.allowInsertingRows((headerBytes[0] & 64) != 0);
				protection.allowInsertingHyperlinks((headerBytes[0] & 128) != 0);
				protection.allowDeletingColumns((headerBytes[1] & 1) != 0);
				protection.allowDeletingRows((headerBytes[1] & 2) != 0);
				var selectLockedCells = (headerBytes[1] & 4) != 0;
				protection.allowSorting((headerBytes[1] & 8) != 0);
				protection.allowFiltering((headerBytes[1] & 16) != 0);
				protection.allowUsingPivotTables((headerBytes[1] & 32) != 0);
				var selectUnlockedCells = (headerBytes[1] & 64) != 0;
				protection._initializeSelectionMode(selectLockedCells, selectUnlockedCells);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("This is only setup to save the protection information for the worksheet");
			return;
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write17($.ig.SharedFeatureType.prototype.protection);
		saveManager._currentRecordStream().writeByte(1);
		saveManager._currentRecordStream()._write18(4294967295);
		var protection = worksheet.protection();
		var byte0 = ((protection.allowEditObjects() ? 1 : 0) | (protection.allowEditScenarios() ? 2 : 0) | (protection.allowFormattingCells() ? 4 : 0) | (protection.allowFormattingColumns() ? 8 : 0) | (protection.allowFormattingRows() ? 16 : 0) | (protection.allowInsertingColumns() ? 32 : 0) | (protection.allowInsertingRows() ? 64 : 0) | (protection.allowInsertingHyperlinks() ? 128 : 0));
		var byte1 = ((protection.allowDeletingColumns() ? 1 : 0) | (protection.allowDeletingRows() ? 2 : 0) | (protection._selectLockedCells() ? 4 : 0) | (protection.allowSorting() ? 8 : 0) | (protection.allowFiltering() ? 16 : 0) | (protection.allowUsingPivotTables() ? 32 : 0) | (protection._selectUnlockedCells() ? 64 : 0));
		saveManager._currentRecordStream().writeByte(byte0);
		saveManager._currentRecordStream().writeByte(byte1);
		saveManager._currentRecordStream().writeByte(0);
		saveManager._currentRecordStream().writeByte(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fEATHEADR;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord::Type()" />*/
	,
	$type: new $.ig.Type('FEATHEADRRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATHEADRRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord" />*/

$.ig.util.defType('FEATRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		loadManager._currentRecordStream()._readFrtHeader();
		var isf = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(isf == $.ig.SharedFeatureType.prototype.protection, "The isf value is currently unsupported.");
		if (isf != $.ig.SharedFeatureType.prototype.protection) {
			return;
		}
		var reserved1 = loadManager._currentRecordStream().readByte();
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == 0, "The reserved1 value is incorrect.");
		var reserved2 = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 0, "The reserved2 value is incorrect.");
		var cref = loadManager._currentRecordStream()._readUInt16();
		var cbFeatData = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(cbFeatData == 0, "Should only be non-zero for ISFFEC2");
		var reserved3 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved3 == 0, "The reserved3 value is incorrect.");
		var refs = new $.ig.List$1($.ig.excel.WorksheetRegion.prototype.$type, 0);
		for (var i = 0; i < cref; i++) {
			refs.add(loadManager._currentRecordStream()._readRef8U(worksheet));
		}
		var range = loadManager._currentRecordStream()._readFeatProtection();
		var en = refs.getEnumerator();
		while (en.moveNext()) {
			var region = en.current();
			range.ranges().add(region);
		}
		worksheet.protection().allowedEditRanges().insert(0, range);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var range = saveManager._contextStack().get$1($.ig.excel.WorksheetProtectedRange.prototype.$type);
		if (range == null) {
			$.ig.ExcelUtils.prototype.debugFail("This record currently only supports writing out the edit ranges for worksheet protection");
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write17($.ig.SharedFeatureType.prototype.protection);
		saveManager._currentRecordStream().writeByte(0);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write17(range.ranges().count());
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write17(0);
		var en = range.ranges().getEnumerator();
		while (en.moveNext()) {
			var region = en.current();
			saveManager._currentRecordStream()._writeRef8U(region);
		}
		saveManager._currentRecordStream()._writeFeatProtection(range);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fEAT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord::Type()" />*/
	,
	$type: new $.ig.Type('FEATRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FEATRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord" />*/

$.ig.util.defType('FILEPASSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.FILEPASSRecord.prototype.fILEPASSRecordLoadHelper(loadManager);
		if (loadManager._readRecordTransform() == null) {
			loadManager._workbook()._throwInvalidPasswordException();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.Debug.prototype.assert1(saveManager._currentRecordStream().length() != 0, "FILESHARING is not supported for writing.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::FILEPASSRecordLoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	fILEPASSRecordLoadHelper: function (loadManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::FILEPASSRecordLoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::CanBeEncrypted()" />*/
	canBeEncrypted: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::CanBeEncrypted()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fILEPASS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord::Type()" />*/
	,
	$type: new $.ig.Type('FILEPASSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord" />*/

$.ig.util.defType('FILESHARINGRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var fReadOnlyRec = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(fReadOnlyRec == 0 || fReadOnlyRec == 1, "Invalid fReadOnlyRec value");
		var wResPass = loadManager._currentRecordStream()._readUInt16();
		if (wResPass == 0) {
			var iNoResPass = loadManager._currentRecordStream()._readUInt16();
			$.ig.ExcelUtils.prototype.debugAssert(iNoResPass == 0, "Invalid iNoResPass value");
		} else {
			var stUNUsername = loadManager._currentRecordStream()._readXLUnicodeString();
			$.ig.ExcelUtils.prototype.debugAssert(stUNUsername.length <= $.ig.FILESHARINGRecord.prototype._maxUserNameLength, "Invalid stUNUsername value");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.Debug.prototype.assert1(saveManager._currentRecordStream().length() != 0, "FILESHARING is not supported for writing.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fILESHARING;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord::Type()" />*/
	,
	$type: new $.ig.Type('FILESHARINGRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord" />*/

$.ig.util.defType('FNGROUPCOUNTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var numberOfBuiltInFunctionGroups = loadManager._currentRecordStream()._readUInt16();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(16);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fNGROUPCOUNT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord::Type()" />*/
	,
	$type: new $.ig.Type('FNGROUPCOUNTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FNGROUPCOUNTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord" />*/

$.ig.util.defType('FONTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var info = new $.ig.FONTRecordInfo();
		info._dyHeight = loadManager._currentRecordStream()._readUInt16();
		info._temp1 = loadManager._currentRecordStream()._readUInt16();
		info._icv = loadManager._currentRecordStream()._readUInt16();
		info._bls = loadManager._currentRecordStream()._readUInt16();
		info._sss = loadManager._currentRecordStream()._readUInt16();
		info._uls = loadManager._currentRecordStream().readByte();
		info._bFamily = loadManager._currentRecordStream().readByte();
		info._bCharSet = loadManager._currentRecordStream().readByte();
		loadManager._currentRecordStream().readByte();
		info._fontName = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.eightBit)._unformattedString();
		loadManager._deferredFONTRecords().add(info);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecordInfo)" />*/
	loadHelper: function (loadManager, info) {
		var font = loadManager._workbook().createNewWorkbookFont();
		if (info._dyHeight < 20) {
			$.ig.ExcelUtils.prototype.debugAssert(info._dyHeight == 0, "We only expect the font height to be 0 in this case.");
			info._dyHeight = 20;
		}
		font.height(info._dyHeight);
		font._italic$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, (info._temp1 & 2) == 2 ? true : false));
		font._strikeout$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, (info._temp1 & 8) == 8 ? true : false));
		font.colorInfo(new $.ig.excel.WorkbookColorInfo(loadManager._workbook(), info._icv));
		font._bold$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, info._bls < 700 ? false : true));
		font.superscriptSubscriptStyle(info._sss);
		font.underlineStyle(info._uls);
		font.name(info._fontName);
		if (loadManager._fonts().count() == 4) {
			loadManager._fonts().add(null);
		}
		if (loadManager._fonts().count() == 0) {
			loadManager._workbook()._fonts()._defaultElement(font);
		}
		loadManager._fonts().add(font);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecordInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var font = saveManager._contextStack().get$1($.ig.WorkbookFontData.prototype.$type);
		if (font == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no font in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(font.height());
		var optionFlags = 0;
		if ($.ig.util.nullableEquals(font._italic$i(), true)) {
			optionFlags |= 2;
		}
		if ($.ig.util.nullableEquals(font._strikeout$i(), true)) {
			optionFlags |= 8;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(font.colorInfo()._getIndex(saveManager._workbook(), $.ig.ColorableItem.prototype.cellFont));
		var fontWieght = ($.ig.util.nullableEquals(font._bold$i(), true) ? 700 : 400);
		saveManager._currentRecordStream()._write17(fontWieght);
		saveManager._currentRecordStream()._write17(font.superscriptSubscriptStyle());
		saveManager._currentRecordStream()._write9(font.underlineStyle());
		saveManager._currentRecordStream()._write9($.ig.ExcelUtils.prototype.getFontFamilyInternal(font.name()));
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write16(font.name(), $.ig.LengthType.prototype.eightBit, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fONT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord::Type()" />*/
	,
	$type: new $.ig.Type('FONTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecordInfo" />*/

$.ig.util.defType('FONTRecordInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_dyHeight: 0,
	_temp1: 0,
	_icv: 0,
	_bls: 0,
	_sss: 0,
	_uls: 0,
	_bFamily: 0,
	_bCharSet: 0,
	_fontName: null,
	$type: new $.ig.Type('FONTRecordInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FONTRecordInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord" />*/

$.ig.util.defType('FOOTERRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		if (loadManager._currentRecordStream().length() == 0) {
			return;
		}
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		var currentWorksheetFooter = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit);
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.FormattedStringElement.prototype.$type, currentWorksheetFooter) !== null) == false, "The footer text should not have formatting");
		printOptions.footer(currentWorksheetFooter._unformattedString());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		if (String.isNullOrEmpty(printOptions.footer())) {
			return;
		}
		saveManager._currentRecordStream()._write15(printOptions.footer(), $.ig.LengthType.prototype.sixteenBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fOOTER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord::Type()" />*/
	,
	$type: new $.ig.Type('FOOTERRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FOOTERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord" />*/

$.ig.util.defType('FORMATRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var formatIndex = loadManager._currentRecordStream()._readUInt16();
		var format = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit)._unformattedString();
		loadManager._workbook()._formats().addLoadedFormat(formatIndex, format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var info = saveManager._contextStack().get$1($.ig.WorkbookSaveManagerExcel2003_FormatHolder.prototype.$type);
		if (info == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no format info in the context stack.");
			return;
		}
		var indexToSave = saveManager._getNumberFormatSerializationIndex(info.index());
		saveManager._currentRecordStream()._write17(indexToSave);
		saveManager._currentRecordStream()._write15(info.format(), $.ig.LengthType.prototype.sixteenBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fORMAT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord::Type()" />*/
	,
	$type: new $.ig.Type('FORMATRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMATRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord" />*/

$.ig.util.defType('FORMULARecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		lastCalculatedCellValue = $.ig.FORMULARecord.prototype.decodeCacheValue(loadManager, data, dataIndex);
		dataIndex += 8;
		var optionFlags = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var recalculateAlways = (optionFlags & 1) == 1;
		var calculateOnOpen = (optionFlags & 2) == 2;
		var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex);
		data = $ret.p0;
		dataIndex = $ret.p1;
		var formula = (function () { var $ret = loadManager._loadFormula($.ig.FormulaType.prototype.formula, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
		$.ig.ExcelUtils.prototype.debugAssert(formula._isReferenceFormula() || formula._recalculateAlways() == recalculateAlways, "The recalculateAlways bit is not correct.");
		formula._isDirtyOnLoad(calculateOnOpen);
		cellValue = formula;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		var cellContext = saveManager._currentCellContext();
		var formula = $.ig.ExcelUtils.prototype.formulaFromCellValueRaw(cellContext.value());
		if (formula == null) {
			$.ig.ExcelUtils.prototype.debugFail("Incorrect cell value type");
			return;
		}
		var cellDataContext = saveManager._currentCellDataContext();
		var lastCalculatedCellValue = saveManager._getSerializableCellValue(cellContext.row(), cellDataContext, true);
		var isSharedFormula = formula._isSharedFormula();
		var sharedFormulaRootCell = null;
		if (isSharedFormula) {
			sharedFormulaRootCell = saveManager._contextStack().get$1($.ig.excel.WorksheetCell.prototype.$type);
			$.ig.ExcelUtils.prototype.debugAssert($.ig.excel.WorksheetCell.prototype.l_op_Inequality(sharedFormulaRootCell, null), "Cannot find the shared formula root on the context stack.");
			formula = saveManager._getSharedFormulaReference(formula);
		}
		var stringValue;
		var cachedValueBytes = (function () { var $ret = $.ig.FORMULARecord.prototype.encodeCacheValue(saveManager._workbook(), lastCalculatedCellValue, stringValue); stringValue = $ret.p2; return $ret.ret; }());
		initialData.write(cachedValueBytes, 0, cachedValueBytes.length);
		var optionFlags = 0;
		if (formula._recalculateAlways()) {
			optionFlags |= 1;
		}
		if (cellContext.row()._getCellCalcReference(cellDataContext.columnIndex())._shouldBeRecalculatedOnNextLoad()) {
			optionFlags |= 2;
		}
		if (isSharedFormula) {
			optionFlags |= 8;
		}
		initialData.write($.ig.BitConverter.prototype.getBytes7(optionFlags), 0, 2);
		initialData.write($.ig.BitConverter.prototype.getBytes8($.ig.util.intSToU(0)), 0, 4);
		saveManager._currentRecordStream()._write13(initialData);
		saveManager._saveFormula(formula, true, false, true);
		if (isSharedFormula && sharedFormulaRootCell.rowIndex() == cellContext.row().index() && sharedFormulaRootCell._columnIndexInternal() == cellDataContext.columnIndex()) {
			saveManager._writeRecord($.ig.BIFF8RecordType.prototype.sHRFMLA);
		}
		if (stringValue == null) {
			return;
		}
		saveManager._contextStack().push(stringValue);
		saveManager._writeRecord($.ig.BIFF8RecordType.prototype.sTRING);
		saveManager._contextStack().pop();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.fORMULA;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::Type()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::DecodeCacheValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32)" />*/
	decodeCacheValue: function (loadManager, data, dataIndex) {
		var number = $.ig.BitConverter.prototype.toDouble(data, dataIndex);
		if ($.ig.util.isNaN(number) == false) {
			return number;
		}
		switch (data[dataIndex]) {
			case 0:
				{
					var originalPosition = loadManager._currentRecordStream().position();
					loadManager._currentRecordStream().position(loadManager._currentRecordStream().length());
					try {
						{
							var stream = new $.ig.Biff8RecordStream(1, loadManager);
							try {
								if (stream._recordType() == $.ig.BIFF8RecordType.prototype.sHRFMLA || stream._recordType() == $.ig.BIFF8RecordType.prototype.aRRAY) {
									$.ig.WorkItemExtensions.prototype.executeSynchronously(loadManager._loadCurrentRecord());
									{
										var nextStream = new $.ig.Biff8RecordStream(1, loadManager);
										try {
											return $.ig.FORMULARecord.prototype.decodeCachedValueFromStringStream(nextStream);
										}
										finally {
											if (nextStream != null) {
												nextStream.dispose();
											}
										}
									}
								} else {
									return $.ig.FORMULARecord.prototype.decodeCachedValueFromStringStream(stream);
								}
							}
							finally {
								if (stream != null) {
									stream.dispose();
								}
							}
						}
					}
					finally {
						loadManager._currentRecordStream().position(originalPosition);
					}
				}
			case 1: return $.ig.BitConverter.prototype.toBoolean(data, dataIndex + 2);
			case 2: return $.ig.excel.ErrorValue.prototype._fromValue(data[dataIndex + 2]);
			case 3: return String.empty();
			default:
				$.ig.ExcelUtils.prototype.debugFail("Invalid cached value.");
				return null;
		}
	}
	/*<EndMethod Name="System.Object Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::DecodeCacheValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::DecodeCachedValueFromStringStream(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	decodeCachedValueFromStringStream: function (stream) {
		if (stream._recordType() != $.ig.BIFF8RecordType.prototype.sTRING) {
			$.ig.ExcelUtils.prototype.debugFail("The next record type should have been a STRING record.");
			return String.empty();
		}
		var loadManager = stream._loadManagerBiff8();
		$.ig.WorkItemExtensions.prototype.executeSynchronously(loadManager._loadCurrentRecord());
		var loadedString = $.ig.util.cast(String, loadManager._contextStack().current());
		if (loadedString != null) {
			loadManager._contextStack().pop();
			return loadedString;
		}
		$.ig.ExcelUtils.prototype.debugFail("A string should have been loaded from the record.");
		return String.empty();
	}
	/*<EndMethod Name="System.String Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::DecodeCachedValueFromStringStream(Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::EncodeCacheValue(Infragistics.Documents.Excel.Workbook, System.Object, System.String)" />*/
	encodeCacheValue: function (workbook, value, stringValue) {
		return {
			ret: (function () { var $ret = $.ig.FORMULARecord.prototype.getCacheValueBytes(workbook, value, stringValue); stringValue = $ret.p2; return $ret.ret; }()),
			p2: stringValue
		};
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::EncodeCacheValue(Infragistics.Documents.Excel.Workbook, System.Object, System.String)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::GetCacheValueBytes(Infragistics.Documents.Excel.Workbook, System.Object, System.String)" />*/
	getCacheValueBytes: function (workbook, value, stringValue) {
		stringValue = null;
		if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null) {
			return {
				ret: [ 1, 0, $.ig.Convert.prototype.toByte(value), 0, 0, 0, 255, 255 ],
				p2: stringValue
			};
		}
		var errorValue = $.ig.util.cast($.ig.excel.ErrorValue.prototype.$type, value);
		if (errorValue != null) {
			return {
				ret: [ 2, 0, errorValue._value(), 0, 0, 0, 255, 255 ],
				p2: stringValue
			};
		}
		var strValue = $.ig.util.cast(String, value);
		if (strValue == null) {
			var formattedString = $.ig.util.cast($.ig.StringElement.prototype.$type, value);
			if (formattedString != null) {
				strValue = formattedString._unformattedString();
			}
		}
		if (strValue != null) {
			stringValue = strValue;
			return {
				ret: [ 0, 0, 0, 0, 0, 0, 255, 255 ],
				p2: stringValue
			};
		}
		if ($.ig.util.cast($.ig.Date.prototype.$type, value) !== null) {
			var excelDate = $.ig.excel.ExcelCalcValue.prototype._dateTimeToExcelDate(workbook, value);
			if (excelDate.hasValue()) {
				return {
					ret: $.ig.BitConverter.prototype.getBytes2(excelDate.value()),
					p2: stringValue
				};
			}
			return {
				ret: new Array(8),
				p2: stringValue
			};
		}
		try {
			var numberValue = $.ig.Convert.prototype.toDouble4(value, workbook._cultureResolved());
			return {
				ret: $.ig.BitConverter.prototype.getBytes2(numberValue),
				p2: stringValue
			};
		}
		catch (e) {
			$.ig.ExcelUtils.prototype.debugFail("Error converting cached value.");
			return {
				ret: new Array(8),
				p2: stringValue
			};
		}
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord::GetCacheValueBytes(Infragistics.Documents.Excel.Workbook, System.Object, System.String)" />*/
	,
	$type: new $.ig.Type('FORMULARecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FORMULARecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord" />*/

$.ig.util.defType('GRIDSETRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt16();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.gRIDSET;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord::Type()" />*/
	,
	$type: new $.ig.Type('GRIDSETRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GRIDSETRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord" />*/

$.ig.util.defType('GUTSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var widthOfRowOutlineArea = loadManager._currentRecordStream()._readUInt16();
		var heightOfColumnOutlineArea = loadManager._currentRecordStream()._readUInt16();
		var visibleRowOutlineLevels = loadManager._currentRecordStream()._readUInt16();
		var visibleColumnOutlineLevels = loadManager._currentRecordStream()._readUInt16();
		if (visibleColumnOutlineLevels != 0) {
			visibleColumnOutlineLevels--;
			$.ig.ExcelUtils.prototype.debugAssert(heightOfColumnOutlineArea == (12 * visibleColumnOutlineLevels) + 17, null);
		}
		if (visibleRowOutlineLevels != 0) {
			visibleRowOutlineLevels--;
			$.ig.ExcelUtils.prototype.debugAssert(widthOfRowOutlineArea == (12 * visibleRowOutlineLevels) + 17, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var cache = saveManager._getSerializationCache1(worksheet);
		var maxColumnOutlineLevel = cache._maxColumnOutlineLevel;
		var maxRowOutlineLevel = cache._maxRowOutlineLevel;
		if (maxRowOutlineLevel > 0) {
			saveManager._currentRecordStream()._write17(((12 * maxRowOutlineLevel) + 17));
			maxRowOutlineLevel++;
		} else {
			saveManager._currentRecordStream()._write17(0);
		}
		if (maxColumnOutlineLevel > 0) {
			saveManager._currentRecordStream()._write17(((12 * maxColumnOutlineLevel) + 17));
			maxColumnOutlineLevel++;
		} else {
			saveManager._currentRecordStream()._write17(0);
		}
		saveManager._currentRecordStream()._write17(maxRowOutlineLevel);
		saveManager._currentRecordStream()._write17(maxColumnOutlineLevel);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.gUTS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord::Type()" />*/
	,
	$type: new $.ig.Type('GUTSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.GUTSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord" />*/

$.ig.util.defType('HCENTERRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		printOptions.centerHorizontally($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(printOptions.centerHorizontally()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hCENTER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord::Type()" />*/
	,
	$type: new $.ig.Type('HCENTERRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HCENTERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord" />*/

$.ig.util.defType('HEADERFOOTERRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		var customView = loadManager._contextStack().get$1($.ig.excel.CustomView.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		loadManager._currentRecordStream()._readFrtHeader();
		var guidSView = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		$.ig.ExcelUtils.prototype.debugAssert((customView == null && $.ig.Guid.prototype.l_op_Equality(guidSView, new $.ig.Guid())) || customView != null && $.ig.Guid.prototype.l_op_Equality(guidSView, customView._id()), "Expected the CustomView to have the same guid");
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var fHFDiffOddEven = $.ig.ExcelUtils.prototype.testBit(optionFlags, 0);
		var fHFDiffFirst = $.ig.ExcelUtils.prototype.testBit(optionFlags, 1);
		var fHFScaleWithDoc = $.ig.ExcelUtils.prototype.testBit(optionFlags, 2);
		var fHFAlignMargins = $.ig.ExcelUtils.prototype.testBit(optionFlags, 3);
		var cchHeaderEven = loadManager._currentRecordStream()._readUInt16();
		var cchFooterEven = loadManager._currentRecordStream()._readUInt16();
		var cchHeaderFirst = loadManager._currentRecordStream()._readUInt16();
		var cchFooterFirst = loadManager._currentRecordStream()._readUInt16();
		if (cchHeaderEven != 0) {
			var strHeaderEven = loadManager._currentRecordStream()._readXLUnicodeString();
		}
		if (cchFooterEven != 0) {
			var strFooterEven = loadManager._currentRecordStream()._readXLUnicodeString();
		}
		if (cchHeaderFirst != 0) {
			var strHeaderFirst = loadManager._currentRecordStream()._readXLUnicodeString();
		}
		if (cchFooterFirst != 0) {
			var strFooterFirst = loadManager._currentRecordStream()._readXLUnicodeString();
		}
		printOptions.alignHeadersAndFootersWithMargins(fHFAlignMargins);
		printOptions.scaleHeadersAndFootersWithDocument(fHFScaleWithDoc);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		var customView = saveManager._contextStack().get$1($.ig.excel.CustomView.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		if (customView == null) {
			saveManager._currentRecordStream()._write2(new Array(16));
		} else {
			saveManager._currentRecordStream()._write2(customView._id().toByteArray());
		}
		var optionFlags = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(optionFlags, printOptions.scaleHeadersAndFootersWithDocument(), 2);
		optionFlags = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(optionFlags, printOptions.alignHeadersAndFootersWithMargins(), 3);
		optionFlags = $ret1.p0;
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hEADERFOOTER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord::Type()" />*/
	,
	$type: new $.ig.Type('HEADERFOOTERRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERFOOTERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord" />*/

$.ig.util.defType('HEADERRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		if (loadManager._currentRecordStream().length() == 0) {
			return;
		}
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		var currentWorksheetHeader = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit);
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.cast($.ig.FormattedStringElement.prototype.$type, currentWorksheetHeader) !== null) == false, "The header text should not have formatting");
		printOptions.header(currentWorksheetHeader._unformattedString());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		if (String.isNullOrEmpty(printOptions.header())) {
			return;
		}
		saveManager._currentRecordStream()._write15(printOptions.header(), $.ig.LengthType.prototype.sixteenBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hEADER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord::Type()" />*/
	,
	$type: new $.ig.Type('HEADERRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HEADERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord" />*/

$.ig.util.defType('HFPICTURERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var rt = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(rt == this.type(), "The repeated type does not match.");
		var frtFlags = loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream().seek(8, $.ig.SeekOrigin.prototype.current);
		var rfg = loadManager._currentRecordStream().readByte();
		var isDrawing = (rfg & 1) == 1;
		var isDrawingGroup = (rfg & 2) == 2;
		var hasAdditionalData = (rfg & 4) == 4;
		$.ig.ExcelUtils.prototype.debugAssert(hasAdditionalData == false, "Implement the processing of this flag.");
		loadManager._currentRecordStream().seek(1, $.ig.SeekOrigin.prototype.current);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("Implement saving of this record.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hFPicture;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord::Type()" />*/
	,
	$type: new $.ig.Type('HFPICTURERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HFPICTURERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord" />*/

$.ig.util.defType('HIDEOBJRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().windowOptions().objectDisplayStyle(loadManager._currentRecordStream()._readUInt16());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(saveManager._workbook().windowOptions().objectDisplayStyle());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hIDEOBJ;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord::Type()" />*/
	,
	$type: new $.ig.Type('HIDEOBJRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HIDEOBJRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord" />*/

$.ig.util.defType('HLINKRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var ref8 = loadManager._currentRecordStream()._readRef8U(worksheet);
		var hlinkClsid = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		$.ig.ExcelUtils.prototype.debugAssert($.ig.Guid.prototype.l_op_Equality(hlinkClsid, $.ig.HLINKRecord.prototype._hLinkClsId), "Unexpected hlinkClsid value");
		var streamVersion = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(streamVersion == 2, "The streamVersion value is not as expected.");
		var optionFlags = loadManager._currentRecordStream()._readUInt32();
		var hlstmfHasMoniker = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 0);
		var hlstmfIsAbsolute = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 1);
		var hlstmfSiteGaveDisplayName = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 2);
		var hlstmfHasLocationStr = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 3);
		var hlstmfHasDisplayName = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 4);
		var hlstmfHasGUID = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 5);
		var hlstmfHasCreationTime = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 6);
		var hlstmfHasFrameName = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 7);
		var hlstmfMonikerSavedAsStr = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 8);
		var hlstmfAbsFromGetdataRel = $.ig.ExcelUtils.prototype.testBit1(optionFlags, 9);
		$.ig.ExcelUtils.prototype.debugAssert(($.ig.util.u32BitwiseAnd(optionFlags, 4294966272)) == 0, "The reserved bits should be zero");
		var displayName = hlstmfHasDisplayName ? loadManager._currentRecordStream()._readHyperlinkString() : null;
		var targetFrameName = hlstmfHasFrameName ? loadManager._currentRecordStream()._readHyperlinkString() : null;
		var moniker = hlstmfHasMoniker && hlstmfMonikerSavedAsStr ? loadManager._currentRecordStream()._readHyperlinkString() : null;
		var oleMoniker = null;
		if (hlstmfHasMoniker && (hlstmfMonikerSavedAsStr == false)) {
			oleMoniker = loadManager._currentRecordStream()._readHyperlinkMoniker();
			if (oleMoniker == null) {
				return;
			}
		}
		var location = hlstmfHasLocationStr ? loadManager._currentRecordStream()._readHyperlinkString() : null;
		var guid = hlstmfHasGUID ? new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16)) : new $.ig.Guid();
		var fileTime = hlstmfHasCreationTime ? loadManager._currentRecordStream()._readFileTime() : new Date();
		var resolvedTarget = $.ig.WorkbookLoadManager.prototype._combineHyperlinkTargetAndLocation(loadManager._workbook(), moniker != null ? moniker : oleMoniker, location);
		var hyperlink = new $.ig.excel.WorksheetHyperlink(ref8, resolvedTarget, displayName, null);
		hyperlink._isInvalidTargetLocation(location != null && typeof resolvedTarget === 'string' && location == resolvedTarget);
		worksheet.hyperlinks().add(hyperlink);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var hyperlink = saveManager._contextStack().get$1($.ig.excel.WorksheetHyperlink.prototype.$type);
		if (hyperlink == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no hyperlink in the context stack.");
			return;
		}
		var moniker;
		var location;
		var displayValue;
		var $ret = $.ig.WorkbookSaveManager.prototype._separateHyperlinkInfo(hyperlink, moniker, location, displayValue);
		moniker = $ret.p1;
		location = $ret.p2;
		displayValue = $ret.p3;
		saveManager._currentRecordStream()._writeRef8U(hyperlink.sourceRegion());
		saveManager._currentRecordStream()._write2($.ig.HLINKRecord.prototype._hLinkClsId.toByteArray());
		var optionFlags = 0;
		if (moniker != null) {
			var $ret1 = $.ig.ExcelUtils.prototype.setBit4(optionFlags, true, 0);
			optionFlags = $ret1.p0;
		}
		if (location != null) {
			var $ret2 = $.ig.ExcelUtils.prototype.setBit4(optionFlags, true, 3);
			optionFlags = $ret2.p0;
		}
		var $ret3 = $.ig.ExcelUtils.prototype.setBit4(optionFlags, true, 4);
		optionFlags = $ret3.p0;
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(2));
		saveManager._currentRecordStream()._write18(optionFlags);
		saveManager._currentRecordStream()._writeHyperlinkString(displayValue);
		if (moniker != null) {
			saveManager._currentRecordStream()._writeHyperlinkMoniker(moniker);
		}
		if (location != null) {
			saveManager._currentRecordStream()._writeHyperlinkString(location);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hLINK;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord::Type()" />*/
	,
	$type: new $.ig.Type('HLINKRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord" />*/

$.ig.util.defType('HLINKTOOLTIPRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null || worksheet.hyperlinks().count() == 0) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack or it has no hyperlinks.");
			return;
		}
		var frtRefHeaderNoGrbit = loadManager._currentRecordStream()._readFrtRefHeaderNoGrbit(worksheet);
		var wzTooltip = loadManager._currentRecordStream()._readNullTerminatedUnicodeString();
		var lastHyperlink = worksheet.hyperlinks().item(worksheet.hyperlinks().count() - 1);
		if (lastHyperlink.sourceRegion() != frtRefHeaderNoGrbit) {
			lastHyperlink = null;
			for (var i = 0; i < worksheet.hyperlinks().count(); i++) {
				if (worksheet.hyperlinks().item(i).sourceRegion() == frtRefHeaderNoGrbit) {
					lastHyperlink = worksheet.hyperlinks().item(i);
					break;
				}
			}
		}
		if (lastHyperlink == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the hyperlink to which the tool tip belongs.");
			return;
		}
		lastHyperlink.toolTip(wzTooltip);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var hyperlink = saveManager._contextStack().get$1($.ig.excel.WorksheetHyperlink.prototype.$type);
		if (hyperlink == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no hyperlink in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._writeFrtRefHeaderNoGrbit(hyperlink.sourceRegion());
		saveManager._currentRecordStream()._writeNullTerminatedUnicodeString(hyperlink.toolTip());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hLINKTOOLTIP;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord::Type()" />*/
	,
	$type: new $.ig.Type('HLINKTOOLTIPRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKTOOLTIPRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord" />*/

$.ig.util.defType('HORIZONTALPAGEBREAKSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		if (loadManager._currentRecordStream().length() == 0) {
			return;
		}
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no PrintOptions in the context stack.");
			return;
		}
		var numberOfBreaks = loadManager._currentRecordStream()._readUInt16();
		for (var i = 0; i < numberOfBreaks; i++) {
			var id = loadManager._currentRecordStream()._readUInt16();
			var minValue = loadManager._currentRecordStream()._readUInt16();
			var maxValue = loadManager._currentRecordStream()._readUInt16();
			var min = $.ig.util.toNullable($.ig.Number.prototype.$type, minValue);
			if (minValue == 0) {
				min = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			var max = $.ig.util.toNullable($.ig.Number.prototype.$type, maxValue);
			if (maxValue == loadManager._workbook()._maxColumnCountInternal() - 1) {
				max = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			printOptions.horizontalPageBreaks().add(new $.ig.excel.HorizontalPageBreak(id, printOptions.printAreas()._getPrintArea(id, $.ig.util.toNullable($.ig.Number.prototype.$type, minValue), $.ig.util.toNullable($.ig.Number.prototype.$type, maxValue), false)));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no PrintOptions in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(printOptions.horizontalPageBreaks().count());
		for (var i = 0; i < printOptions.horizontalPageBreaks().count(); i++) {
			var pageBreak = printOptions.horizontalPageBreaks()._item(i);
			saveManager._currentRecordStream()._write17(pageBreak._id());
			saveManager._currentRecordStream()._write17(pageBreak._minResolved());
			var maxResolved = Math.min(pageBreak._maxResolved(), saveManager._workbook()._maxColumnCountInternal() - 1);
			saveManager._currentRecordStream()._write17(maxResolved);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.hORIZONTALPAGEBREAKS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord::Type()" />*/
	,
	$type: new $.ig.Type('HORIZONTALPAGEBREAKSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HORIZONTALPAGEBREAKSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord" />*/

$.ig.util.defType('INDEXRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var mustBeZero = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(mustBeZero == 0, null);
		var firstUsedRow = loadManager._currentRecordStream()._readUInt32();
		var firstRowOfUnusedTailOfSheet = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.INDEXRecord.prototype.positionOfDefColWidthAddress == loadManager._currentRecordStream().position(), null);
		loadManager._currentRecordStream()._readUInt32();
		if (firstUsedRow != firstRowOfUnusedTailOfSheet) {
			var numDBCEllRecords = $.ig.intDivide((loadManager._currentRecordStream().length() - loadManager._currentRecordStream().position()), 4);
			$.ig.ExcelUtils.prototype.debugAssert($.ig.INDEXRecord.prototype.positionOfDBCellAddresses == loadManager._currentRecordStream().position(), null);
			for (var i = 0; i < numDBCEllRecords; i++) {
				loadManager._currentRecordStream()._readUInt32();
			}
			$.ig.ExcelUtils.prototype.debugAssert(loadManager._currentRecordStream().position() == loadManager._currentRecordStream().length(), null);
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(firstUsedRow == 0, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var cache = saveManager._getSerializationCache1(worksheet);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		saveManager._currentRecordStream()._write18(cache._firstRow);
		saveManager._currentRecordStream()._write18(cache._firstRowInUndefinedTail);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.INDEXRecord.prototype.positionOfDefColWidthAddress == saveManager._currentRecordStream().position(), null);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		$.ig.ExcelUtils.prototype.debugAssert($.ig.INDEXRecord.prototype.positionOfDBCellAddresses == saveManager._currentRecordStream().position(), null);
		if (cache._firstRow != cache._firstRowInUndefinedTail) {
			var numDBCEllRecords = cache._rowBlockCount;
			for (var i = 0; i < numDBCEllRecords; i++) {
				saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
			}
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(cache._firstRow == 0, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.iNDEX;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord::Type()" />*/
	,
	$type: new $.ig.Type('INDEXRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord" />*/

$.ig.util.defType('INTERFACEENDRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.iNTERFACEEND;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord::Type()" />*/
	,
	$type: new $.ig.Type('INTERFACEENDRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEENDRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord" />*/

$.ig.util.defType('INTERFACEHDRRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		if (loadManager._currentRecordStream().length() > 0) {
			var codePage = loadManager._currentRecordStream()._readUInt16();
			$.ig.ExcelUtils.prototype.debugAssert($.ig.ExcelUtils.prototype.encodingGetCodePage($.ig.Encoding.prototype.unicode()) == codePage, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.ExcelUtils.prototype.encodingGetCodePage($.ig.Encoding.prototype.unicode()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::CanBeEncrypted()" />*/
	canBeEncrypted: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::CanBeEncrypted()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.iNTERFACEHDR;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord::Type()" />*/
	,
	$type: new $.ig.Type('INTERFACEHDRRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INTERFACEHDRRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord" />*/

$.ig.util.defType('ITERATIONRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().iterativeCalculationsEnabled($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(saveManager._workbook().iterativeCalculationsEnabled()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.iTERATION;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord::Type()" />*/
	,
	$type: new $.ig.Type('ITERATIONRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ITERATIONRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord" />*/

$.ig.util.defType('LABELRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		var stringElement = (function () { var $ret = loadManager._currentRecordStream().readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
		var formattedStringElement = $.ig.util.cast($.ig.FormattedStringElement.prototype.$type, stringElement);
		if (formattedStringElement != null && formattedStringElement._hasFormatting()) {
			cellValue = new $.ig.excel.FormattedString(loadManager._workbook(), formattedStringElement);
		} else {
			cellValue = stringElement;
		}
		lastCalculatedCellValue = cellValue;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		$.ig.ExcelUtils.prototype.debugFail("We should not be serializing this record type, it has been replaced by LABELSST.");
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.lABEL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord::Type()" />*/
	,
	$type: new $.ig.Type('LABELRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord" />*/

$.ig.util.defType('LABELSSTRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		var sstIndex = (function () { var $ret = loadManager._currentRecordStream()._readInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var stringElement = loadManager._sharedStringTable().__inner[sstIndex];
		var formattedStringElement = $.ig.util.cast($.ig.FormattedStringElement.prototype.$type, stringElement);
		if (formattedStringElement != null && formattedStringElement._hasFormatting()) {
			cellValue = new $.ig.excel.FormattedString(loadManager._workbook(), formattedStringElement);
		} else {
			cellValue = stringElement;
		}
		lastCalculatedCellValue = cellValue;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		var stringIndex = $.ig.util.cast($.ig.StringElementIndex.prototype.$type, saveManager._currentCellContext().value());
		if (stringIndex != null) {
			initialData.write($.ig.BitConverter.prototype.getBytes4(stringIndex._indexInSharedStringTable), 0, 4);
		} else {
			$.ig.ExcelUtils.prototype.debugFail("Incorrect cell value type");
			initialData.write($.ig.BitConverter.prototype.getBytes4(0), 0, 4);
		}
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.lABELSST;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord::Type()" />*/
	,
	$type: new $.ig.Type('LABELSSTRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LABELSSTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord" />*/

$.ig.util.defType('LEFTMARGINRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		printOptions.leftMargin(loadManager._currentRecordStream()._readDouble());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write10(printOptions.leftMargin());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.lEFTMARGIN;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord::Type()" />*/
	,
	$type: new $.ig.Type('LEFTMARGINRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LEFTMARGINRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record" />*/

$.ig.util.defType('LIST12Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		loadManager._currentRecordStream()._readFrtHeader();
		var lsd = loadManager._currentRecordStream()._readUInt16();
		var idList = loadManager._currentRecordStream()._readUInt32();
		var table = worksheet.tables()._getTableById(idList);
		if (table == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the table with the specified id.");
			return;
		}
		switch (lsd) {
			case $.ig.LIST12Record_LIST12DataType.prototype.blockLevelFormatting:
				loadManager._currentRecordStream()._readList12BlockLevel(table);
				break;
			case $.ig.LIST12Record_LIST12DataType.prototype.styleInfo:
				loadManager._currentRecordStream()._readList12TableStyleClientInfo(table);
				break;
			case $.ig.LIST12Record_LIST12DataType.prototype.displayName:
				loadManager._currentRecordStream()._readList12DisplayName(table);
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown lsd value.");
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var table = saveManager._contextStack().get$1($.ig.excel.WorksheetTable.prototype.$type);
		var lsd = saveManager._contextStack().get$1($.ig.LIST12Record_LIST12DataType.prototype.$type);
		if (table == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetTable in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write17(lsd);
		saveManager._currentRecordStream()._write18(table._id());
		switch (lsd) {
			case $.ig.LIST12Record_LIST12DataType.prototype.blockLevelFormatting:
				saveManager._currentRecordStream()._writeList12BlockLevel(table);
				break;
			case $.ig.LIST12Record_LIST12DataType.prototype.styleInfo:
				saveManager._currentRecordStream()._writeList12TableStyleClientInfo(table);
				break;
			case $.ig.LIST12Record_LIST12DataType.prototype.displayName:
				saveManager._currentRecordStream()._writeList12DisplayName(table);
				break;
			default:
				$.ig.ExcelUtils.prototype.debugFail("Unknown lsd value.");
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.lIST12;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record::Type()" />*/
	,
	$type: new $.ig.Type('LIST12Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.LIST12Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord" />*/

$.ig.util.defType('MERGEDCELLSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var regions = $.ig.ExcelUtils.prototype.createRectangleHashSet();
		while (loadManager._currentRecordStream().position() < loadManager._currentRecordStream().length()) {
			var numberOfCellRangeAddresses = loadManager._currentRecordStream()._readUInt16();
			for (var i = 0; i < numberOfCellRangeAddresses; i++) {
				var firstRow = loadManager._currentRecordStream()._readUInt16();
				var lastRow = loadManager._currentRecordStream()._readUInt16();
				var firstColumn = loadManager._currentRecordStream()._readUInt16();
				var lastColumn = loadManager._currentRecordStream()._readUInt16();
				var region = $.ig.ExcelUtils.prototype.createRectangle(firstColumn, firstRow, lastColumn - firstColumn, lastRow - firstRow);
				if (regions.add(region) == false) {
					continue;
				}
				worksheet.mergedCellsRegions()._add(firstRow, firstColumn, lastRow, lastColumn);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		{
			var enumerator = saveManager._getMergedCellRegions(worksheet).getEnumerator();
			try {
				var hasMoreItems = enumerator.moveNext();
				do {
					var numberOfRegionsAddress = saveManager._currentRecordStream().position();
					var regionsWritten = 0;
					saveManager._currentRecordStream()._write17(0);
					while (hasMoreItems && saveManager._currentRecordStream()._bytesAvailableInCurrentBlock() >= 8) {
						var region = enumerator.current();
						saveManager._currentRecordStream()._write17(region.firstRow());
						saveManager._currentRecordStream()._write17(region.lastRow());
						saveManager._currentRecordStream()._write17(region.firstColumn());
						saveManager._currentRecordStream()._write17(region.lastColumn());
						regionsWritten++;
						hasMoreItems = enumerator.moveNext();
					}
					var endPosition = saveManager._currentRecordStream().position();
					saveManager._currentRecordStream().position(numberOfRegionsAddress);
					saveManager._currentRecordStream()._write17(regionsWritten);
					saveManager._currentRecordStream().position(endPosition);
					saveManager._currentRecordStream()._capCurrentBlock();
				} while (hasMoreItems);
			}
			finally {
				if (enumerator != null) {
					enumerator.dispose();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mERGEDCELLS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord::Type()" />*/
	,
	$type: new $.ig.Type('MERGEDCELLSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MERGEDCELLSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord" />*/

$.ig.util.defType('MMSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream().readByte();
		loadManager._currentRecordStream().readByte();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mMS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord::Type()" />*/
	,
	$type: new $.ig.Type('MMSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MMSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord" />*/

$.ig.util.defType('MSODRAWINGGROUPRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var record = $.ig.EscherRecordBase.prototype.loadRecord(loadManager, null);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.DrawingGroupContainer.prototype.$type, record) !== null, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var record = new $.ig.DrawingGroupContainer(0, saveManager);
		record.save(saveManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mSODRAWINGGROUP;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord::Type()" />*/
	,
	$type: new $.ig.Type('MSODRAWINGGROUPRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGGROUPRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord" />*/

$.ig.util.defType('MSODRAWINGRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var record = $.ig.EscherRecordBase.prototype.loadRecord(loadManager, null);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.DrawingContainer.prototype.$type, record) !== null, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var record = new $.ig.DrawingContainer(0, saveManager);
		record.save(saveManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mSODRAWING;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord::Type()" />*/
	,
	$type: new $.ig.Type('MSODRAWINGRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord" />*/

$.ig.util.defType('MSODRAWINGSELECTIONRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var record = $.ig.EscherRecordBase.prototype.loadRecord(loadManager, null);
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.cast($.ig.Selections.prototype.$type, record) !== null, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("This record should not be serialized yet");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mSODRAWINGSELECTION;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord::Type()" />*/
	,
	$type: new $.ig.Type('MSODRAWINGSELECTIONRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MSODRAWINGSELECTIONRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase" />*/

$.ig.util.defType('MultipleCellValueRecordBase', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::LoadCellValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, , System.Int32)" />*/
	loadCellValues: function (loadManager, numberOfCells, data, dataIndex) {
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::LoadCellValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::SaveCellValues(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, )" />*/
	saveCellValues: function (saveManager, value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::SaveCellValues(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var $self = this;
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var rowIndex = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var firstColumnIndex = (function () { var $ret = loadManager._currentRecordStream()._readInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lastColumnIndex;
		if (data.length == loadManager._currentRecordStream().length()) {
			lastColumnIndex = $.ig.BitConverter.prototype.toUInt16(data, data.length - 2);
		} else {
			loadManager._currentRecordStream().position(loadManager._currentRecordStream().length() - 2);
			lastColumnIndex = loadManager._currentRecordStream()._readUInt16();
		}
		var definitions = (function () { var $ret = $self.loadCellValues(loadManager, lastColumnIndex - firstColumnIndex + 1, data, dataIndex); data = $ret.p2; dataIndex = $ret.p3; return $ret.ret; }());
		var row = loadManager._getRow(worksheet, rowIndex);
		for (var i = 0, columnIndex = firstColumnIndex; columnIndex <= lastColumnIndex; i++ , columnIndex++) {
			var format = loadManager._formats().__inner[definitions[i]._formatIndex];
			{
				row._setCellFormatWhileLoading(columnIndex, format);
			}
			row._setCellValueRaw(columnIndex, definitions[i]._value, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var mulCellInfo = saveManager._contextStack().get$1($.ig.MultipleCellValueInfo.prototype.$type);
		if (mulCellInfo == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no MULCellInfo in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(mulCellInfo.rowIndex());
		saveManager._currentRecordStream()._write17(mulCellInfo.firstColumnIndex());
		var definitions = new Array(mulCellInfo.numberOfCells());
		for (var i = 0; i < mulCellInfo.numberOfCells(); i++) {
			definitions[i] = new $.ig.CellDefinition(1, saveManager._getCellFormatIndex(mulCellInfo.getCellFormat1(i)), mulCellInfo.getValue(i));
		}
		this.saveCellValues(saveManager, definitions);
		saveManager._currentRecordStream()._write17(mulCellInfo.lastColumnIndex());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	$type: new $.ig.Type('MultipleCellValueRecordBase', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MultipleCellValueRecordBase" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord" />*/

$.ig.util.defType('MULBLANKRecord', 'MultipleCellValueRecordBase', {
	init: function () {
		$.ig.MultipleCellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord::LoadCellValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, , System.Int32)" />*/
	loadCellValues: function (loadManager, numberOfCells, data, dataIndex) {
		var definitions = new Array(numberOfCells);
		for (var i = 0; i < numberOfCells; i++) {
			definitions[i] = new $.ig.CellDefinition(1, (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()), null);
		}
		return {
			ret: definitions,
			p2: data,
			p3: dataIndex
		};
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord::LoadCellValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord::SaveCellValues(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, )" />*/
	saveCellValues: function (saveManager, value) {
		for (var i = 0; i < value.length; i++) {
			saveManager._currentRecordStream()._write17(value[i]._formatIndex);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord::SaveCellValues(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, )" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mULBLANK;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord::Type()" />*/
	,
	$type: new $.ig.Type('MULBLANKRecord', $.ig.MultipleCellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULBLANKRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord" />*/

$.ig.util.defType('MULRKRecord', 'MultipleCellValueRecordBase', {
	init: function () {
		$.ig.MultipleCellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord::LoadCellValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, , System.Int32)" />*/
	loadCellValues: function (loadManager, numberOfCells, data, dataIndex) {
		var definitions = new Array(numberOfCells);
		for (var i = 0; i < numberOfCells; i++) {
			definitions[i] = new $.ig.CellDefinition(1, (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()), $.ig.ExcelUtils.prototype.decodeRKValue((function () { var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }())));
		}
		return {
			ret: definitions,
			p2: data,
			p3: dataIndex
		};
	}
	/*<EndMethod Name=" Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord::LoadCellValues(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, , System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord::SaveCellValues(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, )" />*/
	saveCellValues: function (saveManager, value) {
		for (var i = 0; i < value.length; i++) {
			saveManager._currentRecordStream()._write17(value[i]._formatIndex);
			saveManager._currentRecordStream()._write18($.ig.util.getValue(value[i]._value));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord::SaveCellValues(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, )" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.mULRK;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord::Type()" />*/
	,
	$type: new $.ig.Type('MULRKRecord', $.ig.MultipleCellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.MULRKRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellDefinition" />*/

$.ig.util.defType('CellDefinition', 'ValueType', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ValueType.prototype.init.call(this);
	},
	_value: null,
	_formatIndex: 0,
	init1: function (initNumber, formatIndex, value) {
		$.ig.ValueType.prototype.init.call(this);
		this._value = value;
		this._formatIndex = formatIndex;
	},
	$type: new $.ig.Type('CellDefinition', $.ig.ValueType.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.CellDefinition" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord" />*/

$.ig.util.defType('NAMEEXTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var repeatedBiffType = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(repeatedBiffType == this.type(), null);
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt32();
		loadManager._currentRecordStream()._readUInt32();
		var referenceNameLength = loadManager._currentRecordStream()._readUInt16();
		var commentLength = loadManager._currentRecordStream()._readUInt16();
		var referenceName = loadManager._currentRecordStream()._readFormattedString1(referenceNameLength)._unformattedString();
		var comment = loadManager._currentRecordStream()._readFormattedString1(commentLength)._unformattedString();
		var namedReferences = loadManager._workbook()._currentWorkbookReference().namedReferences();
		var namedReference = namedReferences.item(namedReferences.count() - 1);
		$.ig.ExcelUtils.prototype.debugAssert(namedReference.name() == referenceName, null);
		namedReference.comment(comment);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var namedReference = saveManager._contextStack().get$1($.ig.excel.NamedReferenceBase.prototype.$type);
		if (namedReference == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no named reference in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(this.type());
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write19(0);
		saveManager._currentRecordStream()._write17(namedReference.name().length);
		saveManager._currentRecordStream()._write17(namedReference.comment().length);
		saveManager._currentRecordStream()._write14(namedReference.name());
		saveManager._currentRecordStream()._write14(namedReference.comment());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.nAMEEXT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord::Type()" />*/
	,
	$type: new $.ig.Type('NAMEEXTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMEEXTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord" />*/

$.ig.util.defType('NAMERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var data = new Array(0);
		var dataIndex = 0;
		var optionFlags = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var hidden = (optionFlags & 1) == 1;
		var isFunction = (optionFlags & 2) == 2;
		var isVBMacro = (optionFlags & 4) == 4;
		var isMacroName = (optionFlags & 8) == 8;
		var isBuiltIn = (optionFlags & 32) == 32;
		var isBinaryData = (optionFlags & 4096) == 4096;
		if (isBinaryData) {
			$.ig.ExcelUtils.prototype.debugFail("These named reference types are not implemented yet.");
			return;
		}
		var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex);
		data = $ret.p0;
		dataIndex = $ret.p1;
		var lengthOfName = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var sizeOfFormulaData = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var $ret1 = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex);
		data = $ret1.p0;
		dataIndex = $ret1.p1;
		var indexToSheetThatContainsName = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lengthOfCustomMenuText = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lengthOfDescriptionText = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lengthOfHelpTopicText = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lengthOfStatusBarText = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var name = (function () { var $ret = loadManager._currentRecordStream()._readFormattedStringFromBuffer1(lengthOfName, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }())._unformattedString();
		if (isFunction && name.startsWith("_xlfn.")) {
			name = name.substr(6);
		}
		var formula = (function () { var $ret = loadManager._loadFormula1($.ig.FormulaType.prototype.namedReferenceFormula, sizeOfFormulaData, data, dataIndex); data = $ret.p2; dataIndex = $ret.p3; return $ret.ret; }());
		if (lengthOfCustomMenuText > 0) {
			var $ret2 = loadManager._currentRecordStream()._readFormattedStringFromBuffer1(lengthOfCustomMenuText, data, dataIndex);
			data = $ret2.p1;
			dataIndex = $ret2.p2;
		}
		if (lengthOfDescriptionText > 0) {
			var $ret3 = loadManager._currentRecordStream()._readFormattedStringFromBuffer1(lengthOfDescriptionText, data, dataIndex);
			data = $ret3.p1;
			dataIndex = $ret3.p2;
		}
		if (lengthOfHelpTopicText > 0) {
			var $ret4 = loadManager._currentRecordStream()._readFormattedStringFromBuffer1(lengthOfHelpTopicText, data, dataIndex);
			data = $ret4.p1;
			dataIndex = $ret4.p2;
		}
		if (lengthOfStatusBarText > 0) {
			var $ret5 = loadManager._currentRecordStream()._readFormattedStringFromBuffer1(lengthOfStatusBarText, data, dataIndex);
			data = $ret5.p1;
			dataIndex = $ret5.p2;
		}
		var scope = loadManager._workbook();
		if (indexToSheetThatContainsName > 0) {
			scope = loadManager._workbook().worksheets()._item(indexToSheetThatContainsName - 1);
		}
		if (isBuiltIn) {
			name = $.ig.excel.NamedReferenceBase.prototype._nameFromBuiltInName(name.charAt(0).charCodeAt(0));
		}
		var reference = new $.ig.excel.NamedReference(1, loadManager._workbook().namedReferences(), scope, hidden);
		reference._setNameInternal(name, false);
		loadManager._workbook()._currentWorkbookReference().addNamedReference(reference);
		reference._isFunction(isFunction);
		reference._isMacroName(isMacroName);
		$.ig.ExcelUtils.prototype.debugAssert(reference._isBuiltIn() == isBuiltIn, null);
		loadManager._finalizeNamedReference(reference, formula, hidden);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var namedReference = saveManager._contextStack().get$1($.ig.excel.NamedReferenceBase.prototype.$type);
		if (namedReference == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no named reference in the context stack.");
			return;
		}
		var name = namedReference.name();
		if (namedReference._isBuiltIn()) {
			name = (String.fromCharCode(namedReference._builtInName())).toString();
		}
		var optionFlags = 0;
		if (namedReference._hidden()) {
			optionFlags |= 1;
		}
		if (namedReference._isFunction()) {
			name = "_xlfn." + name;
			optionFlags |= 2;
		}
		if (namedReference._isMacroName()) {
			optionFlags |= 8;
		}
		if (namedReference._isBuiltIn()) {
			optionFlags |= 32;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(name.length);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(0);
		if ($.ig.util.cast($.ig.excel.Workbook.prototype.$type, namedReference.scope()) !== null) {
			saveManager._currentRecordStream()._write17(0);
		} else {
			var index = saveManager._worksheets().indexOf(namedReference.scope());
			$.ig.ExcelUtils.prototype.debugAssert(index >= 0, null);
			saveManager._currentRecordStream()._write17((index + 1));
		}
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write9(0);
		saveManager._currentRecordStream()._write14(name);
		var formulaLength = 0;
		if (namedReference._formulaInternal() != null) {
			formulaLength = saveManager._saveFormula(namedReference._formulaInternal(), false, false, true);
		}
		saveManager._currentRecordStream().position(4);
		saveManager._currentRecordStream()._write17(formulaLength);
		saveManager._currentRecordStream().position(saveManager._currentRecordStream().length());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.nAME;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord::Type()" />*/
	,
	$type: new $.ig.Type('NAMERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NAMERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord" />*/

$.ig.util.defType('NOTERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var rowIndex = loadManager._currentRecordStream()._readUInt16();
		var columnIndex = loadManager._currentRecordStream()._readInt16();
		var row = worksheet.rows().item(rowIndex);
		$.ig.ExcelUtils.prototype.debugAssert(row._getCellCommentInternal(columnIndex) == null, "The cell already has a comment applied.");
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var objId = loadManager._currentRecordStream()._readUInt16();
		var author = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit);
		for (var i = 0; i < loadManager._loadedComments().count(); i++) {
			var comment = loadManager._loadedComments().__inner[i];
			if (comment._type2003().hasValue() == false || comment._type2003().value() != $.ig.ShapeType.prototype.textBox) {
				$.ig.ExcelUtils.prototype.debugFail("The comment should have the TextBox shape type.");
				continue;
			}
			if (comment._obj() == null || comment._obj().cmo() == null) {
				$.ig.ExcelUtils.prototype.debugFail("The note shape does not contain obj records.");
				continue;
			}
			if (comment._obj().cmo().id() != objId) {
				continue;
			}
			comment.author(author._unformattedString());
			comment._noteOptionFlags(optionFlags);
			row._setCellCommentInternal(columnIndex, comment);
			loadManager._loadedComments().removeAt(i);
			return;
		}
		$.ig.ExcelUtils.prototype.debugFail("The comment with the specified object ID could not be found.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var cell = saveManager._contextStack().get$1($.ig.excel.WorksheetCell.prototype.$type);
		if ($.ig.excel.WorksheetCell.prototype.l_op_Equality(cell, null)) {
			$.ig.ExcelUtils.prototype.debugFail("There is no cell in the context stack.");
			return;
		}
		if (cell.worksheet() == null) {
			$.ig.ExcelUtils.prototype.debugFail("This is unexpected");
			return;
		}
		if (cell.comment() == null) {
			$.ig.ExcelUtils.prototype.debugFail("The cell does not contain a note.");
			return;
		}
		if (cell.comment()._obj() == null && cell.comment()._obj().cmo() == null) {
			$.ig.ExcelUtils.prototype.debugFail("The note shape does not contain obj records.");
			return;
		}
		saveManager._currentRecordStream()._write17(cell.rowIndex());
		saveManager._currentRecordStream()._write17(cell.columnIndex());
		saveManager._currentRecordStream()._write17(cell.comment()._noteOptionFlags());
		saveManager._currentRecordStream()._write17(cell.comment()._obj().cmo().id());
		saveManager._currentRecordStream()._write15(cell.comment().author(), $.ig.LengthType.prototype.sixteenBit);
		if (saveManager._currentRecordStream().length() % 2 == 0) {
			saveManager._currentRecordStream()._write9(0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.nOTE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord::Type()" />*/
	,
	$type: new $.ig.Type('NOTERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NOTERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord" />*/

$.ig.util.defType('NUMBERRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		cellValue = (function () { var $ret = loadManager._currentRecordStream().readDoubleFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		lastCalculatedCellValue = cellValue;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		initialData.write($.ig.BitConverter.prototype.getBytes2($.ig.Convert.prototype.toDouble4(saveManager._currentCellContext().value(), saveManager._workbook()._cultureResolved())), 0, 8);
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.nUMBER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord::Type()" />*/
	,
	$type: new $.ig.Type('NUMBERRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.NUMBERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord" />*/

$.ig.util.defType('OBJPROTECTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the Worksheet on the context stack");
			return;
		}
		worksheet.protection().allowEditObjects((loadManager._currentRecordStream()._readUInt16() != 1));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the Worksheet on the context stack");
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert(worksheet.protection().allowEditObjects() == false, "This is only meant to be used when objects are protected.");
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(worksheet.protection().allowEditObjects() == false));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.oBJPROTECT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord::Type()" />*/
	,
	$type: new $.ig.Type('OBJPROTECTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJPROTECTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord" />*/

$.ig.util.defType('OBJRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugFail("We should never get in here, OBJ records are handled by the ClientData Escher record");
		var obj = new $.ig.Obj(0);
		$.ig.ObjExtensionMethods.prototype.loadObj(obj, loadManager);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.oBJ;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord::Type()" />*/
	,
	$type: new $.ig.Type('OBJRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBJRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord" />*/

$.ig.util.defType('OBPROJRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugAssert(loadManager._currentRecordStream().length() == 0, "The OBPROJ record isn't expected to have data.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.oBPROJ;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord::Type()" />*/
	,
	$type: new $.ig.Type('OBPROJRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OBPROJRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord" />*/

$.ig.util.defType('OLESIZERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var wb = loadManager._contextStack().get$1($.ig.excel.Workbook.prototype.$type);
		var recordStream = loadManager._currentRecordStream();
		var data = new Array(0);
		var dataIndex = 0;
		var reserved = (function () { var $ret = recordStream._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var rwFirst = (function () { var $ret = recordStream._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var rwLast = (function () { var $ret = recordStream._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var colFirst = (function () { var $ret = recordStream.readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var colLast = (function () { var $ret = recordStream.readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		if (rwFirst == 0 && rwLast == 16383) {
			rwLast = 65535;
		}
		wb._oleSize($.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, new $.ig.WorksheetRegionAddress(1, rwFirst, rwLast, colFirst, colLast)));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("We don't support serializing this record yet.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.oLESIZE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord::Type()" />*/
	,
	$type: new $.ig.Type('OLESIZERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.OLESIZERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord" />*/

$.ig.util.defType('PAGELAYOUTINFORecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var repeatedRecordType = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(repeatedRecordType == this.type(), null);
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readBytes(8);
		var magnificationInPageLayoutView = loadManager._currentRecordStream()._readUInt16();
		if (magnificationInPageLayoutView == 0) {
			magnificationInPageLayoutView = $.ig.excel.DisplayOptions.prototype._defaultMagnificationInPageLayoutView;
		}
		var $ret = $.ig.ExcelUtils.prototype.ensureMagnificationIsValid(magnificationInPageLayoutView);
		magnificationInPageLayoutView = $ret.p0;
		worksheet.displayOptions().magnificationInPageLayoutView(magnificationInPageLayoutView);
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var displayInPageLayout = (optionFlags & 1) == 1;
		worksheet.displayOptions().showRulerInPageLayoutView((optionFlags & 2) == 2);
		worksheet.displayOptions().showWhitespaceInPageLayoutView((optionFlags & 4) != 4);
		if (displayInPageLayout) {
			worksheet.displayOptions().view($.ig.excel.WorksheetView.pageLayout);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(this.type());
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write2(new Array(8));
		saveManager._currentRecordStream()._write17(worksheet.displayOptions().magnificationInPageLayoutView());
		var optionFlags = 0;
		if (worksheet.displayOptions().view() == $.ig.excel.WorksheetView.pageLayout) {
			optionFlags |= 1;
		}
		if (worksheet.displayOptions().showRulerInPageLayoutView()) {
			optionFlags |= 2;
		}
		if (worksheet.displayOptions().showWhitespaceInPageLayoutView() == false) {
			optionFlags |= 4;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pAGELAYOUTINFO;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord::Type()" />*/
	,
	$type: new $.ig.Type('PAGELAYOUTINFORecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PAGELAYOUTINFORecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord" />*/

$.ig.util.defType('PALETTERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var palette = loadManager._workbook().palette();
		var count = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(count == 0 || count == $.ig.excel.WorkbookColorPalette.prototype._userPaletteSize, "This is unexpected");
		count = Math.min(count, $.ig.excel.WorkbookColorPalette.prototype._userPaletteSize);
		for (var i = 0; i < count; i++) {
			var r = loadManager._currentRecordStream().readByte();
			var g = loadManager._currentRecordStream().readByte();
			var b = loadManager._currentRecordStream().readByte();
			loadManager._currentRecordStream().readByte();
			palette._item$i(i, $.ig.ExcelUtils.prototype.colorFromArgb(r, g, b));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var palette = saveManager._workbook().palette();
		saveManager._currentRecordStream()._write17($.ig.excel.WorkbookColorPalette.prototype._userPaletteSize);
		for (var i = 0; i < $.ig.excel.WorkbookColorPalette.prototype._userPaletteSize; i++) {
			var color = palette._item$i(i);
			saveManager._currentRecordStream()._write9(color.r());
			saveManager._currentRecordStream()._write9(color.g());
			saveManager._currentRecordStream()._write9(color.b());
			saveManager._currentRecordStream()._write9(0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pALETTE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord::Type()" />*/
	,
	$type: new $.ig.Type('PALETTERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PALETTERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord" />*/

$.ig.util.defType('PANERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var horizontalSplitPosition = loadManager._currentRecordStream()._readUInt16();
		var verticalSplitPosition = loadManager._currentRecordStream()._readUInt16();
		var topRowVisibleInBottom = loadManager._currentRecordStream()._readUInt16();
		var leftColumnVisibleInRight = loadManager._currentRecordStream()._readUInt16();
		var activePane = loadManager._currentRecordStream()._readUInt16();
		worksheet.displayOptions()._activePane(activePane);
		if (worksheet.displayOptions().panesAreFrozen()) {
			if (horizontalSplitPosition > 0) {
				worksheet.displayOptions().unfrozenPaneSettings().firstColumnInLeftPane(worksheet.displayOptions().frozenPaneSettings().firstColumnInRightPane());
				worksheet.displayOptions().frozenPaneSettings().firstColumnInRightPane(leftColumnVisibleInRight);
			}
			if (verticalSplitPosition > 0) {
				worksheet.displayOptions().unfrozenPaneSettings().firstRowInTopPane(worksheet.displayOptions().frozenPaneSettings().firstRowInBottomPane());
				worksheet.displayOptions().frozenPaneSettings().firstRowInBottomPane(topRowVisibleInBottom);
			}
			worksheet.displayOptions().frozenPaneSettings().frozenColumns(horizontalSplitPosition);
			worksheet.displayOptions().frozenPaneSettings().frozenRows(verticalSplitPosition);
		} else {
			if (horizontalSplitPosition > 0) {
				worksheet.displayOptions().unfrozenPaneSettings().firstColumnInLeftPane(worksheet.displayOptions().unfrozenPaneSettings().firstColumnInRightPane());
				worksheet.displayOptions().unfrozenPaneSettings().firstColumnInRightPane(leftColumnVisibleInRight);
			}
			if (verticalSplitPosition > 0) {
				worksheet.displayOptions().unfrozenPaneSettings().firstRowInTopPane(worksheet.displayOptions().unfrozenPaneSettings().firstRowInBottomPane());
				worksheet.displayOptions().unfrozenPaneSettings().firstRowInBottomPane(topRowVisibleInBottom);
			}
			worksheet.displayOptions().unfrozenPaneSettings().leftPaneWidth(horizontalSplitPosition);
			worksheet.displayOptions().unfrozenPaneSettings().topPaneHeight(verticalSplitPosition);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		worksheet.displayOptions()._verifySelectionInfo();
		if (worksheet.displayOptions().panesAreFrozen()) {
			var frozenRows = worksheet.displayOptions().frozenPaneSettings().frozenRows();
			var frozenColumns = worksheet.displayOptions().frozenPaneSettings().frozenColumns();
			saveManager._currentRecordStream()._write17(frozenColumns);
			saveManager._currentRecordStream()._write17(frozenRows);
			if (worksheet.displayOptions().frozenPaneSettings().frozenRows() > 0) {
				var firstRowInBottomPane = Math.max(frozenRows, worksheet.displayOptions().frozenPaneSettings().firstRowInBottomPane());
				saveManager._currentRecordStream()._write17(firstRowInBottomPane);
			} else {
				saveManager._currentRecordStream()._write17(0);
			}
			if (worksheet.displayOptions().frozenPaneSettings().frozenColumns() > 0) {
				var firstColumnInRightPane = Math.max(frozenColumns, worksheet.displayOptions().frozenPaneSettings().firstColumnInRightPane());
				saveManager._currentRecordStream()._write17(firstColumnInRightPane);
			} else {
				saveManager._currentRecordStream()._write17(0);
			}
		} else {
			var leftPaneWidth = worksheet.displayOptions().unfrozenPaneSettings().leftPaneWidth();
			var topPaneHeight = worksheet.displayOptions().unfrozenPaneSettings().topPaneHeight();
			saveManager._currentRecordStream()._write17(leftPaneWidth);
			saveManager._currentRecordStream()._write17(topPaneHeight);
			if (topPaneHeight > 0) {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstRowInBottomPane());
			} else {
				saveManager._currentRecordStream()._write17(0);
			}
			if (leftPaneWidth > 0) {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstColumnInRightPane());
			} else {
				saveManager._currentRecordStream()._write17(0);
			}
		}
		saveManager._currentRecordStream()._write17(worksheet.displayOptions()._activePane());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pANE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord::Type()" />*/
	,
	$type: new $.ig.Type('PANERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PANERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord" />*/

$.ig.util.defType('PASSWORDRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var passwordValue = loadManager._currentRecordStream()._readUInt16();
		if (passwordValue == 0) {
			return;
		}
		var validationInfo = $.ig.ProtectionValidationInfo.prototype.create1(passwordValue);
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			loadManager._workbook().protection().__passwordInfo.pendingValidationInfo(validationInfo);
			return;
		}
		worksheet.protection().__passwordInfo.pendingValidationInfo(validationInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		var passwordValue;
		if (worksheet == null) {
			passwordValue = (function ($t) { return !$.ig.util.nullableIsNull($t) ? $t.value() : 0; }(saveManager._workbook().protection().__passwordInfo.getXorPasswordValue()));
		} else {
			passwordValue = (function ($t) { return !$.ig.util.nullableIsNull($t) ? $t.value() : 0; }(worksheet.protection().__passwordInfo.getXorPasswordValue()));
			if (passwordValue == 0) {
				return;
			}
		}
		saveManager._currentRecordStream()._write17(passwordValue);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pASSWORD;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord::Type()" />*/
	,
	$type: new $.ig.Type('PASSWORDRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PASSWORDRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord" />*/

$.ig.util.defType('PLSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("This has not been implemented yet.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pLS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord::Type()" />*/
	,
	$type: new $.ig.Type('PLSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PLSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord" />*/

$.ig.util.defType('PRECISIONRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().precision(loadManager._currentRecordStream()._readUInt16());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(saveManager._workbook().precision());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pRECISION;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord::Type()" />*/
	,
	$type: new $.ig.Type('PRECISIONRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRECISIONRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord" />*/

$.ig.util.defType('PRINTGRIDLINESRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		worksheet.printOptions().printGridlines($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(worksheet.printOptions().printGridlines()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pRINTGRIDLINES;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord::Type()" />*/
	,
	$type: new $.ig.Type('PRINTGRIDLINESRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTGRIDLINESRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord" />*/

$.ig.util.defType('PRINTHEADERSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		worksheet.printOptions().printRowAndColumnHeaders($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(worksheet.printOptions().printRowAndColumnHeaders()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pRINTHEADERS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord::Type()" />*/
	,
	$type: new $.ig.Type('PRINTHEADERSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PRINTHEADERSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord" />*/

$.ig.util.defType('PROT4REVPASSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt16();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pROT4REVPASS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord::Type()" />*/
	,
	$type: new $.ig.Type('PROT4REVPASSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVPASSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord" />*/

$.ig.util.defType('PROT4REVRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt16();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pROT4REV;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord::Type()" />*/
	,
	$type: new $.ig.Type('PROT4REVRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROT4REVRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord" />*/

$.ig.util.defType('PROTECTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var isProtected = loadManager._currentRecordStream()._readUInt16() == 1;
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet != null) {
			worksheet.protection().__passwordInfo.initializeIsProtected(isProtected);
		} else {
			loadManager._workbook().protection().allowEditStructure(isProtected == false);
			loadManager._workbook().protection().__passwordInfo.initializeIsProtected(isProtected || loadManager._workbook().isProtected());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var isProtected;
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet != null) {
			isProtected = worksheet.isProtected();
			$.ig.ExcelUtils.prototype.debugAssert(isProtected, "This record should not be written out for a worksheet that isn't protected.");
		} else {
			isProtected = saveManager._workbook().isProtected() && saveManager._workbook().protection().allowEditStructure() == false;
		}
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(isProtected));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.pROTECT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord::Type()" />*/
	,
	$type: new $.ig.Type('PROTECTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.PROTECTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord" />*/

$.ig.util.defType('RECALCIDRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var repeatedType = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(repeatedType == this.type(), null);
		var mustBeZero = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(mustBeZero == 0, null);
		loadManager._currentRecordStream()._readUInt32();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("The RECALCID record should never be written out, and it should be ignored when read.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rECALCID;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord::Type()" />*/
	,
	$type: new $.ig.Type('RECALCIDRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RECALCIDRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord" />*/

$.ig.util.defType('REFMODERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().cellReferenceMode(loadManager._currentRecordStream()._readUInt16());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(saveManager._workbook().cellReferenceMode());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rEFMODE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord::Type()" />*/
	,
	$type: new $.ig.Type('REFMODERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFMODERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord" />*/

$.ig.util.defType('REFRESHALLRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook()._refreshAll($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(saveManager._workbook()._refreshAll()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rEFRESHALL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord::Type()" />*/
	,
	$type: new $.ig.Type('REFRESHALLRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.REFRESHALLRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord" />*/

$.ig.util.defType('RIGHTMARGINRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		printOptions.rightMargin(loadManager._currentRecordStream()._readDouble());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write10(printOptions.rightMargin());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rIGHTMARGIN;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord::Type()" />*/
	,
	$type: new $.ig.Type('RIGHTMARGINRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RIGHTMARGINRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord" />*/

$.ig.util.defType('RKRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		cellValue = $.ig.ExcelUtils.prototype.decodeRKValue((function () { var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }()));
		lastCalculatedCellValue = cellValue;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		var rkValue = 0;
		if ((function () { var $ret = $.ig.ExcelUtils.prototype.tryEncodeRKValue($.ig.Convert.prototype.toDouble4(saveManager._currentCellContext().value(), saveManager._workbook()._cultureResolved()), rkValue); rkValue = $ret.p1; return $ret.ret; }()) == false) {
			$.ig.ExcelUtils.prototype.debugFail("This should not have happened");
		}
		initialData.write($.ig.BitConverter.prototype.getBytes8(rkValue), 0, 4);
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rK;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord::Type()" />*/
	,
	$type: new $.ig.Type('RKRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RKRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord" />*/

$.ig.util.defType('ROWRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var rowNumber = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var row = worksheet.rows().item(rowNumber);
		loadManager._onRowLoaded(row);
		dataIndex += 4;
		var heightStruct = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		dataIndex += 4;
		var optionFlags = (function () { var $ret = loadManager._currentRecordStream()._readUInt32FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		row.outlineLevel((optionFlags & 7));
		var hidden = (optionFlags & 32) == 32;
		var nonDefaultHeight = (optionFlags & 64) == 64;
		var hasFormat = (optionFlags & 128) == 128;
		var formatIndex = ((optionFlags & 268369920) >>> 16);
		row._hasThickTop((optionFlags & 268435456) == 268435456);
		row._hasThickBottom((optionFlags & 536870912) == 536870912);
		if (nonDefaultHeight) {
			row.height(heightStruct);
		} else if (worksheet._hasCustomDefaultRowHeight()) {
			row._heightInternal(heightStruct);
		}
		row.hidden(hidden);
		if (hasFormat == false) {
			return;
		}
		var format = loadManager._formats().__inner[formatIndex];
		if (format._equalsInternal(loadManager._workbook()._cellFormats()._defaultElement()) == false) {
			row.cellFormat().setFormatting(format);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var row = saveManager._contextStack().get$1($.ig.excel.WorksheetRow.prototype.$type);
		if (row == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no row in the context stack.");
			return;
		}
		var rowCache = saveManager._getSerializationCache(row);
		if (rowCache == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetRowSerializationCachein the context stack.");
			return;
		}
		var memoryStream = new $.ig.MemoryStream(1, 16);
		memoryStream.write($.ig.BitConverter.prototype.getBytes7(row.index()), 0, 2);
		memoryStream.write($.ig.BitConverter.prototype.getBytes7(rowCache._firstCell), 0, 2);
		memoryStream.write($.ig.BitConverter.prototype.getBytes7(rowCache._firstCellInUndefinedTail), 0, 2);
		var rowHeight = row._heightInternal() < 0 ? rowHeight = row.worksheet().defaultRowHeight() : rowHeight = row._heightInternal();
		memoryStream.write($.ig.BitConverter.prototype.getBytes7(rowHeight), 0, 2);
		memoryStream.write($.ig.BitConverter.prototype.getBytes8($.ig.util.intSToU(0)), 0, 4);
		var optionFlags = 256;
		optionFlags = $.ig.util.u32BitwiseOr(optionFlags, $.ig.util.intSToU(row.outlineLevel()));
		if (rowCache._hasCollapseIndicator) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 16);
		}
		if (row.hidden()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 32);
		}
		var defaultFormat = saveManager._workbook()._cellFormats()._defaultElement();
		var rowFormat = row._hasCellFormat() ? row._cellFormatInternal().element() : defaultFormat;
		if (row._hasCustomHeight()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 64);
		}
		var formatIndex = saveManager._getCellFormatIndex(rowFormat);
		if (formatIndex < 0) {
			$.ig.ExcelUtils.prototype.debugFail("Unknown format index");
			formatIndex = 0;
		}
		if (rowFormat._equalsInternal(defaultFormat) == false) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 128);
		}
		optionFlags = $.ig.util.u32BitwiseOr(optionFlags, $.ig.util.u32LS($.ig.util.intSToU(formatIndex), 16));
		if (row._hasThickTop()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 268435456);
		}
		if (row._hasThickBottom()) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 536870912);
		}
		memoryStream.write($.ig.BitConverter.prototype.getBytes8(optionFlags), 0, 4);
		saveManager._currentRecordStream()._write13(memoryStream);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rOW;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord::Type()" />*/
	,
	$type: new $.ig.Type('ROWRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.ROWRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord" />*/

$.ig.util.defType('RSTRINGRecord', 'CellValueRecordBase', {
	init: function () {
		$.ig.CellValueRecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	loadCellValue: function (loadManager, data, dataIndex, cellValue, lastCalculatedCellValue) {
		var recordStream = loadManager._currentRecordStream();
		var stringElement = (function () { var $ret = recordStream.readFormattedStringFromBuffer($.ig.LengthType.prototype.sixteenBit, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
		var formattedStringElement = $.ig.util.cast($.ig.FormattedStringElement.prototype.$type, stringElement);
		$.ig.ExcelUtils.prototype.debugAssert(formattedStringElement == null, "The helper method should have thought we didn't have formatting for RString.");
		if (formattedStringElement == null) {
			var formattedRunCount = (function () { var $ret = recordStream._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
			formattedStringElement = $.ig.FormattedStringElement.prototype._create(stringElement);
			var $ret = recordStream._readFormattingRunsFromBuffer(formattedStringElement, formattedRunCount, data, dataIndex);
			data = $ret.p2;
			dataIndex = $ret.p3;
		}
		cellValue = new $.ig.excel.FormattedString(loadManager._workbook(), formattedStringElement);
		lastCalculatedCellValue = cellValue;
		return {
			p1: data,
			p2: dataIndex,
			p3: cellValue,
			p4: lastCalculatedCellValue
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord::LoadCellValue(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, , System.Int32, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	saveCellValue: function (saveManager, initialData) {
		$.ig.ExcelUtils.prototype.debugFail("We should not be serializing this record type, it has been replaced by LABELSST.");
		saveManager._currentRecordStream()._write13(initialData);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord::SaveCellValue(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.IO.MemoryStream)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.rSTRING;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord::Type()" />*/
	,
	$type: new $.ig.Type('RSTRINGRecord', $.ig.CellValueRecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.RSTRINGRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord" />*/

$.ig.util.defType('SAVERECALCRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook().recalculateBeforeSave($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(saveManager._workbook().recalculateBeforeSave()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sAVERECALC;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord::Type()" />*/
	,
	$type: new $.ig.Type('SAVERECALCRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SAVERECALCRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord" />*/

$.ig.util.defType('SCENPROTECTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the Worksheet on the context stack");
			return;
		}
		worksheet.protection().allowEditScenarios((loadManager._currentRecordStream()._readUInt16() != 1));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the Worksheet on the context stack");
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert(worksheet.protection().allowEditScenarios() == false, "This is only meant to be used when scenarios are protected.");
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(worksheet.protection().allowEditScenarios() == false));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sCENPROTECT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord::Type()" />*/
	,
	$type: new $.ig.Type('SCENPROTECTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCENPROTECTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord" />*/

$.ig.util.defType('SCLRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var numerator = loadManager._currentRecordStream()._readUInt16();
		var denominator = loadManager._currentRecordStream()._readUInt16();
		var magnification = $.ig.truncate(((numerator / denominator) * 100));
		var $ret = $.ig.ExcelUtils.prototype.ensureMagnificationIsValid(magnification);
		magnification = $ret.p0;
		if (worksheet.displayOptions().view() == $.ig.excel.WorksheetView.normal) {
			$.ig.ExcelUtils.prototype.debugAssert(worksheet.displayOptions().magnificationInNormalView() == magnification, null);
			worksheet.displayOptions().magnificationInNormalView(magnification);
		} else if (worksheet.displayOptions().view() == $.ig.excel.WorksheetView.pageBreakPreview) {
			$.ig.ExcelUtils.prototype.debugAssert(worksheet.displayOptions().magnificationInPageBreakView() == magnification, null);
			worksheet.displayOptions().magnificationInPageBreakView(magnification);
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(worksheet.displayOptions().magnificationInPageLayoutView() == magnification, null);
			worksheet.displayOptions().magnificationInPageLayoutView(magnification);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var magnification;
		if (worksheet.displayOptions().view() == $.ig.excel.WorksheetView.normal) {
			magnification = worksheet.displayOptions().magnificationInNormalView();
		} else if (worksheet.displayOptions().view() == $.ig.excel.WorksheetView.pageBreakPreview) {
			magnification = worksheet.displayOptions().magnificationInPageBreakView();
		} else {
			magnification = worksheet.displayOptions().magnificationInPageLayoutView();
		}
		var numerator = magnification;
		var denominator = 100;
		var $ret = $.ig.ExcelUtils.prototype.reduceFraction(numerator, denominator);
		numerator = $ret.p0;
		denominator = $ret.p1;
		saveManager._currentRecordStream()._write17(numerator);
		saveManager._currentRecordStream()._write17(denominator);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sCL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord::Type()" />*/
	,
	$type: new $.ig.Type('SCLRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SCLRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord" />*/

$.ig.util.defType('SELECTIONRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var displayOptions = loadManager._contextStack().get$1($.ig.excel.DisplayOptions.prototype.$type);
		var paneSelection = new $.ig.WorksheetPaneSelection();
		paneSelection.location(loadManager._currentRecordStream().readByte());
		var activeCellRow = loadManager._currentRecordStream()._readUInt16();
		var activeCellCol = loadManager._currentRecordStream()._readUInt16();
		paneSelection.activeCell(new $.ig.WorksheetCellAddress(1, activeCellRow, activeCellCol));
		paneSelection.activeCellRangesId(loadManager._currentRecordStream()._readUInt16());
		var selectionRanges = loadManager._currentRecordStream()._readUInt16();
		for (var i = 0; i < selectionRanges; i++) {
			var firstRow = loadManager._currentRecordStream()._readUInt16();
			var lastRow = loadManager._currentRecordStream()._readUInt16();
			var firstCol = loadManager._currentRecordStream().readByte();
			var lastCol = loadManager._currentRecordStream().readByte();
			if (firstRow == 0 && lastRow == 16383) {
				lastRow = 65535;
			}
			paneSelection.ranges().add(new $.ig.WorksheetRegionAddress(1, firstRow, lastRow, firstCol, lastCol));
		}
		displayOptions._selection().paneSelections().add(paneSelection);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var paneSelection = saveManager._contextStack().get$1($.ig.WorksheetPaneSelection.prototype.$type) || $.ig.WorksheetPaneSelection.prototype.createDefault($.ig.PaneLocation.prototype.topLeft);
		saveManager._currentRecordStream()._write9(paneSelection.location());
		saveManager._currentRecordStream()._write17(paneSelection.activeCell().rowIndex());
		saveManager._currentRecordStream()._write17(paneSelection.activeCell().columnIndex());
		saveManager._currentRecordStream()._write17(paneSelection.activeCellRangesId());
		saveManager._currentRecordStream()._write17(paneSelection.ranges().count());
		var en = paneSelection.ranges().getEnumerator();
		while (en.moveNext()) {
			var range = en.current();
			saveManager._currentRecordStream()._write17(range._firstRowIndex());
			saveManager._currentRecordStream()._write17(range._lastRowIndex());
			saveManager._currentRecordStream()._write9(range._firstColumnIndex());
			saveManager._currentRecordStream()._write9(range._lastColumnIndex());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sELECTION;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord::Type()" />*/
	,
	$type: new $.ig.Type('SELECTIONRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SELECTIONRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord" />*/

$.ig.util.defType('SETUPRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		var paperSize = loadManager._currentRecordStream()._readUInt16();
		var scalingFactor = loadManager._currentRecordStream()._readUInt16();
		printOptions.startPageNumber(loadManager._currentRecordStream()._readInt16());
		printOptions.maxPagesHorizontally(loadManager._currentRecordStream()._readUInt16());
		printOptions.maxPagesVertically(loadManager._currentRecordStream()._readUInt16());
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var resolution = loadManager._currentRecordStream()._readUInt16();
		var verticalResolution = loadManager._currentRecordStream()._readUInt16();
		printOptions.headerMargin(loadManager._currentRecordStream()._readDouble());
		printOptions.footerMargin(loadManager._currentRecordStream()._readDouble());
		var numberOfCopies = loadManager._currentRecordStream()._readUInt16();
		printOptions.pageOrder((optionFlags & 1));
		var orientation = ((optionFlags & 2) >> 1);
		var propsNotValid = (optionFlags & 4) == 4;
		printOptions.printInBlackAndWhite((optionFlags & 8) == 8);
		printOptions.draftQuality((optionFlags & 16) == 16);
		var printNotes = (optionFlags & 32) == 32;
		var orientationNotValid = (optionFlags & 64) == 64;
		printOptions.pageNumbering(((optionFlags & 128) >> 7));
		var printNotesAtEndOfSheet = (optionFlags & 512) == 512;
		printOptions.printErrors(((optionFlags & 3072) >> 10));
		if (propsNotValid) {
			paperSize = $.ig.excel.PaperSize.letter;
			scalingFactor = 100;
			orientation = $.ig.excel.Orientation.portrait;
			resolution = 600;
			verticalResolution = 600;
			numberOfCopies = 1;
		} else if (orientationNotValid) {
			orientation = $.ig.excel.Orientation.portrait;
		}
		if ($.ig.Enum.prototype.isDefined($.ig.excel.PaperSize.prototype.$type, $.ig.excel.PaperSize.prototype.getBox(paperSize)) == false) {
			$.ig.ExcelUtils.prototype.debugFail("Unknown PaperSize loaded: " + $.ig.excel.PaperSize.prototype.getBox(paperSize));
			paperSize = $.ig.excel.PaperSize.letter;
		}
		printOptions.paperSize(paperSize);
		printOptions._setScalingFactor(scalingFactor, false);
		printOptions.resolution(resolution);
		printOptions.verticalResolution(verticalResolution);
		printOptions.numberOfCopies(numberOfCopies);
		printOptions.orientation(orientation);
		if (printNotes) {
			if (printNotesAtEndOfSheet) {
				printOptions.printNotes($.ig.excel.PrintNotes.printAtEndOfSheet);
			} else {
				printOptions.printNotes($.ig.excel.PrintNotes.printAsDisplayed);
			}
		} else {
			printOptions.printNotes($.ig.excel.PrintNotes.dontPrint);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(printOptions.paperSize());
		saveManager._currentRecordStream()._write17(printOptions.scalingFactor());
		saveManager._currentRecordStream()._write17(printOptions.startPageNumber());
		saveManager._currentRecordStream()._write17(printOptions.maxPagesHorizontally());
		saveManager._currentRecordStream()._write17(printOptions.maxPagesVertically());
		var optionFlags = 0;
		optionFlags |= printOptions.pageOrder();
		optionFlags |= (printOptions.orientationResolved() << 1);
		if (printOptions.printInBlackAndWhite()) {
			optionFlags |= 8;
		}
		if (printOptions.draftQuality()) {
			optionFlags |= 16;
		}
		if (printOptions.printNotes() != $.ig.excel.PrintNotes.dontPrint) {
			optionFlags |= 32;
		}
		optionFlags |= (printOptions.pageNumbering() << 7);
		if (printOptions.printNotes() == $.ig.excel.PrintNotes.printAtEndOfSheet) {
			optionFlags |= 512;
		}
		optionFlags |= (printOptions.printErrors() << 10);
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(printOptions.resolution());
		saveManager._currentRecordStream()._write17(printOptions.verticalResolution());
		saveManager._currentRecordStream()._write10(printOptions.headerMargin());
		saveManager._currentRecordStream()._write10(printOptions.footerMargin());
		saveManager._currentRecordStream()._write17(printOptions.numberOfCopies());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sETUP;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord::Type()" />*/
	,
	$type: new $.ig.Type('SETUPRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SETUPRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord" />*/

$.ig.util.defType('SHEETEXTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		loadManager._currentRecordStream()._readFrtHeader();
		var cb = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(cb == loadManager._currentRecordStream().length(), null);
		var rgbShxData = loadManager._currentRecordStream()._readUInt32();
		var icvPlain = $.ig.ExcelUtils.prototype.getBits3(rgbShxData, 0, 6);
		if (cb < $.ig.SHEETEXTRecord.prototype._sHEETEXTRecordSize) {
			worksheet.displayOptions().tabColorInfo(new $.ig.excel.WorkbookColorInfo(loadManager._workbook(), icvPlain));
		} else {
			$.ig.ExcelUtils.prototype.debugAssert(cb == $.ig.SHEETEXTRecord.prototype._sHEETEXTRecordSize, "There is now more information in the SHEETEXT record. Try to load it.");
			var temp = loadManager._currentRecordStream()._readUInt32();
			var icvPlain12 = $.ig.ExcelUtils.prototype.getBits3(temp, 0, 6);
			var fCondFmtCalc = $.ig.ExcelUtils.prototype.testBit1(temp, 7);
			var fNotPublished = $.ig.ExcelUtils.prototype.testBit1(temp, 8);
			$.ig.ExcelUtils.prototype.debugAssert(icvPlain12 == icvPlain, "The indexes do not match.");
			worksheet.displayOptions().tabColorInfo(loadManager._currentRecordStream()._readCFColor());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write18($.ig.SHEETEXTRecord.prototype._sHEETEXTRecordSize);
		var tabColorInfo = worksheet.displayOptions().tabColorInfo();
		var icvPlain = tabColorInfo._getIndex(saveManager._workbook(), $.ig.ColorableItem.prototype.worksheetTab);
		saveManager._currentRecordStream()._write12(icvPlain);
		var temp = 0;
		var $ret = $.ig.ExcelUtils.prototype.addBits2(temp, icvPlain, 0, 6);
		temp = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit4(temp, true, 7);
		temp = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit4(temp, false, 8);
		temp = $ret2.p0;
		saveManager._currentRecordStream()._write18(temp);
		saveManager._currentRecordStream()._writeCFColor(tabColorInfo, $.ig.ColorableItem.prototype.worksheetTab);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sHEETEXT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord::Type()" />*/
	,
	$type: new $.ig.Type('SHEETEXTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord" />*/

$.ig.util.defType('SHRFMLARecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var data = new Array(0);
		var dataIndex = 0;
		var firstRow = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lastRow = (function () { var $ret = loadManager._currentRecordStream()._readUInt16FromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var firstColumn = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var lastColumn = (function () { var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex); data = $ret.p0; dataIndex = $ret.p1; return $ret.ret; }());
		var $ret = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex);
		data = $ret.p0;
		dataIndex = $ret.p1;
		var $ret1 = loadManager._currentRecordStream().readByteFromBuffer(data, dataIndex);
		data = $ret1.p0;
		dataIndex = $ret1.p1;
		var formula = (function () { var $ret = loadManager._loadFormula($.ig.FormulaType.prototype.sharedFormula, data, dataIndex); data = $ret.p1; dataIndex = $ret.p2; return $ret.ret; }());
		worksheet._onSharedFormulaApplied(formula, worksheet._getCachedRegion1(firstRow, firstColumn, lastRow, lastColumn));
		var sourceCellRow = worksheet.rows().item(firstRow);
		loadManager._sharedFormulasInCurrentWorksheet().item(new $.ig.WorksheetCellAddress(1, firstRow, firstColumn), formula);
		var pendingSharedFormulaRoots = new $.ig.List$1($.ig.KeyValuePair$2.prototype.$type.specialize($.ig.WorksheetCellAddress.prototype.$type, $.ig.excel.ExcelCalcValue.prototype.$type), 1, loadManager._pendingSharedFormulaRoots());
		var en = pendingSharedFormulaRoots.getEnumerator();
		while (en.moveNext()) {
			var pair = en.current();
			var cellAddress = pair.key();
			var lastCalculatedValue = pair.value();
			var rowIndex = cellAddress.rowIndex();
			var columnIndex = cellAddress.columnIndex();
			if (firstRow <= rowIndex && rowIndex <= lastRow && firstColumn <= columnIndex && columnIndex <= lastColumn) {
				loadManager._pendingSharedFormulaRoots().remove(cellAddress);
				var row = worksheet.rows().item(rowIndex);
				formula._applyTo4(row, columnIndex);
				row._setCachedCalculatedValue(columnIndex, lastCalculatedValue);
				var appliedFormula = row._getCellFormulaInternal(columnIndex);
				loadManager._sharedFormulasInCurrentWorksheet().item(new $.ig.WorksheetCellAddress(1, rowIndex, columnIndex), appliedFormula);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var cellContext = saveManager._currentCellContext();
		var formula = $.ig.ExcelUtils.prototype.formulaFromCellValueRaw(cellContext.value());
		if (formula == null) {
			$.ig.ExcelUtils.prototype.debugFail("Incorrect cell value type");
			return;
		}
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var sharedFormulaRegion = worksheet._getSharedFormulaRegion(formula);
		saveManager._currentRecordStream()._writeRefU(sharedFormulaRegion);
		saveManager._currentRecordStream().writeByte(0);
		saveManager._currentRecordStream().writeByte((sharedFormulaRegion._height() * sharedFormulaRegion._width()));
		saveManager._saveFormula(formula, true, false, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sHRFMLA;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord::Type()" />*/
	,
	$type: new $.ig.Type('SHRFMLARecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHRFMLARecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record" />*/

$.ig.util.defType('SORTDATA12Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		loadManager._currentRecordStream()._readFrtHeader();
		var temp16 = loadManager._currentRecordStream()._readUInt16();
		var fCol = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		var fCaseSensitive = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		var fAltMethod = $.ig.ExcelUtils.prototype.testBit(temp16, 2);
		var sfp = $.ig.ExcelUtils.prototype.getBits2(temp16, 3, 5);
		if (sfp != 1) {
			$.ig.ExcelUtils.prototype.debugFail("Sort conditions are only supported on tables currently.");
			return;
		}
		var rfx = loadManager._currentRecordStream()._readRFX(worksheet);
		var cconditions = loadManager._currentRecordStream()._readUInt32();
		var idParent = loadManager._currentRecordStream()._readUInt32();
		var table = worksheet.tables()._getTableById(idParent);
		if (table == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the table.");
			return;
		}
		$.ig.ExcelUtils.prototype.debugAssert(table._sortAndHeadersRegion().equals(rfx), "Something is wrong here.");
		table.sortSettings().caseSensitive(fCaseSensitive);
		table.sortSettings()._sortMethod((fAltMethod || loadManager._workbook()._cultureResolved().name() == "zh-TW") ? $.ig.SortMethod.prototype.stroke : $.ig.SortMethod.prototype.pinYin);
		for (var i = 0; i < cconditions; i++) {
			loadManager._currentRecordStream()._readSortCond12(table);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var table = saveManager._contextStack().get$1($.ig.excel.WorksheetTable.prototype.$type);
		if (table == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetTable in the context stack.");
			return;
		}
		var sortSettings = table.sortSettings();
		saveManager._currentRecordStream()._writeFrtHeader();
		var sfp = 1;
		var fAltMethod = table.sortSettings()._hasAlternateSortMethod();
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, false, 0);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, sortSettings.caseSensitive(), 1);
		temp16 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAltMethod, 2);
		temp16 = $ret2.p0;
		var $ret3 = $.ig.ExcelUtils.prototype.addBits1(temp16, sfp, 3, 5);
		temp16 = $ret3.p0;
		saveManager._currentRecordStream()._write17(temp16);
		saveManager._currentRecordStream()._writeRFX(table._sortAndHeadersRegion());
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(sortSettings.sortConditions().count()));
		saveManager._currentRecordStream()._write18(table._id());
		var en = sortSettings.sortConditions().getEnumerator();
		while (en.moveNext()) {
			var pair = en.current();
			saveManager._currentRecordStream()._capCurrentBlock();
			saveManager._currentRecordStream()._writeSortCond12(pair.key(), pair.value());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sORTDATA12;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record::Type()" />*/
	,
	$type: new $.ig.Type('SORTDATA12Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SORTDATA12Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord" />*/

$.ig.util.defType('SSTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::IsAsyncLoadingSupported()" />*/
	isAsyncLoadingSupported: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::IsAsyncLoadingSupported()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugFail("Use LoadAsync for te SSTRecord as it could be long running.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::LoadAsync(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadAsync: function (loadManager) {
		if (loadManager._areRecordsWaitingForAssociatedExtRecords()) {
			loadManager._deferredSstRecordPosition($.ig.util.toNullable($.ig.Number.prototype.$type, loadManager._currentRecordStream()._getStartOfRecord()));
			return null;
		}
		return $.ig.WorkItemExtensions.prototype.then2(loadManager._verifyFormatsLoaded(), function () {
			loadManager._currentRecordStream()._readUInt32();
			var stringsInSST = loadManager._currentRecordStream()._readUInt32();
			return loadManager._currentRecordStream()._readFormattedStringBlock(stringsInSST, loadManager._sharedStringTable());
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::LoadAsync(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::SaveAsync(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	saveAsync: function (saveManager) {
		saveManager._currentRecordStream()._write18(saveManager._totalStringsUsedInDocument());
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(saveManager._totalSharedStringCount()));
		var removeCarriageReturns = saveManager._workbook().shouldRemoveCarriageReturnsOnSave();
		var stringIndex = 0;
		var stringCount = 0;
		return $.ig.Async.prototype.forEachSlice$1($.ig.StringElement.prototype.$type, saveManager._getSharedStrings(), function (element) {
			var $ret = $.ig.SSTRecord.prototype.saveStringElement(saveManager, element, removeCarriageReturns, stringIndex);
			stringIndex = $ret.p3;
			stringCount++;
			if ($.ig.BiffRecordStream.prototype._maxStringsPerSlice < stringCount) {
				stringCount = 0;
				return false;
			}
			return true;
		});
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::SaveAsync(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("Use SaveAsync for te SSTRecord as it could be long running.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::SaveStringElement(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.StringElement, System.Boolean, System.Int32)" />*/
	saveStringElement: function (saveManager, element, removeCarriageReturns, stringIndex) {
		if (stringIndex % 8 == 0) {
			var extSSTItem = new $.ig.WorkbookSaveManagerExcel2003_ExtSstItem();
			extSSTItem._absolutePosition = saveManager._currentRecordStream().position();
			extSSTItem._offsetInRecordBlock = saveManager._currentRecordStream()._positionInCurrentBlock();
			saveManager._extSstData().add(extSSTItem);
		}
		if (removeCarriageReturns) {
			element = element._removeCarriageReturns(saveManager._workbook());
		}
		saveManager._currentRecordStream()._write6(element, $.ig.LengthType.prototype.sixteenBit);
		stringIndex++;
		return {
			p3: stringIndex
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::SaveStringElement(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, Infragistics.Documents.Excel.StringElement, System.Boolean, System.Int32)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sST;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord::Type()" />*/
	,
	$type: new $.ig.Type('SSTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SSTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord" />*/

$.ig.util.defType('STANDARDWIDTHRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var defaultColumnWidth = loadManager._currentRecordStream()._readUInt16();
		if (defaultColumnWidth != 0) {
			worksheet.defaultColumnWidth(defaultColumnWidth);
		}
		worksheet._shouldSaveDefaultColumnWidths256th(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var defaultColumnWidth = worksheet.defaultColumnWidth();
		if ($.ig.Enumerable.prototype.all$1($.ig.WorksheetColumnBlock.prototype.$type, worksheet._columnBlocks(), function (b) { return b.hidden(); })) {
			defaultColumnWidth = 0;
		}
		saveManager._currentRecordStream()._write17(defaultColumnWidth);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sTANDARDWIDTH;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord::Type()" />*/
	,
	$type: new $.ig.Type('STANDARDWIDTHRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STANDARDWIDTHRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord" />*/

$.ig.util.defType('STRINGRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var value = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit)._unformattedString();
		loadManager._contextStack().push(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var value = $.ig.util.cast(String, saveManager._contextStack().current());
		if (value == null) {
			$.ig.ExcelUtils.prototype.debugFail("The current context item should be a string.");
			return;
		}
		saveManager._currentRecordStream()._write15(value, $.ig.LengthType.prototype.sixteenBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sTRING;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord::Type()" />*/
	,
	$type: new $.ig.Type('STRINGRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STRINGRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord" />*/

$.ig.util.defType('STYLEEXTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var info = new $.ig.STYLEEXTRecordInfo();
		loadManager._currentRecordStream()._readFrtHeader();
		info._temp8 = loadManager._currentRecordStream().readByte();
		info._iCategory = loadManager._currentRecordStream().readByte();
		info._builtInData = loadManager._currentRecordStream()._readUInt16();
		info._stName = loadManager._currentRecordStream()._readLPWideString();
		info._props = loadManager._currentRecordStream()._readXFProps();
		loadManager._deferredSTYLEEXTRecords().add(info);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecordInfo)" />*/
	loadHelper: function (loadManager, info) {
		var styles = loadManager._workbook().styles();
		var loadedStyles = loadManager._loadedStyles();
		var fBuiltIn = $.ig.ExcelUtils.prototype.testBit(info._temp8, 0);
		var fHidden = $.ig.ExcelUtils.prototype.testBit(info._temp8, 1);
		var fCustom = $.ig.ExcelUtils.prototype.testBit(info._temp8, 2);
		$.ig.ExcelUtils.prototype.debugAssert(fCustom == false || fBuiltIn, "If fCustom is True, so should fBuiltIn");
		$.ig.ExcelUtils.prototype.debugAssert(fBuiltIn || info._builtInData == 65535, "The builtInData should be 0xFFFF when fBuiltIn is False.");
		var iLevel = (info._builtInData >>> 8);
		var istyBuiltIn = (info._builtInData & 255);
		var style = null;
		if (fBuiltIn) {
			style = styles._getBuiltInStyle(istyBuiltIn);
		}
		if (style == null) {
			style = styles._item1(info._stName);
		}
		if (style == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the appropriate style");
			return;
		}
		if (fHidden) {
			styles.remove(style);
		}
		var builtInStyle = $.ig.util.cast($.ig.WorkbookBuiltInStyle.prototype.$type, style);
		if (fBuiltIn) {
			if ($.ig.Enum.prototype.isDefined($.ig.BuiltInStyleType.prototype.$type, $.ig.BuiltInStyleType.prototype.getBox(istyBuiltIn))) {
				if (builtInStyle == null) {
					var loadedStyleIndex = loadedStyles.indexOf(style);
					builtInStyle = new $.ig.WorkbookBuiltInStyle(loadManager._workbook(), style._styleFormatInternal(), istyBuiltIn, iLevel);
					styles.remove(style);
					styles._add(builtInStyle);
					style = builtInStyle;
					if (loadedStyleIndex < 0) {
						$.ig.ExcelUtils.prototype.debugFail("Couldn't find the original style in the collection.");
					} else {
						loadedStyles.__inner[loadedStyleIndex] = style;
					}
				}
				$.ig.ExcelUtils.prototype.debugAssert(istyBuiltIn == builtInStyle._type(), "The istyBuiltIn value does not match that of the built in style.");
				$.ig.ExcelUtils.prototype.debugAssert(iLevel == builtInStyle._outlineLevel(), "The iLevel value does not match that of the built in style.");
			}
		}
		$.ig.ExcelUtils.prototype.debugAssert(fBuiltIn || info._stName == style.name(), "The stName value does not match that of the style.");
		$.ig.Biff8RecordStream.prototype._applyXFProps(loadManager._workbook(), style._styleFormatInternal(), false, info._props);
		if (builtInStyle != null) {
			builtInStyle._isCustomized(fCustom);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecordInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var style = saveManager._contextStack().get$1($.ig.excel.WorkbookStyle.prototype.$type);
		if (style == null) {
			$.ig.ExcelUtils.prototype.debugFail("Cannot find the WorkbookStyle on the context stack.");
			return;
		}
		var builtInStyle = $.ig.util.cast($.ig.WorkbookBuiltInStyle.prototype.$type, style);
		var fCustom = builtInStyle != null && builtInStyle._isCustomized();
		saveManager._currentRecordStream()._writeFrtHeader();
		var temp8 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit(temp8, style.isBuiltIn(), 0);
		temp8 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit(temp8, false, 1);
		temp8 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.setBit(temp8, fCustom, 2);
		temp8 = $ret2.p0;
		saveManager._currentRecordStream()._write9(temp8);
		saveManager._currentRecordStream()._write9(style._category());
		var builtInData = 65535;
		if (builtInStyle != null) {
			builtInData = ((builtInStyle._outlineLevel() << 8) | builtInStyle._type());
		}
		saveManager._currentRecordStream()._write17(builtInData);
		saveManager._currentRecordStream()._writeLPWideString(style.name());
		saveManager._currentRecordStream()._writeXFProps(style._styleFormatInternal());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sTYLEEXT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord::Type()" />*/
	,
	$type: new $.ig.Type('STYLEEXTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecordInfo" />*/

$.ig.util.defType('STYLEEXTRecordInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_temp8: 0,
	_iCategory: 0,
	_builtInData: 0,
	_stName: null,
	_props: null,
	$type: new $.ig.Type('STYLEEXTRecordInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLEEXTRecordInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord" />*/

$.ig.util.defType('STYLERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var info = new $.ig.STYLERecordInfo();
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		info._styleXFIndex = (optionFlags & 4095);
		info._isBuiltIn = (optionFlags & 32768) == 32768;
		if (info._isBuiltIn) {
			info._type = loadManager._currentRecordStream().readByte();
			info._outlineLevel = loadManager._currentRecordStream().readByte();
		} else {
			info._name = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit)._unformattedString();
		}
		loadManager._deferredSTYLERecords().add(info);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecordInfo)" />*/
	loadHelper: function (loadManager, info) {
		var format = loadManager._formats().__inner[info._styleXFIndex];
		$.ig.ExcelUtils.prototype.debugAssert(format._type() == $.ig.WorksheetCellFormatType.prototype.styleFormat, "The cell format type is invalid.");
		if (format._type() != $.ig.WorksheetCellFormatType.prototype.styleFormat) {
			format = format._cloneInternal();
			format._type($.ig.WorksheetCellFormatType.prototype.styleFormat);
		}
		var style;
		if (info._isBuiltIn) {
			style = new $.ig.WorkbookBuiltInStyle(loadManager._workbook(), format, info._type, info._outlineLevel);
		} else {
			var styleInfo = new $.ig.BuiltInStyleInfo();
			if ((function () { var $ret = $.ig.excel.WorkbookStyleCollection.prototype._styleTypesByName().tryGetValue(info._name, styleInfo); styleInfo = $ret.p1; return $ret.ret; }())) {
				style = new $.ig.WorkbookBuiltInStyle(loadManager._workbook(), format, styleInfo._type, styleInfo._outlineLevel);
			} else {
				style = new $.ig.WorkbookUserDefinedStyle(loadManager._workbook(), format, info._name);
			}
		}
		style = loadManager._workbook().styles()._add(style);
		loadManager._loadedStyles().add(style);
		var childFormats;
		if ((function () { var $ret = loadManager._childrenXfsByStyleId().tryGetValue(info._styleXFIndex, childFormats); childFormats = $ret.p1; return $ret.ret; }())) {
			var styleFormat = style._styleFormatInternal();
			for (var i = 0; i < childFormats.count(); i++) {
				var childFormat = childFormats.__inner[i];
				$.ig.ExcelUtils.prototype.debugAssert(childFormat.style() == loadManager._workbook().styles().normalStyle(), "This format's Style should not be set yet.");
				childFormat.style(style);
				var formatOptions = childFormat.formatOptions();
				if ($.ig.ExcelUtils.prototype.testFlag2(formatOptions, $.ig.excel.WorksheetCellFormatOptions.applyAlignmentFormatting) == false) {
					if (childFormat._alignmentResolved() != styleFormat._alignmentResolved() || childFormat._indentResolved() != styleFormat._indentResolved() || childFormat._rotationResolved() != styleFormat._rotationResolved() || $.ig.util.nullableNotEquals(childFormat._shrinkToFitResolved(), styleFormat._shrinkToFitResolved()) || childFormat._verticalAlignmentResolved() != styleFormat._verticalAlignmentResolved() || $.ig.util.nullableNotEquals(childFormat._wrapTextResolved(), styleFormat._wrapTextResolved())) {
						formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyAlignmentFormatting;
					}
				}
				if ($.ig.ExcelUtils.prototype.testFlag2(formatOptions, $.ig.excel.WorksheetCellFormatOptions.applyBorderFormatting) == false) {
					if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(childFormat._bottomBorderColorInfoResolved(), styleFormat._bottomBorderColorInfoResolved()) || childFormat._bottomBorderStyleResolved() != styleFormat._bottomBorderStyleResolved() || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(childFormat._diagonalBorderColorInfoResolved(), styleFormat._diagonalBorderColorInfoResolved()) || childFormat._diagonalBordersResolved() != styleFormat._diagonalBordersResolved() || childFormat._diagonalBorderStyleResolved() != styleFormat._diagonalBorderStyleResolved() || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(childFormat._leftBorderColorInfoResolved(), styleFormat._leftBorderColorInfoResolved()) || childFormat._leftBorderStyleResolved() != styleFormat._leftBorderStyleResolved() || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(childFormat._rightBorderColorInfoResolved(), styleFormat._rightBorderColorInfoResolved()) || childFormat._rightBorderStyleResolved() != styleFormat._rightBorderStyleResolved() || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(childFormat._topBorderColorInfoResolved(), styleFormat._topBorderColorInfoResolved()) || childFormat._topBorderStyleResolved() != styleFormat._topBorderStyleResolved()) {
						formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyBorderFormatting;
					}
				}
				if ($.ig.ExcelUtils.prototype.testFlag2(formatOptions, $.ig.excel.WorksheetCellFormatOptions.applyFillFormatting) == false) {
					if ($.ig.Object.prototype.equalsStatic(childFormat._fillResolved(), styleFormat._fillResolved()) == false) {
						formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyFillFormatting;
					}
				}
				if ($.ig.ExcelUtils.prototype.testFlag2(formatOptions, $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting) == false) {
					if ($.ig.util.nullableNotEquals(childFormat._fontBoldResolved(), styleFormat._fontBoldResolved()) || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(childFormat._fontColorInfoResolved(), styleFormat._fontColorInfoResolved()) || childFormat._fontHeightResolved() != styleFormat._fontHeightResolved() || $.ig.util.nullableNotEquals(childFormat._fontItalicResolved(), styleFormat._fontItalicResolved()) || childFormat._fontNameResolved() != styleFormat._fontNameResolved() || $.ig.util.nullableNotEquals(childFormat._fontStrikeoutResolved(), styleFormat._fontStrikeoutResolved()) || childFormat._fontSuperscriptSubscriptStyleResolved() != styleFormat._fontSuperscriptSubscriptStyleResolved() || childFormat._fontUnderlineStyleResolved() != styleFormat._fontUnderlineStyleResolved()) {
						formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting;
					}
				}
				if ($.ig.ExcelUtils.prototype.testFlag2(formatOptions, $.ig.excel.WorksheetCellFormatOptions.applyNumberFormatting) == false) {
					if (childFormat._formatStringResolved() != styleFormat._formatStringResolved()) {
						formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyNumberFormatting;
					}
				}
				if ($.ig.ExcelUtils.prototype.testFlag2(formatOptions, $.ig.excel.WorksheetCellFormatOptions.applyProtectionFormatting) == false) {
					if ($.ig.util.nullableNotEquals(childFormat._lockedResolved(), styleFormat._lockedResolved())) {
						formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyProtectionFormatting;
					}
				}
				childFormat.formatOptions(formatOptions);
				childFormat._cacheResolvedFormatOptionsValues(formatOptions, styleFormat);
				childFormat._resetFormatOptions($.ig.excel.WorksheetCellFormatOptions.all & ~formatOptions);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecordInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var style = saveManager._contextStack().get$1($.ig.excel.WorkbookStyle.prototype.$type);
		if (style == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no style in the context stack.");
			return;
		}
		var formatIndex = saveManager._getStyleFormatIndex(style);
		if (formatIndex < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The format index has not been assigned for this style.");
			formatIndex = 0;
		}
		var builtInStyle = $.ig.util.cast($.ig.WorkbookBuiltInStyle.prototype.$type, style);
		var isBuiltInStyle = builtInStyle != null && builtInStyle._isBuiltInStyleIn2003();
		var optionFlags = 0;
		optionFlags |= formatIndex;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(optionFlags, isBuiltInStyle, 15);
		optionFlags = $ret.p0;
		saveManager._currentRecordStream()._write17(optionFlags);
		if (isBuiltInStyle) {
			saveManager._currentRecordStream()._write9(builtInStyle._type());
			saveManager._currentRecordStream()._write9(builtInStyle._outlineLevel());
		} else {
			saveManager._currentRecordStream()._write15(style.name(), $.ig.LengthType.prototype.sixteenBit);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sTYLE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord::Type()" />*/
	,
	$type: new $.ig.Type('STYLERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecordInfo" />*/

$.ig.util.defType('STYLERecordInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_styleXFIndex: 0,
	_isBuiltIn: false,
	_type: 0,
	_outlineLevel: 0,
	_name: null,
	$type: new $.ig.Type('STYLERecordInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.STYLERecordInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord" />*/

$.ig.util.defType('SUPBOOKRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var numberOfTabsInWorkbook = loadManager._currentRecordStream()._readUInt16();
		var nameLength = loadManager._currentRecordStream()._readUInt16();
		var workbookReference;
		if (nameLength == $.ig.SUPBOOKRecord.prototype._currentWorkbookID) {
			workbookReference = loadManager._workbook()._currentWorkbookReference();
		} else if (nameLength == $.ig.SUPBOOKRecord.prototype._addInFunctionListID) {
			$.ig.ExcelUtils.prototype.debugAssert(numberOfTabsInWorkbook == 1, null);
			workbookReference = loadManager._workbook()._addInFunctionsWorkbookReference();
		} else {
			var fileNameOfWorkbook = loadManager._currentRecordStream()._readFormattedString1(nameLength)._unformattedString();
			fileNameOfWorkbook = $.ig.ExcelUtils.prototype.decodeURL(loadManager._filePath(), fileNameOfWorkbook);
			var progIdSeparatorIndex = fileNameOfWorkbook == null ? -1 : fileNameOfWorkbook.indexOf($.ig.SUPBOOKRecord.prototype._progIdSeparator);
			if (0 <= progIdSeparatorIndex) {
				$.ig.ExcelUtils.prototype.debugAssert(numberOfTabsInWorkbook == 0, "The OLE object link should have no worksheets");
				var progId;
				var objectLink;
				var $ret = $.ig.FormulaParser.prototype.parseOleObjectLink(fileNameOfWorkbook, progId, objectLink, $.ig.SUPBOOKRecord.prototype._progIdSeparator);
				progId = $ret.p1;
				objectLink = $ret.p2;
				workbookReference = loadManager._workbook()._getWorkbookReference(progId, objectLink);
			} else {
				var worksheetNames = new Array(numberOfTabsInWorkbook);
				for (var i = 0; i < numberOfTabsInWorkbook; i++) {
					worksheetNames[i] = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit)._unformattedString();
				}
				workbookReference = loadManager._workbook()._getWorkbookReference1(fileNameOfWorkbook);
				var externalWorkbookReference = $.ig.util.cast($.ig.ExternalWorkbookReference.prototype.$type, workbookReference);
				if (externalWorkbookReference != null) {
					$.ig.ExcelUtils.prototype.debugAssert(externalWorkbookReference.worksheetNames().count() == 0, "This is unexpected");
					externalWorkbookReference.worksheetNames().addRange(worksheetNames);
				}
			}
		}
		loadManager._workbookReferences().add(workbookReference);
		loadManager._prepareForDataFromExternalWorkbook(workbookReference);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var reference = saveManager._contextStack().get$1($.ig.WorkbookReferenceBase.prototype.$type);
		if (reference == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no workbook reference in the context stack.");
			return;
		}
		if ($.ig.util.cast($.ig.CurrentWorkbookReference.prototype.$type, reference) !== null) {
			saveManager._currentRecordStream()._write17(saveManager._worksheets().count());
			saveManager._currentRecordStream()._write17($.ig.SUPBOOKRecord.prototype._currentWorkbookID);
		} else if ($.ig.util.cast($.ig.AddInFunctionsWorkbookReference.prototype.$type, reference) !== null) {
			saveManager._currentRecordStream()._write17(1);
			saveManager._currentRecordStream()._write17($.ig.SUPBOOKRecord.prototype._addInFunctionListID);
		} else {
			var externalReference = $.ig.util.cast($.ig.ExternalWorkbookReference.prototype.$type, reference);
			if (externalReference != null) {
				saveManager._currentRecordStream()._write17(externalReference.worksheetNames().count());
				saveManager._currentRecordStream()._write15($.ig.ExcelUtils.prototype.encodeURL(externalReference.fileName()), $.ig.LengthType.prototype.sixteenBit);
				var en = externalReference.worksheetNames().getEnumerator();
				while (en.moveNext()) {
					var worksheetName = en.current();
					saveManager._currentRecordStream()._write15(worksheetName, $.ig.LengthType.prototype.sixteenBit);
				}
			} else {
				var oleLinkReference = $.ig.util.cast($.ig.OleLinkWorkbookReference.prototype.$type, reference);
				if (oleLinkReference != null) {
					saveManager._currentRecordStream()._write17(0);
					saveManager._currentRecordStream()._write15(oleLinkReference.progId() + $.ig.SUPBOOKRecord.prototype._progIdSeparator + oleLinkReference.objectLink().originalString(), $.ig.LengthType.prototype.sixteenBit);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.sUPBOOK;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord::Type()" />*/
	,
	$type: new $.ig.Type('SUPBOOKRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord" />*/

$.ig.util.defType('TABIDRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var numTabs = $.ig.intDivide(loadManager._currentRecordStream().length(), 2);
		for (var i = 0; i < numTabs; i++) {
			var tabId = loadManager._currentRecordStream()._readUInt16();
			loadManager._worksheetIdsByIndex().add(i, tabId);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		for (var i = 0; i < saveManager._worksheets().count(); i++) {
			saveManager._currentRecordStream()._write17(saveManager._worksheets().item(i)._sheetId());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tABID;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord::Type()" />*/
	,
	$type: new $.ig.Type('TABIDRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABIDRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord" />*/

$.ig.util.defType('TABLERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var firstRow = loadManager._currentRecordStream()._readUInt16();
		var lastRow = loadManager._currentRecordStream()._readUInt16();
		var firstColumn = loadManager._currentRecordStream().readByte();
		var lastColumn = loadManager._currentRecordStream().readByte();
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var inputCellInRowInputCell = (optionFlags & 4) == 4;
		var twoInputDataTable = (optionFlags & 8) == 8;
		var primaryInputRow = loadManager._currentRecordStream()._readUInt16();
		var primaryInputColumn = loadManager._currentRecordStream()._readUInt16();
		var secondaryInputRow = loadManager._currentRecordStream()._readUInt16();
		var secondaryInputColumn = loadManager._currentRecordStream()._readUInt16();
		var rowInputCell = null;
		var columnInputCell = null;
		if (twoInputDataTable) {
			rowInputCell = worksheet.rows().item(primaryInputRow).cells().item(primaryInputColumn);
			columnInputCell = worksheet.rows().item(secondaryInputRow).cells().item(secondaryInputColumn);
		} else if (inputCellInRowInputCell) {
			rowInputCell = worksheet.rows().item(primaryInputRow).cells().item(primaryInputColumn);
		} else {
			columnInputCell = worksheet.rows().item(primaryInputRow).cells().item(primaryInputColumn);
		}
		worksheet.dataTables()._add(worksheet._getCachedRegion1(firstRow - 1, firstColumn - 1, lastRow, lastColumn), columnInputCell, rowInputCell);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var cellContext = saveManager._currentCellContext();
		var dataTableInteriorFormula = $.ig.util.cast($.ig.DataTableInteriorFormula.prototype.$type, cellContext.value());
		if (dataTableInteriorFormula == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no data table in the context stack.");
			return;
		}
		var dataTable = dataTableInteriorFormula._dataTable();
		var cellsInTable = dataTable.cellsInTable();
		saveManager._currentRecordStream()._write17((cellsInTable.firstRow() + 1));
		saveManager._currentRecordStream()._write17(cellsInTable.lastRow());
		saveManager._currentRecordStream()._write9((cellsInTable.firstColumn() + 1));
		saveManager._currentRecordStream()._write9(cellsInTable.lastColumn());
		var optionFlags = 0;
		var primaryInputRow = 0;
		var primaryInputColumn = 0;
		var secondaryInputRow = 0;
		var secondaryInputColumn = 0;
		var rowInputCell = dataTable.rowInputCell();
		var columnInputCell = dataTable.columnInputCell();
		if ($.ig.excel.WorksheetCell.prototype.l_op_Inequality(columnInputCell, null) && $.ig.excel.WorksheetCell.prototype.l_op_Inequality(rowInputCell, null)) {
			optionFlags |= 8;
			primaryInputRow = rowInputCell.rowIndex();
			primaryInputColumn = rowInputCell.columnIndex();
			secondaryInputRow = columnInputCell.rowIndex();
			secondaryInputColumn = columnInputCell.columnIndex();
		} else if ($.ig.excel.WorksheetCell.prototype.l_op_Inequality(rowInputCell, null)) {
			optionFlags |= 4;
			primaryInputRow = rowInputCell.rowIndex();
			primaryInputColumn = rowInputCell.columnIndex();
		} else {
			primaryInputRow = columnInputCell.rowIndex();
			primaryInputColumn = columnInputCell.columnIndex();
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(primaryInputRow);
		saveManager._currentRecordStream()._write17(primaryInputColumn);
		saveManager._currentRecordStream()._write17(secondaryInputRow);
		saveManager._currentRecordStream()._write17(secondaryInputColumn);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tABLE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord::Type()" />*/
	,
	$type: new $.ig.Type('TABLERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord" />*/

$.ig.util.defType('TABLESTYLEELEMENTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::IsAsyncLoadingSupported()" />*/
	isAsyncLoadingSupported: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::IsAsyncLoadingSupported()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		$.ig.ExcelUtils.prototype.debugFail("Use LoadAsync for te SSTRecord as it could be long running.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::LoadAsync(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	loadAsync: function (loadManager) {
		return $.ig.WorkItemExtensions.prototype.then(loadManager._verifyFormatsLoaded(), function () {
			loadManager._currentRecordStream()._readFrtHeader();
			var tseType = loadManager._currentRecordStream()._readUInt32();
			$.ig.ExcelUtils.prototype.debugAssert($.ig.Enum.prototype.isDefined($.ig.ST_TableStyleType.prototype.$type, $.ig.ST_TableStyleType.prototype.getBox(tseType)), "The tseType value is incorrect.");
			var size = loadManager._currentRecordStream()._readUInt32();
			var index = loadManager._currentRecordStream()._readUInt32();
			if (loadManager._currentTableStyle() == null) {
				return;
			}
			if (loadManager._dxfs().count() <= index) {
				$.ig.ExcelUtils.prototype.debugFail("This is unexpected.");
				return;
			}
			var area = tseType;
			if ($.ig.Enum.prototype.isDefined($.ig.excel.WorksheetTableStyleArea.prototype.$type, $.ig.excel.WorksheetTableStyleArea.prototype.getBox(area)) == false) {
				$.ig.ExcelUtils.prototype.debugFail("Cannot convert the tseType to a WorksheetTableStyleArea.");
				return;
			}
			var style = loadManager._currentTableStyle();
			var dxf = loadManager._dxfs().__inner[index];
			if (dxf._isEmpty() == false) {
				if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(dxf.diagonalBorderColorInfo(), null) || dxf.diagonalBorderStyle() != $.ig.excel.CellBorderLineStyle.$default) {
					$.ig.Debug.prototype.assert1(($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(dxf.diagonalBorderColorInfo(), null) || $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(dxf.diagonalBorderColorInfo(), $.ig.excel.WorkbookColorInfo.prototype.automatic())) && (dxf.diagonalBorderStyle() == $.ig.excel.CellBorderLineStyle.$default || dxf.diagonalBorderStyle() == $.ig.excel.CellBorderLineStyle.none), "Diagonal borders should not be used in table style areas");
					dxf = dxf._cloneInternal();
					dxf.diagonalBorderColorInfo(null);
					dxf.diagonalBorderStyle($.ig.excel.CellBorderLineStyle.$default);
				}
				style.areaFormats().item(area).setFormatting(dxf);
			}
			switch (area) {
				case $.ig.excel.WorksheetTableStyleArea.columnStripe:
					style.columnStripeWidth(size);
					break;
				case $.ig.excel.WorksheetTableStyleArea.alternateColumnStripe:
					style.alternateColumnStripeWidth(size);
					break;
				case $.ig.excel.WorksheetTableStyleArea.rowStripe:
					style.rowStripeHeight(size);
					break;
				case $.ig.excel.WorksheetTableStyleArea.alternateRowStripe:
					style.alternateRowStripeHeight(size);
					break;
				default:
					$.ig.ExcelUtils.prototype.debugAssert(dxf._isEmpty() == false, "This TABLESTYLEELEMENT shouldn't have been written out.");
					break;
			}
		}, 0);
	}
	/*<EndMethod Name="Infragistics.Documents.Core.WorkItem Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::LoadAsync(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var style = saveManager._contextStack().get$1($.ig.excel.WorksheetTableStyle.prototype.$type);
		if (style == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetTableStyle in the context stack.");
			return;
		}
		var area = saveManager._contextStack().get$1($.ig.excel.WorksheetTableStyleArea.prototype.$type);
		var dxfId = saveManager._contextStack().get$1($.ig.Number.prototype.$type);
		var size = style._getAreaSize(area);
		if (size.hasValue() == false) {
			size = $.ig.util.toNullable($.ig.Number.prototype.$type, 0);
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write18(area);
		saveManager._currentRecordStream()._write18(size.value());
		saveManager._currentRecordStream()._write18(dxfId);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tABLESTYLEELEMENT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord::Type()" />*/
	,
	$type: new $.ig.Type('TABLESTYLEELEMENTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLEELEMENTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord" />*/

$.ig.util.defType('TABLESTYLERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var temp16 = loadManager._currentRecordStream()._readUInt16();
		var reserved1 = $.ig.ExcelUtils.prototype.testBit(temp16, 0);
		$.ig.ExcelUtils.prototype.debugAssert(reserved1 == false, "The reserved1 value is incorrect.");
		var fIsPivot = $.ig.ExcelUtils.prototype.testBit(temp16, 1);
		var fIsTable = $.ig.ExcelUtils.prototype.testBit(temp16, 2);
		var reserved2 = $.ig.ExcelUtils.prototype.getBits2(temp16, 3, 15);
		$.ig.ExcelUtils.prototype.debugAssert(reserved2 == 0, "The reserved2 value is incorrect.");
		var ctse = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(ctse <= 28, "The ctse value is incorrect.");
		var cchName = loadManager._currentRecordStream()._readUInt16();
		var rgchName = loadManager._currentRecordStream()._readUnicodeString(cchName);
		$.ig.ExcelUtils.prototype.debugAssert(rgchName.length != 0, "The table style has no name.");
		if (fIsTable && rgchName.length > 0) {
			loadManager._currentTableStyle(new $.ig.excel.WorksheetTableStyle(rgchName));
			loadManager._workbook().customTableStyles().add(loadManager._currentTableStyle());
		} else {
			loadManager._currentTableStyle(null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var style = saveManager._contextStack().get$1($.ig.excel.WorksheetTableStyle.prototype.$type);
		if (style == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no WorksheetTableStyle in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._writeFrtHeader();
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit2(temp16, true, 2);
		temp16 = $ret.p0;
		saveManager._currentRecordStream()._write17(temp16);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(saveManager._getTableStyleDxfIds(style)._count()));
		saveManager._currentRecordStream()._write17(style.name().length);
		saveManager._currentRecordStream()._writeUnicodeString(style.name());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tABLESTYLE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord::Type()" />*/
	,
	$type: new $.ig.Type('TABLESTYLERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord" />*/

$.ig.util.defType('TABLESTYLESRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var cts = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(cts >= 144, "The cts value is incorrect.");
		var cchDefTableStyle = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cchDefTableStyle <= 255, "The cchDefTableStyle value is incorrect.");
		var cchDefPivotStyle = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(cchDefTableStyle <= 255, "The cchDefPivotStyle  value is incorrect.");
		var rgchDefTableStyle = $.ig.Encoding.prototype.unicode().getString(loadManager._currentRecordStream()._readBytes(cchDefTableStyle * 2));
		var rgchDefPivotStyle = $.ig.Encoding.prototype.unicode().getString(loadManager._currentRecordStream()._readBytes(cchDefPivotStyle * 2));
		loadManager._workbook().defaultTableStyle(loadManager._workbook()._getTableStyle(rgchDefTableStyle));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._writeFrtHeader();
		var cts = $.ig.util.intSToU((144 + saveManager._workbook().customTableStyles().count()));
		saveManager._currentRecordStream()._write18(cts);
		var rgchDefTableStyle = saveManager._workbook().defaultTableStyle().name();
		var rgchDefPivotStyle = "PivotStyleMedium9";
		saveManager._currentRecordStream()._write17(rgchDefTableStyle.length);
		saveManager._currentRecordStream()._write17(rgchDefPivotStyle.length);
		saveManager._currentRecordStream()._write2($.ig.Encoding.prototype.unicode().getBytes1(rgchDefTableStyle));
		saveManager._currentRecordStream()._write2($.ig.Encoding.prototype.unicode().getBytes1(rgchDefPivotStyle));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tABLESTYLES;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord::Type()" />*/
	,
	$type: new $.ig.Type('TABLESTYLESRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TABLESTYLESRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord" />*/

$.ig.util.defType('TEMPLATERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._workbook()._setCurrentFormatInternal($.ig.excel.WorkbookFormat.excel97To2003Template);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tEMPLATE;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord::Type()" />*/
	,
	$type: new $.ig.Type('TEMPLATERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TEMPLATERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord" />*/

$.ig.util.defType('THEMERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var dwThemeVersion = loadManager._currentRecordStream()._readUInt32();
		if (dwThemeVersion == $.ig.THEMERecord.prototype._customTheme) {
			var remainingData = (loadManager._currentRecordStream().length() - loadManager._currentRecordStream().position());
			loadManager._workbook()._customThemeData(loadManager._currentRecordStream()._readBytes(remainingData));
		} else if (dwThemeVersion == $.ig.THEMERecord.prototype._defaultTheme) {
		} else {
			$.ig.ExcelUtils.prototype.debugFail("dwThemeVersion might be incorrect.");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._writeFrtHeader();
		if (saveManager._workbook()._customThemeData() != null) {
			saveManager._currentRecordStream()._write18($.ig.THEMERecord.prototype._customTheme);
			saveManager._currentRecordStream()._write2(saveManager._workbook()._customThemeData());
		} else {
			saveManager._currentRecordStream()._write18($.ig.THEMERecord.prototype._defaultTheme);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tHEME;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord::Type()" />*/
	,
	$type: new $.ig.Type('THEMERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord" />*/

$.ig.util.defType('TOPMARGINRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		printOptions.topMargin(loadManager._currentRecordStream()._readDouble());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write10(printOptions.topMargin());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tOPMARGIN;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord::Type()" />*/
	,
	$type: new $.ig.Type('TOPMARGINRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TOPMARGINRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord" />*/

$.ig.util.defType('TXORecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		var hAlignment = $.ig.ExcelUtils.prototype.getBits2(optionFlags, 1, 3);
		var vAlignment = $.ig.ExcelUtils.prototype.getBits2(optionFlags, 4, 6);
		var rotation = loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream().seek(6, $.ig.SeekOrigin.prototype.current);
		var stringLength = loadManager._currentRecordStream()._readUInt16();
		var lengthOfFormattingRuns = loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream().seek(4, $.ig.SeekOrigin.prototype.current);
		var shape = loadManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		var comment = $.ig.util.cast($.ig.excel.WorksheetCellComment.prototype.$type, shape);
		var shapeWithText = $.ig.util.cast($.ig.excel.WorksheetShapeWithText.prototype.$type, shape);
		var text;
		if (comment != null) {
			if (stringLength == 0) {
				text = new $.ig.FormattedStringElement(0);
			} else {
				var element = loadManager._currentRecordStream()._readFormattedString1(stringLength);
				text = new $.ig.FormattedStringElement(1, element._unformattedString());
				$.ig.ExcelUtils.prototype.debugAssert(lengthOfFormattingRuns % 8 == 0, null);
				var numberOfFormattingRuns = $.ig.intDivide(lengthOfFormattingRuns, 8);
				for (var i = 0; i < numberOfFormattingRuns; i++) {
					var firstFormattedChar = loadManager._currentRecordStream()._readUInt16();
					var fontRecordIndex = loadManager._currentRecordStream()._readUInt16();
					loadManager._currentRecordStream().seek(4, $.ig.SeekOrigin.prototype.current);
					if (firstFormattedChar < stringLength) {
						var formattingRun = new $.ig.FormattedStringRun(text, firstFormattedChar);
						formattingRun.getFont(loadManager._workbook()).setFontFormatting($.ig.TXORecord.prototype.resolveFont(loadManager, fontRecordIndex, true));
						text._formattingRuns().add(formattingRun);
					}
				}
			}
			comment.text(new $.ig.excel.FormattedString(loadManager._workbook(), text, false, false));
		} else if (shapeWithText != null) {
			var formattedText;
			if (stringLength == 0) {
				formattedText = new $.ig.excel.FormattedText(String.empty());
			} else {
				var element1 = loadManager._currentRecordStream()._readFormattedString1(stringLength);
				formattedText = new $.ig.excel.FormattedText(element1._unformattedString());
				{
					var paragraphs = formattedText.paragraphs().getEnumerator();
					try {
						var result = paragraphs.moveNext();
						if (result == false) {
							$.ig.ExcelUtils.prototype.debugFail("There should be at least one paragraph.");
							return;
						}
						var currentParagraph = paragraphs.current();
						var nextParagraph = paragraphs.moveNext() ? paragraphs.current() : null;
						$.ig.ExcelUtils.prototype.debugAssert(lengthOfFormattingRuns % 8 == 0, null);
						var numberOfFormattingRuns1 = $.ig.intDivide(lengthOfFormattingRuns, 8);
						var lastValidRun = null;
						for (var i1 = 0; i1 < numberOfFormattingRuns1; i1++) {
							var firstFormattedChar1 = loadManager._currentRecordStream()._readUInt16();
							var fontRecordIndex1 = loadManager._currentRecordStream()._readUInt16();
							loadManager._currentRecordStream().seek(4, $.ig.SeekOrigin.prototype.current);
							if (nextParagraph != null && nextParagraph.startIndex() <= firstFormattedChar1) {
								if (firstFormattedChar1 != nextParagraph.startIndex()) {
									$.ig.ExcelUtils.prototype.debugFail("The formatting runs should be aligned to the paragraphs");
									if (lastValidRun != null) {
										var nextRun = new $.ig.FormattedTextRun(nextParagraph, 0);
										nextRun.initializeFrom(lastValidRun, loadManager._workbook());
										nextParagraph._addFormattingRun(nextRun);
									}
								}
								currentParagraph = nextParagraph;
								nextParagraph = paragraphs.moveNext() ? paragraphs.current() : null;
							}
							if (firstFormattedChar1 < stringLength) {
								var formattingRun1 = new $.ig.FormattedTextRun(currentParagraph, firstFormattedChar1 - currentParagraph.startIndex());
								formattingRun1.getFont(loadManager._workbook()).setFontFormatting($.ig.TXORecord.prototype.resolveFont(loadManager, fontRecordIndex1, false));
								currentParagraph._addFormattingRun(formattingRun1);
								lastValidRun = formattingRun1;
							}
						}
					}
					finally {
						if (paragraphs != null) {
							paragraphs.dispose();
						}
					}
				}
			}
			var verticalAlignment;
			switch (vAlignment) {
				case 1:
					verticalAlignment = $.ig.excel.VerticalTextAlignment.top;
					break;
				case 2:
					verticalAlignment = $.ig.excel.VerticalTextAlignment.center;
					break;
				case 3:
					verticalAlignment = $.ig.excel.VerticalTextAlignment.bottom;
					break;
				case 4:
				case 7:
					verticalAlignment = $.ig.excel.VerticalTextAlignment.center;
					break;
				default:
					$.ig.ExcelUtils.prototype.debugFail("Unknown vAlignment value: " + vAlignment);
					verticalAlignment = $.ig.excel.VerticalTextAlignment.center;
					break;
			}
			formattedText.verticalAlignment(verticalAlignment);
			var horizontalAlignment;
			switch (hAlignment) {
				case 1:
					horizontalAlignment = $.ig.excel.HorizontalTextAlignment.left;
					break;
				case 2:
					horizontalAlignment = $.ig.excel.HorizontalTextAlignment.center;
					break;
				case 3:
					horizontalAlignment = $.ig.excel.HorizontalTextAlignment.right;
					break;
				case 4:
					horizontalAlignment = $.ig.excel.HorizontalTextAlignment.justified;
					break;
				case 7:
					horizontalAlignment = $.ig.excel.HorizontalTextAlignment.distributed;
					break;
				default:
					$.ig.ExcelUtils.prototype.debugFail("Unknown hAlignment value: " + hAlignment);
					horizontalAlignment = $.ig.excel.HorizontalTextAlignment.center;
					break;
			}
			for (var i2 = 0; i2 < formattedText.paragraphs().count(); i2++) {
				formattedText.paragraphs().item(i2).alignment(horizontalAlignment);
			}
			shapeWithText.text(formattedText);
		} else {
			$.ig.ExcelUtils.prototype.debugFail("There is no shape that supports text in the context stack.");
		}
		shape._txoOptionFlags(optionFlags);
		shape._txoRotation(rotation);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorkbookFontData Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::ResolveFont(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, System.Boolean)" />*/
	resolveFont: function (loadManager, fontIndex, isComment) {
		var font = loadManager._fonts().__inner[fontIndex];
		if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(font.colorInfo(), null)) {
			if (font.colorInfo()._isSystemColor()) {
				var index = loadManager._workbook().palette()._findIndex(font.colorInfo(), $.ig.ColorableItem.prototype.cellFont);
				if (isComment) {
					if (index == $.ig.excel.WorkbookColorPalette.prototype._infoTextColorIndex) {
						return font;
					}
				} else {
					if (index == $.ig.excel.WorkbookColorPalette.prototype._windowTextColorIndex || index == $.ig.excel.WorkbookColorPalette.prototype._automaticColor) {
						return font;
					}
				}
				if ($.ig.excel.WorkbookColorPalette.prototype._windowTextColorIndex <= index && index <= $.ig.excel.WorkbookColorPalette.prototype._infoTextColorIndex) {
					font = font._cloneInternal(loadManager._workbook());
					font.colorInfo(new $.ig.excel.WorkbookColorInfo(isComment ? $.ig.SystemColorsInternal.prototype.infoTextColor() : $.ig.SystemColorsInternal.prototype.windowTextColor()));
					return font;
				}
			}
		}
		return font;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorkbookFontData Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::ResolveFont(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var shape = saveManager._contextStack().get$1($.ig.excel.WorksheetShape.prototype.$type);
		if (shape == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no shape that supports text in the context stack.");
			return;
		}
		var comment = $.ig.util.cast($.ig.excel.WorksheetCellComment.prototype.$type, shape);
		var shapeWithText = $.ig.util.cast($.ig.excel.WorksheetShapeWithText.prototype.$type, shape);
		var optionFlags = shape._txoOptionFlags();
		if (shapeWithText != null && shapeWithText.text() != null) {
			optionFlags &= 65409;
			var vAlignment;
			switch (shapeWithText.text().verticalAlignment()) {
				case $.ig.excel.VerticalTextAlignment.top:
					vAlignment = 1;
					break;
				case $.ig.excel.VerticalTextAlignment.center:
					vAlignment = 2;
					break;
				case $.ig.excel.VerticalTextAlignment.bottom:
					vAlignment = 3;
					break;
				default:
					$.ig.ExcelUtils.prototype.debugFail("Unknown VerticalTextAlignment: " + $.ig.excel.VerticalTextAlignment.prototype.getBox(shapeWithText.text().verticalAlignment()));
					vAlignment = 2;
					break;
			}
			var $ret = $.ig.ExcelUtils.prototype.addBits1(optionFlags, vAlignment, 4, 6);
			optionFlags = $ret.p0;
			var hAlignment = 2;
			if (shapeWithText.text().paragraphs().count() != 0) {
				switch (shapeWithText.text().paragraphs().item(0).alignment()) {
					case $.ig.excel.HorizontalTextAlignment.left:
						hAlignment = 1;
						break;
					case $.ig.excel.HorizontalTextAlignment.center:
						hAlignment = 2;
						break;
					case $.ig.excel.HorizontalTextAlignment.right:
						hAlignment = 3;
						break;
					case $.ig.excel.HorizontalTextAlignment.justified:
					case $.ig.excel.HorizontalTextAlignment.justifiedLow:
						hAlignment = 4;
						break;
					case $.ig.excel.HorizontalTextAlignment.distributed:
					case $.ig.excel.HorizontalTextAlignment.thaiDistributed:
						hAlignment = 7;
						break;
					default:
						$.ig.ExcelUtils.prototype.debugFail("Unknown HorizontalTextAlignment: " + $.ig.excel.HorizontalTextAlignment.prototype.getBox(shapeWithText.text().paragraphs().item(0).alignment()));
						vAlignment = 2;
						break;
				}
			}
			var $ret1 = $.ig.ExcelUtils.prototype.addBits1(optionFlags, hAlignment, 1, 3);
			optionFlags = $ret1.p0;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		saveManager._currentRecordStream()._write17(shape._txoRotation());
		saveManager._currentRecordStream()._write2(new Array(6));
		if (comment != null) {
			var formattedStringElement = $.ig.util.cast($.ig.FormattedStringElement.prototype.$type, comment.text()._element());
			if (formattedStringElement == null) {
				formattedStringElement = comment.text()._convertToFormattedStringElement();
			}
			var formattingRuns = new $.ig.List$1($.ig.FormattingRunBase.prototype.$type, 1, formattedStringElement._formattingRuns());
			if (formattingRuns.count() == 0) {
				formattingRuns.add(new $.ig.FormattedStringRun(formattedStringElement, 0));
			}
			$.ig.TXORecord.prototype.saveText(saveManager, formattedStringElement._unformattedString(), formattingRuns);
		} else if (shapeWithText != null) {
			if (shapeWithText.text() == null) {
				saveManager._currentRecordStream()._write17(0);
				return;
			}
			var formattingRuns1 = new $.ig.List$1($.ig.FormattingRunBase.prototype.$type, 0);
			for (var i = 0; i < shapeWithText.text().paragraphs().count(); i++) {
				var paragraph = shapeWithText.text().paragraphs().item(i);
				formattingRuns1.addRange(paragraph._getFormattingRuns(saveManager._workbook()));
			}
			if (formattingRuns1.count() == 0) {
				var paragraph1;
				if (shapeWithText.text().paragraphs().count() == 0) {
					paragraph1 = shapeWithText.text().paragraphs()._add(String.empty());
				} else {
					paragraph1 = shapeWithText.text().paragraphs().item(0);
				}
				formattingRuns1.add(new $.ig.FormattedTextRun(paragraph1, 0));
			}
			$.ig.TXORecord.prototype.saveText(saveManager, shapeWithText.text().toString(), formattingRuns1);
		} else {
			$.ig.ExcelUtils.prototype.debugFail("There is no shape that supports text in the context stack.");
			return;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::SaveText(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.String, System.Collections.Generic.List)" />*/
	saveText: function (saveManager, unformattedString, formattingRuns) {
		saveManager._currentRecordStream()._write17(unformattedString.length);
		var formattingRunsCount = formattingRuns.count();
		if (unformattedString.length == 0) {
			saveManager._currentRecordStream()._write17(0);
		} else {
			saveManager._currentRecordStream()._write17((8 * (formattingRunsCount + 1)));
		}
		saveManager._currentRecordStream()._write2(new Array(4));
		if (unformattedString.length == 0) {
			return;
		}
		saveManager._currentRecordStream()._capCurrentBlock();
		saveManager._currentRecordStream()._write14(unformattedString);
		saveManager._currentRecordStream()._capCurrentBlock();
		var en = formattingRuns.getEnumerator();
		while (en.moveNext()) {
			var run = en.current();
			var fontProxy = run.getFontInternal1(saveManager._workbook());
			$.ig.ExcelUtils.prototype.debugAssert($.ig.util.nullableNotEquals(fontProxy._saveIndex(), null), "This Font was not placed in the fonts collection.");
			var indexInFontCollection = fontProxy._saveIndex().getValueOrDefault();
			saveManager._currentRecordStream()._write17(run.firstFormattedCharAbsolute());
			saveManager._currentRecordStream()._write17(indexInFontCollection);
			saveManager._currentRecordStream()._write2(new Array(4));
		}
		saveManager._currentRecordStream()._write17(unformattedString.length);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write2(new Array(4));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::SaveText(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003, System.String, System.Collections.Generic.List)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.tXO;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord::Type()" />*/
	,
	$type: new $.ig.Type('TXORecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.TXORecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord" />*/

$.ig.util.defType('USERBVIEWRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var idForCustomView = loadManager._currentRecordStream()._readUInt32();
		$.ig.ExcelUtils.prototype.debugAssert(idForCustomView == 2190, null);
		var selectedWorksheetTabId = loadManager._currentRecordStream()._readInt32();
		var id = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		var leftTwips = loadManager._currentRecordStream()._readInt32();
		var topTwips = loadManager._currentRecordStream()._readInt32();
		var widthTwips = loadManager._currentRecordStream()._readInt32();
		var heightTwips = loadManager._currentRecordStream()._readInt32();
		var tabBarWidth = loadManager._currentRecordStream()._readUInt16();
		var optionFlags1 = loadManager._currentRecordStream()._readUInt16();
		var showFormulaBar = (optionFlags1 & 1) == 1;
		var showStatusBar = (optionFlags1 & 2) == 2;
		var hScrollBarVisible = (optionFlags1 & 16) == 16;
		var vScrollBarVisible = (optionFlags1 & 32) == 32;
		var tabBarVisible = (optionFlags1 & 64) == 64;
		var maximized = (optionFlags1 & 128) == 128;
		var objectDisplayStyle = ((optionFlags1 & 768) >> 8);
		var savePrintOptions = (optionFlags1 & 1024) == 1024;
		var saveHiddenRowsAndColumns = (optionFlags1 & 2048) == 2048;
		var scrollBars = $.ig.excel.ScrollBars.none;
		scrollBars |= hScrollBarVisible ? $.ig.excel.ScrollBars.horizontal : 0;
		scrollBars |= vScrollBarVisible ? $.ig.excel.ScrollBars.vertical : 0;
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		var customViewName = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit)._unformattedString();
		var customView = loadManager._workbook().customViews()._add(customViewName, savePrintOptions, saveHiddenRowsAndColumns);
		customView._id(id);
		customView.windowOptions()._boundsInPixels$i($.ig.ExcelUtils.prototype.createRectangle(leftTwips, topTwips, widthTwips, heightTwips));
		customView.windowOptions().maximized(maximized);
		customView.windowOptions().objectDisplayStyle(objectDisplayStyle);
		customView.windowOptions().scrollBars(scrollBars);
		customView.windowOptions()._selectedWorksheetTabId(selectedWorksheetTabId);
		customView.windowOptions().showFormulaBar(showFormulaBar);
		customView.windowOptions().showStatusBar(showStatusBar);
		customView.windowOptions().tabBarVisible(tabBarVisible);
		customView.windowOptions().tabBarWidth(tabBarWidth);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var customView = saveManager._contextStack().get$1($.ig.excel.CustomView.prototype.$type);
		if (customView == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no custom view in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(2190));
		var selectedWorksheet = customView.windowOptions().selectedWorksheet();
		if (selectedWorksheet == null) {
			saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
		} else {
			saveManager._currentRecordStream()._write18((selectedWorksheet._sheetId()));
		}
		saveManager._currentRecordStream()._write2(customView._id().toByteArray());
		saveManager._currentRecordStream()._write18($.ig.truncate(customView.windowOptions()._boundsInPixels$i().left()));
		saveManager._currentRecordStream()._write18($.ig.truncate(customView.windowOptions()._boundsInPixels$i().top()));
		saveManager._currentRecordStream()._write18($.ig.truncate(customView.windowOptions()._boundsInPixels$i().width()));
		saveManager._currentRecordStream()._write18($.ig.truncate(customView.windowOptions()._boundsInPixels$i().height()));
		saveManager._currentRecordStream()._write17(customView.windowOptions().tabBarWidth());
		var optionFlags1 = 4;
		if (customView.windowOptions().showFormulaBar()) {
			optionFlags1 |= 1;
		}
		if (customView.windowOptions().showStatusBar()) {
			optionFlags1 |= 2;
		}
		if ((customView.windowOptions().scrollBars() & $.ig.excel.ScrollBars.horizontal) != 0) {
			optionFlags1 |= 16;
		}
		if ((customView.windowOptions().scrollBars() & $.ig.excel.ScrollBars.vertical) != 0) {
			optionFlags1 |= 32;
		}
		if (customView.windowOptions().tabBarVisible()) {
			optionFlags1 |= 64;
		}
		if (customView.windowOptions().maximized()) {
			optionFlags1 |= 128;
		}
		optionFlags1 |= (customView.windowOptions().objectDisplayStyle() << 8);
		if (customView.savePrintOptions()) {
			optionFlags1 |= 1024;
		}
		if (customView.saveHiddenRowsAndColumns()) {
			optionFlags1 |= 2048;
		}
		if (selectedWorksheet == null) {
			optionFlags1 |= 4096;
		}
		saveManager._currentRecordStream()._write17(optionFlags1);
		var optionFlags2 = 100;
		saveManager._currentRecordStream()._write17(optionFlags2);
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(false));
		saveManager._currentRecordStream()._write17(65535);
		saveManager._currentRecordStream()._write15(customView.name(), $.ig.LengthType.prototype.sixteenBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.uSERBVIEW;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord::Type()" />*/
	,
	$type: new $.ig.Type('USERBVIEWRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERBVIEWRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord" />*/

$.ig.util.defType('USERSVIEWBEGINRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var customViewId = new $.ig.Guid(1, loadManager._currentRecordStream()._readBytes(16));
		var customView = loadManager._workbook().customViews()._item(customViewId);
		if (customView == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no custom view with that id.");
			return;
		}
		var tabId = loadManager._currentRecordStream()._readInt32();
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		var windowZoom = loadManager._currentRecordStream()._readInt32();
		var gridLineColorIndex = loadManager._currentRecordStream()._readInt32();
		var activePane = loadManager._currentRecordStream()._readUInt32();
		var optionFlags = loadManager._currentRecordStream()._readUInt32();
		var showFormulasInCells = (optionFlags & 2) == 2;
		var showGridlines = (optionFlags & 4) == 4;
		var showRowAndColumnHeaders = (optionFlags & 8) == 8;
		var showOutlineSymbols = (optionFlags & 16) == 16;
		var showZeroValues = (optionFlags & 32) == 32;
		var centeredHorizontally = (optionFlags & 64) == 64;
		var centeredVertically = (optionFlags & 128) == 128;
		var printRowAndColumnHeaders = (optionFlags & 256) == 256;
		var printGridlines = (optionFlags & 512) == 512;
		var fitToPages = (optionFlags & 1024) == 1024;
		var panesAreFrozen = (optionFlags & 32768) == 32768;
		var removeSplitIfFreezeRemoved = (optionFlags & 65536) == 65536;
		var windowHasVerticalSplit = (optionFlags & 131072) == 131072;
		var windowHasHorizontalSplit = (optionFlags & 262144) == 262144;
		var visibility = ((optionFlags & 12582912) >>> 22);
		var pageBreakPreview = (optionFlags & 67108864) == 67108864;
		var pageLayout = (optionFlags & 134217728) == 134217728;
		var showRulerInPageLayout = (optionFlags & 536870912) == 536870912;
		var firstVisibleRow = loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		var firstVisibleColumn = loadManager._currentRecordStream()._readUInt16();
		loadManager._currentRecordStream()._readUInt16();
		var verticalPaneSplit = loadManager._currentRecordStream()._readDouble();
		var horizontalPaneSplit = loadManager._currentRecordStream()._readDouble();
		var firstVisibleColumnOfRightPane = loadManager._currentRecordStream()._readUInt16();
		var firstVisibleRowOfBottomPane = loadManager._currentRecordStream()._readUInt16();
		var displayOptions = customView.getDisplayOptions(worksheet, true);
		$.ig.ExcelUtils.prototype.debugAssert(displayOptions != null, "Couldn't get the display options.");
		if (displayOptions != null) {
			displayOptions.panesAreFrozen(panesAreFrozen);
			if (panesAreFrozen) {
				displayOptions.frozenPaneSettings()._keepSplitIfRemoveFreeze(!removeSplitIfFreezeRemoved);
				if (windowHasHorizontalSplit) {
					displayOptions.unfrozenPaneSettings().firstRowInTopPane(firstVisibleRow);
					displayOptions.frozenPaneSettings().frozenRows($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(horizontalPaneSplit)));
					displayOptions.frozenPaneSettings().firstRowInBottomPane(firstVisibleRowOfBottomPane);
				} else {
					$.ig.ExcelUtils.prototype.debugAssert(firstVisibleRowOfBottomPane == 65535, null);
					displayOptions.frozenPaneSettings().firstRowInBottomPane(firstVisibleRow);
				}
				if (windowHasVerticalSplit) {
					displayOptions.unfrozenPaneSettings().firstColumnInLeftPane(firstVisibleColumn);
					displayOptions.frozenPaneSettings().frozenColumns($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(verticalPaneSplit)));
					displayOptions.frozenPaneSettings().firstColumnInRightPane(firstVisibleColumnOfRightPane);
				} else {
					$.ig.ExcelUtils.prototype.debugAssert(firstVisibleColumnOfRightPane == 65535, null);
					displayOptions.frozenPaneSettings().firstColumnInRightPane(firstVisibleColumn);
				}
			} else {
				if (windowHasHorizontalSplit) {
					displayOptions.unfrozenPaneSettings().firstRowInTopPane(firstVisibleRow);
					displayOptions.unfrozenPaneSettings().firstRowInBottomPane(firstVisibleRowOfBottomPane);
					displayOptions.unfrozenPaneSettings().topPaneHeight(0);
					for (var rowIndex = firstVisibleRow; horizontalPaneSplit > 0; rowIndex++) {
						var rowHeight = worksheet._getRowHeightInTwips1(rowIndex, false);
						var factor = Math.min(1, horizontalPaneSplit);
						displayOptions.unfrozenPaneSettings().topPaneHeight(displayOptions.unfrozenPaneSettings().topPaneHeight() + ($.ig.truncate((factor * rowHeight))));
						horizontalPaneSplit -= 1;
					}
				} else {
					$.ig.ExcelUtils.prototype.debugAssert(firstVisibleRowOfBottomPane == 65535 || firstVisibleRowOfBottomPane == 0, null);
					displayOptions.unfrozenPaneSettings().firstRowInTopPane(firstVisibleRow);
				}
				if (windowHasVerticalSplit) {
					displayOptions.unfrozenPaneSettings().firstColumnInLeftPane(firstVisibleColumn);
					displayOptions.unfrozenPaneSettings().firstColumnInRightPane(firstVisibleColumnOfRightPane);
					displayOptions.unfrozenPaneSettings().leftPaneWidth(0);
					for (var columnIndex = firstVisibleColumn; verticalPaneSplit > 0; columnIndex++) {
						var columnWidth = worksheet._getColumnWidthInTwips1(columnIndex, false);
						var factor1 = Math.min(1, verticalPaneSplit);
						displayOptions.unfrozenPaneSettings().leftPaneWidth(displayOptions.unfrozenPaneSettings().leftPaneWidth() + ($.ig.truncate((factor1 * columnWidth))));
						verticalPaneSplit -= 1;
					}
				} else {
					$.ig.ExcelUtils.prototype.debugAssert(firstVisibleColumnOfRightPane == 65535 || firstVisibleColumnOfRightPane == 0, null);
					displayOptions.unfrozenPaneSettings().firstColumnInLeftPane(firstVisibleColumn);
				}
			}
			if (gridLineColorIndex != $.ig.excel.WorkbookColorPalette.prototype._automaticColor) {
				displayOptions._useAutomaticGridlineColor(false);
			}
			displayOptions._gridlineColorIndex(gridLineColorIndex);
			displayOptions._activePane(activePane);
			if (pageBreakPreview) {
				displayOptions.view($.ig.excel.WorksheetView.pageBreakPreview);
			} else if (pageLayout) {
				displayOptions.view($.ig.excel.WorksheetView.pageLayout);
			} else {
				displayOptions.view($.ig.excel.WorksheetView.normal);
			}
			displayOptions.magnificationInCurrentView(windowZoom);
			displayOptions.showFormulasInCells(showFormulasInCells);
			displayOptions.showGridlines(showGridlines);
			displayOptions.showOutlineSymbols(showOutlineSymbols);
			displayOptions.showRowAndColumnHeaders(showRowAndColumnHeaders);
			displayOptions.showRulerInPageLayoutView(showRulerInPageLayout);
			displayOptions.showZeroValues(showZeroValues);
			displayOptions.visibility(visibility);
		}
		if (customView.savePrintOptions()) {
			var printOptions = customView.getPrintOptions(worksheet, true);
			$.ig.ExcelUtils.prototype.debugAssert(printOptions != null, "Couldn't get the print options.");
			loadManager._contextStack().push(printOptions);
			if (printOptions != null) {
				printOptions.centerHorizontally(centeredHorizontally);
				printOptions.centerVertically(centeredVertically);
				printOptions.printGridlines(printGridlines);
				printOptions.printRowAndColumnHeaders(printRowAndColumnHeaders);
				if (fitToPages) {
					printOptions.scalingType($.ig.excel.ScalingType.fitToPages);
				} else {
					printOptions.scalingType($.ig.excel.ScalingType.useScalingFactor);
				}
			}
		}
		loadManager._contextStack().push(displayOptions);
		loadManager._contextStack().push(customView);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var customView = saveManager._contextStack().get$1($.ig.excel.CustomView.prototype.$type);
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (customView == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no custom view in the context stack.");
			return;
		}
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var windowZoom = 100;
		var gridLineColorIndex = 64;
		var activePane = $.ig.PaneLocation.prototype.topLeft;
		var pageBreaksAreDisplayed = false;
		var showFormulasInCells = false;
		var showGridlines = true;
		var showRowAndColumnHeaders = true;
		var showOutlineSymbols = true;
		var showZeroValues = true;
		var centeredHorizontally = false;
		var centeredVertically = false;
		var printRowAndColumnHeaders = false;
		var printGridlines = false;
		var fitToPages = false;
		var sheetContainsPrintArea = false;
		var onlyOnePrintArea = false;
		var listIsFiltered = false;
		var autoFilterActive = false;
		var panesAreFrozen = false;
		var windowHasVerticalSplit = false;
		var windowHasHorizontalSplit = false;
		var hasHiddenRows = false;
		var hasHiddenColumns = false;
		var visibility = $.ig.excel.WorksheetVisibility.visible;
		var chartIsSizedWithWindow = false;
		var viewContainsFilteredList = false;
		var pageBreakPreview = false;
		var pageLayout = false;
		var showRulerInPageLayout = true;
		var removeSplitIfFreezeRemoved = false;
		var firstVisibleRow = 0;
		var firstVisibleColumn = 0;
		var verticalPaneSplit = 0;
		var horizontalPaneSplit = 0;
		var firstVisibleColumnOfRightPane = 65535;
		var firstVisibleRowOfBottomPane = 65535;
		var displayOptions = customView.getDisplayOptions(worksheet, false);
		if (displayOptions != null) {
			displayOptions._verifySelectionInfo();
			activePane = displayOptions._activePane();
			panesAreFrozen = displayOptions.panesAreFrozen();
			if (displayOptions.panesAreFrozen()) {
				removeSplitIfFreezeRemoved = !displayOptions.frozenPaneSettings()._keepSplitIfRemoveFreeze();
				if (displayOptions.frozenPaneSettings().frozenRows() > 0) {
					windowHasHorizontalSplit = true;
					firstVisibleRow = displayOptions.unfrozenPaneSettings().firstRowInTopPane();
					horizontalPaneSplit = displayOptions.frozenPaneSettings().frozenRows();
					firstVisibleRowOfBottomPane = displayOptions.frozenPaneSettings().firstRowInBottomPane();
				} else {
					windowHasHorizontalSplit = false;
					firstVisibleRow = displayOptions.frozenPaneSettings().firstRowInBottomPane();
					horizontalPaneSplit = 0;
					firstVisibleRowOfBottomPane = 65535;
				}
				if (displayOptions.frozenPaneSettings().frozenColumns() > 0) {
					windowHasVerticalSplit = true;
					firstVisibleColumn = displayOptions.unfrozenPaneSettings().firstColumnInLeftPane();
					verticalPaneSplit = displayOptions.frozenPaneSettings().frozenColumns();
					firstVisibleColumnOfRightPane = displayOptions.frozenPaneSettings().firstColumnInRightPane();
				} else {
					windowHasVerticalSplit = false;
					firstVisibleColumn = displayOptions.frozenPaneSettings().firstColumnInRightPane();
					verticalPaneSplit = 0;
					firstVisibleColumnOfRightPane = 65535;
				}
			} else {
				if (displayOptions.unfrozenPaneSettings().topPaneHeight() > 0) {
					windowHasHorizontalSplit = true;
					firstVisibleRow = displayOptions.unfrozenPaneSettings().firstRowInTopPane();
					firstVisibleRowOfBottomPane = displayOptions.unfrozenPaneSettings().firstRowInBottomPane();
					var paneHeight = displayOptions.unfrozenPaneSettings().topPaneHeight();
					horizontalPaneSplit = 0;
					for (var rowIndex = firstVisibleRow; ; rowIndex++) {
						var rowHeight = worksheet._getRowHeightInTwips1(rowIndex, false);
						if (rowHeight < paneHeight) {
							horizontalPaneSplit += 1;
							paneHeight -= rowHeight;
						} else {
							horizontalPaneSplit += paneHeight / rowHeight;
							break;
						}
					}
				} else {
					windowHasHorizontalSplit = false;
					firstVisibleRow = displayOptions.unfrozenPaneSettings().firstRowInTopPane();
					firstVisibleRowOfBottomPane = 65535;
				}
				if (displayOptions.unfrozenPaneSettings().leftPaneWidth() > 0) {
					windowHasHorizontalSplit = true;
					firstVisibleColumn = displayOptions.unfrozenPaneSettings().firstColumnInLeftPane();
					firstVisibleColumnOfRightPane = displayOptions.unfrozenPaneSettings().firstColumnInRightPane();
					var paneWidth = displayOptions.unfrozenPaneSettings().leftPaneWidth();
					verticalPaneSplit = 0;
					for (var columnIndex = firstVisibleColumn; ; columnIndex++) {
						var columnWidth = worksheet._getColumnWidthInTwips1(columnIndex, false);
						if (columnWidth < paneWidth) {
							verticalPaneSplit += 1;
							paneWidth -= columnWidth;
						} else {
							verticalPaneSplit += paneWidth / columnWidth;
							break;
						}
					}
				} else {
					windowHasVerticalSplit = false;
					firstVisibleColumn = displayOptions.unfrozenPaneSettings().firstColumnInLeftPane();
					firstVisibleColumnOfRightPane = 65535;
				}
			}
			gridLineColorIndex = displayOptions._gridlineColorIndex();
			if (displayOptions.view() == $.ig.excel.WorksheetView.normal) {
				pageBreakPreview = false;
				pageLayout = false;
			} else if (displayOptions.view() == $.ig.excel.WorksheetView.pageBreakPreview) {
				pageBreakPreview = true;
				pageLayout = false;
			} else {
				pageBreakPreview = false;
				pageLayout = true;
			}
			windowZoom = displayOptions.magnificationInCurrentView();
			showFormulasInCells = displayOptions.showFormulasInCells();
			showGridlines = displayOptions.showGridlines();
			showOutlineSymbols = displayOptions.showOutlineSymbols();
			showRowAndColumnHeaders = displayOptions.showRowAndColumnHeaders();
			showRulerInPageLayout = displayOptions.showRulerInPageLayoutView();
			showZeroValues = displayOptions.showZeroValues();
			visibility = displayOptions.visibility();
		}
		var printOptions = customView.getPrintOptions(worksheet, false);
		if (printOptions != null) {
			centeredHorizontally = printOptions.centerHorizontally();
			centeredVertically = printOptions.centerVertically();
			printGridlines = printOptions.printGridlines();
			printRowAndColumnHeaders = printOptions.printRowAndColumnHeaders();
			fitToPages = printOptions.scalingType() == $.ig.excel.ScalingType.fitToPages;
		}
		var hiddenColumns = customView.getHiddenColumns(worksheet, false);
		if (hiddenColumns != null && hiddenColumns.count() > 0) {
			hasHiddenColumns = true;
		}
		var hiddenRows = customView.getHiddenRows(worksheet, false);
		if (hiddenRows != null && hiddenRows.count() > 0) {
			hasHiddenRows = true;
		}
		var optionFlags = 0;
		if (pageBreaksAreDisplayed) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 1);
		}
		if (showFormulasInCells) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 2);
		}
		if (showGridlines) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 4);
		}
		if (showRowAndColumnHeaders) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 8);
		}
		if (showOutlineSymbols) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 16);
		}
		if (showZeroValues) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 32);
		}
		if (centeredHorizontally) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 64);
		}
		if (centeredVertically) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 128);
		}
		if (printRowAndColumnHeaders) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 256);
		}
		if (printGridlines) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 512);
		}
		if (fitToPages) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 1024);
		}
		if (sheetContainsPrintArea) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 2048);
		}
		if (onlyOnePrintArea) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 4096);
		}
		if (listIsFiltered) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 8192);
		}
		if (autoFilterActive) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 16384);
		}
		if (panesAreFrozen) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 32768);
		}
		if (removeSplitIfFreezeRemoved) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 65536);
		}
		if (windowHasVerticalSplit) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 131072);
		}
		if (windowHasHorizontalSplit) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 262144);
		}
		if (hasHiddenRows) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 524288);
		}
		if (hasHiddenColumns) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 2097152);
		}
		optionFlags = $.ig.util.u32BitwiseOr(optionFlags, ($.ig.util.u32LS(visibility, 22)));
		if (chartIsSizedWithWindow) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 16777216);
		}
		if (viewContainsFilteredList) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 33554432);
		}
		if (pageBreakPreview) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 67108864);
		}
		if (pageLayout) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 134217728);
		}
		if (showRulerInPageLayout) {
			optionFlags = $.ig.util.u32BitwiseOr(optionFlags, 536870912);
		}
		saveManager._currentRecordStream()._write2(customView._id().toByteArray());
		saveManager._currentRecordStream()._write12((worksheet._sheetId()));
		saveManager._currentRecordStream()._write12(windowZoom);
		saveManager._currentRecordStream()._write12(gridLineColorIndex);
		saveManager._currentRecordStream()._write18(activePane);
		saveManager._currentRecordStream()._write18(optionFlags);
		saveManager._currentRecordStream()._write17(firstVisibleRow);
		saveManager._currentRecordStream()._write17((firstVisibleRow + 1));
		saveManager._currentRecordStream()._write17(firstVisibleColumn);
		saveManager._currentRecordStream()._write17((firstVisibleColumn + 1));
		saveManager._currentRecordStream()._write10(verticalPaneSplit);
		saveManager._currentRecordStream()._write10(horizontalPaneSplit);
		saveManager._currentRecordStream()._write17(firstVisibleColumnOfRightPane);
		saveManager._currentRecordStream()._write17(firstVisibleRowOfBottomPane);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.uSERSVIEWBEGIN;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord::Type()" />*/
	,
	$type: new $.ig.Type('USERSVIEWBEGINRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWBEGINRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord" />*/

$.ig.util.defType('USERSVIEWENDRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var customView = loadManager._contextStack().get$1($.ig.excel.CustomView.prototype.$type);
		if (customView == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no custom view with that id.");
			return;
		}
		var isValid = $.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16());
		if (isValid == false) {
			$.ig.ExcelUtils.prototype.debugFail("The custom view was expected to be valid, it should probably be removed from the workbook.");
		}
		loadManager._contextStack().pop();
		loadManager._contextStack().pop();
		if (customView.savePrintOptions()) {
			loadManager._contextStack().pop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(true));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.uSERSVIEWEND;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord::Type()" />*/
	,
	$type: new $.ig.Type('USERSVIEWENDRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USERSVIEWENDRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord" />*/

$.ig.util.defType('USESELFSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt16();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		saveManager._currentRecordStream()._write17(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.uSESELFS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord::Type()" />*/
	,
	$type: new $.ig.Type('USESELFSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.USESELFSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord" />*/

$.ig.util.defType('VBAOBJECTNAMERecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var codeSheetName = loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit)._unformattedString();
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet != null) {
			worksheet._vBAObjectName(codeSheetName);
		} else {
			loadManager._workbook()._vBAObjectName(codeSheetName);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var codeSheetName = null;
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet != null) {
			codeSheetName = worksheet._vBAObjectName();
		} else {
			codeSheetName = saveManager._workbook()._vBAObjectName();
		}
		saveManager._currentRecordStream()._write15(codeSheetName, $.ig.LengthType.prototype.sixteenBit);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.vBAOBJECTNAME;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord::Type()" />*/
	,
	$type: new $.ig.Type('VBAOBJECTNAMERecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VBAOBJECTNAMERecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord" />*/

$.ig.util.defType('VCENTERRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		printOptions.centerVertically($.ig.Convert.prototype.toBoolean1(loadManager._currentRecordStream()._readUInt16()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no print options in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17($.ig.Convert.prototype.toUInt16(printOptions.centerVertically()));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.vCENTER;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord::Type()" />*/
	,
	$type: new $.ig.Type('VCENTERRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VCENTERRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord" />*/

$.ig.util.defType('VERTICALPAGEBREAKSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		if (loadManager._currentRecordStream().length() == 0) {
			return;
		}
		var printOptions = loadManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no PrintOptions in the context stack.");
			return;
		}
		var numberOfBreaks = loadManager._currentRecordStream()._readUInt16();
		for (var i = 0; i < numberOfBreaks; i++) {
			var id = loadManager._currentRecordStream()._readUInt16();
			var minValue = loadManager._currentRecordStream()._readUInt16();
			var maxValue = loadManager._currentRecordStream()._readUInt16();
			var min = $.ig.util.toNullable($.ig.Number.prototype.$type, minValue);
			if (minValue == 0) {
				min = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			var max = $.ig.util.toNullable($.ig.Number.prototype.$type, maxValue);
			if (maxValue == loadManager._workbook().maxRowCount() - 1) {
				max = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			printOptions.verticalPageBreaks().add(new $.ig.excel.VerticalPageBreak(id, printOptions.printAreas()._getPrintArea(id, $.ig.util.toNullable($.ig.Number.prototype.$type, minValue), $.ig.util.toNullable($.ig.Number.prototype.$type, maxValue), true)));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var printOptions = saveManager._contextStack().get$1($.ig.excel.PrintOptions.prototype.$type);
		if (printOptions == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no PrintOptions in the context stack.");
			return;
		}
		saveManager._currentRecordStream()._write17(printOptions.verticalPageBreaks().count());
		for (var i = 0; i < printOptions.verticalPageBreaks().count(); i++) {
			var pageBreak = printOptions.verticalPageBreaks()._item(i);
			saveManager._currentRecordStream()._write17(pageBreak._id());
			saveManager._currentRecordStream()._write17(pageBreak._minResolved());
			var maxResolved = Math.min(pageBreak._maxResolved(), saveManager._workbook().maxRowCount() - 1);
			saveManager._currentRecordStream()._write17(maxResolved);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.vERTICALPAGEBREAKS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord::Type()" />*/
	,
	$type: new $.ig.Type('VERTICALPAGEBREAKSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.VERTICALPAGEBREAKSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record" />*/

$.ig.util.defType('WINDOW1Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var leftTwips = loadManager._currentRecordStream()._readInt16();
		var topTwips = loadManager._currentRecordStream()._readInt16();
		var widthTwips = loadManager._currentRecordStream()._readUInt16();
		var heightTwips = loadManager._currentRecordStream()._readUInt16();
		loadManager._workbook().windowOptions()._boundsInTwips$i($.ig.ExcelUtils.prototype.createRectangle(leftTwips, topTwips, widthTwips, heightTwips));
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		loadManager._workbook().windowOptions().minimized((optionFlags & 2) == 2);
		var hScrollBarVisible = (optionFlags & 8) == 8;
		var vScrollBarVisible = (optionFlags & 16) == 16;
		loadManager._workbook().windowOptions().tabBarVisible((optionFlags & 32) == 32);
		var scrollBars = $.ig.excel.ScrollBars.none;
		scrollBars |= hScrollBarVisible ? $.ig.excel.ScrollBars.horizontal : 0;
		scrollBars |= vScrollBarVisible ? $.ig.excel.ScrollBars.vertical : 0;
		loadManager._workbook().windowOptions().scrollBars(scrollBars);
		loadManager._workbook().windowOptions()._selectedWorksheetIndex(loadManager._currentRecordStream()._readUInt16());
		loadManager._workbook().windowOptions().firstVisibleTabIndex(loadManager._currentRecordStream()._readUInt16());
		loadManager._currentRecordStream()._readUInt16();
		loadManager._workbook().windowOptions().tabBarWidth(loadManager._currentRecordStream()._readUInt16());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var windowOptions = saveManager._workbook().windowOptions();
		saveManager._currentRecordStream()._write11($.ig.ExcelUtils.prototype.constrainShort($.ig.truncate(windowOptions._boundsInTwips$i().left())));
		saveManager._currentRecordStream()._write11($.ig.ExcelUtils.prototype.constrainShort($.ig.truncate(windowOptions._boundsInTwips$i().top())));
		saveManager._currentRecordStream()._write17($.ig.ExcelUtils.prototype.constrainUShort($.ig.truncate(windowOptions._boundsInTwips$i().width())));
		saveManager._currentRecordStream()._write17($.ig.ExcelUtils.prototype.constrainUShort($.ig.truncate(windowOptions._boundsInTwips$i().height())));
		var optionFlags = 0;
		if (windowOptions.minimized()) {
			optionFlags |= 2;
		}
		if ((windowOptions.scrollBars() & $.ig.excel.ScrollBars.horizontal) != 0) {
			optionFlags |= 8;
		}
		if ((windowOptions.scrollBars() & $.ig.excel.ScrollBars.vertical) != 0) {
			optionFlags |= 16;
		}
		if (windowOptions.tabBarVisible()) {
			optionFlags |= 32;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		var selectedIndex = saveManager._worksheets().indexOf(windowOptions.selectedWorksheet());
		var firstVisibleTabIndex = Math.min(windowOptions.firstVisibleTabIndex(), saveManager._worksheets().count() - 1);
		saveManager._currentRecordStream()._write17(selectedIndex);
		saveManager._currentRecordStream()._write17(firstVisibleTabIndex);
		saveManager._currentRecordStream()._write17(1);
		saveManager._currentRecordStream()._write17(windowOptions.tabBarWidth());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.wINDOW1;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record::Type()" />*/
	,
	$type: new $.ig.Type('WINDOW1Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW1Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record" />*/

$.ig.util.defType('WINDOW2Record', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		worksheet.displayOptions().showFormulasInCells((optionFlags & 1) == 1);
		worksheet.displayOptions().showGridlines((optionFlags & 2) == 2);
		worksheet.displayOptions().showRowAndColumnHeaders((optionFlags & 4) == 4);
		worksheet.displayOptions().panesAreFrozen((optionFlags & 8) == 8);
		worksheet.displayOptions().showZeroValues((optionFlags & 16) == 16);
		worksheet.displayOptions()._useAutomaticGridlineColor((optionFlags & 32) == 32);
		worksheet.displayOptions().orderColumnsRightToLeft((optionFlags & 64) == 64);
		worksheet.displayOptions().showOutlineSymbols((optionFlags & 128) == 128);
		var removeSplitsIfPaneFreezeRemoved = (optionFlags & 256) == 256;
		worksheet.displayOptions()._isTabSelected((optionFlags & 512) == 512);
		var sheetIsCurrentlyDisplayed = (optionFlags & 1024) == 1024;
		var showInPageBreakView = (optionFlags & 2048) == 2048;
		if (showInPageBreakView) {
			worksheet.displayOptions().view($.ig.excel.WorksheetView.pageBreakPreview);
		}
		$.ig.ExcelUtils.prototype.debugAssert(sheetIsCurrentlyDisplayed == false || worksheet.workbook().windowOptions().selectedWorksheet() == worksheet, null);
		var firstVisibleRow = loadManager._currentRecordStream()._readUInt16();
		var firstVisibleColumn = loadManager._currentRecordStream()._readUInt16();
		if (worksheet.displayOptions().panesAreFrozen()) {
			worksheet.displayOptions().frozenPaneSettings()._keepSplitIfRemoveFreeze(!removeSplitsIfPaneFreezeRemoved);
			worksheet.displayOptions().frozenPaneSettings().firstColumnInRightPane(firstVisibleColumn);
			worksheet.displayOptions().frozenPaneSettings().firstRowInBottomPane(firstVisibleRow);
		} else {
			worksheet.displayOptions().unfrozenPaneSettings().firstColumnInRightPane(firstVisibleColumn);
			worksheet.displayOptions().unfrozenPaneSettings().firstRowInBottomPane(firstVisibleRow);
		}
		if (loadManager._currentRecordStream().length() == 10) {
			var r = loadManager._currentRecordStream().readByte();
			var g = loadManager._currentRecordStream().readByte();
			var b = loadManager._currentRecordStream().readByte();
			loadManager._currentRecordStream().readByte();
			var gridLineColor = $.ig.ExcelUtils.prototype.colorFromArgb(r, g, b);
			if (!worksheet.displayOptions()._useAutomaticGridlineColor()) {
				worksheet.displayOptions()._gridlineColor$i(gridLineColor);
			}
			return;
		}
		worksheet.displayOptions()._gridlineColorIndex(loadManager._currentRecordStream()._readUInt16());
		loadManager._currentRecordStream()._readUInt16();
		var magnificationInPageBreakView = loadManager._currentRecordStream()._readUInt16();
		if (magnificationInPageBreakView == 0) {
			magnificationInPageBreakView = $.ig.excel.DisplayOptions.prototype._defaultMagnificationInPageBreakView;
		}
		var $ret = $.ig.ExcelUtils.prototype.ensureMagnificationIsValid(magnificationInPageBreakView);
		magnificationInPageBreakView = $ret.p0;
		worksheet.displayOptions().magnificationInPageBreakView(magnificationInPageBreakView);
		var magnificationInNormalView = loadManager._currentRecordStream()._readUInt16();
		if (magnificationInNormalView == 0) {
			magnificationInNormalView = $.ig.excel.DisplayOptions.prototype._defaultMagnificationInNormalView;
		}
		var $ret1 = $.ig.ExcelUtils.prototype.ensureMagnificationIsValid(magnificationInNormalView);
		magnificationInNormalView = $ret1.p0;
		worksheet.displayOptions().magnificationInNormalView(magnificationInNormalView);
		loadManager._currentRecordStream()._readUInt32();
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var optionFlags = 0;
		if (worksheet.displayOptions().showFormulasInCells()) {
			optionFlags |= 1;
		}
		if (worksheet.displayOptions().showGridlines()) {
			optionFlags |= 2;
		}
		if (worksheet.displayOptions().showRowAndColumnHeaders()) {
			optionFlags |= 4;
		}
		if (worksheet.displayOptions().panesAreFrozen()) {
			optionFlags |= 8;
		}
		if (worksheet.displayOptions().showZeroValues()) {
			optionFlags |= 16;
		}
		if (worksheet.displayOptions()._useAutomaticGridlineColor()) {
			optionFlags |= 32;
		}
		if (worksheet.displayOptions().orderColumnsRightToLeft()) {
			optionFlags |= 64;
		}
		if (worksheet.displayOptions().showOutlineSymbols()) {
			optionFlags |= 128;
		}
		if (worksheet.displayOptions().panesAreFrozen() && worksheet.displayOptions().frozenPaneSettings()._keepSplitIfRemoveFreeze() == false) {
			optionFlags |= 256;
		}
		if (worksheet.displayOptions()._isTabSelected()) {
			optionFlags |= 512;
		}
		if (worksheet == worksheet.workbook().windowOptions().selectedWorksheet()) {
			optionFlags |= 512;
			optionFlags |= 1024;
		}
		if (worksheet.displayOptions().view() == $.ig.excel.WorksheetView.pageBreakPreview) {
			optionFlags |= 2048;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
		if (worksheet.displayOptions().panesAreFrozen()) {
			if (worksheet.displayOptions().frozenPaneSettings().frozenRows() == 0) {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().frozenPaneSettings().firstRowInBottomPane());
			} else {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstRowInTopPane());
			}
			if (worksheet.displayOptions().frozenPaneSettings().frozenColumns() == 0) {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().frozenPaneSettings().firstColumnInRightPane());
			} else {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstColumnInLeftPane());
			}
		} else {
			if (worksheet.displayOptions().unfrozenPaneSettings().topPaneHeight() == 0) {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstRowInBottomPane());
			} else {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstRowInTopPane());
			}
			if (worksheet.displayOptions().unfrozenPaneSettings().leftPaneWidth() == 0) {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstColumnInRightPane());
			} else {
				saveManager._currentRecordStream()._write17(worksheet.displayOptions().unfrozenPaneSettings().firstColumnInLeftPane());
			}
		}
		saveManager._currentRecordStream()._write17(worksheet.displayOptions()._gridlineColorIndex());
		saveManager._currentRecordStream()._write17(0);
		var magnificationInPageBreakView = worksheet.displayOptions().magnificationInPageBreakView();
		if (magnificationInPageBreakView == $.ig.excel.DisplayOptions.prototype._defaultMagnificationInPageBreakView && worksheet.displayOptions().view() != $.ig.excel.WorksheetView.pageBreakPreview) {
			magnificationInPageBreakView = 0;
		}
		saveManager._currentRecordStream()._write17(magnificationInPageBreakView);
		var magnificationInNormalView = worksheet.displayOptions().magnificationInNormalView();
		if (magnificationInNormalView == $.ig.excel.DisplayOptions.prototype._defaultMagnificationInNormalView && worksheet.displayOptions().view() != $.ig.excel.WorksheetView.normal) {
			magnificationInNormalView = 0;
		}
		saveManager._currentRecordStream()._write17(magnificationInNormalView);
		saveManager._currentRecordStream()._write18($.ig.util.intSToU(0));
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.wINDOW2;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record::Type()" />*/
	,
	$type: new $.ig.Type('WINDOW2Record', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOW2Record" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord" />*/

$.ig.util.defType('WINDOWPROTECTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var winProtected = loadManager._currentRecordStream()._readUInt16() == 1;
		loadManager._workbook().protection().allowEditWindows(winProtected == false);
		loadManager._workbook().protection().__passwordInfo.initializeIsProtected(winProtected || loadManager._workbook().isProtected());
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var winProtected = saveManager._workbook().isProtected() && saveManager._workbook().protection().allowEditWindows() == false ? 1 : 0;
		saveManager._currentRecordStream()._write17(winProtected);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.wINDOWPROTECT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord::Type()" />*/
	,
	$type: new $.ig.Type('WINDOWPROTECTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WINDOWPROTECTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord" />*/

$.ig.util.defType('WRITEACCESSRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		try {
			loadManager._currentRecordStream()._readFormattedString($.ig.LengthType.prototype.sixteenBit);
		}
		catch (e) {
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("This record should not be written.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.wRITEACCESS;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord::Type()" />*/
	,
	$type: new $.ig.Type('WRITEACCESSRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEACCESSRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord" />*/

$.ig.util.defType('WRITEPROTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._isWriteProtected(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.wRITEPROT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord::Type()" />*/
	,
	$type: new $.ig.Type('WRITEPROTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WRITEPROTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord" />*/

$.ig.util.defType('WSBOOLRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var worksheet = loadManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var optionFlags = loadManager._currentRecordStream()._readUInt16();
		worksheet._showExpansionIndicatorBelowGroup((optionFlags & 64) == 64);
		worksheet.displayOptions()._showExpansionIndicatorBelowGroupedRows$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, worksheet._showExpansionIndicatorBelowGroup() ? true : false));
		worksheet.displayOptions()._showExpansionIndicatorToRightOfGroupedColumns$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, (optionFlags & 128) == 128 ? true : false));
		var fitPrintoutToNumberOfPages = (optionFlags & 256) == 256;
		if (fitPrintoutToNumberOfPages) {
			worksheet.printOptions().scalingType($.ig.excel.ScalingType.fitToPages);
		} else {
			worksheet.printOptions().scalingType($.ig.excel.ScalingType.useScalingFactor);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var worksheet = saveManager._contextStack().get$1($.ig.excel.Worksheet.prototype.$type);
		if (worksheet == null) {
			$.ig.ExcelUtils.prototype.debugFail("There is no worksheet in the context stack.");
			return;
		}
		var optionFlags = 1025;
		if (worksheet.displayOptions()._showExpansionIndicatorBelowGroupedRowsResolved()) {
			optionFlags |= 64;
		}
		if (worksheet.displayOptions()._showExpansionIndicatorToRightOfGroupedColumnsResolved()) {
			optionFlags |= 128;
		}
		if (worksheet.printOptions().scalingType() == $.ig.excel.ScalingType.fitToPages) {
			optionFlags |= 256;
		}
		saveManager._currentRecordStream()._write17(optionFlags);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.wSBOOL;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord::Type()" />*/
	,
	$type: new $.ig.Type('WSBOOLRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.WSBOOLRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord" />*/

$.ig.util.defType('XCTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readUInt16();
		var sheetIndex = loadManager._currentRecordStream()._readUInt16();
		loadManager._prepareForDataFromExternalWorksheetIndex(sheetIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		$.ig.ExcelUtils.prototype.debugFail("Saving this record is not yet supported.");
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.xCT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord::Type()" />*/
	,
	$type: new $.ig.Type('XCTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XCTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord" />*/

$.ig.util.defType('XFCRCRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		loadManager._currentRecordStream()._readFrtHeader();
		var reserved = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(reserved == 0, "The reserved value must be zero.");
		var cxfs = loadManager._currentRecordStream()._readUInt16();
		var crc = loadManager._currentRecordStream()._readUInt32();
		if (loadManager._xfRecordData() == null) {
			$.ig.ExcelUtils.prototype.debugFail("We should have cached the XfRecordData by now.");
			return;
		}
		if (crc != $.ig.ExcelUtils.prototype.computeMsoCrc32(0, loadManager._xfRecordData())) {
			loadManager._ignoreXfExtData(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		if (saveManager._xfRecordData() == null) {
			$.ig.ExcelUtils.prototype.debugFail("We should have cached the XfRecordData by now.");
			return;
		}
		var crc = $.ig.ExcelUtils.prototype.computeMsoCrc32(0, saveManager._xfRecordData());
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(saveManager._formats().count());
		saveManager._currentRecordStream()._write18(crc);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.xFCRC;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord::Type()" />*/
	,
	$type: new $.ig.Type('XFCRCRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFCRCRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord" />*/

$.ig.util.defType('XFEXTRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var info = new $.ig.XFEXTRecordInfo();
		loadManager._currentRecordStream()._readFrtHeader();
		info._reserved1 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(info._reserved1 == 0, "The reserved2 value must be zero.");
		info._ixfe = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(info._ixfe <= 4050, "The ixfe value is out of range.");
		info._reserved2 = loadManager._currentRecordStream()._readUInt16();
		$.ig.ExcelUtils.prototype.debugAssert(info._reserved2 == 0, "The reserved2 value must be zero.");
		var cexts = loadManager._currentRecordStream()._readUInt16();
		info._props = new Array(cexts);
		for (var i = 0; i < cexts; i++) {
			info._props[i] = loadManager._currentRecordStream()._readExtProp();
		}
		loadManager._deferredXFEXTRecords().add(info);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecordInfo)" />*/
	loadHelper: function (loadManager, info) {
		if (loadManager._ignoreXfExtData()) {
			return;
		}
		if (loadManager._formats().count() <= info._ixfe) {
			$.ig.ExcelUtils.prototype.debugFail("Invalid ixfe value.");
			return;
		}
		var format = loadManager._formats().__inner[info._ixfe];
		var originalFormatOptions = format.formatOptions();
		for (var i = 0; i < info._props.length; i++) {
			info._props[i].applyTo(loadManager, format);
		}
		format._setFormatOptionsInternal(originalFormatOptions);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecordInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var xfContext = saveManager._contextStack().get$1($.ig.XFRecord_XFContext.prototype.$type);
		if (xfContext == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no XFContext in the context stack.");
			return;
		}
		var format = xfContext._formatData;
		var extProps = xfContext._extProps;
		$.ig.ExcelUtils.prototype.debugAssert(extProps.count() != 0, "We should have XFEXT props here.");
		saveManager._currentRecordStream()._writeFrtHeader();
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(xfContext._xfId);
		saveManager._currentRecordStream()._write17(0);
		saveManager._currentRecordStream()._write17(extProps.count());
		for (var i = 0; i < extProps.count(); i++) {
			saveManager._currentRecordStream()._writeExtProp(extProps.__inner[i]);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.xFEXT;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord::Type()" />*/
	,
	$type: new $.ig.Type('XFEXTRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecordInfo" />*/

$.ig.util.defType('XFEXTRecordInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_reserved1: 0,
	_ixfe: 0,
	_reserved2: 0,
	_props: null,
	$type: new $.ig.Type('XFEXTRecordInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFEXTRecordInfo" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord" />*/

$.ig.util.defType('XFRecord', 'Biff8RecordBase', {
	init: function () {
		$.ig.Biff8RecordBase.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	load: function (loadManager) {
		var info = new $.ig.XFRecordInfo();
		info._ifnt = loadManager._currentRecordStream()._readUInt16();
		info._ifmt = loadManager._currentRecordStream()._readUInt16();
		info._temp1 = loadManager._currentRecordStream()._readUInt16();
		info._temp2 = loadManager._currentRecordStream().readByte();
		info._trot = loadManager._currentRecordStream().readByte();
		info._temp3 = loadManager._currentRecordStream()._readUInt16();
		info._temp4 = loadManager._currentRecordStream()._readUInt16();
		info._temp5 = loadManager._currentRecordStream()._readUInt16();
		info._temp6 = loadManager._currentRecordStream()._readUInt32();
		info._temp7 = loadManager._currentRecordStream()._readUInt16();
		loadManager._deferredXFRecords().add(info);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::Load(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecordInfo)" />*/
	loadHelper: function (loadManager, info) {
		var fLocked = $.ig.ExcelUtils.prototype.testBit(info._temp1, 0);
		var fHidden = $.ig.ExcelUtils.prototype.testBit(info._temp1, 1);
		var fStyle = $.ig.ExcelUtils.prototype.testBit(info._temp1, 2);
		var f123Prefix = $.ig.ExcelUtils.prototype.testBit(info._temp1, 3);
		var ixfParent = $.ig.ExcelUtils.prototype.getBits2(info._temp1, 4, 15);
		$.ig.ExcelUtils.prototype.debugAssert(fStyle == false || f123Prefix == false, "If fStyle is True, f123Prefix must be False.");
		$.ig.ExcelUtils.prototype.debugAssert(fStyle ^ (ixfParent != 4095), "Either fStyle should be True or ixfParent should be 0x0FFF.");
		var alc = $.ig.ExcelUtils.prototype.getBits(info._temp2, 0, 2);
		var fWrap = $.ig.ExcelUtils.prototype.testBit(info._temp2, 3);
		var alcV = $.ig.ExcelUtils.prototype.getBits(info._temp2, 4, 6);
		var fJustLastLine = $.ig.ExcelUtils.prototype.testBit(info._temp2, 7);
		$.ig.ExcelUtils.prototype.debugAssert(0 <= info._trot && info._trot < 256, "The trot value of the XF record is out of range.");
		var cIndent = $.ig.ExcelUtils.prototype.getBits2(info._temp3, 0, 3);
		var fShrinkToFit = $.ig.ExcelUtils.prototype.testBit(info._temp3, 4);
		var fMergeCell = $.ig.ExcelUtils.prototype.testBit(info._temp3, 5);
		var iReadOrder = $.ig.ExcelUtils.prototype.getBits2(info._temp3, 6, 7);
		var fAtrNum = $.ig.ExcelUtils.prototype.testBit(info._temp3, 10);
		var fAtrFnt = $.ig.ExcelUtils.prototype.testBit(info._temp3, 11);
		var fAtrAlc = $.ig.ExcelUtils.prototype.testBit(info._temp3, 12);
		var fAtrBdr = $.ig.ExcelUtils.prototype.testBit(info._temp3, 13);
		var fAtrPat = $.ig.ExcelUtils.prototype.testBit(info._temp3, 14);
		var fAtrProt = $.ig.ExcelUtils.prototype.testBit(info._temp3, 15);
		var dgLeft = $.ig.ExcelUtils.prototype.getBits2(info._temp4, 0, 3);
		var dgRight = $.ig.ExcelUtils.prototype.getBits2(info._temp4, 4, 7);
		var dgTop = $.ig.ExcelUtils.prototype.getBits2(info._temp4, 8, 11);
		var dgBottom = $.ig.ExcelUtils.prototype.getBits2(info._temp4, 12, 15);
		var icvLeft = $.ig.ExcelUtils.prototype.getBits2(info._temp5, 0, 6);
		var icvRight = $.ig.ExcelUtils.prototype.getBits2(info._temp5, 7, 13);
		var grbitDiag = $.ig.ExcelUtils.prototype.getBits2(info._temp5, 14, 15);
		var icvTop = $.ig.ExcelUtils.prototype.getBits3(info._temp6, 0, 6);
		var icvBottom = $.ig.ExcelUtils.prototype.getBits3(info._temp6, 7, 13);
		var icvDiag = $.ig.ExcelUtils.prototype.getBits3(info._temp6, 14, 20);
		var dgDiag = $.ig.ExcelUtils.prototype.getBits3(info._temp6, 21, 24);
		var fHasXFExt = $.ig.ExcelUtils.prototype.testBit1(info._temp6, 25);
		var fls = $.ig.ExcelUtils.prototype.getBits3(info._temp6, 26, 31);
		var icvFore = $.ig.ExcelUtils.prototype.getBits2(info._temp7, 0, 6);
		var icvBack = $.ig.ExcelUtils.prototype.getBits2(info._temp7, 7, 13);
		var fSxButton = $.ig.ExcelUtils.prototype.testBit(info._temp7, 14);
		$.ig.ExcelUtils.prototype.debugAssert(fStyle == false || fSxButton == false, "If fStyle is True, fSxButton must be False.");
		var format = loadManager._workbook()._createNewWorksheetCellFormatInternal(fStyle ? $.ig.WorksheetCellFormatType.prototype.styleFormat : $.ig.WorksheetCellFormatType.prototype.cellFormat);
		var parentStyleFormat = null;
		if (fStyle) {
			fAtrNum ^= true;
			fAtrFnt ^= true;
			fAtrAlc ^= true;
			fAtrBdr ^= true;
			fAtrPat ^= true;
			fAtrProt ^= true;
		} else if (0 <= ixfParent && ixfParent < loadManager._formats().count()) {
			parentStyleFormat = loadManager._formats().__inner[ixfParent];
			var childFormats;
			if ((function () { var $ret = loadManager._childrenXfsByStyleId().tryGetValue(ixfParent, childFormats); childFormats = $ret.p1; return $ret.ret; }()) == false) {
				childFormats = new $.ig.List$1($.ig.WorksheetCellFormatData.prototype.$type, 0);
				loadManager._childrenXfsByStyleId().add(ixfParent, childFormats);
			}
			childFormats.add(format);
		} else {
			$.ig.ExcelUtils.prototype.debugFail("The ixfParent value of the Xf record is out of range.");
		}
		if (0 <= info._ifnt && info._ifnt < loadManager._fonts().count()) {
			format.font().setFontFormatting(loadManager._fonts().__inner[info._ifnt]);
		} else {
			$.ig.ExcelUtils.prototype.debugFail("The ifnt value of the XF record is out of range.");
		}
		var workbook = loadManager._workbook();
		format._addIndent(fJustLastLine);
		format.alignment(alc);
		if (icvBottom != 0) {
			format.bottomBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvBottom));
			format.bottomBorderStyle(dgBottom);
		} else if (fAtrBdr) {
			format.bottomBorderStyle(dgBottom);
		}
		if (icvDiag != 0) {
			format.diagonalBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvDiag));
			format.diagonalBorders($.ig.excel.DiagonalBorders.none | (grbitDiag << 1));
			format.diagonalBorderStyle(dgDiag);
		} else if (grbitDiag != 0) {
			format.diagonalBorders($.ig.excel.DiagonalBorders.none | (grbitDiag << 1));
			format.diagonalBorderStyle(dgDiag);
		} else if (fAtrBdr) {
			format.diagonalBorderStyle(dgDiag);
		}
		format.fill(new $.ig.excel.CellFillPattern(icvBack, icvFore, fls, format));
		format._formatStringIndex(info._ifmt);
		format.indent(cIndent);
		if (icvLeft != 0) {
			format.leftBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvLeft));
			format.leftBorderStyle(dgLeft);
		} else if (fAtrBdr) {
			format.leftBorderStyle(dgLeft);
		}
		format._locked$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(fLocked));
		if (icvRight != 0) {
			format.rightBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvRight));
			format.rightBorderStyle(dgRight);
		} else if (fAtrBdr) {
			format.rightBorderStyle(dgRight);
		}
		format.rotation(info._trot);
		format._shrinkToFit$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(fShrinkToFit));
		if (icvTop != 0) {
			format.topBorderColorInfo(new $.ig.excel.WorkbookColorInfo(workbook, icvTop));
			format.topBorderStyle(dgTop);
		} else if (fAtrBdr) {
			format.topBorderStyle(dgTop);
		}
		format.verticalAlignment(alcV);
		format._wrapText$i($.ig.ExcelUtils.prototype.toDefaultableBoolean(fWrap));
		var formatOptions = $.ig.excel.WorksheetCellFormatOptions.none;
		if (fAtrNum) {
			formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyNumberFormatting;
		}
		if (fAtrFnt) {
			formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting;
		}
		if (fAtrAlc) {
			formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyAlignmentFormatting;
		}
		if (fAtrBdr) {
			formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyBorderFormatting;
		}
		if (fAtrPat) {
			formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyFillFormatting;
		}
		if (fAtrProt) {
			formatOptions |= $.ig.excel.WorksheetCellFormatOptions.applyProtectionFormatting;
		}
		if (format._type() == $.ig.WorksheetCellFormatType.prototype.styleFormat) {
			format.formatOptions(formatOptions);
		} else {
			format._setFormatOptionsInternal(formatOptions);
		}
		var xfid = loadManager._formats().count();
		$.ig.ExcelUtils.prototype.debugAssert(xfid >= 0 || format._type() == $.ig.WorksheetCellFormatType.prototype.styleFormat, "The first XF record should be a style XF.");
		loadManager._formats().add(format);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::LoadHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003, Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecordInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	save: function (saveManager) {
		var xfContext = saveManager._contextStack().get$1($.ig.XFRecord_XFContext.prototype.$type);
		if (xfContext == null) {
			$.ig.ExcelUtils.prototype.debugFail("There was no XFContext in the context stack.");
			return;
		}
		var format = xfContext._formatData;
		var workbook = saveManager._workbook();
		$.ig.ExcelUtils.prototype.debugAssert($.ig.util.nullableNotEquals(format._fontInternal()._saveIndex(), null), "The ifnt value for the XF record is invalid");
		var ifnt = format._fontInternal()._saveIndex().getValueOrDefault();
		saveManager._currentRecordStream()._write17(ifnt);
		var ifmt = format._formatStringIndexResolved();
		if (ifmt < 0) {
			$.ig.ExcelUtils.prototype.debugFail("The ifmt value for the XF record is invalid");
			ifmt = 0;
		} else {
			ifmt = saveManager._getNumberFormatSerializationIndex(ifmt);
		}
		saveManager._currentRecordStream()._write17(ifmt);
		var ixfParent;
		if (format._type() != $.ig.WorksheetCellFormatType.prototype.styleFormat) {
			ixfParent = saveManager._getStyleFormatIndex(format.style());
			if (ixfParent < 0) {
				$.ig.ExcelUtils.prototype.debugFail("The ixfParent value for the XF record is invalid");
				ixfParent = 0;
			}
		} else {
			ixfParent = 4095;
		}
		var temp16 = 0;
		var $ret = $.ig.ExcelUtils.prototype.setBit3(temp16, format._lockedResolved(), 0);
		temp16 = $ret.p0;
		var $ret1 = $.ig.ExcelUtils.prototype.setBit2(temp16, format._type() == $.ig.WorksheetCellFormatType.prototype.styleFormat, 2);
		temp16 = $ret1.p0;
		var $ret2 = $.ig.ExcelUtils.prototype.addBits1(temp16, ixfParent, 4, 15);
		temp16 = $ret2.p0;
		saveManager._currentRecordStream()._write17(temp16);
		var temp8 = 0;
		var $ret3 = $.ig.ExcelUtils.prototype.addBits(temp8, format._alignmentResolved(), 0, 2);
		temp8 = $ret3.p0;
		var $ret4 = $.ig.ExcelUtils.prototype.setBit1(temp8, format._wrapTextResolved(), 3);
		temp8 = $ret4.p0;
		var $ret5 = $.ig.ExcelUtils.prototype.addBits(temp8, format._verticalAlignmentResolved(), 4, 6);
		temp8 = $ret5.p0;
		var $ret6 = $.ig.ExcelUtils.prototype.setBit(temp8, format._addIndent(), 7);
		temp8 = $ret6.p0;
		saveManager._currentRecordStream()._write9(temp8);
		var rotation = format._rotationResolved() % 256;
		if (rotation < 0) {
			rotation += 256;
		}
		saveManager._currentRecordStream()._write9(rotation);
		var formatOptionsPresetValue = (format._type() != $.ig.WorksheetCellFormatType.prototype.styleFormat);
		var fAtrNum = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyNumberFormatting) == formatOptionsPresetValue;
		var fAtrFnt = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting) == formatOptionsPresetValue;
		var fAtrAlc = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyAlignmentFormatting) == formatOptionsPresetValue;
		var fAtrBdr = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyBorderFormatting) == formatOptionsPresetValue;
		var fAtrPat = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyFillFormatting) == formatOptionsPresetValue;
		var fAtrProt = $.ig.ExcelUtils.prototype.testFlag2(format.formatOptions(), $.ig.excel.WorksheetCellFormatOptions.applyProtectionFormatting) == formatOptionsPresetValue;
		temp16 = 0;
		var $ret7 = $.ig.ExcelUtils.prototype.addBits1(temp16, Math.min($.ig.WorksheetCellFormatData.prototype._maxIndent2003, format._indentResolved()), 0, 3);
		temp16 = $ret7.p0;
		var $ret8 = $.ig.ExcelUtils.prototype.setBit3(temp16, format._shrinkToFitResolved(), 4);
		temp16 = $ret8.p0;
		var $ret9 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAtrNum, 10);
		temp16 = $ret9.p0;
		var $ret10 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAtrFnt, 11);
		temp16 = $ret10.p0;
		var $ret11 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAtrAlc, 12);
		temp16 = $ret11.p0;
		var $ret12 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAtrBdr, 13);
		temp16 = $ret12.p0;
		var $ret13 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAtrPat, 14);
		temp16 = $ret13.p0;
		var $ret14 = $.ig.ExcelUtils.prototype.setBit2(temp16, fAtrProt, 15);
		temp16 = $ret14.p0;
		saveManager._currentRecordStream()._write17(temp16);
		var dgLeft;
		var dgRight;
		var dgTop;
		var dgBottom;
		var dgDiag;
		var icvLeft;
		var icvRight;
		var icvTop;
		var icvBottom;
		var icvDiag;
		if (format.bottomBorderStyle() != $.ig.excel.CellBorderLineStyle.$default || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(format.bottomBorderColorInfo(), null)) {
			dgBottom = format._bottomBorderStyleResolved();
			icvBottom = format._bottomBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
		} else {
			dgBottom = $.ig.excel.CellBorderLineStyle.none;
			icvBottom = 0;
		}
		if (format.diagonalBorderStyle() != $.ig.excel.CellBorderLineStyle.$default || format.diagonalBorders() != $.ig.excel.DiagonalBorders.$default || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(format.diagonalBorderColorInfo(), null)) {
			dgDiag = format._diagonalBorderStyleResolved();
			icvDiag = format._diagonalBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
		} else {
			dgDiag = $.ig.excel.CellBorderLineStyle.none;
			icvDiag = 0;
		}
		if (format.leftBorderStyle() != $.ig.excel.CellBorderLineStyle.$default || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(format.leftBorderColorInfo(), null)) {
			dgLeft = format._leftBorderStyleResolved();
			icvLeft = format._leftBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
		} else {
			dgLeft = $.ig.excel.CellBorderLineStyle.none;
			icvLeft = 0;
		}
		if (format.rightBorderStyle() != $.ig.excel.CellBorderLineStyle.$default || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(format.rightBorderColorInfo(), null)) {
			dgRight = format._rightBorderStyleResolved();
			icvRight = format._rightBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
		} else {
			dgRight = $.ig.excel.CellBorderLineStyle.none;
			icvRight = 0;
		}
		if (format.topBorderStyle() != $.ig.excel.CellBorderLineStyle.$default || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(format.topBorderColorInfo(), null)) {
			dgTop = format._topBorderStyleResolved();
			icvTop = format._topBorderColorInfoResolved()._getIndex(workbook, $.ig.ColorableItem.prototype.cellBorder);
		} else {
			dgTop = $.ig.excel.CellBorderLineStyle.none;
			icvTop = 0;
		}
		temp16 = 0;
		var $ret15 = $.ig.ExcelUtils.prototype.addBits1(temp16, dgLeft, 0, 3);
		temp16 = $ret15.p0;
		var $ret16 = $.ig.ExcelUtils.prototype.addBits1(temp16, dgRight, 4, 7);
		temp16 = $ret16.p0;
		var $ret17 = $.ig.ExcelUtils.prototype.addBits1(temp16, dgTop, 8, 11);
		temp16 = $ret17.p0;
		var $ret18 = $.ig.ExcelUtils.prototype.addBits1(temp16, dgBottom, 12, 15);
		temp16 = $ret18.p0;
		saveManager._currentRecordStream()._write17(temp16);
		var grbitDiag = format._diagonalBordersResolved() >> 1;
		temp16 = 0;
		var $ret19 = $.ig.ExcelUtils.prototype.addBits1(temp16, icvLeft, 0, 6);
		temp16 = $ret19.p0;
		var $ret20 = $.ig.ExcelUtils.prototype.addBits1(temp16, icvRight, 7, 13);
		temp16 = $ret20.p0;
		var $ret21 = $.ig.ExcelUtils.prototype.addBits1(temp16, grbitDiag, 14, 15);
		temp16 = $ret21.p0;
		saveManager._currentRecordStream()._write17(temp16);
		var fillResolved = format._fillResolved();
		var fillPattern = format._getFillPattern(fillResolved);
		var fHasXFExt = xfContext._extProps.count() != 0;
		var temp32 = 0;
		var $ret22 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvTop, 0, 6);
		temp32 = $ret22.p0;
		var $ret23 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvBottom, 7, 13);
		temp32 = $ret23.p0;
		var $ret24 = $.ig.ExcelUtils.prototype.addBits2(temp32, icvDiag, 14, 20);
		temp32 = $ret24.p0;
		var $ret25 = $.ig.ExcelUtils.prototype.addBits2(temp32, dgDiag, 21, 24);
		temp32 = $ret25.p0;
		var $ret26 = $.ig.ExcelUtils.prototype.setBit4(temp32, fHasXFExt, 25);
		temp32 = $ret26.p0;
		var $ret27 = $.ig.ExcelUtils.prototype.addBits2(temp32, fillPattern, 26, 31);
		temp32 = $ret27.p0;
		saveManager._currentRecordStream()._write18(temp32);
		var icvFore = format._getFileFormatFillPatternColor(fillResolved, false, true)._getIndex(workbook, $.ig.ColorableItem.prototype.cellFill);
		var icvBack = format._getFileFormatFillPatternColor(fillResolved, true, true)._getIndex(workbook, $.ig.ColorableItem.prototype.cellFill);
		temp16 = 0;
		var $ret28 = $.ig.ExcelUtils.prototype.addBits1(temp16, icvFore, 0, 6);
		temp16 = $ret28.p0;
		var $ret29 = $.ig.ExcelUtils.prototype.addBits1(temp16, icvBack, 7, 13);
		temp16 = $ret29.p0;
		saveManager._currentRecordStream()._write17(temp16);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::Save(Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::Type()" />*/
	type: function () {
		return $.ig.BIFF8RecordType.prototype.xF;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Serialization.BIFF8.BIFF8RecordType Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord::Type()" />*/
	,
	$type: new $.ig.Type('XFRecord', $.ig.Biff8RecordBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord_XFContext" />*/

$.ig.util.defType('XFRecord_XFContext', 'Object', {
	_formatData: null,
	_xfId: 0,
	_extProps: null,
	init: function (formatData, xfid, extProps) {
		$.ig.Object.prototype.init.call(this);
		this._formatData = formatData;
		this._xfId = xfid;
		this._extProps = extProps;
	},
	$type: new $.ig.Type('XFRecord_XFContext', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecord_XFContext" />*/

/*<BeginType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecordInfo" />*/

$.ig.util.defType('XFRecordInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_ifnt: 0,
	_ifmt: 0,
	_trot: 0,
	_temp1: 0,
	_temp2: 0,
	_temp3: 0,
	_temp4: 0,
	_temp5: 0,
	_temp6: 0,
	_temp7: 0,
	$type: new $.ig.Type('XFRecordInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.XFRecordInfo" />*/

/*<BeginStatics Name="AssemblyRef" />*/

$.ig.AssemblyRef.prototype.assemblyName = $.ig.AssemblyVersion.prototype.assemblyNamePrefix + ".Documents.Excel_SERIALIZATION_BIFF8" + $.ig.AssemblyVersion.prototype.assemblyNameSuffix;
$.ig.AssemblyRef.prototype.assemblyDescriptionBase = "Excel Biff8 Serialization Library for " + $.ig.AssemblyVersion.prototype.platform;
/*<EndStatics Name="AssemblyRef" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003" />*/

$.ig.WorkbookSaveManagerExcel2003.prototype._maxCellCountPerSlice = 1000;
if ($.ig.WorkbookSaveManagerExcel2003.prototype._staticInit && !$.ig.WorkbookSaveManagerExcel2003.prototype.workbookSaveManagerExcel2003StaticInitCalled) { $.ig.WorkbookSaveManagerExcel2003.prototype._staticInit(); $.ig.WorkbookSaveManagerExcel2003.prototype.workbookSaveManagerExcel2003StaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor" />*/

$.ig.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor.prototype.__instance = null;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_GetSizeTokenVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor" />*/

$.ig.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor.prototype.instance = new $.ig.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor();
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor" />*/

$.ig.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor.prototype.instance = new $.ig.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor();
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor" />*/

$.ig.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor.prototype.__instance = null;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveAdditionalDataTokenVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor" />*/

$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__instance = null;
$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__empty7Bytes = new Array(7);
$.ig.WorkbookSaveManagerExcel2003_SaveTokenVisitor.prototype.__empty8Bytes = new Array(8);
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003_SaveTokenVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003" />*/

if ($.ig.WorkbookLoadManagerExcel2003.prototype._staticInit && !$.ig.WorkbookLoadManagerExcel2003.prototype.workbookLoadManagerExcel2003StaticInitCalled) { $.ig.WorkbookLoadManagerExcel2003.prototype._staticInit(); $.ig.WorkbookLoadManagerExcel2003.prototype.workbookLoadManagerExcel2003StaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor" />*/

$.ig.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor.prototype.__instance = null;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor" />*/

$.ig.WorkbookLoadManagerExcel2003_LoadTokenVisitor.prototype.__instance = null;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003_LoadTokenVisitor" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003" />*/

$.ig.WorkbookSerializationDataExcel2003.prototype.debugWriteLoadedCellValues = false;
$.ig.WorkbookSerializationDataExcel2003.prototype.debugWriteRecords = false;
$.ig.WorkbookSerializationDataExcel2003.prototype.debugWriteFullRecords = false;
$.ig.WorkbookSerializationDataExcel2003.prototype.defaultCellFormatXfId = 15;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.WorkbookSerializationDataExcel2003" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream" />*/

$.ig.BiffRecordStream.prototype._maxStringsPerSlice = 1000;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BiffRecordStream" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream" />*/

$.ig.Biff8RecordStream.prototype._headerSize = 4;
$.ig.Biff8RecordStream.prototype._maxBlockSize = 8224;
$.ig.Biff8RecordStream.prototype.__urlMonikerClsid = new $.ig.Guid(2, 2045430240, (47865), 4558, 140, 130, 0, 170, 0, 75, 169, 11);
$.ig.Biff8RecordStream.prototype.__fileMonikerClsid = new $.ig.Guid(2, 771, 0, 0, 192, 0, 0, 0, 0, 0, 0, 70);
$.ig.Biff8RecordStream.prototype.__compositeMonikerClsid = new $.ig.Guid(2, 777, 0, 0, 192, 0, 0, 0, 0, 0, 0, 70);
$.ig.Biff8RecordStream.prototype.__antiMonikerClsid = new $.ig.Guid(2, 773, 0, 0, 192, 0, 0, 0, 0, 0, 0, 70);
$.ig.Biff8RecordStream.prototype.__itemMonikerClsid = new $.ig.Guid(2, 772, 0, 0, 192, 0, 0, 0, 0, 0, 0, 70);
$.ig.Biff8RecordStream.prototype.__serialGuid = new $.ig.Guid(2, (4102117497), 7483, 18559, 175, 44, 130, 93, 196, 133, 39, 99);
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper" />*/

$.ig.Biff8RecordStream_AFDOper.prototype.vTUndefined = 0;
$.ig.Biff8RecordStream_AFDOper.prototype.vTRk = 2;
$.ig.Biff8RecordStream_AFDOper.prototype.vTDouble = 4;
$.ig.Biff8RecordStream_AFDOper.prototype.vTString = 6;
$.ig.Biff8RecordStream_AFDOper.prototype.vTBoolErr = 8;
$.ig.Biff8RecordStream_AFDOper.prototype.vTBlanks = 12;
$.ig.Biff8RecordStream_AFDOper.prototype.vTNonBlanks = 14;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream_AFDOper" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP" />*/

$.ig.BLIP.prototype.__initializeStreamByBlipType = null;
$.ig.BLIP.prototype.__saveActionsByBlipType = null;
if ($.ig.BLIP.prototype.staticInit && !$.ig.BLIP.prototype.bLIPStaticInitCalled) { $.ig.BLIP.prototype.staticInit(); $.ig.BLIP.prototype.bLIPStaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.BLIP" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData" />*/

$.ig.ClientData.prototype._bRAIRecordFormulaOffset = 6;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.ClientData" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase" />*/

$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefRecolorFillAsPicture = 22;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefUseShapeAnchor = 21;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefFilled = 20;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefHitTestFill = 19;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefillShape = 18;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefillUseRect = 17;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUsefNoFillHitTest = 16;
$.ig.PropertyTableBase.prototype.fillStyleProp_fRecolorFillAsPicture = 6;
$.ig.PropertyTableBase.prototype.fillStyleProp_fUseShapeAnchor = 5;
$.ig.PropertyTableBase.prototype.fillStyleProp_fFilled = 4;
$.ig.PropertyTableBase.prototype.fillStyleProp_fHitTestFill = 3;
$.ig.PropertyTableBase.prototype.fillStyleProp_fillShape = 2;
$.ig.PropertyTableBase.prototype.fillStyleProp_fillUseRect = 1;
$.ig.PropertyTableBase.prototype.fillStyleProp_fNoFillHitTest = 0;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefLayoutInCell = 31;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefIsBullet = 30;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefStandardHR = 29;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefNoshadeHR = 28;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefHorizRule = 27;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefUserDrawn = 26;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefAllowOverlap = 25;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefReallyHidden = 24;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefScriptAnchor = 23;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefEditedWrap = 22;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefBehindDocument = 21;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefOnDblClickNotify = 20;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefIsButton = 19;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefOneD = 18;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefHidden = 17;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUsefPrint = 16;
$.ig.PropertyTableBase.prototype.groupShapeProp_fLayoutInCell = 15;
$.ig.PropertyTableBase.prototype.groupShapeProp_fIsBullet = 14;
$.ig.PropertyTableBase.prototype.groupShapeProp_fStandardHR = 13;
$.ig.PropertyTableBase.prototype.groupShapeProp_fNoshadeHR = 12;
$.ig.PropertyTableBase.prototype.groupShapeProp_fHorizRule = 11;
$.ig.PropertyTableBase.prototype.groupShapeProp_fUserDrawn = 10;
$.ig.PropertyTableBase.prototype.groupShapeProp_fAllowOverlap = 9;
$.ig.PropertyTableBase.prototype.groupShapeProp_fReallyHidden = 8;
$.ig.PropertyTableBase.prototype.groupShapeProp_fScriptAnchor = 7;
$.ig.PropertyTableBase.prototype.groupShapeProp_fEditedWrap = 6;
$.ig.PropertyTableBase.prototype.groupShapeProp_fBehindDocument = 5;
$.ig.PropertyTableBase.prototype.groupShapeProp_fOnDblClickNotify = 4;
$.ig.PropertyTableBase.prototype.groupShapeProp_fIsButton = 3;
$.ig.PropertyTableBase.prototype.groupShapeProp_fOneD = 2;
$.ig.PropertyTableBase.prototype.groupShapeProp_fHidden = 1;
$.ig.PropertyTableBase.prototype.groupShapeProp_fPrint = 0;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefLineOpaqueBackColor = 25;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefInsetPen = 22;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefInsetPenOK = 21;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefArrowheadsOK = 20;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefLine = 19;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefHitTestLine = 18;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefLineFillShape = 17;
$.ig.PropertyTableBase.prototype.lineStyleProp_fUsefNoLineDrawDash = 16;
$.ig.PropertyTableBase.prototype.lineStyleProp_fLineOpaqueBackColor = 9;
$.ig.PropertyTableBase.prototype.lineStyleProp_fInsetPen = 6;
$.ig.PropertyTableBase.prototype.lineStyleProp_fInsetPenOK = 5;
$.ig.PropertyTableBase.prototype.lineStyleProp_fArrowheadsOK = 4;
$.ig.PropertyTableBase.prototype.lineStyleProp_fLine = 3;
$.ig.PropertyTableBase.prototype.lineStyleProp_fHitTestLine = 2;
$.ig.PropertyTableBase.prototype.lineStyleProp_fLineFillShape = 1;
$.ig.PropertyTableBase.prototype.lineStyleProp_fNoLineDrawDash = 0;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockAgainstUngrouping = 25;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockRotation = 24;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockAspectRatio = 23;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockPosition = 22;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockAgainstSelect = 21;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockCropping = 20;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockVertices = 19;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockText = 18;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockAdjustHandles = 17;
$.ig.PropertyTableBase.prototype.protectionProp_fUsefLockAgainstGrouping = 16;
$.ig.PropertyTableBase.prototype.protectionProp_fLockAgainstUngrouping = 9;
$.ig.PropertyTableBase.prototype.protectionProp_fLockRotation = 8;
$.ig.PropertyTableBase.prototype.protectionProp_fLockAspectRatio = 7;
$.ig.PropertyTableBase.prototype.protectionProp_fLockPosition = 6;
$.ig.PropertyTableBase.prototype.protectionProp_fLockAgainstSelect = 5;
$.ig.PropertyTableBase.prototype.protectionProp_fLockCropping = 4;
$.ig.PropertyTableBase.prototype.protectionProp_fLockVertices = 3;
$.ig.PropertyTableBase.prototype.protectionProp_fLockText = 2;
$.ig.PropertyTableBase.prototype.protectionProp_fLockAdjustHandles = 1;
$.ig.PropertyTableBase.prototype.protectionProp_fLockAgainstGrouping = 0;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefPolicyLabel = 25;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefPolicyBarcode = 24;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefFlipHOverride = 23;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefFlipVOverride = 22;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefOleIcon = 21;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefPreferRelativeResize = 20;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefLockShapeType = 19;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefInitiator = 18;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefDeleteAttachedObject = 17;
$.ig.PropertyTableBase.prototype.shapeProp_fUsefBackground = 16;
$.ig.PropertyTableBase.prototype.shapeProp_fPolicyLabel = 9;
$.ig.PropertyTableBase.prototype.shapeProp_fPolicyBarcode = 8;
$.ig.PropertyTableBase.prototype.shapeProp_fFlipHOverride = 7;
$.ig.PropertyTableBase.prototype.shapeProp_fFlipVOverride = 6;
$.ig.PropertyTableBase.prototype.shapeProp_fOleIcon = 5;
$.ig.PropertyTableBase.prototype.shapeProp_fPreferRelativeResize = 4;
$.ig.PropertyTableBase.prototype.shapeProp_fLockShapeType = 3;
$.ig.PropertyTableBase.prototype.shapeProp_fInitiator = 2;
$.ig.PropertyTableBase.prototype.shapeProp_fDeleteAttachedObject = 1;
$.ig.PropertyTableBase.prototype.shapeProp_fBackground = 0;
$.ig.PropertyTableBase.prototype.textProp_fUsefSelectText = 20;
$.ig.PropertyTableBase.prototype.textProp_fUsefAutoTextMargin = 19;
$.ig.PropertyTableBase.prototype.textProp_fUsefRotateText = 18;
$.ig.PropertyTableBase.prototype.textProp_fUsefFitShapeToText = 17;
$.ig.PropertyTableBase.prototype.textProp_fUsefFitTextToShape = 16;
$.ig.PropertyTableBase.prototype.textProp_fSelectText = 4;
$.ig.PropertyTableBase.prototype.textProp_fAutoTextMargin = 3;
$.ig.PropertyTableBase.prototype.textProp_fRotateText = 2;
$.ig.PropertyTableBase.prototype.textProp_fFitShapeToText = 1;
$.ig.PropertyTableBase.prototype.textProp_fFitTextToShape = 0;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.EscherRecords.PropertyTableBase" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase" />*/

$.ig.Biff8RecordBase.prototype._createBiffRecordCallback = null;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.Biff8RecordBase" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record" />*/

$.ig.AUTOFILTER12Record.prototype.cFTNotCustom = $.ig.ST_DynamicFilterType.prototype._null;
$.ig.AUTOFILTER12Record.prototype.cFTAboveAverage = $.ig.ST_DynamicFilterType.prototype.aboveAverage;
$.ig.AUTOFILTER12Record.prototype.cFTBelowAverage = $.ig.ST_DynamicFilterType.prototype.belowAverage;
$.ig.AUTOFILTER12Record.prototype.cFTTomorrow = $.ig.ST_DynamicFilterType.prototype.tomorrow;
$.ig.AUTOFILTER12Record.prototype.cFTToday = $.ig.ST_DynamicFilterType.prototype.today;
$.ig.AUTOFILTER12Record.prototype.cFTYesterday = $.ig.ST_DynamicFilterType.prototype.yesterday;
$.ig.AUTOFILTER12Record.prototype.cFTNextWeek = $.ig.ST_DynamicFilterType.prototype.nextWeek;
$.ig.AUTOFILTER12Record.prototype.cFTThisWeek = $.ig.ST_DynamicFilterType.prototype.thisWeek;
$.ig.AUTOFILTER12Record.prototype.cFTLastWeek = $.ig.ST_DynamicFilterType.prototype.lastWeek;
$.ig.AUTOFILTER12Record.prototype.cFTNextMonth = $.ig.ST_DynamicFilterType.prototype.nextMonth;
$.ig.AUTOFILTER12Record.prototype.cFTThisMonth = $.ig.ST_DynamicFilterType.prototype.thisMonth;
$.ig.AUTOFILTER12Record.prototype.cFTLastMonth = $.ig.ST_DynamicFilterType.prototype.lastMonth;
$.ig.AUTOFILTER12Record.prototype.cFTNextQuarter = $.ig.ST_DynamicFilterType.prototype.nextQuarter;
$.ig.AUTOFILTER12Record.prototype.cFTThisQuarter = $.ig.ST_DynamicFilterType.prototype.thisQuarter;
$.ig.AUTOFILTER12Record.prototype.cFTLastQuarter = $.ig.ST_DynamicFilterType.prototype.lastQuarter;
$.ig.AUTOFILTER12Record.prototype.cFTNextYear = $.ig.ST_DynamicFilterType.prototype.nextYear;
$.ig.AUTOFILTER12Record.prototype.cFTThisYear = $.ig.ST_DynamicFilterType.prototype.thisYear;
$.ig.AUTOFILTER12Record.prototype.cFTLastYear = $.ig.ST_DynamicFilterType.prototype.lastYear;
$.ig.AUTOFILTER12Record.prototype.cFTYearToDate = $.ig.ST_DynamicFilterType.prototype.yearToDate;
$.ig.AUTOFILTER12Record.prototype.cFT1stQuarter = $.ig.ST_DynamicFilterType.prototype.q1;
$.ig.AUTOFILTER12Record.prototype.cFT2ndQuarter = $.ig.ST_DynamicFilterType.prototype.q2;
$.ig.AUTOFILTER12Record.prototype.cFT3rdQuarter = $.ig.ST_DynamicFilterType.prototype.q3;
$.ig.AUTOFILTER12Record.prototype.cFT4thQuarter = $.ig.ST_DynamicFilterType.prototype.q4;
$.ig.AUTOFILTER12Record.prototype.cFT1stMonth = $.ig.ST_DynamicFilterType.prototype.m1;
$.ig.AUTOFILTER12Record.prototype.cFT2ndMonth = $.ig.ST_DynamicFilterType.prototype.m2;
$.ig.AUTOFILTER12Record.prototype.cFT3rdMonth = $.ig.ST_DynamicFilterType.prototype.m3;
$.ig.AUTOFILTER12Record.prototype.cFT4thMonth = $.ig.ST_DynamicFilterType.prototype.m4;
$.ig.AUTOFILTER12Record.prototype.cFT5thMonth = $.ig.ST_DynamicFilterType.prototype.m5;
$.ig.AUTOFILTER12Record.prototype.cFT6thMonth = $.ig.ST_DynamicFilterType.prototype.m6;
$.ig.AUTOFILTER12Record.prototype.cFT7thMonth = $.ig.ST_DynamicFilterType.prototype.m7;
$.ig.AUTOFILTER12Record.prototype.cFT8thMonth = $.ig.ST_DynamicFilterType.prototype.m8;
$.ig.AUTOFILTER12Record.prototype.cFT9thMonth = $.ig.ST_DynamicFilterType.prototype.m9;
$.ig.AUTOFILTER12Record.prototype.cFT10thMonth = $.ig.ST_DynamicFilterType.prototype.m10;
$.ig.AUTOFILTER12Record.prototype.cFT11thMonth = $.ig.ST_DynamicFilterType.prototype.m11;
$.ig.AUTOFILTER12Record.prototype.cFT12thMonth = $.ig.ST_DynamicFilterType.prototype.m12;
$.ig.AUTOFILTER12Record.prototype._datePeriodFilterCondition1Value = 6.50121220736663E-319;
$.ig.AUTOFILTER12Record.prototype._datePeriodFilterCondition2Value = 1.66431042389899E-316;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.AUTOFILTER12Record" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord" />*/

$.ig.BOOKBOOLRecord.prototype._fNoSaveSupBit = 1;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.BOOKBOOLRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord" />*/

$.ig.EXTSSTRecord.prototype._bucketSize = 8;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.EXTSSTRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord" />*/

$.ig.FILEPASSRecord.prototype._wEncryptionTypeXORObfuscation = 0;
$.ig.FILEPASSRecord.prototype._wEncryptionTypeRC4Encryption = 1;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILEPASSRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord" />*/

$.ig.FILESHARINGRecord.prototype._maxUserNameLength = 54;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.FILESHARINGRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord" />*/

$.ig.HLINKRecord.prototype._hLinkClsId = new $.ig.Guid(2, 2045430224, (47865), 4558, 140, 130, 0, 170, 0, 75, 169, 11);
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.HLINKRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord" />*/

$.ig.INDEXRecord.prototype.positionOfDefColWidthAddress = 12;
$.ig.INDEXRecord.prototype.positionOfDBCellAddresses = 16;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.INDEXRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord" />*/

$.ig.SHEETEXTRecord.prototype._sHEETEXTRecordSize = 40;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SHEETEXTRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord" />*/

$.ig.SUPBOOKRecord.prototype._progIdSeparator = '\u0003';
$.ig.SUPBOOKRecord.prototype._currentWorkbookID = 1025;
$.ig.SUPBOOKRecord.prototype._addInFunctionListID = 14849;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.SUPBOOKRecord" />*/

/*<BeginStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord" />*/

$.ig.THEMERecord.prototype._customTheme = 0;
$.ig.THEMERecord.prototype._defaultTheme = 124226;
/*<EndStatics Name="Infragistics.Documents.Excel.Serialization.BIFF8.BiffRecords.THEMERecord" />*/


/*<BeginGlobal/>*/
if ($.ig.excel) { $.ig.excel._isNamespace = true; }

/*<EndGlobal/>*/
/*<BeginFooter/>*/
}));// REMOVE_FROM_COMBINED_FILES
/*<EndFooter/>*/

