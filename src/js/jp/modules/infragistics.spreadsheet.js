/*!@license
* Infragistics.Web.ClientUI infragistics.spreadsheet.js 17.1.20171.1012
*
* Copyright (c) 2011-2017 Infragistics Inc.
*
* http://www.infragistics.com/
*
* Depends:
*     jquery-1.4.4.js
*     jquery.ui.core.js
*     jquery.ui.widget.js
*     infragistics.util.js
*     infragistics.ext_core.js
*     infragistics.ext_collections.js
*     infragistics.ext_collectionsExtended.js
*     infragistics.ext_io.js
*     infragistics.ext_text.js
*     infragistics.ext_web.js
*     infragistics.xml.js
*     infragistics.documents.core_core.js
*     infragistics.documents.core_openxml.js
*     infragistics.dv_core.js
*     infragistics.dv_jquerydom.js
*     infragistics.excel_core.js
*     infragistics.ext_ui.js
*     infragistics.undo.js
*/
/*<BeginHeader/>*/
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		define( [
			'./infragistics.util',
			'./infragistics.ext_core',
			'./infragistics.ext_collections',
			'./infragistics.ext_collectionsExtended',
			'./infragistics.ext_io',
			'./infragistics.ext_text',
			'./infragistics.ext_web',
			'./infragistics.xml',
			'./infragistics.documents.core_core',
			'./infragistics.documents.core_openxml',
			'./infragistics.dv_core',
			'./infragistics.dv_jquerydom',
			'./infragistics.excel_core',
			'./infragistics.ext_ui',
			'./infragistics.undo'
		], factory );
	} else {
		factory(igRoot);
	}
}
(function ($) {
	/*!@license
* Infragistics.Web.ClientUI infragistics.spreadsheet.js resources 17.1.20171.1012
*
* Copyright (c) 2011-2017 Infragistics Inc.
*
* http://www.infragistics.com/
*
*/

/*global define, jQuery */

	$.ig = $.ig || {};
	$.ig.spreadsheet = $.ig.spreadsheet || {};
	$.ig.spreadsheet.locale = $.ig.spreadsheet.locale || {};
	$.extend($.ig.spreadsheet.locale, {

		getString: function(name) {
			var str = this[name];
			if (!str) return null;
			if (arguments.length === 1) return str;
			return $.ig.util.stringFormat1(str, Array.prototype.slice.call(arguments, 1));
		},
		CopyError_InvalidSelection_Message: "The operation cannot be performed on the current selection. If there are multiple selections ensure they form a rectangular region and do not overlap.",
		CustomValidationInformationMessage: "{0}",
		CustomValidationStopMessage: "{0}",
		CustomValidationWarningMessage: "{0}\r\n\r\nContinue?",
		DefaultHyperlinkToolTip: "{0} - Click once to follow. Click and hold to select this cell.",
		DefaultValidationInformationMessage: "The value you entered is not valid.\r\n\r\nA user has restricted values that can be entered into this cell.",
		DefaultValidationStopMessage: "The value you entered is not valid.\r\n\r\nA user has restricted values that can be entered into this cell.",
		DefaultValidationWarningMessage: "The value you entered is not valid.\r\n\r\nA user has restricted values that can be entered into this cell.\r\n\r\nContinue?",
		DeleteWorksheets_Message: "Deleting a worksheet cannot be undone and you may be removing some data. If you don't need it then click Ok.",
		Error_ChangePartOfDataTableError_Message: "Cannot change part of a data table.",
		Error_DeletingLockedColumnCells_Message: "You are trying to delete a column that contains a locked cell. Locked cells cannot be deleted while the worksheet is protected.",
		Error_DeletingLockedRowCells_Message: "You are trying to delete a row that contains a locked cell. Locked cells cannot be deleted while the worksheet is protected.",
		Error_IntersectsMergedCells_Message: "The operation cannot be performed because the selection intersects with a merged cell.",
		Error_InvalidArrayFormulaLockedState_Message: "Cannot enter an array formula into a range of cells which are not all locked or unlocked.",
		Error_InvalidHyperlinkAddress_Message: "Cannot open the specified file.",
		Error_InvalidHyperlinkReference_Message: "Reference is not valid.",
		Error_InvalidProtectedWorksheetChange_Message: "The cell you're trying to change is on a protected sheet.",
		Error_NoSingleAllowedEditRange_Message: "Some of the cells you are trying to change are password protected but no single password will allow access to all of the cells.",
		InvalidCommand_MixedSelection_Message: "That command cannot be used with selections that contain a mix of entire rows/columns with other cells. Try selecting only entire rows, only entire columns or just groups of cells.",
		InvalidCommand_MultipleSelection_Message: "That command cannot be used with multiple selections.\r\nSelect a single range and invoke the command again.",
		InvalidCommand_OverlappingSelection_Message: "Cannot use that command on overlapping selections.",
		InvalidCommand_TableChangeWithMultipleSheetSelection_Message: "Cannot make changes to a table when multiple sheets are selected.",
		InvalidDateTimeToolTip: "Dates and times that are negative or too large display as #####.",
		InvalidNameBoxValue_Message: "You must enter a valid reference you want to go to or type a valid name for the selection.",
		LE_MissingTemplatePart: "A template part with a name of '{0}' and type '{1}' is required in the '{2}' template.",
		MenuItem_AutoFit_Columns: "AutoFit Column Width",
		MenuItem_AutoFit_Rows: "AutoFit Row Height",
		MenuItem_ClearContents: "Clear Contents",
		MenuItem_Copy: "Copy",
		MenuItem_Cut: "Cut",
		MenuItem_Delete: "Delete",
		MenuItem_DeleteCells: "Delete",
		MenuItem_DeleteCells_Column: "Entire column",
		MenuItem_DeleteCells_Row: "Entire row",
		MenuItem_DeleteCells_ShiftLeft: "Shift cells left",
		MenuItem_DeleteCells_ShiftUp: "Shift cells up",
		MenuItem_DeleteWorksheets: "Delete",
		MenuItem_Hide: "Hide",
		MenuItem_Insert: "Insert",
		MenuItem_InsertCells: "Insert",
		MenuItem_InsertCells_Column: "Entire column",
		MenuItem_InsertCells_Row: "Entire row",
		MenuItem_InsertCells_ShiftDown: "Shift cells down",
		MenuItem_InsertCells_ShiftRight: "Shift cells right",
		MenuItem_InsertWorksheets: "Insert",
		MenuItem_OpenHyperlink: "Open Hyperlink",
		MenuItem_Paste: "Paste",
		MenuItem_RemoveHyperlink: "Remove Hyperlink",
		MenuItem_RemoveHyperlinks: "Remove Hyperlinks",
		MenuItem_RenameWorksheet: "Rename",
		MenuItem_SelectAllWorksheets: "Select All Sheets",
		MenuItem_Unhide: "Unhide",
		MenuItem_UnselectWorksheets: "Ungroup Sheets",
		NewSheetName: "Sheet{0}",
		PasteError_CellRangeSize_Message: "The paste operation cannot be performed because the copy area and paste area are not the same size.\r\nTry one of the following:\r\n* Click one cell, then paste\r\n* Select a rectangle that's the same size, then paste.",
		PasteError_General_Message: "An error occurred during the paste operation:\r\n{0}",
		PasteError_IntersectsMergedCells_Message: "The paste operation cannot be performed because the paste area intersects with a merged cell.",
		PasteError_InvalidSelectedSheetCount_Message: "The paste operation cannot be performed because the number of worksheets in the copy and paste areas are not the same size.",
		PasteError_InvalidSourceRanges_Message: "The paste operation cannot be performed on the copy areas provided.",
		PasteError_MultipleSourceAndTargetRanges_Message: "The paste operation cannot be performed because there are multiple selections in the source and target worksheets.",
		SheetNameError_Message_Invalid: "You entered an invalid name '{0}' for the sheet. Make sure that:\r\n* The name is not blank.\r\n* There are no more than 31 characters in the name.\r\n* The name does not start or end with a single quote (').\r\n* The name does not contain any of the following characters: : \\ / ? * [ ]",
		SheetNameError_Message_NameIsUsed: "A worksheet with the name '{0}' already exists in the workbook.",
		ToolTip_FormulaBarCancelButton: "Cancel",
		ToolTip_FormulaBarEnterButton: "Enter",
		ToolTip_FormulaBarNameBox: "Name Box",
		ToolTip_FormulaBarTextEditor: "Formula Bar",
		Undo_Bold: "Bold",
		Undo_Borders: "Borders",
		Undo_BottomAlignment: "Bottom Alignment",
		Undo_CenterAlignment: "Center Alignment",
		Undo_ClearCellContents: "Clear {0}",
		Undo_ClearCellFormats: "Clear",
		Undo_ClearHyperlinks: "Clear Hyperlinks",
		Undo_ClearTables: "Clear Tables",
		Undo_CreateNamedReference: "Define Name",
		Undo_CreateTable: "Create Table",
		Undo_Cut: "Cut",
		Undo_Delete: "Delete",
		Undo_EditCell: "Typing '{1}' in {0}",
		Undo_Filter: "Filter",
		Undo_Font: "Font",
		Undo_FontSize: "Font Size",
		Undo_FormatCells: "Format Cells",
		Undo_Group: "Group",
		Undo_Hyperlink: "Hyperlink",
		Undo_InsertCells: "Insert Cells",
		Undo_InsertColumns: "Insert Columns",
		Undo_InsertRows: "Insert Rows",
		Undo_Italic: "Italic",
		Undo_JustifyAlignment: "Justify Alignment",
		Undo_LeftAlignment: "Left Alignment",
		Undo_MergeCells: "Merge Cells",
		Undo_MiddleAlignment: "Center Vertically Alignment",
		Undo_Paste: "Paste",
		Undo_RemoveHyperlinks: "Remove Hyperlinks",
		Undo_RemoveTable: "Remove Table",
		Undo_ResetOptions: "Reset Options",
		Undo_ResizeColumn: "Column Width",
		Undo_ResizeRow: "Row Height",
		Undo_RightAlignment: "Right Alignment",
		Undo_Sort: "Sort",
		Undo_Strikethrough: "Strikethrough",
		Undo_Style: "Style",
		Undo_TabColor: "Tab Color",
		Undo_TopAlignment: "Top Alignment",
		Undo_Underline: "Underline",
		Undo_View: "View Change",
		Undo_WrapText: "Wrap Text",
		Undo_Zoom: "Zoom"
	});


/*<EndHeader/>*/
$.ig = $.ig || {};
var $$t = {};
$.ig.globalDefs = $.ig.globalDefs || {};
$.ig.globalDefs.$$ai = $$t;
$$0 = $.ig.globalDefs.$$0;
$$4 = $.ig.globalDefs.$$4;
$$5 = $.ig.globalDefs.$$5;
$$7 = $.ig.globalDefs.$$7;
$$8 = $.ig.globalDefs.$$8;
$$b = $.ig.globalDefs.$$b;
$$1 = $.ig.globalDefs.$$1;
$$2 = $.ig.globalDefs.$$2;
$$v = $.ig.globalDefs.$$v;
$$ae = $.ig.globalDefs.$$ae;
$$w = $.ig.globalDefs.$$w;
$$ag = $.ig.globalDefs.$$ag;
$$a4 = $.ig.globalDefs.$$a4;
$$6 = $.ig.globalDefs.$$6;
$$a = $.ig.globalDefs.$$a;
$$ak = $.ig.globalDefs.$$ak;
$.ig.$currDefinitions = $$t;
$.ig.util.bulkDefine([
"ISupportPositioning:g",
"ToolTipVisualElement:z",
"IVisualElementVisitor:aa",
"RootVisualElement:ac",
"VisualElement:ah",
"VisualElementInputProxy:aj",
"IScrollInfoProvider:aq",
"IPlatformScrollBarAdapter:au",
"IElementLayerContainer:a4",
"IElementLayerContainer$1:a5",
"ElementLayer:bc",
"IElementLayerView:be",
"IRendererElementLayerView$2:bh",
"ILayerRenderer:bj",
"ISpreadsheetResourceProvider:bl",
"JsCellEditManager:bm",
"JsSpreadsheetMenuBuilder:bn",
"JsTabEditManager:bp",
"SpreadsheetMeasureHelper:bq",
"SpreadsheetView:bs",
"VisualElementSpreadsheetAreaLayoutManager:bt",
"JsSpreadsheetAreaLayoutManager:bu",
"PaneLayerContainer:bv",
"SpreadsheetHeaderContentLayer:bw",
"SpreadsheetPaneCellValueLayer:b0",
"SpreadsheetCellValueLayerView:b1",
"SpreadsheetCellValueLayerElement:b2",
"ScrollRegionLayerContainer:b6",
"Spreadsheet:b7",
"SpreadsheetDOMEventProxy:cj",
"SpreadsheetLayerContainerElement$1:ck",
"SpreadsheetElementLayerContainer$1:cl",
"ISpreadsheetGraphics:cm",
"CanvasSpreadsheetGraphics:cn",
"SpreadsheetCellValueElement:co",
"SpreadsheetVisualElementDomBuilder:cp",
"JsSpreadsheetRenderCache:cs",
"SpreadsheetUtilities:ct",
"spreadsheet.SpreadsheetSelection:c1",
"SelectionSnapshot:c2",
"EditModeWorkbookFont:da",
"ISpreadsheetEditorValue:dd",
"ISpreadsheetEditInfo:de",
"LockedEditRangeInfoForOperation:df",
"LockedEditRangeInfoForWorksheet:dg",
"LockedEditRangeInfoForCellRange:dh",
"SpreadsheetEditHelper:dk",
"SpreadsheetCellEditManager:du",
"SpreadsheetTabEditManager:dw",
"SpreadsheetActivePaneChangedEventArgs:em",
"SpreadsheetSelectionChangedEventArgs:ex",
"SpreadsheetUserPromptDisplayingEventArgs:ey",
"PredefinedShapes:e0",
"ShapeGeometry:e1",
"ShapeGuide:e3",
"ShapeGuideVariables:e9",
"ISpreadsheetView:fe",
"SpreadsheetHeaderBackgroundLayer:ff",
"SpreadsheetHeaderBackgroundObserver:fg",
"SpreadsheetHeaderContentLayerBase$1:fh",
"SpreadsheetHeaderGridlineLayer:fj",
"SpreadsheetHeaderSelectionLayer:fk",
"IShapeLayer:fm",
"SpreadsheetPaneCellBackgroundLayer:fp",
"SpreadsheetPaneCellBorderLayer:fq",
"SpreadsheetPaneCellValueLayerBase$1:fr",
"SpreadsheetPaneGridlineLayer:ft",
"SpreadsheetPaneInteractionOverlayLayer:fu",
"SpreadsheetPaneInvalidDataLayer:fv",
"SpreadsheetPaneSelectionLayer:fw",
"SpreadsheetItemLayerObserver:fx",
"SpreadsheetScrollRegionLayerObserver:fz",
"SpreadsheetRendererElementLayer$1:f0",
"SpreadsheetRenderUtilities:f1",
"SpreadsheetCellContextMenuOperation:f2",
"SpreadsheetHeaderContextMenuOperation:f3",
"SpreadsheetEnterEditModeOperation:f4",
"SpreadsheetHeaderResizeOperation:f5",
"ISpreadsheetInteractionManagerOwner:f7",
"SpreadsheetInteractionManager$1:f8",
"SpreadsheetMenuBuilder$1:ga",
"SpreadsheetMouseOperation$1:ge",
"SpreadsheetPaneMouseOperation:gf",
"SpreadsheetHeaderMouseOperation:gg",
"SpreadsheetPaneInteractionManager:gi",
"SpreadsheetScrollRegionInteractionManager:gj",
"SpreadsheetCellSelectionOperation:gk",
"SpreadsheetHeaderSelectionOperation:gl",
"SpreadsheetCellHitTestResult:gn",
"SpreadsheetHeaderHitTestResult:go",
"SpreadsheetPaneManager:gr",
"InViewPaneInfo:gs",
"SpreadsheetPaneManager___GetAllCells__IteratorClass:gz",
"ISpreadsheetPaneOwner:g0",
"spreadsheet.SpreadsheetColumnScrollRegion:g1",
"spreadsheet.SpreadsheetPane:g2",
"spreadsheet.SpreadsheetRowScrollRegion:g3",
"SpreadsheetScrollInfo:g4",
"spreadsheet.SpreadsheetScrollRegion:g5",
"SpreadsheetOwnerState:g7",
"SpreadsheetRenderCache:ha",
"BIFF8SerializationProvider:hj",
"CSVWorkbookSerializationProvider:hk",
"ExcelWorkbookSerializationProvider:hl",
"IGExcelSerializationProvider:hu",
"PlainTextWorkbookSerializationProvider:h3",
"TSVWorkbookSerializationProvider:h5",
"WorkbookDataObjectManager:h8",
"SpreadsheetAreaLayoutManager:ik",
"SpreadsheetUserPromptInfo:iq",
"RotationHelper:ir",
"SpreadsheetTabInfo:iw",
"SpreadsheetTabItemLayoutManager$1:ix",
"SpreadsheetTabManager:iy",
"SpreadsheetUndoTransaction:i4",
"SpreadsheetSelectionUndoTransaction:i5",
"IWorksheetUndoUnit:i6",
"WorkbookUndoUnit$2:i8",
"FormulaBarButtonAreaElement:ja",
"FormulaBarNameBoxAreaElement:jb",
"FormulaBarNameBoxSplitter:jc",
"FormulaBarTextAreaElement:jd",
"FormulaBarTextAreaSplitter:je",
"FormulaBarVisualElement:jf",
"SpreadsheetAreaVisualElement:jk",
"SpreadsheetInputMessageElement:jl",
"SpreadsheetPaneSplitterElement:jm",
"SpreadsheetSelectAllButtonElement:jn",
"SpreadsheetTabAreaSplitterElement:jo",
"SpreadsheetTabItemAreaElement:jp",
"SpreadsheetTabItemElement:jq",
"SpreadsheetTabItemElementLayoutManager:jr",
"SpreadsheetTabItemPanel:js",
"SpreadsheetVisualElement:ju",
"IDeferUpdate:kc"]);
/*<BeginType Name="Infragistics.Controls.Core.VisualElementInputType" />*/

$.ig.util.defEnum('VisualElementInputType', false, false, {
	MouseDown: 0,
	MouseOver: 1,
	MouseUp: 2,
	MouseWheel: 3
});

/*<EndType Name="Infragistics.Controls.Core.VisualElementInputType" />*/

/*<BeginType Name="Infragistics.Controls.Core.InputContactChangeType" />*/

$.ig.util.defEnum('InputContactChangeType', false, false, {
	None: 0,
	MouseLeftButton: 1,
	MouseRightButton: 2,
	MouseMiddleButton: 3,
	MouseOtherButton: 4
});

/*<EndType Name="Infragistics.Controls.Core.InputContactChangeType" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.RenderLayerType" />*/

$.ig.util.defEnum('RenderLayerType', false, false, {
	Background: 0,
	Borders: 1,
	Foreground: 2,
	Image: 3,
	ImageBackground: 4
});

/*<EndType Name="Infragistics.Controls.Primitives.RenderLayerType" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.JsScrollEventType" />*/

$.ig.util.defEnum('JsScrollEventType', false, false, {
	SmallDecrement: 0,
	SmallIncrement: 1,
	LargeDecrement: 2,
	LargeIncrement: 3,
	ThumbPosition: 4,
	ThumbTrack: 5,
	First: 6,
	Last: 7,
	EndScroll: 8
});

/*<EndType Name="Infragistics.Controls.Primitives.JsScrollEventType" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollInfoBarVisibility" />*/

$.ig.util.defEnum('ScrollInfoBarVisibility', false, false, {
	Disabled: 0,
	Auto: 1,
	Hidden: 2,
	Visible: 3
});

/*<EndType Name="Infragistics.Controls.Primitives.ScrollInfoBarVisibility" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollInfoAmount" />*/

$.ig.util.defEnum('ScrollInfoAmount', false, false, {
	LargeDecrement: 0,
	SmallDecrement: 1,
	NoAmount: 2,
	LargeIncrement: 3,
	SmallIncrement: 4
});

/*<EndType Name="Infragistics.Controls.Primitives.ScrollInfoAmount" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollInfoOrientation" />*/

$.ig.util.defEnum('ScrollInfoOrientation', false, false, {
	Horizontal: 0,
	Vertical: 1
});

/*<EndType Name="Infragistics.Controls.Primitives.ScrollInfoOrientation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SheetTabAction" />*/

$.ig.util.defEnum('SheetTabAction', false, false, {
	AddNewSheet: 0,
	InsertNewSheets: 1,
	ScrollFirst: 2,
	ScrollLast: 3,
	ScrollPrevious: 4,
	ScrollNext: 5,
	ActivatePreviousOutOfView: 6,
	ActivateNextOutOfView: 7,
	ActivateNext: 8,
	ActivatePrevious: 9,
	ActivateAndSelectNext: 10,
	ActivateAndSelectPrevious: 11,
	SelectAllSheets: 12,
	UnselectSheets: 13,
	DeleteWorksheets: 14
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SheetTabAction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags" />*/

$.ig.util.defEnum('SpreadsheetTabManager_InternalFlags', false, false, {
	TabsChanged: 1,
	ActiveChanged: 2,
	SelectedChanged: 4,
	TabAreaChanged: 8,
	TabItemStateChanged: 16,
	IsNextItemOutOfView: 32,
	IsPreviousItemOutOfView: 64,
	SelectedWorksheetChanged: 128,
	ReverseZIndex: 256,
	Workbook: 15
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetResourceId" />*/

$.ig.util.defEnum('SpreadsheetResourceId', false, false, {
	CellSelectionFill: 0,
	CellSelectionInnerBorder: 1,
	CellSelectionOuterBorder: 2,
	CellSelectionDragBorder: 3,
	CellSelectionDragBorderInHeader: 4,
	CellSelectionHandleFill: 5,
	CellSelectionHandleBorder: 6,
	SelectAllBackground: 7,
	SelectAllTriangleFill: 8,
	SelectAllTriangleHotTrackFill: 9,
	SelectAllTriangleSelectedFill: 10,
	RowHeaderBackground: 11,
	RowHeaderSelectedBackground: 12,
	RowHeaderWithSelectedCellsBackground: 13,
	RowHeaderHotTrackBackground: 14,
	RowHeaderForeground: 15,
	RowHeaderSelectedForeground: 16,
	RowHeaderWithSelectedCellsForeground: 17,
	RowHeaderHotTrackForeground: 18,
	RowHeaderBorder: 19,
	RowHeaderSelectedBorder: 20,
	RowHeaderWithSelectedCellsBorder: 21,
	RowHeaderHotTrackBorder: 22,
	RowHeaderHotTrackSelectedForeground: 23,
	ColumnHeaderBackground: 24,
	ColumnHeaderSelectedBackground: 25,
	ColumnHeaderWithSelectedCellsBackground: 26,
	ColumnHeaderHotTrackBackground: 27,
	ColumnHeaderForeground: 28,
	ColumnHeaderSelectedForeground: 29,
	ColumnHeaderWithSelectedCellsForeground: 30,
	ColumnHeaderHotTrackForeground: 31,
	ColumnHeaderHotTrackSelectedForeground: 32,
	ColumnHeaderBorder: 33,
	ColumnHeaderSelectedBorder: 34,
	ColumnHeaderWithSelectedCellsBorder: 35,
	ColumnHeaderHotTrackBorder: 36,
	MultiSelectActiveCellBorder: 37,
	AutomaticGridline: 38,
	ResizeColumnLine: 39,
	ResizeRowLine: 40,
	TabItemActiveForeground: 41,
	TabItemActiveBackground: 42,
	TabItemSelectedForeground: 43,
	TabItemSelectedBackground: 44,
	TabItemHotTrackForeground: 45,
	TabItemHotTrackBackground: 46,
	TabItemBackground: 47,
	TabItemForeground: 48,
	SelectedTabHighlight: 49,
	TabAreaBackground: 50,
	TabAreaBorder: 51,
	AddSheetButtonForeground: 52,
	AddSheetButtonDisabledForeground: 53,
	AddSheetButtonHotTrackForeground: 54,
	TabScrollButtonForeground: 55,
	TabScrollButtonDisabledForeground: 56,
	TabScrollButtonHotTrackForeground: 57,
	TabAreaSplitterForeground: 58,
	SheetPaneSplitterBackground: 59,
	SheetPaneSplitterPreview: 60,
	InputMessageBorder: 61,
	InputMessageBackground: 62,
	InputMessageForeground: 63,
	InvalidDataBorder: 64
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetResourceId" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PaneSplitterType" />*/

$.ig.util.defEnum('PaneSplitterType', false, false, {
	RowSplitter: 0,
	ColumnSplitter: 1,
	SplitterIntersection: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.PaneSplitterType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType" />*/

$.ig.util.defEnum('SpreadsheetAreaLayoutManager_DragType', false, false, {
	None: 0,
	PaneSplitter: 1,
	InputMessage: 2,
	TabItemAreaSplitter: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadError" />*/

$.ig.util.defEnum('WorkbookSerializationLoadError', false, false, {
	WorksheetCountMismatch: 0,
	MultipleSourceAndTargetRanges: 1,
	CellRangeMismatch: 2,
	MissingSelectionInfo: 3,
	TablesWithMultipleWorksheets: 4,
	IntersectsMergedCell: 5,
	MultipleTargetRanges: 6
});

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadError" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseState" />*/

$.ig.util.defEnum('PlainTextReader_ParseState', false, false, {
	NotStarted: 0,
	TextWithQualifier: 1,
	TextWithoutQualifier: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseState" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadCategories" />*/

$.ig.util.defEnum('WorkbookSerializationLoadCategories', true, false, {
	Values: 1,
	Formulas: 2,
	SkipFormulasFromMultipleSourceRanges: 4,
	ColumnWidths: 8,
	NumberFormat: 16,
	Alignment: 32,
	Borders: 64,
	Font: 128,
	Fill: 256,
	Protection: 512,
	Style: 1024,
	UseSourceTheme: 2048,
	MergedCells: 4096,
	TableFormatting: 8192,
	RowHeights: 16384,
	IncludeColumnWidthsWithColumnSelection: 32768,
	IncludeRowHeightsWithRowSelection: 65536,
	Hyperlinks: 131072,
	Validation: 262144,
	AllGroup: 505847,
	FormulasGroup: 3,
	ValuesGroup: 1,
	FormatsGroup: 100336,
	ValidationGroup: 262144,
	AllUsingSourceThemeGroup: 507891,
	AllExceptBordersGroup: 505779,
	KeepSourceColumnWidthsGroup: 440315,
	FormulasAndNumberFormatGroup: 19,
	ValuesAndNumberFormatGroup: 17
});

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadCategories" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult" />*/

$.ig.util.defEnum('SpreadsheetPaneManager_ProtectedActionResult', false, false, {
	SkipOperation: 0,
	ContinueWithoutValidation: 1,
	ReverifyProtection: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ChangeActions" />*/

$.ig.util.defEnum('SpreadsheetPaneManager_ChangeActions', true, false, {
	None: 0,
	DirtyLayout: 1,
	DirtyUsedRange: 3,
	ClearCellInfos: 5,
	DirtyRangeSizes: 9,
	DirtyPaneSettings: 17,
	ZoomChanged: 49,
	DirtyActiveCell: 64,
	HeaderSettings: 128,
	StyleChanged: 257,
	RedrawShapes: 515,
	UpdateCachedProperties: 1024,
	SelectUnlockedCell: 2048,
	ValidationRulesChanged: 4096
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ChangeActions" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags" />*/

$.ig.util.defEnum('SpreadsheetPaneManager_InternalFlags', true, false, {
	HasVerticalScrollBar: 1,
	HasHorizontalScrollBar: 2,
	HasScrollBarChanged: 4,
	HasPaneSettingsChanged: 8,
	HasUsedRangeChanged: 16,
	HasRangeSizesChanged: 32,
	IsInitializingScrollInfo: 64,
	HasSingleSelectionWithAllRowsAndColumns: 128,
	IsVerifyingState: 256,
	HasSelectionChanged: 512,
	HasActiveCellChanged: 1024,
	HasFrozenPanes: 2048,
	HasResourceProviderChanged: 4096,
	HadCellValueChanged: 8192,
	IsVerifyPaneInfo: 16384,
	ProcessingPendingChanges: 32768,
	HasPendingChangeNotifications: 65536,
	HasZoomChanged: 131072,
	SkipNextScrollSnapshot: 262144,
	IsSelectionZoom: 524288,
	IsUpdatingExcelScrollOffsets: 1048576,
	NeedsExcelSelectionUpdate: 2097152,
	HasHeaderPropertiesChanged: 4194304,
	VerifyActiveCellPane: 16777216,
	VerifyActiveCellInputMessage: 33554432,
	HasValidationRulesChanged: 67108864,
	InitialFlags: 50332696
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipType" />*/

$.ig.util.defEnum('SpreadsheetToolTipType', false, false, {
	ClippedValue: 0,
	InvalidDateTime: 1,
	HyperlinkDefault: 2,
	Hyperlink: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult" />*/

$.ig.util.defEnum('MouseDownInProgressResult', false, false, {
	CancelOperationAndContinue: 0,
	CancelOperationAndSkip: 1,
	IgnoreMouseDown: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.MouseOperationState" />*/

$.ig.util.defEnum('MouseOperationState', false, false, {
	NotStarted: 0,
	Starting: 1,
	Started: 2,
	Ending: 3,
	Cancelling: 4
});

/*<EndType Name="Infragistics.Controls.Grids.Core.MouseOperationState" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem" />*/

$.ig.util.defEnum('SpreadsheetContextMenuSubItem', false, false, {
	InsertCells: 0,
	DeleteCells: 1
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeType" />*/

$.ig.util.defEnum('SpreadsheetHeaderResizeType', false, false, {
	Resize: 0,
	Unhide: 1,
	AutoSize: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetZoomOperation" />*/

$.ig.util.defEnum('SpreadsheetZoomOperation', false, false, {
	ZoomIn: 0,
	ZoomOut: 1,
	ZoomToSelection: 2,
	ZoomTo100: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetZoomOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger" />*/

$.ig.spreadsheet.SpreadsheetUserPromptTrigger = $.ig.util.defEnum('spreadsheet.SpreadsheetUserPromptTrigger', false, true, {
	ClearCellContentError: 0,
	FormulaParseError: 1,
	EditError: 2,
	InvalidWorksheetName: 3,
	ConflictingWorksheetName: 4,
	DeletingWorksheets: 5,
	InvalidCommandForOverlappingSelections: 6,
	InvalidCommandForMultipleSelections: 7,
	InvalidCommandForMixedCellSelections: 8,
	InvalidNameBoxValue: 9,
	PasteCellRangeSize: 10,
	PasteMultipleSourceAndTargetRanges: 11,
	PasteInvalidSourceRanges: 12,
	PasteInvalidSheetCount: 13,
	PasteError: 14,
	PasteIntersectsMergedCells: 15,
	IntersectsMergedCells: 16,
	CopyInvalidRanges: 17,
	General: 18,
	TableChangeWithMultipleSelectedSheets: 19,
	InvalidHyperlinkAddress: 20,
	InvalidHyperlinkReference: 21,
	InvalidProtectedWorksheetChange: 22,
	NoSingleAllowedEditRange: 23,
	InvalidArrayFormulaLockedState: 24,
	ChangePartOfDataTable: 25,
	DeletingLockedColumnCells: 26,
	DeletingLockedRowCells: 27
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation" />*/

$.ig.util.defEnum('SpreadsheetTransactionOperation', false, false, {
	EditCell: 0,
	ClearCellContents: 1,
	ResizeRow: 2,
	ResizeColumn: 3,
	MergeCells: 4,
	Zoom: 5,
	Bold: 6,
	Italic: 7,
	Strikethrough: 8,
	WrapText: 9,
	FormatCells: 10,
	FontSize: 11,
	JustifyAlignment: 12,
	LeftAlignment: 13,
	RightAlignment: 14,
	CenterAlignment: 15,
	TopAlignment: 16,
	BottomAlignment: 17,
	MiddleAlignment: 18,
	Font: 19,
	Underline: 20,
	Borders: 21,
	"Delete:del": 22,
	InsertCells: 23,
	InsertRows: 24,
	InsertColumns: 25,
	Paste: 26,
	Cut: 27,
	ClearCellFormats: 28,
	RemoveHyperlinks: 29,
	ClearHyperlinks: 30,
	Hyperlink: 31
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneRowColumnSizingMode" />*/

$.ig.util.defEnum('SpreadsheetPaneRowColumnSizingMode', false, false, {
	Fill: 0,
	SizeToItems: 1,
	SizeToExtent: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneRowColumnSizingMode" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult" />*/

$.ig.util.defEnum('SpreadsheetOperationResult', false, false, {
	Error: 0,
	Cancelled: 1,
	Success: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderState" />*/

$.ig.util.defEnum('SpreadsheetHeaderState', false, false, {
	Normal: 0,
	HasCellsWithSelection: 1,
	IsSelected: 2,
	IsHotTracked: 3,
	IsHotTrackedSelected: 4
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderState" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEnterKeyNavigationDirection" />*/

$.ig.util.defEnum('SpreadsheetEnterKeyNavigationDirection', false, false, {
	Down: 0,
	Right: 1,
	Up: 2,
	Left: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEnterKeyNavigationDirection" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorAction" />*/

$.ig.util.defEnum('SpreadsheetEditModeValidationErrorAction', false, false, {
	ShowPrompt: 0,
	StayInEditMode: 1,
	RevertChange: 2,
	AcceptChange: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorAction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetContextMenuArea" />*/

$.ig.util.defEnum('SpreadsheetContextMenuArea', false, false, {
	Column: 0,
	Row: 1,
	Cell: 2,
	Tab: 3,
	InPlaceEditor: 4,
	FormulaBarEditor: 5,
	SelectAllButton: 6
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetContextMenuArea" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea" />*/

$.ig.util.defEnum('SpreadsheetSelectionContextMenuArea', false, false, {
	Column: 0,
	Row: 1,
	Cell: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode" />*/

$.ig.util.defEnum('SpreadsheetCellSelectionMode', false, false, {
	Normal: 0,
	ExtendSelection: 1,
	AddToSelection: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders" />*/

$.ig.spreadsheet.SpreadsheetCellRangeBorders = $.ig.util.defEnum('spreadsheet.SpreadsheetCellRangeBorders', true, true, {
	LeftBorder: 1,
	TopBorder: 2,
	RightBorder: 4,
	BottomBorder: 8,
	InsideHorizontal: 16,
	InsideVertical: 32,
	DiagonalDown: 64,
	DiagonalUp: 128,
	OutsideBorder: 15,
	InsideBorder: 48,
	AllBorder: 63
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellMergeOperation" />*/

$.ig.util.defEnum('SpreadsheetCellMergeOperation', false, false, {
	Unmerge: 0,
	Merge: 1,
	MergeAcross: 2,
	MergeAndCenter: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellMergeOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType" />*/

$.ig.util.defEnum('SpreadsheetCellNavigationType', false, false, {
	VisibleCells: 0,
	VisibleCellsWithData: 1,
	EdgeVisibleCellsWithData: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction" />*/

$.ig.util.defEnum('SpreadsheetCellExitModeAction', false, false, {
	DiscardChanges: 0,
	UpdateActiveCell: 1,
	UpdateSelectedCells: 2,
	CreateArrayFormula: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditorType" />*/

$.ig.util.defEnum('SpreadsheetCellEditorType', false, false, {
	InPlaceEditor: 0,
	FormularBarEditor: 1
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditorType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditMode" />*/

$.ig.util.defEnum('SpreadsheetCellEditMode', false, false, {
	NotInEditMode: 0,
	ArrowKeysNavigateBetweenCells: 1,
	ArrowKeysNavigateInCell: 2
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditMode" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetExitEditModeResults" />*/

$.ig.util.defEnum('SpreadsheetExitEditModeResults', true, false, {
	None: 0,
	StayedInEditMode: 1,
	FailedValidation: 2,
	CanceledFailedValidation: 4
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetExitEditModeResults" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellUpdateMode" />*/

$.ig.util.defEnum('SpreadsheetActiveCellUpdateMode', false, false, {
	Synchronous: 0,
	Asynchronous: 1
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellUpdateMode" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelCellFormatCategory" />*/

$.ig.util.defEnum('ExcelCellFormatCategory', false, false, {
	General: 0,
	Number: 1,
	Currency: 2,
	Accounting: 3,
	Date: 4,
	Time: 5,
	Percentage: 6,
	Fraction: 7,
	Scientific: 8,
	Text: 9,
	Custom: 10
});

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelCellFormatCategory" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Direction" />*/

$.ig.util.defEnum('Direction', false, false, {
	Left: 0,
	Right: 1,
	Up: 2,
	Down: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.Direction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CellDiagonalBorder" />*/

$.ig.util.defEnum('CellDiagonalBorder', false, false, {
	None: 0,
	TopLeftToBottomRight: 1,
	BottomLeftToTopRight: 2,
	Both: 3
});

/*<EndType Name="Infragistics.Controls.Grids.Core.CellDiagonalBorder" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CellBorderPen" />*/

$.ig.util.defEnum('CellBorderPen', false, false, {
	None: 0,
	Hair: 1,
	DashDotDot: 2,
	DashDot: 3,
	Dotted: 4,
	Dashed: 5,
	Thin: 6,
	MediumDashDotDot: 7,
	SlantedDashDotInner: 8,
	SlantedDashDotOuter: 9,
	SlantedDashDotDiagonal: 10,
	MediumDashDot: 11,
	MediumDashed: 12,
	Medium: 13,
	Thick: 14
});

/*<EndType Name="Infragistics.Controls.Grids.Core.CellBorderPen" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags" />*/

$.ig.util.defEnum('IGFormattedTextSettingsFlags', true, false, {
	Font: 2,
	Bold: 4,
	Height: 8,
	Italic: 16,
	StrikeThrough: 32,
	SuperSubScript: 64,
	Foreground: 128,
	Underline: 256,
	All: 510
});

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor" />*/

$.ig.util.defEnum('SpreadsheetCursor', false, false, {
	Arrow: 0,
	AutoFill: 1,
	DragCopy: 2,
	DragMove: 3,
	DragSheet: 4,
	ResizeColumn: 5,
	ResizeRow: 6,
	Rotate: 7,
	Rotating: 8,
	SelectColumn: 9,
	SelectMode: 10,
	SelectRow: 11,
	UnhideRow: 12,
	UnhideColumn: 13,
	ResizePaneColumnSplit: 14,
	ResizePaneRowSplit: 15,
	ResizePaneSplitIntersection: 16,
	Hyperlink: 17,
	TabItemSplit: 18
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh" />*/

$.ig.util.defEnum('SpreadsheetStatesHigh', true, false, {
	IsRenamingWorksheet: 1,
	AddWorksheet: 2,
	DeleteWorksheet: 4,
	All: 0
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetStatesLow" />*/

$.ig.util.defEnum('SpreadsheetStatesLow', true, false, {
	HasWorkbook: 1,
	HasWorksheet: 2,
	HasMultiplePanes: 4,
	HasFrozenPanes: 8,
	HasScrollLock: 16,
	IsInEndMode: 32,
	IsInNormalSelectionMode: 64,
	IsInExtendedSelectionMode: 128,
	IsInAddToSelectionMode: 256,
	IsInEditMode: 512,
	CanUndo: 1024,
	CanRedo: 2048,
	EnterKeyNavigation: 4096,
	IsPreviousWorksheetTabOutOfView: 8192,
	IsNextWorksheetTabOutOfView: 16384,
	HasRowScrollRegionSplit: 32768,
	HasColumnScrollRegionSplit: 65536,
	HasMultipleSelectedWorksheets: 131072,
	HasRowsSelected: 262144,
	HasColumnsSelected: 524288,
	IsWorkbookProtected: 1048576,
	IsWorksheetProtected: 2097152,
	IsNavigatingUnlockedCellsOnly: 4194304,
	IsFormatCellsProtected: 8388608,
	IsFormatColumnsProtected: 16777216,
	IsFormatRowsProtected: 33554432,
	IsInsertColumnsProtected: 67108864,
	IsInsertRowsProtected: 134217728,
	IsDeleteColumnsProtected: 268435456,
	IsDeleteRowsProtected: 536870912,
	ArrowKeysNavigateWithinCell: 1073741824,
	IsInNameBox: -2147483648,
	All: 0
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetStatesLow" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandType" />*/

$.ig.spreadsheet.SpreadsheetAction = $.ig.util.defEnum('spreadsheet.SpreadsheetAction', false, true, {
	ActivatePreviousPane: 0,
	ActivateNextPane: 1,
	CellInSelectionRight: 2,
	CellInSelectionLeft: 3,
	CellInSelectionAbove: 4,
	CellInSelectionBelow: 5,
	CellRight: 6,
	CellLeft: 7,
	CellAbove: 8,
	CellBelow: 9,
	CellWithDataLeft: 10,
	CellWithDataRight: 11,
	CellWithDataAbove: 12,
	CellWithDataBelow: 13,
	EdgeCellWithDataLeft: 14,
	EdgeCellWithDataRight: 15,
	EdgeCellWithDataAbove: 16,
	EdgeCellWithDataBelow: 17,
	CellPageBelow: 18,
	CellPageAbove: 19,
	CellPageRight: 20,
	CellPageLeft: 21,
	ScrollLeft: 22,
	ScrollRight: 23,
	ScrollUp: 24,
	ScrollDown: 25,
	ScrollPageLeft: 26,
	ScrollPageRight: 27,
	ScrollPageAbove: 28,
	ScrollPageBelow: 29,
	FirstCellInRow: 30,
	FirstCellInView: 31,
	FirstCellInWorksheet: 32,
	FirstScrollableCellInRow: 33,
	FirstScrollableCellInWorksheet: 34,
	LastCellInView: 35,
	EnterEndMode: 36,
	ExitEndMode: 37,
	LastUsedCell: 38,
	LastUsedCellInRow: 39,
	SelectCurrentRegion: 40,
	SelectCellRight: 41,
	SelectCellLeft: 42,
	SelectCellAbove: 43,
	SelectCellBelow: 44,
	SelectCellWithDataLeft: 45,
	SelectCellWithDataRight: 46,
	SelectCellWithDataAbove: 47,
	SelectCellWithDataBelow: 48,
	SelectEdgeCellWithDataLeft: 49,
	SelectEdgeCellWithDataRight: 50,
	SelectEdgeCellWithDataAbove: 51,
	SelectEdgeCellWithDataBelow: 52,
	SelectCellPageBelow: 53,
	SelectCellPageAbove: 54,
	SelectCellPageRight: 55,
	SelectCellPageLeft: 56,
	SelectFirstCellInRow: 57,
	SelectFirstCellInView: 58,
	SelectFirstCellInWorksheet: 59,
	SelectFirstScrollableCellInRow: 60,
	SelectFirstScrollableCellInWorksheet: 61,
	SelectLastCellInView: 62,
	SelectLastUsedCell: 63,
	SelectLastUsedCellInRow: 64,
	SelectRows: 65,
	SelectColumns: 66,
	SelectAllCells: 67,
	SwitchToNormalSelectionMode: 68,
	SwitchToExtendSelectionMode: 69,
	SwitchToAddToSelectionMode: 70,
	FirstCellInViewWithinSelection: 71,
	LastCellInViewWithinSelection: 72,
	EnterEditMode: 73,
	EnterEditModeAndClearValue: 74,
	ExitEditModeAndUpdateActiveCell: 75,
	ExitEditModeAndUpdateSelectedCells: 76,
	ExitEditModeAndCreateArrayFormula: 77,
	ExitEditModeAndDiscardChanges: 78,
	ClearContents: 79,
	SelectCurrentArray: 80,
	CellInNextSelectionRange: 81,
	CellInPreviousSelectionRange: 82,
	SelectVisibleCellsOnly: 83,
	SelectActiveCellOnly: 84,
	Redo: 85,
	Undo: 86,
	EnterKeyNavigation: 87,
	ShiftEnterKeyNavigation: 88,
	HideColumns: 89,
	UnhideColumns: 90,
	HideRows: 91,
	UnhideRows: 92,
	AutoFitRowHeight: 93,
	AutoFitColumnWidth: 94,
	MergeCellsAcross: 95,
	MergeCells: 96,
	MergeCellsAndCenter: 97,
	UnmergeCells: 98,
	AddNewWorksheet: 99,
	InsertNewWorksheets: 100,
	ActivateNextWorksheet: 101,
	ActivatePreviousWorksheet: 102,
	ActivateAndSelectNextWorksheet: 103,
	ActivateAndSelectPreviousWorksheet: 104,
	ScrollNextWorksheet: 105,
	ScrollPreviousWorksheet: 106,
	ScrollToFirstWorksheet: 107,
	ScrollToLastWorksheet: 108,
	ActivatePreviousOutOfViewWorksheet: 109,
	ActivateNextOutOfViewWorksheet: 110,
	SelectAllWorksheets: 111,
	UnselectWorksheets: 112,
	RenameWorksheet: 113,
	DeleteWorksheets: 114,
	ZoomIn: 115,
	ZoomOut: 116,
	ZoomToSelection: 117,
	ZoomTo100: 118,
	ToggleBold: 119,
	ToggleItalic: 120,
	ToggleStrikeThrough: 121,
	ToggleWrapText: 122,
	IncreaseIndentation: 123,
	DecreaseIndentation: 124,
	IncreaseFontSize: 125,
	DecreaseFontSize: 126,
	AlignHorizontalCenter: 127,
	AlignHorizontalJustify: 128,
	AlignHorizontalLeft: 129,
	AlignHorizontalRight: 130,
	AlignVerticalTop: 131,
	AlignVerticalMiddle: 132,
	AlignVerticalBottom: 133,
	ToggleSplitPanes: 134,
	ToggleFreezePanes: 135,
	FreezeFirstRow: 136,
	FreezeFirstColumn: 137,
	RemoveColumnScrollRegionSplit: 138,
	SnapColumnScrollRegionSplit: 139,
	RemoveRowScrollRegionSplit: 140,
	SnapRowScrollRegionSplit: 141,
	RemoveScrollRegionSplits: 142,
	SnapScrollRegionSplits: 143,
	DeleteRows: 144,
	InsertRows: 145,
	DeleteColumns: 146,
	InsertColumns: 147,
	Cut: 148,
	Copy: 149,
	Paste: 150,
	ToggleCellEditMode: 151,
	InsertCellsShiftRight: 152,
	InsertCellsShiftDown: 153,
	DeleteCellsShiftLeft: 154,
	DeleteCellsShiftUp: 155,
	InsertCells: 156,
	DeleteCells: 157,
	ClearFormats: 158,
	ToggleShowFormulasInCells: 159,
	ToggleUnderline: 160,
	ToggleDoubleUnderline: 161,
	ToggleSuperscript: 162,
	ToggleSubscript: 163,
	OpenHyperlink: 164,
	RemoveHyperlinks: 165,
	ClearHyperlinks: 166,
	FirstUnlockedCell: 167,
	LastUnlockedCell: 168,
	ResetNameBoxWidth: 169,
	CircleInvalidData: 170,
	ClearValidationCircles: 171,
	CancelRenameWorksheet: 172,
	CommitRenameWorksheet: 173
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandType" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags" />*/

$.ig.util.defEnum('Spreadsheet_InternalFlags', true, false, {
	NotifyCanExecuteChanged: 1,
	IsInitialized: 2,
	IsUndoEnabled: 4,
	IsVerifyingState: 8,
	NeedsCanUndoRedoVerification: 16,
	CanUndo: 32,
	CanRedo: 64,
	HasPendingChangeNotification: 128,
	ActiveTabChanged: 256,
	SelectedTabsChanged: 512,
	NeedsFormatChangeNotification: 1024,
	NeedsWorkbookDirtiedNotification: 2048,
	NeedsNameBoxValueVerification: 4096,
	NeedsFormulaBarValueVerification: 8192,
	VerifyIsRenamingWorksheet: 16384,
	IsInitializingZoomLevel: 32768,
	NeedsZoomLevelInitialization: 65536,
	IsInitializingShowHeaders: 131072,
	NeedsShowHeadersInitialization: 262144,
	IsInitializingShowGridlines: 524288,
	NeedsShowGridlinesInitialization: 1048576,
	IsInitializing: 2097152,
	UpdateCellEditorHost: 4194304,
	IsInEditMode: 8388608,
	ActiveCellValue: 16777216,
	IsInitializingCellEditor: 33554432,
	NeedsInputMsgPosInitialization: 67108864,
	HasDeferredEvents: 134217728
});

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo_InternalFlags" />*/

$.ig.util.defEnum('SpreadsheetCellValueInfo_InternalFlags', true, false, {
	IsMergedCell: 1,
	ClipRows: 2,
	ShrinkToFit: 4,
	ComputedWrapText: 8,
	WrapText: 16,
	HasHyperlink: 32,
	DisplaysHashes: 64,
	IsInvalidDateTime: 128
});

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo_InternalFlags" />*/

/*<BeginType Name="System.Windows.Input.MouseButton" />*/

$.ig.util.defEnum('MouseButton', false, false, {
	Left: 0,
	Middle: 1,
	Right: 2,
	XButton1: 3,
	XButton2: 4
});

/*<EndType Name="System.Windows.Input.MouseButton" />*/

/*<BeginType Name="System.Windows.MessageBoxResult" />*/

$.ig.util.defEnum('MessageBoxResult', false, false, {
	None: 0,
	OK: 1,
	Cancel: 2,
	Yes: 6,
	No: 7
});

/*<EndType Name="System.Windows.MessageBoxResult" />*/

/*<BeginType Name="System.Windows.MessageBoxImage" />*/

$.ig.util.defEnum('MessageBoxImage', false, false, {
	None: 0,
	Hand: 16,
	Question: 32,
	Exclamation: 48,
	Asterisk: 64,
	Stop: 16,
	Error: 16,
	Warning: 48,
	Information: 64
});

/*<EndType Name="System.Windows.MessageBoxImage" />*/

/*<BeginType Name="System.Windows.MessageBoxButton" />*/

$.ig.util.defEnum('MessageBoxButton', false, false, {
	OK: 0,
	OKCancel: 1,
	YesNoCancel: 3,
	YesNo: 4
});

/*<EndType Name="System.Windows.MessageBoxButton" />*/

/*<BeginType Name="SR" />*/

$.ig.util.defType('SR', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String SR::GetString(System.String)" />*/
	getString: function (resourceName) {
		return null;
	}
	/*<EndMethod Name="System.String SR::GetString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String SR::GetString(System.String, )" />*/
	getString1: function (resourceName, args) {
		return null;
	}
	/*<EndMethod Name="System.String SR::GetString(System.String, )" />*/
	,
	$type: new $.ig.Type('SR', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="SR" />*/

/*<BeginType Name="Infragistics.DeferredOperation" />*/

$.ig.util.defType('DeferredOperation', 'Object', {
	__pendingContext: null,
	__timeoutId: 0,
	__deferredAction: null,
	__isPerformingAction: false,
	init: function (deferredAction) {
		$.ig.Object.prototype.init.call(this);
		this.__deferredAction = deferredAction;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.DeferredOperation::IsOperationPending()" />*/
	isOperationPending: function () {
		return this.__pendingContext != null;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DeferredOperation::IsOperationPending()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DeferredOperation::IsPerformingAction()" />*/
	isPerformingAction: function () {
		return this.__isPerformingAction;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DeferredOperation::IsPerformingAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DeferredOperation::InvokePendingOperation()" />*/
	invokePendingOperation: function () {
		if (this.__pendingContext == null) {
			return;
		}
		this.__pendingContext = null;
		var wasPerforming = this.__isPerformingAction;
		this.__isPerformingAction = true;
		try {
			this.__deferredAction();
		}
		finally {
			this.__isPerformingAction = wasPerforming;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DeferredOperation::InvokePendingOperation()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DeferredOperation::CancelPendingOperation()" />*/
	cancelPendingOperation: function () {
		if (this.__pendingContext != null) {
			this.__pendingContext = null;
			if (this == $.ig.DeferredOperation.prototype.__sharedOperation) {
				window.clearTimeout(this.__timeoutId);
			} else if ($.ig.DeferredOperation.prototype.__sharedOperations.remove(this) && $.ig.DeferredOperation.prototype.__sharedOperations.count() == 0) {
				$.ig.DeferredOperation.prototype.__sharedOperation.cancelPendingOperation();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DeferredOperation::CancelPendingOperation()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DeferredOperation::StartAsyncOperation()" />*/
	startAsyncOperation: function () {
		var $self = this;
		if (this.__pendingContext != null) {
			return;
		}
		if ($.ig.DeferredOperation.prototype.__sharedOperation == null) {
			$.ig.DeferredOperation.prototype.initSharedOperation();
		}
		var token = {};
		this.__pendingContext = token;
		if (this == $.ig.DeferredOperation.prototype.__sharedOperation) {
			this.__timeoutId = window.setTimeout(function () { $self.onAsyncCallback(token); }, 0);
		} else {
			$.ig.DeferredOperation.prototype.__sharedOperations.add(this);
			$.ig.DeferredOperation.prototype.__sharedOperation.startAsyncOperation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DeferredOperation::StartAsyncOperation()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DeferredOperation::InitSharedOperation()" />*/
	initSharedOperation: function () {
		if ($.ig.DeferredOperation.prototype.__sharedOperation == null) {
			$.ig.DeferredOperation.prototype.__sharedOperations = new $.ig.List$1($.ig.DeferredOperation.prototype.$type, 0);
			$.ig.DeferredOperation.prototype.__sharedOperation = new $.ig.DeferredOperation(function () {
				var ops = $.ig.DeferredOperation.prototype.__sharedOperations.toArray();
				$.ig.DeferredOperation.prototype.__sharedOperations.clear();
				for (var i = 0; i < ops.length; i++) {
					if (ops[i] != null) {
						ops[i].invokePendingOperation();
					}
				}
			});
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DeferredOperation::InitSharedOperation()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DeferredOperation::OnAsyncCallback(System.Object)" />*/
	onAsyncCallback: function (state) {
		if (state != this.__pendingContext) {
			return;
		}
		this.invokePendingOperation();
	}
	/*<EndMethod Name="System.Void Infragistics.DeferredOperation::OnAsyncCallback(System.Object)" />*/
	,
	$type: new $.ig.Type('DeferredOperation', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DeferredOperation" />*/

/*<BeginType Name="Infragistics.TimedOperation" />*/

$.ig.util.defType('TimedOperation', 'Object', {
	__timerId: 0,
	__callback: null,
	init: function (callback, millisecondDelay) {
		$.ig.Object.prototype.init.call(this);
		this.__callback = callback;
		this.__timerId = window.setTimeout(this.onTimerTick.runOn(this), millisecondDelay);
	},
	/*<BeginMethod Name="System.Void Infragistics.TimedOperation::Cancel()" />*/
	cancel: function () {
		if (this.__callback != null) {
			window.clearTimeout(this.__timerId);
		}
		this.__callback = null;
	}
	/*<EndMethod Name="System.Void Infragistics.TimedOperation::Cancel()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.TimedOperation::OnTimerTick()" />*/
	onTimerTick: function () {
		if (this.__callback != null) {
			var callback = this.__callback;
			this.__callback = null;
			callback();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.TimedOperation::OnTimerTick()" />*/
	,
	$type: new $.ig.Type('TimedOperation', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.TimedOperation" />*/

/*<BeginType Name="Infragistics.WeakEventHandler`3" />*/

$.ig.util.defType('WeakEventHandler$3', 'Object', {
	$tInstance: null,
	$tEventSource: null,
	$tEventArgs: null,
	__weakInstance: null,
	__weakEventSource: null,
	init: function ($tInstance, $tEventSource, $tEventArgs, instance, eventSource, onEventAction, onDetachAction) {
		this.$tInstance = $tInstance;
		this.$tEventSource = $tEventSource;
		this.$tEventArgs = $tEventArgs;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tInstance, this.$tEventSource, this.$tEventArgs);
		}
		$.ig.Object.prototype.init.call(this);
		if (onEventAction == null) {
			throw new $.ig.ArgumentNullException(0, "onEventAction");
		}
		if (onDetachAction == null) {
			throw new $.ig.ArgumentNullException(0, "onDetachAction");
		}
		this.__weakInstance = new $.ig.WeakReference(instance);
		this.__weakEventSource = new $.ig.WeakReference($.ig.util.getBoxIfEnum(this.$tEventSource, eventSource));
		this.onEventAction(onEventAction);
		this.onDetachAction(onDetachAction);
	},
	/*<BeginProperty Name="Infragistics.WeakEventHandler.TEventSource Infragistics.WeakEventHandler`3::EventSource()" />*/
	eventSource: function () {
		return $.ig.util.castObjTo$t(this.$tEventSource, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.__weakEventSource));
	}
	/*<EndProperty Name="Infragistics.WeakEventHandler.TEventSource Infragistics.WeakEventHandler`3::EventSource()" />*/
	,
	/*<BeginProperty Name="Infragistics.WeakEventHandler.TInstance Infragistics.WeakEventHandler`3::Instance()" />*/
	instance: function () {
		return $.ig.util.cast(this.$tInstance, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.__weakInstance));
	}
	/*<EndProperty Name="Infragistics.WeakEventHandler.TInstance Infragistics.WeakEventHandler`3::Instance()" />*/
	,
	_onEventAction: null,
	/*<BeginProperty Name="System.Action Infragistics.WeakEventHandler`3::OnEventAction()" />*/
	onEventAction: function (value) {
		if (arguments.length === 1) {
			this._onEventAction = value;
			return value;
		} else {
			return this._onEventAction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.WeakEventHandler`3::OnEventAction()" />*/
	,
	_onDetachAction: null,
	/*<BeginProperty Name="System.Action Infragistics.WeakEventHandler`3::OnDetachAction()" />*/
	onDetachAction: function (value) {
		if (arguments.length === 1) {
			this._onDetachAction = value;
			return value;
		} else {
			return this._onDetachAction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.WeakEventHandler`3::OnDetachAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.WeakEventHandler`3::OnEvent(System.Object, Infragistics.WeakEventHandler.TEventArgs)" />*/
	onEvent: function (source, eventArgs) {
		var target = $.ig.util.cast(this.$tInstance, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.__weakInstance));
		if (target != null) {
			if (this.onEventAction() != null) {
				this.onEventAction()(target, source, eventArgs);
			}
		} else {
			this.detach();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.WeakEventHandler`3::OnEvent(System.Object, Infragistics.WeakEventHandler.TEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.WeakEventHandler`3::Detach()" />*/
	detach: function () {
		var eventSource = $.ig.util.castObjTo$t(this.$tEventSource, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.__weakEventSource));
		if (this.onDetachAction() != null && this.__weakEventSource.isAlive()) {
			this.onDetachAction()(this, eventSource);
		}
		this.onDetachAction(null);
	}
	/*<EndMethod Name="System.Void Infragistics.WeakEventHandler`3::Detach()" />*/
	,
	$type: new $.ig.Type('WeakEventHandler$3', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.WeakEventHandler`3" />*/

/*<BeginType Name="Infragistics.WeakCollectionChangedHandler`1" />*/

$.ig.util.defType('WeakCollectionChangedHandler$1', 'WeakEventHandler$3', {
	$tInstance: null,
	init: function ($tInstance, instance, eventSource, onEventAction) {
		this.$tInstance = $tInstance;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tInstance);
		}
		$.ig.WeakEventHandler$3.prototype.init.call(this, this.$tInstance, $.ig.INotifyCollectionChanged.prototype.$type, $.ig.NotifyCollectionChangedEventArgs.prototype.$type, instance, eventSource, onEventAction, function (weakHandler, evSource) { evSource.collectionChanged = $.ig.Delegate.prototype.remove(evSource.collectionChanged, weakHandler.onEvent.runOn(weakHandler)); });
	},
	$type: new $.ig.Type('WeakCollectionChangedHandler$1', $.ig.WeakEventHandler$3.prototype.$type.specialize(0, $.ig.INotifyCollectionChanged.prototype.$type, $.ig.NotifyCollectionChangedEventArgs.prototype.$type))
}, true);

/*<EndType Name="Infragistics.WeakCollectionChangedHandler`1" />*/

/*<BeginType Name="Infragistics.WeakPropertyChangedHandler`1" />*/

$.ig.util.defType('WeakPropertyChangedHandler$1', 'WeakEventHandler$3', {
	$tInstance: null,
	init: function ($tInstance, instance, eventSource, onEventAction) {
		this.$tInstance = $tInstance;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tInstance);
		}
		$.ig.WeakEventHandler$3.prototype.init.call(this, this.$tInstance, $.ig.INotifyPropertyChanged.prototype.$type, $.ig.PropertyChangedEventArgs.prototype.$type, instance, eventSource, onEventAction, function (weakHandler, evSource) { evSource.propertyChanged = $.ig.Delegate.prototype.remove(evSource.propertyChanged, weakHandler.onEvent.runOn(weakHandler)); });
	},
	$type: new $.ig.Type('WeakPropertyChangedHandler$1', $.ig.WeakEventHandler$3.prototype.$type.specialize(0, $.ig.INotifyPropertyChanged.prototype.$type, $.ig.PropertyChangedEventArgs.prototype.$type))
}, true);

/*<EndType Name="Infragistics.WeakPropertyChangedHandler`1" />*/

/*<BeginType Name="Infragistics.ISupportPositioning" />*/

$.ig.util.defType('ISupportPositioning', 'Object', {
	$type: new $.ig.Type('ISupportPositioning', null)
}, true);

/*<EndType Name="Infragistics.ISupportPositioning" />*/

/*<BeginType Name="Infragistics.PositionSorter" />*/

$.ig.util.defType('PositionSorter', 'Object', {
	__defaultComparer: null,
	__list: null,
	__map: null,
	__befores: null,
	__afters: null,
	__aggregatedBefores: null,
	__aggregatedAfters: null,
	__indeterminateOrderDetected: false,
	init: function () {
		this.__map = new $.ig.Dictionary$2(String, $.ig.IList$1.prototype.$type.specialize($.ig.ISupportPositioning.prototype.$type), 0);
		this.__befores = new $.ig.Dictionary$2($.ig.ISupportPositioning.prototype.$type, $.ig.HashSet$1.prototype.$type.specialize($.ig.ISupportPositioning.prototype.$type), 0);
		this.__afters = new $.ig.Dictionary$2($.ig.ISupportPositioning.prototype.$type, $.ig.HashSet$1.prototype.$type.specialize($.ig.ISupportPositioning.prototype.$type), 0);
		this.__aggregatedBefores = new $.ig.Dictionary$2($.ig.ISupportPositioning.prototype.$type, $.ig.HashSet$1.prototype.$type.specialize($.ig.ISupportPositioning.prototype.$type), 0);
		this.__aggregatedAfters = new $.ig.Dictionary$2($.ig.ISupportPositioning.prototype.$type, $.ig.HashSet$1.prototype.$type.specialize($.ig.ISupportPositioning.prototype.$type), 0);
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.PositionSorter::Sort(System.Collections.Generic.List, System.Boolean, System.Collections.Generic.IComparer)" />*/
	sort1: function (list, isValid, defaultComparer) {
		var sorter = (function () {
			var $ret = new $.ig.PositionSorter();
			$ret.__list = list;
			$ret.__defaultComparer = defaultComparer;
			return $ret;
		}());
		isValid = sorter.sort();
		return {
			p1: isValid
		};
	}
	/*<EndMethod Name="System.Void Infragistics.PositionSorter::Sort(System.Collections.Generic.List, System.Boolean, System.Collections.Generic.IComparer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.PositionSorter::AggregateBefores(Infragistics.ISupportPositioning, System.Collections.Generic.HashSet)" />*/
	aggregateBefores: function (item, result) {
		var en = this.__befores.item(item).getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			if (!result.contains(ii)) {
				result.add(ii);
				this.aggregateBefores(ii, result);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.PositionSorter::AggregateBefores(Infragistics.ISupportPositioning, System.Collections.Generic.HashSet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.PositionSorter::AggregateAfters(Infragistics.ISupportPositioning, System.Collections.Generic.HashSet)" />*/
	aggregateAfters: function (item, result) {
		var en = this.__afters.item(item).getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			if (!result.contains(ii)) {
				result.add(ii);
				this.aggregateAfters(ii, result);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.PositionSorter::AggregateAfters(Infragistics.ISupportPositioning, System.Collections.Generic.HashSet)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.PositionSorter::CompareHelper(Infragistics.ISupportPositioning, Infragistics.ISupportPositioning, System.Int32)" />*/
	compareHelper: function (x, y, level) {
		if (x == y) {
			return 0;
		}
		if (this.__aggregatedBefores.item(x).contains(y)) {
			return -1;
		}
		if (this.__aggregatedAfters.item(x).contains(y)) {
			return 1;
		}
		if (1 == level) {
			if (x.key() != y.key()) {
				this.__indeterminateOrderDetected = true;
			}
			if (this.__defaultComparer != null) {
				return this.__defaultComparer.compare(x, y);
			}
			return 0;
		}
		return -this.compareHelper(y, x, 1);
	}
	/*<EndMethod Name="System.Int32 Infragistics.PositionSorter::CompareHelper(Infragistics.ISupportPositioning, Infragistics.ISupportPositioning, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.HashSet Infragistics.PositionSorter::GetBeforeAfterItems(Infragistics.ISupportPositioning, System.Boolean)" />*/
	getBeforeAfterItems: function (item, getBefore) {
		var $self = this;
		var keys = getBefore ? item.before() : item.after();
		var result = new $.ig.HashSet$1($.ig.ISupportPositioning.prototype.$type, 0);
		if (null != keys) {
			result.unionWith($.ig.Enumerable.prototype.selectMany$2(String, $.ig.ISupportPositioning.prototype.$type, $.ig.Enumerable.prototype.where$1(String, keys, function (ii) { return $self.__map.containsKey(ii); }), function (ii) { return $self.__map.item(ii); }));
		}
		return result;
	}
	/*<EndMethod Name="System.Collections.Generic.HashSet Infragistics.PositionSorter::GetBeforeAfterItems(Infragistics.ISupportPositioning, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.PositionSorter::Sort()" />*/
	sort: function () {
		var $self = this;
		var isValid = true;
		var en = this.__list.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			var list;
			if (!(function () { var $ret = $self.__map.tryGetValue(ii.key(), list); list = $ret.p1; return $ret.ret; }())) {
				this.__map.item(ii.key(), list = new $.ig.List$1($.ig.ISupportPositioning.prototype.$type, 0));
			}
			list.add(ii);
		}
		var en1 = this.__list.getEnumerator();
		while (en1.moveNext()) {
			var ii1 = en1.current();
			this.__befores.item(ii1, this.getBeforeAfterItems(ii1, true));
			this.__afters.item(ii1, this.getBeforeAfterItems(ii1, false));
		}
		var en2 = this.__list.getEnumerator();
		while (en2.moveNext()) {
			var ii2 = en2.current();
			var en3 = this.__befores.item(ii2).getEnumerator();
			while (en3.moveNext()) {
				var jj = en3.current();
				this.__afters.item(jj).add(ii2);
			}
			var en4 = this.__afters.item(ii2).getEnumerator();
			while (en4.moveNext()) {
				var jj1 = en4.current();
				this.__befores.item(jj1).add(ii2);
			}
		}
		var en5 = this.__list.getEnumerator();
		while (en5.moveNext()) {
			var ii3 = en5.current();
			var aggregatedBeforesSet = new $.ig.HashSet$1($.ig.ISupportPositioning.prototype.$type, 0);
			var aggregatedAftersSet = new $.ig.HashSet$1($.ig.ISupportPositioning.prototype.$type, 0);
			this.aggregateBefores(ii3, aggregatedBeforesSet);
			this.aggregateAfters(ii3, aggregatedAftersSet);
			this.__aggregatedBefores.item(ii3, aggregatedBeforesSet);
			this.__aggregatedAfters.item(ii3, aggregatedAftersSet);
			if (aggregatedBeforesSet.overlaps(aggregatedAftersSet)) {
				isValid = false;
			}
		}
		this.__list.sort2(function (x, y) { return $self.compareHelper(x, y, 0); });
		if (this.__indeterminateOrderDetected) {
		}
		return isValid;
	}
	/*<EndMethod Name="System.Boolean Infragistics.PositionSorter::Sort()" />*/
	,
	$type: new $.ig.Type('PositionSorter', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.PositionSorter" />*/

/*<BeginType Name="Infragistics.PixelConverter" />*/

$.ig.util.defType('PixelConverter', 'Object', {
	init: function () {
		this.__logicalToDevicePixelFactor = 1;
		this.__halfLogicalToDevicePixelFactor = 0.5;
		$.ig.Object.prototype.init.call(this);
	},
	__logicalToDevicePixelFactor: 0,
	__halfLogicalToDevicePixelFactor: 0,
	/*<BeginProperty Name="System.Double Infragistics.PixelConverter::LogicalToDevicePixelFactor()" />*/
	logicalToDevicePixelFactor: function (value) {
		if (arguments.length === 1) {
			this.__logicalToDevicePixelFactor = value;
			this.__halfLogicalToDevicePixelFactor = value / 2;
			return value;
		} else {
			return this.__logicalToDevicePixelFactor;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.PixelConverter::LogicalToDevicePixelFactor()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.PixelConverter::CalculateDpiOffsetAdjustment(System.Double, System.Boolean)" />*/
	calculateDpiOffsetAdjustment: function (value, alwaysRoundUp) {
		var remainder = value % this.__logicalToDevicePixelFactor;
		if ($.ig.CoreUtilities.prototype.areClose(remainder, 0)) {
			return 0;
		}
		if ($.ig.CoreUtilities.prototype.areClose(Math.abs(remainder), this.__logicalToDevicePixelFactor)) {
			return 0;
		}
		if (false == alwaysRoundUp) {
			if (Math.abs(remainder) < this.__halfLogicalToDevicePixelFactor) {
				return -remainder;
			}
			return (Math.sign(remainder) * this.__logicalToDevicePixelFactor) - remainder;
		} else {
			if (remainder < 0) {
				return -remainder;
			}
			return this.__logicalToDevicePixelFactor - remainder;
		}
	}
	/*<EndMethod Name="System.Double Infragistics.PixelConverter::CalculateDpiOffsetAdjustment(System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.PixelConverter::RoundToIntegralDevicePixel(System.Double, System.Nullable)" />*/
	roundToIntegralDevicePixel1: function (value, minValue) {
		if ($.ig.util.nullableNotEquals(minValue, null)) {
			return this.roundToIntegralDevicePixel(Math.max(value, minValue.value()));
		}
		return this.roundToIntegralDevicePixel(value);
	}
	/*<EndMethod Name="System.Double Infragistics.PixelConverter::RoundToIntegralDevicePixel(System.Double, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.PixelConverter::RoundToIntegralDevicePixel(System.Double)" />*/
	roundToIntegralDevicePixel: function (value) {
		return value + this.calculateDpiOffsetAdjustment(value, false);
	}
	/*<EndMethod Name="System.Double Infragistics.PixelConverter::RoundToIntegralDevicePixel(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.PixelConverter::SnapUp(System.Double)" />*/
	snapUp: function (value) {
		return value + this.calculateDpiOffsetAdjustment(value, true);
	}
	/*<EndMethod Name="System.Double Infragistics.PixelConverter::SnapUp(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.PixelConverter::Snap(System.Double)" />*/
	snap: function (value) {
		return value + this.calculateDpiOffsetAdjustment(value, false);
	}
	/*<EndMethod Name="System.Double Infragistics.PixelConverter::Snap(System.Double)" />*/
	,
	$type: new $.ig.Type('PixelConverter', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.PixelConverter" />*/

/*<BeginType Name="Infragistics.Range`1" />*/

$.ig.util.defType('Range$1', 'ValueType', {
	$t: null,
	init: function ($t, initNumber) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ValueType.prototype.init.call(this);
	},
	__start: null,
	__end: null,
	init1: function ($t, initNumber, start, end) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.ValueType.prototype.init.call(this);
		if (this.$type.getStaticFields()._comparerImpl.compare(start, end) < 1) {
			this.__start = start;
			this.__end = end;
		} else {
			this.__start = end;
			this.__end = start;
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Range`1::Equals(System.Object)" />*/
	equals1: function (obj) {
		if ($.ig.util.cast($.ig.Range$1.prototype.$type.specialize(this.$t), obj) !== null) {
			return this.equals(obj);
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Range`1::Equals(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Range`1::GetHashCode()" />*/
	getHashCode: function () {
		return this.__start.getHashCode() << 16 ^ this.__end.getHashCode();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Range`1::GetHashCode()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Range`1::ToString()" />*/
	toString: function () {
		return $.ig.util.stringFormat("{0}-{1}", $.ig.util.getBoxIfEnum(this.$t, this.__start), $.ig.util.getBoxIfEnum(this.$t, this.__end));
	}
	/*<EndMethod Name="System.String Infragistics.Range`1::ToString()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Range`1::ContainsInclusive(Infragistics.Range.T)" />*/
	_containsInclusive: function (value) {
		return this.$type.getStaticFields()._comparerImpl.compare(this.__start, value) < 1 && this.$type.getStaticFields()._comparerImpl.compare(this.__end, value) >= 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Range`1::ContainsInclusive(Infragistics.Range.T)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Range`1::GetInclusiveIntersection(Infragistics.Range)" />*/
	_getInclusiveIntersection: function (other) {
		if (this.$type.getStaticFields()._comparerImpl.compare(this.__end, other.__start) < 0 || this.$type.getStaticFields()._comparerImpl.compare(this.__start, other.__end) > 0) {
			return $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize(this.$t), null);
		}
		var tStart = this.$type.getStaticFields()._comparerImpl.compare(this.__start, other.__start) < 0 ? other.__start : this.__start;
		var tEnd = this.$type.getStaticFields()._comparerImpl.compare(this.__end, other.__end) < 0 ? this.__end : other.__end;
		return $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize(this.$t), new $.ig.Range$1(this.$t, 1, tStart, tEnd));
	}
	/*<EndMethod Name="System.Nullable Infragistics.Range`1::GetInclusiveIntersection(Infragistics.Range)" />*/
	,
	/*<BeginMethod Name="Infragistics.Range Infragistics.Range`1::Max(Infragistics.Range.T)" />*/
	_max: function (minimum) {
		if (this.__start.compareTo(minimum) >= 0) {
			return this;
		}
		var newStart = minimum;
		var newEnd = this.__end.compareTo(minimum) < 0 ? minimum : this.__end;
		return new $.ig.Range$1(this.$t, 1, newStart, newEnd);
	}
	/*<EndMethod Name="Infragistics.Range Infragistics.Range`1::Max(Infragistics.Range.T)" />*/
	,
	/*<BeginMethod Name="Infragistics.Range Infragistics.Range`1::Min(Infragistics.Range.T)" />*/
	_min: function (maximum) {
		if (this.__end.compareTo(maximum) <= 0) {
			return this;
		}
		var newStart = this.__start.compareTo(maximum) < 0 ? this.__start : maximum;
		var newEnd = maximum;
		return new $.ig.Range$1(this.$t, 1, newStart, newEnd);
	}
	/*<EndMethod Name="Infragistics.Range Infragistics.Range`1::Min(Infragistics.Range.T)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Range`1::Equals(Infragistics.Range)" />*/
	equals: function (other) {
		return this.$type.getStaticFields()._equalityComparerImpl.equalsC(this.__start, other.__start) && this.$type.getStaticFields()._equalityComparerImpl.equalsC(this.__end, other.__end);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Range`1::Equals(Infragistics.Range)" />*/
	,
	$type: new $.ig.Type('Range$1', $.ig.ValueType.prototype.$type, [$.ig.IEquatable$1.prototype.$type.specialize(-1)], function () {
		this._equalityComparerImpl = $.ig.EqualityComparer$1.prototype.defaultEqualityComparerValue(arguments[0]);
		this._comparerImpl = $.ig.Comparer$1.prototype.defaultComparerValue(arguments[0]);
		this._startComparer = new $.ig.Range_StartComparerImpl$1(arguments[0]);
		this._startThenEarlyEndComparer = new $.ig.Range_StartThenEndComparerImpl$1(arguments[0]);
	})
}, true);

$.ig.Range$1.prototype.$type.initSelfReferences();

/*<EndType Name="Infragistics.Range`1" />*/

/*<BeginType Name="Infragistics.Range_StartComparerImpl`1" />*/

$.ig.util.defType('Range_StartComparerImpl$1', 'Object', {
	$t: null,
	init: function ($t) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Range_StartComparerImpl`1::Compare(Infragistics.Range, Infragistics.Range)" />*/
	compare: function (x, y) {
		return $.ig.Range$1.prototype.$type.specialize(this.$t).getStaticFields()._comparerImpl.compare(x.__start, y.__start);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Range_StartComparerImpl`1::Compare(Infragistics.Range, Infragistics.Range)" />*/
	,
	$type: new $.ig.Type('Range_StartComparerImpl$1', $.ig.Object.prototype.$type, [$.ig.IComparer$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize(0))])
}, true);

/*<EndType Name="Infragistics.Range_StartComparerImpl`1" />*/

/*<BeginType Name="Infragistics.Range_StartThenEndComparerImpl`1" />*/

$.ig.util.defType('Range_StartThenEndComparerImpl$1', 'Object', {
	$t: null,
	init: function ($t) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Range_StartThenEndComparerImpl`1::Compare(Infragistics.Range, Infragistics.Range)" />*/
	compare: function (x, y) {
		var result = $.ig.Range$1.prototype.$type.specialize(this.$t).getStaticFields()._comparerImpl.compare(x.__start, y.__start);
		if (result == 0) {
			result = $.ig.Range$1.prototype.$type.specialize(this.$t).getStaticFields()._comparerImpl.compare(x.__end, y.__end);
		}
		return result;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Range_StartThenEndComparerImpl`1::Compare(Infragistics.Range, Infragistics.Range)" />*/
	,
	$type: new $.ig.Type('Range_StartThenEndComparerImpl$1', $.ig.Object.prototype.$type, [$.ig.IComparer$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize(0))])
}, true);

/*<EndType Name="Infragistics.Range_StartThenEndComparerImpl`1" />*/

/*<BeginType Name="Infragistics.Documents.Excel.WorkbookFontSnapshot" />*/

$.ig.util.defType('WorkbookFontSnapshot', 'Object', {
	___bold: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___colorInfo: null,
	___height: 0,
	___italic: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___name: null,
	___strikeout: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___superSubScript: 0,
	___underline: 0,
	___color: null,
	init: function (sourceFormat) {
		this.___bold = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___italic = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___strikeout = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___color = new $.ig.Color();
		$.ig.Object.prototype.init.call(this);
		this.___bold = sourceFormat._fontBoldResolved();
		this.___colorInfo = sourceFormat._fontColorInfoResolved();
		this.___height = sourceFormat._fontHeightResolved();
		this.___italic = sourceFormat._fontItalicResolved();
		this.___name = sourceFormat._fontNameResolved();
		this.___strikeout = sourceFormat._fontStrikeoutResolved();
		this.___superSubScript = sourceFormat._fontSuperscriptSubscriptStyleResolved();
		this.___underline = sourceFormat._fontUnderlineStyleResolved();
		this.___color = $.ig.WorkbookFontSnapshot.prototype._toColor(this.___colorInfo, sourceFormat.workbook());
	},
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorkbookFontSnapshot Infragistics.Documents.Excel.WorkbookFontSnapshot::Create(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_create: function (data) {
		if ($.ig.util.nullableNotEquals(this.___bold, data._fontBoldResolved()) || $.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(this.___colorInfo, data._fontColorInfoResolved()) || this.___height != data._fontHeightResolved() || $.ig.util.nullableNotEquals(this.___italic, data._fontItalicResolved()) || this.___name != data._fontNameResolved() || $.ig.util.nullableNotEquals(this.___strikeout, data._fontStrikeoutResolved()) || this.___superSubScript != data._fontSuperscriptSubscriptStyleResolved() || this.___underline != data._fontUnderlineStyleResolved()) {
			return new $.ig.WorkbookFontSnapshot(data);
		}
		return this;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorkbookFontSnapshot Infragistics.Documents.Excel.WorkbookFontSnapshot::Create(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Documents.Excel.WorkbookFontSnapshot::ToColor(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.Workbook)" />*/
	_toColor: function (colorInfo, workbook) {
		return $.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(colorInfo, null) ? $.ig.ColorsInternal.prototype.empty() : $.ig.ExcelUtils.prototype.toNative(colorInfo._getResolvedColorInternal(workbook, true, true));
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Documents.Excel.WorkbookFontSnapshot::ToColor(Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.WorkbookFontSnapshot::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	setFontFormatting: function (source) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.WorkbookFontSnapshot::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	bold: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._bold$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._bold$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.WorkbookFontSnapshot::Bold()" />*/
	_bold$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___bold;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.WorkbookFontSnapshot::Bold()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.WorkbookFontSnapshot::ColorInfo()" />*/
	colorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___colorInfo;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.WorkbookFontSnapshot::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.WorkbookFontSnapshot::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___height;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.WorkbookFontSnapshot::Height()" />*/
	,
	italic: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._italic$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._italic$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.WorkbookFontSnapshot::Italic()" />*/
	_italic$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___italic;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.WorkbookFontSnapshot::Italic()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Documents.Excel.WorkbookFontSnapshot::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Documents.Excel.WorkbookFontSnapshot::Name()" />*/
	,
	strikeout: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._strikeout$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._strikeout$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.WorkbookFontSnapshot::Strikeout()" />*/
	_strikeout$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___strikeout;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.WorkbookFontSnapshot::Strikeout()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.WorkbookFontSnapshot::SuperscriptSubscriptStyle()" />*/
	superscriptSubscriptStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___superSubScript;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.WorkbookFontSnapshot::SuperscriptSubscriptStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.WorkbookFontSnapshot::UnderlineStyle()" />*/
	underlineStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___underline;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.WorkbookFontSnapshot::UnderlineStyle()" />*/
	,
	/*<BeginProperty Name="System.Windows.Media.Color Infragistics.Documents.Excel.WorkbookFontSnapshot::Color()" />*/
	_color: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___color;
		}
	}
	/*<EndProperty Name="System.Windows.Media.Color Infragistics.Documents.Excel.WorkbookFontSnapshot::Color()" />*/
	,
	$type: new $.ig.Type('WorkbookFontSnapshot', $.ig.Object.prototype.$type, [$.ig.excel.IWorkbookFont.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.WorkbookFontSnapshot" />*/

/*<BeginType Name="Infragistics.Documents.Excel.FormattedStringFontResolved" />*/

$.ig.util.defType('FormattedStringFontResolved', 'Object', {
	___format: null,
	___font: null,
	init: function (font, format) {
		$.ig.Object.prototype.init.call(this);
		this.___font = font;
		this.___format = format;
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.FormattedStringFontResolved::Initialize(Infragistics.Documents.Excel.FormattedStringFont, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_initialize: function (font, format) {
		this.___font = font;
		this.___format = format;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.FormattedStringFontResolved::Initialize(Infragistics.Documents.Excel.FormattedStringFont, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.FormattedStringFontResolved::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	setFontFormatting: function (source) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.FormattedStringFontResolved::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	bold: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._bold$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._bold$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.FormattedStringFontResolved::Bold()" />*/
	_bold$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font._bold$i();
			if ($.ig.util.nullableEquals(value, null)) {
				value = this.___format._fontBoldResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.FormattedStringFontResolved::Bold()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.FormattedStringFontResolved::ColorInfo()" />*/
	colorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.colorInfo();
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(value, null)) {
				value = this.___format._fontColorInfoResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.FormattedStringFontResolved::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.FormattedStringFontResolved::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.height();
			if (value < 0) {
				value = this.___format._fontHeightResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.FormattedStringFontResolved::Height()" />*/
	,
	italic: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._italic$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._italic$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.FormattedStringFontResolved::Italic()" />*/
	_italic$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font._italic$i();
			if ($.ig.util.nullableEquals(value, null)) {
				value = this.___format._fontItalicResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.FormattedStringFontResolved::Italic()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Documents.Excel.FormattedStringFontResolved::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.name();
			if (value == null) {
				value = this.___format._fontNameResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Documents.Excel.FormattedStringFontResolved::Name()" />*/
	,
	strikeout: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._strikeout$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._strikeout$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.FormattedStringFontResolved::Strikeout()" />*/
	_strikeout$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font._strikeout$i();
			if ($.ig.util.nullableEquals(value, null)) {
				value = this.___format._fontStrikeoutResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.FormattedStringFontResolved::Strikeout()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.FormattedStringFontResolved::SuperscriptSubscriptStyle()" />*/
	superscriptSubscriptStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.superscriptSubscriptStyle();
			if (value == $.ig.excel.FontSuperscriptSubscriptStyle.$default) {
				value = this.___format._fontSuperscriptSubscriptStyleResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.FormattedStringFontResolved::SuperscriptSubscriptStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.FormattedStringFontResolved::UnderlineStyle()" />*/
	underlineStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.underlineStyle();
			if (value == $.ig.excel.FontUnderlineStyle.$default) {
				value = this.___format._fontUnderlineStyleResolved();
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.FormattedStringFontResolved::UnderlineStyle()" />*/
	,
	$type: new $.ig.Type('FormattedStringFontResolved', $.ig.Object.prototype.$type, [$.ig.excel.IWorkbookFont.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.FormattedStringFontResolved" />*/

/*<BeginType Name="Infragistics.Documents.Excel.ResolvedWorkbookFont" />*/

$.ig.util.defType('ResolvedWorkbookFont', 'Object', {
	___fallback: null,
	___font: null,
	init: function (font, fallback) {
		$.ig.Object.prototype.init.call(this);
		this.___font = font;
		this.___fallback = fallback;
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.ResolvedWorkbookFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	setFontFormatting: function (source) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.ResolvedWorkbookFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	bold: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._bold$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._bold$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorkbookFont::Bold()" />*/
	_bold$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font._bold$i();
			if ($.ig.util.nullableEquals(value, null)) {
				value = this.___fallback._bold$i();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorkbookFont::Bold()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ResolvedWorkbookFont::ColorInfo()" />*/
	colorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.colorInfo();
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(value, null)) {
				value = this.___fallback.colorInfo();
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ResolvedWorkbookFont::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.ResolvedWorkbookFont::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.height();
			if (value < 0) {
				value = this.___fallback.height();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.ResolvedWorkbookFont::Height()" />*/
	,
	italic: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._italic$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._italic$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorkbookFont::Italic()" />*/
	_italic$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font._italic$i();
			if ($.ig.util.nullableEquals(value, null)) {
				value = this.___fallback._italic$i();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorkbookFont::Italic()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Documents.Excel.ResolvedWorkbookFont::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.name();
			if (value == null) {
				value = this.___fallback.name();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Documents.Excel.ResolvedWorkbookFont::Name()" />*/
	,
	strikeout: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._strikeout$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._strikeout$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorkbookFont::Strikeout()" />*/
	_strikeout$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font._strikeout$i();
			if ($.ig.util.nullableEquals(value, null)) {
				value = this.___fallback._strikeout$i();
			}
			return value;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorkbookFont::Strikeout()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.ResolvedWorkbookFont::SuperscriptSubscriptStyle()" />*/
	superscriptSubscriptStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.superscriptSubscriptStyle();
			if (value == $.ig.excel.FontSuperscriptSubscriptStyle.$default) {
				value = this.___fallback.superscriptSubscriptStyle();
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.ResolvedWorkbookFont::SuperscriptSubscriptStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.ResolvedWorkbookFont::UnderlineStyle()" />*/
	underlineStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			var value = this.___font.underlineStyle();
			if (value == $.ig.excel.FontUnderlineStyle.$default) {
				value = this.___fallback.underlineStyle();
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.ResolvedWorkbookFont::UnderlineStyle()" />*/
	,
	$type: new $.ig.Type('ResolvedWorkbookFont', $.ig.Object.prototype.$type, [$.ig.excel.IWorkbookFont.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.ResolvedWorkbookFont" />*/

/*<BeginType Name="Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont" />*/

$.ig.util.defType('ResolvedWorksheetCellFormatDataFont', 'Object', {
	___format: null,
	init: function (format) {
		$.ig.Object.prototype.init.call(this);
		this._initialize(format);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Initialize(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_initialize: function (format) {
		this.___format = format;
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Initialize(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	setFontFormatting: function (source) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	bold: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._bold$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._bold$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Bold()" />*/
	_bold$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontBoldResolved();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Bold()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::ColorInfo()" />*/
	colorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontColorInfoResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontHeightResolved();
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Height()" />*/
	,
	italic: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._italic$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._italic$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Italic()" />*/
	_italic$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontItalicResolved();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Italic()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontNameResolved();
		}
	}
	/*<EndProperty Name="System.String Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Name()" />*/
	,
	strikeout: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._strikeout$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._strikeout$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Strikeout()" />*/
	_strikeout$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontStrikeoutResolved();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::Strikeout()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::SuperscriptSubscriptStyle()" />*/
	superscriptSubscriptStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontSuperscriptSubscriptStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::SuperscriptSubscriptStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::UnderlineStyle()" />*/
	underlineStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fontUnderlineStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont::UnderlineStyle()" />*/
	,
	$type: new $.ig.Type('ResolvedWorksheetCellFormatDataFont', $.ig.Object.prototype.$type, [$.ig.excel.IWorkbookFont.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.ResolvedWorksheetCellFormatDataFont" />*/

/*<BeginType Name="Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData" />*/

$.ig.util.defType('ReadOnlyResolvedWorksheetCellFormatData', 'Object', {
	___format: null,
	___font: null,
	init: function (format) {
		$.ig.Object.prototype.init.call(this);
		this._initialize(format);
	},
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Initialize(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_initialize: function (format) {
		this.___format = format;
		if (this.___font == null) {
			this.___font = new $.ig.ResolvedWorksheetCellFormatDataFont(format);
		} else {
			this.___font._initialize(format);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Initialize(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setFormatting: function (source) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Alignment()" />*/
	alignment: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._alignmentResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Alignment()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::BottomBorderColorInfo()" />*/
	bottomBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._bottomBorderColorInfoResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::BottomBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::BottomBorderStyle()" />*/
	bottomBorderStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._bottomBorderStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::BottomBorderStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::DiagonalBorderColorInfo()" />*/
	diagonalBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._diagonalBorderColorInfoResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::DiagonalBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.DiagonalBorders Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::DiagonalBorders()" />*/
	diagonalBorders: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._diagonalBordersResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.DiagonalBorders Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::DiagonalBorders()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::DiagonalBorderStyle()" />*/
	diagonalBorderStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._diagonalBorderStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::DiagonalBorderStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Fill()" />*/
	fill: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._fillResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Fill()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Font()" />*/
	font: function () {
		return $_0(this.___font);
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Font()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatOptions Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::FormatOptions()" />*/
	formatOptions: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._formatOptionsResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatOptions Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::FormatOptions()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::FormatString()" />*/
	formatString: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._formatStringResolved();
		}
	}
	/*<EndProperty Name="System.String Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::FormatString()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Indent()" />*/
	indent: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._indentResolved();
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Indent()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::LeftBorderColorInfo()" />*/
	leftBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._leftBorderColorInfoResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::LeftBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::LeftBorderStyle()" />*/
	leftBorderStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._leftBorderStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::LeftBorderStyle()" />*/
	,
	locked: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._locked$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._locked$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Locked()" />*/
	_locked$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._lockedResolved();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Locked()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::RightBorderColorInfo()" />*/
	rightBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._rightBorderColorInfoResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::RightBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::RightBorderStyle()" />*/
	rightBorderStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._rightBorderStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::RightBorderStyle()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Rotation()" />*/
	rotation: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._rotationResolved();
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Rotation()" />*/
	,
	shrinkToFit: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._shrinkToFit$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._shrinkToFit$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::ShrinkToFit()" />*/
	_shrinkToFit$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._shrinkToFitResolved();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::ShrinkToFit()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Style()" />*/
	style: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._styleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::Style()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::TopBorderColorInfo()" />*/
	topBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._topBorderColorInfoResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::TopBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::TopBorderStyle()" />*/
	topBorderStyle: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._topBorderStyleResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::TopBorderStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::VerticalAlignment()" />*/
	verticalAlignment: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._verticalAlignmentResolved();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::VerticalAlignment()" />*/
	,
	wrapText: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._wrapText$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._wrapText$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::WrapText()" />*/
	_wrapText$i: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return this.___format._wrapTextResolved();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData::WrapText()" />*/
	,
	$type: new $.ig.Type('ReadOnlyResolvedWorksheetCellFormatData', $.ig.Object.prototype.$type, [$.ig.excel.IWorksheetCellFormat.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Documents.Excel.ReadOnlyResolvedWorksheetCellFormatData" />*/

/*<BeginType Name="Infragistics.Core.LongValue" />*/

$.ig.util.defType('LongValue', 'ValueType', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ValueType.prototype.init.call(this);
	},
	_low: 0,
	_high: 0,
	init1: function (initNumber, low, high) {
		$.ig.ValueType.prototype.init.call(this);
		this._low = low;
		this._high = high;
	},
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::All()" />*/
	all: function () {
		return new $.ig.LongValue(1, -1, -1);
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::All()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Core.LongValue::HasAll(Infragistics.Core.LongValue)" />*/
	hasAll: function (other) {
		return (other._low & this._low) == other._low && (other._high & this._high) == other._high;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Core.LongValue::HasAll(Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Core.LongValue::HasAny(Infragistics.Core.LongValue)" />*/
	hasAny: function (other) {
		return (other._low & this._low) != 0 || (other._high & this._high) != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Core.LongValue::HasAny(Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Core.LongValue::IsMatch(Infragistics.Core.LongValue, Infragistics.Core.LongValue)" />*/
	isMatch: function (disallowed, required) {
		return !this.hasAny(disallowed) && this.hasAll(required);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Core.LongValue::IsMatch(Infragistics.Core.LongValue, Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::Or(Infragistics.Core.LongValue, Infragistics.Core.LongValue)" />*/
	or: function (v1, v2) {
		return new $.ig.LongValue(1, v1._low | v2._low, v1._high | v2._high);
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::Or(Infragistics.Core.LongValue, Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::OrHigh(System.Int32)" />*/
	orHigh: function (high) {
		return new $.ig.LongValue(1, this._low, this._high | high);
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::OrHigh(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::OrLow(System.Int32)" />*/
	orLow: function (low) {
		return new $.ig.LongValue(1, this._low | low, this._high);
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::OrLow(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::FromLong(System.Int64)" />*/
	fromLong: function (l) {
		return new $.ig.LongValue(1, ($.ig.util.u32BitwiseAnd(l, 4294967295)), $.ig.Convert.prototype.toInt32(l / Math.pow(2, 32)));
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Core.LongValue::FromLong(System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Core.LongValue::ToLong()" />*/
	toLong: function () {
		return $.ig.Convert.prototype.toInt64(this._high * Math.pow(2, 32) + this._low);
	}
	/*<EndMethod Name="System.Int64 Infragistics.Core.LongValue::ToLong()" />*/
	,
	$type: new $.ig.Type('LongValue', $.ig.ValueType.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Core.LongValue" />*/

/*<BeginType Name="Infragistics.Collections.LazyReadOnlyNotifyCollection`1" />*/

$.ig.util.defType('LazyReadOnlyNotifyCollection$1', 'Object', {
	$t: null,
	___items: null,
	___isDirty: false,
	___propChangeListeners: null,
	___version: 0,
	init: function ($t) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		this.___isDirty = true;
		$.ig.Object.prototype.init.call(this);
		this.___propChangeListeners = new $.ig.PropertyChangeListenerList();
		this.___items = new $.ig.List$1(this.$t, 0);
	},
	/*<BeginProperty Name="Infragistics.Collections.LazyReadOnlyNotifyCollection.T Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Item(System.Int32)" />*/
	item: function (index, value) {
		if (arguments.length === 2) {
			$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
			return value;
		} else {
			this._verifyList();
			return this.___items.__inner[index];
		}
	}
	/*<EndProperty Name="Infragistics.Collections.LazyReadOnlyNotifyCollection.T Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Item(System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Items()" />*/
	_items: function () {
		return this.___items;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Items()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::IsDirty()" />*/
	_isDirty: function () {
		return this.___isDirty;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::IsDirty()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::NotifyListeners(System.Object, System.String, System.Object)" />*/
	_notifyListeners: function (sender, property, extraInfo) {
		this._onSubObjectPropertyChanged(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::NotifyListeners(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		if (null != this.___propChangeListeners) {
			$.ig.ListenerList.prototype.raisePropertyChanged$2($.ig.Object.prototype.$type, String, this.___propChangeListeners, sender, property, extraInfo);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::DirtyCollection()" />*/
	_dirtyCollection: function () {
		this.___version++;
		this.___isDirty = true;
		this._notifyReset();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::DirtyCollection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	_onCollectionChanged: function (e) {
		var handler = this.collectionChanged;
		if (null != handler) {
			handler(this, e);
		}
		this._notifyListeners(this, $.ig.NotifyCollectionChangedAction.prototype.$getName(e.action()), e);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::OnPropertyChanged(System.String)" />*/
	_onPropertyChanged: function (propertyName) {
		var handler = this.propertyChanged;
		if (null != handler) {
			handler(this, new $.ig.PropertyChangedEventArgs(propertyName));
		}
		this._notifyListeners(this, propertyName, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::OnPropertyChanged(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::NotifyReset()" />*/
	_notifyReset: function () {
		this._onCollectionChanged(this.$type.getStaticFields($.ig.LazyReadOnlyNotifyCollection$1.prototype.$type).__resetArgs);
		this._onPropertyChanged("Count");
		this._onPropertyChanged("Item[]");
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::NotifyReset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::VerifyList()" />*/
	_verifyList: function () {
		if (this.___isDirty) {
			this.___isDirty = false;
			this._verifyList1(this.___items);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::VerifyList()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::VerifyList(System.Collections.Generic.IList)" />*/
	_verifyList1: function (list) {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::VerifyList(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.AddListener(Infragistics.ITypedPropertyChangeListener, System.Boolean)" />*/
	addListener: function (listener, useWeakReference) {
		this.___propChangeListeners.add(listener, useWeakReference);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.AddListener(Infragistics.ITypedPropertyChangeListener, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.RemoveListener(Infragistics.ITypedPropertyChangeListener)" />*/
	removeListener: function (listener) {
		this.___propChangeListeners.remove(listener);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.RemoveListener(Infragistics.ITypedPropertyChangeListener)" />*/
	,
	propertyChanged: null,
	collectionChanged: null,
	/*<BeginMethod Name="System.Collections.IEnumerator Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IEnumerable.GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.LazyReadOnlyNotifyCollection_Enumerator$1(this.$t, this);
	}
	/*<EndMethod Name="System.Collections.IEnumerator Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IEnumerable.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.LazyReadOnlyNotifyCollection`1::GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.LazyReadOnlyNotifyCollection_Enumerator$1(this.$t, this);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.LazyReadOnlyNotifyCollection`1::GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.Add(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	add: function (item) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.Add(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.Clear()" />*/
	clear: function () {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.Clear()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Contains(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	contains: function (item) {
		this._verifyList();
		return this.___items.contains(item);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Contains(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.CopyTo(, System.Int32)" />*/
	copyTo: function (array, arrayIndex) {
		this._verifyList();
		this.___items.copyTo(array, arrayIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.CopyTo(, System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Count()" />*/
	count: function () {
		this._verifyList();
		return this.___items.count();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Count()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.IsReadOnly()" />*/
	isReadOnly: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.Generic.ICollection<T>.IsReadOnly()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Remove(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	remove: function (item) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Remove(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::IndexOf(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	indexOf: function (item) {
		this._verifyList();
		return this.___items.indexOf(item);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::IndexOf(Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Insert(System.Int32, Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	insert: function (index, item) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Insert(System.Int32, Infragistics.Collections.LazyReadOnlyNotifyCollection.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.ICollection.CopyTo(System.Array, System.Int32)" />*/
	copyTo1: function (array, index) {
		this._verifyList();
		(this.___items).copyTo(array, index);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.ICollection.CopyTo(System.Array, System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.ICollection.IsSynchronized()" />*/
	isSynchronized: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.ICollection.IsSynchronized()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.ICollection.SyncRoot()" />*/
	syncRoot: function () {
		return this.___items;
	}
	/*<EndProperty Name="System.Object Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.ICollection.SyncRoot()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.Add(System.Object)" />*/
	add1: function (value) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
		return -1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.Add(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.Clear()" />*/
	clear1: function () {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.Clear()" />*/
	,
	contains: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Contains(System.Object)" />*/
	_contains1: function (value) {
		this._verifyList();
		return (this.___items).contains(value);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Contains(System.Object)" />*/
	,
	indexOf: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::IndexOf(System.Object)" />*/
	_indexOf1: function (value) {
		this._verifyList();
		return (this.___items).indexOf(value);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.LazyReadOnlyNotifyCollection`1::IndexOf(System.Object)" />*/
	,
	insert: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Insert(System.Int32, System.Object)" />*/
	_insert1: function (index, value) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Insert(System.Int32, System.Object)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.IsFixedSize()" />*/
	isFixedSize: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.IsFixedSize()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.IsReadOnly()" />*/
	isReadOnly1: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection`1::System.Collections.IList.IsReadOnly()" />*/
	,
	remove: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Remove(System.Object)" />*/
	_remove1: function (value) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::Remove(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::RemoveAt(System.Int32)" />*/
	removeAt: function (index) {
		$.ig.CoreUtilities.prototype.raiseReadOnlyCollectionException();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection`1::RemoveAt(System.Int32)" />*/
	,
	$type: new $.ig.Type('LazyReadOnlyNotifyCollection$1', $.ig.Object.prototype.$type, [$.ig.IList$1.prototype.$type.specialize(0), $.ig.ICollection$1.prototype.$type.specialize(0), $.ig.IEnumerable$1.prototype.$type.specialize(0), $.ig.IList.prototype.$type, $.ig.ICollection.prototype.$type, $.ig.IEnumerable.prototype.$type, $.ig.INotifyCollectionChanged.prototype.$type, $.ig.INotifyPropertyChanged.prototype.$type, $.ig.ISupportPropertyChangeNotifications.prototype.$type], function () {
		this.__resetArgs = new $.ig.NotifyCollectionChangedEventArgs(0, $.ig.NotifyCollectionChangedAction.prototype.reset);
	})
}, true);

/*<EndType Name="Infragistics.Collections.LazyReadOnlyNotifyCollection`1" />*/

/*<BeginType Name="Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1" />*/

$.ig.util.defType('LazyReadOnlyNotifyCollection_Enumerator$1', 'Object', {
	$t: null,
	___collection: null,
	___version: 0,
	___current: null,
	___index: 0,
	init: function ($t, collection) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		this.___collection = collection;
		this.___collection._verifyList();
		this.___version = collection.___version;
		this.reset();
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::ThrowIfVersionChanged()" />*/
	_throwIfVersionChanged: function () {
		if (this.___version != this.___collection.___version) {
			throw new $.ig.InvalidOperationException(0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::ThrowIfVersionChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::Dispose()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::System.Collections.IEnumerator.Current()" />*/
	current: function () {
		return $.ig.util.getBoxIfEnum(this.$t, this.___current);
	}
	/*<EndProperty Name="System.Object Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::System.Collections.IEnumerator.Current()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::MoveNext()" />*/
	moveNext: function () {
		this._throwIfVersionChanged();
		if (this.___index < this.___collection.count()) {
			this.___current = this.___collection.item(this.___index);
			this.___index++;
			return true;
		}
		this.___index = this.___collection.count();
		this.___current = $.ig.util.getDefaultValue(this.$t);
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::Reset()" />*/
	reset: function () {
		this._throwIfVersionChanged();
		this.___index = 0;
		this.___current = $.ig.util.getDefaultValue(this.$t);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::Reset()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator.T Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::Current()" />*/
	current: function () {
		return this.___current;
	}
	/*<EndProperty Name="Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator.T Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1::Current()" />*/
	,
	$type: new $.ig.Type('LazyReadOnlyNotifyCollection_Enumerator$1', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize(0)])
}, true);

/*<EndType Name="Infragistics.Collections.LazyReadOnlyNotifyCollection_Enumerator`1" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary`2" />*/

$.ig.util.defType('WeakDictionary$2', 'Object', {
	$tKey: null,
	$tValue: null,
	___arr: null,
	___count: 0,
	___version: 0,
	___keyComparer: null,
	___loadFactor: 0,
	___keysAsWeakReferences: false,
	___valuesAsWeakReferences: false,
	init: function ($tKey, $tValue, initNumber, manageKeysAsWeakReferences, manageValuesAsWeakReferences) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
				case 3:
					this.init3.apply(this, arguments);
					break;
				case 4:
					this.init4.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.WeakDictionary$2.prototype.init1.call(this, this.$tKey, this.$tValue, 1, manageKeysAsWeakReferences, manageValuesAsWeakReferences, $.ig.WeakDictionary$2.prototype.__dEFAULT_CAPACITY);
	},
	init1: function ($tKey, $tValue, initNumber, manageKeysAsWeakReferences, manageValuesAsWeakReferences, initialCapacity) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.WeakDictionary$2.prototype.init3.call(this, this.$tKey, this.$tValue, 3, manageKeysAsWeakReferences, manageValuesAsWeakReferences, initialCapacity, null);
	},
	init2: function ($tKey, $tValue, initNumber, manageKeysAsWeakReferences, manageValuesAsWeakReferences, keyComparer) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.WeakDictionary$2.prototype.init3.call(this, this.$tKey, this.$tValue, 3, manageKeysAsWeakReferences, manageValuesAsWeakReferences, $.ig.WeakDictionary$2.prototype.__dEFAULT_CAPACITY, keyComparer);
	},
	init3: function ($tKey, $tValue, initNumber, manageKeysAsWeakReferences, manageValuesAsWeakReferences, initialCapacity, keyComparer) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.WeakDictionary$2.prototype.init4.call(this, this.$tKey, this.$tValue, 4, manageKeysAsWeakReferences, manageValuesAsWeakReferences, initialCapacity, $.ig.WeakDictionary$2.prototype.__dEFAULT_LOAD_FACTOR, keyComparer);
	},
	init4: function ($tKey, $tValue, initNumber, manageKeysAsWeakReferences, manageValuesAsWeakReferences, initialCapacity, loadFactor, keyComparer) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		this.___keysAsWeakReferences = true;
		this.___valuesAsWeakReferences = true;
		$.ig.Object.prototype.init.call(this);
		if (initialCapacity <= 0) {
			throw new $.ig.ArgumentOutOfRangeException(2, "initialCapacity", $.ig.SR.prototype.getString("LE_ArgumentOutOfRangeException_7"));
		}
		if (loadFactor <= 0 || loadFactor > 1) {
			throw new $.ig.ArgumentOutOfRangeException(2, "loadFactor", $.ig.SR.prototype.getString("LE_ArgumentOutOfRangeException_8"));
		}
		this.___keysAsWeakReferences = manageKeysAsWeakReferences;
		this.___valuesAsWeakReferences = manageValuesAsWeakReferences;
		this.___loadFactor = loadFactor;
		this.___arr = new Array($.ig.truncate((initialCapacity / this.___loadFactor)));
		this.___keyComparer = null != keyComparer ? keyComparer : $.ig.EqualityComparer$1.prototype.defaultEqualityComparerValue(this.$tKey);
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::AddHelper(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue, System.Boolean)" />*/
	_addHelper: function (key, value, replace) {
		var hash = this._getHashCode1(key);
		var i = this._getIndex1(hash);
		var ii = this.___arr[i];
		if (null != ii) {
			var match = this._findInList(ii, key);
			if (null != match) {
				if (!replace && (!this.___valuesAsWeakReferences || match.hasValue(this))) {
					throw new $.ig.InvalidOperationException(1, $.ig.SR.prototype.getString("LE_InvalidOperationException_7"));
				}
				match.setValue(this, value);
				this.___version++;
				return;
			}
		}
		var newEntry = new $.ig.WeakDictionary_Entry$2(this.$tKey, this.$tValue, hash, this.___keysAsWeakReferences ? this._createKeyWeakReference(key) : key, this.___valuesAsWeakReferences ? this._createValueWeakReference(value) : value);
		newEntry.__next = ii;
		this.___arr[i] = newEntry;
		this.___count++;
		this.___version++;
		this._expandCollapseHelper(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::AddHelper(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::ContainsValue(Infragistics.Collections.WeakDictionary.TValue)" />*/
	_containsValue: function (value) {
		var en = new $.ig.WeakDictionary_EntryEnumerable$2(this.$tKey, this.$tValue, this).getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			if (ii.isSameValue(this, value)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::ContainsValue(Infragistics.Collections.WeakDictionary.TValue)" />*/
	,
	/*<BeginMethod Name="System.WeakReference Infragistics.Collections.WeakDictionary`2::CreateKeyWeakReference(Infragistics.Collections.WeakDictionary.TKey)" />*/
	_createKeyWeakReference: function (key) {
		return null != $.ig.util.getBoxIfEnum(this.$tKey, key) ? new $.ig.WeakReference($.ig.util.getBoxIfEnum(this.$tKey, key)) : null;
	}
	/*<EndMethod Name="System.WeakReference Infragistics.Collections.WeakDictionary`2::CreateKeyWeakReference(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="System.WeakReference Infragistics.Collections.WeakDictionary`2::CreateValueWeakReference(Infragistics.Collections.WeakDictionary.TValue)" />*/
	_createValueWeakReference: function (value) {
		return null != $.ig.util.getBoxIfEnum(this.$tValue, value) ? new $.ig.WeakReference($.ig.util.getBoxIfEnum(this.$tValue, value)) : null;
	}
	/*<EndMethod Name="System.WeakReference Infragistics.Collections.WeakDictionary`2::CreateValueWeakReference(Infragistics.Collections.WeakDictionary.TValue)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::CalcNewLengthHelper(System.Int32, System.Int32)" />*/
	_calcNewLengthHelper: function (currLen, requiredLen) {
		var newLen;
		if (currLen < requiredLen) {
			newLen = 2 * currLen;
		} else {
			newLen = currLen;
			while (newLen > 4 * requiredLen) {
				var tmp = $.ig.intDivide(newLen, 2);
				var defaultLen = $.ig.truncate(($.ig.WeakDictionary$2.prototype.__dEFAULT_CAPACITY / this.___loadFactor));
				if (tmp < defaultLen) {
					break;
				}
				newLen = tmp;
			}
		}
		return newLen;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::CalcNewLengthHelper(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::ExpandCollapseHelper(System.Boolean)" />*/
	_expandCollapseHelper: function (expandOnly) {
		var newCount = this.___count;
		var requiredLen = $.ig.truncate((newCount / this.___loadFactor));
		var currLen = this.___arr.length;
		if (currLen < requiredLen || !expandOnly && currLen > 4 * requiredLen) {
			var newLen = this._calcNewLengthHelper(currLen, requiredLen);
			if (currLen != newLen && newLen > 1) {
				var oldArr = this.___arr;
				var newArr = new Array(newLen);
				var keysAsWeakReferences = this.___keysAsWeakReferences;
				var removedItemCount = 0;
				for (var i = 0; i < oldArr.length; i++) {
					var ii = oldArr[i];
					while (null != ii) {
						if (keysAsWeakReferences && !ii.hasKey(this) || this.___valuesAsWeakReferences && !ii.hasValue(this)) {
							ii = ii.__next;
							removedItemCount++;
							continue;
						}
						var newIndex = $.ig.WeakDictionary$2.prototype._getIndexHelper(this.$tKey, this.$tValue, ii.__hash, newLen);
						var tmp = newArr[newIndex];
						newArr[newIndex] = ii;
						var oldNext = ii.__next;
						ii.__next = tmp;
						ii = oldNext;
					}
				}
				this.___arr = newArr;
				if (removedItemCount > 0) {
					this.___count -= removedItemCount;
					this.___version++;
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::ExpandCollapseHelper(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Collections.WeakDictionary_Entry Infragistics.Collections.WeakDictionary`2::FindExistingEntry(Infragistics.Collections.WeakDictionary.TKey)" />*/
	_findExistingEntry: function (key) {
		var index = this._getIndex(key);
		var ii = this.___arr[index];
		if (null != ii) {
			return this._findInList(ii, key);
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Collections.WeakDictionary_Entry Infragistics.Collections.WeakDictionary`2::FindExistingEntry(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="Infragistics.Collections.WeakDictionary_Entry Infragistics.Collections.WeakDictionary`2::FindInList(Infragistics.Collections.WeakDictionary_Entry, Infragistics.Collections.WeakDictionary.TKey)" />*/
	_findInList: function (list, key) {
		var ii = list;
		while (null != ii) {
			if (ii.isSameKey(this, key)) {
				return ii;
			}
			ii = ii.__next;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Collections.WeakDictionary_Entry Infragistics.Collections.WeakDictionary`2::FindInList(Infragistics.Collections.WeakDictionary_Entry, Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetHashCode(Infragistics.Collections.WeakDictionary.TKey)" />*/
	_getHashCode1: function (key) {
		return this.___keyComparer.getHashCodeC(key);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetHashCode(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetIndex(Infragistics.Collections.WeakDictionary.TKey)" />*/
	_getIndex: function (key) {
		return this._getIndex1(this._getHashCode1(key));
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetIndex(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetIndex(System.Int32)" />*/
	_getIndex1: function (hash) {
		return $.ig.WeakDictionary$2.prototype._getIndexHelper(this.$tKey, this.$tValue, hash, this.___arr.length);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetIndex(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetIndexHelper(System.Int32, System.Int32)" />*/
	_getIndexHelper: function ($tKey, $tValue, hash, arrLen) {
		if (hash < 0) {
			hash = -hash;
		}
		return hash % arrLen;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakDictionary`2::GetIndexHelper(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::TryGetValueHelper(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue, System.Boolean)" />*/
	_tryGetValueHelper: function (key, value, includeEntriesWithNullValues) {
		var ii = this._findExistingEntry(key);
		if (null != ii) {
			value = ii.getValue(this);
			return {
				ret: includeEntriesWithNullValues || !this.___valuesAsWeakReferences || null != $.ig.util.getBoxIfEnum(this.$tValue, value),
				p1: value
			};
		}
		value = $.ig.util.getDefaultValue(this.$tValue);
		return {
			ret: false,
			p1: value
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::TryGetValueHelper(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Collections.WeakDictionary`2::GetWeakReferenceTargetSafe(System.WeakReference)" />*/
	_getWeakReferenceTargetSafe: function ($tKey, $tValue, weakReference) {
		if (null != weakReference) {
			try {
				return weakReference.target();
			}
			catch (e) {
			}
		}
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.Collections.WeakDictionary`2::GetWeakReferenceTargetSafe(System.WeakReference)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::Add(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue)" />*/
	add: function (key, value) {
		this._addHelper(key, value, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::Add(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::Clear()" />*/
	clear: function () {
		$.ig.util.arrayClear1(this.___arr, 0, this.___arr.length);
		this.___count = 0;
		this.___version++;
		this._expandCollapseHelper(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::Clear()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::Compact(System.Boolean)" />*/
	_compact: function (removeEntriesWithNullValues) {
		var arr = this.___arr;
		var keysAsWeakReferences = this.___keysAsWeakReferences;
		var removedItemCount = 0;
		for (var i = 0; i < arr.length; i++) {
			var ii = arr[i];
			var prev = null;
			while (null != ii) {
				if (keysAsWeakReferences && !ii.hasKey(this) || removeEntriesWithNullValues && !ii.hasValue(this)) {
					if (null != prev) {
						prev.__next = ii.__next;
					} else {
						arr[i] = ii.__next;
					}
					ii = ii.__next;
					removedItemCount++;
				} else {
					prev = ii;
					ii = ii.__next;
				}
			}
		}
		if (removedItemCount > 0) {
			this.___count -= removedItemCount;
			this.___version++;
			this._expandCollapseHelper(false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::Compact(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::ContainsKey(Infragistics.Collections.WeakDictionary.TKey)" />*/
	containsKey: function (key) {
		var entry = this._findExistingEntry(key);
		return null != entry && (!this.___valuesAsWeakReferences || entry.hasValue(this));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::ContainsKey(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.WeakDictionary.TValue Infragistics.Collections.WeakDictionary`2::Item(Infragistics.Collections.WeakDictionary.TKey)" />*/
	item: function (key, value) {
		if (arguments.length === 2) {
			this._addHelper(key, value, true);
			return value;
		} else {
			var $self = this;
			var value;
			if (!(function () { var $ret = $self._tryGetValueHelper(key, value, true); value = $ret.p1; return $ret.ret; }())) {
				throw new $.ig.ArgumentException(0);
			}
			return value;
		}
	}
	/*<EndProperty Name="Infragistics.Collections.WeakDictionary.TValue Infragistics.Collections.WeakDictionary`2::Item(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::Remove(Infragistics.Collections.WeakDictionary.TKey)" />*/
	remove: function (key) {
		var index = this._getIndex(key);
		var ii = this.___arr[index];
		var prev = null;
		while (null != ii) {
			if (ii.isSameKey(this, key)) {
				if (null != prev) {
					prev.__next = ii.__next;
				} else {
					this.___arr[index] = ii.__next;
				}
				this.___count--;
				this.___version++;
				this._expandCollapseHelper(false);
				return true;
			}
			prev = ii;
			ii = ii.__next;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::Remove(Infragistics.Collections.WeakDictionary.TKey)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::TryGetValue(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue)" />*/
	tryGetValue: function (key, value) {
		var $self = this;
		return {
			ret: (function () { var $ret = $self._tryGetValueHelper(key, value, false); value = $ret.p1; return $ret.ret; }()),
			p1: value
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::TryGetValue(Infragistics.Collections.WeakDictionary.TKey, Infragistics.Collections.WeakDictionary.TValue)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.WeakDictionary`2::Count()" />*/
	count: function () {
		return this.___count;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.WeakDictionary`2::Count()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair)" />*/
	contains: function (item) {
		var ii = this._findExistingEntry(item.key());
		return null != ii && ii.isSameKey(this, item.key()) && ii.isSameValue(this, item.value()) && (!this.___valuesAsWeakReferences || null != $.ig.util.getBoxIfEnum(this.$tValue, item.value()));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(, System.Int32)" />*/
	copyTo: function (array, arrayIndex) {
		var en = this.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			array[arrayIndex++] = ii;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(, System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly()" />*/
	isReadOnly: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly()" />*/
	,
	remove: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::Remove(System.Collections.Generic.KeyValuePair)" />*/
	_remove1: function (item) {
		var ii = this._findExistingEntry(item.key());
		if (null != ii && ii.isSameValue(this, item.value())) {
			this.remove(item.key());
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary`2::Remove(System.Collections.Generic.KeyValuePair)" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.ICollection Infragistics.Collections.WeakDictionary`2::Keys()" />*/
	keys: function () {
		return new $.ig.WeakDictionary_EntryEnumerable_KeyCollection$2(this.$tKey, this.$tValue, this);
	}
	/*<EndProperty Name="System.Collections.Generic.ICollection Infragistics.Collections.WeakDictionary`2::Keys()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.ICollection Infragistics.Collections.WeakDictionary`2::Values()" />*/
	values: function () {
		return new $.ig.WeakDictionary_EntryEnumerable_ValueCollection$2(this.$tKey, this.$tValue, this);
	}
	/*<EndProperty Name="System.Collections.Generic.ICollection Infragistics.Collections.WeakDictionary`2::Values()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator$2(this.$tKey, this.$tValue, this);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary`2::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()" />*/
	,
	$type: new $.ig.Type('WeakDictionary$2', $.ig.Object.prototype.$type, [$.ig.IDictionary$2.prototype.$type.specialize(0, 1)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_Entry`2" />*/

$.ig.util.defType('WeakDictionary_Entry$2', 'Object', {
	$tKey: null,
	$tValue: null,
	__key: null,
	__value: null,
	__hash: 0,
	__next: null,
	init: function ($tKey, $tValue, hash, key, value) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.__hash = hash;
		this.__key = key;
		this.__value = value;
	},
	/*<BeginMethod Name="Infragistics.Collections.WeakDictionary_Entry.TKey Infragistics.Collections.WeakDictionary_Entry`2::GetKey(Infragistics.Collections.WeakDictionary)" />*/
	getKey: function (wd) {
		var o = this.__key;
		if (wd.___keysAsWeakReferences) {
			o = $.ig.WeakDictionary$2.prototype._getWeakReferenceTargetSafe(this.$tKey, this.$tValue, o);
		}
		return $.ig.util.castObjTo$t(this.$tKey, o);
	}
	/*<EndMethod Name="Infragistics.Collections.WeakDictionary_Entry.TKey Infragistics.Collections.WeakDictionary_Entry`2::GetKey(Infragistics.Collections.WeakDictionary)" />*/
	,
	/*<BeginMethod Name="Infragistics.Collections.WeakDictionary_Entry.TValue Infragistics.Collections.WeakDictionary_Entry`2::GetValue(Infragistics.Collections.WeakDictionary)" />*/
	getValue: function (wd) {
		var o = this.__value;
		if (wd.___valuesAsWeakReferences) {
			o = $.ig.WeakDictionary$2.prototype._getWeakReferenceTargetSafe(this.$tKey, this.$tValue, o);
		}
		return $.ig.util.castObjTo$t(this.$tValue, o);
	}
	/*<EndMethod Name="Infragistics.Collections.WeakDictionary_Entry.TValue Infragistics.Collections.WeakDictionary_Entry`2::GetValue(Infragistics.Collections.WeakDictionary)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_Entry`2::SetValue(Infragistics.Collections.WeakDictionary, Infragistics.Collections.WeakDictionary_Entry.TValue)" />*/
	setValue: function (wd, value) {
		this.__value = wd.___valuesAsWeakReferences ? wd._createValueWeakReference(value) : value;
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_Entry`2::SetValue(Infragistics.Collections.WeakDictionary, Infragistics.Collections.WeakDictionary_Entry.TValue)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::HasKey(Infragistics.Collections.WeakDictionary)" />*/
	hasKey: function (wd) {
		return null != $.ig.util.getBoxIfEnum(this.$tKey, this.getKey(wd));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::HasKey(Infragistics.Collections.WeakDictionary)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::HasValue(Infragistics.Collections.WeakDictionary)" />*/
	hasValue: function (wd) {
		return null != $.ig.util.getBoxIfEnum(this.$tValue, this.getValue(wd));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::HasValue(Infragistics.Collections.WeakDictionary)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::IsSameKey(Infragistics.Collections.WeakDictionary, Infragistics.Collections.WeakDictionary_Entry.TKey)" />*/
	isSameKey: function (wd, key) {
		var thisKey = this.getKey(wd);
		return wd.___keyComparer.equalsC(key, thisKey);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::IsSameKey(Infragistics.Collections.WeakDictionary, Infragistics.Collections.WeakDictionary_Entry.TKey)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::IsSameValue(Infragistics.Collections.WeakDictionary, Infragistics.Collections.WeakDictionary_Entry.TValue)" />*/
	isSameValue: function (wd, value) {
		var thisValue = this.getValue(wd);
		return $.ig.Object.prototype.equalsStatic($.ig.util.getBoxIfEnum(this.$tValue, value), $.ig.util.getBoxIfEnum(this.$tValue, thisValue));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_Entry`2::IsSameValue(Infragistics.Collections.WeakDictionary, Infragistics.Collections.WeakDictionary_Entry.TValue)" />*/
	,
	$type: new $.ig.Type('WeakDictionary_Entry$2', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_Entry`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable$2', 'Object', {
	$tKey: null,
	$tValue: null,
	___wd: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.___wd = wd;
	},
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable`2::GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.WeakDictionary_EntryEnumerable_Enumerator$2(this.$tKey, this.$tValue, this.___wd);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable`2::GetEnumerator()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable$2', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.WeakDictionary_Entry$2.prototype.$type.specialize(0, 1))])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_CollectionBase$2', 'Object', {
	$tKey: null,
	$tValue: null,
	__wd: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.__wd = wd;
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::NotSupported()" />*/
	notSupported: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::NotSupported()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::Count()" />*/
	count: function () {
		return this.__wd.count();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::Count()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::IsSynchronized()" />*/
	isSynchronized: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::IsSynchronized()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::SyncRoot()" />*/
	syncRoot: function () {
		return this.__wd;
	}
	/*<EndProperty Name="System.Object Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2::SyncRoot()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_CollectionBase$2', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_CollectionBase`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_KeyCollection$2', 'WeakDictionary_EntryEnumerable_CollectionBase$2', {
	$tKey: null,
	$tValue: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.WeakDictionary_EntryEnumerable_CollectionBase$2.prototype.init.call(this, this.$tKey, this.$tValue, wd);
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Add(Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection.TKey)" />*/
	add: function (item) {
		this.notSupported();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Add(Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection.TKey)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Clear()" />*/
	clear: function () {
		this.notSupported();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Clear()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Contains(Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection.TKey)" />*/
	contains: function (item) {
		return this.__wd.containsKey(item);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Contains(Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection.TKey)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::CopyTo(, System.Int32)" />*/
	copyTo: function (array, arrayIndex) {
		var en = this.__wd.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			array[arrayIndex++] = ii.key();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::CopyTo(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::CopyTo(System.Array, System.Int32)" />*/
	_copyTo1: function (array, arrayIndex) {
		var en = this.__wd.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			array[arrayIndex++] = $.ig.util.getBoxIfEnum(this.$tKey, ii.key());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::CopyTo(System.Array, System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::IsReadOnly()" />*/
	isReadOnly: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::IsReadOnly()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Remove(Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection.TKey)" />*/
	remove: function (item) {
		this.notSupported();
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::Remove(Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection.TKey)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator$2(this.$tKey, this.$tValue, this.__wd);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2::GetEnumerator()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_KeyCollection$2', $.ig.WeakDictionary_EntryEnumerable_CollectionBase$2.prototype.$type.specialize(0, 1), [$.ig.ICollection$1.prototype.$type.specialize(0)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_KeyCollection_Enumerator$2', 'Object', {
	$tKey: null,
	$tValue: null,
	___wd: null,
	___e: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.___wd = wd;
		this.___e = new $.ig.WeakDictionary_EntryEnumerable_Enumerator$2(this.$tKey, this.$tValue, this.___wd);
	},
	/*<BeginProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator.TKey Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::Current()" />*/
	current: function () {
		return this.___e._currentKey();
	}
	/*<EndProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator.TKey Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::Current()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::Dispose()" />*/
	dispose: function () {
		this.___e.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::MoveNext()" />*/
	moveNext: function () {
		return this.___e.moveNext();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::Reset()" />*/
	reset: function () {
		this.___e.reset();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2::Reset()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_KeyCollection_Enumerator$2', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize(0)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyCollection_Enumerator`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_ValueCollection$2', 'WeakDictionary_EntryEnumerable_CollectionBase$2', {
	$tKey: null,
	$tValue: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.WeakDictionary_EntryEnumerable_CollectionBase$2.prototype.init.call(this, this.$tKey, this.$tValue, wd);
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Add(Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection.TValue)" />*/
	add: function (item) {
		this.notSupported();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Add(Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection.TValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Clear()" />*/
	clear: function () {
		this.notSupported();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Clear()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Contains(Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection.TValue)" />*/
	contains: function (item) {
		return this.__wd._containsValue(item);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Contains(Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection.TValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::CopyTo(, System.Int32)" />*/
	copyTo: function (array, arrayIndex) {
		var en = this.__wd.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			array[arrayIndex++] = ii.value();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::CopyTo(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::CopyTo(System.Array, System.Int32)" />*/
	_copyTo1: function (array, arrayIndex) {
		var en = this.__wd.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			array[arrayIndex++] = $.ig.util.getBoxIfEnum(this.$tValue, ii.value());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::CopyTo(System.Array, System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::IsReadOnly()" />*/
	isReadOnly: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::IsReadOnly()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Remove(Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection.TValue)" />*/
	remove: function (item) {
		this.notSupported();
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::Remove(Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection.TValue)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator$2(this.$tKey, this.$tValue, this.__wd);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2::GetEnumerator()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_ValueCollection$2', $.ig.WeakDictionary_EntryEnumerable_CollectionBase$2.prototype.$type.specialize(0, 1), [$.ig.ICollection$1.prototype.$type.specialize(1)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_ValueCollection_Enumerator$2', 'Object', {
	$tKey: null,
	$tValue: null,
	___wd: null,
	___e: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.___wd = wd;
		this.___e = new $.ig.WeakDictionary_EntryEnumerable_Enumerator$2(this.$tKey, this.$tValue, this.___wd);
	},
	/*<BeginProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator.TValue Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::Current()" />*/
	current: function () {
		return this.___e._currentValue();
	}
	/*<EndProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator.TValue Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::Current()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::Dispose()" />*/
	dispose: function () {
		this.___e.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::MoveNext()" />*/
	moveNext: function () {
		return this.___e.moveNext();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::Reset()" />*/
	reset: function () {
		this.___e.reset();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2::Reset()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_ValueCollection_Enumerator$2', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize(1)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_ValueCollection_Enumerator`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_Enumerator$2', 'Object', {
	$tKey: null,
	$tValue: null,
	___wd: null,
	___arr: null,
	___i: 0,
	___current: null,
	___currentKey: null,
	___currentValue: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.___wd = wd;
		this.___arr = this.___wd.___arr;
		this.reset();
	},
	/*<BeginProperty Name="Infragistics.Collections.WeakDictionary_Entry Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::Current()" />*/
	current: function () {
		return this.___current;
	}
	/*<EndProperty Name="Infragistics.Collections.WeakDictionary_Entry Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::Current()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator.TKey Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::CurrentKey()" />*/
	_currentKey: function () {
		return this.___currentKey;
	}
	/*<EndProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator.TKey Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::CurrentKey()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator.TValue Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::CurrentValue()" />*/
	_currentValue: function () {
		return this.___currentValue;
	}
	/*<EndProperty Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator.TValue Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::CurrentValue()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::MoveNext()" />*/
	moveNext: function () {
		do {
			if (null != this.___current) {
				this.___current = this.___current.__next;
			}
			while (null == this.___current && ++this.___i < this.___arr.length) {
				this.___current = this.___arr[this.___i];
			}
			if (null == this.___current) {
				return false;
			}
			this.___currentKey = this.___current.getKey(this.___wd);
			this.___currentValue = this.___current.getValue(this.___wd);
		} while (null == $.ig.util.getBoxIfEnum(this.$tKey, this.___currentKey) || this.___wd.___valuesAsWeakReferences && null == $.ig.util.getBoxIfEnum(this.$tValue, this.___currentValue));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::Reset()" />*/
	reset: function () {
		this.___i = -1;
		this.___current = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2::Reset()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_Enumerator$2', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize($.ig.WeakDictionary_Entry$2.prototype.$type.specialize(0, 1))])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_Enumerator`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_KeyValuePairEnumerator$2', 'Object', {
	$tKey: null,
	$tValue: null,
	___wd: null,
	___e: null,
	init: function ($tKey, $tValue, wd) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue);
		}
		$.ig.Object.prototype.init.call(this);
		this.___wd = wd;
		this.___e = new $.ig.WeakDictionary_EntryEnumerable_Enumerator$2(this.$tKey, this.$tValue, this.___wd);
	},
	/*<BeginProperty Name="System.Collections.Generic.KeyValuePair Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::Current()" />*/
	current: function () {
		return new $.ig.KeyValuePair$2(this.$tKey, this.$tValue, 1, this.___e._currentKey(), this.___e._currentValue());
	}
	/*<EndProperty Name="System.Collections.Generic.KeyValuePair Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::Current()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::Dispose()" />*/
	dispose: function () {
		this.___e.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::MoveNext()" />*/
	moveNext: function () {
		return this.___e.moveNext();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::Reset()" />*/
	reset: function () {
		this.___e.reset();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2::Reset()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_KeyValuePairEnumerator$2', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize($.ig.KeyValuePair$2.prototype.$type.specialize(0, 1))])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_KeyValuePairEnumerator`2" />*/

/*<BeginType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_EnumerableWrapper`3" />*/

$.ig.util.defType('WeakDictionary_EntryEnumerable_EnumerableWrapper$3', 'Object', {
	$tKey: null,
	$tValue: null,
	$t: null,
	___e: null,
	init: function ($tKey, $tValue, $t, e) {
		this.$tKey = $tKey;
		this.$tValue = $tValue;
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tKey, this.$tValue, this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		this.___e = e;
	},
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable_EnumerableWrapper`3::GetEnumerator()" />*/
	getEnumerator: function () {
		return this.___e.getEnumerator();
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakDictionary_EntryEnumerable_EnumerableWrapper`3::GetEnumerator()" />*/
	,
	$type: new $.ig.Type('WeakDictionary_EntryEnumerable_EnumerableWrapper$3', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize(2)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakDictionary_EntryEnumerable_EnumerableWrapper`3" />*/

/*<BeginType Name="Infragistics.Collections.WeakList`1" />*/

$.ig.util.defType('WeakList$1', 'Object', {
	$t: null,
	init: function ($t) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		this.___list = new $.ig.List$1($.ig.WeakReference.prototype.$type, 0);
		$.ig.Object.prototype.init.call(this);
	},
	___list: null,
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.WeakList`1::Count()" />*/
	count: function () {
		return this.___list.count();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.WeakList`1::Count()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.WeakList.T Infragistics.Collections.WeakList`1::Item(System.Int32)" />*/
	item: function (index, value) {
		if (arguments.length === 2) {
			this.___list.__inner[index] = this._createWeakReference(value);
			return value;
		} else {
			return this._getItemHelper(index);
		}
	}
	/*<EndProperty Name="Infragistics.Collections.WeakList.T Infragistics.Collections.WeakList`1::Item(System.Int32)" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Collections.WeakList`1::SyncRoot()" />*/
	syncRoot: function () {
		return (this.___list).syncRoot();
	}
	/*<EndProperty Name="System.Object Infragistics.Collections.WeakList`1::SyncRoot()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakList`1::Add(Infragistics.Collections.WeakList.T)" />*/
	_add: function (item) {
		this.___list.add(this._createWeakReference(item));
		return this.___list.count() - 1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakList`1::Add(Infragistics.Collections.WeakList.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::AddRange(System.Collections.Generic.IEnumerable)" />*/
	_addRange: function (items) {
		var en = items.getEnumerator();
		while (en.moveNext()) {
			var ii = en.current();
			this._add(ii);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::AddRange(System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::Clear()" />*/
	clear: function () {
		this.___list.clear();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::Clear()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::Compact()" />*/
	_compact: function () {
		for (var i = 0, count = this.___list.count(); i < count; i++) {
			this._getItemHelper(i);
		}
		$.ig.CoreUtilities.prototype.removeAll$11($.ig.WeakReference.prototype.$type, this.___list, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::Compact()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakList`1::Contains(Infragistics.Collections.WeakList.T)" />*/
	contains: function (value) {
		return this.indexOf(value) >= 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakList`1::Contains(Infragistics.Collections.WeakList.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::CopyTo(, System.Int32)" />*/
	copyTo: function (array, index) {
		(this).copyTo(array, index);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::CopyTo(, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakList`1::GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.WeakList_Enumerator$1(this.$t, this);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Collections.WeakList`1::GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakList`1::IndexOf(Infragistics.Collections.WeakList.T)" />*/
	indexOf: function (value) {
		for (var i = 0, count = this.___list.count(); i < count; i++) {
			if (value == this._getItemHelper(i)) {
				return i;
			}
		}
		return -1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakList`1::IndexOf(Infragistics.Collections.WeakList.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::Insert(System.Int32, Infragistics.Collections.WeakList.T)" />*/
	insert: function (index, item) {
		this.___list.insert(index, this._createWeakReference(item));
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::Insert(System.Int32, Infragistics.Collections.WeakList.T)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakList`1::Remove(Infragistics.Collections.WeakList.T)" />*/
	remove: function (item) {
		var index = this.indexOf(item);
		if (index >= 0) {
			this.removeAt(index);
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakList`1::Remove(Infragistics.Collections.WeakList.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::RemoveAt(System.Int32)" />*/
	removeAt: function (index) {
		this.___list.removeAt(index);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::RemoveAt(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::RemoveRange(System.Int32, System.Int32)" />*/
	_removeRange: function (index, count) {
		this.___list.removeRange(index, count);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::RemoveRange(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.WeakReference Infragistics.Collections.WeakList`1::CreateWeakReference(System.Object)" />*/
	_createWeakReference: function (item) {
		return new $.ig.WeakReference(item);
	}
	/*<EndMethod Name="System.WeakReference Infragistics.Collections.WeakList`1::CreateWeakReference(System.Object)" />*/
	,
	/*<BeginMethod Name="Infragistics.Collections.WeakList.T Infragistics.Collections.WeakList`1::GetItemHelper(System.Int32)" />*/
	_getItemHelper: function (index) {
		var ww = this.___list.__inner[index];
		var target = null;
		if (null != ww) {
			target = $.ig.util.castObjTo$t(this.$t, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(ww));
			if (null == target) {
				this.___list.__inner[index] = null;
			}
		}
		return target;
	}
	/*<EndMethod Name="Infragistics.Collections.WeakList.T Infragistics.Collections.WeakList`1::GetItemHelper(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Collections.IEnumerator Infragistics.Collections.WeakList`1::System.Collections.IEnumerable.GetEnumerator()" />*/
	getEnumerator: function () {
		return new $.ig.WeakList_Enumerator$1(this.$t, this);
	}
	/*<EndMethod Name="System.Collections.IEnumerator Infragistics.Collections.WeakList`1::System.Collections.IEnumerable.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::System.Collections.Generic.ICollection<T>.Add(Infragistics.Collections.WeakList.T)" />*/
	add: function (item) {
		this._add(item);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::System.Collections.Generic.ICollection<T>.Add(Infragistics.Collections.WeakList.T)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.Generic.ICollection<T>.IsReadOnly()" />*/
	isReadOnly: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.Generic.ICollection<T>.IsReadOnly()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakList`1::System.Collections.IList.Add(System.Object)" />*/
	add1: function (item) {
		return this._add($.ig.util.castObjTo$t(this.$t, item));
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakList`1::System.Collections.IList.Add(System.Object)" />*/
	,
	contains: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakList`1::Contains(System.Object)" />*/
	_contains1: function (item) {
		return $.ig.util.cast(this.$t, item) !== null && this.contains($.ig.util.castObjTo$t(this.$t, item));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakList`1::Contains(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::System.Collections.ICollection.CopyTo(System.Array, System.Int32)" />*/
	copyTo_1: function (array, index) {
		for (var i = 0, count = this.___list.count(); i < count; i++) {
			array[index++] = this._getItemHelper(i);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::System.Collections.ICollection.CopyTo(System.Array, System.Int32)" />*/
	,
	indexOf: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Collections.WeakList`1::IndexOf(System.Object)" />*/
	_indexOf1: function (item) {
		return $.ig.util.cast(this.$t, item) !== null ? this.indexOf($.ig.util.castObjTo$t(this.$t, item)) : -1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Collections.WeakList`1::IndexOf(System.Object)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.IList.IsFixedSize()" />*/
	isFixedSize: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.IList.IsFixedSize()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.IList.IsReadOnly()" />*/
	isReadOnly1: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.IList.IsReadOnly()" />*/
	,
	remove: function () {
		var n;

		switch (n) {
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList`1::Remove(System.Object)" />*/
	_remove1: function (item) {
		if ($.ig.util.cast(this.$t, item) !== null) {
			this.remove($.ig.util.castObjTo$t(this.$t, item));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList`1::Remove(System.Object)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.ICollection.IsSynchronized()" />*/
	isSynchronized: function () {
		return (this.___list).isSynchronized();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.WeakList`1::System.Collections.ICollection.IsSynchronized()" />*/
	,
	$type: new $.ig.Type('WeakList$1', $.ig.Object.prototype.$type, [$.ig.IList$1.prototype.$type.specialize(0), $.ig.IList.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Collections.WeakList`1" />*/

/*<BeginType Name="Infragistics.Collections.WeakList_Enumerator`1" />*/

$.ig.util.defType('WeakList_Enumerator$1', 'Object', {
	$t: null,
	___list: null,
	___current: null,
	___index: 0,
	init: function ($t, list) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		this.___list = list;
		this.reset();
	},
	/*<BeginProperty Name="Infragistics.Collections.WeakList_Enumerator.T Infragistics.Collections.WeakList_Enumerator`1::Current()" />*/
	current: function () {
		return this.___current;
	}
	/*<EndProperty Name="Infragistics.Collections.WeakList_Enumerator.T Infragistics.Collections.WeakList_Enumerator`1::Current()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.WeakList_Enumerator`1::MoveNext()" />*/
	moveNext: function () {
		this.___current = null;
		while (++this.___index < this.___list.count()) {
			this.___current = this.___list.item(this.___index);
			if (null != this.___current) {
				break;
			}
		}
		return null != this.___current;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.WeakList_Enumerator`1::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList_Enumerator`1::Reset()" />*/
	reset: function () {
		this.___index = -1;
		this.___current = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList_Enumerator`1::Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.WeakList_Enumerator`1::System.IDisposable.Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.WeakList_Enumerator`1::System.IDisposable.Dispose()" />*/
	,
	$type: new $.ig.Type('WeakList_Enumerator$1', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize(0)])
}, true);

/*<EndType Name="Infragistics.Collections.WeakList_Enumerator`1" />*/

/*<BeginType Name="Infragistics.Collections.IDeferUpdate" />*/

$.ig.util.defType('IDeferUpdate', 'Object', {
	$type: new $.ig.Type('IDeferUpdate', null)
}, true);

/*<EndType Name="Infragistics.Collections.IDeferUpdate" />*/

/*<BeginType Name="Infragistics.Collections.ObservableCollectionExtended`1" />*/

$.ig.util.defType('ObservableCollectionExtended$1', 'List$1', {
	$t: null,
	___suspendCount: 0,
	___hasChanged: false,
	___hookSubObjects: false,
	___propChangeHandler: null,
	___propChangeListeners: null,
	___hookSubObjectsListeners: false,
	init: function ($t, initNumber) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ObservableCollectionExtended$1.prototype.init2.call(this, this.$t, 2, true, false);
	},
	init1: function ($t, initNumber, list) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		this.___suspendCount = 0;
		this.___hasChanged = false;
		this.___hookSubObjects = false;
		this.___hookSubObjectsListeners = false;
		$.ig.List$1.prototype.init1.call(this, this.$t, 1, list);
		this._initialize(true, false);
	},
	init2: function ($t, initNumber, hookItemPropertyChanged, hookItemListeners) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		this.___suspendCount = 0;
		this.___hasChanged = false;
		this.___hookSubObjects = false;
		this.___hookSubObjectsListeners = false;
		$.ig.List$1.prototype.init.call(this, this.$t, 0);
		this._initialize(hookItemPropertyChanged, hookItemListeners);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.ObservableCollectionExtended`1::IsUpdating()" />*/
	_isUpdating: function () {
		return this.___suspendCount != 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.ObservableCollectionExtended`1::IsUpdating()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.ObservableCollectionExtended`1::NotifyItemsChanged()" />*/
	_notifyItemsChanged: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.ObservableCollectionExtended`1::NotifyItemsChanged()" />*/
	,
	/*<BeginProperty Name="Infragistics.PropertyChangeListenerList Infragistics.Collections.ObservableCollectionExtended`1::PropChangeListeners()" />*/
	_propChangeListeners: function () {
		if (null == this.___propChangeListeners) {
			this.___propChangeListeners = new $.ig.PropertyChangeListenerList();
		}
		return this.___propChangeListeners;
	}
	/*<EndProperty Name="Infragistics.PropertyChangeListenerList Infragistics.Collections.ObservableCollectionExtended`1::PropChangeListeners()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Collections.ObservableCollectionExtended`1::ItemsToEnumerate()" />*/
	_itemsToEnumerate: function () {
		return this;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Collections.ObservableCollectionExtended`1::ItemsToEnumerate()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::AddRange(System.Collections.Generic.IEnumerable)" />*/
	addRange: function (collection) {
		this.insertRange(this.count(), collection);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::AddRange(System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::BeginUpdate()" />*/
	beginUpdate: function () {
		var count = ++this.___suspendCount;
		if (count == 1) {
			this._onBeginUpdate();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::BeginUpdate()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::EndUpdate()" />*/
	endUpdate: function () {
		var newCount = --this.___suspendCount;
		$.ig.Debug.prototype.assert1(newCount >= 0, "EndUpdate has been called more times than 'BeginUpdate'!");
		if (newCount == 0) {
			if (this.___hasChanged) {
				this.___hasChanged = false;
				this._onPropertyChanged1("Count");
				this._onPropertyChanged1("Item[]");
				this._onResetCollection();
			}
			this._onEndUpdate();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::EndUpdate()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::InsertRange(System.Int32, System.Collections.Generic.IEnumerable)" />*/
	insertRange: function (index, collection) {
		if (collection == null) {
			throw new $.ig.ArgumentNullException(0, "collection");
		}
		var notifyChanges = this._notifyItemsChanged();
		if (notifyChanges) {
			var en = collection.getEnumerator();
			while (en.moveNext()) {
				var item = en.current();
				this._onItemAdding(item);
			}
		}
		var en1 = collection.getEnumerator();
		while (en1.moveNext()) {
			var item1 = en1.current();
			this._hookSubObject(item1);
			this.insertItem(index++, item1);
			if (notifyChanges) {
				this._onItemAdded(item1);
			}
		}
		if (false == this._isUpdating()) {
			this._onPropertyChanged1("Count");
			this._onPropertyChanged1("Item[]");
			this._onResetCollection();
		} else {
			this.___hasChanged = true;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::InsertRange(System.Int32, System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::ReInitialize(System.Collections.Generic.IEnumerable)" />*/
	_reInitialize: function (collection) {
		if (null == collection) {
			throw new $.ig.ArgumentNullException(0, "collection");
		}
		this.beginUpdate();
		this.clear();
		this.addRange(collection);
		this.endUpdate();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::ReInitialize(System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::RemoveRange(System.Int32, System.Int32)" />*/
	removeRange: function (index, count) {
		if (index < 0) {
			throw new $.ig.ArgumentOutOfRangeException(1, "index");
		}
		if (count < 0) {
			throw new $.ig.ArgumentOutOfRangeException(1, "count");
		}
		var notifyChanges = this._notifyItemsChanged();
		for (var i = index + count - 1; i >= index; i--) {
			var item = this.__inner[i];
			if (notifyChanges) {
				this._onItemRemoving(item);
			}
			this._unhookSubObject(item);
			this.removeItem(i);
			if (notifyChanges) {
				this._onItemRemoved(item);
			}
		}
		if (this._isUpdating() == false) {
			this._onPropertyChanged1("Count");
			this._onPropertyChanged1("Item[]");
			this._onResetCollection();
		} else {
			this.___hasChanged = true;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::RemoveRange(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnBeginUpdate()" />*/
	_onBeginUpdate: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnBeginUpdate()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnEndUpdate()" />*/
	_onEndUpdate: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnEndUpdate()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemAdded(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	_onItemAdded: function (itemAdded) {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemAdded(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemAdding(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	_onItemAdding: function (itemAdded) {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemAdding(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemRemoved(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	_onItemRemoved: function (itemRemoved) {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemRemoved(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemRemoving(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	_onItemRemoving: function (item) {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemRemoving(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::CheckReentrancy()" />*/
	_checkReentrancy: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::CheckReentrancy()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::HookSubObject(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	_hookSubObject: function (item) {
		if (this.___hookSubObjectsListeners) {
			var notifier = $.ig.util.cast($.ig.ISupportPropertyChangeNotifications.prototype.$type, item);
			if (null != notifier) {
				notifier.addListener(this._propChangeListeners(), false);
			}
		}
		if (this.___hookSubObjects) {
			var propChange = $.ig.util.cast($.ig.INotifyPropertyChanged.prototype.$type, item);
			if (propChange != null) {
				propChange.propertyChanged = $.ig.Delegate.prototype.combine(propChange.propertyChanged, this.___propChangeHandler);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::HookSubObject(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::Initialize(System.Boolean, System.Boolean)" />*/
	_initialize: function (hookItemPropertyChanged, hookItemListeners) {
		this.___hookSubObjects = hookItemPropertyChanged && $.ig.INotifyPropertyChanged.prototype.$type.isAssignableFrom(this.$t);
		this.___hookSubObjectsListeners = hookItemListeners && $.ig.ISupportPropertyChangeNotifications.prototype.$type.isAssignableFrom(this.$t);
		if (this.___hookSubObjects || this.___hookSubObjectsListeners) {
			if (this.___hookSubObjects) {
				this.___propChangeHandler = this._onSubObjectChanged.runOn(this);
			}
			var en = this._itemsToEnumerate().getEnumerator();
			while (en.moveNext()) {
				var item = en.current();
				this._hookSubObject(item);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::Initialize(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnPropertyChanged(System.String)" />*/
	_onPropertyChanged1: function (propertyName) {
		this._onPropertyChanged(new $.ig.PropertyChangedEventArgs(propertyName));
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnPropertyChanged(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnResetCollection()" />*/
	_onResetCollection: function () {
		this._onCollectionChanged(this.$type.getStaticFields($.ig.ObservableCollectionExtended$1.prototype.$type).__resetArgs);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnResetCollection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnSubObjectChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	_onSubObjectChanged: function (sender, e) {
		this._onItemPropertyChanged(new $.ig.ItemPropertyChangedEventArgs(sender, e.propertyName()));
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnSubObjectChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::UnhookSubObject(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	_unhookSubObject: function (item) {
		if (this.___hookSubObjectsListeners) {
			var notifier = $.ig.util.cast($.ig.ISupportPropertyChangeNotifications.prototype.$type, item);
			if (null != notifier) {
				notifier.removeListener(this._propChangeListeners());
			}
		}
		if (this.___hookSubObjects) {
			var propChange = $.ig.util.cast($.ig.INotifyPropertyChanged.prototype.$type, item);
			if (propChange != null) {
				propChange.propertyChanged = $.ig.Delegate.prototype.remove(propChange.propertyChanged, this.___propChangeHandler);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::UnhookSubObject(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemPropertyChanged(Infragistics.Collections.ItemPropertyChangedEventArgs)" />*/
	_onItemPropertyChanged: function (e) {
		if (this._itemPropertyChanged != null) {
			this._itemPropertyChanged(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnItemPropertyChanged(Infragistics.Collections.ItemPropertyChangedEventArgs)" />*/
	,
	_itemPropertyChanged: null,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::AddItem(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	addItem: function (newItem) {
		this.insertItem(this.count(), newItem);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::AddItem(Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::ClearItems()" />*/
	clearItems: function () {
		var notifyChanges = this._notifyItemsChanged();
		var innerItems = this._itemsToEnumerate();
		var items = notifyChanges ? new Array(innerItems.count()) : null;
		if (null != items) {
			innerItems.copyTo(items, 0);
		}
		if (notifyChanges) {
			for (var i = 0; i < items.length; i++) {
				this._onItemRemoving(items[i]);
			}
		}
		if (this.___hookSubObjects || this.___hookSubObjectsListeners) {
			var itemsList = innerItems;
			for (var i1 = 0, count = itemsList.count(); i1 < count; i1++) {
				this._unhookSubObject(itemsList.item(i1));
			}
		}
		$.ig.List$1.prototype.clearItems.call(this);
		if (items != null) {
			for (var i2 = 0; i2 < items.length; i2++) {
				this._onItemRemoved(items[i2]);
			}
		}
		if (this._isUpdating()) {
			this.___hasChanged = true;
		} else {
			this._onPropertyChanged1("Count");
			this._onPropertyChanged1("Item[]");
			this._onResetCollection();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::ClearItems()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::InsertItem(System.Int32, Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	insertItem: function (index, item) {
		var notifyChanges = this._notifyItemsChanged();
		if (notifyChanges) {
			this._onItemAdding(item);
		}
		$.ig.List$1.prototype.insertItem.call(this, index, item);
		this._hookSubObject(item);
		if (notifyChanges) {
			this._onItemAdded(item);
		}
		if (this._isUpdating()) {
			this.___hasChanged = true;
		} else {
			this._onPropertyChanged1("Count");
			this._onPropertyChanged1("Item[]");
			this._onCollectionChanged(new $.ig.NotifyCollectionChangedEventArgs(1, $.ig.NotifyCollectionChangedAction.prototype.add, $.ig.util.getBoxIfEnum(this.$t, item), index));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::InsertItem(System.Int32, Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	_onCollectionChanged: function (e) {
		$.ig.Debug.prototype.assert1(this._isUpdating() == false, "We shouldn't be raising a collection change notification while we are updating!");
		var handler = this.collectionChanged;
		if (handler != null) {
			handler(this, e);
		}
		if (null != this.___propChangeListeners) {
			this.___propChangeListeners.onCollectionChanged(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />*/
	_onPropertyChanged: function (e) {
		$.ig.Debug.prototype.assert1(this._isUpdating() == false, "We shouldn't be raising a property change notification while we are updating!");
		var handler = this.propertyChanged;
		if (handler != null) {
			handler(this, e);
		}
		if (null != this.___propChangeListeners) {
			this.___propChangeListeners.onPropertyValueChanged(this, e.propertyName(), null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::RemoveItem(System.Int32)" />*/
	removeItem: function (index) {
		var item = this.__inner[index];
		var notifyChanges = this._notifyItemsChanged();
		if (notifyChanges) {
			this._onItemRemoving(item);
		}
		this._unhookSubObject(item);
		$.ig.List$1.prototype.removeItem.call(this, index);
		if (notifyChanges) {
			this._onItemRemoved(item);
		}
		if (this._isUpdating()) {
			this.___hasChanged = true;
		} else {
			this._onPropertyChanged1("Count");
			this._onPropertyChanged1("Item[]");
			this._onCollectionChanged(new $.ig.NotifyCollectionChangedEventArgs(1, $.ig.NotifyCollectionChangedAction.prototype.remove, $.ig.util.getBoxIfEnum(this.$t, item), index));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::RemoveItem(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::SetItem(System.Int32, Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	setItem: function (index, item) {
		var notifyChanges = this._notifyItemsChanged();
		if (notifyChanges) {
			this._onItemRemoving(this.__inner[index]);
			this._onItemAdding(item);
		}
		var oldItem = this.__inner[index];
		this._unhookSubObject(oldItem);
		this._hookSubObject(item);
		$.ig.List$1.prototype.setItem.call(this, index, item);
		if (notifyChanges) {
			this._onItemRemoved(oldItem);
			this._onItemAdded(item);
		}
		if (this._isUpdating()) {
			this.___hasChanged = true;
		} else {
			this._onPropertyChanged1("Item[]");
			this._onCollectionChanged(new $.ig.NotifyCollectionChangedEventArgs(2, $.ig.NotifyCollectionChangedAction.prototype.replace, $.ig.util.getBoxIfEnum(this.$t, item), $.ig.util.getBoxIfEnum(this.$t, oldItem), index));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::SetItem(System.Int32, Infragistics.Collections.ObservableCollectionExtended.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.AddListener(Infragistics.ITypedPropertyChangeListener, System.Boolean)" />*/
	addListener: function (listener, useWeakReference) {
		this._propChangeListeners().add(listener, useWeakReference);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.AddListener(Infragistics.ITypedPropertyChangeListener, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.RemoveListener(Infragistics.ITypedPropertyChangeListener)" />*/
	removeListener: function (listener) {
		this._propChangeListeners().remove(listener);
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.ObservableCollectionExtended`1::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.RemoveListener(Infragistics.ITypedPropertyChangeListener)" />*/
	,
	propertyChanged: null,
	collectionChanged: null,
	$type: new $.ig.Type('ObservableCollectionExtended$1', $.ig.List$1.prototype.$type.specialize(0), [$.ig.ISupportPropertyChangeNotifications.prototype.$type, $.ig.IDeferUpdate.prototype.$type, $.ig.INotifyPropertyChanged.prototype.$type, $.ig.INotifyCollectionChanged.prototype.$type], function () {
		this.__resetArgs = new $.ig.NotifyCollectionChangedEventArgs(0, $.ig.NotifyCollectionChangedAction.prototype.reset);
	})
}, true);

/*<EndType Name="Infragistics.Collections.ObservableCollectionExtended`1" />*/

/*<BeginType Name="Infragistics.Collections.ItemPropertyChangedEventArgs" />*/

$.ig.util.defType('ItemPropertyChangedEventArgs', 'PropertyChangedEventArgs', {
	___item: null,
	init: function (item, propertyName) {
		$.ig.PropertyChangedEventArgs.prototype.init.call(this, propertyName);
		this.___item = item;
	},
	/*<BeginProperty Name="System.Object Infragistics.Collections.ItemPropertyChangedEventArgs::Item()" />*/
	_item: function () {
		return this.___item;
	}
	/*<EndProperty Name="System.Object Infragistics.Collections.ItemPropertyChangedEventArgs::Item()" />*/
	,
	$type: new $.ig.Type('ItemPropertyChangedEventArgs', $.ig.PropertyChangedEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Collections.ItemPropertyChangedEventArgs" />*/

/*<BeginType Name="Infragistics.Collections.AdapterRangeSet`2" />*/

$.ig.util.defType('AdapterRangeSet$2', 'LazyReadOnlyNotifyCollection$1', {
	$tSource: null,
	$tRangeItem: null,
	___source: null,
	___getRange: null,
	___filter: null,
	init: function ($tSource, $tRangeItem, source, getRange, filter) {
		this.$tSource = $tSource;
		this.$tRangeItem = $tRangeItem;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tSource, this.$tRangeItem);
		}
		$.ig.LazyReadOnlyNotifyCollection$1.prototype.init.call(this, $.ig.Range$1.prototype.$type.specialize(this.$tRangeItem));
		$.ig.CoreUtilities.prototype.validateNotNull1(source, "source");
		$.ig.CoreUtilities.prototype.validateNotNull1(getRange, "getRange");
		var icc = $.ig.util.cast($.ig.INotifyCollectionChanged.prototype.$type, source);
		if (icc != null) {
			icc.collectionChanged = $.ig.Delegate.prototype.combine(icc.collectionChanged, this._onCollectionChanged1.runOn(this));
		}
		this.___source = source;
		this.___getRange = getRange;
		this.___filter = filter;
	},
	/*<BeginMethod Name="System.Void Infragistics.Collections.AdapterRangeSet`2::VerifyList(System.Collections.Generic.IList)" />*/
	_verifyList1: function (list) {
		list.clear();
		var count = this.___source.count();
		if (count == 1) {
			var src = this.___source.item(0);
			if (this.___filter == null || this.___filter(src)) {
				list.add(this.___getRange(src));
			}
		} else if (count > 1) {
			var buffer = new $.ig.List$1($.ig.Range$1.prototype.$type.specialize(this.$tRangeItem), 2, count);
			for (var i = 0; i < count; i++) {
				var src1 = this.___source.item(i);
				if (this.___filter == null || this.___filter(src1)) {
					buffer.add(this.___getRange(src1));
				}
			}
			count = buffer.count();
			if (count > 0) {
				var comparison = function (r1, r2) {
					var result = r1.__start.compareTo(r2.__start);
					if (result == 0) {
						result = r1.__end.compareTo(r2.__end);
					}
					return result;
				};
				buffer.sort1($.ig.Range$1.prototype.$type.specialize(this.$tRangeItem).getStaticFields()._startThenEarlyEndComparer);
				var start = buffer.__inner[0].__start;
				var end = buffer.__inner[0].__end;
				for (var i1 = 1; i1 < count; i1++) {
					if (buffer.__inner[i1].__start.compareTo(end) > 0) {
						list.add(new $.ig.Range$1(this.$tRangeItem, 1, start, end));
						start = buffer.__inner[i1].__start;
						end = buffer.__inner[i1].__end;
					} else if (end.compareTo(buffer.__inner[i1].__end) < 0) {
						end = buffer.__inner[i1].__end;
					}
				}
				list.add(new $.ig.Range$1(this.$tRangeItem, 1, start, end));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.AdapterRangeSet`2::VerifyList(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.AdapterRangeSet`2::Dirty()" />*/
	_dirty: function () {
		this._dirtyCollection();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.AdapterRangeSet`2::Dirty()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.AdapterRangeSet`2::OnCollectionChanged(System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	_onCollectionChanged1: function (sender, e) {
		this._dirtyCollection();
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.AdapterRangeSet`2::OnCollectionChanged(System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	,
	$type: new $.ig.Type('AdapterRangeSet$2', $.ig.LazyReadOnlyNotifyCollection$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize(1)))
}, true);

/*<EndType Name="Infragistics.Collections.AdapterRangeSet`2" />*/

/*<BeginType Name="Infragistics.Collections.MDList`1" />*/

$.ig.util.defType('MDList$1', 'Object', {
	$t: null,
	__columnCount: 0,
	__rowCount: 0,
	__items: null,
	__maxColumnCount: 0,
	init: function ($t, rows, columns) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		this.initialize(rows, columns);
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.MDList`1::ColumnCount()" />*/
	columnCount: function () {
		return this.__columnCount;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.MDList`1::ColumnCount()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.MDList`1::HasData()" />*/
	hasData: function () {
		if (this.__items != null) {
			for (var i = 0; i < this.__rowCount; i++) {
				var row = this.__items[i];
				if (row != null) {
					for (var j = 0; j < this.__columnCount; j++) {
						if (row[j] != null) {
							return true;
						}
					}
				}
			}
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.MDList`1::HasData()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.MDList`1::RowCount()" />*/
	rowCount: function () {
		return this.__rowCount;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.MDList`1::RowCount()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.MDList.T Infragistics.Collections.MDList`1::Item(System.Int32, System.Int32)" />*/
	item: function (row, column, value) {
		if (arguments.length === 3) {
			if (row < 0 || row >= this.__rowCount || column < 0 || column >= this.__columnCount) {
				throw new $.ig.ArgumentOutOfRangeException(0);
			}
			if (this.__items == null) {
				if (value == null) {
					return;
				}
				this.__items = new Array(this.__rowCount);
			}
			var rowValues = this.__items[row];
			if (rowValues == null) {
				if (value == null) {
					return;
				}
				this.__items[row] = rowValues = new Array(this.__maxColumnCount);
			}
			rowValues[column] = value;
			return value;
		} else {
			if (row < 0 || row >= this.__rowCount || column < 0 || column >= this.__columnCount) {
				throw new $.ig.ArgumentOutOfRangeException(0);
			}
			if (this.__items == null) {
				return null;
			}
			var rowValues = this.__items[row];
			if (rowValues == null) {
				return null;
			}
			return rowValues[column];
		}
	}
	/*<EndProperty Name="Infragistics.Collections.MDList.T Infragistics.Collections.MDList`1::Item(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.MDList`1::HasRow(System.Int32)" />*/
	hasRow: function (row) {
		if (row < 0 || row >= this.__rowCount) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		return this.__items != null && this.__items[row] != null;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.MDList`1::HasRow(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.MDList`1::Initialize(System.Int32, System.Int32)" />*/
	initialize: function (rows, columns) {
		if (rows < 0 || columns < 0) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		if (this.__items != null) {
			if (rows > this.__items.length) {
				this.__items = null;
			} else if (columns <= this.__maxColumnCount) {
				for (var r = 0; r < this.__rowCount; r++) {
					var item = this.__items[r];
					if (item != null) {
						for (var c = 0; c < this.__columnCount; c++) {
							item[c] = null;
						}
					}
				}
			} else {
				$.ig.util.arrayClear1(this.__items, 0, this.__rowCount);
			}
		}
		if (columns > this.__maxColumnCount) {
			this.__maxColumnCount = columns;
		}
		this.__rowCount = rows;
		this.__columnCount = columns;
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.MDList`1::Initialize(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('MDList$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Collections.MDList`1" />*/

/*<BeginType Name="Infragistics.Collections.MDBitArray" />*/

$.ig.util.defType('MDBitArray', 'Object', {
	__columnCount: 0,
	__rowCount: 0,
	__items: null,
	init: function (rows, columns) {
		$.ig.Object.prototype.init.call(this);
		this.initialize(rows, columns);
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.MDBitArray::ColumnCount()" />*/
	columnCount: function () {
		return this.__columnCount;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.MDBitArray::ColumnCount()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.MDBitArray::HasData()" />*/
	hasData: function () {
		if (this.__items != null) {
			for (var i = 0; i < this.__items.length; i++) {
				var row = this.__items[i];
				if (row != null) {
					for (var j = 0; j < this.__columnCount; j++) {
						if (row.item(j)) {
							return true;
						}
					}
				}
			}
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.MDBitArray::HasData()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Collections.MDBitArray::RowCount()" />*/
	rowCount: function () {
		return this.__rowCount;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Collections.MDBitArray::RowCount()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Collections.MDBitArray::Item(System.Int32, System.Int32)" />*/
	item: function (row, column, value) {
		if (arguments.length === 3) {
			if (row < 0 || row >= this.__rowCount || column < 0 || column >= this.__columnCount) {
				throw new $.ig.ArgumentOutOfRangeException(0);
			}
			if (this.__items == null) {
				if (value == false) {
					return;
				}
				this.__items = new Array(this.__rowCount);
			}
			var rowValues = this.__items[row];
			if (rowValues == null) {
				if (value == false) {
					return;
				}
				this.__items[row] = rowValues = new $.ig.BitArray(2, this.__columnCount);
			}
			rowValues.item(column, value);
			return value;
		} else {
			if (row < 0 || row >= this.__rowCount || column < 0 || column >= this.__columnCount) {
				throw new $.ig.ArgumentOutOfRangeException(0);
			}
			if (this.__items == null) {
				return false;
			}
			var rowValues = this.__items[row];
			if (rowValues == null) {
				return false;
			}
			return rowValues.item(column);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Collections.MDBitArray::Item(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Collections.MDBitArray::HasRow(System.Int32)" />*/
	hasRow: function (row) {
		if (row < 0 || row >= this.__rowCount) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		return this.__items != null && this.__items[row] != null;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Collections.MDBitArray::HasRow(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Collections.MDBitArray::Initialize(System.Int32, System.Int32)" />*/
	initialize: function (rows, columns) {
		if (rows < 0 || columns < 0) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		if (this.__items != null) {
			if (rows > this.__items.length) {
				this.__items = null;
			} else {
				for (var i = 0; i < this.__items.length; i++) {
					var bitArray = this.__items[i];
					if (bitArray != null) {
						bitArray.length(columns);
						bitArray.setAll(false);
					}
				}
			}
		}
		this.__rowCount = rows;
		this.__columnCount = columns;
	}
	/*<EndMethod Name="System.Void Infragistics.Collections.MDBitArray::Initialize(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('MDBitArray', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Collections.MDBitArray" />*/

/*<BeginType Name="Infragistics.Controls.ClipboardHelper" />*/

$.ig.util.defType('ClipboardHelper', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Windows.IDataObject Infragistics.Controls.ClipboardHelper::CreateDataObject()" />*/
	createDataObject: function () {
		return new $.ig.DataObject();
	}
	/*<EndMethod Name="System.Windows.IDataObject Infragistics.Controls.ClipboardHelper::CreateDataObject()" />*/
	,
	/*<BeginMethod Name="System.Windows.IDataObject Infragistics.Controls.ClipboardHelper::GetDataObject()" />*/
	getDataObject: function () {
		return $.ig.Clipboard.prototype.getDataObject();
	}
	/*<EndMethod Name="System.Windows.IDataObject Infragistics.Controls.ClipboardHelper::GetDataObject()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.ClipboardHelper::SetDataObject(System.Windows.IDataObject, System.Boolean)" />*/
	setDataObject: function (data, copy) {
		$.ig.Clipboard.prototype.setDataObject(data, copy);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.ClipboardHelper::SetDataObject(System.Windows.IDataObject, System.Boolean)" />*/
	,
	$type: new $.ig.Type('ClipboardHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.ClipboardHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider" />*/

$.ig.util.defType('ISpreadsheetResourceProvider', 'Object', {
	$type: new $.ig.Type('ISpreadsheetResourceProvider', null, [$.ig.ISupportPropertyChangeNotifications.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager" />*/

$.ig.util.defType('SpreadsheetCellEditManager', 'Object', {
	__spreadsheet: null,
	__editModeFont: null,
	__cell: null,
	__cellRange: null,
	__cellRangeForPositioning: null,
	__cellFill: null,
	__sheetManager: null,
	__pane: null,
	__editInfo: null,
	__preferredEditorWidth: 0,
	init: function (spreadsheet) {
		this.__cell = new $.ig.spreadsheet.SpreadsheetCell();
		this.__cellRange = new $.ig.spreadsheet.SpreadsheetCellRange();
		this.__cellRangeForPositioning = new $.ig.spreadsheet.SpreadsheetCellRange();
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(spreadsheet);
		this.__spreadsheet = spreadsheet;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanRedo()" />*/
	canRedo: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanRedo()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanUndo()" />*/
	canUndo: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanUndo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCell()" />*/
	editCell: function () {
		return this.__cell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCell()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCellFill()" />*/
	editCellFill: function () {
		return this.__cellFill;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCellFill()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditInfo Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditInfo()" />*/
	editInfo: function () {
		return this.__editInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditInfo Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCellRange()" />*/
	editCellRange: function () {
		return this.__cellRange;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCellRange()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCellRangeForPositioning()" />*/
	editCellRangeForPositioning: function () {
		return this.__cellRangeForPositioning;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditCellRangeForPositioning()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditModeFont()" />*/
	editModeFont: function () {
		return this.__editModeFont;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EditModeFont()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::IsCapableOfEditMode()" />*/
	isCapableOfEditMode: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::IsCapableOfEditMode()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::PaneForEditor()" />*/
	paneForEditor: function () {
		return this.__pane;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::PaneForEditor()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::SheetManager()" />*/
	sheetManager: function () {
		return this.__sheetManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::SheetManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::Spreadsheet()" />*/
	spreadsheet: function () {
		return this.__spreadsheet;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::Spreadsheet()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CalculatePreferredEditorWidth()" />*/
	calculatePreferredEditorWidth: function () {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CalculatePreferredEditorWidth()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	canEnterEditMode: function (pane) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CreateEditFont()" />*/
	createEditFont: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CreateEditFont()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnEnteredEditMode(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	onEnteredEditMode: function (initialText, disableArrowKeyNavigation, skipShiftFocus, preserveStateForIme) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnEnteredEditMode(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetActiveCellTextForFormulaBar()" />*/
	getActiveCellTextForFormulaBar: function () {
		var activeCellText = String.empty();
		var sheet = this.spreadsheet()._sheetManager();
		if (sheet != null) {
			var activeCellValue = null;
			var cell = this.spreadsheet()._activeCellAsRange()._upperLeft();
			activeCellValue = sheet._getCellValue(cell);
			if (activeCellValue != null) {
				var ws = sheet._worksheet();
				var row = ws.rows().item(cell.row());
				var format = ws._getCellFormatElementReadOnly(row, cell.column());
				activeCellText = (function ($t) { return $t != null ? $t : String.empty(); }($.ig.SpreadsheetUtilities.prototype.getEditText(activeCellValue, ws, format)));
			}
		}
		return activeCellText;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetActiveCellTextForFormulaBar()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetCurrentValueOverride()" />*/
	getCurrentValueOverride: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetCurrentValueOverride()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::InitializeCellEditMode(System.Boolean)" />*/
	initializeCellEditMode: function (disableArrowKeyNavigation) {
		if (this.__spreadsheet.isInEditMode()) {
			this.__spreadsheet.cellEditMode(disableArrowKeyNavigation ? $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateBetweenCells : $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateInCell);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::InitializeCellEditMode(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnBringEditCellIntoView()" />*/
	onBringEditCellIntoView: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnBringEditCellIntoView()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnExitedEditMode()" />*/
	onExitedEditMode: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnExitedEditMode()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::SetEditModeFontOverride(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.EditModeWorkbookFont)" />*/
	setEditModeFontOverride: function (editCell, fontOverride) {
		this.__spreadsheet.activeSelectionCellRangeFormat()._setFontOverride(fontOverride);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::SetEditModeFontOverride(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.EditModeWorkbookFont)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::UpdateEditModeFont()" />*/
	updateEditModeFont: function () {
		if (this.__editModeFont != null && !this.__spreadsheet._isInitializingCellEditor()) {
			this.__editModeFont._dirty(false);
			this.__spreadsheet._needsFormatChangeNotification(true);
			this.__spreadsheet._dirtyCanUndoRedoState();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::UpdateEditModeFont()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::BeginEdit(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean, System.String, System.Boolean, System.Boolean)" />*/
	beginEdit: function (cell, disableArrowKeyNavigation, initialText, skipShiftFocus, preserveStateForIme) {
		if (!this.endEdit($.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell, true, false, true)) {
			return false;
		}
		this.__spreadsheet._viewResolved().verifyLayout();
		if (this.__spreadsheet.isInEditMode()) {
			return false;
		}
		if (this.__spreadsheet._tabInEdit() != null && !this.__spreadsheet._endTabRenaming(false, false, false)) {
			return false;
		}
		if (!this.isCapableOfEditMode()) {
			return false;
		}
		var sheetManager = this.__spreadsheet._sheetManager();
		if (sheetManager == null) {
			return false;
		}
		var cellRange = sheetManager.getCellRange(cell);
		var visibleCell = sheetManager._getFirstVisibleCell(cellRange);
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(visibleCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
			return false;
		}
		var pane = sheetManager._getPaneForCell(visibleCell.value());
		if (pane == null) {
			return false;
		}
		if (!this.canEnterEditMode(pane)) {
			return false;
		}
		this.__spreadsheet.selectionMode($.ig.SpreadsheetCellSelectionMode.prototype.normal);
		this.__spreadsheet.isInEndMode(false);
		sheetManager._ensureIsInView(pane, visibleCell.value(), true);
		this.onBringEditCellIntoView();
		if (this.spreadsheet().isInEditMode()) {
			return false;
		}
		if (sheetManager._worksheet().isProtected() && sheetManager._worksheet().protection().selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.noCells) {
			return false;
		}
		var cellResolved = cellRange._upperLeft();
		var beforeArgs = new $.ig.SpreadsheetEditModeEnteringEventArgs(cellResolved);
		this.__spreadsheet._raiseEditModeEntering(beforeArgs);
		if (beforeArgs.cancel()) {
			return false;
		}
		if (this.__spreadsheet._sheetManager()._canEnterEditMode(cell) == false) {
			return false;
		}
		if (this.spreadsheet().isInEditMode()) {
			return false;
		}
		if (false == skipShiftFocus && !this.__spreadsheet._viewResolved().focus()) {
			return false;
		}
		if (this.__editModeFont == null) {
			this.__editModeFont = this.createEditFont();
		}
		this.__cell = cellResolved;
		this.__cellRange = sheetManager.getCellRange(cell);
		this.__cellRangeForPositioning = this.__cellRange;
		this.__cellFill = (sheetManager._getCellBackground(cell) || $.ig.excel.CellFill.prototype._createSolidFill1($.ig.ExcelUtils.prototype.colorFromArgb(255, 255, 255)))._toResolvedColorFill(sheetManager._worksheet().workbook());
		this.__sheetManager = sheetManager;
		this.__pane = pane;
		this.__editInfo = sheetManager._createCellEditInfo(cellResolved);
		this.__spreadsheet.isInEditMode(true);
		if (this.__editInfo._valueInfo.isMergedCell() == false && this.__editInfo._format._alignmentResolved() == $.ig.excel.HorizontalCellAlignment.centerAcrossSelection && this.__cellRangeForPositioning.lastColumn() < this.__editInfo._valueInfo._endColumnIndex) {
			this.__cellRangeForPositioning = new $.ig.spreadsheet.SpreadsheetCellRange(this.__cellRangeForPositioning.firstRow(), this.__cellRangeForPositioning.firstColumn(), this.__cellRangeForPositioning.lastRow(), this.__editInfo._valueInfo._endColumnIndex);
		}
		this.__preferredEditorWidth = NaN;
		pane._hideActiveCellContent(true);
		this.initializeCellEditMode(disableArrowKeyNavigation);
		this.setEditModeFontOverride(cell, this.__editModeFont);
		this.onEnteredEditMode(initialText, disableArrowKeyNavigation, skipShiftFocus, preserveStateForIme);
		this.__spreadsheet._dirtyCanUndoRedoState();
		this.__spreadsheet._raiseEditModeEntered(new $.ig.SpreadsheetEditModeEnteredEventArgs(cellResolved));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::BeginEdit(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean, System.String, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	canExecuteCommand: function (command) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EndEdit(Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction, System.Boolean, System.Boolean, System.Boolean)" />*/
	endEdit: function (action, force, returnFalseOnValidationFailure, focusControl) {
		if (!this.spreadsheet().isInEditMode()) {
			if (this.__spreadsheet._tabInEdit() != null) {
				return this.__spreadsheet._endTabRenaming(action == $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges, force, false);
			}
			return true;
		}
		var cell = this.__cell;
		var defaultAcceptChanges = action != $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges;
		var beforeArgs = new $.ig.SpreadsheetEditModeExitingEventArgs(cell, defaultAcceptChanges, !force);
		this.__spreadsheet._raiseEditModeExiting(beforeArgs);
		if (beforeArgs.canCancel() && beforeArgs.cancel()) {
			return false;
		}
		if (beforeArgs.acceptChanges() != defaultAcceptChanges) {
			if (!beforeArgs.acceptChanges()) {
				action = $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges;
			} else {
				action = $.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell;
			}
		}
		var result = this.exitEditMode(action, force, focusControl);
		if (!force && (result & $.ig.SpreadsheetExitEditModeResults.prototype.stayedInEditMode) == $.ig.SpreadsheetExitEditModeResults.prototype.stayedInEditMode) {
			if ((result & $.ig.SpreadsheetExitEditModeResults.prototype.failedValidation) == $.ig.SpreadsheetExitEditModeResults.prototype.failedValidation && this.__spreadsheet.cellEditMode() == $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateBetweenCells) {
				this.__spreadsheet._executeCommand1($.ig.spreadsheet.SpreadsheetAction.toggleCellEditMode, null, null);
			}
			return false;
		}
		this.__spreadsheet.isInEditMode(false);
		this.setEditModeFontOverride(cell, null);
		this.__spreadsheet.cellEditMode($.ig.SpreadsheetCellEditMode.prototype.notInEditMode);
		this.__spreadsheet._needsFormulaBarValueVerification(true);
		this.__spreadsheet._dirtyCanUndoRedoState();
		this.__spreadsheet._raiseEditModeExited(new $.ig.SpreadsheetEditModeExitedEventArgs(cell));
		if (returnFalseOnValidationFailure && (result & $.ig.SpreadsheetExitEditModeResults.prototype.canceledFailedValidation) == $.ig.SpreadsheetExitEditModeResults.prototype.canceledFailedValidation) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::EndEdit(Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	executeCommand: function (command, canRaiseCommandEvents) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetCurrentValue()" />*/
	getCurrentValue: function () {
		if (!this.__spreadsheet.isInEditMode()) {
			return null;
		}
		return this.getCurrentValueOverride();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetCurrentValue()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetPreferredWidth()" />*/
	getPreferredWidth: function () {
		if (this.__spreadsheet.isInEditMode() == false) {
			return NaN;
		}
		if ($.ig.util.isNaN(this.__preferredEditorWidth)) {
			this.__preferredEditorWidth = this.calculatePreferredEditorWidth();
		}
		return this.__preferredEditorWidth;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::GetPreferredWidth()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::Initialize()" />*/
	initialize: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::Initialize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::InitializeNotInEditCellValue()" />*/
	initializeNotInEditCellValue: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::InitializeNotInEditCellValue()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnCellEditModeChanged()" />*/
	onCellEditModeChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnCellEditModeChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnEditorTextChanged()" />*/
	onEditorTextChanged: function () {
		this.__preferredEditorWidth = NaN;
		this.__spreadsheet._dirtyCanUndoRedoState();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnEditorTextChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnFormulaBarGotFocus()" />*/
	onFormulaBarGotFocus: function () {
		if (!this.spreadsheet().isInEditMode()) {
			if (false == this.beginEdit(this.spreadsheet().activeCell(), false, null, true, false)) {
				this.spreadsheet()._viewResolved().focus();
			}
		} else {
			this.initializeCellEditMode(false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::OnFormulaBarGotFocus()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::PositionCaret(System.Windows.Point, System.Boolean)" />*/
	positionCaret: function (relativePt, captureMouse) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::PositionCaret(System.Windows.Point, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::SendEditFontChangeNotifications()" />*/
	sendEditFontChangeNotifications: function () {
		if (this.__editModeFont != null) {
			this.__editModeFont._sendChangeNotification();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::SendEditFontChangeNotifications()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::UpdateFormulaText()" />*/
	updateFormulaText: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::UpdateFormulaText()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::WillPerformValidation()" />*/
	willPerformValidation: function () {
		if (this.__spreadsheet.isInEditMode() && this.__sheetManager != null && this.__sheetManager._worksheet()._hasDataValidationRules()) {
			var rule = this.__sheetManager._worksheet().dataValidationRules()._findRule1($.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress2(this.__cell.row(), this.__cell.column()));
			if (rule != null && rule._validationType() != $.ig.DataValidationType.prototype.anyValue) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::WillPerformValidation()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetExitEditModeResults Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::ExitEditMode(Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction, System.Boolean, System.Boolean)" />*/
	exitEditMode: function (action, mustExitEditMode, focusControl) {
		var $self = this;
		if (!this.__spreadsheet.isInEditMode()) {
			return $.ig.SpreadsheetExitEditModeResults.prototype.none;
		}
		var exitResult = $.ig.SpreadsheetExitEditModeResults.prototype.none;
		if (action != $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges) {
			var spreadsheet = this.__spreadsheet;
			var activeWorksheet = this.__sheetManager._worksheet();
			var activeCell = this.__cell;
			var executor = function (operation, editAction, editText, targetRangesForUndoInfo) {
				var willValidate = $self.willPerformValidation();
				var result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
				var wrappedAction = function () {
					result = editAction();
					if (result == $.ig.SpreadsheetOperationResult.prototype.success) {
						var failedRule = activeWorksheet._validateCellValue(activeCell.row(), activeCell.column());
						if (failedRule != null) {
							exitResult |= $.ig.SpreadsheetExitEditModeResults.prototype.failedValidation;
							var args = new $.ig.SpreadsheetEditModeValidationErrorEventArgs(activeCell, failedRule, mustExitEditMode);
							args.action(failedRule.showErrorMessageForInvalidValue() ? $.ig.SpreadsheetEditModeValidationErrorAction.prototype.showPrompt : $.ig.SpreadsheetEditModeValidationErrorAction.prototype.acceptChange);
							spreadsheet._raiseEditModeValidationError(args);
							switch (args.action()) {
								case $.ig.SpreadsheetEditModeValidationErrorAction.prototype.acceptChange: break;
								case $.ig.SpreadsheetEditModeValidationErrorAction.prototype.revertChange:
									result = $.ig.SpreadsheetOperationResult.prototype.error;
									break;
								case $.ig.SpreadsheetEditModeValidationErrorAction.prototype.stayInEditMode:
									result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
									break;
								case $.ig.SpreadsheetEditModeValidationErrorAction.prototype.showPrompt:
									result = $self.showValidationPrompt(result, failedRule);
									break;
							}
							if (result == $.ig.SpreadsheetOperationResult.prototype.error) {
								exitResult |= $.ig.SpreadsheetExitEditModeResults.prototype.canceledFailedValidation;
							}
							if (result != $.ig.SpreadsheetOperationResult.prototype.success) {
								throw new $.ig.EditModeDataValidationException();
							}
						}
					}
				};
				spreadsheet._executeActionWithUndo(operation, wrappedAction, targetRangesForUndoInfo, false, editText, true, willValidate);
				return result;
			};
			var helper = new $.ig.SpreadsheetEditHelper(this.__sheetManager, this.__pane, this.__cell, this.__spreadsheet.isFixedDecimalEnabled(), this.__spreadsheet.fixedDecimalPlaceCount(), this.__spreadsheet._onUserPrompt.runOn(this.__spreadsheet), executor);
			var editValue = this.getCurrentValue();
			var updateResult = helper.updateCells(action, editValue, mustExitEditMode == false, editValue.unformattedText(), this.__editInfo._isVisitedHyperlink);
			if (updateResult == $.ig.SpreadsheetOperationResult.prototype.cancelled && !mustExitEditMode) {
				return exitResult |= $.ig.SpreadsheetExitEditModeResults.prototype.stayedInEditMode;
			}
			if (updateResult == $.ig.SpreadsheetOperationResult.prototype.success && activeWorksheet._cellsWithInvalidValueCircles().count() > 0 && activeWorksheet._validateCellValue(activeCell.row(), activeCell.column()) == null) {
				if (activeWorksheet._removeCellWithInvalidValueCircle(activeCell.row(), activeCell.column())) {
					if (this.__sheetManager != null) {
						this.__sheetManager._invalidate();
					}
				}
			}
		}
		var oldPane = this.__pane;
		this.__cellFill = null;
		this.__editInfo = null;
		this.__pane = null;
		this.__sheetManager = null;
		oldPane._hideActiveCellContent(false);
		this.onExitedEditMode();
		if (focusControl) {
			this.__spreadsheet._viewResolved().focus();
		}
		return exitResult;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetExitEditModeResults Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::ExitEditMode(Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::ShowValidationPrompt(Infragistics.Controls.Grids.Core.SpreadsheetOperationResult, Infragistics.Documents.Excel.DataValidationRule)" />*/
	showValidationPrompt: function (result, failedRule) {
		var caption = String.isNullOrEmpty(failedRule.errorMessageTitle()) ? String.empty() : failedRule.errorMessageTitle();
		var hasMessage = !String.isNullOrEmpty(failedRule.errorMessageDescription());
		var msgResource = $.ig.util.stringFormat(hasMessage ? "CustomValidation{0}Message" : "DefaultValidation{0}Message", $.ig.excel.DataValidationErrorStyle.prototype.$getName(failedRule.errorStyle()));
		var msg = hasMessage ? $.ig.spreadsheet.locale.getString(msgResource, [ failedRule.errorMessageDescription() ]) : $.ig.spreadsheet.locale.getString(msgResource, []);
		switch (failedRule.errorStyle()) {
			case $.ig.excel.DataValidationErrorStyle.information:
				if ($.ig.MessageBoxResult.prototype.cancel == this.__spreadsheet._viewResolved().showMessageBox(msg, caption, $.ig.MessageBoxButton.prototype.oKCancel, $.ig.MessageBoxImage.prototype.information, $.ig.MessageBoxResult.prototype.oK)) {
					result = $.ig.SpreadsheetOperationResult.prototype.error;
				}
				break;
			case $.ig.excel.DataValidationErrorStyle.warning:
				var messageResult = this.__spreadsheet._viewResolved().showMessageBox(msg, caption, $.ig.MessageBoxButton.prototype.yesNoCancel, $.ig.MessageBoxImage.prototype.warning, $.ig.MessageBoxResult.prototype.no);
				if (messageResult == $.ig.MessageBoxResult.prototype.cancel) {
					result = $.ig.SpreadsheetOperationResult.prototype.error;
				} else if (messageResult == $.ig.MessageBoxResult.prototype.no) {
					result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
				}
				break;
			default:
			case $.ig.excel.DataValidationErrorStyle.stop:
				if ($.ig.MessageBoxResult.prototype.cancel == this.__spreadsheet._viewResolved().showMessageBox(msg, caption, $.ig.MessageBoxButton.prototype.oKCancel, $.ig.MessageBoxImage.prototype.stop, $.ig.MessageBoxResult.prototype.oK)) {
					result = $.ig.SpreadsheetOperationResult.prototype.error;
				} else {
					result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
				}
				break;
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager::ShowValidationPrompt(Infragistics.Controls.Grids.Core.SpreadsheetOperationResult, Infragistics.Documents.Excel.DataValidationRule)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellEditManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.JsCellEditManager" />*/

$.ig.util.defType('JsCellEditManager', 'SpreadsheetCellEditManager', {
	init: function (spreadsheet) {
		$.ig.SpreadsheetCellEditManager.prototype.init.call(this, spreadsheet);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanRedo()" />*/
	canRedo: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanRedo()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanUndo()" />*/
	canUndo: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanUndo()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::IsCapableOfEditMode()" />*/
	isCapableOfEditMode: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::IsCapableOfEditMode()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnEnteredEditMode(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	onEnteredEditMode: function (initialText, disableArrowKeyNavigation, skipShiftFocus, preserveStateForIme) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnEnteredEditMode(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnBringEditCellIntoView()" />*/
	onBringEditCellIntoView: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnBringEditCellIntoView()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	canEnterEditMode: function (pane) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsCellEditManager::CalculatePreferredEditorWidth()" />*/
	calculatePreferredEditorWidth: function () {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsCellEditManager::CalculatePreferredEditorWidth()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.JsCellEditManager::CreateEditFont()" />*/
	createEditFont: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.JsCellEditManager::CreateEditFont()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	canExecuteCommand: function (command) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnExitedEditMode()" />*/
	onExitedEditMode: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnExitedEditMode()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.JsCellEditManager::GetCurrentValueOverride()" />*/
	getCurrentValueOverride: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.JsCellEditManager::GetCurrentValueOverride()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	executeCommand: function (command, canRaiseCommandEvents) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsCellEditManager::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::Initialize()" />*/
	initialize: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::Initialize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::InitializeNotInEditCellValue()" />*/
	initializeNotInEditCellValue: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::InitializeNotInEditCellValue()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnCellEditModeChanged()" />*/
	onCellEditModeChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::OnCellEditModeChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::PositionCaret(System.Windows.Point, System.Boolean)" />*/
	positionCaret: function (relativePt, captureMouse) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::PositionCaret(System.Windows.Point, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::UpdateFormulaText()" />*/
	updateFormulaText: function () {
		var elem = this.spreadsheet()._element();
		if (elem != null) {
			elem._formulaBar._textArea._textBox.text(this.getActiveCellTextForFormulaBar());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsCellEditManager::UpdateFormulaText()" />*/
	,
	$type: new $.ig.Type('JsCellEditManager', $.ig.SpreadsheetCellEditManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.JsCellEditManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1" />*/

$.ig.util.defType('SpreadsheetMenuBuilder$1', 'Object', {
	$t: null,
	_spreadsheet: null,
	init: function ($t, spreadsheet) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		this._spreadsheet = spreadsheet;
	},
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetSubItems(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	getSubItems: function (item) {
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetSubItems(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetAction(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	getAction: function (item) {
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetAction(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	createItem: function (action) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateChildItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	createChildItem: function (action, parent) {
		return this.createItem(action);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateChildItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateSeparator()" />*/
	createSeparator: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateSeparator()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateSubItem(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem, )" />*/
	createSubItem: function (subItemType, childItems) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateSubItem(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem, )" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetIsEnabled(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	getIsEnabled: function (item) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetIsEnabled(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::SetIsEnabled(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T, System.Boolean)" />*/
	setIsEnabled: function (item, isEnabled) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::SetIsEnabled(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetIsVisible(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	getIsVisible: function (item) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetIsVisible(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::SetIsVisible(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T, System.Boolean)" />*/
	setIsVisible: function (item, isVisible) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::SetIsVisible(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::IsSeparator(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	isSeparator: function (item) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::IsSeparator(Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder.T)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetDefaultCaption(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	getDefaultCaption1: function (command, parent) {
		var resParent;
		switch (parent) {
			case $.ig.SpreadsheetContextMenuSubItem.prototype.insertCells:
			case $.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells:
				resParent = $.ig.SpreadsheetContextMenuSubItem.prototype.$getName(parent);
				break;
			default:
				$.ig.Debug.prototype.fail("Unexpected subItemType:" + $.ig.SpreadsheetContextMenuSubItem.prototype.getBox(parent));
				resParent = $.ig.SpreadsheetContextMenuSubItem.prototype.$getName(parent);
				break;
		}
		var commandStr;
		switch (command) {
			case $.ig.spreadsheet.SpreadsheetAction.insertCellsShiftDown:
				commandStr = "ShiftDown";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.insertCellsShiftRight:
				commandStr = "ShiftRight";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.insertColumns:
			case $.ig.spreadsheet.SpreadsheetAction.deleteColumns:
				commandStr = "Column";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.deleteRows:
			case $.ig.spreadsheet.SpreadsheetAction.insertRows:
				commandStr = "Row";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftUp:
				commandStr = "ShiftUp";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftLeft:
				commandStr = "ShiftLeft";
				break;
			default:
				commandStr = $.ig.spreadsheet.SpreadsheetAction.prototype.$getName(command);
				break;
		}
		return $.ig.SpreadsheetMenuBuilder$1.prototype.getResourceString(this.$t, "MenuItem_" + resParent + "_" + commandStr);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetDefaultCaption(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetDefaultCaption(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	getDefaultCaption: function (command) {
		var resName;
		switch (command) {
			case $.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets:
				resName = "MenuItem_InsertWorksheets";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.hideColumns:
			case $.ig.spreadsheet.SpreadsheetAction.hideRows:
				resName = "MenuItem_Hide";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.unhideColumns:
			case $.ig.spreadsheet.SpreadsheetAction.unhideRows:
				resName = "MenuItem_Unhide";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.autoFitColumnWidth:
				resName = "MenuItem_AutoFit_Columns";
				break;
			case $.ig.spreadsheet.SpreadsheetAction.autoFitRowHeight:
				resName = "MenuItem_AutoFit_Rows";
				break;
			default:
				resName = "MenuItem_" + $.ig.spreadsheet.SpreadsheetAction.prototype.$getName(command);
				break;
		}
		return $.ig.SpreadsheetMenuBuilder$1.prototype.getResourceString(this.$t, resName);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetDefaultCaption(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetResourceString(System.String)" />*/
	getResourceString: function ($t, resourceKey) {
		var resource = $.ig.spreadsheet.locale.getString(resourceKey, []);
		$.ig.Debug.prototype.assert1(resource != null && resource.length > 0 && resource != resourceKey, "Either wrong key or no resource defined yet for this combination");
		return resource;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetResourceString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetDefaultCaption(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	getDefaultCaption2: function (subItemType) {
		var captionResName;
		switch (subItemType) {
			case $.ig.SpreadsheetContextMenuSubItem.prototype.insertCells:
				captionResName = "MenuItem_Insert";
				break;
			case $.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells:
				captionResName = "MenuItem_Delete";
				break;
			default:
				$.ig.Debug.prototype.fail("Unexpected subItemType:" + $.ig.SpreadsheetContextMenuSubItem.prototype.getBox(subItemType));
				captionResName = "";
				break;
		}
		return $.ig.SpreadsheetMenuBuilder$1.prototype.getResourceString(this.$t, captionResName);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::GetDefaultCaption(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateMenuItems(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuArea)" />*/
	createMenuItems: function (area) {
		switch (area) {
			case $.ig.SpreadsheetContextMenuArea.prototype.cell:
				{
					var insertItems = [ this.createChildItem($.ig.spreadsheet.SpreadsheetAction.insertCellsShiftRight, $.ig.SpreadsheetContextMenuSubItem.prototype.insertCells), this.createChildItem($.ig.spreadsheet.SpreadsheetAction.insertCellsShiftDown, $.ig.SpreadsheetContextMenuSubItem.prototype.insertCells), this.createChildItem($.ig.spreadsheet.SpreadsheetAction.insertRows, $.ig.SpreadsheetContextMenuSubItem.prototype.insertCells), this.createChildItem($.ig.spreadsheet.SpreadsheetAction.insertColumns, $.ig.SpreadsheetContextMenuSubItem.prototype.insertCells) ];
					var deleteItems = [ this.createChildItem($.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftLeft, $.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells), this.createChildItem($.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftUp, $.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells), this.createChildItem($.ig.spreadsheet.SpreadsheetAction.deleteRows, $.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells), this.createChildItem($.ig.spreadsheet.SpreadsheetAction.deleteColumns, $.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells) ];
					return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.cut), this.createItem($.ig.spreadsheet.SpreadsheetAction.copy), this.createItem($.ig.spreadsheet.SpreadsheetAction.paste), this.createSeparator(), this.createSubItem($.ig.SpreadsheetContextMenuSubItem.prototype.insertCells, insertItems), this.createSubItem($.ig.SpreadsheetContextMenuSubItem.prototype.deleteCells, deleteItems), this.createItem($.ig.spreadsheet.SpreadsheetAction.clearContents), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.openHyperlink), this.createItem($.ig.spreadsheet.SpreadsheetAction.removeHyperlinks) ];
				}
			case $.ig.SpreadsheetContextMenuArea.prototype.column: return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.cut), this.createItem($.ig.spreadsheet.SpreadsheetAction.copy), this.createItem($.ig.spreadsheet.SpreadsheetAction.paste), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.insertCells), this.createItem($.ig.spreadsheet.SpreadsheetAction.deleteCells), this.createItem($.ig.spreadsheet.SpreadsheetAction.clearContents), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.hideColumns), this.createItem($.ig.spreadsheet.SpreadsheetAction.unhideColumns), this.createItem($.ig.spreadsheet.SpreadsheetAction.autoFitColumnWidth), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.removeHyperlinks) ];
			case $.ig.SpreadsheetContextMenuArea.prototype.formulaBarEditor: return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.cut), this.createItem($.ig.spreadsheet.SpreadsheetAction.copy), this.createItem($.ig.spreadsheet.SpreadsheetAction.paste) ];
			case $.ig.SpreadsheetContextMenuArea.prototype.inPlaceEditor: return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.cut), this.createItem($.ig.spreadsheet.SpreadsheetAction.copy), this.createItem($.ig.spreadsheet.SpreadsheetAction.paste) ];
			case $.ig.SpreadsheetContextMenuArea.prototype.row: return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.cut), this.createItem($.ig.spreadsheet.SpreadsheetAction.copy), this.createItem($.ig.spreadsheet.SpreadsheetAction.paste), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.insertCells), this.createItem($.ig.spreadsheet.SpreadsheetAction.deleteCells), this.createItem($.ig.spreadsheet.SpreadsheetAction.clearContents), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.hideRows), this.createItem($.ig.spreadsheet.SpreadsheetAction.unhideRows), this.createItem($.ig.spreadsheet.SpreadsheetAction.autoFitRowHeight), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.removeHyperlinks) ];
			case $.ig.SpreadsheetContextMenuArea.prototype.selectAllButton: return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.cut), this.createItem($.ig.spreadsheet.SpreadsheetAction.copy), this.createItem($.ig.spreadsheet.SpreadsheetAction.paste), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.insertCells), this.createItem($.ig.spreadsheet.SpreadsheetAction.deleteCells), this.createItem($.ig.spreadsheet.SpreadsheetAction.clearContents), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.removeHyperlinks) ];
			case $.ig.SpreadsheetContextMenuArea.prototype.tab: return [ this.createItem($.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets), this.createItem($.ig.spreadsheet.SpreadsheetAction.deleteWorksheets), this.createItem($.ig.spreadsheet.SpreadsheetAction.renameWorksheet), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.selectAllWorksheets), this.createSeparator(), this.createItem($.ig.spreadsheet.SpreadsheetAction.unselectWorksheets) ];
		}
		return null;
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::CreateMenuItems(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuArea)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::InitializeItems(System.Collections.Generic.IEnumerable)" />*/
	initializeItems: function (items) {
		var state = this._spreadsheet._getCurrentState1($.ig.LongValue.prototype.all(), null);
		this.initializeItemsImpl(items, state);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::InitializeItems(System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::InitializeItemsImpl(System.Collections.Generic.IEnumerable, Infragistics.Core.LongValue)" />*/
	initializeItemsImpl: function (items, currentState) {
		var en = items.getEnumerator();
		while (en.moveNext()) {
			var item = en.current();
			var action = this.getAction(item);
			if ($.ig.util.nullableNotEquals(action, null)) {
				var isEnabled = this._spreadsheet._canExecuteCommand(action.value(), null, currentState, true);
				var isVisible = true;
				switch (action.value()) {
					case $.ig.spreadsheet.SpreadsheetAction.openHyperlink:
					case $.ig.spreadsheet.SpreadsheetAction.removeHyperlinks:
					case $.ig.spreadsheet.SpreadsheetAction.unselectWorksheets:
						isVisible = isEnabled;
						break;
					case $.ig.spreadsheet.SpreadsheetAction.addNewWorksheet:
					case $.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets:
						isVisible = this._spreadsheet.allowAddWorksheet();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteWorksheets:
						isVisible = this._spreadsheet.allowDeleteWorksheet();
						break;
				}
				this.setIsEnabled(item, isEnabled);
				this.setIsVisible(item, isVisible);
			}
			var subItems = this.getSubItems(item);
			if (subItems != null) {
				this.initializeItemsImpl(subItems, currentState);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::InitializeItemsImpl(System.Collections.Generic.IEnumerable, Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::VerifyMenuSeparatorVisibility(System.Collections.Generic.IEnumerable)" />*/
	verifyMenuSeparatorVisibility: function (items) {
		var previousVisibleItem = null;
		var previousSeparator = null;
		var en = items.getEnumerator();
		while (en.moveNext()) {
			var item = en.current();
			var isSeparator = this.isSeparator(item);
			var isVisible = this.getIsVisible(item);
			if (!isVisible) {
				if (isSeparator) {
					if (previousVisibleItem != null && previousSeparator == null) {
						previousSeparator = item;
					}
				}
			} else if (isSeparator) {
				if (previousSeparator != null && this.getIsVisible(previousSeparator)) {
					this.setIsVisible(previousSeparator, false);
				}
				previousSeparator = item;
				previousVisibleItem = null;
			} else {
				if (previousSeparator != null && !this.getIsVisible(previousSeparator)) {
					this.setIsVisible(previousSeparator, true);
				}
				previousSeparator = null;
				previousVisibleItem = item;
				var childItems = this.getSubItems(item);
				if (childItems != null) {
					this.verifyMenuSeparatorVisibility(childItems);
				}
			}
		}
		if (previousSeparator != null) {
			this.setIsVisible(previousSeparator, false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1::VerifyMenuSeparatorVisibility(System.Collections.Generic.IEnumerable)" />*/
	,
	$type: new $.ig.Type('SpreadsheetMenuBuilder$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMenuBuilder`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder" />*/

$.ig.util.defType('JsSpreadsheetMenuBuilder', 'SpreadsheetMenuBuilder$1', {
	staticInit: function () {
		var uiVer = $.ui.version;
		var isOldVer = false;
		if (!String.isNullOrEmpty(uiVer)) {
			var verParts = uiVer.split('.');
			if (verParts != null && verParts.length > 1) {
				var major, minor;
				if ((function () { var $ret = $.ig.util.tryParseInt32_1(verParts[0], major); major = $ret.p1; return $ret.ret; }()) && (function () { var $ret = $.ig.util.tryParseInt32_1(verParts[1], minor); minor = $ret.p1; return $ret.ret; }())) {
					isOldVer = major < 1 || (major == 1 && minor <= 10);
				}
			}
		}
		$.ig.JsSpreadsheetMenuBuilder.prototype._useAnchorForMenus = isOldVer;
	},
	init: function (ss) {
		$.ig.SpreadsheetMenuBuilder$1.prototype.init.call(this, $.ig.Element.prototype.$type, ss);
	},
	/*<BeginMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateChildItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	createChildItem: function (action, parent) {
		var text = this.getDefaultCaption1(action, parent);
		var li = this.createItem1(text, $.ig.spreadsheet.SpreadsheetAction.prototype.$getName(action).toLowerCase());
		li.id = $.ig.spreadsheet.SpreadsheetAction.prototype.$getName(action);
		return li;
	}
	/*<EndMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateChildItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem)" />*/
	,
	/*<BeginMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	createItem: function (action) {
		var text = this.getDefaultCaption(action);
		var li = this.createItem1(text, $.ig.spreadsheet.SpreadsheetAction.prototype.$getName(action).toLowerCase());
		li.id = $.ig.spreadsheet.SpreadsheetAction.prototype.$getName(action);
		return li;
	}
	/*<EndMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateItem(System.String, System.String)" />*/
	createItem1: function (text, imageSuffix) {
		var li = document.createElement("li");
		var itemElem;
		if ($.ig.JsSpreadsheetMenuBuilder.prototype._useAnchorForMenus) {
			if (text == $.ig.JsSpreadsheetMenuBuilder.prototype._separatorText) {
				li.innerText = text;
				return li;
			}
			itemElem = document.createElement("a");
			itemElem.setAttribute("href", "#");
		} else {
			itemElem = document.createElement("div");
		}
		var innerHtml = text;
		if (!String.isNullOrEmpty(imageSuffix)) {
			innerHtml = "<span class=\"ui-icon ui-igspreadsheet-" + imageSuffix + "-icon" + "\"></span>" + innerHtml;
		}
		itemElem.innerHTML = innerHtml;
		li.appendChild(itemElem);
		return li;
	}
	/*<EndMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateItem(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateSeparator()" />*/
	createSeparator: function () {
		return this.createItem1($.ig.JsSpreadsheetMenuBuilder.prototype._separatorText, null);
	}
	/*<EndMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateSeparator()" />*/
	,
	/*<BeginMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateSubItem(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem, )" />*/
	createSubItem: function (subItemType, childItems) {
		var headerText = this.getDefaultCaption2(subItemType);
		var li = this.createItem1(headerText, null);
		var ul = document.createElement("ul");
		for (var i = 0; i < childItems.length; i++) {
			ul.appendChild(childItems[i]);
		}
		li.appendChild(ul);
		return li;
	}
	/*<EndMethod Name="System.Html.Element Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::CreateSubItem(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuSubItem, )" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetAction(System.Html.Element)" />*/
	getAction: function (item) {
		var cmd;
		if (String.isNullOrEmpty(item.id) || !(function () { var $ret = $.ig.Enum.prototype.tryParse$1($.ig.spreadsheet.SpreadsheetAction.prototype.$type, item.id, false, cmd); cmd = $ret.p2; return $ret.ret; }())) {
			return $.ig.JsSpreadsheetMenuBuilder.prototype.nullCommand;
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, cmd);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetAction(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetIsEnabled(System.Html.Element)" />*/
	getIsEnabled: function (item) {
		return !item.className.contains("ui-state-disabled");
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetIsEnabled(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetIsVisible(System.Html.Element)" />*/
	getIsVisible: function (item) {
		return item.style.display != "none";
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetIsVisible(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetSubItems(System.Html.Element)" />*/
	getSubItems: function (item) {
		if (item.hasChildNodes()) {
			var ul = item.lastChild;
			if (ul.nodeName == "UL") {
				return $.ig.SpreadsheetUtilities.prototype.getChildren(ul);
			}
		}
		return $.ig.JsSpreadsheetMenuBuilder.prototype._nullElementArray;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::GetSubItems(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::IsSeparator(System.Html.Element)" />*/
	isSeparator: function (item) {
		if ($.ig.JsSpreadsheetMenuBuilder.prototype._useAnchorForMenus) {
			return item.innerText == $.ig.JsSpreadsheetMenuBuilder.prototype._separatorText;
		}
		var div = item.firstChild;
		return div != null && div.innerText == $.ig.JsSpreadsheetMenuBuilder.prototype._separatorText;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::IsSeparator(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::SetIsEnabled(System.Html.Element, System.Boolean)" />*/
	setIsEnabled: function (item, isEnabled) {
		if (isEnabled) {
			$(item).removeClass("ui-state-disabled");
		} else {
			$(item).addClass("ui-state-disabled");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::SetIsEnabled(System.Html.Element, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::SetIsVisible(System.Html.Element, System.Boolean)" />*/
	setIsVisible: function (item, isVisible) {
		item.style.display = isVisible ? "" : "none";
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder::SetIsVisible(System.Html.Element, System.Boolean)" />*/
	,
	$type: new $.ig.Type('JsSpreadsheetMenuBuilder', $.ig.SpreadsheetMenuBuilder$1.prototype.$type.specialize($.ig.Element.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetText" />*/

$.ig.util.defType('SpreadsheetText', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetText::Height()" />*/
	height: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetText::Height()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetText::Width()" />*/
	width: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetText::Width()" />*/
	,
	$type: new $.ig.Type('SpreadsheetText', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetText" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetText" />*/

$.ig.util.defType('JsSpreadsheetText', 'SpreadsheetText', {
	init: function () {
		$.ig.SpreadsheetText.prototype.init.call(this);
	},
	_textHeight: 0,
	_textWidth: 0,
	_html: null,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetText::Equals(System.Object)" />*/
	equals: function (other) {
		var jsOther = $.ig.util.cast($.ig.JsSpreadsheetText.prototype.$type, other);
		return jsOther != null && jsOther._html == this._html && jsOther._textHeight == this._textHeight && jsOther._textWidth == this._textWidth;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetText::Equals(System.Object)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetText::Height()" />*/
	height: function () {
		return this._textHeight;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetText::Height()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetText::Width()" />*/
	width: function () {
		return this._textWidth;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetText::Width()" />*/
	,
	$type: new $.ig.Type('JsSpreadsheetText', $.ig.SpreadsheetText.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetText" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager" />*/

$.ig.util.defType('SpreadsheetTabEditManager', 'Object', {
	__spreadsheet: null,
	__isExitingEditMode: false,
	init: function (spreadsheet) {
		$.ig.Object.prototype.init.call(this);
		this.__spreadsheet = spreadsheet;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::IsEditingSupported()" />*/
	isEditingSupported: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::IsEditingSupported()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::IsExitingEditMode()" />*/
	isExitingEditMode: function () {
		return this.__isExitingEditMode;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::IsExitingEditMode()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::Spreadsheet()" />*/
	spreadsheet: function () {
		return this.__spreadsheet;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::Spreadsheet()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::TabInEdit()" />*/
	tabInEdit: function () {
		return this.__spreadsheet._tabManager()._tabInEdit();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::TabInEdit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::BeginEdit()" />*/
	beginEdit: function () {
		var $self = this;
		if (!this.__spreadsheet._tryExitEditMode(true)) {
			return false;
		}
		if (!this.isEditingSupported()) {
			return false;
		}
		var tabItem = $.ig.Enumerable.prototype.firstOrDefault$11($.ig.SpreadsheetTabInfo.prototype.$type, this.__spreadsheet._tabManager()._tabs(), function (t) { return t._worksheet() == $self.__spreadsheet.activeWorksheet(); });
		if (tabItem == null || !this.canEditTab(tabItem)) {
			return false;
		}
		this.__spreadsheet._tabManager()._onEnterEdit(tabItem);
		this.onEnteredEditMode(tabItem, tabItem._worksheet().name(), $.ig.excel.Worksheet.prototype._maxWorksheetNameLength);
		if (this.tabInEdit() != null) {
			this.selectAllText();
		}
		return this.tabInEdit() != null;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::BeginEdit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::CanEditTab(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	canEditTab: function (tab) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::CanEditTab(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::EndEdit(System.Boolean, System.Boolean, System.Boolean)" />*/
	endEdit: function (cancel, force, skipChangeFocus) {
		$.ig.Debug.prototype.assert(this.__isExitingEditMode == false);
		if (this.__isExitingEditMode) {
			return false;
		}
		this.__isExitingEditMode = true;
		try {
			return this.endEditImpl(cancel, force, skipChangeFocus);
		}
		finally {
			this.__isExitingEditMode = false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::EndEdit(System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::EndEditImpl(System.Boolean, System.Boolean, System.Boolean)" />*/
	endEditImpl: function (cancel, force, skipChangeFocus) {
		if (this.tabInEdit() == null) {
			return true;
		}
		var tab = this.tabInEdit();
		var newName = this.getCurrentEditText();
		var ws = tab._worksheet();
		if (!cancel) {
			try {
				$.ig.excel.Worksheet.prototype._verifyNameIsValid(newName, "name");
			}
			catch (ex) {
				if (force) {
					return this.endEditImpl(true, true, skipChangeFocus);
				}
				this.selectAllText();
				if (this.shouldSkipExitEditPrompts(tab) == false) {
					var errorInfo = new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidWorksheetName, $.ig.spreadsheet.locale.getString("SheetNameError_Message_Invalid", [ newName ]), ex, newName, false);
					this.__spreadsheet._onUserPrompt(errorInfo);
				}
				return false;
			}
			try {
				if (ws.workbook() != null) {
					ws.workbook()._verifyWorksheetName(ws, newName, "value");
				}
			}
			catch (ex1) {
				if (force) {
					return this.endEditImpl(true, true, skipChangeFocus);
				}
				this.selectAllText();
				if (this.shouldSkipExitEditPrompts(tab) == false) {
					var errorInfo1 = new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.conflictingWorksheetName, $.ig.spreadsheet.locale.getString("SheetNameError_Message_NameIsUsed", [ newName ]), ex1, newName, false);
					this.__spreadsheet._onUserPrompt(errorInfo1);
				}
				return false;
			}
		}
		if (this.tabInEdit() == tab) {
			this.onExitedEditMode(tab, skipChangeFocus);
			this.__spreadsheet._tabManager()._onExitEdit();
			if (!cancel) {
				ws.name(newName);
			}
		}
		return this.tabInEdit() == null;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::EndEditImpl(System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::GetCurrentEditText()" />*/
	getCurrentEditText: function () {
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::GetCurrentEditText()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::OnEnteredEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Int32)" />*/
	onEnteredEditMode: function (tab, initialText, maxLength) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::OnEnteredEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::OnExitedEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Boolean)" />*/
	onExitedEditMode: function (tab, skipChangeFocus) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::OnExitedEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::SelectAllText()" />*/
	selectAllText: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::SelectAllText()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::ShouldSkipExitEditPrompts(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	shouldSkipExitEditPrompts: function (tab) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager::ShouldSkipExitEditPrompts(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabEditManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.JsTabEditManager" />*/

$.ig.util.defType('JsTabEditManager', 'SpreadsheetTabEditManager', {
	init: function (ss) {
		$.ig.SpreadsheetTabEditManager.prototype.init.call(this, ss);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsTabEditManager::IsEditingSupported()" />*/
	isEditingSupported: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.JsTabEditManager::IsEditingSupported()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsTabEditManager::CanEditTab(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	canEditTab: function (tab) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsTabEditManager::CanEditTab(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Html.IDomWrapper Infragistics.Controls.Grids.Core.JsTabEditManager::GetTextBox(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	getTextBox: function (tab) {
		if (tab != null) {
			var visual = tab._element();
			if (visual != null) {
				return visual._contentPlatformObject.getChildAt(0);
			}
		}
		return null;
	}
	/*<EndMethod Name="System.Html.IDomWrapper Infragistics.Controls.Grids.Core.JsTabEditManager::GetTextBox(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.JsTabEditManager::GetCurrentEditText()" />*/
	getCurrentEditText: function () {
		var tb = this.getTextBox(this.tabInEdit());
		return tb != null ? tb.getProperty("value") : "";
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.JsTabEditManager::GetCurrentEditText()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::OnEnteredEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Int32)" />*/
	onEnteredEditMode: function (tab, initialText, maxLength) {
		var $self = this;
		var visual = tab._element();
		var tb = visual._platformObject.createElement("input");
		tb.setProperty("type", "text");
		tb.setProperty("minlength", 1);
		tb.setProperty("maxlength", maxLength);
		tb.setProperty("value", initialText);
		tb.setAttribute("tabIndex", 0);
		tb.setRawStyleProperty("width", this.spreadsheet()._measureHelper().measureTabItem(tab, initialText, true) + "px");
		tb.listen("input", function (e) {
			var txt = (function ($t) { return $t != null ? $t : ""; }($self.getCurrentEditText()));
			visual._preferredWidth = $self.spreadsheet()._measureHelper().measureTabItem(tab, txt, false);
			visual.hasPositionChanged(true);
			(visual.__parent)._layoutManager.invalidateLayout();
			var newWidth = $self.spreadsheet()._measureHelper().measureTabItem(tab, txt, true);
			if (newWidth < 3) {
				newWidth = 3;
			}
			tb.setRawStyleProperty("width", (newWidth + "px"));
		});
		visual._contentPlatformObject.setText("");
		visual._contentPlatformObject.append(tb);
		tb.focus();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::OnEnteredEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::OnExitedEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Boolean)" />*/
	onExitedEditMode: function (tab, skipChangeFocus) {
		var tb = this.getTextBox(tab);
		if (tb != null) {
			tb.unlistenAll();
			tb.remove();
		}
		var visual = tab._element();
		$.ig.SpreadsheetVisualElementDomBuilder.prototype.initializeTabText(visual._contentPlatformObject, tab._name());
		visual._textVersion = $.ig.SpreadsheetTabItemElement.prototype.dirtyTextVersion;
		if (visual.__parent != null) {
			(visual.__parent)._layoutManager.invalidateLayout();
		}
		if (!skipChangeFocus) {
			this.spreadsheet()._viewResolved().focus();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::OnExitedEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsTabEditManager::ShouldSkipExitEditPrompts(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	shouldSkipExitEditPrompts: function (tab) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsTabEditManager::ShouldSkipExitEditPrompts(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::SelectAllText()" />*/
	selectAllText: function () {
		var tb = this.getTextBox(this.tabInEdit());
		if (tb != null) {
			var input = tb.getNativeElement();
			var value = tb.getProperty("value");
			input.setSelectionRange(0, value.length);
			tb.focus();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::SelectAllText()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::Focus()" />*/
	focus: function () {
		if (this.tabInEdit() != null && !this.isExitingEditMode()) {
			var tb = this.getTextBox(this.tabInEdit());
			if (tb != null) {
				tb.focus();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsTabEditManager::Focus()" />*/
	,
	$type: new $.ig.Type('JsTabEditManager', $.ig.SpreadsheetTabEditManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.JsTabEditManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper" />*/

$.ig.util.defType('SpreadsheetMeasureHelper', 'Object', {
	__spreadsheet: null,
	__measureRoot: null,
	__textMeasureContainer: null,
	__singleLineSpanContainer: null,
	__singleLineSpan: null,
	__measureTab: null,
	__measureTabContent: null,
	_resourceBrushes: null,
	__singleLineHeights: null,
	init: function (spreadsheet) {
		$.ig.Object.prototype.init.call(this);
		this.__spreadsheet = spreadsheet;
		this.__singleLineHeights = new $.ig.LRUCache$2(String, Number, 0, 100);
		var resourceIds = $.ig.Enum.prototype.getValues($.ig.SpreadsheetResourceId.prototype.$type);
		var resourceBrushes = new Array(resourceIds.length);
		for (var i = 0; i < resourceIds.length; i++) {
			var id = resourceIds[i];
			var color = $.ig.DefaultSpreadsheetColors.prototype.getDefaultColor(id);
			resourceBrushes[id] = $.ig.Brush.prototype.create(color.colorString());
		}
		this._resourceBrushes = resourceBrushes;
	},
	/*<BeginProperty Name="System.Html.IDomWrapper Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::TextMeasureContainer()" />*/
	textMeasureContainer: function () {
		return this.__textMeasureContainer;
	}
	/*<EndProperty Name="System.Html.IDomWrapper Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::TextMeasureContainer()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElementConstraint Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetConstraint(System.Html.IDomRenderer, System.String)" />*/
	getConstraint: function (renderer, className) {
		var width = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, "width"), NaN);
		var minwidth = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, "min-width"), NaN);
		var maxwidth = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, "max-width"), NaN);
		var height = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, "height"), NaN);
		var minheight = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, "min-height"), NaN);
		var maxheight = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, "max-height"), NaN);
		var m = this.getEdge(renderer, className, "margin-", "");
		var b = this.getEdge(renderer, className, "border-", "-width");
		var p = this.getEdge(renderer, className, "padding-", "");
		if (m == null && $.ig.util.isNaN(width) && $.ig.util.isNaN(minwidth) && $.ig.util.isNaN(maxwidth) && $.ig.util.isNaN(height) && $.ig.util.isNaN(minheight) && $.ig.util.isNaN(maxheight)) {
			return null;
		}
		return new $.ig.VisualElementConstraint(width, minwidth, maxwidth, height, minheight, maxheight, m, b, p);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElementConstraint Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetConstraint(System.Html.IDomRenderer, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElementThickness Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetEdge(System.Html.IDomRenderer, System.String, System.String, System.String)" />*/
	getEdge: function (renderer, className, edgePrefix, edgeSuffix) {
		var left = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, edgePrefix + "left" + edgeSuffix), 0);
		var right = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, edgePrefix + "right" + edgeSuffix), 0);
		var top = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, edgePrefix + "top" + edgeSuffix), 0);
		var bottom = $.ig.SpreadsheetUtilities.prototype.convertDomExtentToPixels(renderer.getCssDefaultPropertyValue(className, edgePrefix + "bottom" + edgeSuffix), 0);
		return new $.ig.VisualElementThickness(left, top, right, bottom);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElementThickness Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetEdge(System.Html.IDomRenderer, System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetExtent(System.Html.IDomWrapper, System.String, System.Boolean, System.Boolean)" />*/
	getExtent: function (elem, className, isWidth, includeMargin) {
		elem.addClass(className);
		var extent = isWidth ? includeMargin ? elem.outerWidthWithMargin() : elem.outerWidth() : includeMargin ? elem.outerHeightWithMargin() : elem.outerHeight();
		elem.removeClass(className);
		return extent;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetExtent(System.Html.IDomWrapper, System.String, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetNaturalSize(System.Html.IDomWrapper, System.String, System.Boolean)" />*/
	getNaturalSize: function (elem, className, includeMargin) {
		elem.addClass(className);
		var w = includeMargin ? elem.outerWidthWithMargin() : elem.outerWidth();
		var h = includeMargin ? elem.outerHeightWithMargin() : elem.outerHeight();
		elem.removeClass(className);
		return new $.ig.Size(1, w, h);
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetNaturalSize(System.Html.IDomWrapper, System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetSingleLineHeight(System.String, System.String)" />*/
	getSingleLineHeight: function (spanStyle, parentFont) {
		var height;
		if (this.__singleLineHeights.containsKey(spanStyle)) {
			height = this.__singleLineHeights.item(spanStyle);
		} else {
			this.__singleLineSpan.setAttribute("style", spanStyle);
			this.__singleLineSpanContainer.setRawStyleProperty("font", parentFont);
			height = this.__singleLineSpanContainer.getProperty("scrollHeight");
			this.__singleLineHeights.item(spanStyle, height);
		}
		return height;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::GetSingleLineHeight(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::Initialize(System.Html.IDomRenderer)" />*/
	initialize: function (newContainer) {
		this.release();
		var measureDiv = newContainer.createElement("div");
		measureDiv.setAttribute("style", "display:block;position:absolute;visibility:hidden;opacity:0");
		newContainer.append(measureDiv);
		this.__measureRoot = newContainer.getSubRenderer(measureDiv);
		this.__textMeasureContainer = newContainer.createElement("div");
		this.__textMeasureContainer.setAttribute("style", "display:block;position:absolute;visibility:hidden;");
		measureDiv.append(this.__textMeasureContainer);
		this.__singleLineSpanContainer = newContainer.createElement("div");
		this.__singleLineSpanContainer.setAttribute("style", "display:block;position:absolute;visibility:hidden;white-space:nowrap;border:0;padding:0;margin:0;");
		this.__singleLineSpan = newContainer.createElement("span");
		this.__singleLineSpan.setProperty("innerHTML", "Wj");
		this.__singleLineSpanContainer.append(this.__singleLineSpan);
		measureDiv.append(this.__singleLineSpanContainer);
		this.__measureTab = newContainer.createElement("div");
		this.__measureTab.addClass(this.__spreadsheet.css.tabItem);
		this.__measureTab.addClass(this.__spreadsheet.css.tabItemSelected);
		this.__measureTab.addClass(this.__spreadsheet.css.tabItemActive);
		this.__measureTab.addClass($.ig.SpreadsheetVisualElementDomBuilder.prototype.interactiveClass);
		this.__measureTabContent = $.ig.SpreadsheetVisualElementDomBuilder.prototype.createTabItemContent(newContainer.getSubRenderer(this.__measureTab), this.__spreadsheet.css);
		this.__measureRoot.append(this.__measureTab);
		this.updateMetricsCache();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::Initialize(System.Html.IDomRenderer)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::MeasureTabItem(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Boolean)" />*/
	measureTabItem: function (tab, name, textOnly) {
		if (this.__measureTab == null) {
			return 18;
		}
		if (tab._isProtected()) {
			this.__measureTab.addClass(this.__spreadsheet.css.tabItemProtected);
		} else {
			this.__measureTab.removeClass(this.__spreadsheet.css.tabItemProtected);
		}
		$.ig.SpreadsheetVisualElementDomBuilder.prototype.initializeTabText(this.__measureTabContent, name != null ? name : tab._name());
		return textOnly ? this.__measureTabContent.outerWidthWithMargin() : this.__measureTab.outerWidthWithMargin();
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::MeasureTabItem(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::Release()" />*/
	release: function () {
		if (this.__measureRoot != null) {
			this.__measureRoot.rootWrapper().remove();
			this.__measureRoot = null;
			this.__measureTab = null;
			this.__measureTabContent = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::Release()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateBrushCache(System.Html.IDomRenderer, System.String, System.Int32, System.Int32, System.Int32, System.Boolean)" />*/
	updateBrushCache: function (renderer, className, backgroundId, foregroundId, borderId, isHorz) {
		this.updateBrushCache1(renderer, className, backgroundId, "background-color");
		this.updateBrushCache1(renderer, className, foregroundId, "color");
		this.updateBrushCache1(renderer, className, borderId, isHorz ? "border-right-color" : "border-bottom-color");
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateBrushCache(System.Html.IDomRenderer, System.String, System.Int32, System.Int32, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateBrushCache(System.Html.IDomRenderer, System.String, System.Int32, System.String)" />*/
	updateBrushCache1: function (renderer, className, id, prop) {
		if (id >= 0) {
			var brush = renderer.getCssDefaultPropertyValue(className, prop);
			if (String.isNullOrEmpty(brush)) {
				brush = $.ig.DefaultSpreadsheetColors.prototype.getDefaultColor(id).colorString();
			}
			this._resourceBrushes[id] = $.ig.Brush.prototype.create(brush);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateBrushCache(System.Html.IDomRenderer, System.String, System.Int32, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateMetricsCache()" />*/
	updateMetricsCache: function () {
		if (this.__measureRoot == null) {
			return;
		}
		var measureRoot = this.__measureRoot;
		var css = this.__spreadsheet.css;
		var metricsCache = this.__spreadsheet.__metricsCache;
		measureRoot.startCSSQuery();
		var tempElem = measureRoot.createElement("div");
		try {
			this.updateBrushCache(measureRoot, css.columnHeader, $.ig.SpreadsheetResourceId.prototype.columnHeaderBackground, $.ig.SpreadsheetResourceId.prototype.columnHeaderForeground, $.ig.SpreadsheetResourceId.prototype.columnHeaderBorder, true);
			this.updateBrushCache(measureRoot, css.columnHeaderSelected, $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedBackground, $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedForeground, $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedBorder, true);
			this.updateBrushCache(measureRoot, css.columnHeaderSelectedCells, $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsBackground, $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsForeground, $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsBorder, true);
			this.updateBrushCache(measureRoot, css.columnHeaderHover, $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackBackground, $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackForeground, $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackBorder, true);
			this.updateBrushCache(measureRoot, css.columnHeaderSelected + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.highlightClass, -1, $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackSelectedForeground, -1, true);
			this.updateBrushCache(measureRoot, css.rowHeader, $.ig.SpreadsheetResourceId.prototype.rowHeaderBackground, $.ig.SpreadsheetResourceId.prototype.rowHeaderForeground, $.ig.SpreadsheetResourceId.prototype.rowHeaderBorder, false);
			this.updateBrushCache(measureRoot, css.rowHeaderSelected, $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedBackground, $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedForeground, $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedBorder, false);
			this.updateBrushCache(measureRoot, css.rowHeaderSelectedCells, $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsBackground, $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsForeground, $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsBorder, false);
			this.updateBrushCache(measureRoot, css.rowHeaderHover, $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackBackground, $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackForeground, $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackBorder, false);
			this.updateBrushCache(measureRoot, css.rowHeaderSelected + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.highlightClass, -1, $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackSelectedForeground, -1, false);
			this.updateBrushCache(measureRoot, css.invalidData, -1, -1, $.ig.SpreadsheetResourceId.prototype.invalidDataBorder, true);
			this.updateBrushCache(measureRoot, css.automaticGridline, $.ig.SpreadsheetResourceId.prototype.automaticGridline, -1, -1, true);
			this.updateBrushCache(measureRoot, css.headerResizeLine, $.ig.SpreadsheetResourceId.prototype.resizeColumnLine, -1, -1, true);
			this.updateBrushCache(measureRoot, css.headerResizeLine, $.ig.SpreadsheetResourceId.prototype.resizeRowLine, -1, -1, false);
			this.updateBrushCache(measureRoot, css.cellSelection, $.ig.SpreadsheetResourceId.prototype.cellSelectionFill, -1, $.ig.SpreadsheetResourceId.prototype.cellSelectionInnerBorder, true);
			this.updateBrushCache1(measureRoot, css.cellSelection, $.ig.SpreadsheetResourceId.prototype.cellSelectionOuterBorder, "outline-color");
			this.updateBrushCache(measureRoot, css.cellSelectionHandle, $.ig.SpreadsheetResourceId.prototype.cellSelectionHandleFill, -1, $.ig.SpreadsheetResourceId.prototype.cellSelectionHandleBorder, true);
			this.updateBrushCache1(measureRoot, css.cellSelection + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.highlightClass, $.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorder, "outline-color");
			this._resourceBrushes[$.ig.SpreadsheetResourceId.prototype.multiSelectActiveCellBorder] = this._resourceBrushes[$.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorderInHeader] = this._resourceBrushes[$.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorder];
			measureRoot.append(tempElem);
			var disabled = " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.disabledClass;
			metricsCache._tabAreaBorderHeight = this.getExtent(tempElem, css.tabAreaBorder, false, false);
			metricsCache._splitterBarWidth = this.getExtent(tempElem, css.columnSplitter, true, false);
			metricsCache._splitterBarHeight = this.getExtent(tempElem, css.rowSplitter, false, false);
			metricsCache._splitterBarWidthDisabled = this.getExtent(tempElem, css.columnSplitter + disabled, true, false);
			metricsCache._splitterBarHeightDisabled = this.getExtent(tempElem, css.rowSplitter + disabled, false, false);
			metricsCache._tabItemAreaSplitterWidth = this.getExtent(tempElem, css.tabAreaSplitter, true, false);
			metricsCache._tabItemAreaSplitterHeight = this.getExtent(tempElem, css.tabAreaSplitter, false, false);
			metricsCache._formulaBarConstraint = this.getConstraint(measureRoot, css.formulaBar);
			metricsCache._formulaBarNameBoxAreaConstraint = this.getConstraint(measureRoot, css.nameBoxContainer);
			metricsCache._formulaBarButtonAreaConstraint = this.getConstraint(measureRoot, css.formulaBarButtonContainer);
			metricsCache._nameBoxSplitterSize = this.getNaturalSize(tempElem, css.nameBoxSplitter, true);
			metricsCache._formulaBarTextAreaSplitterSize = this.getNaturalSize(tempElem, css.formulaBarTextAreaSplitter, true);
			metricsCache._formulaBarExpandButtonSize = this.getNaturalSize(tempElem, css.formulaBarExpandButton, true);
			metricsCache._formulaBarCancelButtonSize = this.getNaturalSize(tempElem, css.formulaBarCancelButton, true);
			metricsCache._formulaBarEnterButtonSize = this.getNaturalSize(tempElem, css.formulaBarEnterButton, true);
			this.updateFormulaBarMetrics(measureRoot, css, metricsCache);
			metricsCache._scrollBarWidth = this.getExtent(tempElem, css.scrollBarVertical, true, true);
			metricsCache._scrollBarHeight = this.getExtent(tempElem, css.scrollBarHorizontal, false, true);
			metricsCache._horizontalScrollBarConstraint = this.getConstraint(measureRoot, css.scrollBarHorizontal);
			metricsCache._verticalScrollBarConstraint = this.getConstraint(measureRoot, css.scrollBarVertical);
			metricsCache._hScrollFarButtonWidth = this.getExtent(tempElem, css.scrollBarArrowRight, true, false);
			metricsCache._hScrollNearButtonWidth = this.getExtent(tempElem, css.scrollBarArrowLeft, true, false);
			metricsCache._vScrollFarButtonHeight = this.getExtent(tempElem, css.scrollBarArrowDown, false, false);
			metricsCache._vScrollNearButtonHeight = this.getExtent(tempElem, css.scrollBarArrowUp, false, false);
			metricsCache._tabScrollPreviousWidth = this.getExtent(tempElem, css.scrollPreviousTabButton, true, false);
			metricsCache._tabScrollPreviousHeight = this.getExtent(tempElem, css.scrollPreviousTabButton, false, false);
			metricsCache._tabScrollNextWidth = this.getExtent(tempElem, css.scrollNextTabButton, true, false);
			metricsCache._tabScrollNextHeight = this.getExtent(tempElem, css.scrollNextTabButton, false, false);
			metricsCache._tabScrollFirstWidth = this.getExtent(tempElem, css.scrollFirstTabButton, true, false);
			metricsCache._tabScrollFirstHeight = this.getExtent(tempElem, css.scrollFirstTabButton, false, false);
			metricsCache._tabScrollLastWidth = this.getExtent(tempElem, css.scrollLastTabButton, true, false);
			metricsCache._tabScrollLastHeight = this.getExtent(tempElem, css.scrollLastTabButton, false, false);
			metricsCache._activatePrevTabWidth = this.getExtent(tempElem, css.activatePreviousHiddenTabButton, true, false);
			metricsCache._activatePrevTabHeight = this.getExtent(tempElem, css.activatePreviousHiddenTabButton, false, false);
			metricsCache._activateNextTabWidth = this.getExtent(tempElem, css.activateNextHiddenTabButton, true, false);
			metricsCache._activateNextTabHeight = this.getExtent(tempElem, css.activateNextHiddenTabButton, false, false);
			metricsCache._addWorksheetWidth = this.getExtent(tempElem, css.addNewWorksheetButton, true, false);
			metricsCache._addWorksheetHeight = this.getExtent(tempElem, css.addNewWorksheetButton, false, false);
		}
		finally {
			tempElem.remove();
			measureRoot.endCSSQuery();
		}
		$.ig.SpreadsheetVisualElementDomBuilder.prototype.initializeTabText(this.__measureTabContent, "Wj");
		var tabClasses = [ "", $.ig.SpreadsheetVisualElementDomBuilder.prototype.hoverClass, $.ig.SpreadsheetVisualElementDomBuilder.prototype.activeClass, $.ig.SpreadsheetVisualElementDomBuilder.prototype.activeClass + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.hoverClass, css.tabItemProtected, css.tabItemProtected + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.hoverClass, css.tabItemProtected + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.activeClass, css.tabItemProtected + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.activeClass + " " + $.ig.SpreadsheetVisualElementDomBuilder.prototype.hoverClass ];
		var originalTabClass = this.__measureTab.getAttribute("class");
		var tabHeight = 0;
		for (var i = 0; i < tabClasses.length; i++) {
			var tabClass = tabClasses[i];
			if (i > 0) {
				this.__measureTab.addClass(tabClasses[i]);
			}
			tabHeight = Math.max(this.__measureTab.outerHeightWithMargin(), tabHeight);
			if (i > 0) {
				this.__measureTab.removeClass(tabClasses[i]);
			}
		}
		this.__measureTab.setAttribute("class", originalTabClass);
		metricsCache._tabHeight = tabHeight;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateMetricsCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateFormulaBarMetrics(System.Html.IDomRenderer, Infragistics.Controls.Grids.Core.SpreadsheetCss, Infragistics.Controls.Grids.Core.SpreadsheetMetricsCache)" />*/
	updateFormulaBarMetrics: function (measureRoot, css, metricsCache) {
		var measureStack = new $.ig.SpreadsheetMeasureHelper_MeasureStack(measureRoot);
		var fb = measureStack.push1("div", css.formulaBar);
		var tac = measureStack.push1("div", css.formulaBarTextAreaContainer);
		var ta = measureStack.push1("textarea", null).rootWrapper();
		$.ig.SpreadsheetVisualElementDomBuilder.prototype.initializeFormulaTextArea(ta);
		ta.setProperty("rows", 1);
		ta.setProperty("value", "Wj");
		this.__spreadsheet.__metricsCache._formulaBarTextBox1LineHeight = ta.getProperty("scrollHeight");
		ta.setProperty("rows", 2);
		ta.setProperty("value", "Wj\r\nWj");
		this.__spreadsheet.__metricsCache._formulaBarTextBox2LineHeight = ta.getProperty("scrollHeight");
		ta.setProperty("rows", 3);
		ta.setProperty("value", "Wj\r\nWj\r\nWj");
		this.__spreadsheet.__metricsCache._formulaBarTextBox3LineHeight = ta.getProperty("scrollHeight");
		measureStack.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper::UpdateFormulaBarMetrics(System.Html.IDomRenderer, Infragistics.Controls.Grids.Core.SpreadsheetCss, Infragistics.Controls.Grids.Core.SpreadsheetMetricsCache)" />*/
	,
	$type: new $.ig.Type('SpreadsheetMeasureHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack" />*/

$.ig.util.defType('SpreadsheetMeasureHelper_MeasureStack', 'Object', {
	__rendererStack: null,
	init: function (renderer) {
		$.ig.Object.prototype.init.call(this);
		this.__rendererStack = new $.ig.Stack$1($.ig.DomRenderer.prototype.$type);
		this.__rendererStack.push(renderer);
	},
	/*<BeginProperty Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Current()" />*/
	current: function () {
		return this.__rendererStack.peek();
	}
	/*<EndProperty Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Current()" />*/
	,
	/*<BeginMethod Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Push(System.String, System.String)" />*/
	push1: function (elementType, className) {
		var elem = this.current().createElement(elementType);
		if (className != null) {
			elem.addClass(className);
		}
		return this.push(elem);
	}
	/*<EndMethod Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Push(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Dispose()" />*/
	dispose: function () {
		while (this.__rendererStack.count() > 2) {
			this.__rendererStack.pop();
		}
		if (this.__rendererStack.count() > 1) {
			var root = this.__rendererStack.pop();
			root.rootWrapper().remove();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Push(System.Html.IDomWrapper)" />*/
	push: function (element) {
		this.current().append(element);
		this.__rendererStack.push(this.current().getSubRenderer(element));
		return this.current();
	}
	/*<EndMethod Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Push(System.Html.IDomWrapper)" />*/
	,
	/*<BeginMethod Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Pop()" />*/
	pop: function () {
		var last = this.__rendererStack.pop();
		last.rootWrapper().remove();
		return this.current();
	}
	/*<EndMethod Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack::Pop()" />*/
	,
	$type: new $.ig.Type('SpreadsheetMeasureHelper_MeasureStack', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper_MeasureStack" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ISpreadsheetView" />*/

$.ig.util.defType('ISpreadsheetView', 'Object', {
	$type: new $.ig.Type('ISpreadsheetView', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ISpreadsheetView" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetView" />*/

$.ig.util.defType('SpreadsheetView', 'Object', {
	__spreadsheet: null,
	init: function (spreadsheet) {
		$.ig.Object.prototype.init.call(this);
		this.__spreadsheet = spreadsheet;
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetView::CreateRenderCache()" />*/
	createRenderCache: function () {
		return new $.ig.JsSpreadsheetRenderCache(this.__spreadsheet);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetView::CreateRenderCache()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::HasKeyboardFocusWithin()" />*/
	hasKeyboardFocusWithin: function () {
		return $.ig.SpreadsheetUtilities.prototype.contains(this.__spreadsheet._element(), document.activeElement);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::HasKeyboardFocusWithin()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::IsInNameBox()" />*/
	isInNameBox: function () {
		if (this.__spreadsheet._element() != null) {
			return $.ig.SpreadsheetUtilities.prototype.contains(this.__spreadsheet._element()._formulaBar._nameBoxArea, document.activeElement);
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::IsInNameBox()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::IsScrollLockToggled()" />*/
	isScrollLockToggled: function () {
		return this.__spreadsheet.isScrollLocked();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::IsScrollLockToggled()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellUpdateMode Infragistics.Controls.Grids.Core.SpreadsheetView::UpdateEditorValueMode()" />*/
	updateEditorValueMode: function () {
		return $.ig.SpreadsheetActiveCellUpdateMode.prototype.synchronous;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellUpdateMode Infragistics.Controls.Grids.Core.SpreadsheetView::UpdateEditorValueMode()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::AddCellTextLocations(System.Collections.Generic.Dictionary, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	addCellTextLocations: function (cellTextLocations, pane) {
		var paneContainer = $.ig.util.cast($.ig.PaneLayerContainer.prototype.$type, pane._panel());
		if (paneContainer != null) {
			var containerElem = paneContainer._element;
			for (var i = 0, iCount = containerElem.childrenCount(); i < iCount; i++) {
				var child = containerElem.getChild(i);
				if (child._id == $.ig.SpreadsheetElementIds.prototype.cellValueLayer) {
					var cellValueCount = child.childrenCount();
					for (var j = 0, jCount = child.childrenCount(); j < jCount; j++) {
						var cellLayerChild = child.getChild(j);
						if (cellLayerChild._id == $.ig.SpreadsheetElementIds.prototype.cellValue) {
							var cellValueElem = cellLayerChild;
							var rect = new $.ig.Rect(0, cellValueElem._contentLeft + cellValueElem._left, cellValueElem._contentTop + cellValueElem._top, cellValueElem._contentWidth, cellValueElem._contentHeight);
							cellTextLocations.item(new $.ig.spreadsheet.SpreadsheetCell(cellValueElem.cellValueInfo()._startRowIndex, cellValueElem.cellValueInfo()._startColumnIndex), rect);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::AddCellTextLocations(System.Collections.Generic.Dictionary, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::CloseMenu()" />*/
	closeMenu: function () {
		this.__spreadsheet._closeContextMenu();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::CloseMenu()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.SpreadsheetView::CreateCellEditManager()" />*/
	createCellEditManager: function () {
		return new $.ig.JsCellEditManager(this.__spreadsheet);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.SpreadsheetView::CreateCellEditManager()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager Infragistics.Controls.Grids.Core.SpreadsheetView::CreateTabEditManager()" />*/
	createTabEditManager: function () {
		return new $.ig.JsTabEditManager(this.__spreadsheet);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager Infragistics.Controls.Grids.Core.SpreadsheetView::CreateTabEditManager()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::Focus()" />*/
	focus: function () {
		if (this.__spreadsheet._element() != null && this.__spreadsheet._element()._platformObject != null) {
			this.__spreadsheet._element()._platformObject.rootWrapper().focus();
			return true;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::Focus()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager Infragistics.Controls.Grids.Core.SpreadsheetView::GetLayoutManager()" />*/
	getLayoutManager: function () {
		return this.__spreadsheet._spreadsheetAreaLayoutManager();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager Infragistics.Controls.Grids.Core.SpreadsheetView::GetLayoutManager()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::NotifyCanExecuteChanged()" />*/
	notifyCanExecuteChanged: function () {
		this.__spreadsheet.scheduleArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::NotifyCanExecuteChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnDataObjectPasting(Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs)" />*/
	onDataObjectPasting: function (args) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnDataObjectPasting(Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnHasPendingChangeNotification()" />*/
	onHasPendingChangeNotification: function () {
		this.__spreadsheet.scheduleArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnHasPendingChangeNotification()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnNameBoxValueChanged()" />*/
	onNameBoxValueChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnNameBoxValueChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnNameBoxWidthChanged()" />*/
	onNameBoxWidthChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnNameBoxWidthChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnSheetManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	onSheetManagerChanged: function (oldValue, newValue) {
		if (this.__spreadsheet._spreadsheetAreaLayoutManager() != null) {
			(this.__spreadsheet._spreadsheetAreaLayoutManager())._isMeasureValid = false;
			(this.__spreadsheet._spreadsheetAreaLayoutManager())._isArrangeValid = false;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnSheetManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnStateVerified()" />*/
	onStateVerified: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::OnStateVerified()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::RemeasureRootPanel()" />*/
	remeasureRootPanel: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::RemeasureRootPanel()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::ShouldIncludeClipboardFormat(System.Windows.IDataObject, System.String)" />*/
	shouldIncludeClipboardFormat: function (dataObject, dataFormat) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::ShouldIncludeClipboardFormat(System.Windows.IDataObject, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::ShouldCopyToClipboard(System.Windows.IDataObject, System.Boolean)" />*/
	shouldCopyToClipboard: function (dataObject, isDragDrop) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::ShouldCopyToClipboard(System.Windows.IDataObject, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowSelectAllContextMenu(System.Object, System.Windows.Point)" />*/
	showSelectAllContextMenu: function (context, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
		this.__spreadsheet._showContextMenu($.ig.SpreadsheetContextMenuArea.prototype.selectAllButton, context, relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowSelectAllContextMenu(System.Object, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea, System.Windows.Point)" />*/
	ShowPaneContextMenu: function (pane, area, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
		var elem = this.__spreadsheet._getPaneElement(pane);
		this.__spreadsheet._showContextMenu(area, elem, relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Windows.Point)" />*/
	ShowHeaderContextMenu: function (scrollRegion, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
		var area = scrollRegion._isRowHeader() ? $.ig.SpreadsheetContextMenuArea.prototype.row : $.ig.SpreadsheetContextMenuArea.prototype.column;
		var elem = this.__spreadsheet._getScrollRegion(scrollRegion);
		this.__spreadsheet._showContextMenu(area, elem, relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Windows.Point)" />*/
	ShowTabContextMenu: function (tab, point) {
		point = $.ig.util.pointFromLiteral(point);
		this.__spreadsheet._showContextMenu($.ig.SpreadsheetContextMenuArea.prototype.tab, tab._element(), point);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.MessageBoxResult Infragistics.Controls.Grids.Core.SpreadsheetView::ShowMessageBox(System.String, System.String, System.Windows.MessageBoxButton, System.Windows.MessageBoxImage, System.Windows.MessageBoxResult)" />*/
	showMessageBox: function (message, caption, buttons, icon, defaultResult) {
		switch (buttons) {
			case $.ig.MessageBoxButton.prototype.oK:
				{
					window.alert(message);
					return defaultResult;
				}
			case $.ig.MessageBoxButton.prototype.oKCancel:
				{
					return window.confirm(message) ? $.ig.MessageBoxResult.prototype.oK : $.ig.MessageBoxResult.prototype.cancel;
				}
			case $.ig.MessageBoxButton.prototype.yesNo:
				{
					return window.confirm(message) ? $.ig.MessageBoxResult.prototype.yes : $.ig.MessageBoxResult.prototype.no;
				}
			case $.ig.MessageBoxButton.prototype.yesNoCancel:
				{
					return window.confirm(message) ? $.ig.MessageBoxResult.prototype.yes : $.ig.MessageBoxResult.prototype.cancel;
				}
		}
		return defaultResult;
	}
	/*<EndMethod Name="System.Windows.MessageBoxResult Infragistics.Controls.Grids.Core.SpreadsheetView::ShowMessageBox(System.String, System.String, System.Windows.MessageBoxButton, System.Windows.MessageBoxImage, System.Windows.MessageBoxResult)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::UsesLogicalPixels()" />*/
	usesLogicalPixels: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetView::UsesLogicalPixels()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::VerifyLayout()" />*/
	verifyLayout: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetView::VerifyLayout()" />*/
	,
	$type: new $.ig.Type('SpreadsheetView', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetView.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetView" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager" />*/

$.ig.util.defType('SpreadsheetAreaLayoutManager', 'Object', {
	__spreadsheet: null,
	__sheetPaneManager: null,
	__layoutListener: null,
	__rowInfo: null,
	__columnInfo: null,
	__paneInfos: null,
	__actualHorizontalScrollAreaHeight: 0,
	__tabManager: null,
	__initialDragOffset: null,
	__availableWidthForTabItemAreaDrag: 0,
	__dragType: 0,
	__dragPointX: 0,
	__dragPointY: 0,
	__splitterPreviewValidDragRect: null,
	__paneAreaRect: null,
	__pixelConverter: null,
	__lastAvailableTabAreaWidth: 0,
	__disabledVerticalScrollBar: null,
	__disabledHorizontalScrollBar: null,
	__lastMeasureSize: null,
	__rectWithinTabsAndScrollbars: null,
	__splitterDragStartTimer: null,
	__splitterDragType: 0,
	init: function () {
		this.__rowInfo = new $.ig.SpreadsheetAreaLayoutManager_RowColumnInfo(true);
		this.__columnInfo = new $.ig.SpreadsheetAreaLayoutManager_RowColumnInfo(false);
		this.__lastMeasureSize = new $.ig.Size();
		$.ig.Object.prototype.init.call(this);
		this.__layoutListener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetAreaLayoutManager.prototype.$type, this, $.ig.SpreadsheetAreaLayoutManager.prototype.onSubObjectPropertyChanged, false);
		this.__paneInfos = new $.ig.List$1($.ig.SpreadsheetAreaLayoutManager_SheetLayerInfo$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type), 0);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ColumnInfo()" />*/
	columnInfo: function () {
		return this.__columnInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ColumnInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CurrentDragType()" />*/
	currentDragType: function () {
		return this.__dragType;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CurrentDragType()" />*/
	,
	/*<BeginProperty Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::LastMeasureSize()" />*/
	lastMeasureSize: function () {
		return this.__lastMeasureSize;
	}
	/*<EndProperty Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::LastMeasureSize()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PaneInfos()" />*/
	paneInfos: function () {
		return this.__paneInfos;
	}
	/*<EndProperty Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PaneInfos()" />*/
	,
	/*<BeginProperty Name="Infragistics.PixelConverter Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PixelConverter()" />*/
	pixelConverter: function (value) {
		if (arguments.length === 1) {
			this.__pixelConverter = value;
			return value;
		} else {
			return this.__pixelConverter;
		}
	}
	/*<EndProperty Name="Infragistics.PixelConverter Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PixelConverter()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RectWithinTabsAndScrollbars()" />*/
	rectWithinTabsAndScrollbars: function () {
		return this.__rectWithinTabsAndScrollbars;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RectWithinTabsAndScrollbars()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RowInfo()" />*/
	rowInfo: function () {
		return this.__rowInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RowInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::SheetPaneManager()" />*/
	sheetPaneManager: function (value) {
		if (arguments.length === 1) {
			if (value != this.__sheetPaneManager) {
				var old = this.__sheetPaneManager;
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetPaneManager.prototype.$type, this.__sheetPaneManager, value, this.__layoutListener, true);
				this.__sheetPaneManager = $ret.p0;
				if (this.__sheetPaneManager != null) {
					this.__columnInfo._items = this.__sheetPaneManager._columnItems();
					this.__rowInfo._items = this.__sheetPaneManager._rowItems();
				} else {
					this.__rowInfo._items = this.__columnInfo._items = new Array(0);
				}
				this.initializeInputMessageControl();
				this.onSheetPaneManagerChanged(old, value);
			}
			return value;
		} else {
			return this.__sheetPaneManager;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::SheetPaneManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::Spreadsheet()" />*/
	spreadsheet: function (value) {
		if (arguments.length === 1) {
			if (value != this.__spreadsheet) {
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.Spreadsheet.prototype.$type, this.__spreadsheet, value, this.__layoutListener, true);
				this.__spreadsheet = $ret.p0;
				this.sheetPaneManager(this.__spreadsheet != null ? this.__spreadsheet._sheetManager() : null);
				this.tabManager(this.__spreadsheet != null ? this.__spreadsheet._tabManager() : null);
			}
			return value;
		} else {
			return this.__spreadsheet;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::Spreadsheet()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TabManager()" />*/
	tabManager: function (value) {
		if (arguments.length === 1) {
			if (value != this.__tabManager) {
				var oldValue = this.__tabManager;
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetTabManager.prototype.$type, this.__tabManager, value, this.__layoutListener, true);
				this.__tabManager = $ret.p0;
				this.onTabManagerChanged(oldValue, value);
			}
			return value;
		} else {
			return this.__tabManager;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TabManager()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ZoomLevel()" />*/
	zoomLevel: function () {
		return this.__sheetPaneManager != null ? this.__sheetPaneManager._zoomLevel() : 1;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ZoomLevel()" />*/
	,
	__hasInPlaceEditor: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateInPlaceEditor()" />*/
	createInPlaceEditor: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateInPlaceEditor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveInPlaceEditor()" />*/
	removeInPlaceEditor: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveInPlaceEditor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInPlaceEditor(System.Windows.Size)" />*/
	measureInPlaceEditor: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInPlaceEditor(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInPlaceEditor(System.Windows.Rect, System.Windows.Rect)" />*/
	arrangeInPlaceEditor: function (rect, paneAreaClipRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInPlaceEditor(System.Windows.Rect, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredInPlaceEditorHeight()" />*/
	getPreferredInPlaceEditorHeight: function () {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredInPlaceEditorHeight()" />*/
	,
	__hasInPlaceEditorBackground: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateInPlaceEditorBackground()" />*/
	createInPlaceEditorBackground: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateInPlaceEditorBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveInPlaceEditorBackground()" />*/
	removeInPlaceEditorBackground: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveInPlaceEditorBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInPlaceEditorBackground(System.Windows.Size)" />*/
	measureInPlaceEditorBackground: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInPlaceEditorBackground(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInPlaceEditorBackground(System.Windows.Rect, System.Windows.Rect)" />*/
	arrangeInPlaceEditorBackground: function (backgroundRect, paneAreaClipRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInPlaceEditorBackground(System.Windows.Rect, System.Windows.Rect)" />*/
	,
	__hasInputMessageControl: false,
	__isInputMessageControlVisible: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateInputMessageControl()" />*/
	createInputMessageControl: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveInputMessageControl()" />*/
	removeInputMessageControl: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInputMessageControl(System.Windows.Rect)" />*/
	arrangeInputMessageControl: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInputMessageControl(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInputMessageControl(System.Windows.Size)" />*/
	measureInputMessageControl: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInputMessageControl(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::HideInputMessageControl()" />*/
	hideInputMessageControl: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::HideInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ShowInputMessageControl(System.String, System.String)" />*/
	showInputMessageControl: function (message, title) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ShowInputMessageControl(System.String, System.String)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredInputMessageControlWidth()" />*/
	preferredInputMessageControlWidth: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredInputMessageControlWidth()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredInputMessageControlHeight()" />*/
	preferredInputMessageControlHeight: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredInputMessageControlHeight()" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetRelativeLayerBounds`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	getRelativeLayerBounds$1: function ($t, layerContainer) {
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetRelativeLayerBounds`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateHeaderLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	createHeaderLayerContainer: function (scrollRegion) {
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateHeaderLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreatePaneLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	createPaneLayerContainer: function (pane) {
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreatePaneLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnLayerContainerRemoved`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	onLayerContainerRemoved$1: function ($t, layerContainer) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnLayerContainerRemoved`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Size)" />*/
	measureLayerContainer$1: function ($t, layerContainer, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Rect)" />*/
	arrangeLayerContainer$1: function ($t, layerContainer, rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateScrollBar(Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	createScrollBar: function (orientation) {
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateScrollBar(Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	removeScrollBar: function (scrollBar) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo)" />*/
	initializeScrollBar: function (scrollBar, scrollInfo) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Rect)" />*/
	arrangeScrollBar: function (scrollBar, rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Size)" />*/
	measureScrollBar: function (scrollBar, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredScrollBarWidth(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	getPreferredScrollBarWidth: function (scrollBar) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredScrollBarWidth(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredScrollBarHeight(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	getPreferredScrollBarHeight: function (scrollBar) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredScrollBarHeight(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	__hasSelectAllButton: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSelectAllButton()" />*/
	createSelectAllButton: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSelectAllButton()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSelectAllButton()" />*/
	removeSelectAllButton: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSelectAllButton()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSelectAllButton(System.Windows.Rect)" />*/
	arrangeSelectAllButton: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSelectAllButton(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSelectAllButton(System.Windows.Size)" />*/
	measureSelectAllButton: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSelectAllButton(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InvalidateSelectAllButton()" />*/
	invalidateSelectAllButton: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InvalidateSelectAllButton()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeSplitter(System.Boolean, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	initializeSplitter: function (isRow, isEnabled, regionBefore, regionAfter) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeSplitter(System.Boolean, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSplitter(System.Boolean)" />*/
	createSplitter: function (isRow) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSplitter(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSplitter(System.Boolean)" />*/
	removeSplitter: function (isRow) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSplitter(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSplitter(System.Boolean, System.Windows.Rect)" />*/
	arrangeSplitter: function (isRow, rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSplitter(System.Boolean, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitter(System.Boolean, System.Windows.Size)" />*/
	measureSplitter1: function (isRow, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitter(System.Boolean, System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredSplitterThickness(System.Boolean)" />*/
	getPreferredSplitterThickness: function (isRow) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetPreferredSplitterThickness(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSplitterPreview(System.Boolean)" />*/
	createSplitterPreview: function (isRow) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSplitterPreview(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSplitterPreview(System.Boolean)" />*/
	removeSplitterPreview: function (isRow) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSplitterPreview(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSplitterPreview(System.Boolean, System.Windows.Rect)" />*/
	arrangeSplitterPreview: function (isRow, rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSplitterPreview(System.Boolean, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitterPreview(System.Boolean, System.Windows.Size)" />*/
	measureSplitterPreview: function (isRow, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitterPreview(System.Boolean, System.Windows.Size)" />*/
	,
	__hasSplitterIntersection: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeSplitterIntersectionRect(System.Windows.Rect)" />*/
	initializeSplitterIntersectionRect: function (intersectionRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeSplitterIntersectionRect(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSplitterIntersection()" />*/
	createSplitterIntersection: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateSplitterIntersection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSplitterIntersection()" />*/
	removeSplitterIntersection: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveSplitterIntersection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSplitterIntersection(System.Windows.Rect)" />*/
	arrangeSplitterIntersection: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeSplitterIntersection(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitterIntersection(System.Windows.Size)" />*/
	measureSplitterIntersection: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitterIntersection(System.Windows.Size)" />*/
	,
	__hasTabItemArea: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabItemArea()" />*/
	createTabItemArea: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabItemArea()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabItemArea()" />*/
	removeTabItemArea: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabItemArea()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabItemArea(System.Windows.Rect)" />*/
	arrangeTabItemArea: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabItemArea(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabItemArea(System.Windows.Size)" />*/
	measureTabItemArea: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabItemArea(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaHeight()" />*/
	preferredTabItemAreaHeight: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaWidth()" />*/
	preferredTabItemAreaWidth: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaWidth()" />*/
	,
	__hasTabItemAreaSplitter: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabItemAreaSplitter()" />*/
	createTabItemAreaSplitter: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabItemAreaSplitter()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabItemAreaSplitter()" />*/
	removeTabItemAreaSplitter: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabItemAreaSplitter()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabItemAreaSplitter(System.Windows.Rect)" />*/
	arrangeTabItemAreaSplitter: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabItemAreaSplitter(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabItemAreaSplitter(System.Windows.Size)" />*/
	measureTabItemAreaSplitter: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabItemAreaSplitter(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterHeight()" />*/
	preferredTabItemAreaSplitterHeight: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterWidth()" />*/
	preferredTabItemAreaSplitterWidth: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterWidth()" />*/
	,
	__hasTabAreaBackground: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabAreaBackground()" />*/
	createTabAreaBackground: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabAreaBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabAreaBackground()" />*/
	removeTabAreaBackground: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabAreaBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabAreaBackground(System.Windows.Rect)" />*/
	arrangeTabAreaBackground: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabAreaBackground(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabAreaBackground(System.Windows.Size)" />*/
	measureTabAreaBackground: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabAreaBackground(System.Windows.Size)" />*/
	,
	__hasTabAreaBorder: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabAreaBorder()" />*/
	createTabAreaBorder: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CreateTabAreaBorder()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabAreaBorder()" />*/
	removeTabAreaBorder: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveTabAreaBorder()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabAreaBorder(System.Windows.Rect)" />*/
	arrangeTabAreaBorder: function (rect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeTabAreaBorder(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabAreaBorder(System.Windows.Size)" />*/
	measureTabAreaBorder: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureTabAreaBorder(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabAreaBorderHeight()" />*/
	preferredTabAreaBorderHeight: function () {
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::PreferredTabAreaBorderHeight()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	onTabManagerChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSheetPaneManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	onSheetPaneManagerChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSheetPaneManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InvalidateArrange()" />*/
	invalidateArrange: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InvalidateArrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CancelElementDragOverride()" />*/
	cancelElementDragOverride: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CancelElementDragOverride()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartDragOverride(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	startDragOverride: function (cursor) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartDragOverride(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	transformPointFromPanel: function (paneLayer, panelPoint) {
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	transformPointFromPanel1: function (paneLayer, panelPoint) {
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformBoundsToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Rect)" />*/
	transformBoundsToPanel: function (paneLayer, panelBounds) {
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformBoundsToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	transformPointToPanel: function (paneLayer, panelPoint) {
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointFromControl(System.Windows.Point)" />*/
	transformPointFromControl: function (controlRelativePoint) {
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::TransformPointFromControl(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::AdjustEditorHorizontalForAlignment(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	adjustEditorHorizontalForAlignment: function (pane, zoom, availableWidth, preferredWidth, pixelSize, x, xEnd) {
		var originalX = x;
		var originalXEnd = xEnd;
		var availableWidthUnzoomed = availableWidth / zoom;
		var cellInfo = this.__spreadsheet._cellEditManager().editInfo();
		var wrap = cellInfo._valueInfo._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.distributed ? cellInfo._valueInfo.wrapText() : cellInfo._valueInfo.computedWrapText();
		if (wrap) {
			return {
				p5: x,
				p6: xEnd
			};
		}
		switch (cellInfo._valueInfo._horizontalAlignment) {
			case $.ig.excel.HorizontalCellAlignment.justify: break;
			case $.ig.excel.HorizontalCellAlignment.left:
			case $.ig.excel.HorizontalCellAlignment.fill:
				{
					if (x + preferredWidth > xEnd) {
						xEnd = x + preferredWidth;
						var newXItem = pane.columnScrollRegion()._getItemFromRelativeOffset(xEnd);
						xEnd = pane.columnScrollRegion()._getRelativeOffset1(newXItem._index(), false, true);
					}
					break;
				}
			case $.ig.excel.HorizontalCellAlignment.right:
				{
					x = Math.max(Math.min(x, xEnd - preferredWidth), 0);
					if (originalX > x) {
						var newXItem1 = pane.columnScrollRegion()._getItemFromRelativeOffset(x);
						x = Math.max(pane.columnScrollRegion()._getRelativeOffset1(newXItem1._index(), true, true), 0);
					}
					break;
				}
			case $.ig.excel.HorizontalCellAlignment.center:
			case $.ig.excel.HorizontalCellAlignment.distributed:
			case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
				{
					if (xEnd - x < preferredWidth) {
						var center = (xEnd - x) / 2 + x;
						var width = Math.min(preferredWidth, availableWidthUnzoomed);
						if (x > center - width / 2) {
							x = center - width / 2;
							xEnd = center + (width / 2);
							var farExcess = xEnd - availableWidthUnzoomed;
							var nearExcess = 0 - x;
							var excess = Math.max(farExcess, nearExcess);
							if (excess > 0) {
								x += excess;
								xEnd -= excess;
							}
							var nearXItem = pane.columnScrollRegion()._getItemFromRelativeOffset(x);
							var nearStart = pane.columnScrollRegion()._getRelativeOffset1(nearXItem._index(), true, true);
							var farXItem = pane.columnScrollRegion()._getItemFromRelativeOffset(xEnd - pixelSize);
							var farEnd = pane.columnScrollRegion()._getRelativeOffset1(farXItem._index(), false, true);
							var nearStartDelta = center - nearStart;
							var farEndDelta = farEnd - center;
							var delta = Math.min(nearStartDelta, farEndDelta);
							x = center - delta;
							xEnd = center + delta;
						}
					}
					break;
				}
		}
		return {
			p5: x,
			p6: xEnd
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::AdjustEditorHorizontalForAlignment(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnBeforeArrange(System.Windows.Size)" />*/
	onBeforeArrange: function (finalSize) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnBeforeArrange(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::Arrange(System.Windows.Size)" />*/
	arrange: function (finalSize) {
		var $self = this;
		this.onBeforeArrange(finalSize);
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("Spreadsheet_ArrangeStart");
		var arrangeSize = finalSize;
		var availableRect = new $.ig.Rect(0, 0, 0, finalSize.width(), finalSize.height());
		var vertScrollWidth = this.__rowInfo._scrollBarThickness;
		var horzScrollHeight = this.__actualHorizontalScrollAreaHeight;
		var tabAreaWidth = 0;
		if (this.__hasTabItemArea) {
			var splitWidth, availableTabArea;
			var tabItemAreaWidth = (function () { var $ret = $self.calculateTabAreaWidth1(Math.max(finalSize.width() - vertScrollWidth, 0), splitWidth, availableTabArea); splitWidth = $ret.p1; availableTabArea = $ret.p2; return $ret.ret; }());
			if (this.__hasTabItemAreaSplitter) {
				this.arrangeTabItemAreaSplitter(new $.ig.Rect(0, tabItemAreaWidth, finalSize.height() - horzScrollHeight, splitWidth, horzScrollHeight));
			}
			this.arrangeTabItemArea(new $.ig.Rect(0, 0, finalSize.height() - horzScrollHeight, Math.min(tabItemAreaWidth, this.preferredTabItemAreaWidth()), horzScrollHeight));
			tabAreaWidth = tabItemAreaWidth + splitWidth;
			if (this.__hasTabAreaBorder) {
				this.arrangeTabAreaBorder(new $.ig.Rect(0, 0, finalSize.height() - horzScrollHeight, finalSize.width() - vertScrollWidth, this.preferredTabAreaBorderHeight()));
			}
			if (this.__hasTabAreaBackground) {
				this.arrangeTabAreaBackground(new $.ig.Rect(0, 0, finalSize.height() - horzScrollHeight, finalSize.width(), horzScrollHeight));
			}
		}
		if (this.__rowInfo._scrollCoordinator != null) {
			this.arrangeScrollBars(this.__rowInfo, true, this.__columnInfo._headerAreaExtent, finalSize, vertScrollWidth, 0, this.__disabledVerticalScrollBar, this.__actualHorizontalScrollAreaHeight);
			availableRect.width(Math.max(availableRect.width() - vertScrollWidth, 0));
		}
		if (this.__columnInfo._scrollCoordinator != null) {
			$.ig.Debug.prototype.assert(horzScrollHeight >= this.__columnInfo._scrollBarThickness);
			this.arrangeScrollBars(this.__columnInfo, false, this.__rowInfo._headerAreaExtent, finalSize, horzScrollHeight, tabAreaWidth, this.__disabledHorizontalScrollBar, this.__columnInfo._scrollBarThickness);
		}
		availableRect.height(Math.max(availableRect.height() - horzScrollHeight, 0));
		this.__rectWithinTabsAndScrollbars = $.ig.SpreadsheetUtilities.prototype.copy(availableRect);
		var $ret = this.arrangeHeaders(this.__rowInfo, $.ig.SpreadsheetUtilities.prototype.createPoint(availableRect.x(), availableRect.y() + this.__columnInfo._headerAreaExtent), availableRect);
		availableRect = $ret.p2;
		var $ret1 = this.arrangeHeaders(this.__columnInfo, $.ig.SpreadsheetUtilities.prototype.createPoint(availableRect.x(), availableRect.y()), availableRect);
		availableRect = $ret1.p2;
		if (this.__hasSelectAllButton) {
			var headerIntersectionRect = new $.ig.Rect(0, availableRect.x() - this.__rowInfo._headerPanelExtent, availableRect.y() - this.__columnInfo._headerPanelExtent, this.__rowInfo._headerPanelExtent, this.__columnInfo._headerPanelExtent);
			this.arrangeSelectAllButton(headerIntersectionRect);
		}
		var SplitterDragBuffer = 30;
		var splitterPreviewInvalidRect = new $.ig.Rect(0, availableRect.x() - this.__rowInfo._headerPanelExtent, availableRect.y() - this.__columnInfo._headerPanelExtent, availableRect.width() + this.__rowInfo._headerPanelExtent + vertScrollWidth, availableRect.height() + this.__columnInfo._headerPanelExtent + horzScrollHeight);
		splitterPreviewInvalidRect.inflate(SplitterDragBuffer, SplitterDragBuffer);
		this.__splitterPreviewValidDragRect = splitterPreviewInvalidRect;
		var rowSplitterRect = $.ig.Rect.prototype.empty();
		if (this.__rowInfo._hasSplitter) {
			rowSplitterRect = new $.ig.Rect(0, availableRect.x() - this.__rowInfo._headerPanelExtent, availableRect.y() + this.__sheetPaneManager._rows().item(0).actualExtent(), availableRect.width() + this.__rowInfo._headerPanelExtent, this.__sheetPaneManager._splitterHeight());
			var splitterPreviewRect = $.ig.SpreadsheetUtilities.prototype.copy(rowSplitterRect);
			if (!this.__rowInfo._items.item(0).isFrozen()) {
				rowSplitterRect.width(rowSplitterRect.width() + vertScrollWidth);
			}
			if ($.ig.CoreUtilities.prototype.greaterThanOrClose(rowSplitterRect.top(), availableRect.bottom())) {
				rowSplitterRect.height(0);
			}
			this.arrangeSplitter(true, rowSplitterRect);
			if (this.__rowInfo._hasSplitterPreview) {
				var previewRect = new $.ig.Rect(0, splitterPreviewRect.x(), this.__dragPointY - splitterPreviewRect.height() / 2, splitterPreviewRect.width(), splitterPreviewRect.height());
				if (this.__columnInfo._hasSplitterPreview) {
					if (this.__dragPointX < splitterPreviewInvalidRect.x() || this.__dragPointX >= splitterPreviewInvalidRect.right()) {
						previewRect = splitterPreviewRect;
					}
				}
				if (this.__dragPointY < splitterPreviewInvalidRect.y() || this.__dragPointY >= splitterPreviewInvalidRect.bottom()) {
					previewRect = splitterPreviewRect;
				}
				if (previewRect.y() < availableRect.y()) {
					previewRect.y(availableRect.y());
				} else if (previewRect.bottom() > availableRect.bottom()) {
					previewRect.y(availableRect.bottom() - previewRect.height());
				}
				this.arrangeSplitterPreview(true, previewRect);
			}
		}
		var colSplitterRect = $.ig.Rect.prototype.empty();
		if (this.__columnInfo._hasSplitter) {
			colSplitterRect = new $.ig.Rect(0, availableRect.x() + this.__sheetPaneManager._columns().item(0).actualExtent(), availableRect.y() - this.__columnInfo._headerPanelExtent, this.__sheetPaneManager._splitterWidth(), availableRect.height() + this.__columnInfo._headerPanelExtent);
			var splitterPreviewRect1 = $.ig.SpreadsheetUtilities.prototype.copy(colSplitterRect);
			if (!this.__columnInfo._items.item(0).isFrozen()) {
				colSplitterRect.height(colSplitterRect.height() + horzScrollHeight);
			}
			if ($.ig.CoreUtilities.prototype.greaterThanOrClose(colSplitterRect.left(), availableRect.right())) {
				colSplitterRect.width(0);
			}
			this.arrangeSplitter(false, colSplitterRect);
			if (this.__columnInfo._hasSplitterPreview) {
				var previewRect1 = new $.ig.Rect(0, this.__dragPointX - splitterPreviewRect1.width() / 2, splitterPreviewRect1.y(), splitterPreviewRect1.width(), splitterPreviewRect1.height());
				if (this.__rowInfo._hasSplitterPreview) {
					if (this.__dragPointY < splitterPreviewInvalidRect.y() || this.__dragPointY >= splitterPreviewInvalidRect.bottom()) {
						previewRect1 = splitterPreviewRect1;
					}
				}
				if (this.__dragPointX < splitterPreviewInvalidRect.x() || this.__dragPointX >= splitterPreviewInvalidRect.right()) {
					previewRect1 = splitterPreviewRect1;
				}
				if (previewRect1.x() < availableRect.x()) {
					previewRect1.x(availableRect.x());
				} else if (previewRect1.right() > availableRect.right()) {
					previewRect1.x(availableRect.right() - previewRect1.width());
				}
				this.arrangeSplitterPreview(false, previewRect1);
			}
		}
		var intersectionRectForSplitter = $.ig.Rect.prototype.empty();
		if (this.__hasSplitterIntersection) {
			var intersectionRect = new $.ig.Rect(0, colSplitterRect.x(), rowSplitterRect.y(), colSplitterRect.width(), rowSplitterRect.height());
			this.arrangeSplitterIntersection(intersectionRect);
			var midPtX = colSplitterRect.x() - rowSplitterRect.x() + (colSplitterRect.width() / 2);
			var midPtY = rowSplitterRect.y() - colSplitterRect.y() + (rowSplitterRect.height() / 2);
			intersectionRectForSplitter = new $.ig.Rect(0, midPtX - 9, midPtY - 9, 18, 18);
		}
		this.initializeSplitterIntersectionRect(intersectionRectForSplitter);
		this.__paneAreaRect = availableRect;
		this.arrangePanes(availableRect);
		this.arrangeInPlaceEditorInternal(finalSize);
		this.arrangeInputMessage(this.__paneAreaRect);
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("Spreadsheet_ArrangeEnd");
		$.ig.SpreadsheetUtilities.prototype.measurePerf("Spreadsheet_Arrange", "Spreadsheet_ArrangeStart", "Spreadsheet_ArrangeEnd");
		return arrangeSize;
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::Arrange(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeHeaders(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, System.Windows.Point, System.Windows.Rect)" />*/
	arrangeHeaders: function (info, headerLocation, availableRect) {
		var x = headerLocation.__x;
		var y = headerLocation.__y;
		var width = 0;
		var height = 0;
		if (info._headerLayerInfos.count() > 0) {
			var zoom = this.zoomLevel();
			var items = info._items;
			var headerExtent = info._headerPanelExtent;
			var areRowHeaders = info._areRowHeaders;
			if (areRowHeaders) {
				width = headerExtent;
			} else {
				height = headerExtent;
			}
			var index = -1;
			var en = items.getEnumerator();
			while (en.moveNext()) {
				var item = en.current();
				index++;
				if (areRowHeaders) {
					height = item.actualExtent() + $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
					y -= $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
				} else {
					width = item.actualExtent() + $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
					x -= $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
				}
				var headerRect = new $.ig.Rect(0, x, y, width, height);
				this.arrangeLayerContainer$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, info._headerLayerInfos.__inner[index]._layerContainer, headerRect);
				if (areRowHeaders) {
					y += height + this.__sheetPaneManager._splitterHeight();
				} else {
					x += width + this.__sheetPaneManager._splitterWidth();
				}
			}
			if (areRowHeaders) {
				availableRect.x(availableRect.x() + headerExtent);
				availableRect.width(Math.max(availableRect.width() - headerExtent, 0));
			} else {
				availableRect.y(availableRect.y() + headerExtent);
				availableRect.height(Math.max(availableRect.height() - headerExtent, 0));
			}
		}
		return {
			p2: availableRect
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeHeaders(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, System.Windows.Point, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInPlaceEditorInternal(System.Windows.Size)" />*/
	arrangeInPlaceEditorInternal: function (finalSize) {
		var pane = this.getInPlaceEditorPane();
		var cellRange = this.getInPlaceEditorCellRangeForPositioning();
		var editorRect = new $.ig.Rect(4);
		var paneAreaClipRect = $.ig.Rect.prototype.empty();
		if (pane != null) {
			var paneInfo = $.ig.Enumerable.prototype.firstOrDefault$11($.ig.SpreadsheetAreaLayoutManager_SheetLayerInfo$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type), this.__paneInfos, function (i) { return i._viewObject == pane; });
			if (paneInfo != null) {
				var isInEditMode = this.__spreadsheet.isInEditMode();
				var dpi = this.pixelConverter();
				var pixelSize = 1 / dpi.logicalToDevicePixelFactor();
				var xFactor = -this.getRelativeWindowDpiOffsetX(paneInfo._arrangeRect.x());
				var yFactor = -this.getRelativeWindowDpiOffsetY(paneInfo._arrangeRect.y());
				var zoom = pane.rowScrollRegion()._zoomLevel();
				var availableWidth = paneInfo._arrangeRect.width();
				var availableHeight = paneInfo._arrangeRect.height();
				var x = pane.columnScrollRegion()._getRelativeOffset1(cellRange.firstColumn(), true, true);
				var y = pane.rowScrollRegion()._getRelativeOffset1(cellRange.firstRow(), true, true);
				var xEnd = pane.columnScrollRegion()._getRelativeOffset1(cellRange.lastColumn(), false, true);
				var yEnd = pane.rowScrollRegion()._getRelativeOffset1(cellRange.lastRow(), false, true);
				var originalXEnd = xEnd;
				var originalYEnd = yEnd;
				yEnd = Math.max(yEnd, y + this.getPreferredInPlaceEditorHeight());
				if (isInEditMode) {
					var $ret = this.adjustEditorHorizontalForAlignment(pane, zoom, availableWidth, this.__spreadsheet._cellEditManager().getPreferredWidth(), pixelSize, x, xEnd);
					x = $ret.p5;
					xEnd = $ret.p6;
				}
				var width = Math.max(Math.min(xEnd - x, (availableWidth - (x * zoom)) / zoom) - pixelSize, 0);
				var height = Math.max(Math.min(yEnd - y, (availableHeight - (y * zoom)) / zoom) - pixelSize, 0);
				var left = paneInfo._arrangeRect.x() + dpi.snapUp(x * zoom) - xFactor;
				var right = paneInfo._arrangeRect.x() + dpi.snapUp(x * zoom + width) - xFactor;
				var top = paneInfo._arrangeRect.y() + dpi.snapUp(y * zoom) - yFactor;
				var bottom = paneInfo._arrangeRect.y() + dpi.snapUp(y * zoom + height) - yFactor;
				editorRect.x(left);
				editorRect.y(top);
				editorRect.width(Math.max(right - left, 0));
				editorRect.height(Math.max(bottom - top, 0));
				var actualRight = paneInfo._arrangeRect.x() + dpi.snapUp(originalXEnd * zoom) - xFactor;
				var actualBottom = paneInfo._arrangeRect.y() + dpi.snapUp(originalYEnd * zoom) - yFactor;
				var actualCellBounds = new $.ig.Rect(0, left, top, Math.max(actualRight - left - pixelSize, 0), Math.max(actualBottom - top - pixelSize, 0));
				var bottomItemPos = pane.rowScrollRegion()._getItemFromRelativeOffset(yEnd - pixelSize);
				if (bottomItemPos._index() > cellRange.lastRow()) {
					var newBottomOffset = pane.rowScrollRegion()._getRelativeOffset1(bottomItemPos._index(), false, true);
					height = Math.max(Math.min(newBottomOffset - y, (availableHeight - (y * zoom)) / zoom) - pixelSize, 0);
				}
				actualCellBounds.union(new $.ig.Rect(0, left, top, Math.max(width * zoom, 0), Math.max(height * zoom, 0)));
				paneAreaClipRect = paneInfo._arrangeRect;
				this.arrangeInPlaceEditorBackground(actualCellBounds, paneAreaClipRect);
			}
		}
		this.arrangeInPlaceEditor(editorRect, paneAreaClipRect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInPlaceEditorInternal(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInputMessage(System.Windows.Rect)" />*/
	arrangeInputMessage: function (panelRect) {
		var $self = this;
		if (this.__sheetPaneManager != null) {
			var msgSizeWidth = this.preferredInputMessageControlWidth();
			var msgSizeHeight = this.preferredInputMessageControlHeight();
			var paneInfo = $.ig.Enumerable.prototype.firstOrDefault$11($.ig.SpreadsheetAreaLayoutManager_SheetLayerInfo$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type), this.__paneInfos, function (l) { return l._viewObject == $self.__sheetPaneManager._activeCellPane(); });
			var selection = paneInfo != null ? paneInfo._viewObject._activeSelection() : null;
			var worksheetMessageOffset = this.__sheetPaneManager._worksheet()._validationInputMessagePosition();
			if (!this.__isInputMessageControlVisible) {
				this.arrangeInputMessageControl(new $.ig.Rect(0, -10000, -10000, msgSizeWidth, msgSizeHeight));
			} else if (this.__dragType == $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.inputMessage) {
				this.arrangeInputMessageControl(new $.ig.Rect(0, this.__dragPointX - this.__initialDragOffset.__x, this.__dragPointY - this.__initialDragOffset.__y, msgSizeWidth, msgSizeHeight));
			} else if ($.ig.Point.prototype.l_op_Inequality(worksheetMessageOffset, null)) {
				this.arrangeInputMessageControl(new $.ig.Rect(0, (worksheetMessageOffset).__x + this.__paneAreaRect.x(), (worksheetMessageOffset).__y + this.__paneAreaRect.y(), msgSizeWidth, msgSizeHeight));
			} else if (selection != null) {
				var paneRect = paneInfo._arrangeRect;
				var activeCell = selection._activeCellAsRange();
				var zoom = paneInfo._viewObject.rowScrollRegion()._zoomLevel();
				var t = paneInfo._viewObject.rowScrollRegion()._getRelativeOffset1(activeCell.firstRow(), true, true) * zoom;
				var b = paneInfo._viewObject.rowScrollRegion()._getRelativeOffset1(activeCell.lastRow(), false, true) * zoom;
				var l = paneInfo._viewObject.columnScrollRegion()._getRelativeOffset1(activeCell.firstColumn(), true, true) * zoom;
				var r = paneInfo._viewObject.columnScrollRegion()._getRelativeOffset1(activeCell.lastColumn(), false, true) * zoom;
				var DefaultInputMessageOffset = 5;
				var pt = $.ig.SpreadsheetUtilities.prototype.createPoint(l + (r - l) / 2, b + DefaultInputMessageOffset);
				var cellBounds = this.transformBoundsToPanel(paneInfo, new $.ig.Rect(2, $.ig.SpreadsheetUtilities.prototype.createPoint(l, t), $.ig.SpreadsheetUtilities.prototype.createPoint(r, b)));
				var preferredOffset = this.transformPointToPanel(paneInfo, pt);
				var arrangeRect = new $.ig.Rect(0, preferredOffset.__x, preferredOffset.__y, msgSizeWidth, msgSizeHeight);
				if (!panelRect.containsRect(arrangeRect)) {
					if (arrangeRect.y() < panelRect.y()) {
						arrangeRect.y(panelRect.y());
					} else if (arrangeRect.bottom() > panelRect.bottom()) {
						arrangeRect.y(Math.max(panelRect.y(), panelRect.bottom() - arrangeRect.height()));
					}
					if (arrangeRect.x() < panelRect.x()) {
						arrangeRect.x(panelRect.x());
					} else if (arrangeRect.right() > panelRect.right()) {
						arrangeRect.x(Math.max(panelRect.x(), panelRect.right() - arrangeRect.width()));
					}
					var visibleCellBounds = new $.ig.Rect(0, panelRect.x(), panelRect.y(), panelRect.width(), paneRect.height());
					visibleCellBounds.intersect(cellBounds);
					if (visibleCellBounds.isEmpty() == false && visibleCellBounds.intersectsWith(arrangeRect)) {
						var topForLeftOrRightSide = Math.max(panelRect.y(), Math.min(this.transformPointToPanel(paneInfo, $.ig.SpreadsheetUtilities.prototype.createPoint(0, t + (b - t) / 2)).__y, panelRect.bottom() - arrangeRect.height()));
						if (panelRect.right() - visibleCellBounds.right() >= DefaultInputMessageOffset + arrangeRect.width()) {
							arrangeRect.x(visibleCellBounds.right() + DefaultInputMessageOffset);
							arrangeRect.y(topForLeftOrRightSide);
						} else if (visibleCellBounds.top() >= DefaultInputMessageOffset + arrangeRect.height()) {
							arrangeRect.y(visibleCellBounds.y() - (DefaultInputMessageOffset + arrangeRect.height()));
						} else if (visibleCellBounds.left() >= DefaultInputMessageOffset + arrangeRect.width()) {
							arrangeRect.x(visibleCellBounds.left() - (DefaultInputMessageOffset + arrangeRect.width()));
							arrangeRect.y(topForLeftOrRightSide);
						} else {
							var rects = new Array(4);
							rects[0] = new $.ig.Rect(0, visibleCellBounds.left() - (DefaultInputMessageOffset + arrangeRect.width()), topForLeftOrRightSide, arrangeRect.width(), arrangeRect.height());
							rects[1] = new $.ig.Rect(0, arrangeRect.x(), visibleCellBounds.y() - (DefaultInputMessageOffset + arrangeRect.height()), arrangeRect.width(), arrangeRect.height());
							rects[2] = new $.ig.Rect(0, visibleCellBounds.right() + DefaultInputMessageOffset, topForLeftOrRightSide, arrangeRect.width(), arrangeRect.height());
							rects[3] = new $.ig.Rect(0, arrangeRect.x(), visibleCellBounds.bottom() + DefaultInputMessageOffset, arrangeRect.width(), arrangeRect.height());
							var preferredIndex = -1;
							var currentArea = 0;
							for (var i = 0; i < rects.length; i++) {
								var tempRect = new $.ig.Rect(0, panelRect.x(), panelRect.y(), panelRect.width(), panelRect.height());
								tempRect.intersect(rects[i]);
								if (tempRect.isEmpty() == false) {
									var tempArea = tempRect.width() * tempRect.height();
									if (tempArea > currentArea) {
										preferredIndex = i;
										currentArea = tempArea;
									}
								}
							}
							if (preferredIndex >= 0) {
								arrangeRect = rects[preferredIndex];
							}
						}
					}
				}
				this.arrangeInputMessageControl(arrangeRect);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeInputMessage(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangePanes(System.Windows.Rect)" />*/
	arrangePanes: function (availableRect) {
		var x = availableRect.x();
		var y = availableRect.y();
		var zoom = this.zoomLevel();
		var columnCount = this.__columnInfo._items.count();
		for (var i = 0; i < this.__paneInfos.count(); i++) {
			var r = $.ig.intDivide(i, columnCount);
			var c = i % columnCount;
			var row = this.__rowInfo._items.item(r);
			var col = this.__columnInfo._items.item(c);
			var paneRect = new $.ig.Rect(0, x, y, col.actualExtent(), row.actualExtent());
			this.__paneInfos.__inner[i]._arrangeRect = paneRect;
			this.arrangeLayerContainer$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, this.__paneInfos.__inner[i]._layerContainer, paneRect);
			if (c == columnCount - 1) {
				x = availableRect.x();
				y += row.actualExtent() + this.__sheetPaneManager._splitterHeight();
			} else {
				x += col.actualExtent() + this.__sheetPaneManager._splitterWidth();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangePanes(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeScrollBars(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, System.Boolean, System.Double, System.Windows.Size, System.Double, System.Double, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Double)" />*/
	arrangeScrollBars: function (info, isVertical, headerAreaExtent, finalSize, otherExtent, extraInitialOffset, disabledScrollBar, oppositeScrollBarThickness) {
		var visibilityCoordinator = info._scrollCoordinator;
		if (visibilityCoordinator == null) {
			return;
		}
		var items = info._items;
		var itemsEnum = (items || new Array(0)).getEnumerator();
		var sbEnum = visibilityCoordinator.mediators().getEnumerator();
		var index = 0;
		var rect = isVertical ? new $.ig.Rect(0, finalSize.width() - otherExtent, extraInitialOffset, otherExtent, 0) : new $.ig.Rect(0, extraInitialOffset, finalSize.height() - otherExtent, 0, otherExtent);
		var extraExtent = headerAreaExtent;
		while (itemsEnum.moveNext()) {
			sbEnum.moveNext();
			var sb = sbEnum.current().scrollBar();
			var item = itemsEnum.current();
			var sbExtent = item.actualExtent();
			if (sb != null) {
				sbExtent = Math.max(sbExtent + extraExtent - extraInitialOffset, 0);
				extraExtent = 0;
				if (isVertical) {
					rect.height(sbExtent);
				} else {
					rect.width(sbExtent);
				}
				this.arrangeScrollBar(sb, rect);
				if (isVertical) {
					rect.y(rect.y() + (sbExtent + this.__sheetPaneManager._splitterHeight()));
				} else {
					rect.x(rect.x() + (sbExtent + this.__sheetPaneManager._splitterWidth()));
				}
				extraInitialOffset = 0;
			} else {
				extraExtent += sbExtent;
			}
			index++;
		}
		if (index == 0 && disabledScrollBar != null) {
			var sbExtent1 = isVertical ? finalSize.height() : finalSize.width();
			extraExtent -= oppositeScrollBarThickness;
			sbExtent1 = Math.max(sbExtent1 + extraExtent - extraInitialOffset, 0);
			extraExtent = 0;
			if (isVertical) {
				rect.height(sbExtent1);
			} else {
				rect.width(sbExtent1);
			}
			this.arrangeScrollBar(disabledScrollBar, rect);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::ArrangeScrollBars(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, System.Boolean, System.Double, System.Windows.Size, System.Double, System.Double, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CalculateTabAreaWidth(System.Double, System.Double)" />*/
	calculateTabAreaWidth: function (splitWidth, availableWidth) {
		var $self = this;
		return {
			ret: (function () { var $ret = $self.calculateTabAreaWidth1($self.__lastAvailableTabAreaWidth, splitWidth, availableWidth); splitWidth = $ret.p1; availableWidth = $ret.p2; return $ret.ret; }()),
			p0: splitWidth,
			p1: availableWidth
		};
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CalculateTabAreaWidth(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CalculateTabAreaWidth(System.Double, System.Double, System.Double)" />*/
	calculateTabAreaWidth1: function (availableWidthWhenEmpty, splitWidth, availableWidth) {
		this.__lastAvailableTabAreaWidth = availableWidthWhenEmpty;
		splitWidth = 0;
		availableWidth = availableWidthWhenEmpty;
		var tabItemAreaWidth = 0;
		if (this.__rowInfo != null && this.__rowInfo._items.count() > 0) {
			availableWidth = this.__rowInfo._headerAreaExtent;
		}
		if (this.__hasTabItemArea) {
			if (this.__columnInfo._items != null) {
				for (var i = 0; i < this.__columnInfo._items.count(); i++) {
					var item = this.__columnInfo._items.item(i);
					availableWidth += item.actualExtent();
					if (i > 0) {
						availableWidth += this.__sheetPaneManager._splitterWidth();
					}
					if (this.__columnInfo._scrollCoordinator != null && this.__columnInfo._scrollCoordinator.mediators().item(i).scrollBar() != null) {
						break;
					}
				}
			}
			if (this.__hasTabItemAreaSplitter) {
				splitWidth = this.preferredTabItemAreaSplitterWidth();
				availableWidth = Math.max(availableWidth - splitWidth, 0);
			}
			tabItemAreaWidth = this.tabManager()._width() / 1000 * availableWidth;
		}
		return {
			ret: tabItemAreaWidth,
			p1: splitWidth,
			p2: availableWidth
		};
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CalculateTabAreaWidth(System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CancelElementDrag()" />*/
	cancelElementDrag: function () {
		if (this.__dragType != $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none) {
			var oldDragType = this.__dragType;
			this.__dragType = $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none;
			if (this.__rowInfo._hasSplitterPreview) {
				this.__rowInfo._hasSplitterPreview = false;
				this.removeSplitterPreview(true);
			}
			if (this.__columnInfo._hasSplitterPreview) {
				this.__columnInfo._hasSplitterPreview = false;
				this.removeSplitterPreview(false);
			}
			this.cancelElementDragOverride();
			$.ig.Debug.prototype.assert(this.__dragType == $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none);
			this.onDragTypeChanged(oldDragType, $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CancelElementDrag()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CancelSplitterDragTimer()" />*/
	cancelSplitterDragTimer: function () {
		if (this.__splitterDragStartTimer != null) {
			this.__splitterDragStartTimer.cancel();
			this.__splitterDragStartTimer = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::CancelSplitterDragTimer()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetInPlaceEditorCellRangeForPositioning()" />*/
	getInPlaceEditorCellRangeForPositioning: function () {
		if (this.__spreadsheet == null) {
			return $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		}
		if (this.__spreadsheet.isInEditMode()) {
			return this.__spreadsheet._cellEditManager().editCellRangeForPositioning();
		}
		return this.__spreadsheet._activeCellAsRange();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetInPlaceEditorCellRangeForPositioning()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetInPlaceEditorPane()" />*/
	getInPlaceEditorPane: function () {
		if (this.__spreadsheet == null) {
			return null;
		}
		if (this.__spreadsheet.isInEditMode()) {
			return this.__spreadsheet._cellEditManager().paneForEditor();
		}
		return this.__spreadsheet._activeCellPane();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetInPlaceEditorPane()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetMinimumSpreadareaHeight()" />*/
	getMinimumSpreadareaHeight: function () {
		this.__sheetPaneManager._measure(this.__sheetPaneManager._previousAvailableSize());
		return this.__columnInfo._headerPanelExtent + this.__actualHorizontalScrollAreaHeight + 2;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetMinimumSpreadareaHeight()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetRelativeWindowDpiOffsetX(System.Double)" />*/
	getRelativeWindowDpiOffsetX: function (x) {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetRelativeWindowDpiOffsetX(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetRelativeWindowDpiOffsetY(System.Double)" />*/
	getRelativeWindowDpiOffsetY: function (y) {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::GetRelativeWindowDpiOffsetY(System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHitTestResult Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::HitTest(System.Windows.Point)" />*/
	hitTest: function (pointRelativeToMainControl) {
		var point = this.transformPointFromControl(pointRelativeToMainControl);
		for (var i = 0; i < this.__paneInfos.count(); i++) {
			var paneInfo = this.__paneInfos.__inner[i];
			var rect = this.getRelativeLayerBounds$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, paneInfo._layerContainer);
			if (rect.containsPoint(point)) {
				var pane = paneInfo._viewObject;
				var relativePt = this.transformPointFromPanel(paneInfo, point);
				var position = new $.ig.WorksheetItemPosition();
				if (!(function () { var $ret = pane.rowScrollRegion()._tryGetItemFromRelativeOffset(relativePt.__y / pane.rowScrollRegion()._zoomLevel(), position); position = $ret.p1; return $ret.ret; }())) {
					return null;
				}
				var rowIndex = position._index();
				if (!(function () { var $ret = pane.columnScrollRegion()._tryGetItemFromRelativeOffset(relativePt.__x / pane.columnScrollRegion()._zoomLevel(), position); position = $ret.p1; return $ret.ret; }())) {
					return null;
				}
				var colIndex = position._index();
				return new $.ig.SpreadsheetCellHitTestResult(new $.ig.spreadsheet.SpreadsheetCell(rowIndex, colIndex), pane);
			}
		}
		for (var i1 = 0; i1 < 2; i1++) {
			var isRow = i1 == 0;
			var info = isRow ? this.__rowInfo : this.__columnInfo;
			if (info != null) {
				for (var j = 0; j < info._headerLayerInfos.count(); j++) {
					var layerInfo = info._headerLayerInfos.__inner[j];
					var rect1 = this.getRelativeLayerBounds$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, layerInfo._layerContainer);
					if (rect1.containsPoint(point)) {
						var scrollRegion = layerInfo._viewObject;
						var relativePt1 = this.transformPointFromPanel1(layerInfo, point);
						var position1 = new $.ig.WorksheetItemPosition();
						if (!(function () { var $ret = scrollRegion._tryGetItemFromRelativeOffset((isRow ? relativePt1.__y : relativePt1.__x) / scrollRegion._zoomLevel(), position1); position1 = $ret.p1; return $ret.ret; }())) {
							return null;
						}
						return new $.ig.SpreadsheetHeaderHitTestResult(position1._index(), scrollRegion);
					}
				}
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHitTestResult Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::HitTest(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeInputMessageControl()" />*/
	initializeInputMessageControl: function () {
		if (!this.__hasInputMessageControl) {
			return;
		}
		var msg = this.__sheetPaneManager != null ? this.__sheetPaneManager._activeCellInputMessage() : null;
		this.__isInputMessageControlVisible = msg != null;
		if (!this.__isInputMessageControlVisible) {
			this.hideInputMessageControl();
		} else {
			this.showInputMessageControl(msg.item2(), msg.item1());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::InitializeInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnBeforeMeasure(System.Windows.Size)" />*/
	onBeforeMeasure: function (availableSize) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnBeforeMeasure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::Measure(System.Windows.Size)" />*/
	measure: function (availableSize) {
		var $self = this;
		this.onBeforeMeasure(availableSize);
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("Spreadsheet_MeasureStart");
		var desired = new $.ig.Size(0);
		this.__lastMeasureSize = new $.ig.Size(1, availableSize.width(), availableSize.height());
		var layout = this.__sheetPaneManager;
		if (layout != null) {
			layout._verifyBeforeMeasure();
		}
		var wb = layout != null ? layout._worksheet().workbook() : null;
		{
			var t1 = $.ig.excel.Workbook.prototype._cacheMetricsProvider(wb);
			try {
				var wantsVerticalScrollBar, wantsHorizontalScrollBar;
				if (layout != null) {
					wantsHorizontalScrollBar = layout._hasHorizontalScrollBar();
					wantsVerticalScrollBar = layout._hasVerticalScrollBar();
				} else if (this.__tabManager != null && this.__tabManager._workbook() != null) {
					wantsVerticalScrollBar = (this.__tabManager._workbook().windowOptions().scrollBars() & $.ig.excel.ScrollBars.vertical) != 0;
					wantsHorizontalScrollBar = (this.__tabManager._workbook().windowOptions().scrollBars() & $.ig.excel.ScrollBars.horizontal) != 0;
				} else {
					wantsVerticalScrollBar = wantsHorizontalScrollBar = false;
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("Spreadsheet_MeasureOrRemoveScrollBarsStart");
				if (wantsVerticalScrollBar == false) {
					var $ret = this.removeScrollBars(this.__rowInfo, this.__disabledVerticalScrollBar);
					this.__disabledVerticalScrollBar = $ret.p1;
				} else {
					var $ret1 = this.measureScrollBars(this.__rowInfo, this.__disabledVerticalScrollBar);
					this.__disabledVerticalScrollBar = $ret1.p1;
				}
				if (wantsHorizontalScrollBar == false) {
					var $ret2 = this.removeScrollBars(this.__columnInfo, this.__disabledHorizontalScrollBar);
					this.__disabledHorizontalScrollBar = $ret2.p1;
				} else {
					var $ret3 = this.measureScrollBars(this.__columnInfo, this.__disabledHorizontalScrollBar);
					this.__disabledHorizontalScrollBar = $ret3.p1;
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("Spreadsheet_MeasureOrRemoveScrollBarsEnd");
				$.ig.SpreadsheetUtilities.prototype.measurePerf("Spreadsheet_MeasureOrRemoveScrollBars", "Spreadsheet_MeasureOrRemoveScrollBarsStart", "Spreadsheet_MeasureOrRemoveScrollBarsEnd");
				var vertScrollBarWidth = this.__rowInfo._scrollBarThickness;
				var horzScrollBarHeight = this.__columnInfo._scrollBarThickness;
				var paneAreaSize = new $.ig.Size(1, availableSize.width(), availableSize.height());
				if (layout != null && layout._hasVerticalScrollBar()) {
					paneAreaSize.width(Math.max(paneAreaSize.width() - vertScrollBarWidth, 0));
				}
				var infiniteSize = new $.ig.Size(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);
				var needsTabArea = this.__tabManager != null && this.__tabManager._isVisible();
				if (needsTabArea != this.__hasTabItemArea) {
					this.__hasTabItemArea = needsTabArea;
					if (!needsTabArea) {
						this.removeTabItemArea();
					} else {
						this.createTabItemArea();
					}
				}
				if (this.__hasTabItemArea) {
					if (horzScrollBarHeight > 0) {
						horzScrollBarHeight += this.__pixelConverter.logicalToDevicePixelFactor();
					}
					this.measureTabItemArea(infiniteSize);
					horzScrollBarHeight = Math.max(horzScrollBarHeight, this.preferredTabItemAreaHeight());
				}
				var needsTabAreaBorder = needsTabArea;
				if (needsTabAreaBorder != this.__hasTabAreaBorder) {
					this.__hasTabAreaBorder = needsTabAreaBorder;
					if (!needsTabAreaBorder) {
						this.removeTabAreaBorder();
					} else {
						this.createTabAreaBorder();
					}
				}
				if (this.__hasTabAreaBorder) {
					this.measureTabAreaBorder(infiniteSize);
				}
				var needsTabAreaBack = needsTabArea;
				if (needsTabAreaBack != this.__hasTabAreaBackground) {
					this.__hasTabAreaBackground = needsTabAreaBack;
					if (!needsTabAreaBack) {
						this.removeTabAreaBackground();
					} else {
						this.createTabAreaBackground();
					}
				}
				if (this.__hasTabAreaBackground) {
					this.measureTabAreaBackground(infiniteSize);
				}
				var needsTabAreaSplitter = needsTabArea && wantsHorizontalScrollBar;
				if (needsTabAreaSplitter != this.__hasTabItemAreaSplitter) {
					this.__hasTabItemAreaSplitter = needsTabAreaSplitter;
					if (!needsTabAreaSplitter) {
						this.removeTabItemAreaSplitter();
					} else {
						this.createTabItemAreaSplitter();
					}
				}
				if (this.__hasTabItemAreaSplitter) {
					this.measureTabItemAreaSplitter(infiniteSize);
					horzScrollBarHeight = Math.max(horzScrollBarHeight, this.preferredTabItemAreaSplitterHeight());
				}
				this.__actualHorizontalScrollAreaHeight = horzScrollBarHeight;
				if (wantsHorizontalScrollBar || needsTabArea) {
					paneAreaSize.height(Math.max(paneAreaSize.height() - horzScrollBarHeight, 0));
				}
				var splitterWidth = this.measureSplitter(this.__columnInfo);
				var splitterHeight = this.measureSplitter(this.__rowInfo);
				if (layout != null) {
					layout._splitterWidth(splitterWidth);
					layout._splitterHeight(splitterHeight);
				}
				var needsSplitterIntersection = this.__columnInfo._hasSplitter && this.__rowInfo._hasSplitter;
				if (needsSplitterIntersection != this.__hasSplitterIntersection) {
					this.__hasSplitterIntersection = needsSplitterIntersection;
					if (!needsSplitterIntersection) {
						this.removeSplitterIntersection();
					} else {
						this.createSplitterIntersection();
					}
				}
				if (this.__hasSplitterIntersection) {
					this.measureSplitterIntersection(new $.ig.Size(1, layout._splitterWidth(), layout._splitterHeight()));
				}
				var columnHeaderHeight = layout != null ? layout.__ownerState._renderCache().calculateColumnHeaderHeight1(layout._worksheet(), layout._pixelSizeY()) : 0;
				this.__columnInfo._headerPanelExtent = columnHeaderHeight;
				var availableHeightForRowHeaders = Math.max(paneAreaSize.height() - columnHeaderHeight, 0);
				var lastRowHeaderInView = layout != null ? layout._getMaxRowIndexInView(availableHeightForRowHeaders) : 0;
				var rowHeaderWidth = layout != null ? layout.__ownerState._renderCache().calculateRowHeaderWidth(lastRowHeaderInView, layout._worksheet(), layout._pixelSizeX()) : 0;
				this.__rowInfo._headerPanelExtent = rowHeaderWidth;
				this.__columnInfo._headerAreaExtent = this.__columnInfo._headerPanelExtent;
				this.__rowInfo._headerAreaExtent = this.__rowInfo._headerPanelExtent;
				if (layout != null) {
					layout._columnHeaderAreaExtent(this.__columnInfo._headerAreaExtent);
					layout._rowHeaderAreaExtent(this.__rowInfo._headerAreaExtent);
					layout._rows().item(0)._reservedExtent(layout._rows().item(0)._sizingMode() == $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToExtent ? this.__columnInfo._headerAreaExtent : 0);
					layout._columns().item(0)._reservedExtent(layout._columns().item(0)._sizingMode() == $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToExtent ? this.__rowInfo._headerAreaExtent : 0);
				}
				paneAreaSize.height(Math.max(paneAreaSize.height() - this.__columnInfo._headerAreaExtent, 0));
				paneAreaSize.width(Math.max(paneAreaSize.width() - this.__rowInfo._headerAreaExtent, 0));
				var usedSize = layout != null ? layout._measure(paneAreaSize) : new $.ig.Size(0);
				desired.width(desired.width() + (usedSize.width() + vertScrollBarWidth + this.__rowInfo._headerPanelExtent));
				desired.height(desired.height() + (usedSize.height() + horzScrollBarHeight + this.__columnInfo._headerPanelExtent));
				this.measurePanes();
				this.measureHeaders(this.__columnInfo);
				this.measureHeaders(this.__rowInfo);
				var needsHeaderIntersection = this.__columnInfo._headerLayerInfos.count() > 0 && this.__rowInfo._headerLayerInfos.count() > 0;
				if (needsHeaderIntersection != this.__hasSelectAllButton) {
					this.__hasSelectAllButton = needsHeaderIntersection;
					if (!needsHeaderIntersection) {
						this.removeSelectAllButton();
					} else {
						this.createSelectAllButton();
					}
				}
				if (this.__hasSelectAllButton) {
					this.measureSelectAllButton(new $.ig.Size(1, this.__rowInfo._headerPanelExtent, this.__columnInfo._headerPanelExtent));
				}
				this.measureInPlaceEditorInternal(availableSize);
				if (this.__hasTabItemArea) {
					var splitWidth, availableTabArea;
					var defaultAvailableTabWidth = Number.isInfinity(availableSize.width()) ? 0 : Math.max(availableSize.width() - vertScrollBarWidth, 0);
					var tabAreaWidth = (function () { var $ret = $self.calculateTabAreaWidth1(defaultAvailableTabWidth, splitWidth, availableTabArea); splitWidth = $ret.p1; availableTabArea = $ret.p2; return $ret.ret; }());
					if (this.__tabManager != null) {
						this.__tabManager._extraAvailableWidth(Math.max(tabAreaWidth - this.preferredTabItemAreaWidth(), 0));
					}
					if (this.preferredTabItemAreaWidth() > tabAreaWidth) {
						this.measureTabItemArea(new $.ig.Size(1, tabAreaWidth, Number.POSITIVE_INFINITY));
					}
				}
				if (!this.__hasInputMessageControl) {
					this.__hasInputMessageControl = true;
					this.createInputMessageControl();
				}
				this.initializeInputMessageControl();
				this.measureInputMessageControl(infiniteSize);
			}
			finally {
				if (t1 != null) {
					t1.dispose();
				}
			}
		}
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("Spreadsheet_MeasureEnd");
		$.ig.SpreadsheetUtilities.prototype.measurePerf("Spreadsheet_Measure", "Spreadsheet_MeasureStart", "Spreadsheet_MeasureEnd");
		return desired;
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::Measure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInPlaceEditorInternal(System.Windows.Size)" />*/
	measureInPlaceEditorInternal: function (availableSize) {
		if (!this.__hasInPlaceEditor) {
			this.__hasInPlaceEditor = true;
			this.createInPlaceEditor();
		}
		var pane = this.getInPlaceEditorPane();
		var measureSize = new $.ig.Size(0);
		if (pane != null) {
			var isInEditMode = this.__spreadsheet.isInEditMode();
			var cellRange = this.getInPlaceEditorCellRangeForPositioning();
			var pixelSize = 1 / this.pixelConverter().logicalToDevicePixelFactor();
			var zoom = pane.rowScrollRegion()._zoomLevel();
			var availableWidth = pane.columnScrollRegion().actualExtent();
			var availableHeight = pane.rowScrollRegion().actualExtent();
			var x = pane.columnScrollRegion()._getRelativeOffset1(cellRange.firstColumn(), true, true);
			var y = pane.rowScrollRegion()._getRelativeOffset1(cellRange.firstRow(), true, true);
			var xEnd = pane.columnScrollRegion()._getRelativeOffset1(cellRange.lastColumn(), false, true);
			var yEnd = pane.rowScrollRegion()._getRelativeOffset1(cellRange.lastRow(), false, true);
			if (isInEditMode) {
				var $ret = this.adjustEditorHorizontalForAlignment(pane, zoom, availableWidth, this.__spreadsheet._cellEditManager().getPreferredWidth(), pixelSize, x, xEnd);
				x = $ret.p5;
				xEnd = $ret.p6;
			}
			var width = Math.max(Math.min(xEnd - x, (availableWidth - (x * zoom)) / zoom) - pixelSize, 0);
			var height = Math.max((availableHeight - (y * zoom)) / zoom - pixelSize, 0);
			measureSize.width(width);
			measureSize.height(height);
		}
		this.measureInPlaceEditor(measureSize);
		if (!this.__hasInPlaceEditorBackground) {
			this.__hasInPlaceEditorBackground = true;
			this.createInPlaceEditorBackground();
		}
		this.measureInPlaceEditorBackground(new $.ig.Size(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureInPlaceEditorInternal(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureHeaders(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo)" />*/
	measureHeaders: function (info) {
		var items = info._items;
		var itemCount = items.count();
		var headerLayers = info._headerLayerInfos;
		var allowHeaders = this.__sheetPaneManager != null && this.__sheetPaneManager._worksheet().displayOptions().showRowAndColumnHeaders();
		var areRowHeaders = info._areRowHeaders;
		var max = 0;
		this.verifySheetLayerInfos$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, allowHeaders ? items : new Array(0), headerLayers, function (itemAdded) {
		}, function (itemRemoved) {
		}, this.createHeaderLayerContainer.runOn(this));
		if (itemCount > 0) {
			var measureSize = new $.ig.Size(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);
			var en = headerLayers.getEnumerator();
			while (en.moveNext()) {
				var layer = en.current();
				this.measureLayerContainer$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, layer._layerContainer, measureSize);
				max = Math.max(layer._viewObject._preferredHeaderExtent(), max);
			}
		}
		return max;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureHeaders(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasurePanes()" />*/
	measurePanes: function () {
		var panes = this.__sheetPaneManager != null ? this.__sheetPaneManager._panes() : new Array(0);
		var paneInfos = this.__paneInfos;
		this.verifySheetLayerInfos$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, panes, paneInfos, function (itemAdded) {
			itemAdded._viewObject._panel(itemAdded._layerContainer);
		}, function (itemRemoved) {
			itemRemoved._viewObject._panel(null);
		}, this.createPaneLayerContainer.runOn(this));
		if (this.__sheetPaneManager != null) {
			var zoom = this.zoomLevel();
			var en = paneInfos.getEnumerator();
			while (en.moveNext()) {
				var cellArea = en.current();
				var pane = cellArea._viewObject;
				var size = new $.ig.Size(1, pane.columnScrollRegion().actualExtent(), pane.rowScrollRegion().actualExtent());
				this.measureLayerContainer$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, cellArea._layerContainer, size);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasurePanes()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureScrollBars(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	measureScrollBars: function (info, disabledScrollBar) {
		var visibilityCoordinator = info._scrollCoordinator;
		if (visibilityCoordinator == null) {
			visibilityCoordinator = info._scrollCoordinator = new $.ig.ScrollBarVisibilityCoordinator();
		}
		var items = info._items;
		var isVertical = info._areRowHeaders;
		this.verifyScrollBars(items, visibilityCoordinator, isVertical ? $.ig.ScrollInfoOrientation.prototype.vertical : $.ig.ScrollInfoOrientation.prototype.horizontal);
		var itemsEnum = (items || new Array(0)).getEnumerator();
		var sbEnum = visibilityCoordinator.mediators().getEnumerator();
		var index = 0;
		var extraExtent = 0;
		var sbThickness = 0;
		while (itemsEnum.moveNext()) {
			sbEnum.moveNext();
			var sb = sbEnum.current().scrollBar();
			var item = itemsEnum.current();
			var sbExtent = item.actualExtent();
			if (sb != null) {
				var thisExtent = Math.max(sbExtent + extraExtent, 0);
				if (thisExtent == 0) {
					thisExtent = Number.POSITIVE_INFINITY;
				}
				var size = isVertical ? new $.ig.Size(1, Number.POSITIVE_INFINITY, thisExtent) : new $.ig.Size(1, thisExtent, Number.POSITIVE_INFINITY);
				this.measureScrollBar(sb, size);
				extraExtent = 0;
				sbThickness = Math.max(sbThickness, isVertical ? this.getPreferredScrollBarWidth(sb) : this.getPreferredScrollBarHeight(sb));
			} else {
				extraExtent += sbExtent;
			}
			index++;
		}
		if (index == 0) {
			if (disabledScrollBar == null) {
				disabledScrollBar = this.createScrollBar(isVertical ? $.ig.ScrollInfoOrientation.prototype.vertical : $.ig.ScrollInfoOrientation.prototype.horizontal);
				this.initializeScrollBar(disabledScrollBar, null);
			}
			this.measureScrollBar(disabledScrollBar, new $.ig.Size(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY));
			sbThickness = Math.max(sbThickness, isVertical ? this.getPreferredScrollBarWidth(disabledScrollBar) : this.getPreferredScrollBarHeight(disabledScrollBar));
		} else {
			var $ret = this.removeDisabledScrollBar(disabledScrollBar);
			disabledScrollBar = $ret.p0;
		}
		info._scrollBarThickness = sbThickness;
		return {
			p1: disabledScrollBar
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureScrollBars(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitter(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo)" />*/
	measureSplitter: function (info) {
		var items = info._items;
		var needsSplitter = items.count() > 1;
		if (needsSplitter != info._hasSplitter) {
			info._hasSplitter = needsSplitter;
			if (needsSplitter) {
				this.createSplitter(info._areRowHeaders);
			} else {
				this.removeSplitter(info._areRowHeaders);
			}
		}
		if (info._hasSplitter) {
			this.initializeSplitter(info._areRowHeaders, items.item(0)._sizingMode() == $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToExtent, items.item(0), items.item(1));
			this.measureSplitter1(info._areRowHeaders, new $.ig.Size(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY));
			if (info._hasSplitterPreview) {
				this.measureSplitterPreview(info._areRowHeaders, new $.ig.Size(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY));
			}
			return this.getPreferredSplitterThickness(info._areRowHeaders);
		} else {
			return 0;
		}
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::MeasureSplitter(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnDoubleClickInputMessage()" />*/
	onDoubleClickInputMessage: function () {
		if (this.__sheetPaneManager != null) {
			this.__sheetPaneManager._worksheet()._validationInputMessagePosition(null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnDoubleClickInputMessage()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnDragTypeChanged(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType, Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType)" />*/
	onDragTypeChanged: function (oldType, newType) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnDragTypeChanged(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType, Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnElementDragMouseMove(System.Windows.Point)" />*/
	onElementDragMouseMove: function (relativePoint) {
		this.__dragPointX = relativePoint.__x;
		this.__dragPointY = relativePoint.__y;
		if (this.__dragType == $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.inputMessage) {
			var x = this.__dragPointX;
			var y = this.__dragPointY;
			if (this.__dragPointX < this.__paneAreaRect.x()) {
				x = this.__paneAreaRect.x();
			} else if (this.__dragPointX > this.__paneAreaRect.right()) {
				x = this.__paneAreaRect.right();
			}
			if (this.__dragPointY < this.__paneAreaRect.y()) {
				y = this.__paneAreaRect.y();
			} else if (this.__dragPointY > this.__paneAreaRect.bottom()) {
				y = this.__paneAreaRect.bottom();
			}
			this.__dragPointX = x;
			this.__dragPointY = y;
		} else if (this.__dragType == $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.tabItemAreaSplitter) {
			var offset = Math.max(Math.min(relativePoint.__x - this.__initialDragOffset.__x, this.__availableWidthForTabItemAreaDrag), 0);
			var tabAreaWidth = $.ig.truncate(Math.max(Math.min($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero((offset / this.__availableWidthForTabItemAreaDrag) * 1000), 1000), 0));
			if (this.tabManager() != null && this.tabManager()._workbook() != null) {
				this.tabManager()._workbook().windowOptions().tabBarWidth(tabAreaWidth);
			}
		}
		this.invalidateArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnElementDragMouseMove(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnElementDragMouseUp()" />*/
	onElementDragMouseUp: function () {
		$.ig.Debug.prototype.assert1(this.__dragType != $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none, "This should identify the drag operation");
		switch (this.__dragType) {
			default:
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none:
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.tabItemAreaSplitter:
				this.cancelElementDrag();
				break;
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.paneSplitter:
				this.onSplitterDragMouseUp();
				break;
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.inputMessage:
				var offset = $.ig.SpreadsheetUtilities.prototype.createPoint(this.__dragPointX - this.__initialDragOffset.__x - this.__paneAreaRect.x(), this.__dragPointY - this.__initialDragOffset.__y - this.__paneAreaRect.y());
				this.cancelElementDrag();
				if (this.__sheetPaneManager != null) {
					this.__sheetPaneManager._worksheet()._validationInputMessagePosition(offset);
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnElementDragMouseUp()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterMouseDown(Infragistics.Controls.Grids.Core.PaneSplitterType, Infragistics.Controls.Core.InputProxy, System.Windows.Point)" />*/
	onSplitterMouseDown: function (splitterType, proxy, panelRelativePoint) {
		this.cancelSplitterDragTimer();
		if (proxy.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			this.__splitterDragType = splitterType;
			if (proxy.getInputClickCount() == 2) {
				this.__spreadsheet._onDoubleClickSplitter(splitterType == $.ig.PaneSplitterType.prototype.rowSplitter || splitterType == $.ig.PaneSplitterType.prototype.splitterIntersection, splitterType == $.ig.PaneSplitterType.prototype.columnSplitter || splitterType == $.ig.PaneSplitterType.prototype.splitterIntersection);
			} else if (!this.__spreadsheet._tryExitEditMode(true)) {
			} else {
				this.__initialDragOffset = proxy.getRelativePoint();
				this.__dragPointX = panelRelativePoint.__x;
				this.__dragPointY = panelRelativePoint.__y;
				if (proxy.startCapture()) {
					this.__splitterDragStartTimer = new $.ig.TimedOperation(this.onStartDragSplitterTimeout.runOn(this), $.ig.SpreadsheetUtilities.prototype.doubleClickTimeInMs());
				}
			}
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterMouseDown(Infragistics.Controls.Grids.Core.PaneSplitterType, Infragistics.Controls.Core.InputProxy, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onSplitterMouseMove: function (proxy) {
		if (this.__splitterDragStartTimer != null) {
			var pt = proxy.getRelativePoint();
			var mouseDownPoint = this.__initialDragOffset;
			if (Math.abs(pt.__x - mouseDownPoint.__x) > 16 || Math.abs(pt.__y - mouseDownPoint.__y) > 16) {
				this.startPaneSplitterDrag();
			}
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onSplitterMouseUp: function (proxy) {
		this.cancelSplitterDragTimer();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterLostCapture()" />*/
	onSplitterLostCapture: function () {
		this.cancelSplitterDragTimer();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterDragMouseUp()" />*/
	onSplitterDragMouseUp: function () {
		var dragPtX = this.__dragPointX;
		var dragPtY = this.__dragPointY;
		var isRowDrag = this.__rowInfo._hasSplitterPreview;
		var isColDrag = this.__columnInfo._hasSplitterPreview;
		var validRect = this.__splitterPreviewValidDragRect;
		var paneRect = this.__paneAreaRect;
		this.cancelElementDrag();
		if (!validRect.containsLocation(dragPtX, dragPtY)) {
			if (isRowDrag && isColDrag) {
				return;
			}
			if (isRowDrag && (dragPtY < validRect.y() || dragPtY >= validRect.bottom())) {
				return;
			}
			if (isColDrag && (dragPtX < validRect.x() || dragPtX >= validRect.right())) {
				return;
			}
		}
		var topPaneHeight = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
		var leftPaneWidth = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
		if (isRowDrag) {
			topPaneHeight = $.ig.util.toNullable($.ig.Number.prototype.$type, this.__sheetPaneManager._getPaneExtentForSplitterDrop(true, dragPtY - paneRect.y(), paneRect.height() - this.__sheetPaneManager._splitterHeight(), this.__columnInfo._headerAreaExtent));
		}
		if (isColDrag) {
			leftPaneWidth = $.ig.util.toNullable($.ig.Number.prototype.$type, this.__sheetPaneManager._getPaneExtentForSplitterDrop(false, dragPtX - paneRect.x(), paneRect.width() - this.__sheetPaneManager._splitterWidth(), this.__rowInfo._headerAreaExtent));
		}
		var options = this.__sheetPaneManager._worksheet().displayOptions().unfrozenPaneSettings();
		if ($.ig.util.nullableNotEquals(topPaneHeight, null)) {
			options.topPaneHeight(topPaneHeight.value());
		}
		if ($.ig.util.nullableNotEquals(leftPaneWidth, null)) {
			options.leftPaneWidth(leftPaneWidth.value());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSplitterDragMouseUp()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnStartDragSplitterTimeout()" />*/
	onStartDragSplitterTimeout: function () {
		this.startPaneSplitterDrag();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnStartDragSplitterTimeout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (this.__sheetPaneManager != null && this.__sheetPaneManager._isRowOrColumnsSource(sender)) {
					isDirty = true;
				} else if (sender.getType() == $.ig.SpreadsheetUtilities.prototype.oCE_WorkItemPos) {
					isDirty = true;
				}
				break;
			case "":
				if (sender == this.__sheetPaneManager || $.ig.util.cast($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, sender) !== null) {
					isDirty = true;
				}
				break;
			case "Extent":
			case "IsFrozen":
			case "PreferredHeaderExtent":
				if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, sender) !== null) {
					isDirty = true;
				}
				break;
			case "ActiveCellPane":
			case "HasHorizontalScrollBar":
			case "HasVerticalScrollBar":
			case "IsLayoutDirty":
			case "ZoomLevel":
			case "ActiveCellInputMessage":
				if (sender == this.__sheetPaneManager) {
					isDirty = true;
				}
				break;
			case "ActiveCellInputMessagePosition":
				if (sender == this.__sheetPaneManager) {
					this.invalidateArrange();
				}
				break;
			case "HasSingleSelectionWithAllRowsAndColumns":
				if (this.__hasSelectAllButton && sender == this.__sheetPaneManager) {
					this.invalidateSelectAllButton();
				}
				break;
			case "Offset":
				if ($.ig.util.cast($.ig.SpreadsheetScrollInfo.prototype.$type, sender) !== null) {
					isDirty = true;
				}
				break;
			case "IsVisible":
			case "Width":
			case "ScrollBars":
				if (sender == this.__tabManager) {
					isDirty = true;
				}
				break;
			case "ActiveCellAsRange":
				if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetSelection.prototype.$type, sender) !== null) {
					if (this.__hasInPlaceEditor) {
						isDirty = true;
					}
					if (this.__sheetPaneManager != null && this.__sheetPaneManager._activeCellInputMessage() != null) {
						this.invalidateArrange();
					}
				}
				break;
			case "SheetManager":
				if (sender == this.__spreadsheet) {
					this.sheetPaneManager((sender)._sheetManager());
				}
				break;
			case "IsInEditMode":
				if (sender == this.__spreadsheet) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this.invalidateMeasure();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager, System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel.onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager, System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveDisabledScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	removeDisabledScrollBar: function (disabledScrollBar) {
		if (disabledScrollBar != null) {
			var old = disabledScrollBar;
			disabledScrollBar = null;
			this.removeScrollBar(old);
		}
		return {
			p0: disabledScrollBar
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveDisabledScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveScrollBars(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	removeScrollBars: function (rowColInfo, disabledScrollBar) {
		var coordinator = rowColInfo._scrollCoordinator;
		if (coordinator != null) {
			var mediators = $.ig.Enumerable.prototype.toArray$1($.ig.ScrollBarInfoMediator.prototype.$type, coordinator.mediators());
			for (var i = 0; i < mediators.length; i++) {
				var med = mediators[i];
				var sb = med.scrollBar();
				coordinator.remove(med);
				med.dispose();
				if (sb != null) {
					this.removeScrollBar(sb);
				}
			}
			rowColInfo._scrollCoordinator = null;
			rowColInfo._scrollBarThickness = 0;
		}
		var $ret = this.removeDisabledScrollBar(disabledScrollBar);
		disabledScrollBar = $ret.p0;
		return {
			p1: disabledScrollBar
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::RemoveScrollBars(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartDragImpl(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType, Infragistics.Controls.Grids.Core.SpreadsheetCursor, System.Windows.Point)" />*/
	startDragImpl: function (dragType, cursor, panelRelativePoint) {
		$.ig.Debug.prototype.assert1(this.__dragType == $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.none, "Already in a drag?");
		this.cancelElementDrag();
		var oldDragType = this.__dragType;
		this.__dragType = dragType;
		this.__dragPointX = panelRelativePoint.__x;
		this.__dragPointY = panelRelativePoint.__y;
		if (!this.startDragOverride(cursor)) {
			this.cancelElementDrag();
		}
		if (this.__dragType == dragType) {
			this.onDragTypeChanged(oldDragType, dragType);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartDragImpl(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType, Infragistics.Controls.Grids.Core.SpreadsheetCursor, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartInputMessageDrag(System.Windows.Point, System.Windows.Point)" />*/
	startInputMessageDrag: function (offset, panelRelativePoint) {
		this.__initialDragOffset = offset;
		this.startDragImpl($.ig.SpreadsheetAreaLayoutManager_DragType.prototype.inputMessage, $.ig.SpreadsheetCursor.prototype.arrow, panelRelativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartInputMessageDrag(System.Windows.Point, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartPaneSplitterDrag()" />*/
	startPaneSplitterDrag: function () {
		this.startPaneSplitterDrag1(this.__splitterDragType == $.ig.PaneSplitterType.prototype.rowSplitter || this.__splitterDragType == $.ig.PaneSplitterType.prototype.splitterIntersection, this.__splitterDragType == $.ig.PaneSplitterType.prototype.columnSplitter || this.__splitterDragType == $.ig.PaneSplitterType.prototype.splitterIntersection, $.ig.SpreadsheetUtilities.prototype.createPoint(this.__dragPointX, this.__dragPointY));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartPaneSplitterDrag()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartPaneSplitterDrag(System.Boolean, System.Boolean, System.Windows.Point)" />*/
	startPaneSplitterDrag1: function (rowSplitter, colSplitter, panelRelativePoint) {
		this.cancelSplitterDragTimer();
		$.ig.Debug.prototype.assert(!rowSplitter || this.__rowInfo._hasSplitter);
		$.ig.Debug.prototype.assert(!colSplitter || this.__columnInfo._hasSplitter);
		if (rowSplitter && !this.__rowInfo._hasSplitter) {
			rowSplitter = false;
		}
		if (colSplitter && !this.__columnInfo._hasSplitter) {
			colSplitter = false;
		}
		if (rowSplitter == false && colSplitter == false) {
			return;
		}
		if (rowSplitter) {
			this.__rowInfo._hasSplitterPreview = true;
			this.createSplitterPreview(true);
		}
		if (colSplitter) {
			this.__columnInfo._hasSplitterPreview = true;
			this.createSplitterPreview(false);
		}
		var cursor = rowSplitter ? colSplitter ? $.ig.SpreadsheetCursor.prototype.resizePaneSplitIntersection : $.ig.SpreadsheetCursor.prototype.resizePaneRowSplit : $.ig.SpreadsheetCursor.prototype.resizePaneColumnSplit;
		this.startDragImpl($.ig.SpreadsheetAreaLayoutManager_DragType.prototype.paneSplitter, cursor, panelRelativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartPaneSplitterDrag(System.Boolean, System.Boolean, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartTabAreaSplitterDrag(System.Windows.Point, System.Windows.Point)" />*/
	startTabAreaSplitterDrag: function (offset, panelRelativePoint) {
		if (this.__spreadsheet._isInEditModeResolved()) {
			return false;
		}
		this.__initialDragOffset = offset;
		var splitWidth;
		var $ret = this.calculateTabAreaWidth(splitWidth, this.__availableWidthForTabItemAreaDrag);
		splitWidth = $ret.p0;
		this.__availableWidthForTabItemAreaDrag = $ret.p1;
		this.startDragImpl($.ig.SpreadsheetAreaLayoutManager_DragType.prototype.tabItemAreaSplitter, $.ig.SpreadsheetCursor.prototype.tabItemSplit, panelRelativePoint);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::StartTabAreaSplitterDrag(System.Windows.Point, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::UpdateScrollBars(System.Collections.Generic.IEnumerable, Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator, Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	updateScrollBars: function (providers, visibilityCoordinator, orientation) {
		var mediators = visibilityCoordinator.mediators();
		var availableScrollbars = new $.ig.List$1($.ig.IPlatformScrollBarAdapter.prototype.$type, 0);
		var items = providers == null ? new Array(0) : $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, providers);
		var scrollInfos = $.ig.Enumerable.prototype.toArray$1($.ig.SpreadsheetScrollInfo.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, $.ig.SpreadsheetScrollInfo.prototype.$type, items, function (p) { return p._scrollInfo(); }));
		var recycle = new $.ig.Dictionary$2($.ig.ScrollInfo.prototype.$type, $.ig.ScrollBarInfoMediator.prototype.$type, 0);
		for (var i = mediators.count() - 1; i >= 0; i--) {
			var info = mediators.item(i);
			var idx = $.ig.util.arrayIndexOf1($.ig.ScrollInfo.prototype.$type, scrollInfos, info.scrollInfo());
			if (idx >= 0 && (items[idx].isFrozen() == (info.scrollBar() == null))) {
				recycle.item(info.scrollInfo(), info);
			} else {
				if (info.scrollBar() != null) {
					availableScrollbars.add(info.scrollBar());
				}
				info.dispose();
			}
			visibilityCoordinator.remove(info);
		}
		for (var i1 = 0; i1 < scrollInfos.length; i1++) {
			var scrollInfo = scrollInfos[i1];
			var mediator;
			if (!(function () { var $ret = recycle.tryGetValue(scrollInfo, mediator); mediator = $ret.p1; return $ret.ret; }())) {
				mediator = new $.ig.ExtendedScrollBarInfoMediator(scrollInfo);
				mediator.scrollBarIsEnabledAction(function () {
				});
				if (!items[i1].isFrozen()) {
					var sb;
					if (availableScrollbars.count() > 0) {
						var idx1 = availableScrollbars.count() - 1;
						sb = availableScrollbars.__inner[idx1];
						availableScrollbars.removeAt(idx1);
					} else {
						sb = this.createScrollBar(orientation);
					}
					mediator.scrollBar(sb);
					this.initializeScrollBar(sb, scrollInfo);
				}
			}
			visibilityCoordinator.add(mediator);
		}
		var en = availableScrollbars.getEnumerator();
		while (en.moveNext()) {
			var old = en.current();
			this.removeScrollBar(old);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::UpdateScrollBars(System.Collections.Generic.IEnumerable, Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator, Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::VerifyScrollBars(System.Collections.Generic.IEnumerable, Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator, Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	verifyScrollBars: function (items, visibilityCoordinator, orientation) {
		var mediators = visibilityCoordinator.mediators();
		if (items == null) {
			if (mediators.count() == 0) {
				return;
			}
		} else {
			var source = items.getEnumerator();
			var target = mediators.getEnumerator();
			var areDifferent = false;
			do {
				var hasSource = source.moveNext();
				var hasTarget = target.moveNext();
				if (hasSource != hasTarget) {
					areDifferent = true;
				} else if (!hasSource) {
					break;
				} else if (source.current()._scrollInfo() != target.current().scrollInfo()) {
					areDifferent = true;
				} else {
					var hasSb = target.current().scrollBar() != null;
					var thisNeedsSb = !source.current().isFrozen();
					if (hasSb != thisNeedsSb) {
						areDifferent = true;
					}
				}
			} while (!areDifferent);
			if (!areDifferent) {
				return;
			}
		}
		this.updateScrollBars(items, visibilityCoordinator, orientation);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::VerifyScrollBars(System.Collections.Generic.IEnumerable, Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator, Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::VerifySheetLayerInfos`1(System.Collections.Generic.IList, System.Collections.Generic.List, System.Action, System.Action, System.Func)" />*/
	verifySheetLayerInfos$1: function ($t, items, infos, onItemAdded, onItemRemoved, layerContainerCreator) {
		var rebuild = items.count() != infos.count();
		var equalityComparer = $.ig.EqualityComparer$1.prototype.defaultEqualityComparerValue($t);
		if (!rebuild) {
			for (var i = 0; i < infos.count(); i++) {
				if (!equalityComparer.equalsC(infos.__inner[i]._viewObject, items.item(i))) {
					rebuild = true;
					break;
				}
			}
		}
		if (rebuild) {
			var oldInfos = $.ig.Enumerable.prototype.toList$1($.ig.SpreadsheetAreaLayoutManager_SheetLayerInfo$1.prototype.$type.specialize($t), infos);
			infos.clear();
			for (var i1 = 0; i1 < items.count(); i1++) {
				var idx = oldInfos.findIndex(function (p) { return equalityComparer.equalsC(p._viewObject, items.item(i1)); });
				infos.add(null);
				if (idx >= 0) {
					infos.__inner[i1] = oldInfos.__inner[idx];
					oldInfos.removeAt(idx);
				}
			}
			for (var i2 = 0; i2 < oldInfos.count(); i2++) {
				var old = oldInfos.__inner[i2];
				if (null != onItemRemoved) {
					onItemRemoved(old);
				}
				this.onLayerContainerRemoved$1($t, old._layerContainer);
			}
			for (var i3 = 0; i3 < items.count(); i3++) {
				if (infos.__inner[i3] == null) {
					var layerContainer = layerContainerCreator(items.item(i3));
					infos.__inner[i3] = new $.ig.SpreadsheetAreaLayoutManager_SheetLayerInfo$1($t, items.item(i3), layerContainer);
					if (null != onItemAdded) {
						onItemAdded(infos.__inner[i3]);
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::VerifySheetLayerInfos`1(System.Collections.Generic.IList, System.Collections.Generic.List, System.Action, System.Action, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::VerifySheetManager()" />*/
	verifySheetManager: function () {
		this.sheetPaneManager(this.__spreadsheet != null ? this.__spreadsheet._sheetManager() : null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager::VerifySheetManager()" />*/
	,
	$type: new $.ig.Type('SpreadsheetAreaLayoutManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager" />*/

$.ig.util.defType('VisualElementSpreadsheetAreaLayoutManager', 'SpreadsheetAreaLayoutManager', {
	_element: null,
	init: function (element) {
		this._isArrangeValid = false;
		this._isMeasureValid = false;
		$.ig.SpreadsheetAreaLayoutManager.prototype.init.call(this);
		this._element = element;
	},
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::GetScrollRegionElement(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	getScrollRegionElement: function (scrollRegion) {
		var info = scrollRegion._isRowHeader() ? this.rowInfo() : this.columnInfo();
		var en = info._headerLayerInfos.getEnumerator();
		while (en.moveNext()) {
			var headerInfo = en.current();
			if (headerInfo._viewObject == scrollRegion) {
				return (headerInfo._layerContainer)._element;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::GetScrollRegionElement(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::GetPaneElement(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	getPaneElement: function (pane) {
		var en = this.paneInfos().getEnumerator();
		while (en.moveNext()) {
			var paneInfo = en.current();
			if (paneInfo._viewObject == pane) {
				return (paneInfo._layerContainer)._element;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::GetPaneElement(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::OnBeforeMeasure(System.Windows.Size)" />*/
	onBeforeMeasure: function (availableSize) {
		$.ig.SpreadsheetAreaLayoutManager.prototype.onBeforeMeasure.call(this, availableSize);
		this._isMeasureValid = true;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::OnBeforeMeasure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::OnBeforeArrange(System.Windows.Size)" />*/
	onBeforeArrange: function (finalSize) {
		if (!this._isMeasureValid) {
			this.measure(finalSize);
		}
		$.ig.SpreadsheetAreaLayoutManager.prototype.onBeforeArrange.call(this, finalSize);
		this._isArrangeValid = true;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::OnBeforeArrange(System.Windows.Size)" />*/
	,
	_isArrangeValid: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::InvalidateArrange()" />*/
	invalidateArrange: function () {
		this._element.hasPositionChanged(true);
		this._isArrangeValid = false;
		var ss = this.spreadsheet();
		if (ss != null) {
			ss.scheduleArrange();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::InvalidateArrange()" />*/
	,
	_isMeasureValid: false,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
		this._element.hasPositionChanged(true);
		this._isMeasureValid = false;
		this._isArrangeValid = false;
		var ss = this.spreadsheet();
		if (ss != null) {
			ss.scheduleArrange();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager::InvalidateMeasure()" />*/
	,
	$type: new $.ig.Type('VisualElementSpreadsheetAreaLayoutManager', $.ig.SpreadsheetAreaLayoutManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.VisualElementSpreadsheetAreaLayoutManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager" />*/

$.ig.util.defType('JsSpreadsheetAreaLayoutManager', 'VisualElementSpreadsheetAreaLayoutManager', {
	init: function (element) {
		$.ig.VisualElementSpreadsheetAreaLayoutManager.prototype.init.call(this, element);
	},
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveChild(Infragistics.Controls.Core.VisualElement)" />*/
	removeChild: function (child) {
		if (child != null) {
			child.isRemoved(true);
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveChild(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateInPlaceEditor()" />*/
	createInPlaceEditor: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateInPlaceEditor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveInPlaceEditor()" />*/
	removeInPlaceEditor: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveInPlaceEditor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureInPlaceEditor(System.Windows.Size)" />*/
	measureInPlaceEditor: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureInPlaceEditor(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeInPlaceEditor(System.Windows.Rect, System.Windows.Rect)" />*/
	arrangeInPlaceEditor: function (rect, paneAreaClipRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeInPlaceEditor(System.Windows.Rect, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredInPlaceEditorHeight()" />*/
	getPreferredInPlaceEditorHeight: function () {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredInPlaceEditorHeight()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateInPlaceEditorBackground()" />*/
	createInPlaceEditorBackground: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateInPlaceEditorBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveInPlaceEditorBackground()" />*/
	removeInPlaceEditorBackground: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveInPlaceEditorBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureInPlaceEditorBackground(System.Windows.Size)" />*/
	measureInPlaceEditorBackground: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureInPlaceEditorBackground(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeInPlaceEditorBackground(System.Windows.Rect, System.Windows.Rect)" />*/
	arrangeInPlaceEditorBackground: function (backgroundRect, paneAreaClipRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeInPlaceEditorBackground(System.Windows.Rect, System.Windows.Rect)" />*/
	,
	__inputMessageControl: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateInputMessageControl()" />*/
	createInputMessageControl: function () {
		this.__inputMessageControl = new $.ig.SpreadsheetInputMessageElement(this._element);
		this.__inputMessageControl.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_InputMessage);
		this.__inputMessageControl.isVisible(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveInputMessageControl()" />*/
	removeInputMessageControl: function () {
		this.__inputMessageControl = this.removeChild(this.__inputMessageControl);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeInputMessageControl(System.Windows.Rect)" />*/
	arrangeInputMessageControl: function (rect) {
		this.__inputMessageControl.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeInputMessageControl(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureInputMessageControl(System.Windows.Size)" />*/
	measureInputMessageControl: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureInputMessageControl(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::HideInputMessageControl()" />*/
	hideInputMessageControl: function () {
		this.__inputMessageControl.isVisible(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::HideInputMessageControl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ShowInputMessageControl(System.String, System.String)" />*/
	showInputMessageControl: function (message, title) {
		this.__inputMessageControl.initialize(title, message);
		this.__inputMessageControl.isVisible(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ShowInputMessageControl(System.String, System.String)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredInputMessageControlWidth()" />*/
	preferredInputMessageControlWidth: function () {
		return this.__inputMessageControl._preferredWidth;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredInputMessageControlWidth()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredInputMessageControlHeight()" />*/
	preferredInputMessageControlHeight: function () {
		return this.__inputMessageControl._preferredHeight;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredInputMessageControlHeight()" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetRelativeLayerBounds`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	getRelativeLayerBounds$1: function ($t, layer) {
		var ssLayer = layer;
		var elem = ssLayer._element;
		return new $.ig.Rect(0, elem._left, elem._top, elem._width, elem._height);
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetRelativeLayerBounds`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateHeaderLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	createHeaderLayerContainer: function (scrollRegion) {
		var id = scrollRegion._isRowHeader() ? $.ig.SpreadsheetElementIds.prototype.spreadsheetRowHeaderContainer : $.ig.SpreadsheetElementIds.prototype.spreadsheetColumnHeaderContainer;
		var holder = this._element.getRemovedChild(id);
		var renderElement = null;
		if (holder != null) {
			holder.isRemoved(false);
			renderElement = holder.getChild(0);
			this.removeOldLayers$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement);
		} else {
			holder = new $.ig.SpreadsheetLayerContainerElement$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, this._element, id);
			holder.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_Headers);
		}
		if (renderElement == null) {
			renderElement = new $.ig.RendererLayerVisualElement$2($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, $.ig.ISpreadsheetGraphics.prototype.$type, holder, $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer);
		}
		this.addChild$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement, new $.ig.SpreadsheetHeaderBackgroundLayer(scrollRegion, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement, new $.ig.SpreadsheetHeaderGridlineLayer(scrollRegion, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement, new $.ig.SpreadsheetHeaderContentLayer(scrollRegion, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement, new $.ig.SpreadsheetHeaderSelectionLayer(scrollRegion, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, renderElement)));
		var container = new $.ig.ScrollRegionLayerContainer(holder, scrollRegion);
		holder.interactionManager(container._interactionManager);
		return container;
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateHeaderLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveOldLayers`1(Infragistics.Controls.Grids.Core.RendererLayerVisualElement)" />*/
	removeOldLayers$1: function ($t, renderElement) {
		var oldLayers = new $.ig.List$1($.ig.RendererElementLayer$2.prototype.$type.specialize($t, $.ig.ISpreadsheetGraphics.prototype.$type), 1, renderElement.getLayers());
		var en = oldLayers.getEnumerator();
		while (en.moveNext()) {
			var oldLayer = en.current();
			renderElement.removeLayer(oldLayer);
			oldLayer.dispose();
			oldLayer._view().detach(oldLayer);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveOldLayers`1(Infragistics.Controls.Grids.Core.RendererLayerVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::AddChild`1(Infragistics.Controls.Grids.Core.RendererLayerVisualElement, Infragistics.Controls.Primitives.RendererElementLayer)" />*/
	addChild$1: function ($t, container, layer) {
		layer._view().attach(layer);
		container.addLayer(layer);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::AddChild`1(Infragistics.Controls.Grids.Core.RendererLayerVisualElement, Infragistics.Controls.Primitives.RendererElementLayer)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreatePaneLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	createPaneLayerContainer: function (pane) {
		var holder = this._element.getRemovedChild($.ig.SpreadsheetElementIds.prototype.spreadsheetPaneContainer);
		var renderer1 = null;
		var cellLayerView = null;
		var renderer2 = null;
		if (holder != null) {
			holder.isRemoved(false);
			renderer1 = holder.getChild(0);
			cellLayerView = (holder.getChild(1))._layerView;
			renderer2 = holder.getChild(2);
			this.removeOldLayers$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer1);
			var oldCellLayer = cellLayerView.layer();
			oldCellLayer.dispose();
			cellLayerView.detach(oldCellLayer);
			this.removeOldLayers$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2);
		} else {
			holder = new $.ig.SpreadsheetLayerContainerElement$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, this._element, $.ig.SpreadsheetElementIds.prototype.spreadsheetPaneContainer);
			renderer1 = new $.ig.RendererLayerVisualElement$2($.ig.spreadsheet.SpreadsheetPane.prototype.$type, $.ig.ISpreadsheetGraphics.prototype.$type, holder, $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer);
			cellLayerView = new $.ig.SpreadsheetCellValueLayerView(holder);
			renderer2 = new $.ig.RendererLayerVisualElement$2($.ig.spreadsheet.SpreadsheetPane.prototype.$type, $.ig.ISpreadsheetGraphics.prototype.$type, holder, $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer);
		}
		if (renderer1 == null) {
			renderer1 = new $.ig.RendererLayerVisualElement$2($.ig.spreadsheet.SpreadsheetPane.prototype.$type, $.ig.ISpreadsheetGraphics.prototype.$type, holder, $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer);
		}
		this.addChild$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer1, new $.ig.SpreadsheetPaneCellBackgroundLayer(pane, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer1)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer1, new $.ig.SpreadsheetPaneGridlineLayer(pane, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer1)));
		if (cellLayerView == null) {
			cellLayerView = new $.ig.SpreadsheetCellValueLayerView(holder);
		}
		var layer = new $.ig.SpreadsheetPaneCellValueLayer(pane, cellLayerView);
		cellLayerView.attach(layer);
		if (renderer2 == null) {
			renderer2 = new $.ig.RendererLayerVisualElement$2($.ig.spreadsheet.SpreadsheetPane.prototype.$type, $.ig.ISpreadsheetGraphics.prototype.$type, holder, $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer);
		}
		this.addChild$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2, new $.ig.SpreadsheetPaneCellBorderLayer(pane, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2, new $.ig.SpreadsheetPaneSelectionLayer(pane, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2, new $.ig.SpreadsheetPaneInvalidDataLayer(pane, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2)));
		this.addChild$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2, new $.ig.SpreadsheetPaneInteractionOverlayLayer(pane, new $.ig.RendererLayerVisualElementView$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, renderer2)));
		var container = new $.ig.PaneLayerContainer(holder, pane);
		holder.interactionManager(container._interactionManager);
		return container;
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreatePaneLayerContainer(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnLayerContainerRemoved`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	onLayerContainerRemoved$1: function ($t, layer) {
		var ssLayer = layer;
		this.removeChild(ssLayer._element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnLayerContainerRemoved`1(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Size)" />*/
	measureLayerContainer$1: function ($t, layer, size) {
		var ssLayer = layer;
		ssLayer.measure(size);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Rect)" />*/
	arrangeLayerContainer$1: function ($t, layer, rect) {
		var ssLayer = layer;
		ssLayer._element.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeLayerContainer`1(Infragistics.Controls.Primitives.IElementLayerContainer, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateScrollBar(Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	createScrollBar: function (orientation) {
		var sb = new $.ig.JsScrollBarAdapter(new $.ig.JsScrollBar(orientation, this._element));
		var sbElem = sb._scrollBar._element;
		sbElem.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_ScrollBars);
		var isHorz = orientation == $.ig.ScrollInfoOrientation.prototype.horizontal;
		var metrics = this.spreadsheet().__metricsCache;
		sbElem._constraint = isHorz ? metrics._horizontalScrollBarConstraint : metrics._verticalScrollBarConstraint;
		if (isHorz) {
			sbElem._scrollNear._width = metrics._hScrollNearButtonWidth;
			sbElem._scrollFar._width = metrics._hScrollFarButtonWidth;
		} else {
			sbElem._scrollNear._height = metrics._vScrollNearButtonHeight;
			sbElem._scrollFar._height = metrics._vScrollFarButtonHeight;
		}
		return sb;
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateScrollBar(Infragistics.Controls.Primitives.ScrollInfoOrientation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	removeScrollBar: function (scrollBar) {
		var adapter = scrollBar;
		adapter.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InitializeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo)" />*/
	initializeScrollBar: function (scrollBar, scrollInfo) {
		scrollBar.setIsEnabled(scrollInfo != null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InitializeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Rect)" />*/
	arrangeScrollBar: function (scrollBar, rect) {
		var sb = scrollBar;
		sb._scrollBar._element.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Size)" />*/
	measureScrollBar: function (scrollBar, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureScrollBar(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredScrollBarWidth(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	getPreferredScrollBarWidth: function (scrollBar) {
		return this.spreadsheet().__metricsCache._scrollBarWidth;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredScrollBarWidth(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredScrollBarHeight(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	getPreferredScrollBarHeight: function (scrollBar) {
		return this.spreadsheet().__metricsCache._scrollBarHeight;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredScrollBarHeight(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	__selectAll: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSelectAllButton()" />*/
	createSelectAllButton: function () {
		this.__selectAll = new $.ig.SpreadsheetSelectAllButtonElement(this._element);
		this.__selectAll.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_HeaderIntersection);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSelectAllButton()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSelectAllButton()" />*/
	removeSelectAllButton: function () {
		this.__selectAll = this.removeChild(this.__selectAll);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSelectAllButton()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSelectAllButton(System.Windows.Rect)" />*/
	arrangeSelectAllButton: function (rect) {
		this.__selectAll.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSelectAllButton(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSelectAllButton(System.Windows.Size)" />*/
	measureSelectAllButton: function (size) {
		this.invalidateSelectAllButton();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSelectAllButton(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InvalidateSelectAllButton()" />*/
	invalidateSelectAllButton: function () {
		if (this.__selectAll != null) {
			this.__selectAll.areAllRowsAndColumnsSelected(this.sheetPaneManager()._hasSingleSelectionWithAllRowsAndColumns());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InvalidateSelectAllButton()" />*/
	,
	__rowSplitter: null,
	__colSplitter: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InitializeSplitter(System.Boolean, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	initializeSplitter: function (isRow, isEnabled, regionBefore, regionAfter) {
		var splitter = isRow ? this.__rowSplitter : this.__colSplitter;
		splitter.isEnabled(isEnabled);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InitializeSplitter(System.Boolean, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSplitter(System.Boolean)" />*/
	createSplitter: function (isRow) {
		var splitter;
		if (isRow) {
			this.__rowSplitter = splitter = new $.ig.SpreadsheetPaneSplitterElement(this._element, $.ig.PaneSplitterType.prototype.rowSplitter);
		} else {
			this.__colSplitter = splitter = new $.ig.SpreadsheetPaneSplitterElement(this._element, $.ig.PaneSplitterType.prototype.columnSplitter);
		}
		splitter.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_Splitter);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSplitter(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSplitter(System.Boolean)" />*/
	removeSplitter: function (isRow) {
		if (isRow) {
			this.__rowSplitter = this.removeChild(this.__rowSplitter);
		} else {
			this.__colSplitter = this.removeChild(this.__colSplitter);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSplitter(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSplitter(System.Boolean, System.Windows.Rect)" />*/
	arrangeSplitter: function (isRow, rect) {
		var splitter = isRow ? this.__rowSplitter : this.__colSplitter;
		splitter.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSplitter(System.Boolean, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSplitter(System.Boolean, System.Windows.Size)" />*/
	measureSplitter1: function (isRow, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSplitter(System.Boolean, System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredSplitterThickness(System.Boolean)" />*/
	getPreferredSplitterThickness: function (isRow) {
		var splitter = isRow ? this.__rowSplitter : this.__colSplitter;
		var cache = this.spreadsheet().__metricsCache;
		return splitter.isEnabled() ? isRow ? cache._splitterBarHeight : cache._splitterBarWidth : isRow ? cache._splitterBarHeightDisabled : cache._splitterBarWidthDisabled;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::GetPreferredSplitterThickness(System.Boolean)" />*/
	,
	__rowSplitterPreview: null,
	__colSplitterPreview: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSplitterPreview(System.Boolean)" />*/
	createSplitterPreview: function (isRow) {
		var preview = new $.ig.VisualElement(this._element, isRow ? $.ig.SpreadsheetElementIds.prototype.rowSplitterPreview : $.ig.SpreadsheetElementIds.prototype.colSplitterPreview);
		preview.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_SplitterPreview);
		preview.isHitTestVisible(false);
		if (isRow) {
			this.__rowSplitterPreview = preview;
		} else {
			this.__colSplitterPreview = preview;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSplitterPreview(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSplitterPreview(System.Boolean)" />*/
	removeSplitterPreview: function (isRow) {
		if (isRow) {
			this.__rowSplitterPreview = this.removeChild(this.__rowSplitterPreview);
		} else {
			this.__colSplitterPreview = this.removeChild(this.__colSplitterPreview);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSplitterPreview(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSplitterPreview(System.Boolean, System.Windows.Rect)" />*/
	arrangeSplitterPreview: function (isRow, rect) {
		var preview = isRow ? this.__rowSplitterPreview : this.__colSplitterPreview;
		preview.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSplitterPreview(System.Boolean, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSplitterPreview(System.Boolean, System.Windows.Size)" />*/
	measureSplitterPreview: function (isRow, size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSplitterPreview(System.Boolean, System.Windows.Size)" />*/
	,
	__splitterIntersection: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InitializeSplitterIntersectionRect(System.Windows.Rect)" />*/
	initializeSplitterIntersectionRect: function (intersectionRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::InitializeSplitterIntersectionRect(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSplitterIntersection()" />*/
	createSplitterIntersection: function () {
		this.__splitterIntersection = new $.ig.SpreadsheetPaneSplitterElement(this._element, $.ig.PaneSplitterType.prototype.splitterIntersection);
		this.__splitterIntersection.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_SplitterIntersection);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateSplitterIntersection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSplitterIntersection()" />*/
	removeSplitterIntersection: function () {
		this.__splitterIntersection = this.removeChild(this.__splitterIntersection);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveSplitterIntersection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSplitterIntersection(System.Windows.Rect)" />*/
	arrangeSplitterIntersection: function (rect) {
		this.__splitterIntersection.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeSplitterIntersection(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSplitterIntersection(System.Windows.Size)" />*/
	measureSplitterIntersection: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureSplitterIntersection(System.Windows.Size)" />*/
	,
	__tabItemArea: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabItemArea()" />*/
	createTabItemArea: function () {
		this.__tabItemArea = new $.ig.SpreadsheetTabItemAreaElement(this._element, "TabItemArea");
		this.__tabItemArea._tabItemPanel._layoutManager.tabManager(this.spreadsheet()._tabManager());
		this.__tabItemArea._addNewButton.isVisible(this.spreadsheet().allowAddWorksheet());
		this.__tabItemArea.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabArea);
		var buttons = [ this.__tabItemArea._scrollFirstButton, this.__tabItemArea._scrollLastButton, this.__tabItemArea._scrollNextButton, this.__tabItemArea._scrollPreviousButton, this.__tabItemArea._activateNextButton, this.__tabItemArea._activatePreviousButton, this.__tabItemArea._addNewButton ];
		var metrics = this.spreadsheet().__metricsCache;
		var widths = [ metrics._tabScrollFirstWidth, metrics._tabScrollLastWidth, metrics._tabScrollNextWidth, metrics._tabScrollPreviousWidth, metrics._activateNextTabWidth, metrics._activatePrevTabWidth, metrics._addWorksheetWidth ];
		var heights = [ metrics._tabScrollFirstHeight, metrics._tabScrollLastHeight, metrics._tabScrollNextHeight, metrics._tabScrollPreviousHeight, metrics._activateNextTabHeight, metrics._activatePrevTabHeight, metrics._addWorksheetHeight ];
		var maxHeight = 0;
		var totalWidth = 0;
		for (var i = 0; i < buttons.length; i++) {
			buttons[i]._width = widths[i];
			buttons[i]._height = heights[i];
			totalWidth += widths[i];
			if (heights[i] > maxHeight) {
				maxHeight = heights[i];
			}
		}
		this.__tabItemArea._preferredButtonWidth = totalWidth;
		this.__tabItemArea._preferredButtonHeight = maxHeight;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabItemArea()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabItemArea()" />*/
	removeTabItemArea: function () {
		this.__tabItemArea._tabItemPanel._layoutManager.tabManager(null);
		this.__tabItemArea = this.removeChild(this.__tabItemArea);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabItemArea()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabItemArea(System.Windows.Rect)" />*/
	arrangeTabItemArea: function (rect) {
		this.__tabItemArea.setPosition(rect.x(), rect.y(), rect.width(), rect.height());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabItemArea(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabItemArea(System.Windows.Size)" />*/
	measureTabItemArea: function (size) {
		this.__tabItemArea._tabItemPanel._layoutManager.measure();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabItemArea(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaHeight()" />*/
	preferredTabItemAreaHeight: function () {
		var height = this.spreadsheet().__metricsCache._tabHeight;
		if (this.__tabItemArea._preferredButtonHeight > height) {
			height = this.__tabItemArea._preferredButtonHeight;
		}
		return height;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaWidth()" />*/
	preferredTabItemAreaWidth: function () {
		var btnWidth = this.__tabItemArea._preferredButtonWidth;
		if (!this.__tabItemArea._addNewButton.isVisible()) {
			btnWidth -= this.__tabItemArea._addNewButton._width;
		}
		return btnWidth + this.__tabItemArea._tabItemPanel._layoutManager._preferredItemAreaWidth;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaWidth()" />*/
	,
	__tabItemAreaSplitter: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabItemAreaSplitter()" />*/
	createTabItemAreaSplitter: function () {
		this.__tabItemAreaSplitter = new $.ig.SpreadsheetTabAreaSplitterElement(this._element);
		this.__tabItemAreaSplitter.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabAreaSplitter);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabItemAreaSplitter()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabItemAreaSplitter()" />*/
	removeTabItemAreaSplitter: function () {
		this.__tabItemAreaSplitter = this.removeChild(this.__tabItemAreaSplitter);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabItemAreaSplitter()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabItemAreaSplitter(System.Windows.Rect)" />*/
	arrangeTabItemAreaSplitter: function (rect) {
		this.__tabItemAreaSplitter.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabItemAreaSplitter(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabItemAreaSplitter(System.Windows.Size)" />*/
	measureTabItemAreaSplitter: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabItemAreaSplitter(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterHeight()" />*/
	preferredTabItemAreaSplitterHeight: function () {
		return this.spreadsheet().__metricsCache._tabItemAreaSplitterHeight;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterWidth()" />*/
	preferredTabItemAreaSplitterWidth: function () {
		return this.spreadsheet().__metricsCache._tabItemAreaSplitterWidth;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabItemAreaSplitterWidth()" />*/
	,
	__tabAreaBackground: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabAreaBackground()" />*/
	createTabAreaBackground: function () {
		this.__tabAreaBackground = new $.ig.VisualElement(this._element, $.ig.SpreadsheetElementIds.prototype.tabAreaBackground);
		this.__tabAreaBackground.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabAreaBackground);
		this.__tabAreaBackground.isHitTestVisible(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabAreaBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabAreaBackground()" />*/
	removeTabAreaBackground: function () {
		this.__tabAreaBackground = this.removeChild(this.__tabAreaBackground);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabAreaBackground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabAreaBackground(System.Windows.Rect)" />*/
	arrangeTabAreaBackground: function (rect) {
		this.__tabAreaBackground.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabAreaBackground(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabAreaBackground(System.Windows.Size)" />*/
	measureTabAreaBackground: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabAreaBackground(System.Windows.Size)" />*/
	,
	__tabAreaBorder: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabAreaBorder()" />*/
	createTabAreaBorder: function () {
		this.__tabAreaBorder = new $.ig.VisualElement(this._element, $.ig.SpreadsheetElementIds.prototype.tabAreaBorder);
		this.__tabAreaBorder.zIndex($.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabAreaBorder);
		this.__tabAreaBorder.isHitTestVisible(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CreateTabAreaBorder()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabAreaBorder()" />*/
	removeTabAreaBorder: function () {
		this.__tabAreaBorder = this.removeChild(this.__tabAreaBorder);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::RemoveTabAreaBorder()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabAreaBorder(System.Windows.Rect)" />*/
	arrangeTabAreaBorder: function (rect) {
		this.__tabAreaBorder.setPosition1(rect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::ArrangeTabAreaBorder(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabAreaBorder(System.Windows.Size)" />*/
	measureTabAreaBorder: function (size) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::MeasureTabAreaBorder(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabAreaBorderHeight()" />*/
	preferredTabAreaBorderHeight: function () {
		return this.spreadsheet().__metricsCache._tabAreaBorderHeight;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::PreferredTabAreaBorderHeight()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	onTabManagerChanged: function (oldValue, newValue) {
		this.invalidateMeasure();
		this.invalidateArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnSheetPaneManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	onSheetPaneManagerChanged: function (oldValue, newValue) {
		this.invalidateMeasure();
		this.invalidateArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnSheetPaneManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CancelElementDragOverride()" />*/
	cancelElementDragOverride: function () {
		this._element.cursor(null);
		(this._element.getRoot()).releaseCapture(this._element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::CancelElementDragOverride()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnDragTypeChanged(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType, Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType)" />*/
	onDragTypeChanged: function (oldType, newType) {
		$.ig.VisualElementSpreadsheetAreaLayoutManager.prototype.onDragTypeChanged.call(this, oldType, newType);
		switch (oldType) {
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.inputMessage:
				if (this.__inputMessageControl != null) {
					this.__inputMessageControl.isActive(false);
				}
				break;
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.tabItemAreaSplitter:
				if (this.__tabItemAreaSplitter != null) {
					this.__tabItemAreaSplitter.isActive(false);
				}
				break;
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.paneSplitter:
				if (this.__rowSplitter != null) {
					this.__rowSplitter.isActive(false);
				}
				if (this.__colSplitter != null) {
					this.__colSplitter.isActive(false);
				}
				if (this.__splitterIntersection != null) {
					this.__splitterIntersection.isActive(false);
				}
				break;
		}
		switch (newType) {
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.inputMessage:
				if (this.__inputMessageControl != null) {
					this.__inputMessageControl.isActive(true);
				}
				break;
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.tabItemAreaSplitter:
				if (this.__tabItemAreaSplitter != null) {
					this.__tabItemAreaSplitter.isActive(true);
				}
				break;
			case $.ig.SpreadsheetAreaLayoutManager_DragType.prototype.paneSplitter:
				if (this.__rowSplitterPreview != null) {
					this.__rowSplitter.isActive(true);
				}
				if (this.__colSplitterPreview != null) {
					this.__colSplitter.isActive(true);
				}
				if (this.__rowSplitterPreview != null && this.__colSplitterPreview != null) {
					this.__splitterIntersection.isActive(true);
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnDragTypeChanged(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType, Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_DragType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::StartDragOverride(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	startDragOverride: function (cursor) {
		if ((this._element.getRoot()).capture(this._element)) {
			this._element.cursor($.ig.SpreadsheetCursorHelper.prototype.getCursorInfo(cursor));
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::StartDragOverride(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	transformPointFromPanel: function (paneLayer, panelPoint) {
		var elem = (paneLayer._layerContainer)._element;
		return { __x: panelPoint.__x - (elem._left), __y: panelPoint.__y - (elem._top), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	transformPointFromPanel1: function (paneLayer, panelPoint) {
		var elem = (paneLayer._layerContainer)._element;
		return { __x: panelPoint.__x - (elem._left), __y: panelPoint.__y - (elem._top), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointFromPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformBoundsToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Rect)" />*/
	transformBoundsToPanel: function (paneLayer, panelBounds) {
		var elem = (paneLayer._layerContainer)._element;
		return new $.ig.Rect(0, panelBounds.x() + (elem._left), panelBounds.y() + (elem._top), panelBounds.width(), panelBounds.height());
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformBoundsToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	transformPointToPanel: function (paneLayer, panelPoint) {
		var elem = (paneLayer._layerContainer)._element;
		return { __x: panelPoint.__x + (elem._left), __y: panelPoint.__y + (elem._top), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointToPanel(Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointFromControl(System.Windows.Point)" />*/
	transformPointFromControl: function (controlRelativePoint) {
		return { __x: controlRelativePoint.__x - this._element._left, __y: controlRelativePoint.__y - this._element._top, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::TransformPointFromControl(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		$.ig.VisualElementSpreadsheetAreaLayoutManager.prototype.onSubObjectPropertyChanged1.call(this, sender, property, extraInfo);
		switch (property) {
			case "AllowAddWorksheet":
				if (this.__tabItemArea != null) {
					this.__tabItemArea._addNewButton.isVisible(this.spreadsheet().allowAddWorksheet());
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('JsSpreadsheetAreaLayoutManager', $.ig.VisualElementSpreadsheetAreaLayoutManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetAreaLayoutManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ISpreadsheetInteractionManagerOwner" />*/

$.ig.util.defType('ISpreadsheetInteractionManagerOwner', 'Object', {
	$type: new $.ig.Type('ISpreadsheetInteractionManagerOwner', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ISpreadsheetInteractionManagerOwner" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.IElementLayerContainer" />*/

$.ig.util.defType('IElementLayerContainer', 'Object', {
	$type: new $.ig.Type('IElementLayerContainer', null)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.IElementLayerContainer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1" />*/

$.ig.util.defType('SpreadsheetElementLayerContainer$1', 'Object', {
	$t: null,
	_element: null,
	_viewModel: null,
	_interactionManager: null,
	__toolTipElement: null,
	init: function ($t, element, viewModel) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(element);
		$.ig.CoreUtilities.prototype.validateNotNull(viewModel);
		this._element = element;
		this._viewModel = viewModel;
		this._interactionManager = this.createInteractionManager();
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::CreateInteractionManager()" />*/
	createInteractionManager: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::CreateInteractionManager()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::Measure(System.Windows.Size)" />*/
	measure: function (size) {
		for (var i = 0, count = this._element.childrenCount(); i < count; i++) {
			var layerElem = $.ig.util.cast($.ig.LayerVisualElement.prototype.$type, this._element.getChild(i));
			if (layerElem != null) {
				layerElem.measureLayers(size);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::Measure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::FocusControlIfNeeded()" />*/
	focusControlIfNeeded: function () {
		var activeElem = document.activeElement;
		var ss = $.ig.util.cast($.ig.SpreadsheetVisualElement.prototype.$type, this._element.getRoot());
		if (ss != null && (activeElem == null || ss._spreadsheet._viewResolved().hasKeyboardFocusWithin())) {
			ss._spreadsheet._viewResolved().focus();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::FocusControlIfNeeded()" />*/
	,
	getRelativeSpreadsheetControlBounds: function () {
		return $.ig.util.rectToLiteral(this._getRelativeSpreadsheetControlBounds$i.apply(this, arguments));
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::GetRelativeSpreadsheetControlBounds()" />*/
	_getRelativeSpreadsheetControlBounds$i: function () {
		var root = this._element.getRoot();
		return new $.ig.Rect(0, root._left - this._element._left, root._top - this._element._top, root._width, root._height);
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::GetRelativeSpreadsheetControlBounds()" />*/
	,
	getLayerContainerSize: function () {
		return $.ig.util.sizeToLiteral(this._getLayerContainerSize$i.apply(this, arguments));
	},
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::GetLayerContainerSize()" />*/
	_getLayerContainerSize$i: function () {
		return new $.ig.Size(1, this._element._width, this._element._height);
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::GetLayerContainerSize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::HideToolTip()" />*/
	hideToolTip: function () {
		this._element.hideToolTip();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::HideToolTip()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::IsMouseOver()" />*/
	isMouseOver: function () {
		return this._element.isMouseOver();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::IsMouseOver()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::IsToolTipAllowed()" />*/
	isToolTipAllowed: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::IsToolTipAllowed()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::OnCursorChanged(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	onCursorChanged: function (cursor) {
		this._element.cursor($.ig.SpreadsheetCursorHelper.prototype.getCursorInfo(cursor));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::OnCursorChanged(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::ShowToolTip(Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext)" />*/
	showToolTip: function (tooltip) {
		this._element.showToolTip(tooltip.toolTip().toString(), tooltip.position().__x, tooltip.position().__y);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1::ShowToolTip(Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext)" />*/
	,
	$type: new $.ig.Type('SpreadsheetElementLayerContainer$1', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetInteractionManagerOwner.prototype.$type, $.ig.IElementLayerContainer.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetElementLayerContainer`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPane" />*/

$.ig.spreadsheet.SpreadsheetPane = $.ig.util.defType('spreadsheet.SpreadsheetPane', 'PropertyChangeNotifierExtended', {
	___columnScrollRegion: null,
	___rowScrollRegion: null,
	___cellValuesInternal: null,
	___listener: null,
	___cellValueArray: null,
	___hyperlinkArray: null,
	___invalidCellArray: null,
	___cellFillArray: null,
	___gridlinePen: null,
	___background: null,
	___selection: null,
	___shapesInternal: null,
	___hideActiveCellContent: false,
	___suppressSelectionChanged: false,
	__owner: null,
	___panel: null,
	___cellTextLayoutVersion: 0,
	init: function (rowScrollRegion, columnScrollRegion, selectionFactory, owner) {
		this.___suppressSelectionChanged = true;
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(owner, "owner");
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, this, $.ig.spreadsheet.SpreadsheetPane.prototype._onPrivateSubObjectPropertyChanged, false);
		var selection = selectionFactory(this);
		this.__owner = owner;
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, this.___rowScrollRegion, rowScrollRegion, this.___listener, true);
		this.___rowScrollRegion = $ret.p0;
		var $ret1 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, this.___columnScrollRegion, columnScrollRegion, this.___listener, true);
		this.___columnScrollRegion = $ret1.p0;
		var $ret2 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.SpreadsheetCellValueInfo.prototype.$type), this.___cellValuesInternal, new $.ig.ObservableCollectionExtended$1($.ig.SpreadsheetCellValueInfo.prototype.$type, 0), this, false);
		this.___cellValuesInternal = $ret2.p0;
		var $ret3 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.SpreadsheetShape.prototype.$type), this.___shapesInternal, new $.ig.ObservableCollectionExtended$1($.ig.SpreadsheetShape.prototype.$type, 0), this, false);
		this.___shapesInternal = $ret3.p0;
		var $ret4 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetSelection.prototype.$type, this.___selection, selection, this, true);
		this.___selection = $ret4.p0;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPane::ColumnScrollRegion()" />*/
	columnScrollRegion: function () {
		return this.___columnScrollRegion;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPane::ColumnScrollRegion()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPane::RowScrollRegion()" />*/
	rowScrollRegion: function () {
		return this.___rowScrollRegion;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPane::RowScrollRegion()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.SpreadsheetPane::Selection()" />*/
	selection: function () {
		return this.___selection;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.SpreadsheetPane::Selection()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPane::VisibleRange()" />*/
	visibleRange: function () {
		return new $.ig.spreadsheet.SpreadsheetCellRange(this.___rowScrollRegion.startIndex(), this.___columnScrollRegion.startIndex(), this.___rowScrollRegion.endIndex(), this.___columnScrollRegion.endIndex());
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPane::VisibleRange()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.SpreadsheetPane::ActiveSelection()" />*/
	_activeSelection: function () {
		return this.rowScrollRegion()._activeSelection();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.SpreadsheetPane::ActiveSelection()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetImageBackground Infragistics.Controls.Grids.Core.SpreadsheetPane::Background()" />*/
	_background: function (value) {
		if (arguments.length === 1) {
			if (this.___background != value) {
				this.___background = value;
				this.onPropertyChanged("Background");
			}
			return value;
		} else {
			return this.___background;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetImageBackground Infragistics.Controls.Grids.Core.SpreadsheetPane::Background()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray Infragistics.Controls.Grids.Core.SpreadsheetPane::CellFillArray()" />*/
	_cellFillArray: function (value) {
		if (arguments.length === 1) {
			this.___cellFillArray = value;
			this.onPropertyChanged("CellFillArray");
			return value;
		} else {
			return this.___cellFillArray;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray Infragistics.Controls.Grids.Core.SpreadsheetPane::CellFillArray()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPane::CellTextArrangeVersion()" />*/
	_cellTextArrangeVersion: function (value) {
		if (arguments.length === 1) {
			if (this.___cellTextLayoutVersion != value) {
				this.___cellTextLayoutVersion = value;
				this.onPropertyChanged("CellTextArrangeVersion");
			}
			return value;
		} else {
			return this.___cellTextLayoutVersion;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPane::CellTextArrangeVersion()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.MDList Infragistics.Controls.Grids.Core.SpreadsheetPane::CellValueArray()" />*/
	_cellValueArray: function (value) {
		if (arguments.length === 1) {
			this.___cellValueArray = value;
			this.onPropertyChanged("CellValueArray");
			return value;
		} else {
			return this.___cellValueArray;
		}
	}
	/*<EndProperty Name="Infragistics.Collections.MDList Infragistics.Controls.Grids.Core.SpreadsheetPane::CellValueArray()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPane::CellValuesInternal()" />*/
	_cellValuesInternal: function () {
		return this.___cellValuesInternal;
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPane::CellValuesInternal()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen Infragistics.Controls.Grids.Core.SpreadsheetPane::GridlinePen()" />*/
	_gridlinePen: function (value) {
		if (arguments.length === 1) {
			if (this.___gridlinePen != value) {
				this.___gridlinePen = value;
				this.onPropertyChanged("GridlinePen");
			}
			return value;
		} else {
			return this.___gridlinePen;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen Infragistics.Controls.Grids.Core.SpreadsheetPane::GridlinePen()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPane::HideActiveCellContent()" />*/
	_hideActiveCellContent: function (value) {
		if (arguments.length === 1) {
			if (this.___hideActiveCellContent != value) {
				this.___hideActiveCellContent = value;
				this.onPropertyChanged("HideActiveCellContent");
			}
			return value;
		} else {
			return this.___hideActiveCellContent;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPane::HideActiveCellContent()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.MDList Infragistics.Controls.Grids.Core.SpreadsheetPane::HyperlinkArray()" />*/
	_hyperlinkArray: function (value) {
		if (arguments.length === 1) {
			this.___hyperlinkArray = value;
			this.onPropertyChanged("HyperlinkArray");
			return value;
		} else {
			return this.___hyperlinkArray;
		}
	}
	/*<EndProperty Name="Infragistics.Collections.MDList Infragistics.Controls.Grids.Core.SpreadsheetPane::HyperlinkArray()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.MDBitArray Infragistics.Controls.Grids.Core.SpreadsheetPane::InvalidCellArray()" />*/
	_invalidCellArray: function (value) {
		if (arguments.length === 1) {
			this.___invalidCellArray = value;
			this.onPropertyChanged("InvalidCellArray");
			return value;
		} else {
			return this.___invalidCellArray;
		}
	}
	/*<EndProperty Name="Infragistics.Collections.MDBitArray Infragistics.Controls.Grids.Core.SpreadsheetPane::InvalidCellArray()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetPane::Panel()" />*/
	_panel: function (value) {
		if (arguments.length === 1) {
			if (value != this._panel()) {
				this.___panel = value == null ? null : new $.ig.WeakReference(value);
				this.onPropertyChanged("Panel");
			}
			return value;
		} else {
			return $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.___panel);
		}
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetPane::Panel()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPane::ShapesInternal()" />*/
	_shapesInternal: function () {
		return this.___shapesInternal;
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPane::ShapesInternal()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPane::SuppressSelectionChanged()" />*/
	_suppressSelectionChanged: function (value) {
		if (arguments.length === 1) {
			this.___suppressSelectionChanged = value;
			return value;
		} else {
			return this.___suppressSelectionChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPane::SuppressSelectionChanged()" />*/
	,
	scrollCellIntoView: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._scrollCellIntoView.apply(this, arguments);
			case 1: return this._scrollCellIntoView1.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollCellIntoView(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_scrollCellIntoView: function (cell) {
		this._scrollRangeIntoView(new $.ig.spreadsheet.SpreadsheetCellRange(cell.row(), cell.column()));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollCellIntoView(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollCellIntoView(System.String)" />*/
	_scrollCellIntoView1: function (cellAddress) {
		this._scrollCellIntoView(new $.ig.spreadsheet.SpreadsheetCell(cellAddress));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollCellIntoView(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollColumnIntoView(System.Int32)" />*/
	scrollColumnIntoView: function (index) {
		if (index < 0) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		this.__owner.scrollRangeIntoView(this, $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), null), $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, index, index)));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollColumnIntoView(System.Int32)" />*/
	,
	scrollRangeIntoView: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._scrollRangeIntoView.apply(this, arguments);
			case 1: return this._scrollRangeIntoView1.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollRangeIntoView(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_scrollRangeIntoView: function (range) {
		this.__owner.scrollRangeIntoView(this, $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, range.firstRow(), range.lastRow())), $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, range.firstColumn(), range.lastColumn())));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollRangeIntoView(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollRangeIntoView(System.String)" />*/
	_scrollRangeIntoView1: function (rangeAddress) {
		this._scrollRangeIntoView(new $.ig.spreadsheet.SpreadsheetCellRange(rangeAddress));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollRangeIntoView(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollRowIntoView(System.Int32)" />*/
	scrollRowIntoView: function (index) {
		if (index < 0) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		this.__owner.scrollRangeIntoView(this, $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, index, index)), $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), null));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::ScrollRowIntoView(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetPane::GetCellFromRelativePoint(System.Windows.Point)" />*/
	_getCellFromRelativePoint: function (pt) {
		return new $.ig.spreadsheet.SpreadsheetCell(this.rowScrollRegion()._getItemFromRelativeOffset(pt.__y)._index(), this.columnScrollRegion()._getItemFromRelativeOffset(pt.__x)._index());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetPane::GetCellFromRelativePoint(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onPrivateSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "StartIndex":
			case "EndIndex":
				if (sender == this.rowScrollRegion() || sender == this.columnScrollRegion()) {
					this.onPropertyChanged("VisibleRange");
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Object, System.String, System.Object)" />*/
	_onPrivateSubObjectPropertyChanged: function (pane, sender, property, extraInfo) {
		pane._onPrivateSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPane::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetPane', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPane" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PaneLayerContainer" />*/

$.ig.util.defType('PaneLayerContainer', 'SpreadsheetElementLayerContainer$1', {
	init: function (element, pane) {
		$.ig.SpreadsheetElementLayerContainer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, element, pane);
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.PaneLayerContainer::CreateInteractionManager()" />*/
	createInteractionManager: function () {
		return new $.ig.SpreadsheetPaneInteractionManager(this._viewModel, this);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.PaneLayerContainer::CreateInteractionManager()" />*/
	,
	$type: new $.ig.Type('PaneLayerContainer', $.ig.SpreadsheetElementLayerContainer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PaneLayerContainer" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayer" />*/

$.ig.util.defType('ElementLayer', 'Object', {
	___layerInfo: null,
	___view: null,
	init: function (layerInfo, view) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(layerInfo);
		$.ig.CoreUtilities.prototype.validateNotNull(view);
		this.___layerInfo = layerInfo;
		this.___view = view;
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Primitives.ElementLayer::LayerInfo()" />*/
	_layerInfo: function () {
		return this.___layerInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Primitives.ElementLayer::LayerInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.IElementLayerView Infragistics.Controls.Primitives.ElementLayer::View()" />*/
	_view: function () {
		return this.___view;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.IElementLayerView Infragistics.Controls.Primitives.ElementLayer::View()" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Primitives.ElementLayer::ArrangeOverride(System.Windows.Size)" />*/
	_arrangeOverride: function (finalSize) {
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Primitives.ElementLayer::ArrangeOverride(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayer::InvalidateArrange()" />*/
	_invalidateArrange: function () {
		this.___view.invalidateArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayer::InvalidateArrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayer::InvalidateMeasure()" />*/
	_invalidateMeasure: function () {
		this.___view.invalidateMeasure();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayer::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Primitives.ElementLayer::MeasureOverride(System.Windows.Size)" />*/
	_measureOverride: function (availableSize) {
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Primitives.ElementLayer::MeasureOverride(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayer::Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayer::Dispose()" />*/
	,
	$type: new $.ig.Type('ElementLayer', $.ig.Object.prototype.$type, [$.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayer" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayer`1" />*/

$.ig.util.defType('ElementLayer$1', 'ElementLayer', {
	$tViewModel: null,
	___viewModel: null,
	init: function ($tViewModel, viewModel, view, layerInfo) {
		this.$tViewModel = $tViewModel;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tViewModel);
		}
		$.ig.ElementLayer.prototype.init.call(this, layerInfo, view);
		$.ig.CoreUtilities.prototype.validateNotNull(viewModel);
		this.___viewModel = viewModel;
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayer.TViewModel Infragistics.Controls.Primitives.ElementLayer`1::ViewModel()" />*/
	_viewModel: function () {
		return this.___viewModel;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayer.TViewModel Infragistics.Controls.Primitives.ElementLayer`1::ViewModel()" />*/
	,
	$type: new $.ig.Type('ElementLayer$1', $.ig.ElementLayer.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayer`1" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.RendererElementLayer`2" />*/

$.ig.util.defType('RendererElementLayer$2', 'ElementLayer$1', {
	$tViewModel: null,
	$tGraphics: null,
	___renderer: null,
	init: function ($tViewModel, $tGraphics, control, view, layerInfo) {
		this.$tViewModel = $tViewModel;
		this.$tGraphics = $tGraphics;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tViewModel, this.$tGraphics);
		}
		$.ig.ElementLayer$1.prototype.init.call(this, this.$tViewModel, control, view, layerInfo);
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Primitives.RendererElementLayer`2::ArrangeOverride(System.Windows.Size)" />*/
	_arrangeOverride: function (finalSize) {
		var finalRect = new $.ig.Rect(0, 0, 0, finalSize.width(), finalSize.height());
		this.___renderer.arrange(finalSize);
		return finalRect;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Primitives.RendererElementLayer`2::ArrangeOverride(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::Dispose()" />*/
	dispose: function () {
		if (this.___renderer != null) {
			(this._view()).releaseRenderer(this.___renderer);
			this.___renderer.onUnloaded();
		}
		this._onUnloadedOverride();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Primitives.RendererElementLayer`2::MeasureOverride(System.Windows.Size)" />*/
	_measureOverride: function (availableSize) {
		if (this.___renderer == null) {
			this.___renderer = (this._view()).createRenderer();
		}
		this.___renderer.measure(availableSize);
		return new $.ig.Size(0);
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Primitives.RendererElementLayer`2::MeasureOverride(System.Windows.Size)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ILayerRenderer Infragistics.Controls.Primitives.RendererElementLayer`2::CurrentRenderer()" />*/
	_currentRenderer: function () {
		return this.___renderer;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ILayerRenderer Infragistics.Controls.Primitives.RendererElementLayer`2::CurrentRenderer()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Primitives.RendererElementLayer`2::LayerType()" />*/
	_layerType: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Primitives.RendererElementLayer`2::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Primitives.RendererElementLayer`2::AdjustRectForClip(System.Windows.Rect)" />*/
	_adjustRectForClip: function (elementRect) {
		return elementRect;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Primitives.RendererElementLayer`2::AdjustRectForClip(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::OnUnloadedOverride()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::Render(Infragistics.Controls.Primitives.RendererElementLayer.TGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::Render(Infragistics.Controls.Primitives.RendererElementLayer.TGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::InvalidateRender()" />*/
	_invalidateRender: function () {
		if (this.___renderer != null) {
			this.___renderer.invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::InvalidateRender()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::InvalidateLayout()" />*/
	_invalidateLayout: function () {
		if (this.___renderer != null) {
			this.___renderer.invalidateLayout();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.RendererElementLayer`2::InvalidateLayout()" />*/
	,
	$type: new $.ig.Type('RendererElementLayer$2', $.ig.ElementLayer$1.prototype.$type.specialize(0))
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.RendererElementLayer`2" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ISpreadsheetGraphics" />*/

$.ig.util.defType('ISpreadsheetGraphics', 'Object', {
	$type: new $.ig.Type('ISpreadsheetGraphics', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ISpreadsheetGraphics" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetRendererElementLayer`1" />*/

$.ig.util.defType('SpreadsheetRendererElementLayer$1', 'RendererElementLayer$2', {
	$tViewModel: null,
	init: function ($tViewModel, control, view, layerInfo) {
		this.$tViewModel = $tViewModel;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tViewModel);
		}
		$.ig.RendererElementLayer$2.prototype.init.call(this, this.$tViewModel, $.ig.ISpreadsheetGraphics.prototype.$type, control, view, layerInfo);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetRendererElementLayer`1::RenderCache()" />*/
	_renderCache: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetRendererElementLayer`1::RenderCache()" />*/
	,
	$type: new $.ig.Type('SpreadsheetRendererElementLayer$1', $.ig.RendererElementLayer$2.prototype.$type.specialize(0, $.ig.ISpreadsheetGraphics.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetRendererElementLayer`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion" />*/

$.ig.spreadsheet.SpreadsheetScrollRegion = $.ig.util.defType('spreadsheet.SpreadsheetScrollRegion', 'PropertyChangeNotifierExtended', {
	___scrollInfo: null,
	___startIndex: 0,
	___endIndex: 0,
	___preferredExtent: 0,
	___reservedExtent: 0,
	___actualExtent: 0,
	___preferredHeaderExtent: 0,
	___isFrozen: false,
	___endIndexOutOfViewExtent: 0,
	___startIndexOutOfViewExtent: 0,
	___itemPositions: null,
	___actualItemPositions: null,
	___currentScrollPageCache: null,
	___maxScrollPageCache: null,
	___sizingMode: 0,
	___convertItemUnitsToPixels: null,
	___convertPixelsToItemUnits: null,
	___getItemPosition: null,
	___getItemPositionFromOffset: null,
	___getVisibleItemPositions: null,
	___zoomLevel: 0,
	___dpiY: 0,
	___dpiX: 0,
	___pixelSizeX: 0,
	___pixelSizeY: 0,
	___getHeaderText: null,
	___headerFont: null,
	___activeSelection: null,
	___adjacentRowColumn: null,
	___sheetPaneOwner: null,
	___maxItemIndex: 0,
	___maxItemExtent: 0,
	___resourceProvider: null,
	___hotTrackedIndex: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___relativeItemPositionsAdjusted: null,
	___relativeItemPositionsUnadjusted: null,
	___itemBeingResized: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___itemBeingResizedRelativeEdge: 0,
	___previousVisibleItemIndex: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___nextVisibleItemIndex: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___areHeadersVisible: false,
	___selectionMode: 0,
	init: function () {
		this.___pixelSizeX = 1;
		this.___pixelSizeY = 1;
		this.___areHeadersVisible = true;
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetScrollInfo.prototype.$type, this.___scrollInfo, new $.ig.SpreadsheetScrollInfo(this), this, false);
		this.___scrollInfo = $ret.p0;
		var $ret1 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.WorksheetItemPosition.prototype.$type), this.___itemPositions, new $.ig.ObservableCollectionExtended$1($.ig.WorksheetItemPosition.prototype.$type, 2, false, false), this, false);
		this.___itemPositions = $ret1.p0;
		this._actualItemPositions(this.___itemPositions);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this.___scrollInfo) {
					this.___relativeItemPositionsAdjusted = this.___relativeItemPositionsUnadjusted = null;
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this.___itemPositions) {
					this.___relativeItemPositionsAdjusted = this.___relativeItemPositionsUnadjusted = null;
				}
				break;
		}
		$.ig.PropertyChangeNotifierExtended.prototype.onSubObjectPropertyChanged.call(this, sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ActualExtent()" />*/
	actualExtent: function (value) {
		if (arguments.length === 1) {
			if (this.___actualExtent != value) {
				this.___actualExtent = value;
				this.onPropertyChanged("ActualExtent");
			}
			return value;
		} else {
			return this.___actualExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ActualExtent()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::EndIndex()" />*/
	endIndex: function (value) {
		if (arguments.length === 1) {
			if (this.___endIndex != value) {
				this.___endIndex = value;
				this.onPropertyChanged("EndIndex");
			}
			return value;
		} else {
			return this.___endIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::EndIndex()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsFrozen()" />*/
	isFrozen: function (value) {
		if (arguments.length === 1) {
			if (this.___isFrozen != value) {
				this.___isFrozen = value;
				this.onPropertyChanged("IsFrozen");
			}
			return value;
		} else {
			return this.___isFrozen;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsFrozen()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::StartIndex()" />*/
	startIndex: function (value) {
		if (arguments.length === 1) {
			$.ig.Debug.prototype.assert(value >= 0);
			if (this.___startIndex != value) {
				this.___startIndex = value;
				this.onPropertyChanged("StartIndex");
			}
			return value;
		} else {
			return this.___startIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::StartIndex()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ActiveSelection()" />*/
	_activeSelection: function (value) {
		if (arguments.length === 1) {
			if (value != this.___activeSelection) {
				var oldValue = this.___activeSelection;
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetSelection.prototype.$type, this.___activeSelection, value, this, true);
				this.___activeSelection = $ret.p0;
				this.onPropertyChanged("ActiveSelection");
			}
			return value;
		} else {
			return this.___activeSelection;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ActiveSelection()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ActualItemPositions()" />*/
	_actualItemPositions: function (value) {
		if (arguments.length === 1) {
			if (this.___actualItemPositions != value) {
				if (this.___actualItemPositions != this._itemPositions() && this.___actualItemPositions != null) {
					$.ig.SpreadsheetUtilities.prototype.removeListener(this.___actualItemPositions, this);
				}
				this.___actualItemPositions = value;
				if (value != null && value != this._itemPositions()) {
					$.ig.SpreadsheetUtilities.prototype.addListener(this.___actualItemPositions, this, true);
				}
				this.onPropertyChanged("ActualItemPositions");
			}
			return value;
		} else {
			return this.___actualItemPositions;
		}
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ActualItemPositions()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::AdjacentRowColumn()" />*/
	_adjacentRowColumn: function (value) {
		if (arguments.length === 1) {
			if (this.___adjacentRowColumn != value) {
				this.___adjacentRowColumn = value;
				this.onPropertyChanged("AdjacentRowColumn");
			}
			return value;
		} else {
			return this.___adjacentRowColumn;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::AdjacentRowColumn()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::AreHeadersVisible()" />*/
	_areHeadersVisible: function (value) {
		if (arguments.length === 1) {
			if (this.___areHeadersVisible != value) {
				this.___areHeadersVisible = value;
				this.onPropertyChanged("AreHeadersVisible");
			}
			return value;
		} else {
			return this.___areHeadersVisible;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::AreHeadersVisible()" />*/
	,
	__cachedScrollMidpoint: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::CachedScrollMidpoint()" />*/
	_cachedScrollMidpoint: function (value) {
		if (arguments.length === 1) {
			this.__cachedScrollMidpoint = value;
			return value;
		} else {
			return this.__cachedScrollMidpoint;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::CachedScrollMidpoint()" />*/
	,
	__cachedScrollMidpointExtent: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::CachedScrollMidpointExtent()" />*/
	_cachedScrollMidpointExtent: function (value) {
		if (arguments.length === 1) {
			this.__cachedScrollMidpointExtent = value;
			return value;
		} else {
			return this.__cachedScrollMidpointExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::CachedScrollMidpointExtent()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ConvertItemUnitsToPixels()" />*/
	_convertItemUnitsToPixels: function (value) {
		if (arguments.length === 1) {
			this.___convertItemUnitsToPixels = value;
			return value;
		} else {
			return this.___convertItemUnitsToPixels;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ConvertItemUnitsToPixels()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ConvertPixelsToItemUnits()" />*/
	_convertPixelsToItemUnits: function (value) {
		if (arguments.length === 1) {
			this.___convertPixelsToItemUnits = value;
			return value;
		} else {
			return this.___convertPixelsToItemUnits;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ConvertPixelsToItemUnits()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.PageStartScrollCache Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::CurrentScrollPageCache()" />*/
	_currentScrollPageCache: function (value) {
		if (arguments.length === 1) {
			if (this.___currentScrollPageCache != value) {
				this.___currentScrollPageCache = value;
				this.onPropertyChanged("CurrentScrollPageCache");
			}
			return value;
		} else {
			return this.___currentScrollPageCache;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.PageStartScrollCache Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::CurrentScrollPageCache()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::DpiX()" />*/
	_dpiX: function (value) {
		if (arguments.length === 1) {
			if (this.___dpiX != value) {
				this.___dpiX = value;
				this.onPropertyChanged("DpiX");
			}
			return value;
		} else {
			return this.___dpiX;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::DpiX()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::DpiY()" />*/
	_dpiY: function (value) {
		if (arguments.length === 1) {
			if (this.___dpiY != value) {
				this.___dpiY = value;
				this.onPropertyChanged("DpiY");
			}
			return value;
		} else {
			return this.___dpiY;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::DpiY()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::EndIndexOutOfViewExtent()" />*/
	_endIndexOutOfViewExtent: function (value) {
		if (arguments.length === 1) {
			this.___endIndexOutOfViewExtent = value;
			return value;
		} else {
			return this.___endIndexOutOfViewExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::EndIndexOutOfViewExtent()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetHeaderText()" />*/
	_getHeaderText: function (value) {
		if (arguments.length === 1) {
			if (this.___getHeaderText != value) {
				this.___getHeaderText = value;
				this.onPropertyChanged("GetHeaderText");
			}
			return value;
		} else {
			return this.___getHeaderText;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetHeaderText()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemPosition()" />*/
	_getItemPosition: function (value) {
		if (arguments.length === 1) {
			this.___getItemPosition = value;
			return value;
		} else {
			return this.___getItemPosition;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemPosition()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemPositionFromOffset()" />*/
	_getItemPositionFromOffset: function (value) {
		if (arguments.length === 1) {
			this.___getItemPositionFromOffset = value;
			return value;
		} else {
			return this.___getItemPositionFromOffset;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemPositionFromOffset()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetVisibleItemPositions()" />*/
	_getVisibleItemPositions: function (value) {
		if (arguments.length === 1) {
			this.___getVisibleItemPositions = value;
			return value;
		} else {
			return this.___getVisibleItemPositions;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetVisibleItemPositions()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HeaderFont()" />*/
	_headerFont: function (value) {
		if (arguments.length === 1) {
			if (this.___headerFont != value) {
				this.___headerFont = value;
				this.onPropertyChanged("HeaderFont");
			}
			return value;
		} else {
			return $_0(this.___headerFont);
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HeaderFont()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HotTrackedIndex()" />*/
	_hotTrackedIndex: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___hotTrackedIndex, value)) {
				this.___hotTrackedIndex = value;
				this.onPropertyChanged("HotTrackedIndex");
			}
			return value;
		} else {
			return this.___hotTrackedIndex;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HotTrackedIndex()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsRowHeader()" />*/
	_isRowHeader: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsRowHeader()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ItemBeingResized()" />*/
	_itemBeingResized: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(value, this.___itemBeingResized)) {
				this.___itemBeingResized = value;
				if ($.ig.util.nullableEquals(this.___itemBeingResized, null)) {
					this._actualItemPositions(this._itemPositions());
				} else {
					$.ig.Debug.prototype.assert(this.___actualItemPositions == this.___itemPositions);
					var list = new $.ig.ObservableCollectionExtended$1($.ig.WorksheetItemPosition.prototype.$type, 0);
					list._reInitialize(this._itemPositions());
					this._actualItemPositions(list);
				}
				this.onPropertyChanged("ItemBeingResized");
			}
			return value;
		} else {
			return this.___itemBeingResized;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ItemBeingResized()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ItemBeingResizedRelativeEdge()" />*/
	_itemBeingResizedRelativeEdge: function (value) {
		if (arguments.length === 1) {
			if (this.___itemBeingResizedRelativeEdge != value) {
				this.___itemBeingResizedRelativeEdge = value;
				this.onPropertyChanged("ItemBeingResizedRelativeEdge");
			}
			return value;
		} else {
			return this.___itemBeingResizedRelativeEdge;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ItemBeingResizedRelativeEdge()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ItemPositions()" />*/
	_itemPositions: function () {
		return this.___itemPositions;
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ItemPositions()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxItemExtent()" />*/
	_maxItemExtent: function (value) {
		if (arguments.length === 1) {
			if (this.___maxItemExtent != value) {
				this.___maxItemExtent = value;
				this.onPropertyChanged("MaxItemExtent");
			}
			return value;
		} else {
			return this.___maxItemExtent;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxItemExtent()" />*/
	,
	___maxScrollRangeExtent: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxScrollRangeExtent()" />*/
	_maxScrollRangeExtent: function (value) {
		if (arguments.length === 1) {
			if (this.___maxScrollRangeExtent != value) {
				this.___maxScrollRangeExtent = value;
				this.onPropertyChanged("MaxScrollRangeExtent");
			}
			return value;
		} else {
			return this.___maxScrollRangeExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxScrollRangeExtent()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxItemIndex()" />*/
	_maxItemIndex: function (value) {
		if (arguments.length === 1) {
			if (this.___maxItemIndex != value) {
				this.___maxItemIndex = value;
				this.onPropertyChanged("MaxItemIndex");
			}
			return value;
		} else {
			return this.___maxItemIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxItemIndex()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.PageStartScrollCache Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxScrollPageCache()" />*/
	_maxScrollPageCache: function (value) {
		if (arguments.length === 1) {
			if (this.___maxScrollPageCache != value) {
				this.___maxScrollPageCache = value;
				this.onPropertyChanged("MaxScrollPageCache");
			}
			return value;
		} else {
			return this.___maxScrollPageCache;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.PageStartScrollCache Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::MaxScrollPageCache()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::NextVisibleItemIndex()" />*/
	_nextVisibleItemIndex: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___nextVisibleItemIndex, value)) {
				this.___nextVisibleItemIndex = value;
				this.onPropertyChanged("NextVisibleItemIndex");
			}
			return value;
		} else {
			return this.___nextVisibleItemIndex;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::NextVisibleItemIndex()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PixelSizeX()" />*/
	_pixelSizeX: function (value) {
		if (arguments.length === 1) {
			if (this.___pixelSizeX != value) {
				this.___pixelSizeX = value;
				this.onPropertyChanged("PixelSizeX");
			}
			return value;
		} else {
			return this.___pixelSizeX;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PixelSizeX()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PixelSizeY()" />*/
	_pixelSizeY: function (value) {
		if (arguments.length === 1) {
			if (this.___pixelSizeY != value) {
				this.___pixelSizeY = value;
				this.onPropertyChanged("PixelSizeY");
			}
			return value;
		} else {
			return this.___pixelSizeY;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PixelSizeY()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreferredExtent()" />*/
	_preferredExtent: function (value) {
		if (arguments.length === 1) {
			if (this.___preferredExtent != value) {
				this.___preferredExtent = value;
				this.onPropertyChanged("PreferredExtent");
				this.onPropertyChanged("PreferredExtentResolved");
			}
			return value;
		} else {
			return this.___preferredExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreferredExtent()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreferredExtentResolved()" />*/
	_preferredExtentResolved: function () {
		return Math.max(this.___preferredExtent - this.___reservedExtent, 0);
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreferredExtentResolved()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreferredHeaderExtent()" />*/
	_preferredHeaderExtent: function (value) {
		if (arguments.length === 1) {
			if (this.___preferredHeaderExtent != value) {
				this.___preferredHeaderExtent = value;
				this.onPropertyChanged("PreferredHeaderExtent");
			}
			return value;
		} else {
			return this.___preferredHeaderExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreferredHeaderExtent()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreviousVisibleItemIndex()" />*/
	_previousVisibleItemIndex: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___previousVisibleItemIndex, value)) {
				this.___previousVisibleItemIndex = value;
				this.onPropertyChanged("PreviousVisibleItemIndex");
			}
			return value;
		} else {
			return this.___previousVisibleItemIndex;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::PreviousVisibleItemIndex()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ReservedExtent()" />*/
	_reservedExtent: function (value) {
		if (arguments.length === 1) {
			if (this.___reservedExtent != value) {
				this.___reservedExtent = value;
				this.onPropertyChanged("ReservedExtent");
				this.onPropertyChanged("PreferredExtentResolved");
			}
			return value;
		} else {
			return this.___reservedExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ReservedExtent()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ResourceProvider()" />*/
	_resourceProvider: function (value) {
		if (arguments.length === 1) {
			if (value != this.___resourceProvider) {
				var oldValue = this.___resourceProvider;
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ISpreadsheetResourceProvider.prototype.$type, this.___resourceProvider, value, this, true);
				this.___resourceProvider = $ret.p0;
				this.onPropertyChanged("ResourceProvider");
			}
			return value;
		} else {
			return this.___resourceProvider;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ResourceProvider()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ScrollInfo()" />*/
	_scrollInfo: function () {
		return this.___scrollInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ScrollInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetProtectedSelectionMode Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SelectionMode()" />*/
	_selectionMode: function (value) {
		if (arguments.length === 1) {
			if (this.___selectionMode != value) {
				this.___selectionMode = value;
				this.onPropertyChanged("SelectionMode");
			}
			return value;
		} else {
			return this.___selectionMode;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetProtectedSelectionMode Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SelectionMode()" />*/
	,
	__setItemExtent: null,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SetItemExtent()" />*/
	_setItemExtent: function (value) {
		if (arguments.length === 1) {
			this.__setItemExtent = value;
			return value;
		} else {
			return this.__setItemExtent;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SetItemExtent()" />*/
	,
	__setItemExtentForMany: null,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SetItemExtentForMany()" />*/
	_setItemExtentForMany: function (value) {
		if (arguments.length === 1) {
			this.__setItemExtentForMany = value;
			return value;
		} else {
			return this.__setItemExtentForMany;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SetItemExtentForMany()" />*/
	,
	__setItemExtentForAll: null,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SetItemExtentForAll()" />*/
	_setItemExtentForAll: function (value) {
		if (arguments.length === 1) {
			this.__setItemExtentForAll = value;
			return value;
		} else {
			return this.__setItemExtentForAll;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SetItemExtentForAll()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SheetPaneOwner()" />*/
	_sheetPaneOwner: function (value) {
		if (arguments.length === 1) {
			this.___sheetPaneOwner = value;
			return value;
		} else {
			return this.___sheetPaneOwner;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SheetPaneOwner()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneRowColumnSizingMode Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SizingMode()" />*/
	_sizingMode: function (value) {
		if (arguments.length === 1) {
			if (this.___sizingMode != value) {
				this.___sizingMode = value;
				this.onPropertyChanged("SizingMode");
			}
			return value;
		} else {
			return this.___sizingMode;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneRowColumnSizingMode Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::SizingMode()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::StartIndexOutOfViewExtent()" />*/
	_startIndexOutOfViewExtent: function (value) {
		if (arguments.length === 1) {
			this.___startIndexOutOfViewExtent = value;
			return value;
		} else {
			return this.___startIndexOutOfViewExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::StartIndexOutOfViewExtent()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ZoomLevel()" />*/
	_zoomLevel: function (value) {
		if (arguments.length === 1) {
			if (value != this.___zoomLevel) {
				this.___zoomLevel = value;
				this.___relativeItemPositionsAdjusted = null;
				this.onPropertyChanged("ZoomLevel");
			}
			return value;
		} else {
			return this.___zoomLevel;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ZoomLevel()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ContainsIndex(System.Int32, System.Collections.Generic.IList)" />*/
	_containsIndex: function (index, sortedRanges) {
		var comparison = null;
		if (sortedRanges != null && sortedRanges.count() > 0) {
			comparison = function (r, i) {
				if (r.__end < i) {
					return -1;
				} else if (r.__start > i) {
					return 1;
				} else {
					return 0;
				}
			};
			return $.ig.CoreUtilities.prototype.binarySearch$2($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.Number.prototype.$type, sortedRanges, comparison, index) >= 0;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::ContainsIndex(System.Int32, System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetFullySelectedItems()" />*/
	_getFullySelectedItems: function () {
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetFullySelectedItems()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderState Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetHeaderState(System.Int32)" />*/
	_getHeaderState: function (index) {
		var isHotTracked = $.ig.util.nullableEquals(index, this.___hotTrackedIndex);
		if (this._hasAnyVisibleSelection()) {
			if (this._hasSelection(index)) {
				if (this._isSelected(index)) {
					return isHotTracked ? $.ig.SpreadsheetHeaderState.prototype.isHotTrackedSelected : $.ig.SpreadsheetHeaderState.prototype.isSelected;
				} else if (!isHotTracked) {
					return $.ig.SpreadsheetHeaderState.prototype.hasCellsWithSelection;
				}
			}
		}
		if (isHotTracked) {
			return $.ig.SpreadsheetHeaderState.prototype.isHotTracked;
		}
		return $.ig.SpreadsheetHeaderState.prototype.normal;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderState Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetHeaderState(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetItemPosition Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemFromRelativeOffset(System.Double)" />*/
	_getItemFromRelativeOffset: function (relativeOffset) {
		var position = new $.ig.WorksheetItemPosition();
		var $ret = this._tryGetItemFromRelativeOffset(relativeOffset, position);
		position = $ret.p1;
		return position;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetItemPosition Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemFromRelativeOffset(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemPositionIndexFromActualIndex(System.Int32)" />*/
	_getItemPositionIndexFromActualIndex: function (itemIndex) {
		if (itemIndex >= this.startIndex() && itemIndex <= this.endIndex()) {
			for (var i = 0, count = this.___itemPositions.count(); i < count; i++) {
				if (this.___itemPositions.__inner[i]._index() == itemIndex) {
					return i;
				}
			}
		}
		return -1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemPositionIndexFromActualIndex(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemRange(System.Boolean)" />*/
	_getItemRange: function (ignorePartiallyVisible) {
		var start = this.startIndex();
		var end = this.endIndex();
		if (ignorePartiallyVisible) {
			if (this._endIndexOutOfViewExtent() > 0 && end > start) {
				end--;
			}
			if (this._startIndexOutOfViewExtent() > 0 && start < end) {
				start++;
			}
		}
		return new $.ig.Range$1($.ig.Number.prototype.$type, 1, start, end);
	}
	/*<EndMethod Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemRange(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemsThatWouldFit(System.Int32)" />*/
	_getItemsThatWouldFit: function (startIndex) {
		if (startIndex >= this._maxItemIndex()) {
			return new Array(0);
		}
		var extent = this.actualExtent() / this._zoomLevel();
		var itemExtent = this._convertPixelsToItemUnits()(extent);
		return this.___getVisibleItemPositions(startIndex, itemExtent);
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemsThatWouldFit(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemsWithSelection()" />*/
	_getItemsWithSelection: function () {
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetItemsWithSelection()" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeItemPositions(System.Boolean, System.Boolean)" />*/
	_getRelativeItemPositions: function (adjustForZoom, useActualItemPositions) {
		var positions = useActualItemPositions ? this.___actualItemPositions : this.___itemPositions;
		var offsets = adjustForZoom ? this.___relativeItemPositionsAdjusted : this.___relativeItemPositionsUnadjusted;
		if (positions != this.___itemPositions) {
			offsets = null;
		}
		if (offsets == null) {
			var count = positions.count();
			if (count == 0) {
				offsets = new Array(0);
			} else {
				var zoom = adjustForZoom ? this._zoomLevel() : 1;
				offsets = new Array(count + 1);
				for (var r = 0; r < count; r++) {
					offsets[r] = this._getRelativeOffset(positions.__inner[r], true, true) * zoom;
				}
				offsets[count] = this._getRelativeOffset(positions.__inner[count - 1], false, true) * zoom;
				if (positions == this.___itemPositions) {
					if (adjustForZoom) {
						this.___relativeItemPositionsAdjusted = offsets;
					} else {
						this.___relativeItemPositionsUnadjusted = offsets;
					}
				}
			}
		}
		return offsets;
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeItemPositions(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeOffset(Infragistics.Documents.Excel.WorksheetItemPosition, System.Boolean, System.Boolean)" />*/
	_getRelativeOffset: function (pos, near, isRelative) {
		var offset = pos._offset();
		if (!near) {
			offset += pos._extent();
		}
		if (isRelative) {
			offset -= $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(this.___scrollInfo._offset()));
		}
		return this._convertItemUnitsToPixels()(offset);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeOffset(Infragistics.Documents.Excel.WorksheetItemPosition, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeOffset(System.Int32, System.Boolean, System.Boolean)" />*/
	_getRelativeOffset1: function (itemIndex, near, isRelative) {
		var itemCount = this._itemPositions().count();
		var items = this._itemPositions();
		var pos = new $.ig.WorksheetItemPosition();
		if (itemCount == 0 || itemIndex < items.__inner[0]._index() || itemIndex > items.__inner[itemCount - 1]._index()) {
			pos = this._getItemPosition()(itemIndex);
		} else {
			var cachedIndex = $.ig.CoreUtilities.prototype.binarySearch$2($.ig.WorksheetItemPosition.prototype.$type, $.ig.Number.prototype.$type, items, function (item, idx) { return $.ig.util.compareSimple(item._index(), idx); }, itemIndex);
			if (cachedIndex < 0) {
				near = true;
				cachedIndex = ~cachedIndex;
			}
			pos = items.__inner[cachedIndex];
		}
		return this._getRelativeOffset(pos, near, isRelative);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeOffset(System.Int32, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeOffset(System.Int32, System.Double)" />*/
	_getRelativeOffset2: function (itemIndex, percentOffset) {
		if (percentOffset <= 0) {
			return this._getRelativeOffset1(itemIndex, true, true);
		} else if (percentOffset >= 100) {
			return this._getRelativeOffset1(itemIndex, false, true);
		} else {
			var near = this._getRelativeOffset1(itemIndex, true, true);
			var far = this._getRelativeOffset1(itemIndex, false, true);
			return near + (far - near) * (percentOffset / 100);
		}
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetRelativeOffset(System.Int32, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetStartingItemPositionIndexFromActualIndex(System.Int32, System.Int32)" />*/
	_getStartingItemPositionIndexFromActualIndex: function (startIndex, endIndex) {
		if (endIndex >= this.startIndex() && startIndex <= this.endIndex()) {
			for (var i = 0, count = this.___itemPositions.count(); i < count; i++) {
				var idx = this.___itemPositions.__inner[i]._index();
				if (startIndex <= idx) {
					return idx <= endIndex ? i : -1;
				}
			}
		}
		return -1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::GetStartingItemPositionIndexFromActualIndex(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HasAnyVisibleSelection()" />*/
	_hasAnyVisibleSelection: function () {
		var selection = this._getItemsWithSelection();
		if (selection != null && selection.count() > 0) {
			var first = selection.item(0);
			var last = selection.item(selection.count() - 1);
			return first.__start <= this.endIndex() && last.__end >= this.startIndex();
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HasAnyVisibleSelection()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HasSelection(System.Int32)" />*/
	_hasSelection: function (index) {
		if (this._selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.noCells) {
			return false;
		}
		var selectedIndexes = this._getItemsWithSelection();
		return $.ig.spreadsheet.SpreadsheetScrollRegion.prototype._containsIndex(index, selectedIndexes);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::HasSelection(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsNextItemHidden(System.Int32, System.Boolean)" />*/
	_isNextItemHidden: function (itemPositionIndex, useActualItemPositions) {
		var collection = useActualItemPositions ? this.___actualItemPositions : this.___itemPositions;
		if (collection.count() > 0 && itemPositionIndex < collection.count()) {
			if (itemPositionIndex == collection.count() - 1) {
				var lastIndex = collection.__inner[collection.count() - 1]._index();
				if ($.ig.util.nullableEquals(this.___nextVisibleItemIndex, null)) {
					return lastIndex != this._maxItemIndex();
				}
				return this.___nextVisibleItemIndex.value() - lastIndex > 1;
			}
			return collection.__inner[itemPositionIndex + 1]._index() - collection.__inner[itemPositionIndex]._index() > 1;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsNextItemHidden(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsPreviousItemHidden(System.Int32, System.Boolean)" />*/
	_isPreviousItemHidden: function (itemPositionIndex, useActualItemPositions) {
		var collection = useActualItemPositions ? this.___actualItemPositions : this.___itemPositions;
		if (collection.count() > 0 && itemPositionIndex < collection.count()) {
			if (itemPositionIndex == 0) {
				if ($.ig.util.nullableEquals(this.___previousVisibleItemIndex, null)) {
					return collection.__inner[0]._index() > 0;
				}
				return collection.__inner[0]._index() - this.___previousVisibleItemIndex.value() > 1;
			}
			return collection.__inner[itemPositionIndex]._index() - collection.__inner[itemPositionIndex - 1]._index() > 1;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsPreviousItemHidden(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsSelected(System.Int32)" />*/
	_isSelected: function (index) {
		if (this._selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.noCells) {
			return false;
		}
		var selectedIndexes = this._getFullySelectedItems();
		return $.ig.spreadsheet.SpreadsheetScrollRegion.prototype._containsIndex(index, selectedIndexes);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsSelected(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsSelectedItemsSource(System.Object)" />*/
	_isSelectedItemsSource: function (sender) {
		return sender == this._getFullySelectedItems() || sender == this._getItemsWithSelection();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::IsSelectedItemsSource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::TryGetItemFromRelativeOffset(System.Double, Infragistics.Documents.Excel.WorksheetItemPosition)" />*/
	_tryGetItemFromRelativeOffset: function (relativeOffset, position) {
		var offset = this._convertItemUnitsToPixels()($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(this.___scrollInfo._offset())));
		offset += relativeOffset;
		var units = this._convertPixelsToItemUnits()(Math.max(offset, 0));
		position = this._getItemPositionFromOffset()(units);
		return {
			ret: position._offset() <= units && units < position._end(),
			p1: position
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion::TryGetItemFromRelativeOffset(System.Double, Infragistics.Documents.Excel.WorksheetItemPosition)" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetScrollRegion', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1" />*/

$.ig.util.defType('SpreadsheetHeaderContentLayerBase$1', 'SpreadsheetRendererElementLayer$1', {
	$tVisual: null,
	___listener: null,
	___headers: null,
	___previousDesiredExtent: 0,
	___measureHeaderInfo: null,
	___needsRenderer: false,
	init: function ($tVisual, rowOrColumn, view, needsRenderer) {
		this.$tVisual = $tVisual;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tVisual);
		}
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, rowOrColumn, view, $.ig.PredefinedSpreadsheetLayers.prototype.cellValues());
		this.___needsRenderer = needsRenderer;
		this.___headers = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.SpreadsheetHeaderContentLayerBase_HeaderInfo$1.prototype.$type.specialize(this.$tVisual), 0);
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetHeaderContentLayerBase$1.prototype.$type.specialize(this.$tVisual), this, this._onSubObjectPropertyChanged.runOn(this), false);
		$.ig.SpreadsheetUtilities.prototype.addListener(rowOrColumn, this.___listener, true);
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::ArrangeOverride(System.Windows.Size)" />*/
	_arrangeOverride: function (finalSize) {
		if (this.___needsRenderer) {
			$.ig.SpreadsheetRendererElementLayer$1.prototype._arrangeOverride.call(this, finalSize);
		}
		var finalRect = new $.ig.Rect(0, 0, 0, finalSize.width(), finalSize.height());
		var rowOrColumn = this._viewModel();
		var zoomLevel = rowOrColumn._zoomLevel();
		var isVertical = rowOrColumn._isRowHeader();
		var left = 0;
		var top = 0;
		var right = finalSize.width() / zoomLevel;
		var bottom = finalSize.height() / zoomLevel;
		var offsets = rowOrColumn._getRelativeItemPositions(false, true);
		var count = offsets.length - 1;
		var itemPositions = rowOrColumn._actualItemPositions();
		var hasVisibleSelections = rowOrColumn._hasAnyVisibleSelection();
		var resourceProvider = rowOrColumn._resourceProvider();
		var BottomBorderHack = 1;
		var extra = $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
		if (isVertical) {
			top += extra;
		} else {
			left += extra;
		}
		var width = Math.max(right - left, 0);
		var height = Math.max(bottom - top - BottomBorderHack, 0);
		for (var i = 0; i < count; i++) {
			var start = offsets[i];
			var end = offsets[i + 1];
			var itemPos = itemPositions.__inner[i];
			var header = this.___headers.item(itemPos._index());
			if (isVertical) {
				top = start + extra;
				bottom = end + extra;
				height = Math.max(bottom - top - BottomBorderHack, 0);
			} else {
				left = start + extra;
				right = end + extra;
				width = Math.max(right - left, 0);
			}
			var state = rowOrColumn._getHeaderState(itemPos._index());
			if (header._isVerified) {
				if (header._state != state) {
					header._isVerified = false;
					header._state = state;
					this._initializeHeaderInfo(rowOrColumn, header, itemPos._index(), rowOrColumn._getHeaderText()(itemPos._index()));
				}
			} else {
				header._state = state;
			}
			if (header._width > width || header._height > height) {
				var clipWidth = Math.min(width, header._width);
				var clipHeight = Math.min(height, header._height);
				header.initializeClip(header._width / 2 - clipWidth / 2, header._height / 2 - clipHeight / 2, clipWidth, clipHeight);
			} else {
				header.removeClip();
			}
			header.setOffset(left + width / 2 - header._width / 2, top + height / 2 - header._height / 2);
			header._isVerified = true;
		}
		return finalRect;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::ArrangeOverride(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::MeasureOverride(System.Windows.Size)" />*/
	_measureOverride: function (availableSize) {
		var $self = this;
		if (this.___needsRenderer) {
			$.ig.SpreadsheetRendererElementLayer$1.prototype._measureOverride.call(this, availableSize);
		}
		var rowOrColumn = this._viewModel();
		var desiredSize = new $.ig.Size(0);
		var isVertical = rowOrColumn._isRowHeader();
		var zoom = rowOrColumn._zoomLevel();
		if (rowOrColumn == null || rowOrColumn._actualItemPositions().count() == 0) {
			this._removeAllVisuals();
			this.___headers.clear();
		} else {
			var oldHeaders = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.SpreadsheetHeaderContentLayerBase_HeaderInfo$1.prototype.$type.specialize(this.$tVisual), 3, this.___headers);
			this.___headers.clear();
			var en = rowOrColumn._actualItemPositions().getEnumerator();
			while (en.moveNext()) {
				var value = en.current();
				var dv;
				if ((function () { var $ret = oldHeaders.tryGetValue(value._index(), dv); dv = $ret.p1; return $ret.ret; }())) {
					this.___headers.add(value._index(), dv);
					oldHeaders.remove(value._index());
				}
			}
			var availableVisuals = $.ig.Enumerable.prototype.toList$1(this.$tVisual, $.ig.Enumerable.prototype.select$2($.ig.SpreadsheetHeaderContentLayerBase_HeaderInfo$1.prototype.$type.specialize(this.$tVisual), this.$tVisual, oldHeaders.values(), function (h) { return h._visual; }));
			oldHeaders.clear();
			var nextAvailableIndex = availableVisuals.count() - 1;
			var en1 = rowOrColumn._actualItemPositions().getEnumerator();
			while (en1.moveNext()) {
				var itemPos = en1.current();
				var header;
				if (!(function () { var $ret = $self.___headers.tryGetValue(itemPos._index(), header); header = $ret.p1; return $ret.ret; }()) || this.___measureHeaderInfo == null) {
					if (header == null) {
						this.___headers.item(itemPos._index(), header = this._createHeaderInfo());
						if (nextAvailableIndex >= 0) {
							header._visual = availableVisuals.__inner[nextAvailableIndex];
							availableVisuals.removeAt(nextAvailableIndex--);
						} else {
							header._visual = this._createVisual();
						}
					}
					var index = itemPos._index();
					header._isVerified = false;
					this._initializeHeaderInfo(rowOrColumn, header, index, rowOrColumn._getHeaderText()(index));
				}
				if (isVertical) {
					var width = header._width * zoom;
					if (width > desiredSize.width()) {
						desiredSize.width(width);
					}
				} else if (!isVertical) {
					var height = header._height * zoom;
					if (height > desiredSize.height()) {
						desiredSize.height(height);
					}
				}
			}
			for (var i = 0, count = availableVisuals.count(); i < count; i++) {
				this._removeVisual(availableVisuals.__inner[i]);
			}
		}
		if (this.___measureHeaderInfo == null) {
			this.___measureHeaderInfo = this._createHeaderInfo();
			this._initializeHeaderInfo(rowOrColumn, this.___measureHeaderInfo, $.ig.SpreadsheetUtilities.prototype.minHeaderIndexForMeasure, rowOrColumn._getHeaderText()($.ig.SpreadsheetUtilities.prototype.minHeaderIndexForMeasure));
		}
		if (isVertical) {
			var width1 = this.___measureHeaderInfo._width * zoom;
			if (width1 > desiredSize.width()) {
				desiredSize.width(width1);
			}
		} else if (!isVertical) {
			var height1 = this.___measureHeaderInfo._height * zoom;
			if (height1 > desiredSize.height()) {
				desiredSize.height(height1);
			}
		}
		if (isVertical) {
			desiredSize.width(desiredSize.width() + ($.ig.SpreadsheetUtilities.prototype.extraHeaderPadding * rowOrColumn._pixelSizeX()));
		} else {
			desiredSize.height(desiredSize.height() + ($.ig.SpreadsheetUtilities.prototype.extraHeaderPadding * rowOrColumn._pixelSizeY()));
		}
		if (isVertical) {
			desiredSize.width(desiredSize.width() + (rowOrColumn._pixelSizeX()));
		} else {
			desiredSize.height(desiredSize.height() + (rowOrColumn._pixelSizeY()));
		}
		var desiredExtent = isVertical ? desiredSize.width() : desiredSize.height();
		return desiredSize;
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::MeasureOverride(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.foreground;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel()._sheetPaneOwner().renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::RenderCache()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::CreateHeaderInfo()" />*/
	_createHeaderInfo: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::CreateHeaderInfo()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase.TVisual Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::CreateVisual()" />*/
	_createVisual: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase.TVisual Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::CreateVisual()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InitializeHeaderInfo(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo, System.Int32, System.String)" />*/
	_initializeHeaderInfo: function (scrollRegion, header, headerIndex, headerText) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InitializeHeaderInfo(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo, System.Int32, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InvalidateHeaderRender()" />*/
	_invalidateHeaderRender: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InvalidateHeaderRender()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InvalidateHeaderLayout()" />*/
	_invalidateHeaderLayout: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InvalidateHeaderLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InvalidateSpreadsheetAreaLayout()" />*/
	_invalidateSpreadsheetAreaLayout: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::InvalidateSpreadsheetAreaLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::RemoveAllVisuals()" />*/
	_removeAllVisuals: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::RemoveAllVisuals()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase.TVisual)" />*/
	_removeVisual: function (visual) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase.TVisual)" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::Headers()" />*/
	_headers: function () {
		return this.___headers.values();
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::Headers()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetResourceId Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::GetForegroundId(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetHeaderState)" />*/
	_getForegroundId: function ($tVisual, isRowHeader, state) {
		var brushId;
		switch (state) {
			default:
			case $.ig.SpreadsheetHeaderState.prototype.normal:
				brushId = isRowHeader ? $.ig.SpreadsheetResourceId.prototype.rowHeaderForeground : $.ig.SpreadsheetResourceId.prototype.columnHeaderForeground;
				break;
			case $.ig.SpreadsheetHeaderState.prototype.isSelected:
				brushId = isRowHeader ? $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedForeground : $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedForeground;
				break;
			case $.ig.SpreadsheetHeaderState.prototype.isHotTrackedSelected:
				brushId = isRowHeader ? $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackSelectedForeground : $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackSelectedForeground;
				break;
			case $.ig.SpreadsheetHeaderState.prototype.hasCellsWithSelection:
				brushId = isRowHeader ? $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsForeground : $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsForeground;
				break;
			case $.ig.SpreadsheetHeaderState.prototype.isHotTracked:
				brushId = isRowHeader ? $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackForeground : $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackForeground;
				break;
		}
		return brushId;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetResourceId Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::GetForegroundId(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetHeaderState)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var dirtyMeasure = false;
		var dirtyArrange = false;
		switch (property != null ? property : "") {
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this._viewModel()._actualItemPositions()) {
					dirtyArrange = dirtyMeasure = true;
				} else if (this._viewModel()._isSelectedItemsSource(sender)) {
					dirtyArrange = true;
				}
				break;
			case "ZoomLevel":
				if (sender == this._viewModel()) {
					dirtyArrange = dirtyMeasure = true;
					this._invalidateSpreadsheetAreaLayout();
					if (this._viewModel()._sheetPaneOwner().renderCache()._shouldRemeasureAfterZoomLevelChanged) {
						this.___measureHeaderInfo = null;
					}
				}
				break;
			case "HeaderFont":
			case "GetHeaderText":
			case "ResourceProvider":
				if (sender == this._viewModel()) {
					this.___measureHeaderInfo = null;
					dirtyArrange = dirtyMeasure = true;
				}
				break;
			case "ActualItemPositions":
				if (sender == this._viewModel()) {
					dirtyArrange = dirtyMeasure = true;
				}
				break;
			case "HotTrackedIndex":
			case "SelectionMode":
				if (sender == this._viewModel()) {
					dirtyArrange = true;
				}
				break;
			case "ResourceVersion":
				if (sender == this._viewModel()._resourceProvider()) {
					this.___measureHeaderInfo = null;
					dirtyArrange = dirtyMeasure = true;
				}
				break;
			case "":
			case "Offset":
				if (sender == this._viewModel()._scrollInfo()) {
					dirtyArrange = true;
				}
				break;
		}
		if (dirtyMeasure) {
			this._invalidateHeaderLayout();
		}
		if (dirtyArrange) {
			this._invalidateHeaderRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderContentLayerBase$1', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.HeaderVisual" />*/

$.ig.util.defType('HeaderVisual', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	$type: new $.ig.Type('HeaderVisual', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.HeaderVisual" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer" />*/

$.ig.util.defType('SpreadsheetHeaderContentLayer', 'SpreadsheetHeaderContentLayerBase$1', {
	init: function (rowOrColumn, view) {
		$.ig.SpreadsheetHeaderContentLayerBase$1.prototype.init.call(this, $.ig.HeaderVisual.prototype.$type, rowOrColumn, view, true);
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::CreateHeaderInfo()" />*/
	_createHeaderInfo: function () {
		return new $.ig.HeaderVisualInfo();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::CreateHeaderInfo()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.HeaderVisual Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::CreateVisual()" />*/
	_createVisual: function () {
		return new $.ig.HeaderVisual();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.HeaderVisual Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::CreateVisual()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InitializeHeaderInfo(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo, System.Int32, System.String)" />*/
	_initializeHeaderInfo: function (scrollRegion, header, headerIndex, headerText) {
		var jsHeader = header;
		var renderCache = scrollRegion._sheetPaneOwner().renderCache();
		jsHeader._index = headerIndex;
		jsHeader._text = headerText;
		var zoom = scrollRegion._zoomLevel();
		header._height = renderCache.calculateColumnHeaderHeight(renderCache.workbook(), $.ig.truncate((zoom * 100)), scrollRegion._pixelSizeY());
		header._width = renderCache.calculateHeaderTextWidth(scrollRegion, headerText);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InitializeHeaderInfo(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo, System.Int32, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InvalidateHeaderRender()" />*/
	_invalidateHeaderRender: function () {
		this._invalidateArrange();
		this._invalidateRender();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InvalidateHeaderRender()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InvalidateHeaderLayout()" />*/
	_invalidateHeaderLayout: function () {
		this._invalidateMeasure();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InvalidateHeaderLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InvalidateSpreadsheetAreaLayout()" />*/
	_invalidateSpreadsheetAreaLayout: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::InvalidateSpreadsheetAreaLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var isRowHeader = this._viewModel()._isRowHeader();
		var zoom = this._viewModel()._zoomLevel();
		var font = this._viewModel()._headerFont();
		var en = this._headers().getEnumerator();
		while (en.moveNext()) {
			var header = en.current();
			var colorId = $.ig.SpreadsheetHeaderContentLayerBase$1.prototype._getForegroundId($.ig.HeaderVisual.prototype.$type, isRowHeader, header._state);
			var x = (header._offsetX + header._width / 2) * zoom;
			var y = (header._offsetY + header._height / 2) * zoom;
			g.drawHeaderText(font, header._text, x, y, colorId, zoom);
		}
		$.ig.SpreadsheetHeaderContentLayerBase$1.prototype._render.call(this, g, dpi, renderRect, elementDpiOffset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::RemoveAllVisuals()" />*/
	_removeAllVisuals: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::RemoveAllVisuals()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::RemoveVisual(Infragistics.Controls.Grids.Core.HeaderVisual)" />*/
	_removeVisual: function (visual) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer::RemoveVisual(Infragistics.Controls.Grids.Core.HeaderVisual)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderContentLayer', $.ig.SpreadsheetHeaderContentLayerBase$1.prototype.$type.specialize($.ig.HeaderVisual.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1" />*/

$.ig.util.defType('SpreadsheetHeaderContentLayerBase_HeaderInfo$1', 'Object', {
	$tVisual: null,
	init: function ($tVisual) {
		this.$tVisual = $tVisual;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tVisual);
		}
		$.ig.Object.prototype.init.call(this);
	},
	_width: 0,
	_height: 0,
	_isVerified: false,
	_state: 0,
	_visual: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1::RemoveClip()" />*/
	removeClip: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1::RemoveClip()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1::InitializeClip(System.Double, System.Double, System.Double, System.Double)" />*/
	initializeClip: function (x, y, width, height) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1::InitializeClip(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1::SetOffset(System.Double, System.Double)" />*/
	setOffset: function (x, y) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1::SetOffset(System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderContentLayerBase_HeaderInfo$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContentLayerBase_HeaderInfo`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.HeaderVisualInfo" />*/

$.ig.util.defType('HeaderVisualInfo', 'SpreadsheetHeaderContentLayerBase_HeaderInfo$1', {
	init: function () {
		$.ig.SpreadsheetHeaderContentLayerBase_HeaderInfo$1.prototype.init.call(this, $.ig.HeaderVisual.prototype.$type);
	},
	_text: null,
	_index: 0,
	_offsetX: 0,
	_offsetY: 0,
	_hasClip: false,
	_clipX: 0,
	_clipY: 0,
	_clipWidth: 0,
	_clipHeight: 0,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.HeaderVisualInfo::InitializeClip(System.Double, System.Double, System.Double, System.Double)" />*/
	initializeClip: function (x, y, width, height) {
		this._hasClip = true;
		this._clipX = x;
		this._clipY = y;
		this._clipWidth = width;
		this._clipHeight = height;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.HeaderVisualInfo::InitializeClip(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.HeaderVisualInfo::RemoveClip()" />*/
	removeClip: function () {
		this._hasClip = false;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.HeaderVisualInfo::RemoveClip()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.HeaderVisualInfo::SetOffset(System.Double, System.Double)" />*/
	setOffset: function (x, y) {
		this._offsetX = x;
		this._offsetY = y;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.HeaderVisualInfo::SetOffset(System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('HeaderVisualInfo', $.ig.SpreadsheetHeaderContentLayerBase_HeaderInfo$1.prototype.$type.specialize($.ig.HeaderVisual.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.HeaderVisualInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo" />*/

$.ig.util.defType('SpreadsheetCellValueInfo', 'Object', {
	init: function () {
		this._tempVisual = null;
		this._foreground = new $.ig.Color();
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::HasSameLayerValues(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	hasSameLayerValues: function (other) {
		return this.__flags == other.__flags && this._horizontalAlignment == other._horizontalAlignment && this._verticalAlignment == other._verticalAlignment && this._formattedText == other._formattedText;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::HasSameLayerValues(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	,
	_tempVisual: null,
	_rowWithValue: null,
	_columnIndexForValue: 0,
	_cellValueVersion: 0,
	_startColumnIndex: 0,
	_startRowIndex: 0,
	_endColumnIndex: 0,
	_endRowIndex: 0,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::IsMergedCell()" />*/
	isMergedCell: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.isMergedCell, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.isMergedCell);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::IsMergedCell()" />*/
	,
	_value: null,
	_rotation: 0,
	_valueStartColumnIndex: 0,
	_valueEndColumnIndex: 0,
	_clipStartColumnIndex: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	_clipEndColumnIndex: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::ClipRows()" />*/
	clipRows: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.clipRows, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.clipRows);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::ClipRows()" />*/
	,
	_bottomIndent: 0,
	_topIndent: 0,
	_leftIndent: 0,
	_rightIndent: 0,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::ShrinkToFit()" />*/
	shrinkToFit: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.shrinkToFit, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.shrinkToFit);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::ShrinkToFit()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::ComputedWrapText()" />*/
	computedWrapText: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.computedWrapText, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.computedWrapText);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::ComputedWrapText()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::WrapText()" />*/
	wrapText: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.wrapText, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.wrapText);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::WrapText()" />*/
	,
	_horizontalAlignment: 0,
	_verticalAlignment: 0,
	_foreground: null,
	_formattedText: null,
	_valueHeightForUnderline: 0,
	_underlineInfo: null,
	__flags: 0,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::HasHyperlink()" />*/
	hasHyperlink: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.hasHyperlink, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.hasHyperlink);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::HasHyperlink()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::DisplaysHashes()" />*/
	displaysHashes: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.displaysHashes, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.displaysHashes);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::DisplaysHashes()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::IsInvalidDateTime()" />*/
	isInvalidDateTime: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.isInvalidDateTime, value);
			return value;
		} else {
			return this.getFlag($.ig.SpreadsheetCellValueInfo_InternalFlags.prototype.isInvalidDateTime);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::IsInvalidDateTime()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::GetFlag(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo_InternalFlags)" />*/
	getFlag: function (flag) {
		return (this.__flags & flag) != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::GetFlag(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo_InternalFlags)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::SetFlag(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo_InternalFlags, System.Boolean)" />*/
	setFlag: function (flag, set) {
		if (set) {
			this.__flags |= flag;
		} else {
			this.__flags &= ~flag;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo::SetFlag(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo_InternalFlags, System.Boolean)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellValueInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1" />*/

$.ig.util.defType('SpreadsheetPaneCellValueLayerBase$1', 'SpreadsheetRendererElementLayer$1', {
	$tVisual: null,
	___listener: null,
	___cellInfos: null,
	___useRelativePosition: false,
	init: function ($tVisual, pane, view, useRelativePosition) {
		this.$tVisual = $tVisual;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tVisual);
		}
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.cellValues());
		this.___useRelativePosition = useRelativePosition;
		this.___cellInfos = new $.ig.List$1($.ig.SpreadsheetPaneCellValueLayerBase_CellInfo$1.prototype.$type.specialize(this.$tVisual), 0);
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneCellValueLayerBase$1.prototype.$type.specialize(this.$tVisual), this, this._onSubObjectPropertyChanged.runOn(this), false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.foreground;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		if (pane != null) {
			var dpiX = pane.columnScrollRegion()._pixelSizeX();
			var offsetX = elementDpiOffset.__x;
			var offsetY = elementDpiOffset.__y;
			var paneColumn = pane.columnScrollRegion();
			var paneRow = pane.rowScrollRegion();
			var zoomLevel = paneColumn._zoomLevel();
			var singlePixel = dpi.logicalToDevicePixelFactor();
			var halfPixel = singlePixel / 2;
			var xFactor = -offsetX;
			var penColor = $.ig.ExcelUtils.prototype.colorEmpty;
			var en = this.___cellInfos.getEnumerator();
			while (en.moveNext()) {
				var pair = en.current();
				var valueInfo = pair._value;
				var underlineInfo = valueInfo._underlineInfo;
				if (underlineInfo == null) {
					continue;
				}
				var count = underlineInfo._isSingle ? 1 : 2;
				var left = renderRect.x() + paneColumn._getRelativeOffset1(valueInfo._startColumnIndex, true, true) * zoomLevel;
				var endIndex = valueInfo._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.fill ? valueInfo._startColumnIndex : valueInfo._endColumnIndex;
				var right = renderRect.x() + paneColumn._getRelativeOffset1(endIndex, false, true) * zoomLevel;
				var top = renderRect.y() + paneRow._getRelativeOffset1(valueInfo._startRowIndex, true, true) * zoomLevel;
				var bottom = renderRect.y() + paneRow._getRelativeOffset1(valueInfo._endRowIndex, false, true) * zoomLevel;
				var width = right - left;
				var height = bottom - top;
				top += valueInfo._topIndent * zoomLevel;
				bottom -= valueInfo._bottomIndent * zoomLevel;
				var clipToTextArea = underlineInfo._clipToTextArea && valueInfo._formattedText != null && (valueInfo._formattedText.width() * zoomLevel) < width;
				var edgeOffset = Math.max(underlineInfo._thickness / 1.5, 1);
				if (clipToTextArea) {
					left += valueInfo._leftIndent * zoomLevel;
					right -= valueInfo._rightIndent * zoomLevel;
					width = valueInfo._formattedText.width() * zoomLevel;
					switch (valueInfo._horizontalAlignment) {
						default:
						case $.ig.excel.HorizontalCellAlignment.$default:
						case $.ig.excel.HorizontalCellAlignment.left:
						case $.ig.excel.HorizontalCellAlignment.general:
						case $.ig.excel.HorizontalCellAlignment.fill:
							right = left + width;
							break;
						case $.ig.excel.HorizontalCellAlignment.center:
						case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
						case $.ig.excel.HorizontalCellAlignment.justify:
						case $.ig.excel.HorizontalCellAlignment.distributed:
							left = left + (right - left) / 2 - width / 2;
							right = left + width;
							break;
						case $.ig.excel.HorizontalCellAlignment.right:
							right -= singlePixel;
							left = right - width;
							break;
					}
				} else {
					right -= singlePixel;
					left += edgeOffset;
					right -= edgeOffset;
				}
				left = dpi.snapUp(left) - xFactor;
				right = dpi.snapUp(right) - xFactor;
				var penThickness = underlineInfo._thickness * zoomLevel;
				var scaledUnderlineThickness = penThickness;
				penThickness /= 3;
				var mod = penThickness % singlePixel;
				if (mod != 0) {
					penThickness += mod < penThickness / 2 ? -mod : singlePixel - mod;
				}
				if (penThickness < singlePixel) {
					penThickness = singlePixel;
				}
				if (width > penThickness * 2) {
					penColor = valueInfo._foreground;
					var halfPenThickness = penThickness / 2;
					var valueHeight = valueInfo._valueHeightForUnderline * zoomLevel;
					var dvBottom;
					switch (valueInfo._verticalAlignment) {
						default:
						case $.ig.excel.VerticalCellAlignment.$default:
						case $.ig.excel.VerticalCellAlignment.bottom:
						case $.ig.excel.VerticalCellAlignment.distributed:
						case $.ig.excel.VerticalCellAlignment.justify:
							dvBottom = bottom - scaledUnderlineThickness;
							break;
						case $.ig.excel.VerticalCellAlignment.top:
							dvBottom = top + valueHeight;
							break;
						case $.ig.excel.VerticalCellAlignment.center:
							dvBottom = top + (bottom - top) / 2 + valueHeight / 2 - singlePixel;
							break;
					}
					bottom = dpi.snapUp(bottom);
					if (count == 1) {
						var lineBottom = dpi.snapUp(dvBottom + penThickness);
						lineBottom -= (halfPenThickness - offsetY);
						if (lineBottom <= bottom) {
							g.drawLine3(penThickness, penColor, dpiX, left, lineBottom, right, lineBottom);
						}
					} else {
						var lineBottom1 = dpi.snapUp(dvBottom);
						lineBottom1 -= (halfPenThickness - offsetY);
						if (lineBottom1 <= bottom) {
							g.drawLine3(penThickness, penColor, dpiX, left, lineBottom1, right, lineBottom1);
						}
						lineBottom1 += penThickness * 2;
						if (lineBottom1 <= bottom) {
							g.drawLine3(penThickness, penColor, dpiX, left, lineBottom1, right, lineBottom1);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::CellInfos()" />*/
	_cellInfos: function () {
		return this.___cellInfos;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::CellInfos()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::CreateVisual()" />*/
	_createVisual: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::CreateVisual()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::InitializeVisual(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual, Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Double, System.Double, System.Double, System.Double)" />*/
	_initializeVisual: function (visual, value, left, top, right, bottom) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::InitializeVisual(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual, Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::InitializeVisualOffset(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual, System.Double, System.Double)" />*/
	_initializeVisualOffset: function (visual, left, top) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::InitializeVisualOffset(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::RemoveAllVisuals()" />*/
	_removeAllVisuals: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::RemoveAllVisuals()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual)" />*/
	_removeVisual: function (visual) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::CreateVisuals(System.Collections.Generic.List, System.Collections.Generic.List, System.Collections.Generic.List)" />*/
	_createVisuals: function (cellInfos, needsVisual, unused) {
		var nextUnused = 0;
		var en = needsVisual.getEnumerator();
		while (en.moveNext()) {
			var need = en.current();
			var cellInfo;
			while (nextUnused < unused.count() && unused.__inner[nextUnused] == null) {
				nextUnused++;
			}
			if (nextUnused < unused.count()) {
				cellInfo = unused.__inner[nextUnused];
				cellInfo._value = need;
				unused.__inner[nextUnused] = null;
				nextUnused++;
			} else {
				cellInfo = new $.ig.SpreadsheetPaneCellValueLayerBase_CellInfo$1(this.$tVisual, need, this._createVisual());
			}
			cellInfos.add(cellInfo);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::CreateVisuals(System.Collections.Generic.List, System.Collections.Generic.List, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this._viewModel().rowScrollRegion()._scrollInfo() || sender == this._viewModel().columnScrollRegion()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this._viewModel()._cellValueArray() || sender == this._viewModel()._cellValuesInternal()) {
					isDirty = true;
				}
				break;
			case "HideActiveCellContent":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateArrange();
			this._invalidateRender();
			this._invalidateLayout();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase, System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::PerformLayout()" />*/
	_performLayout: function () {
		var pane = this._viewModel();
		if (pane != null) {
			(function ($obj) { var $value = $obj._cellTextArrangeVersion(); $obj._cellTextArrangeVersion($value + 1); return $value; }(pane));
		}
		if (pane == null || pane._cellValuesInternal().count() == 0) {
			this._removeAllVisuals();
			this.___cellInfos.clear();
		} else {
			var cellToSkip = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
			if (pane._hideActiveCellContent()) {
				cellToSkip = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, pane.rowScrollRegion()._activeSelection()._activeCellAsRange()._upperLeft());
			}
			var newValues = pane._cellValuesInternal();
			for (var i = 0, count = this.___cellInfos.count(); i < count; i++) {
				var cellInfo = this.___cellInfos.__inner[i];
				var value = cellInfo._value;
				if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cellToSkip, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && value._columnIndexForValue == cellToSkip.value().column() && value._startRowIndex == cellToSkip.value().row()) {
					continue;
				}
				value._tempVisual = $.ig.util.getBoxIfEnum(this.$tVisual, cellInfo._visual);
			}
			var needsVisual = new $.ig.List$1($.ig.SpreadsheetCellValueInfo.prototype.$type, 0);
			for (var i1 = 0, count1 = newValues.count(); i1 < count1; i1++) {
				var newValue = newValues.__inner[i1];
				if (newValue._tempVisual == null) {
					if (newValue._value == null) {
						continue;
					}
					if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cellToSkip, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && newValue._columnIndexForValue == cellToSkip.value().column() && newValue._startRowIndex == cellToSkip.value().row()) {
						continue;
					}
					var strValue = $.ig.util.cast(String, newValue._value);
					if (strValue != null && strValue.length == 0) {
						continue;
					}
					needsVisual.add(newValue);
				} else {
					newValue._tempVisual = this.$type.getStaticFields($.ig.SpreadsheetPaneCellValueLayerBase$1.prototype.$type).__isCurrentlyUsedToken;
				}
			}
			var used = new $.ig.List$1($.ig.SpreadsheetPaneCellValueLayerBase_CellInfo$1.prototype.$type.specialize(this.$tVisual), 0);
			for (var i2 = 0, count2 = this.___cellInfos.count(); i2 < count2; i2++) {
				var cellInfo1 = this.___cellInfos.__inner[i2];
				if (cellInfo1._value._tempVisual == this.$type.getStaticFields($.ig.SpreadsheetPaneCellValueLayerBase$1.prototype.$type).__isCurrentlyUsedToken) {
					used.add(cellInfo1);
					this.___cellInfos.__inner[i2] = null;
				} else {
					cellInfo1._value._tempVisual = null;
				}
			}
			var unused = this.___cellInfos;
			this.___cellInfos = used;
			if (needsVisual.count() > 0) {
				this._createVisuals(this.___cellInfos, needsVisual, unused);
			}
			var pixelSize = pane.rowScrollRegion()._pixelSizeX();
			var zoomLevel = pane.columnScrollRegion()._zoomLevel();
			var useRelativePosition = this.___useRelativePosition;
			for (var i3 = 0, count3 = this.___cellInfos.count(); i3 < count3; i3++) {
				var cellInfo2 = this.___cellInfos.__inner[i3];
				var value1 = cellInfo2._value;
				var left = pane.columnScrollRegion()._getRelativeOffset1(value1._startColumnIndex, true, useRelativePosition) + value1._leftIndent;
				var top = pane.rowScrollRegion()._getRelativeOffset1(value1._startRowIndex, true, useRelativePosition) + value1._topIndent;
				var right = pane.columnScrollRegion()._getRelativeOffset1(value1._endColumnIndex, false, useRelativePosition) - value1._rightIndent - pixelSize;
				if (cellInfo2._value._tempVisual == this.$type.getStaticFields($.ig.SpreadsheetPaneCellValueLayerBase$1.prototype.$type).__isCurrentlyUsedToken) {
					cellInfo2._value._tempVisual = null;
				} else {
					var bottom = pane.rowScrollRegion()._getRelativeOffset1(value1._endRowIndex, false, useRelativePosition) - value1._bottomIndent - pixelSize;
					this._initializeVisual(cellInfo2._visual, value1, left, top, right, bottom);
				}
				if (value1._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.right && right < left) {
					left = right;
				}
				this._initializeVisualOffset(cellInfo2._visual, left, top);
			}
			for (var i4 = 0, count4 = unused.count(); i4 < count4; i4++) {
				var oldInfo = unused.__inner[i4];
				if (oldInfo != null) {
					this._removeVisual(oldInfo._visual);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1::PerformLayout()" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneCellValueLayerBase$1', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type), null, function () {
		this.__isCurrentlyUsedToken = {};
	})
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase`1" />*/

/*<BeginType Name="Infragistics.Controls.Core.VisualElement" />*/

$.ig.util.defType('VisualElement', 'Object', {
	_flags: 0,
	_left: 0,
	_top: 0,
	_height: 0,
	_width: 0,
	_constraint: null,
	__cursor: null,
	_platformObject: null,
	_platformCache: null,
	__parent: null,
	__children: null,
	__zIndex: 0,
	__childrenWithZIndex: null,
	_id: null,
	init: function (parent, id) {
		this._flags = $.ig.VisualElement.prototype._isEnabledFlag | $.ig.VisualElement.prototype._isHitTestVisibleFlag | $.ig.VisualElement.prototype._isVisibleFlag | $.ig.VisualElement.prototype._hasChangedFlag;
		$.ig.Object.prototype.init.call(this);
		this.__parent = parent;
		this._id = id;
		if (parent != null) {
			if (parent.__children == null) {
				parent.__children = new $.ig.List$1($.ig.VisualElement.prototype.$type, 0);
			}
			parent.__children.add(this);
			this.onChanged();
			parent.isChildPositionDirty(true);
		}
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Core.VisualElement::ChildrenCount()" />*/
	childrenCount: function () {
		return this.__children != null ? this.__children.count() : 0;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Core.VisualElement::ChildrenCount()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::ContainsToolTip()" />*/
	containsToolTip: function () {
		return (this._flags & $.ig.VisualElement.prototype._containsToolTipFlag) != 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::ContainsToolTip()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Core.VisualElement::Cursor()" />*/
	cursor: function (value) {
		if (arguments.length === 1) {
			if (value != this.__cursor) {
				this.__cursor = value;
				this._flags |= $.ig.VisualElement.prototype._cursorChangedFlag;
				this.onChanged();
			}
			return value;
		} else {
			return this.__cursor;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Core.VisualElement::Cursor()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasChanged()" />*/
	hasChanged: function (value) {
		if (arguments.length === 1) {
			if (value) {
				this.onChanged();
			} else {
				this._flags &= ~$.ig.VisualElement.prototype._hasChangedFlag;
			}
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._hasChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasIsActiveChanged()" />*/
	hasIsActiveChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._isActiveChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isActiveChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasIsActiveChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasIsVisibleChanged()" />*/
	hasIsVisibleChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._isVisibleChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isVisibleChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasIsVisibleChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasCursorChanged()" />*/
	hasCursorChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._cursorChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._cursorChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasCursorChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasDescendantChanged()" />*/
	hasDescendantChanged: function (value) {
		if (arguments.length === 1) {
			if (this.setFlagImpl($.ig.VisualElement.prototype._hasDescendantChangedFlag, value) && value) {
				var handler = this.afterHasDescendantChanged;
				if (handler != null) {
					handler(this, $.ig.EventArgs.prototype.empty);
				}
				this.onChanged();
			}
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._hasDescendantChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasDescendantChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasEnabledChanged()" />*/
	hasEnabledChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._isEnabledChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isEnabledChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasEnabledChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasMouseOverChanged()" />*/
	hasMouseOverChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._isMouseOverChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isMouseOverChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasMouseOverChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasPositionChanged()" />*/
	hasPositionChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._hasPositionChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._hasPositionChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasPositionChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasZIndexChanged()" />*/
	hasZIndexChanged: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._hasZIndexChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._hasZIndexChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::HasZIndexChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsActive()" />*/
	isActive: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.VisualElement.prototype._isActiveFlag, $.ig.VisualElement.prototype._isActiveChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isActiveFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsActive()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsChildPositionDirty()" />*/
	isChildPositionDirty: function (value) {
		if (arguments.length === 1) {
			this.setHasFlag($.ig.VisualElement.prototype._isChildPositionDirtyFlag, value);
			if (value) {
				this._flags |= $.ig.VisualElement.prototype._hasDescendantChangedFlag;
			}
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isChildPositionDirtyFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsChildPositionDirty()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsEnabled()" />*/
	isEnabled: function (value) {
		if (arguments.length === 1) {
			if (this.setFlag($.ig.VisualElement.prototype._isEnabledFlag, $.ig.VisualElement.prototype._isEnabledChangedFlag, value)) {
				this.onIsEnabledChanged();
			}
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isEnabledFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsEnabledResolved()" />*/
	isEnabledResolved: function () {
		var p = this;
		while (p != null) {
			if (!p.isEnabled()) {
				return false;
			}
		}
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsEnabledResolved()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsHitTestVisible()" />*/
	isHitTestVisible: function (value) {
		if (arguments.length === 1) {
			this.setFlagImpl($.ig.VisualElement.prototype._isHitTestVisibleFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isHitTestVisibleFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsHitTestVisible()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsInteractiveElement()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsMouseOver()" />*/
	isMouseOver: function (value) {
		if (arguments.length === 1) {
			this.setFlag($.ig.VisualElement.prototype._isMouseOverFlag, $.ig.VisualElement.prototype._isMouseOverChangedFlag, value);
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isMouseOverFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsMouseOver()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsRemoved()" />*/
	isRemoved: function (value) {
		if (arguments.length === 1) {
			if (this.setFlagImpl($.ig.VisualElement.prototype._isRemovedFlag, value)) {
				if (value) {
					this.onChanged();
					var root = $.ig.util.cast($.ig.RootVisualElement.prototype.$type, this.getRoot());
					if (root != null && root.hasCapture()) {
						root.releaseCapture(this);
					}
				} else {
					this.onRecycled();
				}
			}
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isRemovedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsRemoved()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsVisible()" />*/
	isVisible: function (value) {
		if (arguments.length === 1) {
			if (this.setFlag($.ig.VisualElement.prototype._isVisibleFlag, $.ig.VisualElement.prototype._isVisibleChangedFlag, value) && this.__parent != null) {
				this.__parent.isChildPositionDirty(true);
			}
			return value;
		} else {
			return (this._flags & $.ig.VisualElement.prototype._isVisibleFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsVisible()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Core.VisualElement::MinHeight()" />*/
	minHeight: function () {
		return this._constraint != null ? this._constraint._minHeight : 0;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Core.VisualElement::MinHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Core.VisualElement::MinWidth()" />*/
	minWidth: function () {
		return this._constraint != null ? this._constraint._minWidth : 0;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Core.VisualElement::MinWidth()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Core.VisualElement::OuterHeight()" />*/
	outerHeight: function () {
		var h = this._height;
		if (this._constraint != null) {
			h += this._constraint._margin._height;
		}
		return h;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Core.VisualElement::OuterHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Core.VisualElement::OuterWidth()" />*/
	outerWidth: function () {
		var w = this._width;
		if (this._constraint != null) {
			w += this._constraint._margin._width;
		}
		return w;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Core.VisualElement::OuterWidth()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::Parent()" />*/
	parent: function () {
		return this.__parent;
	}
	/*<EndProperty Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::Parent()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Core.VisualElement::HeightForChildren()" />*/
	heightForChildren: function () {
		var h = this._height;
		var c = this._constraint;
		if (c != null) {
			h -= c._borderThickness._height;
			h -= c._padding._height;
			if (h < 0) {
				h = 0;
			}
		}
		return h;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Core.VisualElement::HeightForChildren()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Core.VisualElement::WidthForChildren()" />*/
	widthForChildren: function () {
		var w = this._width;
		var c = this._constraint;
		if (c != null) {
			w -= c._borderThickness._width;
			w -= c._padding._width;
			if (w < 0) {
				w = 0;
			}
		}
		return w;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Core.VisualElement::WidthForChildren()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Core.VisualElement::ZIndex()" />*/
	zIndex: function (value) {
		if (arguments.length === 1) {
			if (value != this.__zIndex) {
				this.__zIndex = value;
				this._flags |= $.ig.VisualElement.prototype._hasZIndexChangedFlag;
				if (this.__parent != null) {
					this.__parent._flags |= $.ig.VisualElement.prototype._hasChildZIndexChangedFlag;
				}
				this.onChanged();
			}
			return value;
		} else {
			return this.__zIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Core.VisualElement::ZIndex()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::Accept(Infragistics.Controls.Core.IVisualElementVisitor)" />*/
	accept: function (visitor) {
		var shouldVisitChildren = visitor.visitElement(this);
		if (shouldVisitChildren && this.__children != null) {
			var i = 0;
			while (i < this.__children.count()) {
				var child = this.__children.__inner[i];
				child.accept(visitor);
				if (child.__parent != null) {
					i++;
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::Accept(Infragistics.Controls.Core.IVisualElementVisitor)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.VisualElement::CalculateHeight(System.Double)" />*/
	calculateHeight: function (contentHeight) {
		var h = contentHeight;
		var c = this._constraint;
		if (c != null) {
			h = c.getDesiredHeight(h);
			h = c.constrainHeight(h);
		}
		return h;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.VisualElement::CalculateHeight(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.VisualElement::CalculateWidth(System.Double)" />*/
	calculateWidth: function (contentWidth) {
		var w = contentWidth;
		var c = this._constraint;
		if (c != null) {
			w = c.getDesiredWidth(w);
			w = c.constrainWidth(w);
		}
		return w;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.VisualElement::CalculateWidth(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::Dispose()" />*/
	dispose: function () {
		if (this.__children != null) {
			for (var i = 0; i < this.__children.count(); i++) {
				this.__children.__inner[i].dispose();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::Dispose()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement.T Infragistics.Controls.Core.VisualElement::GetAncestor`1()" />*/
	getAncestor$1: function ($t) {
		var p = this.__parent;
		while (p != null) {
			if ($.ig.util.cast($t, p) !== null) {
				return p;
			}
			p = p.__parent;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement.T Infragistics.Controls.Core.VisualElement::GetAncestor`1()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetChild(System.Int32)" />*/
	getChild: function (index) {
		return this.__children.__inner[index];
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetChild(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Core.VisualElement::GetRelativeLocation(Infragistics.Controls.Core.VisualElement)" />*/
	getRelativeLocation: function (ancestor) {
		var e = this;
		var x = 0;
		var y = 0;
		while (e != null && e != ancestor) {
			x += e._left;
			y += e._top;
			e = e.__parent;
		}
		return { __x: x, __y: y, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Core.VisualElement::GetRelativeLocation(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetRemovedChild(System.String)" />*/
	getRemovedChild: function (id) {
		if (this.__children != null) {
			for (var i = 0, count = this.__children.count(); i < count; i++) {
				var child = this.__children.__inner[i];
				if (child._id == id && child.isRemoved()) {
					return child;
				}
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetRemovedChild(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetRoot()" />*/
	getRoot: function () {
		var parent = this;
		while (parent.__parent != null) {
			parent = parent.__parent;
		}
		return parent;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetRoot()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetTargetElement(System.Double, System.Double, System.Boolean)" />*/
	getTargetElement: function (x, y, checkIsHitTestable) {
		var relativeX = x;
		var relativeY = y;
		if (!this.isOverElement(relativeX, relativeY)) {
			return null;
		}
		var currentTarget = this;
		if (checkIsHitTestable && (this._flags & $.ig.VisualElement.prototype._isHitTestableFlags) != $.ig.VisualElement.prototype._isHitTestableFlags) {
			return null;
		}
		while (currentTarget != null) {
			var childTarget = null;
			var children = currentTarget.getZIndexOrderChildren();
			if (children != null) {
				for (var i = children.count() - 1; i >= 0; i--) {
					var child = children.__inner[i];
					if (checkIsHitTestable && (child._flags & $.ig.VisualElement.prototype._isHitTestableFlags) != $.ig.VisualElement.prototype._isHitTestableFlags) {
						continue;
					}
					var childX = relativeX - child._left;
					if (childX >= 0 && childX < child._width) {
						var childY = relativeY - child._top;
						if (childY >= 0 && childY < child._height) {
							if (child.isOverElement(childX, childY)) {
								relativeX = childX;
								relativeY = childY;
								childTarget = child;
								break;
							}
						}
					}
				}
			}
			if (childTarget != null) {
				currentTarget = childTarget;
			} else {
				break;
			}
		}
		return currentTarget;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElement::GetTargetElement(System.Double, System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.List Infragistics.Controls.Core.VisualElement::GetZIndexOrderChildren()" />*/
	getZIndexOrderChildren: function () {
		if ((this._flags & $.ig.VisualElement.prototype._hasChildZIndexChangedFlag) != 0) {
			this.verifyChildrenWithZIndex();
		}
		if (this.__childrenWithZIndex != null && this.__childrenWithZIndex.count() > 0) {
			return this.__childrenWithZIndex;
		}
		return this.__children;
	}
	/*<EndMethod Name="System.Collections.Generic.List Infragistics.Controls.Core.VisualElement::GetZIndexOrderChildren()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::HideToolTip()" />*/
	hideToolTip: function () {
		if ((this._flags & $.ig.VisualElement.prototype._containsToolTipFlag) != 0) {
			var root = $.ig.util.cast($.ig.RootVisualElement.prototype.$type, this.getRoot());
			var el = root.elementWithToolTip();
			while (el != null) {
				el._flags &= ~$.ig.VisualElement.prototype._containsToolTipFlag;
				el = el.__parent;
			}
			root.onHideToolTip();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::HideToolTip()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsOverElement(System.Double, System.Double)" />*/
	isOverElement: function (x, y) {
		if (!this.isVisible()) {
			return false;
		}
		return x >= 0 && y >= 0 && x < this._width && y < this._height;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::IsOverElement(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnChanged()" />*/
	onChanged: function () {
		this._flags |= $.ig.VisualElement.prototype._hasChangedFlag;
		var p = this.__parent;
		while (p != null && (p._flags & $.ig.VisualElement.prototype._hasDescendantChangedFlag) == 0) {
			p._flags |= $.ig.VisualElement.prototype._hasDescendantChangedFlag;
			var handler = p.afterHasDescendantChanged;
			if (handler != null) {
				handler(p, $.ig.EventArgs.prototype.empty);
			}
			p = p.__parent;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnGotCapture()" />*/
	onGotCapture: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnGotCapture()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnIsEnabledChanged()" />*/
	onIsEnabledChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnIsEnabledChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnLostCapture()" />*/
	onLostCapture: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseEnter: function (input) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseLeave: function (input) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseWheel(Infragistics.Controls.Core.InputProxy, System.Double)" />*/
	onMouseWheel: function (input, delta) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::OnMouseWheel(Infragistics.Controls.Core.InputProxy, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnRecycled()" />*/
	onRecycled: function () {
		if (this.__children != null) {
			for (var i = 0, count = this.__children.count(); i < count; i++) {
				var child = this.__children.__inner[i];
				if ((child._flags & $.ig.VisualElement.prototype._isRemovedFlag) == 0) {
					child.onRecycled();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::OnRecycled()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::PositionChildren()" />*/
	positionChildren: function () {
		if (this.isChildPositionDirty()) {
			this.isChildPositionDirty(false);
			var left = 0;
			var top = 0;
			var width = this._width;
			var height = this._height;
			var c = this._constraint;
			if (c != null) {
				left += c._borderThickness._left + c._padding._left;
				top += c._borderThickness._top + c._padding._top;
				width -= c._borderThickness._width + c._padding._width;
				height -= c._borderThickness._height + c._padding._height;
				if (width < 0) {
					width = 0;
				}
				if (height < 0) {
					height = 0;
				}
			}
			this.positionChildrenOverride(left, top, width, height);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::PositionChildren()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::RemoveFromParent()" />*/
	removeFromParent: function () {
		if (this.__parent != null) {
			if ((this._flags & $.ig.VisualElement.prototype._containsToolTipFlag) != 0) {
				this.hideToolTip();
			}
			var p = this.__parent;
			this.__parent = null;
			if (p.__children.remove(this)) {
				if (p.__childrenWithZIndex != null) {
					p.__childrenWithZIndex.remove(this);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::RemoveFromParent()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetFlag(System.Int32, System.Int32, System.Boolean)" />*/
	setFlag: function (flag, changeFlag, value) {
		var result = this.setFlagImpl(flag, value);
		if (result) {
			this.setHasFlag(changeFlag, true);
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetFlag(System.Int32, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetFlagImpl(System.Int32, System.Boolean)" />*/
	setFlagImpl: function (flag, value) {
		var newFlags = this._flags;
		if (value) {
			newFlags |= flag;
		} else {
			newFlags &= ~flag;
		}
		var result = newFlags != this._flags;
		this._flags = newFlags;
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetFlagImpl(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::SetHasFlag(System.Int32, System.Boolean)" />*/
	setHasFlag: function (hasFlag, value) {
		if (this.setFlagImpl(hasFlag, value) && value) {
			this.onChanged();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::SetHasFlag(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetPosition(System.Windows.Rect)" />*/
	setPosition1: function (rect) {
		return this.setPosition(rect.x(), rect.y(), rect.width(), rect.height());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetPosition(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetPosition(System.Double, System.Double, System.Double, System.Double)" />*/
	setPosition: function (left, top, width, height) {
		var c = this._constraint;
		if (c != null) {
			return c.setPosition(left, top, width, height, this.setPositionOverride.runOn(this));
		} else {
			return this.setPositionOverride(left, top, width, height);
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetPosition(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	setPositionOverride: function (left, top, width, height) {
		if (left != this._left || top != this._top || (width != this._width && (!$.ig.util.isNaN(width) || $.ig.util.isNaN(this._width))) || (height != this._height && (!$.ig.util.isNaN(height) || $.ig.util.isNaN(this._height)))) {
			this.hasPositionChanged(true);
			this.isChildPositionDirty(true);
			this._left = left;
			this._top = top;
			this._width = width;
			this._height = height;
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::ShowToolTip(System.String, System.Double, System.Double)" />*/
	showToolTip: function (content, left, top) {
		var root = $.ig.util.cast($.ig.RootVisualElement.prototype.$type, this.getRoot());
		if (root == null) {
			return;
		}
		if (root.elementWithToolTip() != null) {
			root.elementWithToolTip().hideToolTip();
		}
		if (root.elementWithToolTip() != null) {
			return;
		}
		var e = this;
		while (e != null) {
			e._flags |= $.ig.VisualElement.prototype._containsToolTipFlag;
			e = e.__parent;
		}
		root.onShowToolTip(this, content, left, top);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::ShowToolTip(System.String, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::VerifyChildElements()" />*/
	verifyChildElements: function () {
		if (this.isRemoved()) {
			return;
		}
		if (this.isChildPositionDirty()) {
			this.positionChildren();
		}
		if (this.hasDescendantChanged() && this.__children != null) {
			for (var i = 0, count = this.__children.count(); i < count; i++) {
				this.__children.__inner[i].verifyChildElements();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::VerifyChildElements()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElement::VerifyChildrenWithZIndex()" />*/
	verifyChildrenWithZIndex: function () {
		if ((this._flags & $.ig.VisualElement.prototype._hasChildZIndexChangedFlag) != 0) {
			this._flags &= ~$.ig.VisualElement.prototype._hasChildZIndexChangedFlag;
			if (this.__childrenWithZIndex != null) {
				this.__childrenWithZIndex.clear();
			}
			if (this.__children != null) {
				var addedCount = 0;
				for (var i = 0, count = this.__children.count(); i < count; i++) {
					var child = this.__children.__inner[i];
					if (addedCount > 0 || child.__zIndex != 0) {
						var idx;
						if (addedCount == 0) {
							if (this.__childrenWithZIndex == null) {
								this.__childrenWithZIndex = new $.ig.List$1($.ig.VisualElement.prototype.$type, 0);
							}
							for (var j = 0; j < i; j++) {
								this.__childrenWithZIndex.add(this.__children.__inner[j]);
							}
							addedCount = this.__childrenWithZIndex.count();
							idx = child.__zIndex < 0 ? 0 : this.__childrenWithZIndex.count();
						} else {
							idx = this.__childrenWithZIndex.binarySearch1(child, $.ig.VisualElement_ZComparer.prototype._instance);
							if (idx < 0) {
								idx = ~idx;
							} else {
								while (idx < addedCount && child.__zIndex == this.__childrenWithZIndex.__inner[idx].__zIndex) {
									idx++;
								}
							}
						}
						this.__childrenWithZIndex.insert(idx, child);
						addedCount++;
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElement::VerifyChildrenWithZIndex()" />*/
	,
	afterHasDescendantChanged: null,
	$type: new $.ig.Type('VisualElement', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.VisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement" />*/

$.ig.util.defType('SpreadsheetCellValueElement', 'VisualElement', {
	_html: null,
	_isFill: false,
	_fillRemaining: 0,
	_contentTransform: null,
	_contentTop: 0,
	_contentLeft: 0,
	_color: null,
	_contentWidth: 0,
	_contentHeight: 0,
	_clip: null,
	_cellWidth: 0,
	_cellHeight: 0,
	__hasCellValueInfoChanged: false,
	__cellValueInfo: null,
	_pane: null,
	init: function (parent, pane) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.cellValue);
		this._pane = pane;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement::CellValueInfo()" />*/
	cellValueInfo: function (value) {
		if (arguments.length === 1) {
			if (value != this.__cellValueInfo) {
				this.__hasCellValueInfoChanged = true;
				this.__cellValueInfo = value;
				this.onChanged();
			}
			return value;
		} else {
			return this.__cellValueInfo;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement::CellValueInfo()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement::HasCellValueInfoChanged()" />*/
	hasCellValueInfoChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasCellValueInfoChanged) {
				this.__hasCellValueInfoChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasCellValueInfoChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement::HasCellValueInfoChanged()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellValueElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer" />*/

$.ig.util.defType('SpreadsheetPaneCellValueLayer', 'SpreadsheetPaneCellValueLayerBase$1', {
	init: function (pane, view) {
		$.ig.SpreadsheetPaneCellValueLayerBase$1.prototype.init.call(this, $.ig.SpreadsheetCellValueElement.prototype.$type, pane, view, false);
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::ArrangeOverride(System.Windows.Size)" />*/
	_arrangeOverride: function (finalSize) {
		this._performLayout();
		var parent = (this._view())._element;
		var cellContainer = parent._cellContainer;
		var pane = this._viewModel();
		var zoom = pane.columnScrollRegion()._zoomLevel();
		var left = zoom * pane.columnScrollRegion()._convertItemUnitsToPixels()($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(pane.columnScrollRegion()._scrollInfo()._offset())));
		var top = zoom * pane.rowScrollRegion()._convertItemUnitsToPixels()($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(pane.rowScrollRegion()._scrollInfo()._offset())));
		var width = zoom * pane.columnScrollRegion()._convertItemUnitsToPixels()($.ig.truncate(Math.ceil(pane.columnScrollRegion()._maxScrollRangeExtent())));
		var height = zoom * pane.rowScrollRegion()._convertItemUnitsToPixels()($.ig.truncate(Math.ceil(pane.rowScrollRegion()._maxScrollRangeExtent())));
		cellContainer.setPosition(-left, -top, width, height);
		return $.ig.SpreadsheetPaneCellValueLayerBase$1.prototype._arrangeOverride.call(this, finalSize);
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::ArrangeOverride(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::CreateVisual()" />*/
	_createVisual: function () {
		var parent = (this._view())._element;
		return parent.getOrCreateCellElement(null);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::CreateVisual()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::CreateVisuals(System.Collections.Generic.List, System.Collections.Generic.List, System.Collections.Generic.List)" />*/
	_createVisuals: function (cellInfos, needsVisual, unused) {
		var unusedCount = unused.count();
		var needsCount = needsVisual.count();
		for (var i = 0, count = needsVisual.count(); i < count; i++) {
			var value = needsVisual.__inner[i];
			for (var j = 0; j < unusedCount; j++) {
				var cellInfo = unused.__inner[i];
				if (cellInfo != null && (cellInfo).hasSimilarInfo(value)) {
					needsCount--;
					unused.__inner[i] = null;
					needsVisual.__inner[i] = null;
					(cellInfo).initialize(value);
					cellInfos.add(cellInfo);
					break;
				}
			}
		}
		if (needsCount > 0) {
			var parent = (this._view())._element;
			var nextAvailable = 0;
			for (var i1 = 0, count1 = needsVisual.count(); i1 < count1; i1++) {
				if (needsVisual.__inner[i1] != null) {
					while (nextAvailable < unusedCount && unused.__inner[nextAvailable] == null) {
						nextAvailable++;
					}
					var cellInfo1;
					if (nextAvailable < unusedCount) {
						cellInfo1 = unused.__inner[nextAvailable];
						unused.__inner[nextAvailable] = null;
						nextAvailable++;
						(cellInfo1).initialize(needsVisual.__inner[i1]);
					} else {
						cellInfo1 = new $.ig.SpreadsheetPaneCellValueLayer_JsCellInfo(needsVisual.__inner[i1], parent.getOrCreateCellElement(needsVisual.__inner[i1]));
					}
					cellInfos.add(cellInfo1);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::CreateVisuals(System.Collections.Generic.List, System.Collections.Generic.List, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::InitializeVisual(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement, Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Double, System.Double, System.Double, System.Double)" />*/
	_initializeVisual: function (visual, value, left, top, right, bottom) {
		var column = this._viewModel().columnScrollRegion();
		var zoom = column._zoomLevel();
		visual.isRemoved(false);
		visual.cellValueInfo(value);
		visual.setPosition(left * zoom, top * zoom, (right - left) * zoom, (bottom - top) * zoom);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::InitializeVisual(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement, Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::InitializeVisualOffset(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement, System.Double, System.Double)" />*/
	_initializeVisualOffset: function (visual, left, top) {
		var zoom = this._viewModel().rowScrollRegion()._zoomLevel();
		visual.setPosition(left * zoom, top * zoom, visual._width, visual._height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::InitializeVisualOffset(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::RemoveAllVisuals()" />*/
	_removeAllVisuals: function () {
		var parent = (this._view())._element;
		parent.removeCellElements();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::RemoveAllVisuals()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement)" />*/
	_removeVisual: function (visual) {
		var parent = (this._view())._element;
		parent.removeCellElement(visual);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneCellValueLayer', $.ig.SpreadsheetPaneCellValueLayerBase$1.prototype.$type.specialize($.ig.SpreadsheetCellValueElement.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase_CellInfo`1" />*/

$.ig.util.defType('SpreadsheetPaneCellValueLayerBase_CellInfo$1', 'Object', {
	$tVisual: null,
	_value: null,
	_visual: null,
	init: function ($tVisual, value, visual) {
		this.$tVisual = $tVisual;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tVisual);
		}
		$.ig.Object.prototype.init.call(this);
		this._value = value;
		this._visual = visual;
	},
	$type: new $.ig.Type('SpreadsheetPaneCellValueLayerBase_CellInfo$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayerBase_CellInfo`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo" />*/

$.ig.util.defType('SpreadsheetPaneCellValueLayer_JsCellInfo', 'SpreadsheetPaneCellValueLayerBase_CellInfo$1', {
	__isFill: false,
	__formattedText: null,
	init: function (value, visual) {
		$.ig.SpreadsheetPaneCellValueLayerBase_CellInfo$1.prototype.init.call(this, $.ig.SpreadsheetCellValueElement.prototype.$type, value, visual);
		this.initialize(value);
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	initialize: function (value) {
		this._value = value;
		this.__isFill = value._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.fill;
		this.__formattedText = value._formattedText;
		return this;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo::HasSimilarInfo(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	hasSimilarInfo: function (value) {
		var isFill = value._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.fill;
		return isFill == this.__isFill && this.__formattedText.equals(value._formattedText);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo::HasSimilarInfo(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneCellValueLayer_JsCellInfo', $.ig.SpreadsheetPaneCellValueLayerBase_CellInfo$1.prototype.$type.specialize($.ig.SpreadsheetCellValueElement.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellValueLayer_JsCellInfo" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.IElementLayerView" />*/

$.ig.util.defType('IElementLayerView', 'Object', {
	$type: new $.ig.Type('IElementLayerView', null)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.IElementLayerView" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayerView" />*/

$.ig.util.defType('ElementLayerView', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::Attach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	attach: function (layer) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::Attach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::Detach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	detach: function (layer) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::Detach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::InvalidateArrange()" />*/
	invalidateArrange: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerView::InvalidateArrange()" />*/
	,
	$type: new $.ig.Type('ElementLayerView', $.ig.Object.prototype.$type, [$.ig.IElementLayerView.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayerView" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayerViewSingle" />*/

$.ig.util.defType('ElementLayerViewSingle', 'ElementLayerView', {
	__layer: null,
	init: function () {
		$.ig.ElementLayerView.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerViewSingle::Attach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	attach: function (layer) {
		$.ig.Debug.prototype.assert(this.__layer == null && layer != null && layer._view() == this);
		this.__layer = layer;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerViewSingle::Attach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerViewSingle::Detach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	detach: function (layer) {
		$.ig.Debug.prototype.assert(layer == this.__layer);
		this.__layer = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerViewSingle::Detach(Infragistics.Controls.Primitives.ElementLayer)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayer Infragistics.Controls.Primitives.ElementLayerViewSingle::Layer()" />*/
	layer: function () {
		return this.__layer;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayer Infragistics.Controls.Primitives.ElementLayerViewSingle::Layer()" />*/
	,
	$type: new $.ig.Type('ElementLayerViewSingle', $.ig.ElementLayerView.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayerViewSingle" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.IRendererElementLayerView`2" />*/

$.ig.util.defType('IRendererElementLayerView$2', 'Object', {
	$type: new $.ig.Type('IRendererElementLayerView$2', null, [$.ig.IElementLayerView.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.IRendererElementLayerView`2" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView" />*/

$.ig.util.defType('SpreadsheetCellValueLayerView', 'ElementLayerViewSingle', {
	_element: null,
	init: function (parentLayer) {
		$.ig.ElementLayerViewSingle.prototype.init.call(this);
		this._element = new $.ig.SpreadsheetCellValueLayerElement(parentLayer, this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
		this._element.isChildPositionDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::InvalidateArrange()" />*/
	invalidateArrange: function () {
		this._element.isChildPositionDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::InvalidateArrange()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.ILayerRenderer Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::CreateRenderer()" />*/
	createRenderer: function () {
		return new $.ig.SpreadsheetCellValueLayerView_Renderer();
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.ILayerRenderer Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::CreateRenderer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::ReleaseRenderer(Infragistics.Controls.Primitives.ILayerRenderer)" />*/
	releaseRenderer: function (renderer) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView::ReleaseRenderer(Infragistics.Controls.Primitives.ILayerRenderer)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellValueLayerView', $.ig.ElementLayerViewSingle.prototype.$type, [$.ig.IRendererElementLayerView$2.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type, $.ig.ISpreadsheetGraphics.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ILayerRenderer" />*/

$.ig.util.defType('ILayerRenderer', 'Object', {
	$type: new $.ig.Type('ILayerRenderer', null)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ILayerRenderer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer" />*/

$.ig.util.defType('SpreadsheetCellValueLayerView_Renderer', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::OnUnloaded()" />*/
	onUnloaded: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::OnUnloaded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::InvalidateLayout()" />*/
	invalidateLayout: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::InvalidateLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::InvalidateRender()" />*/
	invalidateRender: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::InvalidateRender()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::Measure(System.Windows.Size)" />*/
	measure: function (availableSize) {
		availableSize = $.ig.util.sizeFromLiteral(availableSize);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::Measure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::Arrange(System.Windows.Size)" />*/
	arrange: function (finalSize) {
		finalSize = $.ig.util.sizeFromLiteral(finalSize);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer::Arrange(System.Windows.Size)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellValueLayerView_Renderer', $.ig.Object.prototype.$type, [$.ig.ILayerRenderer.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerView_Renderer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement" />*/

$.ig.util.defType('SpreadsheetCellValueLayerElement', 'VisualElement', {
	_layerView: null,
	_cellContainer: null,
	_availableElements: null,
	init: function (parent, layer) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.cellValueLayer);
		this._availableElements = new $.ig.List$1($.ig.SpreadsheetCellValueElement.prototype.$type, 0);
		this._layerView = layer;
		this._cellContainer = new $.ig.VisualElement(this, $.ig.SpreadsheetElementIds.prototype.cellContainer);
		this.isHitTestVisible(false);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::Dispose()" />*/
	dispose: function () {
		var layer = this._layerView.layer();
		if (layer != null) {
			layer.dispose();
			this._layerView.detach(layer);
		}
		$.ig.VisualElement.prototype.dispose.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		var size = new $.ig.Size(1, width, height);
		this._layerView.layer()._measureOverride(size);
		this._layerView.layer()._arrangeOverride(size);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::OnRecycled()" />*/
	onRecycled: function () {
		$.ig.VisualElement.prototype.onRecycled.call(this);
		this.removeCellElements();
		this.isChildPositionDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::OnRecycled()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::GetOrCreateCellElement(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	getOrCreateCellElement: function (info) {
		var layer = this._layerView.layer();
		for (var i = 0, count = this._availableElements.count(); i < count; i++) {
			var temp = this._availableElements.__inner[i];
			if (info.hasSameLayerValues(temp.cellValueInfo())) {
				this._availableElements.removeAt(i);
				temp._pane = layer._viewModel();
				temp.isVisible(true);
				return temp;
			}
		}
		if (this._availableElements.count() > 300) {
			var idx = this._availableElements.count() - 1;
			var elem = this._availableElements.__inner[idx];
			this._availableElements.removeAt(idx);
			elem._pane = layer._viewModel();
			elem.isVisible(true);
			return elem;
		}
		return new $.ig.SpreadsheetCellValueElement(this._cellContainer, layer._viewModel());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::GetOrCreateCellElement(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::RemoveCellElement(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement)" />*/
	removeCellElement: function (element) {
		if (this._availableElements.count() < 1000) {
			element.isVisible(false);
			this._availableElements.add(element);
		} else {
			element.isRemoved(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::RemoveCellElement(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::RemoveCellElements()" />*/
	removeCellElements: function () {
		for (var i = 0, count = this._cellContainer.childrenCount(); i < count; i++) {
			var child = this._cellContainer.getChild(i);
			if (child.isVisible() && child._id == $.ig.SpreadsheetElementIds.prototype.cellValue) {
				child.isVisible(false);
				this._availableElements.add1(child);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement::RemoveCellElements()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellValueLayerElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueLayerElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ScrollRegionLayerContainer" />*/

$.ig.util.defType('ScrollRegionLayerContainer', 'SpreadsheetElementLayerContainer$1', {
	init: function (element, scrollRegion) {
		$.ig.SpreadsheetElementLayerContainer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, element, scrollRegion);
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.ScrollRegionLayerContainer::CreateInteractionManager()" />*/
	createInteractionManager: function () {
		return new $.ig.SpreadsheetScrollRegionInteractionManager(this._viewModel, this);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.ScrollRegionLayerContainer::CreateInteractionManager()" />*/
	,
	$type: new $.ig.Type('ScrollRegionLayerContainer', $.ig.SpreadsheetElementLayerContainer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ScrollRegionLayerContainer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet" />*/

$.ig.util.defType('Spreadsheet', 'PropertyChangeNotifierExtended', {
	___measureHelper: null,
	___container: null,
	___isArrangeScheduled: false,
	___viewport: null,
	___spreadsheetVisualElement: null,
	___builder: null,
	___menuBuilder: null,
	css: null,
	__metricsCache: null,
	___isScrollLocked: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsScrollLocked()" />*/
	isScrollLocked: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isScrollLocked) {
				this.___isScrollLocked = value;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("IsScrollLocked");
			}
			return value;
		} else {
			return this.___isScrollLocked;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsScrollLocked()" />*/
	,
	/*<BeginProperty Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.Spreadsheet::Container()" />*/
	_container: function () {
		return this.___container;
	}
	/*<EndProperty Name="System.Html.IDomRenderer Infragistics.Controls.Grids.Core.Spreadsheet::Container()" />*/
	,
	_height: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			this._height = value;
			return value;
		} else {
			return this._height;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet::Height()" />*/
	,
	_width: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet::Width()" />*/
	width: function (value) {
		if (arguments.length === 1) {
			this._width = value;
			return value;
		} else {
			return this._width;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet::Width()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper Infragistics.Controls.Grids.Core.Spreadsheet::MeasureHelper()" />*/
	_measureHelper: function () {
		return this.___measureHelper;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetMeasureHelper Infragistics.Controls.Grids.Core.Spreadsheet::MeasureHelper()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager Infragistics.Controls.Grids.Core.Spreadsheet::SpreadsheetAreaLayoutManager()" />*/
	_spreadsheetAreaLayoutManager: function () {
		return this.___spreadsheetVisualElement != null ? this.___spreadsheetVisualElement._areaElement._area : null;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager Infragistics.Controls.Grids.Core.Spreadsheet::SpreadsheetAreaLayoutManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElement Infragistics.Controls.Grids.Core.Spreadsheet::Element()" />*/
	_element: function () {
		return this.___spreadsheetVisualElement;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElement Infragistics.Controls.Grids.Core.Spreadsheet::Element()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.Spreadsheet::Viewport()" />*/
	_viewport: function (value) {
		if (arguments.length === 1) {
			if ($.ig.Rect.prototype.l_op_Inequality(this.___viewport, value)) {
				this.___viewport = value;
				if (this.___spreadsheetVisualElement != null) {
					this.___spreadsheetVisualElement.setPosition(value.left(), value.top(), value.width(), value.height());
				}
				this.scheduleArrange();
			}
			return value;
		} else {
			return this.___viewport;
		}
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.Spreadsheet::Viewport()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::HasActiveWorksheetChanged()" />*/
	_hasActiveWorksheetChanged: function () {
		return this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.activeTabChanged);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::HasActiveWorksheetChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ContainerResized()" />*/
	containerResized: function () {
		var r = this.___container.rootWrapper().getNativeElement().getBoundingClientRect();
		var width = r.width;
		var height = r.height;
		this._viewport(new $.ig.Rect(0, 0, 0, width, height));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ContainerResized()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Destroy()" />*/
	destroy: function () {
		this.provideContainer(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Destroy()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	executeCommand: function (action) {
		return this._executeCommand1(action, null, null);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Flush()" />*/
	flush: function () {
		if (this.___isArrangeScheduled) {
			this._arrange();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Flush()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnInitialized()" />*/
	onInitialized: function () {
		this._initialize();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnInitialized()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ProvideContainer(System.Object)" />*/
	provideContainer: function (container) {
		var $self = this;
		var oldContainer = this.___container;
		var newContainer = container;
		this.___container = newContainer;
		if (oldContainer != null) {
			this._disposeCurrentMenu();
			if (this.___spreadsheetVisualElement != null) {
				this.___spreadsheetVisualElement.isRemoved(true);
				this.___spreadsheetVisualElement.removeFromParent();
				this.___spreadsheetVisualElement.dispose();
				this.___spreadsheetVisualElement._areaElement._area.spreadsheet(null);
				this.___spreadsheetVisualElement = null;
			}
			if (this.___measureHelper != null) {
				this.___measureHelper.release();
			}
		}
		if (newContainer != null) {
			if (this.___builder == null) {
				this.___builder = new $.ig.SpreadsheetVisualElementDomBuilder(this);
			}
			this.___builder.css(this.css);
			if (this.___measureHelper == null) {
				this.___measureHelper = new $.ig.SpreadsheetMeasureHelper(this);
			}
			if (this.___menuBuilder == null) {
				this.___menuBuilder = new $.ig.JsSpreadsheetMenuBuilder(this);
			}
			this.___measureHelper.initialize(newContainer);
			var rootWrapper = newContainer.rootWrapper();
			rootWrapper.setRawStyleProperty("position", "relative");
			var spreadsheetDiv = newContainer.createElement("div");
			spreadsheetDiv.setAttribute("style", "position:absolute;outline:0");
			spreadsheetDiv.setAttribute("tabIndex", 0);
			newContainer.append(spreadsheetDiv);
			var spreadsheetRenderer = newContainer.getSubRenderer(spreadsheetDiv);
			spreadsheetDiv.listen("focus", function (e) {
				if ($self.isRenamingWorksheet() && !$self._tabEditManager().isExitingEditMode()) {
					($self._tabEditManager()).focus();
				}
			});
			var spreadsheetElement = new $.ig.SpreadsheetVisualElement(this);
			this.___spreadsheetVisualElement = spreadsheetElement;
			spreadsheetElement._platformObject = spreadsheetRenderer;
			var eventProxy = new $.ig.SpreadsheetDOMEventProxy(this, spreadsheetRenderer.rootWrapper(), spreadsheetRenderer);
			spreadsheetElement.eventProxy(eventProxy);
			var spreadsheetAreaLayoutManager = new $.ig.JsSpreadsheetAreaLayoutManager(spreadsheetElement._areaElement);
			spreadsheetElement._areaElement._area = spreadsheetAreaLayoutManager;
			spreadsheetAreaLayoutManager.spreadsheet(this);
			spreadsheetAreaLayoutManager.pixelConverter(this._pixelConverter());
			this.containerResized();
			spreadsheetElement.afterHasDescendantChanged = $.ig.Delegate.prototype.combine(spreadsheetElement.afterHasDescendantChanged, function (o, a) {
				$self.scheduleArrange();
			});
			this._onViewInitialized();
			this._arrange1(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ProvideContainer(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ScheduleArrange()" />*/
	scheduleArrange: function () {
		if (!this.___isArrangeScheduled) {
			this.___isArrangeScheduled = true;
			window.setTimeout(this._arrange.runOn(this), 0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ScheduleArrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::StyleUpdated()" />*/
	styleUpdated: function () {
		if (this.___builder != null) {
			this.___builder.css(this.css);
		}
		if (this.___measureHelper != null) {
			this.___measureHelper.updateMetricsCache();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::StyleUpdated()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.Spreadsheet::GetScrollRegion(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	_getScrollRegion: function (scrollRegion) {
		return this.___spreadsheetVisualElement == null ? null : this.___spreadsheetVisualElement._areaElement._area.getScrollRegionElement(scrollRegion);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.Spreadsheet::GetScrollRegion(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.Spreadsheet::GetPaneElement(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_getPaneElement: function (pane) {
		return this.___spreadsheetVisualElement == null ? null : this.___spreadsheetVisualElement._areaElement._area.getPaneElement(pane);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Grids.Core.Spreadsheet::GetPaneElement(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsNameBoxDroppedDown()" />*/
	_isNameBoxDroppedDown: function () {
		if (this._viewResolved().isInNameBox()) {
			var nameboxArea = this.___spreadsheetVisualElement._formulaBar._nameBoxArea;
			if (nameboxArea._nameBox._platformObject != null) {
				var ele = nameboxArea._nameBox._platformObject.rootWrapper().getNativeElement();
				if ($(ele).igCombo("dropDownOpened")) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsNameBoxDroppedDown()" />*/
	,
	___currentContextMenu: null,
	___currentContextMenuArea: 0,
	___contextMenuPreviewKeyDown: null,
	___previewKeyDownActiveItemId: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CloseContextMenu()" />*/
	_closeContextMenu: function () {
		if (this.___currentContextMenu != null) {
			this._shiftFocusOutOfMenu();
			this.___currentContextMenu.menu("collapseAll", null, true);
			this.___currentContextMenu.hide();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CloseContextMenu()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ShiftFocusOutOfMenu()" />*/
	_shiftFocusOutOfMenu: function () {
		if (this.___currentContextMenu != null && this.___currentContextMenu[0].contains(document.activeElement)) {
			this._viewResolved().focus();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ShiftFocusOutOfMenu()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::DisposeCurrentMenu()" />*/
	_disposeCurrentMenu: function () {
		if (this.___currentContextMenu != null) {
			this.___currentContextMenu.unbind("blur");
			if (this.___contextMenuPreviewKeyDown != null) {
				this.___currentContextMenu[0].removeEventListener("keydown", this.___contextMenuPreviewKeyDown, true);
				this.___contextMenuPreviewKeyDown = null;
			}
			this.___currentContextMenu.menu("destroy");
			this.___currentContextMenu.remove();
			this.___currentContextMenu = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::DisposeCurrentMenu()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsContextMenuOpen()" />*/
	_isContextMenuOpen: function () {
		return this.___currentContextMenu != null && this.___currentContextMenu.is(":visible");
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsContextMenuOpen()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsWithinContextMenu(System.Html.Element)" />*/
	_isWithinContextMenu: function (e) {
		return e != null && this.___currentContextMenu != null && this.___currentContextMenu[0].contains(e);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsWithinContextMenu(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuArea, Infragistics.Controls.Core.VisualElement, System.Windows.Point)" />*/
	_showContextMenu: function (area, relativeElement, relativePoint) {
		var $self = this;
		if (this.___spreadsheetVisualElement == null || this.___spreadsheetVisualElement._platformObject == null) {
			return false;
		}
		if (relativeElement == null) {
			return false;
		}
		var pt = relativeElement.getRelativeLocation(null);
		pt.__x += relativePoint.__x;
		pt.__y += relativePoint.__y;
		if (this.___currentContextMenuArea != area) {
			this._disposeCurrentMenu();
		}
		var items;
		if (this.___currentContextMenu == null) {
			this.___currentContextMenuArea = area;
			items = this.___menuBuilder.createMenuItems(area);
			var ul = document.createElement("ul");
			ul.style.position = "absolute";
			ul.style.width = "auto";
			ul.style.zIndex = 20000;
			if (ul.addEventListener) {
				var previewKeyDown = function (e) {
					$self.___previewKeyDownActiveItemId = $self.___currentContextMenu[0].getAttribute("aria-activedescendant");
				};
				this.___contextMenuPreviewKeyDown = previewKeyDown;
				ul.addEventListener("keydown", this.___contextMenuPreviewKeyDown, true);
			}
			var en = items.getEnumerator();
			while (en.moveNext()) {
				var item = en.current();
				ul.appendChild(item);
			}
			this.___currentContextMenu = $(ul);
			this.___spreadsheetVisualElement._platformObject.rootWrapper().append(new $.ig.JQueryDomWrapper(ul, this.___currentContextMenu));
			this.___currentContextMenu.menu({ position: { my: "left top", at: "right top", collision: "flipfit" }, select: function (evt, ui) {
	var actionStr = ui.item[0].id;
	if (!String.isNullOrEmpty(actionStr)) {
		var cmd;
		if ((function () { var $ret = $.ig.Enum.prototype.tryParse$1($.ig.spreadsheet.SpreadsheetAction.prototype.$type, actionStr, true, cmd); cmd = $ret.p2; return $ret.ret; }())) {
			$self._closeContextMenu();
			$self.executeCommand(cmd);
		}
	}
} });
			this.___currentContextMenu.bind("blur", function (evt) {
				if ($self._isContextMenuOpen() && !$self._isWithinContextMenu(document.activeElement)) {
					$self._closeContextMenu();
				}
			});
		} else {
			items = $.ig.SpreadsheetUtilities.prototype.getChildren(this.___currentContextMenu[0]);
		}
		this.___menuBuilder.initializeItems(items);
		this.___menuBuilder.verifyMenuSeparatorVisibility(items);
		var jEle = $(this.___spreadsheetVisualElement._platformObject.rootWrapper().getNativeElement());
		var offset = jEle.offset();
		var tempEvt = jQuery.Event("mousedown", { which: 1, pageX: offset.left + Math.round(pt.__x), pageY: offset.top + Math.round(pt.__y)});
		this.___currentContextMenu.show();
		this.___currentContextMenu.position({ my: "left top", of: tempEvt, collision: "flipfit" });
		this.___currentContextMenu.focus();
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetContextMenuArea, Infragistics.Controls.Core.VisualElement, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnSpreadsheetElementKeyDown(System.Windows.Input.Key, System.Windows.Input.ModifierKeys, System.Object)" />*/
	_onSpreadsheetElementKeyDown: function (key, modifiers, originalEvent) {
		if (this.___currentContextMenu != null) {
			if (this._isContextMenuOpen()) {
				if (key == $.ig.Key.prototype.escape) {
					var currentActiveItemId = this.___currentContextMenu[0].getAttribute("aria-activedescendant");
					if (currentActiveItemId == this.___previewKeyDownActiveItemId) {
						this._closeContextMenu();
						return true;
					}
				}
				return false;
			}
			if (originalEvent != null) {
				var menuRoot = this.___currentContextMenu[0];
				var target = originalEvent.target;
				if (menuRoot.contains(target)) {
					return true;
				}
			}
		}
		return this._processKeyDown(key, modifiers);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnSpreadsheetElementKeyDown(System.Windows.Input.Key, System.Windows.Input.ModifierKeys, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Arrange()" />*/
	_arrange: function () {
		if (this.___isArrangeScheduled) {
			this._arrange1(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Arrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Arrange(System.Boolean)" />*/
	_arrange1: function (updateDom) {
		var wasArrangeScheduler = this.___isArrangeScheduled;
		this.___isArrangeScheduled = false;
		this._processPendingChangeNotification();
		if (this.___spreadsheetVisualElement != null) {
			this.___spreadsheetVisualElement.setPosition(this.___viewport.left(), this.___viewport.top(), this.___viewport.width(), this.___viewport.height());
			if (this.___spreadsheetVisualElement.isChildPositionDirty()) {
				this.___spreadsheetVisualElement.positionChildren();
			}
			var spreadsheetAreaSize = new $.ig.Size(1, this.___spreadsheetVisualElement._areaElement._width, this.___spreadsheetVisualElement._areaElement._height);
			if (!this.___spreadsheetVisualElement._areaElement._area._isMeasureValid) {
				this.___spreadsheetVisualElement._areaElement._area.measure(spreadsheetAreaSize);
			}
			if (!this.___spreadsheetVisualElement._areaElement._area._isArrangeValid) {
				this.___spreadsheetVisualElement._areaElement._area.arrange(spreadsheetAreaSize);
			}
			this.___spreadsheetVisualElement.verifyChildElements();
			if (updateDom) {
				this.___spreadsheetVisualElement.accept(this.___builder);
			} else {
				if (this.___spreadsheetVisualElement.hasDescendantChanged() && wasArrangeScheduler && !this.___isArrangeScheduled) {
					this.___isArrangeScheduled = true;
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Arrange(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnCreated()" />*/
	_onCreated: function () {
		this._view(new $.ig.SpreadsheetView(this));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnCreated()" />*/
	,
	___view: null,
	___viewResolved: null,
	___sheetManager: null,
	___pixelConverter: null,
	___workbookOwner: null,
	___ownerToRegister: null,
	___panes: null,
	___listener: null,
	___commands: null,
	___flags: 0,
	___deferredValidationOperation: null,
	___cellEditManager: null,
	___tabEditManager: null,
	___undoManagerHandler: null,
	___cachedUndoManager: null,
	___tabManager: null,
	___activeSelectionCellFormat: null,
	___activeSelectionCellRangeFormat: null,
	___sortedSimpleNamedReferences: null,
	___namedReferenceList: null,
	___suspendSynchronizationCount: 0,
	___previousNameboxSnapshot: null,
	___mouseOperationWithCapture: null,
	___asyncPendingActiveCellValueChange: null,
	___deferredEvents: null,
	init: function () {
		this.___viewport = new $.ig.Rect(0, 0, 0, 0, 0);
		this.__metricsCache = new $.ig.SpreadsheetMetricsCache();
		this.___activeCell = new $.ig.spreadsheet.SpreadsheetCell();
		this.___activeCellAsRange = new $.ig.spreadsheet.SpreadsheetCellRange();
		this.___allowAddWorksheet = true;
		this.___allowDeleteWorksheet = true;
		this.___areGridlinesVisible = true;
		this.___areHeadersVisible = true;
		this.___cellEditMode = $.ig.SpreadsheetCellEditMode.prototype.notInEditMode;
		this.___enterKeyNavigationDirection = $.ig.SpreadsheetEnterKeyNavigationDirection.prototype.down;
		this.___fixedDecimalPlaceCount = $.ig.Spreadsheet.prototype.__defaultFixedDecimalPlaceCount;
		this.___isEnterKeyNavigationEnabled = true;
		this.___isFixedDecimalEnabled = false;
		this.___isFormulaBarVisible = true;
		this.___isInEndMode = false;
		this.___isRenamingWorksheet = false;
		this.___isUndoEnabled = true;
		this.___nameBoxWidth = $.ig.Spreadsheet.prototype._nameBoxWidthDefault;
		this.___selectionMode = $.ig.SpreadsheetCellSelectionMode.prototype.normal;
		this.___undoManager = null;
		this.___validationInputMessagePosition = null;
		this.___zoomLevel = $.ig.excel.DisplayOptions.prototype._defaultMagnificationInNormalView;
		this.___nameBoxValue = null;
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		this._viewResolved(new $.ig.Spreadsheet_NullView(this));
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.Spreadsheet.prototype.$type, this, $.ig.Spreadsheet.prototype._onPrivateSubObjectPropertyChanged, false);
		this.___deferredValidationOperation = new $.ig.DeferredOperation(this._verifyState.runOn(this));
		this.___commands = $.ig.SpreadsheetCommandBuilder.prototype.createCommandMap();
		this.___panes = new $.ig.ReadOnlyNotifyCollection$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, new Array(0));
		this.___pixelConverter = new $.ig.PixelConverter();
		this.___workbookOwner = new $.ig.Spreadsheet_WorkbookOwner(this);
		this.___ownerToRegister = this.___workbookOwner;
		this.___namedReferenceList = new $.ig.Spreadsheet_NameBoxList(this);
		this.___activeSelectionCellFormat = new $.ig.Spreadsheet_SelectionWorksheetCellFormat(this);
		this.___activeSelectionCellRangeFormat = new $.ig.spreadsheet.SpreadsheetCellRangeFormat(this.___activeSelectionCellFormat, this._getSelectionCellRanges.runOn(this));
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetTabManager.prototype.$type, this.___tabManager, new $.ig.SpreadsheetTabManager(), this.___listener, false);
		this.___tabManager = $ret.p0;
		this.undoManager(new $.ig.UndoManager());
		this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled, true);
		this._useNewWorkbook();
		this._onCreated();
	},
	___activeCell: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCell()" />*/
	activeCell: function (value) {
		if (arguments.length === 1) {
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(value, this.___activeCell)) {
				var selection = this.activeSelection();
				var oldCell = this.___activeCell;
				var newCell = value;
				this.___activeCell = value;
				this._dirtyActiveSelectionCellFormat();
				this._forceExitEditMode(true);
				if (selection != null) {
					selection._setActiveCell(newCell, $.ig.util.toNullable($.ig.Number.prototype.$type, null));
				}
				this._verifyState();
				this.onPropertyChanged("ActiveCell");
				this.onPropertyChanged("ActiveCellAddress");
				this._addDeferredEvent("ActiveCellChanged", oldCell);
			}
			return value;
		} else {
			return this.___activeCell;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCell()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCellAddress()" />*/
	activeCellAddress: function (value) {
		if (arguments.length === 1) {
			this.activeCell(new $.ig.spreadsheet.SpreadsheetCell(value));
			return value;
		} else {
			return this.___activeCell.toString();
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCellAddress()" />*/
	,
	___activeCellAsRange: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCellAsRange()" />*/
	_activeCellAsRange: function (value) {
		if (arguments.length === 1) {
			if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality(value, this.___activeCellAsRange)) {
				this.___activeCellAsRange = value;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost | $.ig.Spreadsheet_InternalFlags.prototype.activeCellValue);
				this._verifyState();
				this.onPropertyChanged("ActiveCellAsRange");
			}
			return value;
		} else {
			return this.___activeCellAsRange;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCellAsRange()" />*/
	,
	___activePane: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.Spreadsheet::ActivePane()" />*/
	activePane: function (value) {
		if (arguments.length === 1) {
			if (value != this.___activePane) {
				var oldPane = this.___activePane;
				var newPane = value;
				this.___activePane = value;
				this.activeSelection(newPane != null ? newPane.selection() : null);
				this._forceExitEditMode(true);
				this._verifyState();
				this.onPropertyChanged("ActivePane");
				this._addDeferredEvent("ActivePaneChanged", oldPane);
			}
			return value;
		} else {
			return this.___activePane;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.Spreadsheet::ActivePane()" />*/
	,
	___activeSelection: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.Spreadsheet::ActiveSelection()" />*/
	activeSelection: function (value) {
		if (arguments.length === 1) {
			if (value != this.___activeSelection) {
				var oldSelection = this.___activeSelection;
				var newSelection = value;
				this.___activeSelection = value;
				if (oldSelection != null) {
					oldSelection._cellSelectionMode($.ig.SpreadsheetCellSelectionMode.prototype.normal);
				}
				this._dirtyActiveSelectionCellFormat();
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification);
				var temp = oldSelection;
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelperObj$1($.ig.spreadsheet.SpreadsheetSelection.prototype.$type, temp, newSelection, this.___listener, false);
				temp = $ret.p0;
				this.activeCell(newSelection != null ? newSelection.activeCell() : new $.ig.spreadsheet.SpreadsheetCell());
				this._activeCellAsRange(newSelection != null ? newSelection._activeCellAsRange() : new $.ig.spreadsheet.SpreadsheetCellRange());
				if (newSelection != null) {
					newSelection._cellSelectionMode(this.selectionMode());
				}
				this._verifyState();
				this.onPropertyChanged("ActiveSelection");
			}
			return value;
		} else {
			return this.___activeSelection;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection Infragistics.Controls.Grids.Core.Spreadsheet::ActiveSelection()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat Infragistics.Controls.Grids.Core.Spreadsheet::ActiveSelectionCellRangeFormat()" />*/
	activeSelectionCellRangeFormat: function () {
		return this.___activeSelectionCellRangeFormat;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat Infragistics.Controls.Grids.Core.Spreadsheet::ActiveSelectionCellRangeFormat()" />*/
	,
	___activeWorksheet: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.Spreadsheet::ActiveWorksheet()" />*/
	activeWorksheet: function (value) {
		if (arguments.length === 1) {
			if (value != this.___activeWorksheet) {
				var oldValue = this.___activeWorksheet;
				var newWorksheet = value;
				this.___activeWorksheet = value;
				this.___sortedSimpleNamedReferences = null;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.activeCellValue);
				if (newWorksheet != null && newWorksheet.workbook() != null) {
					newWorksheet.workbook().windowOptions()._setSelectedWorksheet(newWorksheet, false);
				}
				this._verifyState();
				this.onPropertyChanged("ActiveWorksheet");
				this._addDeferredEvent("ActiveWorksheetChanged", oldValue);
			}
			return value;
		} else {
			return this.___activeWorksheet;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.Spreadsheet::ActiveWorksheet()" />*/
	,
	___allowAddWorksheet: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AllowAddWorksheet()" />*/
	allowAddWorksheet: function (value) {
		if (arguments.length === 1) {
			if (value != this.___allowAddWorksheet) {
				this.___allowAddWorksheet = value;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("AllowAddWorksheet");
			}
			return value;
		} else {
			return this.___allowAddWorksheet;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AllowAddWorksheet()" />*/
	,
	___allowDeleteWorksheet: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AllowDeleteWorksheet()" />*/
	allowDeleteWorksheet: function (value) {
		if (arguments.length === 1) {
			if (value != this.___allowDeleteWorksheet) {
				this.___allowDeleteWorksheet = value;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("AllowDeleteWorksheet");
			}
			return value;
		} else {
			return this.___allowDeleteWorksheet;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AllowDeleteWorksheet()" />*/
	,
	___areGridlinesVisible: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AreGridlinesVisible()" />*/
	areGridlinesVisible: function (value) {
		if (arguments.length === 1) {
			if (value != this.___areGridlinesVisible) {
				this.___areGridlinesVisible = value;
				if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingShowGridlines)) {
					this._verifySheetManager();
					if (this.___sheetManager != null) {
						this.___sheetManager._setShowGridlines(this.areGridlinesVisible());
					}
				}
				this.onPropertyChanged("AreGridlinesVisible");
			}
			return value;
		} else {
			return this.___areGridlinesVisible;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AreGridlinesVisible()" />*/
	,
	___areHeadersVisible: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AreHeadersVisible()" />*/
	areHeadersVisible: function (value) {
		if (arguments.length === 1) {
			if (value != this.___areHeadersVisible) {
				this.___areHeadersVisible = value;
				if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingShowHeaders)) {
					this._verifySheetManager();
					if (this.___sheetManager != null) {
						this.___sheetManager._setShowHeaders(this.areHeadersVisible());
					}
				}
				this.onPropertyChanged("AreHeadersVisible");
			}
			return value;
		} else {
			return this.___areHeadersVisible;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::AreHeadersVisible()" />*/
	,
	___cellEditMode: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditMode Infragistics.Controls.Grids.Core.Spreadsheet::CellEditMode()" />*/
	cellEditMode: function (value) {
		if (arguments.length === 1) {
			if (value != this.___cellEditMode) {
				$.ig.Debug.prototype.assert1((value == $.ig.SpreadsheetCellEditMode.prototype.notInEditMode) != this.isInEditMode(), "NotInEditMode should be used when not in edit mode otherwise one of the other values should be used");
				this.___cellEditMode = value;
				this.___cellEditManager.onCellEditModeChanged();
				this.onPropertyChanged("CellEditMode");
			}
			return value;
		} else {
			return this.___cellEditMode;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditMode Infragistics.Controls.Grids.Core.Spreadsheet::CellEditMode()" />*/
	,
	___enterKeyNavigationDirection: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetEnterKeyNavigationDirection Infragistics.Controls.Grids.Core.Spreadsheet::EnterKeyNavigationDirection()" />*/
	enterKeyNavigationDirection: function (value) {
		if (arguments.length === 1) {
			if (value != this.___enterKeyNavigationDirection) {
				this.___enterKeyNavigationDirection = value;
				this.onPropertyChanged("EnterKeyNavigationDirection");
			}
			return value;
		} else {
			return this.___enterKeyNavigationDirection;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetEnterKeyNavigationDirection Infragistics.Controls.Grids.Core.Spreadsheet::EnterKeyNavigationDirection()" />*/
	,
	___fixedDecimalPlaceCount: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.Spreadsheet::FixedDecimalPlaceCount()" />*/
	fixedDecimalPlaceCount: function (value) {
		if (arguments.length === 1) {
			if (value != this.___fixedDecimalPlaceCount) {
				this.___fixedDecimalPlaceCount = value;
				this.onPropertyChanged("FixedDecimalPlaceCount");
			}
			return value;
		} else {
			return this.___fixedDecimalPlaceCount;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.Spreadsheet::FixedDecimalPlaceCount()" />*/
	,
	___isEnterKeyNavigationEnabled: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsEnterKeyNavigationEnabled()" />*/
	isEnterKeyNavigationEnabled: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isEnterKeyNavigationEnabled) {
				this.___isEnterKeyNavigationEnabled = value;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("IsEnterKeyNavigationEnabled");
			}
			return value;
		} else {
			return this.___isEnterKeyNavigationEnabled;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsEnterKeyNavigationEnabled()" />*/
	,
	___isFixedDecimalEnabled: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsFixedDecimalEnabled()" />*/
	isFixedDecimalEnabled: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isFixedDecimalEnabled) {
				this.___isFixedDecimalEnabled = value;
				this.onPropertyChanged("IsFixedDecimalEnabled");
			}
			return value;
		} else {
			return this.___isFixedDecimalEnabled;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsFixedDecimalEnabled()" />*/
	,
	___isFormulaBarVisible: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsFormulaBarVisible()" />*/
	isFormulaBarVisible: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isFormulaBarVisible) {
				this.___isFormulaBarVisible = value;
				this.onPropertyChanged("IsFormulaBarVisible");
			}
			return value;
		} else {
			return this.___isFormulaBarVisible;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsFormulaBarVisible()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInEditMode()" />*/
	isInEditMode: function (value) {
		if (arguments.length === 1) {
			if (value != this.isInEditMode()) {
				var isInEditMode = value;
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isInEditMode, isInEditMode);
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				if (this.___sheetManager != null) {
					this.___sheetManager.__ownerState._isInEditMode(isInEditMode);
				}
				this.onPropertyChanged("IsInEditMode");
			}
			return value;
		} else {
			return this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInEditMode);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInEditMode()" />*/
	,
	___isInEndMode: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInEndMode()" />*/
	isInEndMode: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isInEndMode) {
				this.___isInEndMode = value;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("IsInEndMode");
			}
			return value;
		} else {
			return this.___isInEndMode;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInEndMode()" />*/
	,
	___isRenamingWorksheet: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsRenamingWorksheet()" />*/
	isRenamingWorksheet: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isRenamingWorksheet) {
				this.___isRenamingWorksheet = value;
				this.onPropertyChanged("IsRenamingWorksheet");
			}
			return value;
		} else {
			return this.___isRenamingWorksheet;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsRenamingWorksheet()" />*/
	,
	___isUndoEnabled: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsUndoEnabled()" />*/
	isUndoEnabled: function (value) {
		if (arguments.length === 1) {
			if (value != this.___isUndoEnabled) {
				this.___isUndoEnabled = value;
				this._clearUndoHistory1(this.undoManager());
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled, value);
				this.onPropertyChanged("IsUndoEnabled");
			}
			return value;
		} else {
			return this.___isUndoEnabled;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsUndoEnabled()" />*/
	,
	___nameBoxWidth: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet::NameBoxWidth()" />*/
	nameBoxWidth: function (value) {
		if (arguments.length === 1) {
			if (value != this.___nameBoxWidth) {
				this.___nameBoxWidth = value;
				this.___viewResolved.onNameBoxWidthChanged();
				this.onPropertyChanged("NameBoxWidth");
			}
			return value;
		} else {
			return this.___nameBoxWidth;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet::NameBoxWidth()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ReadOnlyNotifyCollection Infragistics.Controls.Grids.Core.Spreadsheet::Panes()" />*/
	panes: function () {
		return this.___panes;
	}
	/*<EndProperty Name="Infragistics.Collections.ReadOnlyNotifyCollection Infragistics.Controls.Grids.Core.Spreadsheet::Panes()" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.Spreadsheet::GetPanesAsArray()" />*/
	_getPanesAsArray: function () {
		return $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, this.panes());
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.Spreadsheet::GetPanesAsArray()" />*/
	,
	___selectionMode: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode Infragistics.Controls.Grids.Core.Spreadsheet::SelectionMode()" />*/
	selectionMode: function (value) {
		if (arguments.length === 1) {
			if (value != this.___selectionMode) {
				this.___selectionMode = value;
				var selection = this.activeSelection();
				if (selection != null) {
					selection._cellSelectionMode(value);
				}
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("SelectionMode");
			}
			return value;
		} else {
			return this.___selectionMode;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode Infragistics.Controls.Grids.Core.Spreadsheet::SelectionMode()" />*/
	,
	___selectedWorksheets: null,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.Spreadsheet::SelectedWorksheets()" />*/
	selectedWorksheets: function (value) {
		if (arguments.length === 1) {
			if (value != this.___selectedWorksheets) {
				var oldValue = this.___selectedWorksheets;
				var newValue = value;
				var hadMultiple = oldValue != null && oldValue.length > 1;
				var hasMultiple = newValue != null && newValue.length > 1;
				if (hasMultiple != hadMultiple) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				}
				if (newValue != null && newValue.length > 0) {
					for (var i = 0; i < newValue.length; i++) {
						var item = newValue[i];
						if (item == null) {
							throw new $.ig.ArgumentException(0);
						}
					}
					for (var i1 = 1; i1 < newValue.length; i1++) {
						if (newValue[i1].workbook() != newValue[i1 - 1].workbook()) {
							throw new $.ig.InvalidOperationException(0);
						}
					}
					this.___selectedWorksheets = value;
					var wb = newValue[0].workbook();
					var en = wb.worksheets().getEnumerator();
					while (en.moveNext()) {
						var item1 = en.current();
						item1.displayOptions()._isTabSelected($.ig.util.arrayIndexOf1($.ig.excel.Worksheet.prototype.$type, newValue, item1) >= 0);
					}
					if (this._isSynchronizationSuspended() == false && (wb.windowOptions().selectedWorksheet() == null || $.ig.util.arrayIndexOf1($.ig.excel.Worksheet.prototype.$type, newValue, wb.windowOptions().selectedWorksheet()) < 0)) {
						this.activeWorksheet($.ig.Enumerable.prototype.first$1($.ig.excel.Worksheet.prototype.$type, newValue));
					}
				} else {
					this.___selectedWorksheets = value;
				}
				this._verifyState();
				this.onPropertyChanged("SelectedWorksheets");
			}
			return value;
		} else {
			return this.___selectedWorksheets;
		}
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.Spreadsheet::SelectedWorksheets()" />*/
	,
	___undoManager: null,
	/*<BeginProperty Name="Infragistics.Undo.UndoManager Infragistics.Controls.Grids.Core.Spreadsheet::UndoManager()" />*/
	undoManager: function (value) {
		if (arguments.length === 1) {
			if (value != this.___undoManager) {
				if (value == null) {
					throw new $.ig.InvalidOperationException(1, "UndoManager property can not be set to null. Set IsUndoEnabled to false instead.");
				}
				var oldManager = this.___undoManager;
				var newManager = value;
				this.___undoManager = value;
				if (oldManager != null) {
					this._clearUndoHistory1(oldManager);
					if (this.___undoManagerHandler != null) {
						this.___undoManagerHandler.detach();
						this.___undoManagerHandler = null;
					}
				}
				this.___cachedUndoManager = newManager;
				if (newManager != null) {
					this.___undoManagerHandler = new $.ig.WeakPropertyChangedHandler$1($.ig.Spreadsheet.prototype.$type, this, newManager, $.ig.Spreadsheet.prototype._onUndoManagerPropertyChanged);
					newManager.propertyChanged = $.ig.Delegate.prototype.combine(newManager.propertyChanged, this.___undoManagerHandler.onEvent.runOn(this.___undoManagerHandler));
				}
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsCanUndoRedoVerification | $.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this.onPropertyChanged("UndoManager");
			}
			return value;
		} else {
			return this.___undoManager;
		}
	}
	/*<EndProperty Name="Infragistics.Undo.UndoManager Infragistics.Controls.Grids.Core.Spreadsheet::UndoManager()" />*/
	,
	___validationInputMessagePosition: null,
	/*<BeginProperty Name="System.Windows.Point Infragistics.Controls.Grids.Core.Spreadsheet::ValidationInputMessagePosition()" />*/
	validationInputMessagePosition: function (value) {
		if (arguments.length === 1) {
			if ($.ig.Point.prototype.l_op_Inequality(value, this.___validationInputMessagePosition)) {
				this.___validationInputMessagePosition = value;
				this._verifySheetManager();
				if (this.___sheetManager != null) {
					this.___sheetManager._worksheet()._validationInputMessagePosition(this.validationInputMessagePosition());
				}
				this.onPropertyChanged("ValidationInputMessagePosition");
			}
			return value;
		} else {
			return this.___validationInputMessagePosition;
		}
	}
	/*<EndProperty Name="System.Windows.Point Infragistics.Controls.Grids.Core.Spreadsheet::ValidationInputMessagePosition()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnWorkbookChanged(Infragistics.Documents.Excel.Workbook, Infragistics.Documents.Excel.Workbook)" />*/
	_onWorkbookChanged: function (oldWorkbook, newWorkbook) {
		if (oldWorkbook != null) {
			this._clearUndoHistory2(this.___cachedUndoManager, oldWorkbook);
			oldWorkbook._unregisterOwner(this.___ownerToRegister);
			var en = oldWorkbook.worksheets().getEnumerator();
			while (en.moveNext()) {
				var ws = en.current();
				ws._cellsWithInvalidValueCircles().clear();
			}
		}
		if (newWorkbook != null) {
			newWorkbook._registerOwner(this.___ownerToRegister);
		}
		this._forceExitEditMode(false);
		this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsWorkbookDirtiedNotification, false);
		this.___tabManager._workbook(newWorkbook);
		if (this._view() != null) {
			if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitialized)) {
				this._verifySheetManager();
			}
			this._verifyState();
		} else {
			this._queueAsyncVerification();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnWorkbookChanged(Infragistics.Documents.Excel.Workbook, Infragistics.Documents.Excel.Workbook)" />*/
	,
	___workbook: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.Spreadsheet::Workbook()" />*/
	workbook: function (value) {
		if (arguments.length === 1) {
			if (value != this.___workbook) {
				var oldWorkbook = this.___workbook;
				var newWorkbook = value;
				this.___workbook = newWorkbook;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				this._onWorkbookChanged(oldWorkbook, newWorkbook);
				this.onPropertyChanged("Workbook");
			}
			return value;
		} else {
			return this.___workbook;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.Spreadsheet::Workbook()" />*/
	,
	___zoomLevel: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.Spreadsheet::ZoomLevel()" />*/
	zoomLevel: function (value) {
		if (arguments.length === 1) {
			var $self = this;
			if (value != this.___zoomLevel) {
				this.___zoomLevel = value;
				if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingZoomLevel)) {
					this._verifySheetManager();
					if (this.___sheetManager != null) {
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.zoom, function () { $self.___sheetManager._setZoom($self.zoomLevel()); }, null, false, null, true, false);
					}
				}
				this.onPropertyChanged("ZoomLevel");
			}
			return value;
		} else {
			return this.___zoomLevel;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.Spreadsheet::ZoomLevel()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCellPane()" />*/
	_activeCellPane: function () {
		return this.___sheetManager != null ? this.___sheetManager._activeCellPane() : null;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.Spreadsheet::ActiveCellPane()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.Spreadsheet::CellEditManager()" />*/
	_cellEditManager: function () {
		return this.___cellEditManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.Spreadsheet::CellEditManager()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInEditModeResolved()" />*/
	_isInEditModeResolved: function () {
		return this._tabInEdit() != null || this.isInEditMode();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInEditModeResolved()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInitializing()" />*/
	_isInitializing: function () {
		return this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializing);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInitializing()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInitializingCellEditor()" />*/
	_isInitializingCellEditor: function () {
		return this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingCellEditor);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsInitializingCellEditor()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsSynchronizationSuspended()" />*/
	_isSynchronizationSuspended: function () {
		return this.___suspendSynchronizationCount > 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsSynchronizationSuspended()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.Spreadsheet::MouseOperationWithCapture()" />*/
	_mouseOperationWithCapture: function (value) {
		if (arguments.length === 1) {
			if (value != this.___mouseOperationWithCapture) {
				this.___mouseOperationWithCapture = value;
				if (value == null && this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged)) {
					this._queueAsyncVerification();
				}
			}
			return value;
		} else {
			return this.___mouseOperationWithCapture;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.Spreadsheet::MouseOperationWithCapture()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.Spreadsheet::NameBoxItems()" />*/
	_nameBoxItems: function () {
		return this.___namedReferenceList;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.Spreadsheet::NameBoxItems()" />*/
	,
	___nameBoxValue: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.Spreadsheet::NameBoxValue()" />*/
	_nameBoxValue: function (value) {
		if (arguments.length === 1) {
			if (value != this.___nameBoxValue) {
				this.___nameBoxValue = value;
				this.___viewResolved.onNameBoxValueChanged();
				this.onPropertyChanged("NameBoxValue");
			}
			return value;
		} else {
			return this.___nameBoxValue;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.Spreadsheet::NameBoxValue()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::NeedsFormatChangeNotification()" />*/
	_needsFormatChangeNotification: function (value) {
		if (arguments.length === 1) {
			this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification);
			return value;
		} else {
			return this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::NeedsFormatChangeNotification()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::NeedsFormulaBarValueVerification()" />*/
	_needsFormulaBarValueVerification: function (value) {
		if (arguments.length === 1) {
			this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification);
			return value;
		} else {
			return this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::NeedsFormulaBarValueVerification()" />*/
	,
	/*<BeginProperty Name="Infragistics.PixelConverter Infragistics.Controls.Grids.Core.Spreadsheet::PixelConverter()" />*/
	_pixelConverter: function () {
		return this.___pixelConverter;
	}
	/*<EndProperty Name="Infragistics.PixelConverter Infragistics.Controls.Grids.Core.Spreadsheet::PixelConverter()" />*/
	,
	___resourceProvider: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider Infragistics.Controls.Grids.Core.Spreadsheet::ResourceProvider()" />*/
	_resourceProvider: function (value) {
		if (arguments.length === 1) {
			if (value != this.___resourceProvider) {
				this.___resourceProvider = value;
				if (this.___sheetManager != null) {
					this.___sheetManager._resourceProvider(value);
				}
				this.onPropertyChanged("ResourceProvider");
			}
			return value;
		} else {
			return this.___resourceProvider;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider Infragistics.Controls.Grids.Core.Spreadsheet::ResourceProvider()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager Infragistics.Controls.Grids.Core.Spreadsheet::SheetManager()" />*/
	_sheetManager: function () {
		return this.___sheetManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager Infragistics.Controls.Grids.Core.Spreadsheet::SheetManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager Infragistics.Controls.Grids.Core.Spreadsheet::TabEditManager()" />*/
	_tabEditManager: function () {
		return this.___tabEditManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager Infragistics.Controls.Grids.Core.Spreadsheet::TabEditManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.Spreadsheet::TabInEdit()" />*/
	_tabInEdit: function () {
		return this.___tabManager != null ? this.___tabManager._tabInEdit() : null;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.Spreadsheet::TabInEdit()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.Spreadsheet::TabManager()" />*/
	_tabManager: function () {
		return this.___tabManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.Spreadsheet::TabManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.ISpreadsheetView Infragistics.Controls.Grids.Core.Spreadsheet::View()" />*/
	_view: function (value) {
		if (arguments.length === 1) {
			this.___view = value;
			this._viewResolved(this.___view);
			if (value != null) {
				if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitialized)) {
					this._verifySheetManager();
				}
				this._verifyState();
			}
			return value;
		} else {
			return this.___view;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.ISpreadsheetView Infragistics.Controls.Grids.Core.Spreadsheet::View()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.ISpreadsheetView Infragistics.Controls.Grids.Core.Spreadsheet::ViewResolved()" />*/
	_viewResolved: function (value) {
		if (arguments.length === 1) {
			var newView = value || new $.ig.Spreadsheet_NullView(this);
			if (newView != this.___viewResolved || this.___viewResolved == null) {
				$.ig.Debug.prototype.assert1(!this._isInEditModeResolved(), "We're still in edit mode when trying to change the view?");
				this._forceExitEditMode(false);
				this.___viewResolved = newView;
				if (this.___sheetManager != null) {
					this.___sheetManager.__ownerState._renderCache(this.___viewResolved.createRenderCache());
				}
				this._initializeEditManagers();
			}
			return value;
		} else {
			return this.___viewResolved;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.ISpreadsheetView Infragistics.Controls.Grids.Core.Spreadsheet::ViewResolved()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHitTestResult Infragistics.Controls.Grids.Core.Spreadsheet::HitTest(System.Windows.Point)" />*/
	hitTest: function (point) {
		var layoutManager = this._viewResolved().getLayoutManager();
		return layoutManager != null ? layoutManager.hitTest(point) : null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetHitTestResult Infragistics.Controls.Grids.Core.Spreadsheet::HitTest(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ActivatePane(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_activatePane: function (pane) {
		$.ig.Debug.prototype.assert(this.panes().contains(pane));
		return (this.___sheetManager).activatePane(pane);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ActivatePane(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::BeginInit()" />*/
	_beginInit: function () {
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializing)) {
			throw new $.ig.InvalidOperationException(0);
		}
		this._suspendSynchronization();
		this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializing, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::BeginInit()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Single, System.Single, System.Single, System.Single)" />*/
	_bringIntoView: function (pane, cell, columnPosition, horizontalPosInCell, rowPosition, verticalPosInCell) {
		this._verifySheetManager();
		if (this.___sheetManager != null) {
			this.___sheetManager._bringIntoView2(pane, cell, columnPosition, horizontalPosInCell, rowPosition, verticalPosInCell);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Single, System.Single, System.Single, System.Single)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, System.Boolean)" />*/
	_canExecuteCommand1: function (command, commandParameter, canQueryEditManager) {
		var state = this._getCurrentState(command, commandParameter);
		return this._canExecuteCommand(command, commandParameter, state, canQueryEditManager);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, Infragistics.Core.LongValue, System.Boolean)" />*/
	_canExecuteCommand: function (command, commandParameter, currentState, canQueryEditManager) {
		if (false == this.___commands.doesMinimumStateMatch(command, currentState)) {
			return false;
		}
		switch (command) {
			case $.ig.spreadsheet.SpreadsheetAction.mergeCells:
			case $.ig.spreadsheet.SpreadsheetAction.unmergeCells:
			case $.ig.spreadsheet.SpreadsheetAction.mergeCellsAcross:
			case $.ig.spreadsheet.SpreadsheetAction.mergeCellsAndCenter:
				if (this.___sheetManager != null && !this.___sheetManager._canPerformMerge()) {
					return false;
				}
				break;
			case $.ig.spreadsheet.SpreadsheetAction.openHyperlink:
				if (!this._canOpenHyperlink()) {
					return false;
				}
				break;
			case $.ig.spreadsheet.SpreadsheetAction.removeHyperlinks:
				if (this.___sheetManager != null && !this.___sheetManager._canRemoveHyperlinks(true, null)) {
					return false;
				}
				break;
			case $.ig.spreadsheet.SpreadsheetAction.deleteWorksheets:
				if ($.ig.SpreadsheetUtilities.prototype.areAllVisibleSheetsSelected(this.workbook())) {
					return false;
				}
				break;
			case $.ig.spreadsheet.SpreadsheetAction.paste:
				if (this._isClipboardEmpty()) {
					return false;
				}
				break;
			case $.ig.spreadsheet.SpreadsheetAction.insertCells:
			case $.ig.spreadsheet.SpreadsheetAction.deleteCells:
				if (this.___sheetManager != null && !this.___sheetManager._canInsertOrDeleteCells(command == $.ig.spreadsheet.SpreadsheetAction.insertCells)) {
					return false;
				}
				break;
		}
		if (this._tabInEdit() != null) {
			switch (command) {
				case $.ig.spreadsheet.SpreadsheetAction.undo:
				case $.ig.spreadsheet.SpreadsheetAction.redo:
					return false;
			}
		}
		if (canQueryEditManager && this.isInEditMode()) {
			if (false == this.___cellEditManager.canExecuteCommand(command)) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, Infragistics.Core.LongValue, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanResizeHeader(System.Boolean)" />*/
	_canResizeHeader: function (isRow) {
		if (this.___sheetManager == null) {
			return false;
		}
		if ($.ig.util.nullableNotEquals(this.___sheetManager._areSelectedTabsProtected(), false)) {
			var type = isRow ? $.ig.WorksheetProtectionType.prototype.formatRows : $.ig.WorksheetProtectionType.prototype.formatColumns;
			if ($.ig.util.nullableNotEquals(this.___sheetManager._getSelectedTabProtectionState(type), true)) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanResizeHeader(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_canSelect1: function (range) {
		return this.___sheetManager != null && this.___sheetManager._canSelect1(range);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_canSelect: function (cell) {
		return this.___sheetManager != null && this.___sheetManager._canSelect(cell);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CloseMenu()" />*/
	_closeMenu: function () {
		$.ig.Debug.prototype.assert1(this.___view != null, "Unable to close the menu since there is no associated view");
		this.___viewResolved.closeMenu();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CloseMenu()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::DirtyCanUndoRedoState()" />*/
	_dirtyCanUndoRedoState: function () {
		this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsCanUndoRedoVerification | $.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::DirtyCanUndoRedoState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EndInit()" />*/
	_endInit: function () {
		$.ig.Debug.prototype.assert1(this._isInitializing(), "BeginInit wasn't called or EndInit was already called?");
		this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializing, false);
		this._resumeSynchronization(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EndInit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::EndTabRenaming(System.Boolean, System.Boolean, System.Boolean)" />*/
	_endTabRenaming: function (cancel, force, skipChangeFocus) {
		return this.___tabEditManager.endEdit(cancel, force, skipChangeFocus);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::EndTabRenaming(System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EnsureEditorHostIsInitialized()" />*/
	_ensureEditorHostIsInitialized: function () {
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost)) {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost, false);
			this.___cellEditManager.initialize();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EnsureEditorHostIsInitialized()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_ensureIsInView: function (cell) {
		var pane = this.activePane();
		if (null != pane && !pane.visibleRange()._contains(cell)) {
			this._bringIntoView(pane, cell, 0.5, 0.5, 0.5, 0.5);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EnterEditModeForDoubleClick(System.Windows.Point, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_enterEditModeForDoubleClick: function (relativePt, pane) {
		if (this.___sheetManager != null && this.___sheetManager._panes().contains(pane) && (this.___sheetManager.activePane() == pane || (this.___sheetManager).canActivatePane(pane) == false)) {
			var y = relativePt.__y / pane.rowScrollRegion()._zoomLevel();
			var x = relativePt.__x / pane.columnScrollRegion()._zoomLevel();
			var rowPos = new $.ig.WorksheetItemPosition(), colPos = new $.ig.WorksheetItemPosition();
			var isRowPosInBounds = (function () { var $ret = pane.rowScrollRegion()._tryGetItemFromRelativeOffset(y, rowPos); rowPos = $ret.p1; return $ret.ret; }());
			var isColPosInBounds = (function () { var $ret = pane.columnScrollRegion()._tryGetItemFromRelativeOffset(x, colPos); colPos = $ret.p1; return $ret.ret; }());
			if (isRowPosInBounds && isColPosInBounds) {
				var activeCell = pane._activeSelection().activeCell();
				var disableArrowNav = this.___sheetManager._getCellValue(activeCell) == null;
				if (this.___cellEditManager.beginEdit(activeCell, disableArrowNav, null, false, false)) {
					this.___cellEditManager.positionCaret(relativePt, true);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::EnterEditModeForDoubleClick(System.Windows.Point, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, System.Object)" />*/
	_executeCommand1: function (command, commandParameter, sourceElement) {
		var currentState = this._getCurrentState(command, commandParameter);
		return this._executeCommand2(command, commandParameter, sourceElement, currentState);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, System.Object, Infragistics.Core.LongValue)" />*/
	_executeCommand2: function (command, commandParameter, sourceElement, currentState) {
		var $self = this;
		if (!this._canExecuteCommand(command, commandParameter, currentState, true)) {
			return false;
		}
		this._verifyState();
		var commandArgs = new $.ig.SpreadsheetCommandExecutingEventArgs(command, commandParameter, sourceElement);
		this._onActionExecuting(commandArgs);
		if (commandArgs.cancel()) {
			return true;
		}
		var handled = true;
		try {
			this._suspendSynchronization();
			if (this.___cellEditManager.executeCommand(command, false)) {
			} else {
				if (!this._tryExitEditModeBeforeCommand(command)) {
					return false;
				}
				switch (command) {
					case $.ig.spreadsheet.SpreadsheetAction.activateNextPane:
						this.___sheetManager._activateNextPane();
						this._ensureIsInView(this.activeCell());
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activatePreviousPane:
						this.___sheetManager._activatePreviousPane();
						this._ensureIsInView(this.activeCell());
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellBelow:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.down, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellAbove:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.up, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellLeft:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.left, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellRight:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellWithDataBelow:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.down, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellWithDataAbove:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.up, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellWithDataLeft:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.left, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellWithDataRight:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataBelow:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.down, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataAbove:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.up, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataLeft:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.left, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataRight:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellPageAbove:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.up, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellPageBelow:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.down, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellPageLeft:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.left, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellPageRight:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.right, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionLeft:
						this.___sheetManager._nextCellWithinSelection($.ig.Direction.prototype.left, $.ig.util.toNullable($.ig.Boolean.prototype.$type, null));
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionRight:
						this.___sheetManager._nextCellWithinSelection($.ig.Direction.prototype.right, $.ig.util.toNullable($.ig.Boolean.prototype.$type, null));
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionAbove:
						this.___sheetManager._nextCellWithinSelection($.ig.Direction.prototype.up, $.ig.util.toNullable($.ig.Boolean.prototype.$type, null));
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionBelow:
						this.___sheetManager._nextCellWithinSelection($.ig.Direction.prototype.down, $.ig.util.toNullable($.ig.Boolean.prototype.$type, null));
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollPageBelow:
						this.___sheetManager._scrollPage($.ig.Direction.prototype.down);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollPageAbove:
						this.___sheetManager._scrollPage($.ig.Direction.prototype.up);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollPageLeft:
						this.___sheetManager._scrollPage($.ig.Direction.prototype.left);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollPageRight:
						this.___sheetManager._scrollPage($.ig.Direction.prototype.right);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollDown:
						this.___sheetManager._scrollItem($.ig.Direction.prototype.down);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollUp:
						this.___sheetManager._scrollItem($.ig.Direction.prototype.up);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollLeft:
						this.___sheetManager._scrollItem($.ig.Direction.prototype.left);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollRight:
						this.___sheetManager._scrollItem($.ig.Direction.prototype.right);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstCellInRow:
						this.___sheetManager._moveToFirstCellInRow(false, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstScrollableCellInRow:
						this.___sheetManager._moveToFirstCellInRow(false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstCellInView:
						this.___sheetManager._moveToCellInView(true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.lastCellInView:
						this.___sheetManager._moveToCellInView(false, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstCellInWorksheet:
						this.___sheetManager._moveToFirstCellInWorksheet(false, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstScrollableCellInWorksheet:
						this.___sheetManager._moveToFirstCellInWorksheet(false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.enterEndMode:
						this.isInEndMode(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.exitEndMode:
						this.isInEndMode(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode:
						this.selectionMode($.ig.SpreadsheetCellSelectionMode.prototype.normal);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.switchToExtendSelectionMode:
						this.selectionMode($.ig.SpreadsheetCellSelectionMode.prototype.extendSelection);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.switchToAddToSelectionMode:
						this.selectionMode($.ig.SpreadsheetCellSelectionMode.prototype.addToSelection);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.lastUsedCellInRow:
						this.___sheetManager._moveToLastUsedCellInRow(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.lastUsedCell:
						this.___sheetManager._moveToLastUsedCell(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCurrentRegion:
						this.___sheetManager._selectCurrentRegion();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellBelow:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.down, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellAbove:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.up, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellLeft:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.left, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellRight:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataBelow:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.down, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataAbove:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.up, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataLeft:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.left, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataRight:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataBelow:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.down, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataAbove:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.up, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataLeft:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.left, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataRight:
						this.___sheetManager._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellPageAbove:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.up, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellPageBelow:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.down, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellPageLeft:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.left, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCellPageRight:
						this.___sheetManager._moveToAdjacentPage($.ig.Direction.prototype.right, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInView:
						this.___sheetManager._moveToCellInView(true, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectLastCellInView:
						this.___sheetManager._moveToCellInView(false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInRow:
						this.___sheetManager._moveToFirstCellInRow(true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInRow:
						this.___sheetManager._moveToFirstCellInRow(true, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInWorksheet:
						this.___sheetManager._moveToFirstCellInWorksheet(true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInWorksheet:
						this.___sheetManager._moveToFirstCellInWorksheet(true, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectLastUsedCell:
						this.___sheetManager._moveToLastUsedCell(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectLastUsedCellInRow:
						this.___sheetManager._moveToLastUsedCellInRow(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectColumns:
						this.___sheetManager._selectRowsOrColumns(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectRows:
						this.___sheetManager._selectRowsOrColumns(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectAllCells:
						this.___sheetManager._selectAllCells();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstCellInViewWithinSelection:
						this.___sheetManager._moveToFirstLastVisibleCellInSelection(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.lastCellInViewWithinSelection:
						this.___sheetManager._moveToFirstLastVisibleCellInSelection(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.enterEditMode:
						this.___cellEditManager.beginEdit(this.activeCell(), false, null, false, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleCellEditMode:
						this.cellEditMode(this.cellEditMode() == $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateBetweenCells ? $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateInCell : $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateBetweenCells);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.enterEditModeAndClearValue:
						this.___cellEditManager.beginEdit(this.activeCell(), true, String.empty(), false, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateActiveCell:
						this.___cellEditManager.endEdit($.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell, false, false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateSelectedCells:
						this.___cellEditManager.endEdit($.ig.SpreadsheetCellExitModeAction.prototype.updateSelectedCells, false, false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndCreateArrayFormula:
						this.___cellEditManager.endEdit($.ig.SpreadsheetCellExitModeAction.prototype.createArrayFormula, false, false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndDiscardChanges:
						this.___cellEditManager.endEdit($.ig.SpreadsheetCellExitModeAction.prototype.discardChanges, false, false, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.clearContents:
						this._clearCellContents();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.clearFormats:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.clearCellFormats, function () { $self.___sheetManager._clearFormats(true, true, true); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectCurrentArray:
						this.___sheetManager._selectCurrentArray();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectVisibleCellsOnly:
						this.___sheetManager._selectVisibleCellsOnly();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellInNextSelectionRange:
						this.___sheetManager._cellInNextSelectionRange(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cellInPreviousSelectionRange:
						this.___sheetManager._cellInNextSelectionRange(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectActiveCellOnly:
						this.___sheetManager._selectActiveCellOnly();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.undo:
						this.undoManager().undo(1);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.redo:
						this.undoManager().redo(1);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.enterKeyNavigation:
					case $.ig.spreadsheet.SpreadsheetAction.shiftEnterKeyNavigation:
						this._performEnterKeyNavigation(command == $.ig.spreadsheet.SpreadsheetAction.shiftEnterKeyNavigation);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.unhideRows:
					case $.ig.spreadsheet.SpreadsheetAction.hideRows:
						this._hideRowsOrColumns(command == $.ig.spreadsheet.SpreadsheetAction.hideRows, true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.unhideColumns:
					case $.ig.spreadsheet.SpreadsheetAction.hideColumns:
						this._hideRowsOrColumns(command == $.ig.spreadsheet.SpreadsheetAction.hideColumns, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.autoFitRowHeight:
					case $.ig.spreadsheet.SpreadsheetAction.autoFitColumnWidth:
						this._autoFitRowsOrColumns(command == $.ig.spreadsheet.SpreadsheetAction.autoFitRowHeight);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.mergeCells:
						this._mergeCells($.ig.SpreadsheetCellMergeOperation.prototype.merge);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.mergeCellsAcross:
						this._mergeCells($.ig.SpreadsheetCellMergeOperation.prototype.mergeAcross);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.mergeCellsAndCenter:
						this._mergeCells($.ig.SpreadsheetCellMergeOperation.prototype.mergeAndCenter);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.unmergeCells:
						this._mergeCells($.ig.SpreadsheetCellMergeOperation.prototype.unmerge);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.addNewWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.addNewSheet);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets:
						this._executeTabAction($.ig.SheetTabAction.prototype.insertNewSheets);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activateNextWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.activateNext);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activatePreviousWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.activatePrevious);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activateAndSelectNextWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.activateAndSelectNext);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activateAndSelectPreviousWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.activateAndSelectPrevious);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollNextWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.scrollNext);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollPreviousWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.scrollPrevious);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollToFirstWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.scrollFirst);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.scrollToLastWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.scrollLast);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activatePreviousOutOfViewWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.activatePreviousOutOfView);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.activateNextOutOfViewWorksheet:
						this._executeTabAction($.ig.SheetTabAction.prototype.activateNextOutOfView);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.selectAllWorksheets:
						this._executeTabAction($.ig.SheetTabAction.prototype.selectAllSheets);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.unselectWorksheets:
						this._executeTabAction($.ig.SheetTabAction.prototype.unselectSheets);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteWorksheets:
						this._executeTabAction($.ig.SheetTabAction.prototype.deleteWorksheets);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.renameWorksheet:
						this._renameWorksheet();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.zoomIn:
						this._zoom($.ig.SpreadsheetZoomOperation.prototype.zoomIn);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.zoomOut:
						this._zoom($.ig.SpreadsheetZoomOperation.prototype.zoomOut);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.zoomToSelection:
						this._zoom($.ig.SpreadsheetZoomOperation.prototype.zoomToSelection);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.zoomTo100:
						this._zoom($.ig.SpreadsheetZoomOperation.prototype.zoomTo100);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleBold:
						this._setCellFormatting$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $.ig.SpreadsheetUtilities.prototype.toggle1(this._getResolvedActiveCellFormat()._fontBoldResolved()), $.ig.SpreadsheetUtilities.prototype.setBold, $.ig.SpreadsheetTransactionOperation.prototype.bold, $.ig.CellFormatValue.prototype.fontBold);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleItalic:
						this._setCellFormatting$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $.ig.SpreadsheetUtilities.prototype.toggle1(this._getResolvedActiveCellFormat()._fontItalicResolved()), $.ig.SpreadsheetUtilities.prototype.setItalic, $.ig.SpreadsheetTransactionOperation.prototype.italic, $.ig.CellFormatValue.prototype.fontItalic);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleStrikeThrough:
						this._setCellFormatting$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $.ig.SpreadsheetUtilities.prototype.toggle1(this._getResolvedActiveCellFormat()._fontStrikeoutResolved()), $.ig.SpreadsheetUtilities.prototype.setStrikeThrough, $.ig.SpreadsheetTransactionOperation.prototype.strikethrough, $.ig.CellFormatValue.prototype.fontStrikeout);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleUnderline:
						this._setCellFormatting$1($.ig.excel.FontUnderlineStyle.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toggleSingle(this._getResolvedActiveCellFormat()._fontUnderlineStyleResolved(), this._shouldUseAccountUnderlineForActiveCell()), $.ig.SpreadsheetUtilities.prototype.setUnderline, $.ig.SpreadsheetTransactionOperation.prototype.underline, $.ig.CellFormatValue.prototype.fontUnderlineStyle);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleDoubleUnderline:
						this._setCellFormatting$1($.ig.excel.FontUnderlineStyle.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toggleDouble(this._getResolvedActiveCellFormat()._fontUnderlineStyleResolved(), this._shouldUseAccountUnderlineForActiveCell()), $.ig.SpreadsheetUtilities.prototype.setUnderline, $.ig.SpreadsheetTransactionOperation.prototype.underline, $.ig.CellFormatValue.prototype.fontUnderlineStyle);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleWrapText:
						this._setCellFormatting$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $.ig.util.toNullable($.ig.Boolean.prototype.$type, this._getResolvedActiveCellFormat()._computedWrapText() ? false : true), $.ig.SpreadsheetUtilities.prototype.setWrapText, $.ig.SpreadsheetTransactionOperation.prototype.wrapText, $.ig.CellFormatValue.prototype.wrapText);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleSuperscript:
						this._setCellFormatting$1($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, this._getResolvedActiveCellFormat()._fontSuperscriptSubscriptStyleResolved() == $.ig.excel.FontSuperscriptSubscriptStyle.superscript ? $.ig.excel.FontSuperscriptSubscriptStyle.none : $.ig.excel.FontSuperscriptSubscriptStyle.superscript, $.ig.SpreadsheetUtilities.prototype.setSuperscriptSubscriptStyle, $.ig.SpreadsheetTransactionOperation.prototype.font, $.ig.CellFormatValue.prototype.fontSuperscriptSubscriptStyle);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleSubscript:
						this._setCellFormatting$1($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, this._getResolvedActiveCellFormat()._fontSuperscriptSubscriptStyleResolved() == $.ig.excel.FontSuperscriptSubscriptStyle.subscript ? $.ig.excel.FontSuperscriptSubscriptStyle.none : $.ig.excel.FontSuperscriptSubscriptStyle.subscript, $.ig.SpreadsheetUtilities.prototype.setSuperscriptSubscriptStyle, $.ig.SpreadsheetTransactionOperation.prototype.font, $.ig.CellFormatValue.prototype.fontSuperscriptSubscriptStyle);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.increaseIndentation:
						this._indent(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.decreaseIndentation:
						this._indent(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.increaseFontSize:
						this._setCellFormatting$1($.ig.Number.prototype.$type, $.ig.SpreadsheetUtilities.prototype.changeFontSize(this._getResolvedActiveCellFormat()._fontHeightResolved(), true), $.ig.SpreadsheetUtilities.prototype.setFontSize, $.ig.SpreadsheetTransactionOperation.prototype.fontSize, $.ig.CellFormatValue.prototype.fontHeight);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.decreaseFontSize:
						this._setCellFormatting$1($.ig.Number.prototype.$type, $.ig.SpreadsheetUtilities.prototype.changeFontSize(this._getResolvedActiveCellFormat()._fontHeightResolved(), false), $.ig.SpreadsheetUtilities.prototype.setFontSize, $.ig.SpreadsheetTransactionOperation.prototype.fontSize, $.ig.CellFormatValue.prototype.fontHeight);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignHorizontalCenter:
						this._setCellFormatting$1($.ig.excel.HorizontalCellAlignment.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toggle(this._getResolvedActiveCellFormat()._alignmentResolved(), $.ig.excel.HorizontalCellAlignment.center), $.ig.SpreadsheetUtilities.prototype.setAlignment, $.ig.SpreadsheetTransactionOperation.prototype.centerAlignment, $.ig.CellFormatValue.prototype.alignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignHorizontalLeft:
						this._setCellFormatting$1($.ig.excel.HorizontalCellAlignment.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toggle(this._getResolvedActiveCellFormat()._alignmentResolved(), $.ig.excel.HorizontalCellAlignment.left), $.ig.SpreadsheetUtilities.prototype.setAlignment, $.ig.SpreadsheetTransactionOperation.prototype.leftAlignment, $.ig.CellFormatValue.prototype.alignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignHorizontalRight:
						this._setCellFormatting$1($.ig.excel.HorizontalCellAlignment.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toggle(this._getResolvedActiveCellFormat()._alignmentResolved(), $.ig.excel.HorizontalCellAlignment.right), $.ig.SpreadsheetUtilities.prototype.setAlignment, $.ig.SpreadsheetTransactionOperation.prototype.rightAlignment, $.ig.CellFormatValue.prototype.alignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignHorizontalJustify:
						this._setCellFormatting$1($.ig.excel.HorizontalCellAlignment.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toggle(this._getResolvedActiveCellFormat()._alignmentResolved(), $.ig.excel.HorizontalCellAlignment.justify), $.ig.SpreadsheetUtilities.prototype.setAlignment, $.ig.SpreadsheetTransactionOperation.prototype.justifyAlignment, $.ig.CellFormatValue.prototype.alignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignVerticalTop:
						this._setCellFormatting$1($.ig.excel.VerticalCellAlignment.prototype.$type, $.ig.excel.VerticalCellAlignment.top, $.ig.SpreadsheetUtilities.prototype.setVerticalAlignment, $.ig.SpreadsheetTransactionOperation.prototype.topAlignment, $.ig.CellFormatValue.prototype.verticalAlignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignVerticalBottom:
						this._setCellFormatting$1($.ig.excel.VerticalCellAlignment.prototype.$type, $.ig.excel.VerticalCellAlignment.bottom, $.ig.SpreadsheetUtilities.prototype.setVerticalAlignment, $.ig.SpreadsheetTransactionOperation.prototype.bottomAlignment, $.ig.CellFormatValue.prototype.verticalAlignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.alignVerticalMiddle:
						this._setCellFormatting$1($.ig.excel.VerticalCellAlignment.prototype.$type, $.ig.excel.VerticalCellAlignment.center, $.ig.SpreadsheetUtilities.prototype.setVerticalAlignment, $.ig.SpreadsheetTransactionOperation.prototype.middleAlignment, $.ig.CellFormatValue.prototype.verticalAlignment);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleSplitPanes:
						this.___sheetManager._toggleSplit(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleFreezePanes:
						this.___sheetManager._toggleSplit(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.freezeFirstColumn:
						this.___sheetManager._freeze(0, 1);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.freezeFirstRow:
						this.___sheetManager._freeze(1, 0);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.removeScrollRegionSplits:
					case $.ig.spreadsheet.SpreadsheetAction.removeRowScrollRegionSplit:
					case $.ig.spreadsheet.SpreadsheetAction.removeColumnScrollRegionSplit:
						this.___sheetManager._removeSplit(command != $.ig.spreadsheet.SpreadsheetAction.removeColumnScrollRegionSplit, command != $.ig.spreadsheet.SpreadsheetAction.removeRowScrollRegionSplit);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.snapRowScrollRegionSplit:
					case $.ig.spreadsheet.SpreadsheetAction.snapColumnScrollRegionSplit:
					case $.ig.spreadsheet.SpreadsheetAction.snapScrollRegionSplits:
						this.___sheetManager._snapSplit(command != $.ig.spreadsheet.SpreadsheetAction.snapColumnScrollRegionSplit, command != $.ig.spreadsheet.SpreadsheetAction.snapRowScrollRegionSplit);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.insertRows:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.insertRows, this.___sheetManager._insertRows.runOn(this.___sheetManager), null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteRows:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.del, this.___sheetManager._deleteRows.runOn(this.___sheetManager), null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.insertColumns:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.insertColumns, this.___sheetManager._insertColumns.runOn(this.___sheetManager), null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteColumns:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.del, this.___sheetManager._deleteColumns.runOn(this.___sheetManager), null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.insertCells:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.insertCells, function () { $self.___sheetManager._insertCells($.ig.util.toNullable($.ig.Boolean.prototype.$type, null)); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteCells:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.del, function () { $self.___sheetManager._deleteCells($.ig.util.toNullable($.ig.Boolean.prototype.$type, null)); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.insertCellsShiftDown:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.insertCells, function () { $self.___sheetManager._insertCells($.ig.util.toNullable($.ig.Boolean.prototype.$type, false)); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftLeft:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.del, function () { $self.___sheetManager._deleteCells($.ig.util.toNullable($.ig.Boolean.prototype.$type, true)); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.insertCellsShiftRight:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.insertCells, function () { $self.___sheetManager._insertCells($.ig.util.toNullable($.ig.Boolean.prototype.$type, true)); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftUp:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.del, function () { $self.___sheetManager._deleteCells($.ig.util.toNullable($.ig.Boolean.prototype.$type, false)); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.paste:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.paste, this._paste.runOn(this), null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.copy:
						this._copyToClipboard(false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cut:
						this._copyToClipboard(true);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.toggleShowFormulasInCells:
						this.___sheetManager._toggleShowFormulaInCells();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.openHyperlink:
						this._openHyperlink();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.removeHyperlinks:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.removeHyperlinks, function () { $self.___sheetManager._removeHyperlinks1(true, true); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.clearHyperlinks:
						this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.clearHyperlinks, function () { $self.___sheetManager._removeHyperlinks1(false, true); }, null, false, null, true, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.firstUnlockedCell:
					case $.ig.spreadsheet.SpreadsheetAction.lastUnlockedCell:
						this.___sheetManager._moveToFirstLastUnlockedCell(command == $.ig.spreadsheet.SpreadsheetAction.firstUnlockedCell);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.resetNameBoxWidth:
						this.nameBoxWidth($.ig.Spreadsheet.prototype._nameBoxWidthDefault);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.clearValidationCircles:
						this.___sheetManager._clearValidationCircles();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.circleInvalidData:
						this.___sheetManager._circleInvalidData();
						break;
					case $.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet:
						this._endTabRenaming(false, false, false);
						break;
					case $.ig.spreadsheet.SpreadsheetAction.cancelRenameWorksheet:
						this._endTabRenaming(true, false, false);
						break;
					default:
						$.ig.Debug.prototype.fail("Unrecognized command:" + $.ig.spreadsheet.SpreadsheetAction.prototype.getBox(command));
						handled = false;
						break;
				}
			}
		}
		finally {
			this._resumeSynchronization(true);
		}
		this._onActionExecuted(new $.ig.SpreadsheetCommandExecutedEventArgs(command, commandParameter, sourceElement));
		return handled;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object, System.Object, Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ForceExitEditMode(System.Boolean)" />*/
	_forceExitEditMode: function (acceptChanges) {
		if (this.isInEditMode() && !this.___cellEditManager.endEdit(acceptChanges ? $.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell : $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges, true, false, true)) {
			return false;
		}
		if (this._tabInEdit() != null && !this._endTabRenaming(acceptChanges, true, false)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ForceExitEditMode(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.Spreadsheet::GetActiveCellKeyboardContextMenuPosition(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_getActiveCellKeyboardContextMenuPosition: function (activePane) {
		if (activePane == null) {
			return new $.ig.Point(0);
		}
		var selection = activePane._activeSelection();
		var area = $.ig.SpreadsheetUtilities.prototype.getCellContextMenuArea(selection);
		var zoom = activePane.rowScrollRegion()._zoomLevel();
		var activeCell = selection.activeCell();
		var colIndex = Math.min(Math.max(activeCell.column(), activePane.columnScrollRegion().startIndex()), activePane.columnScrollRegion().endIndex());
		var rowIndex = Math.min(Math.max(activeCell.row(), activePane.rowScrollRegion().startIndex()), activePane.rowScrollRegion().endIndex());
		var rowNear = false;
		var colNear = false;
		switch (area) {
			case $.ig.SpreadsheetSelectionContextMenuArea.prototype.cell: break;
			case $.ig.SpreadsheetSelectionContextMenuArea.prototype.column:
				rowIndex = activePane.rowScrollRegion().startIndex();
				rowNear = true;
				break;
			case $.ig.SpreadsheetSelectionContextMenuArea.prototype.row:
				colIndex = activePane.columnScrollRegion().startIndex();
				colNear = true;
				break;
		}
		var posX = activePane.columnScrollRegion()._getRelativeOffset1(colIndex, colNear, true) * zoom;
		var posY = activePane.rowScrollRegion()._getRelativeOffset1(rowIndex, rowNear, true) * zoom;
		return $.ig.SpreadsheetUtilities.prototype.createPoint(posX, posY);
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.Spreadsheet::GetActiveCellKeyboardContextMenuPosition(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.Spreadsheet::GetAvailableRange()" />*/
	_getAvailableRange: function () {
		if (this.___sheetManager == null) {
			return $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		}
		return this.___sheetManager._getAvailableRange();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.Spreadsheet::GetAvailableRange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Initialize()" />*/
	_initialize: function () {
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitialized)) {
			return;
		}
		this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitialized, true);
		this._verifyState();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Initialize()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnActiveCellChanging(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_onActiveCellChanging: function (newActiveCell) {
		if (!this._tryExitEditMode(true)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnActiveCellChanging(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnDoubleClickSplitter(System.Boolean, System.Boolean)" />*/
	_onDoubleClickSplitter: function (rowSplitter, colSplitter) {
		var cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, null);
		if ((rowSplitter && this.___sheetManager._needsSnapSplit(true)) || (colSplitter && this.___sheetManager._needsSnapSplit(false))) {
			if (rowSplitter && colSplitter) {
				cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, $.ig.spreadsheet.SpreadsheetAction.snapScrollRegionSplits);
			} else if (rowSplitter) {
				cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, $.ig.spreadsheet.SpreadsheetAction.snapRowScrollRegionSplit);
			} else if (colSplitter) {
				cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, $.ig.spreadsheet.SpreadsheetAction.snapColumnScrollRegionSplit);
			}
		} else {
			if (rowSplitter && colSplitter) {
				cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, $.ig.spreadsheet.SpreadsheetAction.removeScrollRegionSplits);
			} else if (rowSplitter) {
				cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, $.ig.spreadsheet.SpreadsheetAction.removeRowScrollRegionSplit);
			} else if (colSplitter) {
				cmd = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, $.ig.spreadsheet.SpreadsheetAction.removeColumnScrollRegionSplit);
			}
		}
		if ($.ig.util.nullableNotEquals(cmd, null)) {
			this._executeCommand1(cmd.value(), null, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnDoubleClickSplitter(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnMouseDownSelectAllButton(Infragistics.Controls.Core.InputProxy, System.Object)" />*/
	_onMouseDownSelectAllButton: function (input, context) {
		if (this._tryExitEditMode(true)) {
			this.___viewResolved.focus();
			var pane = this.activePane();
			if (pane != null) {
				var modifiers = input.getModifierKeys();
				var selection = pane.rowScrollRegion()._activeSelection();
				var mode = selection._cellSelectionMode();
				var shift = ((modifiers & $.ig.ModifierKeys.prototype.shift) != 0) || mode == $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection;
				var ctrl = ((modifiers & $.ig.ModifierKeys.prototype.control) != 0) || mode == $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection;
				var skipChange = false;
				if (ctrl == shift || !shift) {
					var paneToActivate = this.panes().item(0);
					var paneOwner = paneToActivate.rowScrollRegion()._sheetPaneOwner();
					if (paneOwner.canActivatePane(paneToActivate)) {
						if (paneOwner.activatePane(paneToActivate)) {
							if (paneToActivate == this.activePane()) {
								pane = paneToActivate;
								selection = paneToActivate.selection();
							}
						} else {
							skipChange = true;
						}
					}
				}
				if (!skipChange) {
					var range = this._getAvailableRange();
					var newActiveCell = shift && !ctrl ? selection.activeCell() : pane.visibleRange()._upperLeft();
					if (this._canSelect1(range)) {
						if (ctrl & !shift) {
							selection._addActiveCellRange1(range, newActiveCell, true);
						} else {
							selection._resetSelection2(range, newActiveCell, true);
						}
					}
					if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseRightButton) {
						this._viewResolved().showSelectAllContextMenu(context, input.getRelativePoint());
					}
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnMouseDownSelectAllButton(Infragistics.Controls.Core.InputProxy, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnNameBoxValueChanged(System.String, System.Boolean, System.Boolean)" />*/
	_onNameBoxValueChanged: function (newValue, isShiftPressed, isCtrlPressed) {
		var $self = this;
		var isCurrentValue = $.ig.util.stringCompare1(newValue, this._nameBoxValue(), $.ig.StringComparison.prototype.currentCultureIgnoreCase) == 0;
		if (isCurrentValue && this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState) && $.ig.util.stringCompare1(newValue, this._nameBoxValue(), $.ig.StringComparison.prototype.currentCulture) == 0) {
			return true;
		}
		var activeCell = this.activeCell();
		var wb = this.workbook();
		var activeSheet = this.activeWorksheet();
		if (activeSheet == null) {
			return false;
		}
		var selection = this.activeSelection();
		var activePane = this.activePane();
		if (selection == null || activePane == null) {
			return false;
		}
		if (!isShiftPressed && this.selectionMode() == $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection) {
			isShiftPressed = true;
		} else if (!isCtrlPressed && this.selectionMode() == $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection) {
			isCtrlPressed = true;
		}
		if (isShiftPressed && isCtrlPressed) {
			isShiftPressed = isCtrlPressed = false;
		}
		var newSelection = null;
		var newReference = null;
		if (String.isNullOrWhiteSpace(newValue)) {
			if (this.___previousNameboxSnapshot != null) {
				newSelection = this.___previousNameboxSnapshot;
			}
		} else {
			var originalValue = newValue;
			var isNamedReference;
			newValue = newValue.trim([]);
			if (newValue.startsWith("=")) {
				if (newValue.length == 1) {
					return this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidNameBoxValue, null, null, originalValue, false));
				}
				newValue = newValue.substr(1);
			}
			var selectionMode = isShiftPressed ? $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection : isCtrlPressed ? $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection : $.ig.SpreadsheetCellSelectionMode.prototype.normal;
			var oldSnapshot = $.ig.SelectionSnapshot.prototype._create2(activeSheet, selection);
			var table = wb.getTable(newValue);
			if (table != null) {
				var dataRange = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(table.dataAreaRegion()._address());
				newSelection = oldSnapshot._withRange(table.worksheet(), dataRange, selectionMode);
			} else if ($.ig.util.stringCompare1(newValue, "c", $.ig.StringComparison.prototype.currentCultureIgnoreCase) == 0) {
				var available = this._getAvailableRange();
				newSelection = oldSnapshot._withRangeAndCell(activeSheet, new $.ig.spreadsheet.SpreadsheetCellRange(available.firstRow(), activeCell.column(), available.lastRow(), activeCell.column()), new $.ig.spreadsheet.SpreadsheetCell(this.activePane().rowScrollRegion().startIndex(), activeCell.column()), selectionMode);
			} else if ($.ig.util.stringCompare1(newValue, "r", $.ig.StringComparison.prototype.currentCultureIgnoreCase) == 0) {
				var available1 = this._getAvailableRange();
				newSelection = oldSnapshot._withRangeAndCell(activeSheet, new $.ig.spreadsheet.SpreadsheetCellRange(activeCell.row(), available1.firstColumn(), activeCell.row(), available1.lastColumn()), new $.ig.spreadsheet.SpreadsheetCell(activeCell.row(), this.activePane().columnScrollRegion().startIndex()), selectionMode);
			} else {
				var activeRow = activeSheet.rows().item(activeCell.row());
				var activeColIndex = activeCell.column();
				var reference = (function () { var $ret = wb._parseReference2(newValue, wb.cellReferenceMode(), activeSheet, activeRow, activeColIndex, isNamedReference, true); isNamedReference = $ret.p5; return $ret.ret; }());
				if (reference == null) {
					var otherMode = wb.cellReferenceMode() == $.ig.excel.CellReferenceMode.a1 ? $.ig.excel.CellReferenceMode.r1C1 : $.ig.excel.CellReferenceMode.a1;
					reference = (function () { var $ret = wb._parseReference2(newValue, otherMode, activeSheet, activeRow, activeColIndex, isNamedReference, false); isNamedReference = $ret.p5; return $ret.ret; }());
					if (reference != null && otherMode == $.ig.excel.CellReferenceMode.a1) {
						return this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidNameBoxValue, null, null, originalValue, false));
					}
				}
				if (reference != null) {
					if (isNamedReference) {
						reference = this._getReferenceFromNamedReference(reference, activeRow, activeColIndex);
						if (reference == null) {
							return false;
						}
					}
					if (!(function () { var $ret = $self._tryCreateSelectionSnapshot(reference, newSelection, selectionMode); newSelection = $ret.p1; return $ret.ret; }())) {
						return this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidNameBoxValue, null, null, originalValue, false));
					}
				} else {
					if (activeSheet.isProtected()) {
						return false;
					}
					try {
						wb._verifyItemName(newValue, null);
					}
					catch (ex) {
						return this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidNameBoxValue, null, ex, originalValue, false));
					}
					var isBuiltIn = $.ig.excel.NamedReferenceBase.prototype._isBuiltInName(newValue);
					var scope = isBuiltIn ? activeSheet : null;
					var sheetName = $.ig.ExcelUtils.prototype.createReferenceString1(null, activeSheet.name());
					var unionOperator = $.ig.FormulaParser.prototype.getUnionOperatorResolved(wb._cultureResolved());
					var sb = new $.ig.StringBuilder(0);
					sb.append5("=");
					for (var i = 0, count = selection.cellRanges().count(); i < count; i++) {
						if (i > 0) {
							sb.append1(unionOperator);
						}
						sb.append5(sheetName);
						sb.append5(selection.cellRanges().item(i)._toString2(wb.cellReferenceMode(), false));
					}
					try {
						var formula = sb.toString();
						if (isBuiltIn) {
							newReference = wb.namedReferences()._add2(newValue, formula, wb.cellReferenceMode(), activeSheet);
						} else {
							newReference = wb.namedReferences()._add1(newValue, formula, wb.cellReferenceMode());
						}
					}
					catch (ex1) {
						return this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidNameBoxValue, null, ex1, originalValue, false));
					}
				}
			}
		}
		var result = false;
		if (newReference != null) {
			result = true;
		} else if (newSelection != null) {
			this.___previousNameboxSnapshot = $.ig.SelectionSnapshot.prototype._create2(activeSheet, selection);
			result = newSelection != null && false == newSelection._isSameSelection(activeSheet, selection);
			var oldNameValue = this._nameBoxValue();
			this._setSelectionImpl(newSelection, true);
			if (result && oldNameValue != this._nameBoxValue()) {
				result = false;
			}
		}
		if (this.___viewResolved.hasKeyboardFocusWithin()) {
			this.___viewResolved.focus();
		}
		if (result && newReference != null && this.selectionMode() != $.ig.SpreadsheetCellSelectionMode.prototype.normal) {
			this._executeCommand1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, null, null);
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnNameBoxValueChanged(System.String, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnUserPrompt(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo)" />*/
	_onUserPrompt: function (promptInfo) {
		this._raiseUserPromptDisplaying(promptInfo);
		if (promptInfo.displayMessageResolved()) {
			var caption = promptInfo.caption();
			var buttons = promptInfo.allowCancel() ? $.ig.MessageBoxButton.prototype.oKCancel : $.ig.MessageBoxButton.prototype.oK;
			var result = this._view().showMessageBox(promptInfo.message(), caption, buttons, $.ig.MessageBoxImage.prototype.none, $.ig.MessageBoxResult.prototype.oK);
			if (this.isInEditMode() && this.cellEditMode() == $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateBetweenCells) {
				this._executeCommand1($.ig.spreadsheet.SpreadsheetAction.toggleCellEditMode, null, null);
			}
			if (result == $.ig.MessageBoxResult.prototype.cancel) {
				return true;
			}
			return false;
		} else {
			if (promptInfo.allowCancel()) {
				return promptInfo.cancel();
			}
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnUserPrompt(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnViewInitialized()" />*/
	_onViewInitialized: function () {
		this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost | $.ig.Spreadsheet_InternalFlags.prototype.activeCellValue);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnViewInitialized()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::PerformEnterKeyNavigation(System.Boolean)" />*/
	_performEnterKeyNavigation: function (reverse) {
		var direction = $.ig.SpreadsheetUtilities.prototype.toDirection(this.enterKeyNavigationDirection());
		if (reverse) {
			direction = $.ig.SpreadsheetUtilities.prototype.flipDirection(direction);
		}
		this.___sheetManager._performEnterKeyNavigation(direction);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::PerformEnterKeyNavigation(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ProcessKeyDown(System.Windows.Input.Key, System.Windows.Input.ModifierKeys)" />*/
	_processKeyDown: function (key, modifierKeys) {
		var handled = false;
		var currentState = this._getCurrentState1($.ig.LongValue.prototype.all(), null);
		var matchingCommands = this.___commands.getMatchingCommands(key, modifierKeys, currentState);
		if (null != matchingCommands) {
			var en = matchingCommands.getEnumerator();
			while (en.moveNext()) {
				var ii = en.current();
				this._executeCommand2(ii, null, this, currentState);
				handled = true;
			}
		}
		return handled;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ProcessKeyDown(System.Windows.Input.Key, System.Windows.Input.ModifierKeys)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ProcessMouseWheel(System.Double, System.Boolean)" />*/
	_processMouseWheel: function (delta, isZoom) {
		if (this.___sheetManager == null || this._tabInEdit() != null) {
			return false;
		}
		this.___sheetManager._onMouseWheel(delta, isZoom);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ProcessMouseWheel(System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ProcessPendingChangeNotification()" />*/
	_processPendingChangeNotification: function () {
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.hasPendingChangeNotification)) {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.hasPendingChangeNotification, false);
			this._verifyState();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ProcessPendingChangeNotification()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ProcessTextInput(System.String)" />*/
	_processTextInput: function (text) {
		if (this.isInEditMode()) {
			return false;
		}
		var hasSpaceOrText = false;
		if (!String.isNullOrEmpty(text)) {
			for (var i = 0; i < text.length; i++) {
				var ch = text.charAt(i);
				if (/\s/i.test(ch) || $.ig.util.isLetterOrDigit(ch)) {
					hasSpaceOrText = true;
					break;
				}
			}
		}
		if (!hasSpaceOrText) {
			return false;
		}
		var initialText = null;
		if (!String.isNullOrEmpty(text) && text != $.ig.Environment.prototype.newLine() && (text.length > 1 || text.indexOfAny([ '\r', '\n' ]) < 0)) {
			initialText = text;
		}
		this.___cellEditManager.beginEdit(this.activeCell(), true, initialText, false, false);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ProcessTextInput(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ResumeSynchronization(System.Boolean)" />*/
	_resumeSynchronization: function (verify) {
		this.___suspendSynchronizationCount--;
		if (this.___suspendSynchronizationCount == 0 && verify && !this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState)) {
			this._verifyStateImpl();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ResumeSynchronization(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SuspendSynchronization()" />*/
	_suspendSynchronization: function () {
		this.___suspendSynchronizationCount++;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SuspendSynchronization()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::TryExitEditMode(System.Boolean)" />*/
	_tryExitEditMode: function (acceptChanges) {
		if (this.isInEditMode() && !this.___cellEditManager.endEdit(acceptChanges ? $.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell : $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges, false, true, true)) {
			return false;
		}
		if (this._tabInEdit() != null) {
			if (!this._endTabRenaming(false, false, false) || this._tabInEdit() != null) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::TryExitEditMode(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::UseNewWorkbook()" />*/
	_useNewWorkbook: function () {
		var wb = new $.ig.excel.Workbook($.ig.excel.WorkbookFormat.excel2007);
		var ws = wb.worksheets()._add($.ig.spreadsheet.locale.getString("NewSheetName", [ 1 ]));
		wb.windowOptions().selectedWorksheet(ws);
		this.workbook(wb);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::UseNewWorkbook()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifyState()" />*/
	_verifyState: function () {
		if (this._isSynchronizationSuspended() || this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState)) {
			return;
		}
		try {
			this._suspendSynchronization();
			this._verifyStateImpl();
		}
		finally {
			this._resumeSynchronization(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifyState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::AddDeferredEvent(System.String, System.Object)" />*/
	_addDeferredEvent: function (eventName, info) {
		if (this.___deferredEvents == null) {
			this.___deferredEvents = new $.ig.Dictionary$2(String, $.ig.Object.prototype.$type, 0);
		}
		if (!this.___deferredEvents.containsKey(eventName)) {
			this.___deferredEvents.item(eventName, info);
			this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.hasDeferredEvents);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::AddDeferredEvent(System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::AfterPaneManagerLayout()" />*/
	_afterPaneManagerLayout: function () {
		if (this.___sheetManager != null && !this.___sheetManager._isLayoutDirty()) {
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.hasDeferredEvents)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.hasDeferredEvents, false);
				this._raiseDeferredEvents();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::AfterPaneManagerLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::AutoFitRowsOrColumns(System.Boolean)" />*/
	_autoFitRowsOrColumns: function (rows) {
		var $self = this;
		var operation = rows ? $.ig.SpreadsheetTransactionOperation.prototype.resizeRow : $.ig.SpreadsheetTransactionOperation.prototype.resizeColumn;
		this._executeActionWithUndo(operation, function () { $self.___sheetManager._autoSizeRowsOrColumns(rows); }, null, false, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::AutoFitRowsOrColumns(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CancelPendingActiveCellValueChange()" />*/
	_cancelPendingActiveCellValueChange: function () {
		if (this.___asyncPendingActiveCellValueChange != null) {
			var old = this.___asyncPendingActiveCellValueChange;
			this.___asyncPendingActiveCellValueChange = null;
			old.item1().cancel();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CancelPendingActiveCellValueChange()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanOpenHyperlink()" />*/
	_canOpenHyperlink: function () {
		if (this.___sheetManager != null) {
			var pane = this.___sheetManager.activePane();
			if (pane != null) {
				var selection = pane._activeSelection();
				if (selection.cellRanges().count() == 1) {
					var range = selection.cellRanges().item(0);
					var cell = selection.activeCell();
					var mayOpenHyperlink;
					if (range.isSingleCell()) {
						mayOpenHyperlink = true;
					} else {
						var cellRange = selection._getCellRange(cell);
						mayOpenHyperlink = $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(cellRange, range);
					}
					if (mayOpenHyperlink) {
						var row = this.___sheetManager._worksheet().rows()._getIfCreated(cell.row());
						return this.___sheetManager._worksheet()._getCellHyperlink(row, cell.row(), cell.column()) != null;
					}
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::CanOpenHyperlink()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearCellContents()" />*/
	_clearCellContents: function () {
		var $self = this;
		if (this.___sheetManager._verifyClearContentsOfSelectionIsAllowed() == false) {
			return;
		}
		this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.clearCellContents, function () {
			$self.___sheetManager._clearCellContents($.ig.spreadsheet.SpreadsheetUserPromptTrigger.clearCellContentError, false, null, null);
		}, null, true, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearCellContents()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearUndoHistory(Infragistics.Undo.UndoManager)" />*/
	_clearUndoHistory1: function (manager) {
		this._clearUndoHistory2(manager, this.workbook());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearUndoHistory(Infragistics.Undo.UndoManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearUndoHistory(Infragistics.Undo.UndoManager, Infragistics.Documents.Excel.Workbook)" />*/
	_clearUndoHistory2: function (manager, workbook) {
		if (workbook != null) {
			manager.removeAll(function (u) { return u.target() == workbook; }, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearUndoHistory(Infragistics.Undo.UndoManager, Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearUndoHistory(Infragistics.Documents.Excel.Worksheet)" />*/
	_clearUndoHistory: function (worksheet) {
		var manager = this.undoManager();
		if (worksheet != null) {
			manager.removeAll(function (u) {
				var wu = $.ig.util.cast($.ig.IWorksheetUndoUnit.prototype.$type, u);
				return wu != null ? wu.worksheet() == worksheet : false;
			}, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ClearUndoHistory(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CopyToClipboard(System.Boolean)" />*/
	_copyToClipboard: function (cut) {
		var $self = this;
		if (cut && this.___sheetManager._doesSelectionIntersectMergedCells(false, true, null)) {
			return;
		}
		if (!cut) {
			var pane = this.___sheetManager.activePane();
			var selection = pane != null ? pane.selection() : null;
			if (null != selection && selection.cellRanges().count() > 1 && this.___sheetManager._doesSelectionIntersectMergedCells(false, true, null)) {
				return;
			}
		}
		if (cut && !this.___sheetManager._verifyCutIsAllowed()) {
			return;
		}
		var manager = new $.ig.WorkbookDataObjectManager(this.workbook());
		manager.copying = $.ig.Delegate.prototype.combine(manager.copying, function (o, e) {
			if (!$self.___viewResolved.shouldCopyToClipboard(e._dataObject(), e._isDragDrop())) {
				e._cancel(true);
			} else if (cut) {
				var result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
				$self._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.cut, function () {
					result = $self.___sheetManager._clearCellContents($.ig.spreadsheet.SpreadsheetUserPromptTrigger.clearCellContentError, false, null, null);
					if (result == $.ig.SpreadsheetOperationResult.prototype.success) {
						$self.___sheetManager._resetRowHeights(true);
						$self.___sheetManager._resetColumnWidths(true);
						$self.___sheetManager._clearFormats(false, false, true);
					}
				}, null, true, null, true, false);
				if (result != $.ig.SpreadsheetOperationResult.prototype.success) {
					e._cancel(true);
				}
			}
		});
		manager.settingData = $.ig.Delegate.prototype.combine(manager.settingData, function (o, e) {
			if (!$self.___viewResolved.shouldIncludeClipboardFormat(e._dataObject(), e._format())) {
				e._cancel(true);
			}
		});
		manager.error = $.ig.Delegate.prototype.combine(manager.error, function (o, e) {
			var trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
			if ($.ig.util.cast($.ig.InvalidMultipleRangeSelection.prototype.$type, e._exception()) !== null) {
				trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.copyInvalidRanges);
			}
			var prompt = $.ig.util.nullableNotEquals(trigger, null) ? new $.ig.SpreadsheetUserPromptInfo(trigger.value(), null, e._exception(), null, false) : new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteError, $.ig.spreadsheet.locale.getString("PasteError_General_Message", [ e._exception().message() ]), e._exception(), null, false);
			$self._onUserPrompt(prompt);
		});
		manager.copyToClipboard();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::CopyToClipboard(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::DirtyActiveSelectionCellFormat()" />*/
	_dirtyActiveSelectionCellFormat: function () {
		this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification | $.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification);
		this.___activeSelectionCellFormat._dirty(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::DirtyActiveSelectionCellFormat()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteActionWithUndo(Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation, System.Action, , System.Boolean, System.String, System.Boolean, System.Boolean)" />*/
	_executeActionWithUndo: function (operation, action, affectedRanges, useSelectionRangesAsTargetRanges, additionalInfoForUndo, restoreSelectionOnUndo, requireUndoManager) {
		var forcedUndoManager = requireUndoManager && !this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled);
		if (forcedUndoManager) {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled, true);
		}
		try {
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled)) {
				var transaction = null;
				var pane = this.activePane();
				if (pane != null && restoreSelectionOnUndo) {
					var selection = pane.selection();
					var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
					if (affectedRanges == null && useSelectionRangesAsTargetRanges) {
						affectedRanges = ranges;
					}
					var selectionSnapshot = new $.ig.SelectionSnapshot(this.___sheetManager._worksheet(), ranges, selection.activeCell(), selection.activeCellRangeIndex());
					transaction = new $.ig.SpreadsheetSelectionUndoTransaction(this, this.___sheetManager._worksheet(), operation, additionalInfoForUndo, affectedRanges, selectionSnapshot, this._setSelectionImpl.runOn(this));
				} else {
					if (pane != null && affectedRanges == null && useSelectionRangesAsTargetRanges) {
						affectedRanges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, pane.selection().cellRanges());
					}
					transaction = new $.ig.SpreadsheetUndoTransaction(this, this.___sheetManager._worksheet(), operation, additionalInfoForUndo, affectedRanges);
				}
				this.___cachedUndoManager.executeInTransaction(transaction, action);
				if (forcedUndoManager) {
					this.___cachedUndoManager.removeAll(function (u) { return u == transaction; }, true);
				}
			} else {
				action();
			}
		}
		catch (ex) {
			if (!($.ig.util.cast($.ig.EditModeDataValidationException.prototype.$type, ex) !== null)) {
				this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.general, null, ex, $.ig.SpreadsheetTransactionOperation.prototype.getBox(operation), false));
			}
		}
		finally {
			if (forcedUndoManager) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled, this.isUndoEnabled());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteActionWithUndo(Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation, System.Action, , System.Boolean, System.String, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteTabAction(Infragistics.Controls.Grids.Core.SheetTabAction)" />*/
	_executeTabAction: function (action) {
		if (this._tabInEdit() != null && !this._endTabRenaming(false, false, false)) {
			return;
		}
		switch (action) {
			case $.ig.SheetTabAction.prototype.deleteWorksheets:
				if (this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.deletingWorksheets, null, null, null, true))) {
					return;
				}
				break;
		}
		this.___tabManager._execute(action);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ExecuteTabAction(Infragistics.Controls.Grids.Core.SheetTabAction)" />*/
	,
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Controls.Grids.Core.Spreadsheet::GetCurrentState(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object)" />*/
	_getCurrentState: function (command, commandParameter) {
		var definition = this.___commands.getDefinition(command);
		var state = definition == null ? $.ig.LongValue.prototype.all() : $.ig.LongValue.prototype.or(definition._disallowedState, definition._requiredState);
		return this._getCurrentState1(state, commandParameter);
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Controls.Grids.Core.Spreadsheet::GetCurrentState(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Object)" />*/
	,
	/*<BeginMethod Name="Infragistics.Core.LongValue Infragistics.Controls.Grids.Core.Spreadsheet::GetCurrentState(Infragistics.Core.LongValue, System.Object)" />*/
	_getCurrentState1: function (statesToQuery, commandParameter) {
		this._verifyCanUndoRedo();
		var states = new $.ig.LongValue(0);
		if ((statesToQuery._low & ($.ig.SpreadsheetStatesLow.prototype.hasWorkbook | $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected)) != 0) {
			var workbook = this.workbook();
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasWorkbook) != 0 && workbook != null) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.hasWorkbook;
			}
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected) != 0 && workbook != null && this.workbook().protection().allowEditStructure() == false) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected;
			}
		}
		if ((statesToQuery._high & $.ig.SpreadsheetStatesHigh.prototype.addWorksheet) != 0 && this.allowAddWorksheet()) {
			states._high |= $.ig.SpreadsheetStatesHigh.prototype.addWorksheet;
		}
		if ((statesToQuery._high & $.ig.SpreadsheetStatesHigh.prototype.deleteWorksheet) != 0 && this.allowDeleteWorksheet()) {
			states._high |= $.ig.SpreadsheetStatesHigh.prototype.deleteWorksheet;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasMultiplePanes) != 0 && this.panes().count() > 1) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.hasMultiplePanes;
		}
		if (this.___sheetManager != null) {
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasWorksheet) != 0) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.hasWorksheet;
			}
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasColumnScrollRegionSplit) != 0 && this.___sheetManager._columns().count() > 1) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.hasColumnScrollRegionSplit;
			}
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasRowScrollRegionSplit) != 0 && this.___sheetManager._rows().count() > 1) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.hasRowScrollRegionSplit;
			}
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes) != 0 && this.___sheetManager._hasFrozenPanes()) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes;
			}
			if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isInNameBox) != 0 && this._viewResolved().isInNameBox()) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.isInNameBox;
			}
			if ((statesToQuery._low & ($.ig.SpreadsheetStatesLow.prototype.hasRowsSelected | $.ig.SpreadsheetStatesLow.prototype.hasColumnsSelected)) != 0) {
				if (this.___sheetManager.activePane() != null) {
					var selection = this.___sheetManager.activePane().selection();
					if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasRowsSelected) != 0 && selection._selectedRows().count() > 0) {
						states._low |= $.ig.SpreadsheetStatesLow.prototype.hasRowsSelected;
					}
					if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasColumnsSelected) != 0 && selection._selectedColumns().count() > 0) {
						states._low |= $.ig.SpreadsheetStatesLow.prototype.hasColumnsSelected;
					}
				}
			}
			if (this.___sheetManager._worksheet().isProtected()) {
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isWorksheetProtected) != 0) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isWorksheetProtected;
				}
				var protection = this.___sheetManager._worksheet().protection();
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isNavigatingUnlockedCellsOnly) != 0 && protection.selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.unlockedCells) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isNavigatingUnlockedCellsOnly;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isFormatCellsProtected) != 0 && protection.allowFormattingCells() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isFormatCellsProtected;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isFormatColumnsProtected) != 0 && protection.allowFormattingColumns() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isFormatColumnsProtected;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isFormatRowsProtected) != 0 && protection.allowFormattingRows() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isFormatRowsProtected;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isInsertColumnsProtected) != 0 && protection.allowInsertingColumns() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isInsertColumnsProtected;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isInsertRowsProtected) != 0 && protection.allowInsertingRows() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isInsertRowsProtected;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isDeleteColumnsProtected) != 0 && protection.allowDeletingColumns() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isDeleteColumnsProtected;
				}
				if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isDeleteRowsProtected) != 0 && protection.allowDeletingRows() == false) {
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isDeleteRowsProtected;
				}
			}
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasScrollLock) != 0) {
			if (this._viewResolved().isScrollLockToggled()) {
				states._low |= $.ig.SpreadsheetStatesLow.prototype.hasScrollLock;
			}
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isInEndMode) != 0 && this.isInEndMode()) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.isInEndMode;
		}
		var SelectionModeStates = $.ig.SpreadsheetStatesLow.prototype.isInNormalSelectionMode | $.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode | $.ig.SpreadsheetStatesLow.prototype.isInAddToSelectionMode;
		if ((statesToQuery._low & SelectionModeStates) != 0) {
			switch (this.selectionMode()) {
				case $.ig.SpreadsheetCellSelectionMode.prototype.normal:
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isInNormalSelectionMode;
					break;
				case $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection:
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode;
					break;
				case $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection:
					states._low |= $.ig.SpreadsheetStatesLow.prototype.isInAddToSelectionMode;
					break;
			}
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isInEditMode) != 0 && this.isInEditMode()) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.isInEditMode;
		}
		if ((statesToQuery._high & $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet) != 0 && this._tabInEdit() != null) {
			states._high |= $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.canUndo) != 0 && this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.canUndo)) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.canUndo;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.canRedo) != 0 && this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.canRedo)) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.canRedo;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.enterKeyNavigation) != 0 && this.isEnterKeyNavigationEnabled()) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.enterKeyNavigation;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isPreviousWorksheetTabOutOfView) != 0 && this.___tabManager._isPreviousItemOutOfView()) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.isPreviousWorksheetTabOutOfView;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.isNextWorksheetTabOutOfView) != 0 && this.___tabManager._isNextItemOutOfView()) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.isNextWorksheetTabOutOfView;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.hasMultipleSelectedWorksheets) != 0 && this.___tabManager._selectedTabs().count() > 1) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.hasMultipleSelectedWorksheets;
		}
		if ((statesToQuery._low & $.ig.SpreadsheetStatesLow.prototype.arrowKeysNavigateWithinCell) != 0 && this.cellEditMode() == $.ig.SpreadsheetCellEditMode.prototype.arrowKeysNavigateInCell) {
			states._low |= $.ig.SpreadsheetStatesLow.prototype.arrowKeysNavigateWithinCell;
		}
		return states;
	}
	/*<EndMethod Name="Infragistics.Core.LongValue Infragistics.Controls.Grids.Core.Spreadsheet::GetCurrentState(Infragistics.Core.LongValue, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::GetFlag(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags)" />*/
	_getFlag: function (flag) {
		return (this.___flags & flag) != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::GetFlag(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase Infragistics.Controls.Grids.Core.Spreadsheet::GetReferenceFromNamedReference(Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase, Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	_getReferenceFromNamedReference: function (reference, activeRow, activeColumnIndex) {
		var namedReference = $.ig.util.cast($.ig.NamedCalcReference.prototype.$type, reference);
		if (namedReference == null) {
			return null;
		}
		var activeCellRef = activeRow._getCellCalcReference(activeColumnIndex);
		return namedReference._namedReference()._getReferenceHelper(true, activeCellRef);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase Infragistics.Controls.Grids.Core.Spreadsheet::GetReferenceFromNamedReference(Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase, Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.Spreadsheet::GetResolvedActiveCellFormat()" />*/
	_getResolvedActiveCellFormat: function () {
		var selection = this.___sheetManager.activePane().selection();
		var cell = selection.activeCell();
		var row = this.___sheetManager._worksheet().rows()._getIfCreated(cell.row());
		var format = this.___sheetManager._worksheet()._getCellFormatElementReadOnly(row, cell.column());
		return format;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.Spreadsheet::GetResolvedActiveCellFormat()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.Spreadsheet::GetSelectionCellRanges()" />*/
	_getSelectionCellRanges: function () {
		var selection = this.activeSelection();
		return selection != null ? selection.cellRanges() : new Array(0);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.Spreadsheet::GetSelectionCellRanges()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::HideRowsOrColumns(System.Boolean, System.Boolean)" />*/
	_hideRowsOrColumns: function (hide, rows) {
		var $self = this;
		var operation = rows ? $.ig.SpreadsheetTransactionOperation.prototype.resizeRow : $.ig.SpreadsheetTransactionOperation.prototype.resizeColumn;
		this._executeActionWithUndo(operation, function () { $self.___sheetManager._hideRowsOrColumns(hide, rows); }, null, false, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::HideRowsOrColumns(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Indent(System.Boolean)" />*/
	_indent: function (increase) {
		var $self = this;
		if (this.___sheetManager == null || this.___sheetManager.activePane() == null) {
			return;
		}
		var selection = this.___sheetManager.activePane().selection();
		this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.formatCells, function () { $self.___sheetManager._changeIndent(increase); }, null, false, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Indent(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::InitializeEditManagers()" />*/
	_initializeEditManagers: function () {
		this.___cellEditManager = this.___viewResolved.createCellEditManager() || new $.ig.Spreadsheet_NullCellEditManager(this);
		this.___tabEditManager = this.___viewResolved.createTabEditManager() || new $.ig.Spreadsheet_NullTabEditManager(this);
		this.onPropertyChanged("CellEditManager");
		this.onPropertyChanged("TabEditManager");
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::InitializeEditManagers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::InitializeFromSheetManager(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags, System.Action)" />*/
	_initializeFromSheetManager: function (isInitializingFlag, setPropertyValue) {
		if (this.___sheetManager != null) {
			var worksheet = this.___sheetManager._worksheet();
			var wasInitializing = this._getFlag(isInitializingFlag);
			this._setFlag(isInitializingFlag, true);
			try {
				setPropertyValue(worksheet);
			}
			finally {
				this._setFlag(isInitializingFlag, wasInitializing);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::InitializeFromSheetManager(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags, System.Action)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsActiveCellValueDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isActiveCellValueDirtiedBy: function (changeInfo) {
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.cellValue:
			case $.ig.ExcelChangeAction.prototype.clearTableStyles:
			case $.ig.ExcelChangeAction.prototype.tableStyle:
			case $.ig.ExcelChangeAction.prototype.tableStyleAdd:
			case $.ig.ExcelChangeAction.prototype.tableStyleRemove:
			case $.ig.ExcelChangeAction.prototype.workbookStyleCellFormat:
			case $.ig.ExcelChangeAction.prototype.cellFormat:
			case $.ig.ExcelChangeAction.prototype.columnFormat:
			case $.ig.ExcelChangeAction.prototype.rowFormat:
			case $.ig.ExcelChangeAction.prototype.tableAreaFormat:
			case $.ig.ExcelChangeAction.prototype.workbookFont:
			case $.ig.ExcelChangeAction.prototype.workbook:
			case $.ig.ExcelChangeAction.prototype.clearHyperlinks:
			case $.ig.ExcelChangeAction.prototype.hyperlink:
			case $.ig.ExcelChangeAction.prototype.hyperlinkAdd:
			case $.ig.ExcelChangeAction.prototype.hyperlinkRemove:
			case $.ig.ExcelChangeAction.prototype.formattedText:
			case $.ig.ExcelChangeAction.prototype.formattedTextParagraph:
			case $.ig.ExcelChangeAction.prototype.formattedTextParagraphAdd:
			case $.ig.ExcelChangeAction.prototype.formattedTextParagraphRemove:
			case $.ig.ExcelChangeAction.prototype.table:
			case $.ig.ExcelChangeAction.prototype.tableAdd:
			case $.ig.ExcelChangeAction.prototype.tableColumn:
			case $.ig.ExcelChangeAction.prototype.tableColumnInsert:
			case $.ig.ExcelChangeAction.prototype.tableColumnRemove:
			case $.ig.ExcelChangeAction.prototype.tableRemove:
			case $.ig.ExcelChangeAction.prototype.tableRowInsert:
			case $.ig.ExcelChangeAction.prototype.tableRowRemove:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsActiveCellValueDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsActiveSelectionCellFormatDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isActiveSelectionCellFormatDirtiedBy: function (changeInfo) {
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.cellFormat:
			case $.ig.ExcelChangeAction.prototype.columnFormat:
			case $.ig.ExcelChangeAction.prototype.rowFormat:
			case $.ig.ExcelChangeAction.prototype.tableAreaFormat:
			case $.ig.ExcelChangeAction.prototype.workbookFont:
			case $.ig.ExcelChangeAction.prototype.workbook:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsActiveSelectionCellFormatDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	___accessClipboardFailed: false,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsClipboardEmpty()" />*/
	_isClipboardEmpty: function () {
		if (this.___accessClipboardFailed) {
			return false;
		}
		try {
			var dataObject = $.ig.ClipboardHelper.prototype.getDataObject();
			return $.ig.WorkbookDataObjectManager.prototype.hasAnyPasteFormat(dataObject) == false;
		}
		catch (e) {
			this.___accessClipboardFailed = true;
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsClipboardEmpty()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsFormulaValueDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isFormulaValueDirtiedBy: function (changeInfo) {
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.cellValue: return true;
		}
		return $.ig.Spreadsheet.prototype._isActiveSelectionCellFormatDirtiedBy(changeInfo);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsFormulaValueDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsNotifyCanExecuteDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isNotifyCanExecuteDirtiedBy: function (changeInfo) {
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.workbook:
			case $.ig.ExcelChangeAction.prototype.worksheet:
				if (changeInfo._name == "IsProtected") {
					return true;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.worksheetProtection:
				if (changeInfo._name == "SelectionMode") {
					return true;
				}
				break;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsNotifyCanExecuteDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsSimpleNamedReferenceDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isSimpleNamedReferenceDirtiedBy: function (changeInfo) {
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.clearNamedReferences:
			case $.ig.ExcelChangeAction.prototype.namedReferenceAdd:
			case $.ig.ExcelChangeAction.prototype.namedReferenceRemove:
			case $.ig.ExcelChangeAction.prototype.clearWorksheetTables:
			case $.ig.ExcelChangeAction.prototype.tableAdd:
			case $.ig.ExcelChangeAction.prototype.tableRemove:
			case $.ig.ExcelChangeAction.prototype.tableResize:
			case $.ig.ExcelChangeAction.prototype.worksheetRemove:
			case $.ig.ExcelChangeAction.prototype.worksheetAdd:
				return true;
			case $.ig.ExcelChangeAction.prototype.workbook:
				switch (changeInfo._name) {
					case "":
					case "CellReferenceMode":
					case "CurrentFormat":
						return true;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.namedReference:
			case $.ig.ExcelChangeAction.prototype.table:
				switch (changeInfo._name) {
					case "Name": return true;
				}
				break;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsSimpleNamedReferenceDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsWorkbookDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isWorkbookDirtiedBy: function (changeInfo) {
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.zoom: return false;
			case $.ig.ExcelChangeAction.prototype.windowOptions:
				switch (changeInfo._name) {
					case "BoundsInTwips":
					case "FirstVisibleTabIndex":
					case "Minimized":
					case "TabBarWidth":
					case "SelectedWorksheet":
						return false;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.displayOptions:
				switch (changeInfo._name) {
					case "IsTabSelected": return false;
				}
				break;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::IsWorkbookDirtiedBy(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::MergeCells(Infragistics.Controls.Grids.Core.SpreadsheetCellMergeOperation)" />*/
	_mergeCells: function (operation) {
		var $self = this;
		this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.mergeCells, function () { $self.___sheetManager._mergeCells(operation); }, null, false, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::MergeCells(Infragistics.Controls.Grids.Core.SpreadsheetCellMergeOperation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OpenHyperlink()" />*/
	_openHyperlink: function () {
		var selection = this.activeSelection();
		if (selection != null && selection.cellRanges().count() == 1) {
			var range = selection.cellRanges().item(0);
			var cell = selection.activeCell();
			var cellRange = selection._getCellRange(cell);
			if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(cellRange, range)) {
				var ws = this.___sheetManager._worksheet();
				var row = ws.rows()._getIfCreated(cell.row());
				var hyperlink = ws._getCellHyperlink(row, cell.row(), cell.column());
				if (hyperlink != null) {
					this._visitHyperlink(hyperlink);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OpenHyperlink()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnPasswordNeeded(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	_onPasswordNeeded: function (lockedRangeInfo) {
		var ranges = lockedRangeInfo.getRangesToUnlock(true);
		var args = new $.ig.SpreadsheetEditRangePasswordNeededEventArgs(ranges, $.ig.Enumerable.prototype.toArray$1($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.LockedEditRangeInfoForWorksheet.prototype.$type, $.ig.excel.Worksheet.prototype.$type, lockedRangeInfo.worksheetInfos(), function (i) { return i._worksheet; })));
		this._raiseEditRangePasswordNeeded(args);
		return args.cancel() == false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::OnPasswordNeeded(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onPrivateSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (this.___sheetManager != null && this.___sheetManager._isPanesSource(sender)) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				} else if (this.___tabManager._isSelectedTabsSource(sender)) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.selectedTabsChanged);
				} else {
					var senderType = sender.getType();
					if (senderType == $.ig.SpreadsheetUtilities.prototype.oCE_CellRange || senderType == $.ig.SpreadsheetUtilities.prototype.aRS_CellRange_Int) {
						this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
					}
				}
				break;
			case "ActivePane":
				if (sender == this.___sheetManager) {
					this.activePane(this.___sheetManager.activePane());
				}
				break;
			case "ActiveCellPane":
				if (sender == this.___sheetManager) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost);
				}
				break;
			case "ZoomLevel":
				if (sender == this.___sheetManager) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsZoomLevelInitialization);
				}
				break;
			case "ActiveCellInputMessagePosition":
				if (sender == this.___sheetManager) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsInputMsgPosInitialization);
				}
				break;
			case "ActiveCell":
				if (sender == this.activeSelection()) {
					this.activeCell(this.activeSelection().activeCell());
				}
				break;
			case "ActiveCellAsRange":
				if (sender == this.activeSelection()) {
					this._activeCellAsRange(this.activeSelection()._activeCellAsRange());
				}
				break;
			case "ActiveTab":
				if (sender == this.___tabManager) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.activeTabChanged);
				}
				break;
			case "IsNextItemOutOfView":
			case "IsPreviousItemOutOfView":
				if (sender == this.___tabManager) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
				}
				break;
			case "TabInEdit":
				if (sender == this.___tabManager) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.verifyIsRenamingWorksheet);
				}
				break;
			case "Panel":
				if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetPane.prototype.$type, sender) !== null) {
					this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost);
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.Spreadsheet, System.Object, System.String, System.Object)" />*/
	_onPrivateSubObjectPropertyChanged: function (ctrl, sender, property, extraInfo) {
		ctrl._onPrivateSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.Spreadsheet, System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnUndoManagerPropertyChanged(Infragistics.Controls.Grids.Core.Spreadsheet, System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	_onUndoManagerPropertyChanged: function (ctrl, sender, e) {
		var prop = e.propertyName();
		if (String.isNullOrEmpty(prop) || prop == "CanUndo" || prop == "CanRedo") {
			ctrl._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsCanUndoRedoVerification);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnUndoManagerPropertyChanged(Infragistics.Controls.Grids.Core.Spreadsheet, System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnWorkbookChange`2(Infragistics.Controls.Grids.Core.Spreadsheet.TContext, Infragistics.Documents.Excel.ChangeInfo)" />*/
	_onWorkbookChange$2: function ($tContext, $tValue, context, changeInfo) {
		var sheet = this.___sheetManager;
		var worksheet = changeInfo.getWorksheet(context);
		if (sheet != null && (sheet._worksheet() == worksheet || worksheet == null)) {
			sheet._notifySheetChange$2($tContext, $tValue, context, changeInfo);
			if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.activeCellValue) && $.ig.Spreadsheet.prototype._isActiveCellValueDirtiedBy(changeInfo)) {
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.activeCellValue);
			}
		}
		if (this.___tabManager != null) {
			this.___tabManager._notifyChange(changeInfo);
		}
		if (!this.___activeSelectionCellFormat._isDirty()) {
			if ($.ig.Spreadsheet.prototype._isActiveSelectionCellFormatDirtiedBy(changeInfo)) {
				this._dirtyActiveSelectionCellFormat();
			}
		}
		if (this.___sortedSimpleNamedReferences != null || !this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification)) {
			if ($.ig.Spreadsheet.prototype._isSimpleNamedReferenceDirtiedBy(changeInfo)) {
				this.___sortedSimpleNamedReferences = null;
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification);
			}
		}
		if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged)) {
			if ($.ig.Spreadsheet.prototype._isNotifyCanExecuteDirtiedBy(changeInfo)) {
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged);
			}
		}
		if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification)) {
			if ($.ig.Spreadsheet.prototype._isFormulaValueDirtiedBy(changeInfo)) {
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification);
			}
		}
		if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsWorkbookDirtiedNotification)) {
			if ($.ig.Spreadsheet.prototype._isWorkbookDirtiedBy(changeInfo)) {
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsWorkbookDirtiedNotification);
			}
		}
		if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.hasPendingChangeNotification)) {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.hasPendingChangeNotification, true);
			this._viewResolved().onHasPendingChangeNotification();
		}
		switch (changeInfo._changeType) {
			case $.ig.ExcelChangeAction.prototype.workbook:
				if (changeInfo._name == "CurrentFormat") {
					this._suspendSynchronization();
					try {
						if (this.___sheetManager != null) {
							this.___sheetManager._onCurrentFormatChanged();
						}
					}
					finally {
						this._resumeSynchronization(true);
					}
					this._clearUndoHistory2(this.___cachedUndoManager, this.workbook());
				}
				break;
			case $.ig.ExcelChangeAction.prototype.displayOptions:
				this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsShowGridlinesInitialization | $.ig.Spreadsheet_InternalFlags.prototype.needsShowHeadersInitialization);
				break;
			case $.ig.ExcelChangeAction.prototype.worksheet:
				if (changeInfo._name == "IsProtected") {
					if (worksheet != null && worksheet.isProtected()) {
						this._clearUndoHistory(worksheet);
					}
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnWorkbookChange`2(Infragistics.Controls.Grids.Core.Spreadsheet.TContext, Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Paste()" />*/
	_paste: function () {
		var $self = this;
		var manager = new $.ig.WorkbookDataObjectManager(this.workbook());
		manager.error = $.ig.Delegate.prototype.combine(manager.error, function (o, e) {
			if ($self.___sheetManager != null) {
				$self.___sheetManager._initializePaneSelectionFromWorksheet();
			}
			var loadException = $.ig.util.cast($.ig.WorkbookSerializationLoadException.prototype.$type, e._exception());
			var trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
			if (loadException != null) {
				switch (loadException._error()) {
					case $.ig.WorkbookSerializationLoadError.prototype.cellRangeMismatch:
						trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteCellRangeSize);
						break;
					case $.ig.WorkbookSerializationLoadError.prototype.multipleSourceAndTargetRanges:
						trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteMultipleSourceAndTargetRanges);
						break;
					case $.ig.WorkbookSerializationLoadError.prototype.worksheetCountMismatch:
						trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteInvalidSheetCount);
						break;
					case $.ig.WorkbookSerializationLoadError.prototype.missingSelectionInfo:
						trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteInvalidSourceRanges);
						break;
					case $.ig.WorkbookSerializationLoadError.prototype.intersectsMergedCell:
						trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteIntersectsMergedCells);
						break;
					case $.ig.WorkbookSerializationLoadError.prototype.tablesWithMultipleWorksheets: break;
					case $.ig.WorkbookSerializationLoadError.prototype.multipleTargetRanges:
						trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMultipleSelections);
						break;
					default:
						$.ig.Debug.prototype.fail("Unrecognized error:" + $.ig.WorkbookSerializationLoadError.prototype.getBox(loadException._error()));
						break;
				}
			} else if ($.ig.util.cast($.ig.InvalidMultipleRangeSelection.prototype.$type, e._exception()) !== null) {
				trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteInvalidSourceRanges);
			}
			var prompt = $.ig.util.nullableNotEquals(trigger, null) ? new $.ig.SpreadsheetUserPromptInfo(trigger.value(), null, e._exception(), null, false) : new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteError, $.ig.spreadsheet.locale.getString("PasteError_General_Message", [ e._exception().message() ]), e._exception(), null, false);
			$self._onUserPrompt(prompt);
		});
		manager.pasting = $.ig.Delegate.prototype.combine(manager.pasting, function (o, e) {
			$self._viewResolved().onDataObjectPasting(e);
		});
		var options = (function () {
			var $ret = new $.ig.WorkbookSerializationLoadOptions();
			$ret.categoriesToLoad($.ig.WorkbookSerializationLoadCategories.prototype.allGroup);
			$ret.fixedDecimalPlaceCount($self.fixedDecimalPlaceCount());
			$ret.isFixedDecimalEnabled($self.isFixedDecimalEnabled());
			$ret.skipBlanks(false);
			$ret.validateTargetAction($self._validatePasteTarget.runOn($self));
			return $ret;
		}());
		if (manager.performPaste(options)) {
			if (this.___sheetManager != null) {
				this.___sheetManager._initializePaneSelectionFromWorksheet();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Paste()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ProcessPendingActiveCellValueChange(System.Boolean)" />*/
	_processPendingActiveCellValueChange: function (synchronous) {
		var $self = this;
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.activeCellValue)) {
			if (synchronous) {
				this._cancelPendingActiveCellValueChange();
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.activeCellValue, false);
				var wasInitializing = this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingCellEditor);
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingCellEditor, true);
				try {
					this.___cellEditManager.initializeNotInEditCellValue();
				}
				finally {
					this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isInitializingCellEditor, wasInitializing);
				}
			} else {
				if (this.___asyncPendingActiveCellValueChange == null || $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(this.___asyncPendingActiveCellValueChange.item2(), this.activeCell())) {
					this._cancelPendingActiveCellValueChange();
					this.___asyncPendingActiveCellValueChange = $.ig.Tuple.prototype.create$2($.ig.TimedOperation.prototype.$type, $.ig.spreadsheet.SpreadsheetCell.prototype.$type, new $.ig.TimedOperation(function () { $self._processPendingActiveCellValueChange(true); }, $.ig.Spreadsheet.prototype.__asyncPendingActiveCellValueChangeDelay), this.activeCell());
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::ProcessPendingActiveCellValueChange(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::QueueAsyncVerification()" />*/
	_queueAsyncVerification: function () {
		if (!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState)) {
			this.___deferredValidationOperation.startAsyncOperation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::QueueAsyncVerification()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::QueueInvalidation(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags)" />*/
	_queueInvalidation: function (flag) {
		if ((this.___flags & flag) != flag) {
			this._setFlag(flag, true);
			this._queueAsyncVerification();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::QueueInvalidation(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseDeferredEvents()" />*/
	_raiseDeferredEvents: function () {
		var deferredEvents = this.___deferredEvents;
		this.___deferredEvents = null;
		var context;
		if (deferredEvents != null) {
			var activeCell = this.activeCell();
			var activePane = this.activePane();
			var activeWorksheet = this.activeWorksheet();
			if ((function () { var $ret = deferredEvents.tryGetValue("ActiveCellChanged", context); context = $ret.p1; return $ret.ret; }()) && deferredEvents.remove("ActiveCellChanged")) {
				this._onActiveCellChanged(new $.ig.SpreadsheetActiveCellChangedEventArgs(context, activeCell));
			}
			if ((function () { var $ret = deferredEvents.tryGetValue("ActivePaneChanged", context); context = $ret.p1; return $ret.ret; }()) && deferredEvents.remove("ActivePaneChanged")) {
				this._onActivePaneChanged(new $.ig.SpreadsheetActivePaneChangedEventArgs(context, activePane));
			}
			if ((function () { var $ret = deferredEvents.tryGetValue("ActiveWorksheetChanged", context); context = $ret.p1; return $ret.ret; }()) && deferredEvents.remove("ActiveWorksheetChanged")) {
				this._onActiveWorksheetChanged(new $.ig.SpreadsheetActiveWorksheetChangedEventArgs(context, activeWorksheet));
			}
			$.ig.Debug.prototype.assert1(deferredEvents.count() == 0, "There are unhandled events in the list");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseDeferredEvents()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RenameWorksheet()" />*/
	_renameWorksheet: function () {
		this.___tabEditManager.beginEdit();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RenameWorksheet()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SetCellFormatting`1(Infragistics.Controls.Grids.Core.Spreadsheet.T, System.Action, Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation, Infragistics.Documents.Excel.CellFormatValue)" />*/
	_setCellFormatting$1: function ($t, newValue, setter, operation, property) {
		var $self = this;
		if (this.___sheetManager != null && this.___sheetManager.activePane() != null) {
			var selection = this.___sheetManager.activePane().selection();
			this._executeActionWithUndo(operation, function () { $self.___sheetManager._setCellFormatting$1($t, newValue, setter, selection.cellRanges(), property, false); }, null, false, null, true, false);
			this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SetCellFormatting`1(Infragistics.Controls.Grids.Core.Spreadsheet.T, System.Action, Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation, Infragistics.Documents.Excel.CellFormatValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SetFlag(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags, System.Boolean)" />*/
	_setFlag: function (flag, set) {
		if (set) {
			this.___flags |= flag;
		} else {
			this.___flags &= ~flag;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SetFlag(Infragistics.Controls.Grids.Core.Spreadsheet_InternalFlags, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SetSelectionImpl(Infragistics.Controls.Grids.Core.SelectionSnapshot, System.Boolean)" />*/
	_setSelectionImpl: function (selectionSnapshot, extendSelectionForMergedCells) {
		if (selectionSnapshot == null) {
			return;
		}
		var worksheet = selectionSnapshot._worksheet();
		$.ig.Debug.prototype.assert(worksheet != null);
		if (worksheet == null) {
			return;
		}
		var wb = this.workbook();
		$.ig.Debug.prototype.assert(wb != null && worksheet.workbook() == wb);
		if (wb == null || wb != worksheet.workbook()) {
			return;
		}
		var changedWorksheet = false;
		if (worksheet != null && worksheet != this.activeWorksheet()) {
			wb.windowOptions().selectedWorksheet(worksheet);
			changedWorksheet = true;
			this._verifyStateImpl();
		}
		var selection = this.activeSelection();
		$.ig.Debug.prototype.assert(selection != null);
		if (selection != null) {
			selection._resetSelection(selectionSnapshot.__cellRanges, selectionSnapshot.__activeCell, selectionSnapshot.__activeCellRangeIndex, extendSelectionForMergedCells);
			if (this.___sheetManager != null && this.___sheetManager._worksheet() == worksheet) {
				if (changedWorksheet) {
					this._viewResolved().remeasureRootPanel();
				}
				this.___sheetManager._bringIntoView3(null, $.ig.Enumerable.prototype.last$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selectionSnapshot.__cellRanges));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::SetSelectionImpl(Infragistics.Controls.Grids.Core.SelectionSnapshot, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ShouldUseAccountUnderlineForActiveCell()" />*/
	_shouldUseAccountUnderlineForActiveCell: function () {
		return $.ig.SpreadsheetUtilities.prototype.getBuiltInCellFormatCategory(this._getResolvedActiveCellFormat()._formatStringIndexResolved()) == $.ig.ExcelCellFormatCategory.prototype.accounting;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ShouldUseAccountUnderlineForActiveCell()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::TryCreateSelectionSnapshot(Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase, Infragistics.Controls.Grids.Core.SelectionSnapshot, Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode)" />*/
	_tryCreateSelectionSnapshot: function (reference, snapshot, selectionMode) {
		var regions = reference._getRegionGroup();
		if (regions == null || regions.count() == 0) {
			snapshot = null;
			return {
				ret: false,
				p1: snapshot
			};
		}
		var referenceSheet = reference._worksheet();
		var rangeIndex = -1;
		var ranges = new $.ig.List$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, 0);
		var activeCell = new $.ig.spreadsheet.SpreadsheetCell();
		switch (selectionMode) {
			default:
			case $.ig.SpreadsheetCellSelectionMode.prototype.normal:
				{
					var lastRegion = reference._getLastRegionGroup();
					for (var i = 0; i < regions.count(); i++) {
						ranges.add($.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(referenceSheet, $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(regions.item(i)._address()), null));
					}
					rangeIndex = regions.indexOf(lastRegion);
					if (rangeIndex < 0) {
						rangeIndex = ranges.count() - 1;
					}
					activeCell = ranges.__inner[rangeIndex]._upperLeft();
					break;
				}
			case $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection:
				{
					if (referenceSheet != this.activeWorksheet()) {
						snapshot = null;
						return {
							ret: false,
							p1: snapshot
						};
					}
					ranges.addRange(this.activeSelection().cellRanges());
					for (var i1 = 0; i1 < regions.count(); i1++) {
						ranges.add($.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(referenceSheet, $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(regions.item(i1)._address()), null));
					}
					rangeIndex = ranges.count() - 1;
					activeCell = ranges.__inner[rangeIndex]._upperLeft();
					break;
				}
			case $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection:
				{
					if (referenceSheet != this.activeWorksheet()) {
						snapshot = null;
						return {
							ret: false,
							p1: snapshot
						};
					}
					ranges.addRange(this.activeSelection().cellRanges());
					activeCell = this.activeSelection().activeCell();
					rangeIndex = this.activeSelection().activeCellRangeIndex();
					ranges.__inner[rangeIndex] = $.ig.SpreadsheetPaneManager.prototype._getCellRange2(activeCell.row(), activeCell.column(), referenceSheet);
					for (var i2 = 0; i2 < regions.count(); i2++) {
						ranges.__inner[rangeIndex] = ranges.__inner[rangeIndex].union($.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(regions.item(i2)._address()));
					}
					ranges.__inner[rangeIndex] = $.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(referenceSheet, ranges.__inner[rangeIndex], null);
					break;
				}
		}
		if (rangeIndex < 0) {
			rangeIndex = ranges.count() - 1;
		}
		snapshot = new $.ig.SelectionSnapshot(referenceSheet, ranges.toArray(), activeCell, rangeIndex);
		return {
			ret: true,
			p1: snapshot
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::TryCreateSelectionSnapshot(Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase, Infragistics.Controls.Grids.Core.SelectionSnapshot, Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::TryExitEditModeBeforeCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	_tryExitEditModeBeforeCommand: function (command) {
		if (!this.isInEditMode()) {
			return true;
		}
		switch (command) {
			default:
				$.ig.Debug.prototype.fail("We need to make an explicit decision as to whether to exit edit mode for this command.");
				return true;
			case $.ig.spreadsheet.SpreadsheetAction.activatePreviousPane:
			case $.ig.spreadsheet.SpreadsheetAction.activateNextPane:
			case $.ig.spreadsheet.SpreadsheetAction.cellRight:
			case $.ig.spreadsheet.SpreadsheetAction.cellLeft:
			case $.ig.spreadsheet.SpreadsheetAction.cellAbove:
			case $.ig.spreadsheet.SpreadsheetAction.cellBelow:
			case $.ig.spreadsheet.SpreadsheetAction.cellWithDataLeft:
			case $.ig.spreadsheet.SpreadsheetAction.cellWithDataRight:
			case $.ig.spreadsheet.SpreadsheetAction.cellWithDataAbove:
			case $.ig.spreadsheet.SpreadsheetAction.cellWithDataBelow:
			case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataLeft:
			case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataRight:
			case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataAbove:
			case $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataBelow:
			case $.ig.spreadsheet.SpreadsheetAction.cellPageBelow:
			case $.ig.spreadsheet.SpreadsheetAction.cellPageAbove:
			case $.ig.spreadsheet.SpreadsheetAction.cellPageRight:
			case $.ig.spreadsheet.SpreadsheetAction.cellPageLeft:
			case $.ig.spreadsheet.SpreadsheetAction.firstCellInRow:
			case $.ig.spreadsheet.SpreadsheetAction.firstCellInView:
			case $.ig.spreadsheet.SpreadsheetAction.firstCellInWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.firstScrollableCellInRow:
			case $.ig.spreadsheet.SpreadsheetAction.firstScrollableCellInWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.lastCellInView:
			case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionRight:
			case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionLeft:
			case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionAbove:
			case $.ig.spreadsheet.SpreadsheetAction.cellInSelectionBelow:
			case $.ig.spreadsheet.SpreadsheetAction.lastUsedCell:
			case $.ig.spreadsheet.SpreadsheetAction.lastUsedCellInRow:
			case $.ig.spreadsheet.SpreadsheetAction.firstCellInViewWithinSelection:
			case $.ig.spreadsheet.SpreadsheetAction.lastCellInViewWithinSelection:
			case $.ig.spreadsheet.SpreadsheetAction.enterKeyNavigation:
			case $.ig.spreadsheet.SpreadsheetAction.shiftEnterKeyNavigation:
			case $.ig.spreadsheet.SpreadsheetAction.redo:
			case $.ig.spreadsheet.SpreadsheetAction.undo:
			case $.ig.spreadsheet.SpreadsheetAction.clearContents:
			case $.ig.spreadsheet.SpreadsheetAction.cellInNextSelectionRange:
			case $.ig.spreadsheet.SpreadsheetAction.cellInPreviousSelectionRange:
			case $.ig.spreadsheet.SpreadsheetAction.activateAndSelectPreviousWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.activateAndSelectNextWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.activateNextOutOfViewWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.activatePreviousOutOfViewWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.activateNextWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.activatePreviousWorksheet:
				return this._tryExitEditMode(true);
			case $.ig.spreadsheet.SpreadsheetAction.scrollToFirstWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.scrollToLastWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.scrollPreviousWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.scrollNextWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.scrollLeft:
			case $.ig.spreadsheet.SpreadsheetAction.scrollRight:
			case $.ig.spreadsheet.SpreadsheetAction.scrollUp:
			case $.ig.spreadsheet.SpreadsheetAction.scrollDown:
			case $.ig.spreadsheet.SpreadsheetAction.scrollPageLeft:
			case $.ig.spreadsheet.SpreadsheetAction.scrollPageRight:
			case $.ig.spreadsheet.SpreadsheetAction.scrollPageAbove:
			case $.ig.spreadsheet.SpreadsheetAction.scrollPageBelow:
				return true;
			case $.ig.spreadsheet.SpreadsheetAction.enterEndMode:
			case $.ig.spreadsheet.SpreadsheetAction.exitEndMode:
				return this._tryExitEditMode(true);
			case $.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode:
			case $.ig.spreadsheet.SpreadsheetAction.switchToExtendSelectionMode:
			case $.ig.spreadsheet.SpreadsheetAction.switchToAddToSelectionMode:
				return true;
			case $.ig.spreadsheet.SpreadsheetAction.enterEditMode:
			case $.ig.spreadsheet.SpreadsheetAction.enterEditModeAndClearValue:
			case $.ig.spreadsheet.SpreadsheetAction.toggleCellEditMode:
			case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateActiveCell:
			case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateSelectedCells:
			case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndCreateArrayFormula:
			case $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndDiscardChanges:
			case $.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.cancelRenameWorksheet:
				return true;
			case $.ig.spreadsheet.SpreadsheetAction.selectCellRight:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellLeft:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellAbove:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellBelow:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataLeft:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataRight:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataAbove:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataBelow:
			case $.ig.spreadsheet.SpreadsheetAction.selectCurrentRegion:
			case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataLeft:
			case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataRight:
			case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataAbove:
			case $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataBelow:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellPageBelow:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellPageAbove:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellPageRight:
			case $.ig.spreadsheet.SpreadsheetAction.selectCellPageLeft:
			case $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInRow:
			case $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInView:
			case $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInRow:
			case $.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInWorksheet:
			case $.ig.spreadsheet.SpreadsheetAction.selectLastCellInView:
			case $.ig.spreadsheet.SpreadsheetAction.selectLastUsedCell:
			case $.ig.spreadsheet.SpreadsheetAction.selectLastUsedCellInRow:
			case $.ig.spreadsheet.SpreadsheetAction.selectRows:
			case $.ig.spreadsheet.SpreadsheetAction.selectColumns:
			case $.ig.spreadsheet.SpreadsheetAction.selectAllCells:
			case $.ig.spreadsheet.SpreadsheetAction.selectVisibleCellsOnly:
			case $.ig.spreadsheet.SpreadsheetAction.selectActiveCellOnly:
			case $.ig.spreadsheet.SpreadsheetAction.selectCurrentArray:
				return this._tryExitEditMode(true);
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::TryExitEditModeBeforeCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ValidatePasteTarget(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean)" />*/
	_validatePasteTarget: function (targetWorksheets, targetRanges, canPromptForPassword) {
		if (this.___sheetManager != null && !this.___sheetManager._verifyCanPaste(targetWorksheets, targetRanges, canPromptForPassword)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet::ValidatePasteTarget(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifyCanUndoRedo()" />*/
	_verifyCanUndoRedo: function () {
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsCanUndoRedoVerification)) {
			var undoManager = this.undoManager();
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsCanUndoRedoVerification, false);
			var canUndo, canRedo;
			if (!this.isInEditMode()) {
				canUndo = undoManager != null && undoManager.canUndo();
				canRedo = undoManager != null && undoManager.canRedo();
			} else {
				canRedo = this._cellEditManager().canRedo();
				canUndo = this._cellEditManager().canUndo();
			}
			if (canUndo != this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.canUndo) || canRedo != this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.canRedo)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.canRedo, canRedo);
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.canUndo, canUndo);
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged, true);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifyCanUndoRedo()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifySheetManager()" />*/
	_verifySheetManager: function () {
		var $self = this;
		var sheetManager = this.___sheetManager;
		var originalLayoutManager = sheetManager;
		var wb = this.workbook();
		if (wb == null || wb.worksheets().count() == 0) {
			sheetManager = null;
		} else {
			var ws = wb.windowOptions().selectedWorksheet() || $.ig.Enumerable.prototype.first$1($.ig.excel.Worksheet.prototype.$type, wb.worksheets());
			if (sheetManager == null || sheetManager._worksheet() != ws) {
				var ownerState = (function () {
					var $ret = new $.ig.SpreadsheetOwnerState();
					$ret._afterPaneManagerLayout($self._afterPaneManagerLayout.runOn($self));
					$ret._isInEditMode($self.isInEditMode());
					$ret._visitHyperlinkAction($self._visitHyperlink.runOn($self));
					$ret._passwordNeededAction($self._onPasswordNeeded.runOn($self));
					$ret._renderCache($self._viewResolved().createRenderCache());
					$ret._getCellText(function (c) {
						var wr = ws.rows()._getIfCreated(c.row());
						return wr == null ? null : wr._getCellText1(c.column(), $.ig.excel.TextFormatMode.ignoreCellWidth);
					});
					$ret._usesLogicalPixels($self._viewResolved().usesLogicalPixels());
					return $ret;
				}());
				sheetManager = new $.ig.SpreadsheetPaneManager(ws, function (p) { return new $.ig.spreadsheet.SpreadsheetSelection($self, p); }, function (p) { return $self._tryExitEditMode(true); }, this._onUserPrompt.runOn(this), this.___tabManager, ownerState);
			}
		}
		if (this.___sheetManager != sheetManager) {
			if (this.___sheetManager != null) {
				this.___sheetManager._releaseResources();
				this.___sheetManager._dispose();
			}
			this.___previousNameboxSnapshot = null;
		}
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetPaneManager.prototype.$type, this.___sheetManager, sheetManager, this.___listener, false);
		this.___sheetManager = $ret.p0;
		if (this.___sheetManager != null) {
			this.___sheetManager._resourceProvider(this._resourceProvider());
			if (this.___previousNameboxSnapshot != null && this.___previousNameboxSnapshot._worksheet() == null) {
				this.___previousNameboxSnapshot = null;
			}
		}
		if (originalLayoutManager != this.___sheetManager) {
			this.___viewResolved.onSheetManagerChanged(originalLayoutManager, this.___sheetManager);
		}
		var hasLayoutManager = this.___sheetManager != null;
		this.___panes.setSourceCollection(hasLayoutManager ? this.___sheetManager._panes() : new Array(0));
		this.activePane(hasLayoutManager ? this.___sheetManager.activePane() : null);
		if (originalLayoutManager != this.___sheetManager) {
			if (originalLayoutManager != null) {
				originalLayoutManager.__ownerState._afterPaneManagerLayout(null);
			}
			this._queueInvalidation($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged | $.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.needsZoomLevelInitialization | $.ig.Spreadsheet_InternalFlags.prototype.needsInputMsgPosInitialization | $.ig.Spreadsheet_InternalFlags.prototype.needsShowHeadersInitialization | $.ig.Spreadsheet_InternalFlags.prototype.updateCellEditorHost | $.ig.Spreadsheet_InternalFlags.prototype.activeCellValue | $.ig.Spreadsheet_InternalFlags.prototype.needsShowGridlinesInitialization);
			this.onPropertyChanged("SheetManager");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifySheetManager()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifySimpleReferencesList()" />*/
	_verifySimpleReferencesList: function () {
		if (this.___sortedSimpleNamedReferences == null) {
			this.___sortedSimpleNamedReferences = new $.ig.List$1($.ig.Spreadsheet_SimpleNamedReference.prototype.$type, 0);
			var wb = this.workbook();
			if (wb != null) {
				var ws = wb.windowOptions().selectedWorksheet();
				var en = wb.namedReferences().getEnumerator();
				while (en.moveNext()) {
					var reference = en.current();
					var formula = reference._formulaInternal();
					if (formula == null || formula._doesHaveRelativeReferences()) {
						continue;
					}
					var actualReference = reference._getReferenceHelper(false, null);
					if (actualReference != null && $.ig.util.cast($.ig.TableCalcReferenceBase.prototype.$type, actualReference) !== null) {
					} else {
						var regions = reference._getAddresses(actualReference, ws);
						if (regions != null && regions.length == 1) {
							this.___sortedSimpleNamedReferences.add(new $.ig.Spreadsheet_SimpleNamedReference(1, reference, regions[0]));
						}
					}
				}
				this.___sortedSimpleNamedReferences.sort();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifySimpleReferencesList()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifyStateImpl()" />*/
	_verifyStateImpl: function () {
		var $self = this;
		this.___deferredValidationOperation.cancelPendingOperation();
		$.ig.Debug.prototype.assert1(!this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState), "Is already in VerifyState");
		var wasVerifying = this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState);
		try {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState, true);
			this.___tabManager._verifyState();
			this._verifySheetManager();
			if (this.___sheetManager != null) {
				this.___sheetManager._verifyBeforeMeasure();
			}
			if (this.___sheetManager != null) {
				this.___sheetManager._verifyActivePane(false);
			}
			this._verifyCanUndoRedo();
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.activeTabChanged)) {
				var activeTab = this.___tabManager._activeTab();
				this.activeWorksheet(activeTab != null ? activeTab._worksheet() : null);
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.activeTabChanged, false);
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.selectedTabsChanged)) {
				this.selectedWorksheets($.ig.Enumerable.prototype.toArray$1($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.excel.Worksheet.prototype.$type, this.___tabManager._selectedTabs(), function (t) { return t._worksheet(); })));
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.selectedTabsChanged, false);
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsZoomLevelInitialization)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsZoomLevelInitialization, false);
				this._initializeFromSheetManager($.ig.Spreadsheet_InternalFlags.prototype.isInitializingZoomLevel, function (ws) { $self.zoomLevel(ws.displayOptions().magnificationInNormalView()); });
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsInputMsgPosInitialization)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsInputMsgPosInitialization, false);
				this.validationInputMessagePosition(this.___sheetManager == null ? null : this.___sheetManager._activeCellInputMessagePosition());
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsShowGridlinesInitialization)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsShowGridlinesInitialization, false);
				this._initializeFromSheetManager($.ig.Spreadsheet_InternalFlags.prototype.isInitializingShowGridlines, function (ws) { $self.areGridlinesVisible(ws.displayOptions().showGridlines()); });
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsShowHeadersInitialization)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsShowHeadersInitialization, false);
				this._initializeFromSheetManager($.ig.Spreadsheet_InternalFlags.prototype.isInitializingShowHeaders, function (ws) { $self.areHeadersVisible(ws.displayOptions().showRowAndColumnHeaders()); });
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification, false);
				this.___activeSelectionCellFormat._sendChangeNotification();
				this.___cellEditManager.sendEditFontChangeNotifications();
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification, false);
				this.___cellEditManager.updateFormulaText();
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification)) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification, false);
				var selection = this.activeSelection();
				var newName = null;
				if (selection != null) {
					var wb = this.workbook();
					var ws = wb.windowOptions().selectedWorksheet();
					if (selection.cellRanges().count() == 1) {
						var excelRegion = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(selection.cellRanges().item(0));
						if (ws != null && ws.tables().count() > 0) {
							var en = ws.tables().getEnumerator();
							while (en.moveNext()) {
								var table = en.current();
								if (table._wholeTableAddress()._contains1(excelRegion) && $.ig.WorksheetRegionAddress.prototype._l_op_Equality(excelRegion, table.dataAreaRegion()._address())) {
									newName = table.name();
									break;
								}
							}
						}
						if (newName == null && wb._hasNamedReferences()) {
							this._verifySimpleReferencesList();
							var en1 = this.___sortedSimpleNamedReferences.getEnumerator();
							while (en1.moveNext()) {
								var reference = en1.current();
								if ($.ig.WorksheetRegionAddress.prototype._l_op_Equality(excelRegion, reference.__region)) {
									newName = reference.__reference.name();
									break;
								}
							}
						}
					}
					if (newName == null) {
						var cell = selection._activeCellAsRange()._upperLeft();
						var mode = wb.cellReferenceMode();
						var isRelative = mode == $.ig.excel.CellReferenceMode.a1;
						newName = (function (t1, t2, t3, t4, t5, t6) { return $.ig.CellAddress.prototype.getCellReferenceString(t1, t2, t3, t5, t6, -1, -1, false, t4); }(cell.row(), cell.column(), wb.currentFormat(), mode, isRelative, isRelative));
					}
				}
				this._nameBoxValue(newName);
				this.___namedReferenceList._dirty();
			}
			if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged) && this._mouseOperationWithCapture() == null) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged, false);
				this._viewResolved().notifyCanExecuteChanged();
			}
			this._ensureEditorHostIsInitialized();
			this._processPendingActiveCellValueChange(this.___viewResolved.updateEditorValueMode() == $.ig.SpreadsheetActiveCellUpdateMode.prototype.synchronous);
		}
		finally {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.isVerifyingState, wasVerifying);
		}
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.verifyIsRenamingWorksheet)) {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.verifyIsRenamingWorksheet, false);
			this.isRenamingWorksheet(this._tabInEdit() != null);
		}
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.needsWorkbookDirtiedNotification)) {
			this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.needsWorkbookDirtiedNotification, false);
			this._raiseWorkbookDirtied();
		}
		if (this._getFlag($.ig.Spreadsheet_InternalFlags.prototype.hasDeferredEvents)) {
			if (this.___sheetManager == null || !this.___sheetManager._isLayoutDirty()) {
				this._setFlag($.ig.Spreadsheet_InternalFlags.prototype.hasDeferredEvents, false);
				this._raiseDeferredEvents();
			}
		}
		$.ig.Debug.prototype.assert1(this.___deferredValidationOperation.isOperationPending() || (this.___flags & ($.ig.Spreadsheet_InternalFlags.prototype.needsNameBoxValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.needsFormulaBarValueVerification | $.ig.Spreadsheet_InternalFlags.prototype.needsFormatChangeNotification | (this._mouseOperationWithCapture() == null ? $.ig.Spreadsheet_InternalFlags.prototype.notifyCanExecuteChanged : 0) | $.ig.Spreadsheet_InternalFlags.prototype.selectedTabsChanged | $.ig.Spreadsheet_InternalFlags.prototype.verifyIsRenamingWorksheet | $.ig.Spreadsheet_InternalFlags.prototype.activeTabChanged)) == 0, "Should any of these states be still set?");
		this.___viewResolved.onStateVerified();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VerifyStateImpl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VisitHyperlink(Infragistics.Documents.Excel.WorksheetHyperlink)" />*/
	_visitHyperlink: function (hyperlink) {
		var $self = this;
		var args = new $.ig.SpreadsheetHyperlinkExecutingEventArgs(hyperlink);
		var wbPath = this.workbook() != null ? this.workbook()._loadingPath() : null;
		if (!String.isNullOrEmpty(wbPath)) {
			args.workingDirectory($.ig.IOPath.prototype.getDirectoryName(wbPath));
		}
		this._onHyperlinkExecuting(args);
		if (args.cancel() == false) {
			var selection = null;
			if (hyperlink.targetNamedReference() != null) {
				var row = hyperlink.worksheet().rows().item(0);
				var cellRef = row._getCellCalcReference(0);
				var reference = hyperlink.targetNamedReference()._getReferenceHelper(true, cellRef);
				if (reference != null) {
					var $ret = this._tryCreateSelectionSnapshot(reference, selection, 0);
					selection = $ret.p1;
				} else {
					this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkReference, null, null, hyperlink, false));
				}
			} else if (hyperlink.targetRegion() != null) {
				var region = hyperlink.targetRegion();
				var range = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(region._address());
				if (region.worksheet().workbook() == this.workbook()) {
					selection = new $.ig.SelectionSnapshot(region.worksheet(), [ range ], range._upperLeft(), 0);
				} else {
					this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkReference, null, null, hyperlink, false));
				}
			} else if ($.ig.excel.WorksheetCell.prototype.l_op_Inequality(hyperlink.targetCell(), null)) {
				var cell = hyperlink.targetCell();
				if ($.ig.excel.WorksheetCell.prototype.l_op_Inequality(cell, null) && cell.worksheet() != null && cell.worksheet().workbook() == this.workbook()) {
					var range1 = new $.ig.spreadsheet.SpreadsheetCellRange(cell.rowIndex(), cell.columnIndex());
					selection = new $.ig.SelectionSnapshot(cell.worksheet(), [ range1 ], range1._upperLeft(), 0);
				} else {
					this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkReference, null, null, hyperlink, false));
				}
			} else if (hyperlink._isInvalidTargetLocation()) {
				this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkReference, null, null, hyperlink, false));
			} else {
				var targetAddress = hyperlink.targetAddress();
				$.ig.Debug.prototype.assert(typeof hyperlink.target() === 'string');
				if (hyperlink.isSealed() && !String.isNullOrEmpty(targetAddress)) {
					var wb = this.workbook();
					var activeSheet = this.activeWorksheet();
					var isNamedReference;
					var reference1 = (function () { var $ret = wb._parseReference2(targetAddress, wb.cellReferenceMode(), activeSheet, null, 0, isNamedReference, true); isNamedReference = $ret.p5; return $ret.ret; }());
					if (reference1 != null) {
						if (isNamedReference) {
							reference1 = this._getReferenceFromNamedReference(reference1, activeSheet.rows().item(0), 0);
						}
						if (reference1 != null) {
							if (!(function () { var $ret = $self._tryCreateSelectionSnapshot(reference1, selection, 0); selection = $ret.p1; return $ret.ret; }())) {
								this._onUserPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkReference, null, null, hyperlink, false));
							}
						}
					}
				}
				if (selection == null) {
					var visitedHyperlink = false;
					if (!String.isNullOrEmpty(targetAddress)) {
						try {
							this._visitHyperlinkAddress(targetAddress, args.workingDirectory());
							visitedHyperlink = true;
						}
						catch (ex) {
							this._onUserPrompt((function (t1, t2, t3) { return new $.ig.SpreadsheetUserPromptInfo(t1, null, t3, t2, false); }($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkAddress, targetAddress, ex)));
						}
					}
					if (visitedHyperlink) {
						hyperlink._onVisited();
					}
				}
			}
			if (selection != null) {
				this._setSelectionImpl(selection, true);
				hyperlink._onVisited();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VisitHyperlink(Infragistics.Documents.Excel.WorksheetHyperlink)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VisitHyperlinkAddress(System.String, System.String)" />*/
	_visitHyperlinkAddress: function (address, workingDirectory) {
		window.open(address, "_blank");
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::VisitHyperlinkAddress(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Zoom(Infragistics.Controls.Grids.Core.SpreadsheetZoomOperation)" />*/
	_zoom: function (zoom) {
		var $self = this;
		this._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.zoom, function () { $self.___sheetManager._zoom(zoom); }, null, false, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::Zoom(Infragistics.Controls.Grids.Core.SpreadsheetZoomOperation)" />*/
	,
	actionExecuted: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActionExecuted(Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs)" />*/
	_onActionExecuted: function (e) {
		var handler = this.actionExecuted;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActionExecuted(Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs)" />*/
	,
	actionExecuting: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActionExecuting(Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs)" />*/
	_onActionExecuting: function (e) {
		var handler = this.actionExecuting;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActionExecuting(Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseActiveCellChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs)" />*/
	_raiseActiveCellChanged: function (args) {
		this._onActiveCellChanged(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseActiveCellChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs)" />*/
	,
	activeCellChanged: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActiveCellChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs)" />*/
	_onActiveCellChanged: function (e) {
		var handler = this.activeCellChanged;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActiveCellChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseActivePaneChanged(Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs)" />*/
	_raiseActivePaneChanged: function (args) {
		this._onActivePaneChanged(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseActivePaneChanged(Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs)" />*/
	,
	activePaneChanged: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActivePaneChanged(Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs)" />*/
	_onActivePaneChanged: function (e) {
		var handler = this.activePaneChanged;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActivePaneChanged(Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseActiveWorksheetChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs)" />*/
	_raiseActiveWorksheetChanged: function (args) {
		this._onActiveWorksheetChanged(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseActiveWorksheetChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs)" />*/
	,
	activeWorksheetChanged: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActiveWorksheetChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs)" />*/
	_onActiveWorksheetChanged: function (e) {
		var handler = this.activeWorksheetChanged;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnActiveWorksheetChanged(Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeExiting(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs)" />*/
	_raiseEditModeExiting: function (args) {
		this._onEditModeExiting(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeExiting(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs)" />*/
	,
	editModeExiting: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeExiting(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs)" />*/
	_onEditModeExiting: function (e) {
		var handler = this.editModeExiting;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeExiting(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeExited(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs)" />*/
	_raiseEditModeExited: function (args) {
		this._onEditModeExited(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeExited(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs)" />*/
	,
	editModeExited: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeExited(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs)" />*/
	_onEditModeExited: function (e) {
		var handler = this.editModeExited;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeExited(Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeEntering(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs)" />*/
	_raiseEditModeEntering: function (args) {
		this._onEditModeEntering(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeEntering(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs)" />*/
	,
	editModeEntering: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeEntering(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs)" />*/
	_onEditModeEntering: function (e) {
		var handler = this.editModeEntering;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeEntering(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeEntered(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs)" />*/
	_raiseEditModeEntered: function (args) {
		this._onEditModeEntered(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeEntered(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs)" />*/
	,
	editModeEntered: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeEntered(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs)" />*/
	_onEditModeEntered: function (e) {
		var handler = this.editModeEntered;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeEntered(Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeValidationError(Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs)" />*/
	_raiseEditModeValidationError: function (args) {
		this._onEditModeValidationError(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditModeValidationError(Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs)" />*/
	,
	editModeValidationError: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeValidationError(Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs)" />*/
	_onEditModeValidationError: function (e) {
		var handler = this.editModeValidationError;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditModeValidationError(Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditRangePasswordNeeded(Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs)" />*/
	_raiseEditRangePasswordNeeded: function (args) {
		this._onEditRangePasswordNeeded(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseEditRangePasswordNeeded(Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs)" />*/
	,
	editRangePasswordNeeded: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditRangePasswordNeeded(Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs)" />*/
	_onEditRangePasswordNeeded: function (e) {
		var handler = this.editRangePasswordNeeded;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnEditRangePasswordNeeded(Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs)" />*/
	,
	hyperlinkExecuting: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnHyperlinkExecuting(Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs)" />*/
	_onHyperlinkExecuting: function (e) {
		var handler = this.hyperlinkExecuting;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnHyperlinkExecuting(Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseSelectionChanged(Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs)" />*/
	_raiseSelectionChanged: function (args) {
		this._onSelectionChanged(args);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseSelectionChanged(Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs)" />*/
	,
	selectionChanged: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnSelectionChanged(Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs)" />*/
	_onSelectionChanged: function (e) {
		var handler = this.selectionChanged;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnSelectionChanged(Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseUserPromptDisplaying(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo)" />*/
	_raiseUserPromptDisplaying: function (info) {
		this._onUserPromptDisplaying(new $.ig.SpreadsheetUserPromptDisplayingEventArgs(info));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseUserPromptDisplaying(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo)" />*/
	,
	userPromptDisplaying: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnUserPromptDisplaying(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs)" />*/
	_onUserPromptDisplaying: function (e) {
		var handler = this.userPromptDisplaying;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnUserPromptDisplaying(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseWorkbookDirtied()" />*/
	_raiseWorkbookDirtied: function () {
		this._onWorkbookDirtied(new $.ig.SpreadsheetWorkbookDirtiedEventArgs());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::RaiseWorkbookDirtied()" />*/
	,
	workbookDirtied: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnWorkbookDirtied(Infragistics.Controls.Grids.Core.SpreadsheetWorkbookDirtiedEventArgs)" />*/
	_onWorkbookDirtied: function (e) {
		var handler = this.workbookDirtied;
		if (null != handler) {
			handler(this, e);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet::OnWorkbookDirtied(Infragistics.Controls.Grids.Core.SpreadsheetWorkbookDirtiedEventArgs)" />*/
	,
	$type: new $.ig.Type('Spreadsheet', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner" />*/

$.ig.util.defType('Spreadsheet_WorkbookOwner', 'Object', {
	__owner: null,
	init: function (owner) {
		$.ig.Object.prototype.init.call(this);
		this.__owner = owner;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::IsUndoEnabled()" />*/
	isUndoEnabled: function () {
		return this.__owner._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::IsUndoEnabled()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnCellValueChange(Infragistics.Documents.Excel.WorksheetRow, System.Int32)" />*/
	onCellValueChange: function (row, columnIndex) {
		var sheet = this.__owner.___sheetManager;
		if (sheet != null && sheet._worksheet() == row.worksheet()) {
			sheet._onCellValueChanged(row.index(), columnIndex);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnCellValueChange(Infragistics.Documents.Excel.WorksheetRow, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnChange`2(Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner.TContext, System.Boolean, Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner.TValue, Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner.TValue, Infragistics.Documents.Excel.ChangeInfo)" />*/
	onChange$2: function ($tContext, $tValue, context, createUndoUnitIfUndoable, oldValue, newValue, changeInfo) {
		if (createUndoUnitIfUndoable && changeInfo._isUndoable && this.__owner._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled)) {
			var undoUnit = new $.ig.WorkbookUndoUnit$2($tContext, $tValue, context, oldValue, changeInfo);
			this.__owner.___cachedUndoManager.addChange3(undoUnit);
		}
		this.__owner._onWorkbookChange$2($tContext, $tValue, context, changeInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnChange`2(Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner.TContext, System.Boolean, Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner.TValue, Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner.TValue, Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnCustomViewApplied(Infragistics.Documents.Excel.CustomView)" />*/
	onCustomViewApplied: function (view) {
		this.__owner.isFormulaBarVisible(view.windowOptions().showFormulaBar() ? true : false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnCustomViewApplied(Infragistics.Documents.Excel.CustomView)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnTransactionalChangeBegin(Infragistics.Documents.Excel.ExcelChangeAction, System.String)" />*/
	onTransactionalChangeBegin: function (changeType, name) {
		if (this.__owner._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled)) {
			if (this.__owner.___cachedUndoManager.currentTransaction() == null) {
				var transaction = new $.ig.WorksheetUndoTransaction($.ig.SpreadsheetUtilities.prototype.getChangeDescription(changeType, name));
				this.__owner.___cachedUndoManager.startTransaction1(transaction);
				return transaction;
			}
		}
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnTransactionalChangeBegin(Infragistics.Documents.Excel.ExcelChangeAction, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnTransactionalChangeEnd(System.Object)" />*/
	onTransactionalChangeEnd: function (beginReturnValue) {
		var transaction = $.ig.util.cast($.ig.UndoTransaction.prototype.$type, beginReturnValue);
		if (transaction != null) {
			transaction.commit();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnTransactionalChangeEnd(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnWorksheetRemoving(Infragistics.Documents.Excel.Worksheet)" />*/
	onWorksheetRemoving: function (worksheet) {
		if (this.__owner._getFlag($.ig.Spreadsheet_InternalFlags.prototype.isUndoEnabled)) {
			this.__owner._clearUndoHistory(worksheet);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner::OnWorksheetRemoving(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	$type: new $.ig.Type('Spreadsheet_WorkbookOwner', $.ig.Object.prototype.$type, [$.ig.IWorkbookOwner.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_WorkbookOwner" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase" />*/

$.ig.util.defType('RangeWorksheetCellFormatBase', 'PropertyChangeNotifierExtended', {
	___isDirty: false,
	___alignment: 0,
	___bottomBorderColorInfo: null,
	___bottomBorderStyle: 0,
	___diagonalBorderColorInfo: null,
	___diagonalBorders: 0,
	___diagonalBorderStyle: 0,
	___fill: null,
	___font: null,
	___formatString: null,
	___indent: 0,
	___leftBorderColorInfo: null,
	___leftBorderStyle: 0,
	___locked: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___rightBorderColorInfo: null,
	___rightBorderStyle: 0,
	___rotation: 0,
	___shrinkToFit: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___style: null,
	___topBorderColorInfo: null,
	___topBorderStyle: 0,
	___verticalAlignment: 0,
	___wrapText: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	init: function () {
		this.___isDirty = true;
		this.___locked = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___shrinkToFit = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___wrapText = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		this.___font = new $.ig.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont(this);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Alignment()" />*/
	alignment: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.HorizontalCellAlignment.prototype.$type, function (f, v) { f._setAlignment(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.alignment);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.HorizontalCellAlignment.prototype.$type, $self.___alignment); $self.___alignment = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Alignment()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::BottomBorderColorInfo()" />*/
	bottomBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.WorkbookColorInfo.prototype.$type, function (f, v) { f._setBottomBorderColorInfo(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.bottomBorderColorInfo);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.WorkbookColorInfo.prototype.$type, $self.___bottomBorderColorInfo); $self.___bottomBorderColorInfo = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::BottomBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::BottomBorderStyle()" />*/
	bottomBorderStyle: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.CellBorderLineStyle.prototype.$type, function (f, v) { f._setBottomBorderStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.bottomBorderStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.CellBorderLineStyle.prototype.$type, $self.___bottomBorderStyle); $self.___bottomBorderStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::BottomBorderStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::DiagonalBorderColorInfo()" />*/
	diagonalBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.WorkbookColorInfo.prototype.$type, function (f, v) { f._setDiagonalBorderColorInfo(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.diagonalBorderColorInfo);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.WorkbookColorInfo.prototype.$type, $self.___diagonalBorderColorInfo); $self.___diagonalBorderColorInfo = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::DiagonalBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.DiagonalBorders Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::DiagonalBorders()" />*/
	diagonalBorders: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.DiagonalBorders.prototype.$type, function (f, v) { f._setDiagonalBorders(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.diagonalBorders);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.DiagonalBorders.prototype.$type, $self.___diagonalBorders); $self.___diagonalBorders = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.DiagonalBorders Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::DiagonalBorders()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::DiagonalBorderStyle()" />*/
	diagonalBorderStyle: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.CellBorderLineStyle.prototype.$type, function (f, v) { f._setDiagonalBorderStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.diagonalBorderStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.CellBorderLineStyle.prototype.$type, $self.___diagonalBorderStyle); $self.___diagonalBorderStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::DiagonalBorderStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Fill()" />*/
	fill: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.CellFill.prototype.$type, function (f, v) { f._setFill(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fill);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.CellFill.prototype.$type, $self.___fill); $self.___fill = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Fill()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Font()" />*/
	font: function () {
		return $_0(this.___font);
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Font()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatOptions Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions()" />*/
	formatOptions: function (value) {
		if (arguments.length === 1) {
			throw new $.ig.NotSupportedException(1);
			return value;
		} else {
			return $.ig.excel.WorksheetCellFormatOptions.all;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatOptions Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::FormatString()" />*/
	formatString: function (value) {
		if (arguments.length === 1) {
			this._setField$1(String, function (f, v) { f._setFormatString(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.formatString);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1(String, $self.___formatString); $self.___formatString = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::FormatString()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Indent()" />*/
	indent: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.Number.prototype.$type, function (f, v) { f._setIndent(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.indent);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.Number.prototype.$type, $self.___indent); $self.___indent = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Indent()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::IsDirty()" />*/
	_isDirty: function () {
		return this.___isDirty;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::IsDirty()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::LeftBorderColorInfo()" />*/
	leftBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.WorkbookColorInfo.prototype.$type, function (f, v) { f._setLeftBorderColorInfo(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.leftBorderColorInfo);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.WorkbookColorInfo.prototype.$type, $self.___leftBorderColorInfo); $self.___leftBorderColorInfo = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::LeftBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::LeftBorderStyle()" />*/
	leftBorderStyle: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.CellBorderLineStyle.prototype.$type, function (f, v) { f._setLeftBorderStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.leftBorderStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.CellBorderLineStyle.prototype.$type, $self.___leftBorderStyle); $self.___leftBorderStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::LeftBorderStyle()" />*/
	,
	locked: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._locked$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._locked$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Locked()" />*/
	_locked$i: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), function (f, v) { f._setLocked(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.locked);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $self.___locked); $self.___locked = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Locked()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::RightBorderColorInfo()" />*/
	rightBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.WorkbookColorInfo.prototype.$type, function (f, v) { f._setRightBorderColorInfo(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.rightBorderColorInfo);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.WorkbookColorInfo.prototype.$type, $self.___rightBorderColorInfo); $self.___rightBorderColorInfo = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::RightBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::RightBorderStyle()" />*/
	rightBorderStyle: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.CellBorderLineStyle.prototype.$type, function (f, v) { f._setRightBorderStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.rightBorderStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.CellBorderLineStyle.prototype.$type, $self.___rightBorderStyle); $self.___rightBorderStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::RightBorderStyle()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Rotation()" />*/
	rotation: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.Number.prototype.$type, function (f, v) { f._setRotation(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.rotation);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.Number.prototype.$type, $self.___rotation); $self.___rotation = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Rotation()" />*/
	,
	shrinkToFit: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._shrinkToFit$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._shrinkToFit$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::ShrinkToFit()" />*/
	_shrinkToFit$i: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), function (f, v) { f._setShrinkToFit(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.shrinkToFit);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $self.___shrinkToFit); $self.___shrinkToFit = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::ShrinkToFit()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Style()" />*/
	style: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.WorkbookStyle.prototype.$type, function (f, v) { f._setStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.style);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.WorkbookStyle.prototype.$type, $self.___style); $self.___style = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Style()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::TopBorderColorInfo()" />*/
	topBorderColorInfo: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.WorkbookColorInfo.prototype.$type, function (f, v) { f._setTopBorderColorInfo(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.topBorderColorInfo);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.WorkbookColorInfo.prototype.$type, $self.___topBorderColorInfo); $self.___topBorderColorInfo = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::TopBorderColorInfo()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::TopBorderStyle()" />*/
	topBorderStyle: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.CellBorderLineStyle.prototype.$type, function (f, v) { f._setTopBorderStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.topBorderStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.CellBorderLineStyle.prototype.$type, $self.___topBorderStyle); $self.___topBorderStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellBorderLineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::TopBorderStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::VerticalAlignment()" />*/
	verticalAlignment: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.excel.VerticalCellAlignment.prototype.$type, function (f, v) { f._setVerticalAlignment(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.verticalAlignment);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.excel.VerticalCellAlignment.prototype.$type, $self.___verticalAlignment); $self.___verticalAlignment = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::VerticalAlignment()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Workbook()" />*/
	_workbook: function () {
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Workbook()" />*/
	,
	wrapText: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._wrapText$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._wrapText$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::WrapText()" />*/
	_wrapText$i: function (value) {
		if (arguments.length === 1) {
			this._setField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), function (f, v) { f._setWrapText(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.wrapText);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self._getField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $self.___wrapText); $self.___wrapText = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::WrapText()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	_setBorders: function (borders, borderColor, borderStyle) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setFormatting: function (source) {
		this._setField$1($.ig.excel.IWorksheetCellFormat.prototype.$type, function (f, v) { f.setFormatting(v); }, source, $.ig.CellFormatValue.prototype.allFormattingProperties);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Dirty(System.Boolean)" />*/
	_dirty: function (sendChangeNotification) {
		if (this.___isDirty == false) {
			this.___isDirty = true;
			if (sendChangeNotification) {
				this._sendChangeNotification();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::Dirty(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SendChangeNotification()" />*/
	_sendChangeNotification: function () {
		this.onPropertyChanged(String.empty());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SendChangeNotification()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.IWorksheetCellFormat Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::GetResolvedFormat()" />*/
	_getResolvedFormat: function () {
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.IWorksheetCellFormat Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::GetResolvedFormat()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase.T Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::GetField`1(Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase.T)" />*/
	_getField$1: function ($t, member) {
		if (this.___isDirty) {
			this.___isDirty = false;
			var fmt = this._getResolvedFormat() || $.ig.RangeWorksheetCellFormatBase_EmptyFormat.prototype._instance;
			this._setFormattingImpl(fmt);
		}
		return {
			ret: member,
			p0: member
		};
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase.T Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::GetField`1(Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetField`1(System.Action, Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase.T, Infragistics.Documents.Excel.CellFormatValue)" />*/
	_setField$1: function ($t, setter, value, property) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetField`1(System.Action, Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase.T, Infragistics.Documents.Excel.CellFormatValue)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetFormattingImpl(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	_setFormattingImpl: function (source) {
		$.ig.CoreUtilities.prototype.validateNotNull1(source, "source");
		this.___alignment = source.alignment();
		this.___bottomBorderColorInfo = source.bottomBorderColorInfo();
		this.___bottomBorderStyle = source.bottomBorderStyle();
		this.___diagonalBorderColorInfo = source.diagonalBorderColorInfo();
		this.___diagonalBorders = source.diagonalBorders();
		this.___diagonalBorderStyle = source.diagonalBorderStyle();
		this.___fill = source.fill();
		this.___formatString = source.formatString();
		this.___indent = source.indent();
		this.___leftBorderColorInfo = source.leftBorderColorInfo();
		this.___leftBorderStyle = source.leftBorderStyle();
		this.___locked = source._locked$i();
		this.___rightBorderColorInfo = source.rightBorderColorInfo();
		this.___rightBorderStyle = source.rightBorderStyle();
		this.___rotation = source.rotation();
		this.___shrinkToFit = source._shrinkToFit$i();
		this.___style = source.style();
		this.___topBorderColorInfo = source.topBorderColorInfo();
		this.___topBorderStyle = source.topBorderStyle();
		this.___verticalAlignment = source.verticalAlignment();
		this.___wrapText = source._wrapText$i();
		this.___font._setFontFormattingImpl(source.font());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::SetFormattingImpl(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::ToColor(Infragistics.Documents.Excel.WorkbookColorInfo)" />*/
	_toColor: function (colorInfo) {
		return $.ig.WorkbookFontSnapshot.prototype._toColor(colorInfo, this._workbook());
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::ToColor(Infragistics.Documents.Excel.WorkbookColorInfo)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::ToColorInfo(System.Windows.Media.Color)" />*/
	_toColorInfo: function (color) {
		color = $.ig.ExcelUtils.prototype.removeAlphaChannel(color);
		return $.ig.ExcelUtils.prototype.toColorInfo(color);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase::ToColorInfo(System.Windows.Media.Color)" />*/
	,
	$type: new $.ig.Type('RangeWorksheetCellFormatBase', $.ig.PropertyChangeNotifierExtended.prototype.$type, [$.ig.excel.IWorksheetCellFormat.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat" />*/

$.ig.util.defType('Spreadsheet_SelectionWorksheetCellFormat', 'RangeWorksheetCellFormatBase', {
	___spreadsheet: null,
	init: function (spreadsheet) {
		$.ig.RangeWorksheetCellFormatBase.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(spreadsheet);
		this.___spreadsheet = spreadsheet;
	},
	/*<BeginMethod Name="Infragistics.Documents.Excel.IWorksheetCellFormat Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::GetResolvedFormat()" />*/
	_getResolvedFormat: function () {
		var selection = this.___spreadsheet.activeSelection();
		if (selection != null) {
			var cell = selection.activeCell();
			var sheet = this.___spreadsheet.___sheetManager;
			if (sheet != null) {
				var row = sheet._worksheet().rows()._getIfCreated(cell.row());
				return $_1(new $.ig.ReadOnlyResolvedWorksheetCellFormatData(sheet._worksheet()._getCellFormatElementReadOnly(row, cell.column())));
			}
		}
		return $_1(null);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.IWorksheetCellFormat Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::GetResolvedFormat()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	_setBorders: function (borders, borderColor, borderStyle) {
		var sheet = this.___spreadsheet.___sheetManager;
		if (sheet == null || sheet.activePane() == null) {
			return;
		}
		var selection = sheet.activePane().selection();
		this.___spreadsheet._executeActionWithUndo($.ig.SpreadsheetTransactionOperation.prototype.borders, function () { sheet._setBorders(selection.cellRanges(), borders, borderColor, borderStyle); }, null, false, null, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::SetField`1(System.Action, Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat.T, Infragistics.Documents.Excel.CellFormatValue)" />*/
	_setField$1: function ($t, setter, value, property) {
		var operation = $.ig.SpreadsheetTransactionOperation.prototype.formatCells;
		switch (property) {
			case $.ig.CellFormatValue.prototype.wrapText:
				operation = $.ig.SpreadsheetTransactionOperation.prototype.wrapText;
				break;
			case $.ig.CellFormatValue.prototype.fontBold:
				operation = $.ig.SpreadsheetTransactionOperation.prototype.bold;
				break;
			case $.ig.CellFormatValue.prototype.fontItalic:
				operation = $.ig.SpreadsheetTransactionOperation.prototype.italic;
				break;
			case $.ig.CellFormatValue.prototype.fontStrikeout:
				operation = $.ig.SpreadsheetTransactionOperation.prototype.strikethrough;
				break;
			case $.ig.CellFormatValue.prototype.fontUnderlineStyle:
				operation = $.ig.SpreadsheetTransactionOperation.prototype.font;
				break;
			case $.ig.CellFormatValue.prototype.fontColorInfo:
			case $.ig.CellFormatValue.prototype.fontHeight:
			case $.ig.CellFormatValue.prototype.fontName:
			case $.ig.CellFormatValue.prototype.fontSuperscriptSubscriptStyle:
			case $.ig.CellFormatValue.prototype.fontFormattingProperties:
				operation = $.ig.SpreadsheetTransactionOperation.prototype.font;
				break;
			default:
				if (property != 0) {
					if ((property & ~$.ig.CellFormatValue.prototype.fontFormattingProperties) == 0) {
						operation = $.ig.SpreadsheetTransactionOperation.prototype.font;
					}
				}
				break;
		}
		this.___spreadsheet._setCellFormatting$1($t, value, setter, operation, property);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::SetField`1(System.Action, Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat.T, Infragistics.Documents.Excel.CellFormatValue)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::Workbook()" />*/
	_workbook: function () {
		return this.___spreadsheet.workbook();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat::Workbook()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_SelectionWorksheetCellFormat', $.ig.RangeWorksheetCellFormatBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_SelectionWorksheetCellFormat" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_SimpleNamedReference" />*/

$.ig.util.defType('Spreadsheet_SimpleNamedReference', 'ValueType', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		this.__region = new $.ig.WorksheetRegionAddress();
		$.ig.ValueType.prototype.init.call(this);
	},
	__reference: null,
	__region: null,
	init1: function (initNumber, reference, region) {
		this.__region = new $.ig.WorksheetRegionAddress();
		$.ig.ValueType.prototype.init.call(this);
		this.__reference = reference;
		this.__region = region;
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.Spreadsheet_SimpleNamedReference::CompareTo(Infragistics.Controls.Grids.Core.Spreadsheet_SimpleNamedReference)" />*/
	compareTo: function (other) {
		return $.ig.util.stringCompare1(this.__reference.name(), other.__reference.name(), $.ig.StringComparison.prototype.currentCultureIgnoreCase);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.Spreadsheet_SimpleNamedReference::CompareTo(Infragistics.Controls.Grids.Core.Spreadsheet_SimpleNamedReference)" />*/
	,
	$type: new $.ig.Type('Spreadsheet_SimpleNamedReference', $.ig.ValueType.prototype.$type, [$.ig.IComparable$1.prototype.$type.specialize(-1)])
}, true);

$.ig.Spreadsheet_SimpleNamedReference.prototype.$type.initSelfReferences();

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_SimpleNamedReference" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NameBoxList" />*/

$.ig.util.defType('Spreadsheet_NameBoxList', 'LazyReadOnlyNotifyCollection$1', {
	___owner: null,
	init: function (owner) {
		$.ig.LazyReadOnlyNotifyCollection$1.prototype.init.call(this, String);
		this.___owner = owner;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NameBoxList::VerifyList(System.Collections.Generic.IList)" />*/
	_verifyList1: function (list) {
		list.clear();
		var wb = this.___owner.workbook();
		if (wb != null) {
			var ws = this.___owner.activeWorksheet();
			var en = wb.namedReferences().getEnumerator();
			while (en.moveNext()) {
				var reference = en.current();
				if (reference.scope() != wb && reference.scope() != ws) {
					continue;
				}
				if (reference._getReferenceHelper(false, null) == null) {
					continue;
				}
				list.add(reference.name());
			}
			var en1 = wb.worksheets().getEnumerator();
			while (en1.moveNext()) {
				var worksheet = en1.current();
				var en2 = worksheet.tables().getEnumerator();
				while (en2.moveNext()) {
					var table = en2.current();
					list.add(table.name());
				}
			}
			if (list.count() > 1) {
				var temp = $.ig.util.cast($.ig.List$1.prototype.$type.specialize(String), list) || new $.ig.List$1(String, 1, list);
				temp.sort1($.ig.StringComparer.prototype.currentCultureIgnoreCase);
				if (temp != list) {
					list.clear();
					var en3 = temp.getEnumerator();
					while (en3.moveNext()) {
						var item = en3.current();
						list.add(item);
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NameBoxList::VerifyList(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NameBoxList::Dirty()" />*/
	_dirty: function () {
		this._dirtyCollection();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NameBoxList::Dirty()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_NameBoxList', $.ig.LazyReadOnlyNotifyCollection$1.prototype.$type.specialize(String))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NameBoxList" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_SynchronizationSuspender" />*/

$.ig.util.defType('Spreadsheet_SynchronizationSuspender', 'Object', {
	___ctrl: null,
	init: function (ctrl) {
		$.ig.Object.prototype.init.call(this);
		this.___ctrl = ctrl;
		ctrl._suspendSynchronization();
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_SynchronizationSuspender::Dispose()" />*/
	dispose: function () {
		if (this.___ctrl != null) {
			var ctrl = this.___ctrl;
			this.___ctrl = null;
			ctrl._resumeSynchronization(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_SynchronizationSuspender::Dispose()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_SynchronizationSuspender', $.ig.Object.prototype.$type, [$.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_SynchronizationSuspender" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullView" />*/

$.ig.util.defType('Spreadsheet_NullView', 'Object', {
	__control: null,
	init: function (spreadsheet) {
		$.ig.Object.prototype.init.call(this);
		this.__control = spreadsheet;
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CreateRenderCache()" />*/
	createRenderCache: function () {
		return new $.ig.Spreadsheet_NullRenderCache();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CreateRenderCache()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::IsInNameBox()" />*/
	isInNameBox: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::IsInNameBox()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::IsScrollLockToggled()" />*/
	isScrollLockToggled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::IsScrollLockToggled()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellUpdateMode Infragistics.Controls.Grids.Core.Spreadsheet_NullView::UpdateEditorValueMode()" />*/
	updateEditorValueMode: function () {
		return $.ig.SpreadsheetActiveCellUpdateMode.prototype.asynchronous;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellUpdateMode Infragistics.Controls.Grids.Core.Spreadsheet_NullView::UpdateEditorValueMode()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::AddCellTextLocations(System.Collections.Generic.Dictionary, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	addCellTextLocations: function (cellTextLocations, pane) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::AddCellTextLocations(System.Collections.Generic.Dictionary, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CloseMenu()" />*/
	closeMenu: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CloseMenu()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager Infragistics.Controls.Grids.Core.Spreadsheet_NullView::GetLayoutManager()" />*/
	getLayoutManager: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager Infragistics.Controls.Grids.Core.Spreadsheet_NullView::GetLayoutManager()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnSheetManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	onSheetManagerChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnSheetManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, Infragistics.Controls.Grids.Core.SpreadsheetPaneManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::RemeasureRootPanel()" />*/
	remeasureRootPanel: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::RemeasureRootPanel()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnNameBoxValueChanged()" />*/
	onNameBoxValueChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnNameBoxValueChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnNameBoxWidthChanged()" />*/
	onNameBoxWidthChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnNameBoxWidthChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::HasKeyboardFocusWithin()" />*/
	hasKeyboardFocusWithin: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::HasKeyboardFocusWithin()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::Focus()" />*/
	focus: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::Focus()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnHasPendingChangeNotification()" />*/
	onHasPendingChangeNotification: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnHasPendingChangeNotification()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnDataObjectPasting(Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs)" />*/
	onDataObjectPasting: function (args) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnDataObjectPasting(Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::NotifyCanExecuteChanged()" />*/
	notifyCanExecuteChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::NotifyCanExecuteChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnStateVerified()" />*/
	onStateVerified: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::OnStateVerified()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShouldIncludeClipboardFormat(System.Windows.IDataObject, System.String)" />*/
	shouldIncludeClipboardFormat: function (dataObject, dataFormat) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShouldIncludeClipboardFormat(System.Windows.IDataObject, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShouldCopyToClipboard(System.Windows.IDataObject, System.Boolean)" />*/
	shouldCopyToClipboard: function (dataObject, isDragDrop) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShouldCopyToClipboard(System.Windows.IDataObject, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowSelectAllContextMenu(System.Object, System.Windows.Point)" />*/
	showSelectAllContextMenu: function (context, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowSelectAllContextMenu(System.Object, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea, System.Windows.Point)" />*/
	ShowPaneContextMenu: function (pane, area, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Windows.Point)" />*/
	ShowHeaderContextMenu: function (scrollRegion, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Windows.Point)" />*/
	ShowTabContextMenu: function (tab, relativePoint) {
		relativePoint = $.ig.util.pointFromLiteral(relativePoint);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowContextMenu(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CreateCellEditManager()" />*/
	createCellEditManager: function () {
		return new $.ig.Spreadsheet_NullCellEditManager(this.__control);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CreateCellEditManager()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CreateTabEditManager()" />*/
	createTabEditManager: function () {
		return new $.ig.Spreadsheet_NullTabEditManager(this.__control);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabEditManager Infragistics.Controls.Grids.Core.Spreadsheet_NullView::CreateTabEditManager()" />*/
	,
	/*<BeginMethod Name="System.Windows.MessageBoxResult Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowMessageBox(System.String, System.String, System.Windows.MessageBoxButton, System.Windows.MessageBoxImage, System.Windows.MessageBoxResult)" />*/
	showMessageBox: function (message, caption, buttons, icon, defaultResult) {
		return defaultResult;
	}
	/*<EndMethod Name="System.Windows.MessageBoxResult Infragistics.Controls.Grids.Core.Spreadsheet_NullView::ShowMessageBox(System.String, System.String, System.Windows.MessageBoxButton, System.Windows.MessageBoxImage, System.Windows.MessageBoxResult)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::Infragistics.Controls.Grids.Core.ISpreadsheetView.UsesLogicalPixels()" />*/
	usesLogicalPixels: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullView::Infragistics.Controls.Grids.Core.ISpreadsheetView.UsesLogicalPixels()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::VerifyLayout()" />*/
	verifyLayout: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullView::VerifyLayout()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_NullView', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetView.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullView" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager" />*/

$.ig.util.defType('Spreadsheet_NullCellEditManager', 'SpreadsheetCellEditManager', {
	init: function (spreadsheet) {
		$.ig.SpreadsheetCellEditManager.prototype.init.call(this, spreadsheet);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanRedo()" />*/
	canRedo: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanRedo()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanUndo()" />*/
	canUndo: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanUndo()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::IsCapableOfEditMode()" />*/
	isCapableOfEditMode: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::IsCapableOfEditMode()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnEnteredEditMode(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	onEnteredEditMode: function (initialText, disableArrowKeyNavigation, skipShiftFocus, preserveStateForIme) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnEnteredEditMode(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnBringEditCellIntoView()" />*/
	onBringEditCellIntoView: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnBringEditCellIntoView()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	canEnterEditMode: function (pane) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CalculatePreferredEditorWidth()" />*/
	calculatePreferredEditorWidth: function () {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CalculatePreferredEditorWidth()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CreateEditFont()" />*/
	createEditFont: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CreateEditFont()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	canExecuteCommand: function (command) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnExitedEditMode()" />*/
	onExitedEditMode: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnExitedEditMode()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::GetCurrentValueOverride()" />*/
	getCurrentValueOverride: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::GetCurrentValueOverride()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	executeCommand: function (command, canRaiseCommandEvents) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::Initialize()" />*/
	initialize: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::Initialize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::InitializeNotInEditCellValue()" />*/
	initializeNotInEditCellValue: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::InitializeNotInEditCellValue()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnCellEditModeChanged()" />*/
	onCellEditModeChanged: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::OnCellEditModeChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::PositionCaret(System.Windows.Point, System.Boolean)" />*/
	positionCaret: function (relativePt, captureMouse) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::PositionCaret(System.Windows.Point, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::UpdateFormulaText()" />*/
	updateFormulaText: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager::UpdateFormulaText()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_NullCellEditManager', $.ig.SpreadsheetCellEditManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullCellEditManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager" />*/

$.ig.util.defType('Spreadsheet_NullTabEditManager', 'SpreadsheetTabEditManager', {
	init: function (ss) {
		$.ig.SpreadsheetTabEditManager.prototype.init.call(this, ss);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::IsEditingSupported()" />*/
	isEditingSupported: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::IsEditingSupported()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::CanEditTab(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	canEditTab: function (tab) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::CanEditTab(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::GetCurrentEditText()" />*/
	getCurrentEditText: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::GetCurrentEditText()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::OnEnteredEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Int32)" />*/
	onEnteredEditMode: function (tab, initialText, maxLength) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::OnEnteredEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.String, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::OnExitedEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Boolean)" />*/
	onExitedEditMode: function (tab, skipChangeFocus) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::OnExitedEditMode(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::ShouldSkipExitEditPrompts(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	shouldSkipExitEditPrompts: function (tab) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::ShouldSkipExitEditPrompts(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::SelectAllText()" />*/
	selectAllText: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager::SelectAllText()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_NullTabEditManager', $.ig.SpreadsheetTabEditManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullTabEditManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullSpreadsheetText" />*/

$.ig.util.defType('Spreadsheet_NullSpreadsheetText', 'SpreadsheetText', {
	init: function () {
		$.ig.SpreadsheetText.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullSpreadsheetText::Height()" />*/
	height: function () {
		return 0;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullSpreadsheetText::Height()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullSpreadsheetText::Width()" />*/
	width: function () {
		return 0;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullSpreadsheetText::Width()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_NullSpreadsheetText', $.ig.SpreadsheetText.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullSpreadsheetText" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache" />*/

$.ig.util.defType('SpreadsheetRenderCache', 'Object', {
	__measureCount: 0,
	__shortCachedResources: null,
	__longCachedResources: null,
	__measureTextProvider: null,
	__disposableCache: null,
	_shouldRemeasureAfterZoomLevelChanged: false,
	init: function (shouldRemeasureAfterZoomLevelChanged) {
		$.ig.Object.prototype.init.call(this);
		this._shouldRemeasureAfterZoomLevelChanged = shouldRemeasureAfterZoomLevelChanged;
		this.__shortCachedResources = new $.ig.Dictionary$2($.ig.Object.prototype.$type, $.ig.Object.prototype.$type, 0);
		this.__longCachedResources = new $.ig.Dictionary$2($.ig.Object.prototype.$type, $.ig.Object.prototype.$type, 0);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::IsInMeasure()" />*/
	isInMeasure: function () {
		return this.__measureCount > 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::IsInMeasure()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::Workbook()" />*/
	workbook: function () {
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::Workbook()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::BeginMeasure()" />*/
	beginMeasure: function () {
		this.__measureCount++;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::BeginMeasure()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CacheResource`1(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T, System.Object)" />*/
	cacheResource$1: function ($t, isShortTerm, value, key) {
		return this.cacheResource$11($t, isShortTerm ? this.__shortCachedResources : this.__longCachedResources, value, key != null ? key : $t);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CacheResource`1(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T, System.Object)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CacheResource`1(System.Collections.Generic.Dictionary, Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T, System.Object)" />*/
	cacheResource$11: function ($t, dictionary, value, key) {
		$.ig.Debug.prototype.assert1(!dictionary.containsKey(key), "Already have a cached item for this key:" + key);
		dictionary.item(key, value);
		return value;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CacheResource`1(System.Collections.Generic.Dictionary, Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T, System.Object)" />*/
	,
	__cachedHeaderFont: null,
	__cachedHeaderFontMode: 0,
	__cachedHeaderZoom: 0,
	__cachedHeaderHeight: 0,
	__cachedHeaderPixelY: 0,
	__cachedHeaderWidthIndex: 0,
	__cachedHeaderWidth: 0,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateColumnHeaderHeight(Infragistics.Documents.Excel.Worksheet, System.Double)" />*/
	calculateColumnHeaderHeight1: function (worksheet, pixelSizeY) {
		if (worksheet == null) {
			return 0;
		}
		return this.calculateColumnHeaderHeight(worksheet.workbook(), worksheet.displayOptions().magnificationInNormalView(), pixelSizeY);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateColumnHeaderHeight(Infragistics.Documents.Excel.Worksheet, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateColumnHeaderHeight(Infragistics.Documents.Excel.Workbook, System.Int32, System.Double)" />*/
	calculateColumnHeaderHeight: function (wb, magnification, pixelSizeY) {
		if (wb == null) {
			return 0;
		}
		var zoom = magnification / 100;
		var mode = wb.cellReferenceMode();
		var normalFormat = wb.styles().normalStyle()._styleFormatInternal();
		var newFont = this.__cachedHeaderFont == null ? new $.ig.WorkbookFontSnapshot(normalFormat) : this.__cachedHeaderFont._create(normalFormat);
		if (this.__cachedHeaderFont != newFont || this.__cachedHeaderFontMode != mode || this.__cachedHeaderZoom != zoom || this.__cachedHeaderPixelY != pixelSizeY) {
			this.__cachedHeaderFont = newFont;
			this.__cachedHeaderFontMode = mode;
			this.__cachedHeaderZoom = zoom;
			this.__cachedHeaderWidthIndex = -1;
			this.__cachedHeaderPixelY = pixelSizeY;
			var text = mode == $.ig.excel.CellReferenceMode.a1 ? $.ig.SpreadsheetPaneManager.prototype._getColumnHeaderTextA1(0) : $.ig.SpreadsheetPaneManager.prototype._getColumnHeaderTextR1C1(0);
			var extent = this.calculateHeaderTextHeight(this.__cachedHeaderFont, this.__cachedHeaderZoom, text) * this.__cachedHeaderZoom;
			extent += $.ig.SpreadsheetUtilities.prototype.extraHeaderPadding * pixelSizeY;
			extent += pixelSizeY;
			this.__cachedHeaderHeight = extent;
		}
		return this.__cachedHeaderHeight;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateColumnHeaderHeight(Infragistics.Documents.Excel.Workbook, System.Int32, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateRowHeaderWidth(System.Int32, Infragistics.Documents.Excel.Worksheet, System.Double)" />*/
	calculateRowHeaderWidth: function (maxRowIndex, worksheet, pixelSizeX) {
		if (maxRowIndex < $.ig.SpreadsheetUtilities.prototype.minHeaderIndexForMeasure) {
			maxRowIndex = $.ig.SpreadsheetUtilities.prototype.minHeaderIndexForMeasure;
		}
		if (this.__cachedHeaderWidthIndex != maxRowIndex) {
			this.__cachedHeaderWidthIndex = maxRowIndex;
			var text = $.ig.SpreadsheetPaneManager.prototype._getColumnHeaderTextR1C1(maxRowIndex);
			var extent = this.calculateHeaderTextWidth1(this.__cachedHeaderFont, this.__cachedHeaderZoom, text) * this.__cachedHeaderZoom;
			extent += $.ig.SpreadsheetUtilities.prototype.extraHeaderPadding * pixelSizeX;
			extent += pixelSizeX;
			this.__cachedHeaderWidth = extent;
		}
		return this.__cachedHeaderWidth;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateRowHeaderWidth(System.Int32, Infragistics.Documents.Excel.Worksheet, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::Clear()" />*/
	clear: function () {
		this.__cachedHeaderFont = null;
		this.__cachedHeaderZoom = 0;
		this.__cachedHeaderWidthIndex = -1;
		this.__cachedHeaderPixelY = -2147483648;
		this.__longCachedResources.clear();
		this.releaseShortTermResources();
		this.clearOverride();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::Clear()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::EndMeasure()" />*/
	endMeasure: function () {
		this.__measureCount--;
		if (this.__measureCount == 0) {
			this.onEndMeasure();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::EndMeasure()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetOrCreateDisplayTextMetricsProvider()" />*/
	getOrCreateDisplayTextMetricsProvider: function () {
		if (this.isInMeasure()) {
			if (this.__measureTextProvider == null) {
				this.__measureTextProvider = new $.ig.SpreadsheetRenderCache_MeasureTextMetricsProvider(this.createDisplayTextMetricsProvider(), this.workbook());
			}
			return this.__measureTextProvider;
		} else {
			return this.createDisplayTextMetricsProvider();
		}
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetOrCreateDisplayTextMetricsProvider()" />*/
	,
	/*<BeginMethod Name="System.IDisposable Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetShortTermDisposableCache()" />*/
	getShortTermDisposableCache: function () {
		return this.__disposableCache || (this.__disposableCache = new $.ig.SpreadsheetRenderCache_DisposableCache(this));
	}
	/*<EndMethod Name="System.IDisposable Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetShortTermDisposableCache()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetCachedResource`1(System.Boolean, System.Object)" />*/
	getCachedResource$1: function ($t, isShortTerm, key) {
		return this.getCachedResource$11($t, isShortTerm ? this.__shortCachedResources : this.__longCachedResources, key != null ? key : $t);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetCachedResource`1(System.Boolean, System.Object)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetCachedResource`1(System.Collections.Generic.Dictionary, System.Object)" />*/
	getCachedResource$11: function ($t, dictionary, key) {
		var value;
		var $ret = dictionary.tryGetValue(key, value);
		value = $ret.p1;
		return $.ig.util.castObjTo$t($t, value);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache.T Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetCachedResource`1(System.Collections.Generic.Dictionary, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::OnEndMeasure()" />*/
	onEndMeasure: function () {
		this.releaseShortTermResources();
		if (this.__measureTextProvider != null) {
			var old = this.__measureTextProvider;
			this.__measureTextProvider = null;
			old.__innerProvider.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::OnEndMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::ReleaseShortTermResource(System.Object)" />*/
	releaseShortTermResource: function (key) {
		var $self = this;
		var value;
		if ((function () { var $ret = $self.__shortCachedResources.tryGetValue(key, value); value = $ret.p1; return $ret.ret; }())) {
			if ($.ig.util.cast($.ig.IDisposable.prototype.$type, value) !== null) {
				(value).dispose();
			}
			this.__shortCachedResources.remove(key);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::ReleaseShortTermResource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::ReleaseShortTermResources()" />*/
	releaseShortTermResources: function () {
		var disposableItems = $.ig.Enumerable.prototype.toArray$1($.ig.Object.prototype.$type, this.__shortCachedResources.values());
		this.__shortCachedResources.clear();
		for (var i = 0; i < disposableItems.length; i++) {
			var item = disposableItems[i];
			var disposable = $.ig.util.cast($.ig.IDisposable.prototype.$type, item);
			if (disposable != null) {
				disposable.dispose();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::ReleaseShortTermResources()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.String)" />*/
	calculateHeaderTextWidth: function (scrollRegion, text) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateHeaderTextHeight(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	calculateHeaderTextHeight: function (font, zoomLevel, text) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateHeaderTextHeight(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	calculateHeaderTextWidth1: function (font, zoomLevel, text) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::ClearOverride()" />*/
	clearOverride: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::ClearOverride()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::IsTransparentResource(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	isTransparentResource: function (id) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::IsTransparentResource(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CreateDisplayTextMetricsProvider()" />*/
	createDisplayTextMetricsProvider: function () {
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CreateDisplayTextMetricsProvider()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double)" />*/
	getUnderlineHeight: function (format, dpiY) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CreateSpreadsheetText(Infragistics.Documents.Excel.FormattedString, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	createSpreadsheetText: function (fs, format, availableWidth, textAlignment, wrapText, isVisitedHyperlink, zoomFactor, requiredforeground) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CreateSpreadsheetText(Infragistics.Documents.Excel.FormattedString, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CreateSpreadsheetText(System.String, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	createSpreadsheetText1: function (text, format, availableWidth, textAlignment, wrapText, isVisitedHyperlink, zoomFactor, requiredforeground) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.SpreadsheetRenderCache::CreateSpreadsheetText(System.String, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	,
	$type: new $.ig.Type('SpreadsheetRenderCache', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache" />*/

$.ig.util.defType('Spreadsheet_NullRenderCache', 'SpreadsheetRenderCache', {
	__workbook: null,
	init: function () {
		$.ig.SpreadsheetRenderCache.prototype.init.call(this, false);
		this.__workbook = new $.ig.excel.Workbook();
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CalculateHeaderTextWidth(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.String)" />*/
	calculateHeaderTextWidth: function (scrollRegion, text) {
		$.ig.Debug.prototype.fail("We shouldn't be using the null render cache");
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CalculateHeaderTextWidth(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CalculateHeaderTextHeight(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	calculateHeaderTextHeight: function (font, zoomLevel, text) {
		$.ig.Debug.prototype.fail("We shouldn't be using the null render cache");
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CalculateHeaderTextHeight(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CalculateHeaderTextWidth(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	calculateHeaderTextWidth1: function (font, zoomLevel, text) {
		$.ig.Debug.prototype.fail("We shouldn't be using the null render cache");
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CalculateHeaderTextWidth(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::ClearOverride()" />*/
	clearOverride: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::ClearOverride()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::IsTransparentResource(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	isTransparentResource: function (id) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::IsTransparentResource(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CreateDisplayTextMetricsProvider()" />*/
	createDisplayTextMetricsProvider: function () {
		return $.ig.excel.Workbook.prototype._createDefaultTextMetricsProvider(this.__workbook);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CreateDisplayTextMetricsProvider()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CreateSpreadsheetText(Infragistics.Documents.Excel.FormattedString, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	createSpreadsheetText: function (fs, format, availableWidth, textAlignment, wrapText, isVisitedHyperlink, zoomFactor, foreground) {
		return new $.ig.Spreadsheet_NullSpreadsheetText();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CreateSpreadsheetText(Infragistics.Documents.Excel.FormattedString, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CreateSpreadsheetText(System.String, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	createSpreadsheetText1: function (text, format, availableWidth, textAlignment, wrapText, isVisitedHyperlink, zoomFactor, foreground) {
		return new $.ig.Spreadsheet_NullSpreadsheetText();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::CreateSpreadsheetText(System.String, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double)" />*/
	getUnderlineHeight: function (format, dpiY) {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::Workbook()" />*/
	workbook: function () {
		return this.__workbook;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache::Workbook()" />*/
	,
	$type: new $.ig.Type('Spreadsheet_NullRenderCache', $.ig.SpreadsheetRenderCache.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.Spreadsheet_NullRenderCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy" />*/

$.ig.util.defType('SpreadsheetDOMEventProxy', 'CanvasGestureDOMEventProxy', {
	___eventNS: null,
	___spreadsheet: null,
	init: function (spreadsheet, DOMEventSource, renderer) {
		var $self = this;
		this.___eventNS = null;
		$.ig.CanvasGestureDOMEventProxy.prototype.init.call(this, DOMEventSource, renderer);
		this.___spreadsheet = spreadsheet;
		this.shouldInteract(function (pt) {
			if ($.ig.SpreadsheetDOMEventProxy.prototype._isInteractiveNativeEvent($self.originalEvent())) {
				return false;
			}
			if ($self.___spreadsheet._isNameBoxDroppedDown()) {
				return false;
			}
			var target = $self.originalEvent().target;
			if (target != null && $self.___spreadsheet._isWithinContextMenu(target)) {
				return false;
			}
			return true;
		});
	},
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::EventNS()" />*/
	_eventNS: function () {
		if (this.___eventNS == null) {
			$.ig.SpreadsheetDOMEventProxy.prototype.___proxyCount++;
			this.___eventNS = ".DOMProxySpreadsheet" + $.ig.SpreadsheetDOMEventProxy.prototype.___proxyCount.toString();
		}
		return this.___eventNS;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::EventNS()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::BindToSourceOverride(System.Object, System.String, System.Collections.Generic.List)" />*/
	bindToSourceOverride: function (objSource, sourceID, toUnbind) {
		if (objSource == this.eventSource()) {
			toUnbind.add(this.eventSource().listen("contextmenu", this._onContextMenu.runOn(this)));
		}
		$.ig.CanvasGestureDOMEventProxy.prototype.bindToSourceOverride.call(this, objSource, sourceID, toUnbind);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::BindToSourceOverride(System.Object, System.String, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::IsInteractiveNativeEvent(System.Object)" />*/
	_isInteractiveNativeEvent: function (originalEvent) {
		var target = originalEvent.target;
		if (target != null) {
			var nodeName = target.nodeName;
			switch (nodeName) {
				case "INPUT":
				case "TEXTAREA":
				case "SELECT":
				case "OPTION":
				case "LI":
				case "UL":
					return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::IsInteractiveNativeEvent(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::IsKeyEvent(System.Object)" />*/
	_isKeyEvent: function (originalEvent) {
		var type = originalEvent.type;
		return typeof type === 'string' && (type).startsWith1("key", $.ig.StringComparison.prototype.invariantCultureIgnoreCase);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::IsKeyEvent(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::OnContextMenu(System.Html.INormalizedEvent)" />*/
	_onContextMenu: function (e) {
		var isKeyboard;
		if (e.originalEvent.pointerType === undefined) {
			isKeyboard = e.button == 0;
		} else if (e.originalEvent.pointerType == "") {
			isKeyboard = true;
		} else {
			isKeyboard = false;
		}
		if (isKeyboard) {
			var pane = this.___spreadsheet.activePane();
			var positionRelativeToActivePane = $.ig.Spreadsheet.prototype._getActiveCellKeyboardContextMenuPosition(this.___spreadsheet.activePane());
			this.___spreadsheet._viewResolved().ShowPaneContextMenu(this.___spreadsheet.activePane(), $.ig.SpreadsheetUtilities.prototype.getCellContextMenuArea(this.___spreadsheet.activeSelection()), positionRelativeToActivePane);
		} else {
			if (this.isFinger(e)) {
				this.updateTouchPosition(e);
			} else {
				this.updateMousePosition(e);
			}
			var x = e.offsetX;
			var y = e.offsetY;
			this.___spreadsheet._element().onContextMenuRequest(this.mousePoint());
		}
		e.preventDefault();
		$.ig.SpreadsheetUtilities.prototype.stopPropagation(e);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::OnContextMenu(System.Html.INormalizedEvent)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::SetFocus(System.Html.INormalizedEvent)" />*/
	setFocus: function (e) {
		if (e.originalEvent != null && $.ig.SpreadsheetDOMEventProxy.prototype._isInteractiveNativeEvent(e.originalEvent)) {
			return;
		}
		if (this.___spreadsheet._isNameBoxDroppedDown()) {
			return;
		}
		if (this.___spreadsheet._isContextMenuOpen()) {
			return;
		}
		$.ig.CanvasGestureDOMEventProxy.prototype.setFocus.call(this, e);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy::SetFocus(System.Html.INormalizedEvent)" />*/
	,
	$type: new $.ig.Type('SpreadsheetDOMEventProxy', $.ig.CanvasGestureDOMEventProxy.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1" />*/

$.ig.util.defType('SpreadsheetLayerContainerElement$1', 'VisualElement', {
	$t: null,
	__interactionManager: null,
	init: function ($t, parent, id) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::InteractionManager()" />*/
	interactionManager: function (value) {
		if (arguments.length === 1) {
			if (value != this.__interactionManager) {
				this.__interactionManager = value;
			}
			return value;
		} else {
			return this.__interactionManager;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::InteractionManager()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		for (var i = 0, count = this.childrenCount(); i < count; i++) {
			var child = this.getChild(i);
			child.setPosition(left, top, width, height);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseEnter: function (input) {
		this.__interactionManager.onMouseEnter(input);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseLeave: function (input) {
		this.__interactionManager.onMouseLeave(input);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		this.__interactionManager.onMouseMove(input);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		return this.__interactionManager.onMouseDown(input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		this.__interactionManager.onMouseUp(input);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetLayerContainerElement$1', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetLayerContainerElement`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics" />*/

$.ig.util.defType('CanvasSpreadsheetGraphics', 'Object', {
	__context: null,
	__renderCache: null,
	__isLineDashSupported: false,
	__lastGridLineColor: $.ig.util.toNullable($.ig.Color.prototype.$type, null),
	__lastGridLineColorString: null,
	__patternCanvas: null,
	init: function (ctx_, renderCache) {
		this.__lastGridLineColorString = null;
		$.ig.Object.prototype.init.call(this);
		this.__isLineDashSupported = ctx_.setLineDash && ctx_.getLineDash;
		this.__context = ctx_;
		this.__renderCache = renderCache;
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::GetFarPixelAdjustment(Infragistics.PixelConverter)" />*/
	getFarPixelAdjustment: function (dpi) {
		return dpi.logicalToDevicePixelFactor() / 2;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::GetFarPixelAdjustment(Infragistics.PixelConverter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Documents.Excel.CellFill, System.Double, System.Double, System.Double, System.Double)" />*/
	fillRectangle3: function (fill, x, y, width, height) {
		if (fill != $.ig.excel.CellFill.prototype.noColor()) {
			var resolvedFill = fill._toResolvedColorFill(this.__renderCache.workbook());
			var patternFill = $.ig.util.cast($.ig.excel.CellFillPattern.prototype.$type, resolvedFill);
			if (patternFill != null) {
				var fillPatternStyle = patternFill.patternStyle();
				var foregroundColor = patternFill.patternColorInfo()._getResolvedColor();
				var backgroundColor = patternFill.backgroundColorInfo()._getResolvedColor();
				switch (patternFill.patternStyle()) {
					case $.ig.excel.FillPatternStyle.none: break;
					case $.ig.excel.FillPatternStyle.solid:
						this.fillRectangle5(backgroundColor.colorString(), x, y, width, height);
						break;
					default:
						var pattern = this.createHatch(patternFill.patternStyle(), foregroundColor, backgroundColor);
						if (pattern != null) {
							this.fillRectangle5(pattern, x, y, width, height);
						}
						break;
				}
			} else {
				var linearGradientFill = $.ig.util.cast($.ig.excel.CellFillLinearGradient.prototype.$type, resolvedFill);
				if (linearGradientFill != null) {
					var gradient = this.createLinearGradient(x, y, width, height, linearGradientFill);
					this.fillRectangle5(gradient, x, y, width, height);
				} else {
					var rectGradientFill = $.ig.util.cast($.ig.excel.CellFillRectangularGradient.prototype.$type, resolvedFill);
					if (rectGradientFill != null) {
						this.fillRectangle4(rectGradientFill, x, y, width, height);
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Documents.Excel.CellFill, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double)" />*/
	fillRectangle1: function (id, x, y, width, height) {
		var color = this.__renderCache.getPrimaryColor(id);
		this.fillRectangle5(color, x, y, width, height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.CellBorderPen, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawLine: function (pen, id, dpiFactor, x1, y1, x2, y2) {
		this.drawLine4(pen, this.__renderCache.getPrimaryColor(id), dpiFactor, x1, y1, x2, y2);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.CellBorderPen, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.CellBorderPen, System.Windows.Media.Color, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawLine1: function (pen, color, dpiFactor, x1, y1, x2, y2) {
		color = $.ig.Color.prototype.create(color);
		this.drawLine4(pen, color.colorString(), dpiFactor, x1, y1, x2, y2);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.CellBorderPen, System.Windows.Media.Color, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(System.Double, System.Windows.Media.Color, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawLine3: function (penWidth, color, dpiFactor, x1, y1, x2, y2) {
		color = $.ig.Color.prototype.create(color);
		this.drawLine4($.ig.CellBorderPen.prototype.thin, color.colorString(), dpiFactor * penWidth, x1, y1, x2, y2);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(System.Double, System.Windows.Media.Color, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawLine2: function (gridLinePen, dpiFactor, x1, y1, x2, y2) {
		if (this.__lastGridLineColorString == null || $.ig.Color.prototype.l_op_Inequality_Lifted(this.__lastGridLineColor, gridLinePen.color())) {
			this.__lastGridLineColor = gridLinePen.color();
			this.__lastGridLineColorString = $.ig.Color.prototype.l_op_Equality_Lifted(gridLinePen.color(), $.ig.util.toNullable($.ig.Color.prototype.$type, null)) ? this.__renderCache.getPrimaryColor($.ig.SpreadsheetResourceId.prototype.automaticGridline) : gridLinePen.color().value().colorString();
		}
		var pen = $.ig.Color.prototype.l_op_Equality_Lifted(gridLinePen.color(), $.ig.util.toNullable($.ig.Color.prototype.$type, null)) ? $.ig.CellBorderPen.prototype.thin : $.ig.CellBorderPen.prototype.hair;
		this.drawLine4(pen, this.__lastGridLineColorString, dpiFactor, x1, y1, x2, y2);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawRectangle(Infragistics.Controls.Grids.Core.CellBorderPen, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawRectangle: function (pen, id, dpiFactor, x, y, width, height) {
		var oldDash = null;
		var oldDashOffset = 0;
		if (this.__isLineDashSupported) {
			oldDash = this.__context.getLineDash();
			var dashPattern = $.ig.SpreadsheetUtilities.prototype.createDashArray(pen) || new Array(0);
			this.__context.setLineDash(dashPattern);
			oldDashOffset = this.__context.lineDashOffset;
			this.__context.lineDashOffset = pen == $.ig.CellBorderPen.prototype.slantedDashDotInner ? 1 : 0;
		}
		this.__context.lineWidth = $.ig.SpreadsheetUtilities.prototype.getPenThickness(pen, dpiFactor);
		this.__context.strokeStyle = this.__renderCache.getPrimaryColor(id);
		this.__context.strokeRect(x, y, width, height);
		if (this.__isLineDashSupported) {
			this.__context.setLineDash(oldDash);
			this.__context.lineDashOffset = oldDashOffset;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawRectangle(Infragistics.Controls.Grids.Core.CellBorderPen, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	fillRectangle2: function (id, x, y, width, height, innerClipX, innerClipY, innerClipWidth, innerClipHeight) {
		var right = x + width;
		var innerClipRight = innerClipX + innerClipWidth;
		var bottom = y + height;
		var innerClipBottom = innerClipY + innerClipHeight;
		var brush = this.__renderCache.getPrimaryColor(id);
		if (x < innerClipX) {
			this.fillRectangle5(brush, x, y, innerClipX - x, height);
		}
		if (right > innerClipRight) {
			this.fillRectangle5(brush, innerClipRight, y, right - innerClipRight, height);
		}
		if (y < innerClipY) {
			this.fillRectangle5(brush, innerClipX, y, innerClipWidth, innerClipY - y);
		}
		if (bottom > innerClipBottom) {
			this.fillRectangle5(brush, innerClipX, innerClipBottom, innerClipWidth, bottom - innerClipBottom);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawEllipse(System.Double, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawEllipse: function (penWidth, id, dpiFactor, x, y, width, height) {
		this.__context.beginPath();
		this.__context.lineWidth = (penWidth * dpiFactor);
		this.__context.strokeStyle = this.__renderCache.getPrimaryColor(id);
		var kappa = 0.5522848;
		var xm = (x + width / 2);
		var ym = (y + height / 2);
		var ox = (width / 2 * kappa);
		var oy = (height / 2 * kappa);
		var xe = (x + width);
		var ye = (y + height);
		this.__context.moveTo(x, ym);
		this.__context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
		this.__context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
		this.__context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
		this.__context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
		this.__context.closePath();
		this.__context.stroke();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawEllipse(System.Double, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Controls.Grids.Core.SpreadsheetImageBackground, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	fillRectangle: function (image, x, y, width, height, rootOffsetX, rootOffsetY) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Controls.Grids.Core.SpreadsheetImageBackground, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawHeaderText(Infragistics.Documents.Excel.IWorkbookFont, System.String, System.Double, System.Double, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double)" />*/
	drawHeaderText: function (font, headerText, x, y, foreground, scaleFactor) {
		scaleFactor = (scaleFactor !== void 0 ? scaleFactor : 1);
		var color = this.__renderCache.getPrimaryColor(foreground);
		this.__context.font = this.__renderCache.createHeaderFontStyle(font, scaleFactor);
		this.__context.textAlign = "center";
		this.__context.textBaseline = "middle";
		this.__context.fillStyle = color;
		this.__context.fillText(headerText, x, y);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawHeaderText(Infragistics.Documents.Excel.IWorkbookFont, System.String, System.Double, System.Double, Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::CreateHatch(Infragistics.Documents.Excel.FillPatternStyle, System.Windows.Media.Color, System.Windows.Media.Color)" />*/
	createHatch: function (patternStyle, foregroundColor, backgroundColor) {
		var patternTemplate = $.ig.SpreadsheetUtilities.prototype.cellFillPatternTemplates.item(patternStyle);
		if (patternTemplate == null) {
			return null;
		}
		var patternHeight = patternTemplate.getLength(0);
		var patternWidth = patternTemplate.getLength(1);
		if (this.__patternCanvas == null) {
			this.__patternCanvas = $("<canvas />")[0];
		}
		var patternContext = this.__patternCanvas.getContext("2d");
		this.__patternCanvas.setAttribute("width", patternWidth);
		this.__patternCanvas.setAttribute("height", patternHeight);
		var img = patternContext.createImageData(patternWidth, patternHeight);;
		var data = img.data;
		var idx = 0;
		for (var row = 0; row < patternHeight; row++) {
			for (var col = 0; col < patternWidth; col++) {
				var c = patternTemplate[row][col] == 1 ? foregroundColor : backgroundColor;
				data[idx++] = c.r();
				data[idx++] = c.g();
				data[idx++] = c.b();
				data[idx++] = c.a();
			}
		}
		patternContext.putImageData(img, 0, 0);;
		return this.__context.createPattern(this.__patternCanvas, "repeat");;
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::CreateHatch(Infragistics.Documents.Excel.FillPatternStyle, System.Windows.Media.Color, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="System.Html.Media.Graphics.Gradient Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::CreateLinearGradient(System.Double, System.Double, System.Double, System.Double, Infragistics.Documents.Excel.CellFillLinearGradient)" />*/
	createLinearGradient: function (x, y, width, height, linearGradientFill) {
		var rads = $.ig.SpreadsheetUtilities.prototype.toRadians(linearGradientFill.angle());
		var r = 0.5 * Math.sqrt(2);
		var ptX1 = 0.5 + r * Math.cos(rads);
		var ptY1 = 0.5 + r * Math.sin(rads);
		rads += Math.PI;
		var ptX2 = 0.5 + r * Math.cos(rads);
		var ptY2 = 0.5 + r * Math.sin(rads);
		ptX1 = $.ig.CoreUtilities.prototype.clamp(ptX1, 0, 1);
		ptY1 = $.ig.CoreUtilities.prototype.clamp(ptY1, 0, 1);
		ptX2 = $.ig.CoreUtilities.prototype.clamp(ptX2, 0, 1);
		ptY2 = $.ig.CoreUtilities.prototype.clamp(ptY2, 0, 1);
		var stops = linearGradientFill.stops();
		return this.createLinearGradient1(x, y, width, height, ptX1, ptY1, ptX2, ptY2, stops);
	}
	/*<EndMethod Name="System.Html.Media.Graphics.Gradient Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::CreateLinearGradient(System.Double, System.Double, System.Double, System.Double, Infragistics.Documents.Excel.CellFillLinearGradient)" />*/
	,
	/*<BeginMethod Name="System.Html.Media.Graphics.Gradient Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::CreateLinearGradient(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Collections.Generic.IList)" />*/
	createLinearGradient1: function (x, y, width, height, ptX1, ptY1, ptX2, ptY2, stops) {
		var x1 = x + (ptX2 * width);
		var y1 = y + (ptY2 * height);
		var x2 = x + (ptX1 * width);
		var y2 = y + (ptY1 * height);
		var gradient = this.__context.createLinearGradient(x1, y1, x2, y2);
		for (var i = 0; i < stops.count(); i++) {
			var stop = stops.item(i);
			gradient.addColorStop(stop.offset(), stop.colorInfo()._color$i().value().colorString());
		}
		return gradient;
	}
	/*<EndMethod Name="System.Html.Media.Graphics.Gradient Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::CreateLinearGradient(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.CellBorderPen, System.String, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	drawLine4: function (pen, color, dpiFactor, x1, y1, x2, y2) {
		this.__context.beginPath();
		var oldDash = null;
		var oldDashOffset = 0;
		if (this.__isLineDashSupported) {
			oldDash = this.__context.getLineDash();
			var dashPattern = $.ig.SpreadsheetUtilities.prototype.createDashArray(pen) || new Array(0);
			this.__context.setLineDash(dashPattern);
			oldDashOffset = this.__context.lineDashOffset;
			this.__context.lineDashOffset = pen == $.ig.CellBorderPen.prototype.slantedDashDotInner ? 1 : 0;
		}
		this.__context.lineWidth = $.ig.SpreadsheetUtilities.prototype.getPenThickness(pen, dpiFactor);
		this.__context.strokeStyle = color;
		this.__context.moveTo(x1, y1);
		this.__context.lineTo(x2, y2);
		this.__context.stroke();
		if (this.__isLineDashSupported) {
			this.__context.setLineDash(oldDash);
			this.__context.lineDashOffset = oldDashOffset;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::DrawLine(Infragistics.Controls.Grids.Core.CellBorderPen, System.String, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(System.Object, System.Double, System.Double, System.Double, System.Double)" />*/
	fillRectangle5: function (brush, x, y, width, height) {
		this.__context.fillStyle = brush;
		this.__context.fillRect(x, y, width, height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(System.Object, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Documents.Excel.CellFillRectangularGradient, System.Double, System.Double, System.Double, System.Double)" />*/
	fillRectangle4: function (fill, targetX, targetY, targetWidth, targetHeight) {
		var height = Math.abs(fill.bottom() - fill.top());
		var width = Math.abs(fill.right() - fill.left());
		var top = fill.top();
		var bottom = Math.max(top, fill.bottom());
		var left = fill.left();
		var right = Math.max(left, fill.right());
		var adjustment = 0.01;
		if (width > 0 && height > 0) {
			var sortedStops = $.ig.Enumerable.prototype.toArray$1($.ig.excel.CellFillGradientStop.prototype.$type, $.ig.Enumerable.prototype.orderBy$2($.ig.excel.CellFillGradientStop.prototype.$type, Number, fill.stops(), function (s) { return s.offset(); }));
			var first = sortedStops[0];
			var centerColor = new $.ig.Color();
			if (sortedStops[1].offset() != first.offset()) {
				centerColor = $.ig.Enumerable.prototype.first$1($.ig.excel.CellFillGradientStop.prototype.$type, $.ig.Enumerable.prototype.orderBy$2($.ig.excel.CellFillGradientStop.prototype.$type, Number, fill.stops(), function (s) { return s.offset(); })).colorInfo()._getResolvedColor();
			} else {
				var firstColors = new $.ig.List$1($.ig.Color.prototype.$type, 0);
				for (var i = 0, count = sortedStops.length; i < count; i++) {
					var stop = sortedStops[i];
					if (stop.offset() != first.offset()) {
						break;
					}
					firstColors.add(stop.colorInfo()._getResolvedColor());
				}
				var r = $.ig.truncate(($.ig.Enumerable.prototype.sum$1($.ig.Color.prototype.$type, firstColors, function (c) { return c.r(); }) / firstColors.count()));
				var g = $.ig.truncate(($.ig.Enumerable.prototype.sum$1($.ig.Color.prototype.$type, firstColors, function (c) { return c.g(); }) / firstColors.count()));
				var b = $.ig.truncate(($.ig.Enumerable.prototype.sum$1($.ig.Color.prototype.$type, firstColors, function (c) { return c.b(); }) / firstColors.count()));
				centerColor = $.ig.Color.prototype.fromArgb(255, r, g, b);
			}
			this.fillRectangle5(centerColor.colorString(), targetX + (left * targetWidth), targetY + (top * targetHeight), width * targetWidth, height * targetHeight);
		}
		if (left > 0) {
			this.__context.beginPath();
			this.__context.moveTo((targetX), (targetY));
			this.__context.lineTo((targetX + (left + adjustment) * targetWidth), (targetY + top * targetHeight));
			this.__context.lineTo((targetX + (left + adjustment) * targetWidth), (targetY + bottom * targetHeight));
			this.__context.lineTo((targetX), (targetY + targetHeight));
			this.__context.closePath();
			this.__context.fillStyle = this.createLinearGradient1(targetX, targetY, targetWidth, targetHeight, 0, 0.5, left, 0.5, fill.stops());
			this.__context.fill();
		}
		if (top > 0) {
			this.__context.beginPath();
			this.__context.moveTo((targetX), (targetY));
			this.__context.lineTo((targetX + left * targetWidth), (targetY + (top + adjustment) * targetHeight));
			this.__context.lineTo((targetX + right * targetWidth), (targetY + (top + adjustment) * targetHeight));
			this.__context.lineTo((targetX + targetWidth), (targetY));
			this.__context.closePath();
			this.__context.fillStyle = this.createLinearGradient1(targetX, targetY, targetWidth, targetHeight, 0.5, 0, 0.5, top, fill.stops());
			this.__context.fill();
		}
		if (right < 1) {
			this.__context.beginPath();
			this.__context.moveTo((targetX + targetWidth), (targetY));
			this.__context.lineTo((targetX + (right - adjustment) * targetWidth), (targetY + top * targetHeight));
			this.__context.lineTo((targetX + (right - adjustment) * targetWidth), (targetY + bottom * targetHeight));
			this.__context.lineTo((targetX + targetWidth), (targetY + targetHeight));
			this.__context.closePath();
			this.__context.fillStyle = this.createLinearGradient1(targetX, targetY, targetWidth, targetHeight, 1, 0.5, right, 0.5, fill.stops());
			this.__context.fill();
		}
		if (bottom < 1) {
			this.__context.beginPath();
			this.__context.moveTo((targetX), (targetY + targetHeight));
			this.__context.lineTo((targetX + left * targetWidth), (targetY + (bottom - adjustment) * targetHeight));
			this.__context.lineTo((targetX + right * targetWidth), (targetY + (bottom - adjustment) * targetHeight));
			this.__context.lineTo((targetX + targetWidth), (targetY + targetHeight));
			this.__context.closePath();
			this.__context.fillStyle = this.createLinearGradient1(targetX, targetY, targetWidth, targetHeight, 0.5, 1, 0.5, bottom, fill.stops());
			this.__context.fill();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics::FillRectangle(Infragistics.Documents.Excel.CellFillRectangularGradient, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('CanvasSpreadsheetGraphics', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetGraphics.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.CanvasSpreadsheetGraphics" />*/

/*<BeginType Name="Infragistics.Controls.Core.IVisualElementVisitor" />*/

$.ig.util.defType('IVisualElementVisitor', 'Object', {
	$type: new $.ig.Type('IVisualElementVisitor', null)
}, true);

/*<EndType Name="Infragistics.Controls.Core.IVisualElementVisitor" />*/

/*<BeginType Name="Infragistics.Controls.Core.VisualElementDomBuilder" />*/

$.ig.util.defType('VisualElementDomBuilder', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.String Infragistics.Controls.Core.VisualElementDomBuilder::ToolTipClass()" />*/
	toolTipClass: function () {
		return "ui-tooltip";
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Core.VisualElementDomBuilder::ToolTipClass()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::CreateAbsoluteDiv(Infragistics.Controls.Core.VisualElement, System.String)" />*/
	createAbsoluteDiv: function (element, className) {
		$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", className, true, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::CreateAbsoluteDiv(Infragistics.Controls.Core.VisualElement, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::CreatePlatformElement(Infragistics.Controls.Core.VisualElement, System.String, System.String, System.Boolean, System.Boolean)" />*/
	createPlatformElement: function (element, elementType, className, absolutePosition, hideOverflow) {
		var parentRenderer = element.__parent._platformObject;
		$.ig.Debug.prototype.assert1(parentRenderer != null, "Can't create an element if the parent renderer isn't there.");
		if (parentRenderer == null) {
			return;
		}
		var wrapper = parentRenderer.createElement(elementType);
		if (className != null) {
			wrapper.addClass(className);
		}
		element._platformObject = parentRenderer.getSubRenderer(wrapper);
		if (absolutePosition) {
			wrapper.setRawStyleProperty("position", "absolute");
		}
		if (hideOverflow) {
			wrapper.setRawStyleProperty("overflow", "hidden");
		}
		parentRenderer.append(wrapper);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::CreatePlatformElement(Infragistics.Controls.Core.VisualElement, System.String, System.String, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::CreatePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	createPlatformObject: function (element) {
		if (element._platformObject == null) {
			switch (element._id) {
				case $.ig.TextBoxVisualElement.prototype.defaultId:
					$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "textarea", this.getTextBoxClass(element), true, false);
					break;
				case $.ig.ComboBoxVisualElement.prototype.defaultId:
					{
						$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "select", null, true, false);
						element._platformObject.rootWrapper().listen("change", function (e) {
							var t = e.originalEvent.target;
							var idx = t.selectedIndex;
							(element).value(idx < 0 ? null : t.options[idx].text);
							(element).onValueChanged();
						});
					}
					break;
				case $.ig.ToolTipVisualElement.prototype.defaultId:
					$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.toolTipClass());
					break;
				case $.ig.ScrollBarVisualElement.prototype.defaultId:
				case $.ig.ScrollBarVisualElement.prototype.defaultFarButtonId:
				case $.ig.ScrollBarVisualElement.prototype.defaultFarTrackId:
				case $.ig.ScrollBarVisualElement.prototype.defaultNearButtonId:
				case $.ig.ScrollBarVisualElement.prototype.defaultNearTrackId:
				case $.ig.ScrollBarVisualElement.prototype.defaultThumbId:
					$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.getScrollBarClass(element));
					break;
				default:
				case $.ig.ButtonVisualElement.prototype.defaultButtonId:
				case $.ig.RepeatButtonVisualElement.prototype.defaultRepeatButtonId:
				case $.ig.ToggleButtonVisualElement.prototype.defaultToggleButtonId:
					$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, null);
					break;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::CreatePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Core.VisualElementDomBuilder::GetScrollBarClass(Infragistics.Controls.Core.VisualElement)" />*/
	getScrollBarClass: function (element) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Core.VisualElementDomBuilder::GetScrollBarClass(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Core.VisualElementDomBuilder::GetTextBoxClass(Infragistics.Controls.Core.VisualElement)" />*/
	getTextBoxClass: function (element) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Core.VisualElementDomBuilder::GetTextBoxClass(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeComboBox(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	initializeComboBox: function (element) {
		if (element.hasItemsChanged()) {
			element.hasItemsChanged(false);
			var root = element._platformObject.rootWrapper();
			this.removeAllItems(element);
			if (element.items() != null) {
				element.hasValueChanged(false);
				var en = element.items().getEnumerator();
				while (en.moveNext()) {
					var str = en.current();
					var opt = element._platformObject.createElement("option");
					if (str == element.value()) {
						opt.setAttribute("selected", "true");
					}
					opt.setText(str);
					$(opt.getNativeElement()).bind("click", function (e) {
						(element).value($(this).prop("text"));
						(element).onValueChanged();
					});
					root.append(opt);
				}
			}
		}
		if (element.hasValueChanged()) {
			element.hasValueChanged(false);
			var ele = element._platformObject.rootWrapper().getNativeElement();
			var jEle = $(ele);
			var idx = -1;
			if (element.items() != null && element.items().count() > 0 && !String.isNullOrEmpty(element.value())) {
				jEle.val(element.value());
			} else {
				jEle.val([]);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeComboBox(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeTextBox(Infragistics.Controls.Core.TextBoxVisualElement)" />*/
	initializeTextBox: function (element) {
		if (element.hasTextChanged()) {
			element.hasTextChanged(false);
			element._platformObject.rootWrapper().setProperty("value", (function ($t) { return $t != null ? $t : ""; }(element.text())));
		}
		if (element.hasLineCountChanged()) {
			element.hasLineCountChanged(false);
			element._platformObject.rootWrapper().setProperty("rows", element.lineCount());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeTextBox(Infragistics.Controls.Core.TextBoxVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeToggleButton(Infragistics.Controls.Core.ToggleButtonVisualElement)" />*/
	initializeToggleButton: function (element) {
		if (element.hasIsCheckedChanged()) {
			element.hasIsCheckedChanged(false);
			if (element.isChecked()) {
				element._platformObject.rootWrapper().removeClass("Off");
			} else {
				element._platformObject.rootWrapper().addClass("Off");
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeToggleButton(Infragistics.Controls.Core.ToggleButtonVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeToolTip(Infragistics.Controls.Core.ToolTipVisualElement)" />*/
	initializeToolTip: function (element) {
		if (element.hasTextChanged()) {
			element.hasTextChanged(false);
			element._platformObject.rootWrapper().setText((function ($t) { return $t != null ? $t : ""; }(element.text())));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::InitializeToolTip(Infragistics.Controls.Core.ToolTipVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::RemoveAllItems(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	removeAllItems: function (element) {
		var root = element._platformObject.rootWrapper();
		for (var i = 0, count = root.getChildCount(); i < count; i++) {
			var oldOpt = root.getChildAt(i);
			$(oldOpt.getNativeElement()).unbind("click");
		}
		root.removeChildren();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::RemoveAllItems(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::RemovePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	removePlatformObject: function (element) {
		element._platformObject.rootWrapper().remove();
		element._platformCache = null;
		element._platformObject = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::RemovePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementDomBuilder::VisitElement(Infragistics.Controls.Core.VisualElement)" />*/
	visitElement: function (element) {
		if (element.isRemoved()) {
			if (element._platformObject != null) {
				this.removePlatformObject(element);
			}
			element.removeFromParent();
			element.dispose();
			return false;
		} else {
			if (element._platformObject == null) {
				this.createPlatformObject(element);
				if (element.isInteractiveElement() && element._platformObject != null) {
					element._platformObject.rootWrapper().addClass($.ig.VisualElementDomBuilder.prototype.interactiveClass);
				}
				if (element._constraint != null && element._platformObject != null) {
					var wrapper = element._platformObject.rootWrapper();
					wrapper.setRawStyleProperty("margin", "0px");
					wrapper.setRawStyleProperty("padding", "0px");
				}
			}
			if (element._platformObject != null) {
				var wrapper1 = element._platformObject.rootWrapper();
				if (element.hasPositionChanged()) {
					element.hasPositionChanged(false);
					var left = element._left;
					var top = element._top;
					if (element.__parent != null) {
						var c = element.__parent._constraint;
						if (c != null) {
							left -= c._borderThickness._left;
							top -= c._borderThickness._top;
						}
					}
					$.ig.VisualElementDomBuilder.prototype.setCachedStyleProperty(element, "left", left + "px");
					$.ig.VisualElementDomBuilder.prototype.setCachedStyleProperty(element, "top", top + "px");
					var width = $.ig.util.isNaN(element._width) ? "auto" : element._width + "px";
					var height = $.ig.util.isNaN(element._height) ? "auto" : element._height + "px";
					$.ig.Debug.prototype.assert1(!element.isHitTestVisible() || (width != "auto" && height != "auto"), "We can't perform hittesting of things without an explicit extent");
					$.ig.VisualElementDomBuilder.prototype.setCachedStyleProperty(element, "width", width);
					$.ig.VisualElementDomBuilder.prototype.setCachedStyleProperty(element, "height", height);
				}
				if (element.hasZIndexChanged()) {
					element.hasZIndexChanged(false);
					wrapper1.setRawStyleProperty("z-index", element.zIndex() == 0 ? "auto" : element.zIndex());
				}
				if (element.hasCursorChanged()) {
					element.hasCursorChanged(false);
					var newCursor = (function ($t) { return $t != null ? $t : ""; }(element.cursor()));
					wrapper1.setRawStyleProperty("cursor", newCursor);
				}
				if (element.hasEnabledChanged()) {
					element.hasEnabledChanged(false);
					if (!element.isEnabled()) {
						wrapper1.addClass($.ig.VisualElementDomBuilder.prototype.disabledClass);
					} else {
						wrapper1.removeClass($.ig.VisualElementDomBuilder.prototype.disabledClass);
					}
				}
				if (element.isInteractiveElement()) {
					if (element.hasMouseOverChanged()) {
						element.hasMouseOverChanged(false);
						if (element.isMouseOver()) {
							wrapper1.addClass($.ig.VisualElementDomBuilder.prototype.hoverClass);
						} else {
							wrapper1.removeClass($.ig.VisualElementDomBuilder.prototype.hoverClass);
						}
					}
					if (element.hasIsActiveChanged()) {
						element.hasIsActiveChanged(false);
						if (element.isActive()) {
							wrapper1.addClass($.ig.VisualElementDomBuilder.prototype.activeClass);
						} else {
							wrapper1.removeClass($.ig.VisualElementDomBuilder.prototype.activeClass);
						}
					}
				}
				switch (element._id) {
					case $.ig.ToolTipVisualElement.prototype.defaultId:
						this.initializeToolTip(element);
						break;
					case $.ig.TextBoxVisualElement.prototype.defaultId:
						this.initializeTextBox(element);
						break;
					case $.ig.ToggleButtonVisualElement.prototype.defaultToggleButtonId:
						this.initializeToggleButton(element);
						break;
					case $.ig.ComboBoxVisualElement.prototype.defaultId:
						this.initializeComboBox(element);
						break;
				}
				if (element.hasIsVisibleChanged()) {
					element.hasIsVisibleChanged(false);
					if (element.isVisible()) {
						wrapper1.show();
					} else {
						wrapper1.hide();
					}
				}
			}
		}
		var hadDescendantChanged = element.hasDescendantChanged();
		element.hasDescendantChanged(false);
		element.hasChanged(false);
		return hadDescendantChanged;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementDomBuilder::VisitElement(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::SetCachedStyleProperty(Infragistics.Controls.Core.VisualElement, System.String, System.String)" />*/
	setCachedStyleProperty: function (element, styleProp, styleValue) {
		if (element != null && element._platformObject != null) {
			if (element._platformCache == null) {
				element._platformCache = new $.ig.Dictionary$2(String, $.ig.Object.prototype.$type, 0);
			}
			if (element._platformCache.item(styleProp) != styleValue) {
				element._platformCache.item(styleProp, styleValue);
				element._platformObject.rootWrapper().setRawStyleProperty(styleProp, styleValue);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementDomBuilder::SetCachedStyleProperty(Infragistics.Controls.Core.VisualElement, System.String, System.String)" />*/
	,
	$type: new $.ig.Type('VisualElementDomBuilder', $.ig.Object.prototype.$type, [$.ig.IVisualElementVisitor.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Core.VisualElementDomBuilder" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder" />*/

$.ig.util.defType('SpreadsheetVisualElementDomBuilder', 'VisualElementDomBuilder', {
	__spreadsheet: null,
	__css: null,
	init: function (spreadsheet) {
		$.ig.VisualElementDomBuilder.prototype.init.call(this);
		this.__spreadsheet = spreadsheet;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreatePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	createPlatformObject: function (element) {
		var $self = this;
		switch (element._id) {
			case $.ig.TextBoxVisualElement.prototype.defaultId:
				if (element.__parent != null && element.__parent._id == $.ig.SpreadsheetElementIds.prototype.formulaBarTextAreaContainer) {
					$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "textarea", null, true, false);
					$.ig.SpreadsheetVisualElementDomBuilder.prototype.initializeFormulaTextArea(element._platformObject.rootWrapper());
					element._platformObject.rootWrapper().listen("focus", function (e) {
						$self.__spreadsheet._cellEditManager().onFormulaBarGotFocus();
					});
				}
				break;
			case $.ig.ToggleButtonVisualElement.prototype.defaultToggleButtonId:
				if (element.__parent != null && element.__parent._id == $.ig.SpreadsheetElementIds.prototype.formulaBarTextAreaContainer) {
					$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.formulaBarExpandButton);
				}
				break;
			case $.ig.ComboBoxVisualElement.prototype.defaultId:
				if (this.isNameBoxCombo(element)) {
					this.createNameBoxCombo(element);
				}
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarButtonContainer:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.formulaBarButtonContainer);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxContainer:
				this.createNameBoxContainer(element);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarTextAreaContainer:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.formulaBarTextAreaContainer);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarTextBoxSplitter:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.formulaBarTextAreaSplitter);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxSplitter:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.nameBoxSplitter);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarEnterButton:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.formulaBarEnterButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBarCancelButton:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.formulaBarCancelButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.formulaBar:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", this.__css.formulaBar, true, false);
				break;
			case $.ig.SpreadsheetElementIds.prototype.inputMessage:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.inputMessage);
				break;
			case $.ig.SpreadsheetElementIds.prototype.inputMessageBody:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", this.__css.inputMessageContent, false, false);
				break;
			case $.ig.SpreadsheetElementIds.prototype.inputMessageTitle:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", this.__css.inputMessageTitle, false, false);
				break;
			case $.ig.SpreadsheetElementIds.prototype.selectAllButton:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.selectAll);
				break;
			case $.ig.SpreadsheetElementIds.prototype.paneSplitter:
				{
					var splitterType = (element)._splitterType;
					var cls = splitterType == $.ig.PaneSplitterType.prototype.splitterIntersection ? this.__css.splitterIntersection : splitterType == $.ig.PaneSplitterType.prototype.rowSplitter ? this.__css.rowSplitter : this.__css.columnSplitter;
					$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, cls);
					break;
				}
			case $.ig.SpreadsheetElementIds.prototype.colSplitterPreview:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.columnSplitterPreview);
				break;
			case $.ig.SpreadsheetElementIds.prototype.rowSplitterPreview:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.rowSplitterPreview);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabItemArea:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.tabItemArea);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabScrollFirst:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.scrollFirstTabButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabScrollPrev:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.scrollPreviousTabButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabScrollNext:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.scrollNextTabButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabScrollLast:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.scrollLastTabButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabActivatePrev:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.activatePreviousHiddenTabButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabItemPanel:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, null);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabActivateNext:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.activateNextHiddenTabButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.addWorksheetButton:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.addNewWorksheetButton);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabAreaSplitter:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.tabAreaSplitter);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabAreaBackground:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.tabAreaBackground);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabAreaBorder:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.tabAreaBorder);
				break;
			case $.ig.SpreadsheetElementIds.prototype.tabDropIndicator:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", this.__css.tabDropIndicator, true, false);
				break;
			case $.ig.SpreadsheetElementIds.prototype.sheetTabItem:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.tabItem);
				(element)._contentPlatformObject = $.ig.SpreadsheetVisualElementDomBuilder.prototype.createTabItemContent(element._platformObject, this.__css);
				break;
			case $.ig.SpreadsheetElementIds.prototype.spreadsheetColumnHeaderContainer:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.columnHeaderArea);
				break;
			case $.ig.SpreadsheetElementIds.prototype.spreadsheetRowHeaderContainer:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.rowHeaderArea);
				break;
			case $.ig.SpreadsheetElementIds.prototype.spreadsheetPaneContainer:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, this.__css.paneArea);
				break;
			case $.ig.SpreadsheetElementIds.prototype.spreadsheetArea:
				$.ig.VisualElementDomBuilder.prototype.createAbsoluteDiv(element, null);
				break;
			case $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer:
				{
					$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "canvas", null, true, false);
					var canvasCache = new $.ig.SpreadsheetVisualElementDomBuilder_CanvasCache();
					canvasCache._canvasContext = element._platformObject.get2DCanvasContext(element._platformObject.rootWrapper());
					(element)._cache = canvasCache;
					break;
				}
			case $.ig.SpreadsheetElementIds.prototype.cellValue:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", null, true, false);
				break;
			case $.ig.SpreadsheetElementIds.prototype.cellValueLayer:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", null, true, true);
				break;
			case $.ig.SpreadsheetElementIds.prototype.cellContainer:
				$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", null, true, false);
				break;
		}
		$.ig.VisualElementDomBuilder.prototype.createPlatformObject.call(this, element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreatePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::GetScrollBarClass(Infragistics.Controls.Core.VisualElement)" />*/
	getScrollBarClass: function (element) {
		var isVertical;
		if (element._id == $.ig.ScrollBarVisualElement.prototype.defaultId) {
			isVertical = (element)._isVertical;
		} else {
			isVertical = element.getAncestor$1($.ig.ScrollBarVisualElement.prototype.$type)._isVertical;
		}
		switch (element._id) {
			case $.ig.ScrollBarVisualElement.prototype.defaultId: return isVertical ? this.__css.scrollBarVertical : this.__css.scrollBarHorizontal;
			case $.ig.ScrollBarVisualElement.prototype.defaultFarButtonId: return isVertical ? this.__css.scrollBarArrowDown : this.__css.scrollBarArrowRight;
			case $.ig.ScrollBarVisualElement.prototype.defaultFarTrackId: return isVertical ? this.__css.scrollBarTrackDown : this.__css.scrollBarTrackRight;
			case $.ig.ScrollBarVisualElement.prototype.defaultNearButtonId: return isVertical ? this.__css.scrollBarArrowUp : this.__css.scrollBarArrowLeft;
			case $.ig.ScrollBarVisualElement.prototype.defaultNearTrackId: return isVertical ? this.__css.scrollBarTrackUp : this.__css.scrollBarTrackLeft;
			case $.ig.ScrollBarVisualElement.prototype.defaultThumbId: return isVertical ? this.__css.scrollBarThumbVertical : this.__css.scrollBarThumbHorizontal;
		}
		return $.ig.VisualElementDomBuilder.prototype.getScrollBarClass.call(this, element);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::GetScrollBarClass(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeComboBox(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	initializeComboBox: function (element) {
		if (this.isNameBoxCombo(element)) {
			var jEle = $(element._platformObject.rootWrapper().getNativeElement());
			var updatedItems = false;
			if (element.hasItemsChanged()) {
				element.hasItemsChanged(false);
				var arr = null;
				if (element.items() != null) {
					arr = new Array(element.items().count());
					element.items().copyTo(arr, 0);
				}
				var old = jEle.igCombo("option", "dataSource");
				if (arr != old) {
					if (arr != null && old != null) {
						if (arr.length != old.length) {
							updatedItems = true;
						} else {
							for (var i = 0; i < arr.length; i++) {
								if (arr[i] != old[i]) {
									updatedItems = true;
									break;
								}
							}
						}
						if (updatedItems) {
							jEle.igCombo("option", "dataSource", arr);
						}
					}
				}
			}
			if (element.hasValueChanged() || updatedItems) {
				element.hasValueChanged(false);
				var oldActive = document.activeElement;
				jEle.igCombo("text", element.value());
				if (oldActive != null && oldActive != document.activeElement) {
					oldActive.focus();
				}
			}
			jEle.igCombo("option", "width", element._width + "px");
			jEle.igCombo("option", "height", element._height + "px");
		}
		$.ig.VisualElementDomBuilder.prototype.initializeComboBox.call(this, element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeComboBox(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeToggleButton(Infragistics.Controls.Core.ToggleButtonVisualElement)" />*/
	initializeToggleButton: function (element) {
		if (element.__parent != null && element.__parent._id == $.ig.SpreadsheetElementIds.prototype.formulaBarTextAreaContainer) {
			if (element.hasIsCheckedChanged()) {
				if (element.isChecked()) {
					element._platformObject.rootWrapper().addClass(this.__css.formulaBarExpandButtonOpen);
				} else {
					element._platformObject.rootWrapper().removeClass(this.__css.formulaBarExpandButtonOpen);
				}
			}
		}
		$.ig.VisualElementDomBuilder.prototype.initializeToggleButton.call(this, element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeToggleButton(Infragistics.Controls.Core.ToggleButtonVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::RemovePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	removePlatformObject: function (element) {
		if (this.isNameBoxCombo(element)) {
			$(element._platformObject.rootWrapper().getNativeElement()).igCombo("destroy");
		}
		$.ig.VisualElementDomBuilder.prototype.removePlatformObject.call(this, element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::RemovePlatformObject(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::ToolTipClass()" />*/
	toolTipClass: function () {
		return this.__css.tooltip;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::ToolTipClass()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::VisitElement(Infragistics.Controls.Core.VisualElement)" />*/
	visitElement: function (element) {
		var hadChanges = element.hasChanged();
		var result = $.ig.VisualElementDomBuilder.prototype.visitElement.call(this, element);
		if (hadChanges && element._platformObject != null) {
			switch (element._id) {
				case $.ig.SpreadsheetElementIds.prototype.inputMessage:
					this.initialize2(element);
					break;
				case $.ig.SpreadsheetElementIds.prototype.sheetTabItem:
					this.initialize3(element);
					break;
				case $.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer:
					this.initialize(element);
					break;
				case $.ig.SpreadsheetElementIds.prototype.cellValue:
					this.initialize1(element);
					break;
			}
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::VisitElement(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCss Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Css()" />*/
	css: function (value) {
		if (arguments.length === 1) {
			this.__css = value;
			return value;
		} else {
			return this.__css;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCss Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Css()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreateNameBoxCombo(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	createNameBoxCombo: function (element) {
		$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", null, true, false);
		var jEle = $(element._platformObject.rootWrapper().getNativeElement());
		jEle.igCombo({ placeHolder: "", filteringType: "none", mode: "editable", autoSelectFirstMatch: false, highlightMatchesMode: null, dropDownAttachedToBody: false, allowCustomValue: true });
		jEle.igCombo("option", "dropDownButtonTitle", "");
		jEle.igCombo("option", "noMatchFoundText", "");
		jEle.igCombo("option", "clearButtonTitle", "");
		jEle.igCombo("option", "autoComplete", true);
		var openingFunc = function (evt, ui) {
			if (evt.originalEvent.type == "keyup") {
				return false;
			}
			return null;
		};
		jEle.igCombo("option", "dropDownOpening", openingFunc);
		var closedFunc = function (evt, ui) {
			var target = evt.originalEvent.target || evt.originalEvent.srcElement;
			if (target.nodeName == "LI" && $(this).igCombo("isSelected", $(target))) {
				var items = $(this).igCombo("itemsFromElement", $(target));
				(element).value(items == null ? null : items.data.text);
				(element).onValueChanged();
			}
			return true;
		};
		jEle.igCombo("option", "dropDownClosed", closedFunc);
		element._platformObject.rootWrapper().listen("keydown", function (e) {
			if (e.which == 13) {
				(element).value($(element._platformObject.rootWrapper().getNativeElement()).igCombo("text"));
				(element).onValueChanged();
				e.preventDefault();
				$.ig.SpreadsheetUtilities.prototype.stopPropagation(e);
			}
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreateNameBoxCombo(Infragistics.Controls.Core.ComboBoxVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreateNameBoxContainer(Infragistics.Controls.Core.VisualElement)" />*/
	createNameBoxContainer: function (element) {
		$.ig.VisualElementDomBuilder.prototype.createPlatformElement(element, "div", this.__css.nameBoxContainer, true, false);
		var wrapper = element._platformObject.rootWrapper();
		wrapper.listen("focusout", function (e) {
			var ss = element.getAncestor$1($.ig.SpreadsheetVisualElement.prototype.$type);
			var newFocus = e.originalEvent.relatedTarget;
			if (ss != null && !(wrapper.getNativeElement()).contains(newFocus)) {
				(element)._nameBox.value(ss._spreadsheet._nameBoxValue());
				(element)._nameBox.hasValueChanged(true);
			}
		});
		wrapper.listen("focusin", function (e) {
			var oldFocus = e.originalEvent.relatedTarget;
			if (!(wrapper.getNativeElement()).contains(oldFocus)) {
				var input = $((element)._nameBox._platformObject.rootWrapper().getNativeElement()).igCombo("textInput");
				var value = (function ($t) { return $t != null ? $t : ""; }(input[0].value));
				input[0].setSelectionRange(0, value.length);
			}
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreateNameBoxContainer(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Html.IDomWrapper Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreateTabItemContent(System.Html.IDomRenderer, Infragistics.Controls.Grids.Core.SpreadsheetCss)" />*/
	createTabItemContent: function (tabRenderer, css) {
		var innerDivElem = tabRenderer.createElement("div");
		innerDivElem.addClass(css.tabItemContent);
		tabRenderer.append(innerDivElem);
		var spanElem = tabRenderer.createElement("span");
		innerDivElem.append(spanElem);
		return spanElem;
	}
	/*<EndMethod Name="System.Html.IDomWrapper Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::CreateTabItemContent(System.Html.IDomRenderer, Infragistics.Controls.Grids.Core.SpreadsheetCss)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.RendererVisualElement)" />*/
	initialize: function (element) {
		var cache = element._cache;
		if (element.hasInvalidArea()) {
			var width = $.ig.truncate(Math.ceil(element._width));
			var height = $.ig.truncate(Math.ceil(element._height));
			if (width != cache._lastWidth) {
				element._platformObject.rootWrapper().setAttribute("width", width);
			}
			if (height != cache._lastHeight) {
				element._platformObject.rootWrapper().setAttribute("height", height);
			}
			var invalidRect = element.invalidRect();
			cache._canvasContext.clearRect(invalidRect.x(), invalidRect.y(), invalidRect.width(), invalidRect.height());
			var g = new $.ig.CanvasSpreadsheetGraphics(cache._canvasContext, this.__spreadsheet._sheetManager().__ownerState._renderCache());
			element.render(g, $.ig.SpreadsheetVisualElementDomBuilder.prototype.sharedPixelConverter, new $.ig.Point(0));
			cache._lastHeight = height;
			cache._lastWidth = width;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.RendererVisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	initialize3: function (element) {
		var wrapper = element._platformObject.rootWrapper();
		if (element.hasTextChanged()) {
			element.hasTextChanged(false);
			element._contentPlatformObject.setText((function ($t) { return $t != null ? $t : ""; }(element._tab._name())));
		}
		if (element.isSelectedTabChanged()) {
			element.isSelectedTabChanged(false);
			if (element._tab._isSelected()) {
				wrapper.addClass(this.__css.tabItemSelected);
			} else {
				wrapper.removeClass(this.__css.tabItemSelected);
			}
		}
		if (element.isActiveTabChanged()) {
			element.isActiveTabChanged(false);
			if (element._tab._isActive()) {
				wrapper.addClass(this.__css.tabItemActive);
			} else {
				wrapper.removeClass(this.__css.tabItemActive);
			}
		}
		if (element.isProtectedTabChanged()) {
			element.isProtectedTabChanged(false);
			if (element._tab._isProtected()) {
				wrapper.addClass(this.__css.tabItemProtected);
			} else {
				wrapper.removeClass(this.__css.tabItemProtected);
			}
		}
		if (element.hasTabColorChanged()) {
			element.hasTabColorChanged(false);
			var color = "";
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(element._tab._colorInfo(), null)) {
				wrapper.removeClass(this.__css.tabItemLight);
				wrapper.removeClass(this.__css.tabItemDark);
			} else {
				var clr = element._tab._color();
				color = clr.colorString();
				var backBrightness = $.ig.SpreadsheetUtilities.prototype.calculateSRgbBrightness(clr);
				var whiteContrast = 1.05 / (backBrightness + 0.05);
				var blackContrast = (backBrightness + 0.05) / 0.05;
				var colorClass = blackContrast > whiteContrast ? this.__css.tabItemLight : this.__css.tabItemDark;
				wrapper.addClass(colorClass);
			}
			wrapper.setRawStyleProperty("color", color);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement)" />*/
	initialize2: function (element) {
		if (element._hasContentChanged) {
			element._hasContentChanged = false;
			element._titleElement._platformObject.rootWrapper().setText(element._title != null ? element._title : "");
			element._bodyElement._platformObject.rootWrapper().setText(element._message != null ? element._message : "");
			var oldW = element._preferredWidth;
			var oldH = element._preferredHeight;
			var msgElem = element._platformObject.rootWrapper();
			msgElem.setRawStyleProperty("width", "auto");
			msgElem.setRawStyleProperty("height", "auto");
			element._preferredWidth = msgElem.getProperty("clientWidth");
			element._preferredHeight = msgElem.getProperty("clientHeight");
			if ((oldW != element._preferredWidth || oldH != element._preferredHeight)) {
				element._width = element._preferredWidth;
				element._height = element._preferredHeight;
				if ($.ig.Point.prototype.l_op_Equality(this.__spreadsheet.validationInputMessagePosition(), null)) {
					this.__spreadsheet.scheduleArrange();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement)" />*/
	initialize1: function (element) {
		if (element.hasCellValueInfoChanged()) {
			element.hasCellValueInfoChanged(false);
			var value = element.cellValueInfo();
			var column = element._pane.columnScrollRegion();
			var zoom = column._zoomLevel();
			var text = value._formattedText;
			var cellContentWidth = element._width;
			var cellContentHeight = element._height;
			var textWidth = text.width() * zoom;
			var textHeight = text.height() * zoom;
			var scale = 1;
			var contentTransform;
			var contentTransformOrigin = "0% 0%";
			if (value.shrinkToFit() && (textWidth > cellContentWidth || textHeight > cellContentHeight)) {
				var widthDelta = cellContentWidth / textWidth;
				var heightDelta = cellContentHeight / textHeight;
				scale = Math.min(widthDelta, heightDelta);
				contentTransform = "scale(" + scale + "," + scale + ")";
			} else {
				contentTransform = "none";
			}
			if (scale < 1) {
				textWidth *= scale;
				textHeight *= scale;
			}
			var clipTop, clipBottom;
			var top = 0;
			switch (value._verticalAlignment) {
				default:
				case $.ig.excel.VerticalCellAlignment.top:
					clipTop = 0;
					clipBottom = cellContentHeight;
					break;
				case $.ig.excel.VerticalCellAlignment.bottom:
					top = (cellContentHeight - textHeight);
					clipTop = Math.max(0, textHeight - cellContentHeight);
					clipBottom = Math.max(cellContentHeight, textHeight);
					break;
				case $.ig.excel.VerticalCellAlignment.justify:
				case $.ig.excel.VerticalCellAlignment.distributed:
				case $.ig.excel.VerticalCellAlignment.center:
					top = (cellContentHeight / 2 - textHeight / 2);
					var temp = Math.max(0, textHeight / 2 - cellContentHeight / 2);
					clipTop = temp;
					clipBottom = Math.max(cellContentHeight, textHeight - temp);
					break;
			}
			var leftOffset = 0;
			var widthForCellContent = textWidth;
			var isFill = false;
			switch (value._horizontalAlignment) {
				case $.ig.excel.HorizontalCellAlignment.general:
				case $.ig.excel.HorizontalCellAlignment.left:
					break;
				case $.ig.excel.HorizontalCellAlignment.justify:
				case $.ig.excel.HorizontalCellAlignment.distributed:
					widthForCellContent = cellContentWidth;
					break;
				case $.ig.excel.HorizontalCellAlignment.right:
					leftOffset = cellContentWidth - textWidth;
					break;
				case $.ig.excel.HorizontalCellAlignment.center:
				case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
					leftOffset = (cellContentWidth / 2 - textWidth / 2);
					break;
				case $.ig.excel.HorizontalCellAlignment.fill:
					isFill = true;
					break;
			}
			var clip;
			if (value.clipRows() || $.ig.util.nullableNotEquals(value._clipEndColumnIndex, null) || $.ig.util.nullableNotEquals(value._clipStartColumnIndex, null) || textWidth > cellContentWidth) {
				var clipStart = !$.ig.util.nullableIsNull(value._clipStartColumnIndex) ? value._clipStartColumnIndex.value() : value._valueStartColumnIndex;
				var clipEnd = !$.ig.util.nullableIsNull(value._clipEndColumnIndex) ? value._clipEndColumnIndex.value() : value._valueEndColumnIndex;
				if (clipStart == clipEnd && clipTop == 0 && clipBottom == cellContentHeight && leftOffset == 0) {
					clip = "rect(auto, auto, auto, auto)";
				} else {
					var clipLeft = clipStart == value._startColumnIndex ? 0 : column._getRelativeOffset1(clipStart, true, true) - column._getRelativeOffset1(value._startColumnIndex, true, true);
					var clipRight = column._getRelativeOffset1(clipEnd, false, true) - column._getRelativeOffset1(value._startColumnIndex, true, true);
					var row = element._pane.rowScrollRegion();
					clipBottom = row._getRelativeOffset1(value._endRowIndex, false, true) - row._getRelativeOffset1(value._startRowIndex, true, true);
					clip = "rect(" + 0 + "px, " + (clipRight * zoom) + "px, " + ((clipBottom * zoom) - value._bottomIndent) + "px, " + clipLeft * zoom + "px)";
				}
			} else {
				clip = "auto";
			}
			var fillRemaining = cellContentWidth - textWidth;
			var reset = text._html != element._html || isFill != element._isFill || (isFill && (fillRemaining != element._fillRemaining || top != element._contentTop));
			element._isFill = isFill;
			element._fillRemaining = fillRemaining;
			var visual = element._platformObject.rootWrapper();
			if (reset) {
				visual.setProperty("innerHTML", text._html);
				element._html = text._html;
			}
			var contentColor = value._foreground.colorString();
			var contentWidth = widthForCellContent;
			var contentHeight = textHeight;
			var needCellContent = reset || element._contentTransform != contentTransform || element._contentTop != top || element._contentLeft != leftOffset || element._color != contentColor || element._contentWidth != contentWidth || element._contentHeight != contentHeight;
			if (needCellContent) {
				var cellContent = visual.getChildAt(0);
				if (reset || element._contentTransform != contentTransform) {
					cellContent.setRawStyleProperty("transform", contentTransform);
					element._contentTransform = contentTransform;
					cellContent.setRawStyleProperty("transformOrigin", contentTransformOrigin);
				}
				if (reset || top != element._contentTop) {
					element._contentTop = top;
					cellContent.setRawStyleProperty("top", element._contentTop + "px");
				}
				if (reset || leftOffset != element._contentLeft) {
					element._contentLeft = leftOffset;
					cellContent.setRawStyleProperty("left", leftOffset + "px");
				}
				if (isFill && reset) {
					var offset = textWidth;
					var remaining = cellContentWidth - textWidth;
					while (remaining > textWidth) {
						var sibling = cellContent.clone();
						sibling.setRawStyleProperty("left", offset + "px");
						sibling.setRawStyleProperty("top", top + "px");
						visual.append(sibling);
						offset += textWidth;
						remaining -= textWidth;
					}
				}
				if (reset || contentColor != element._color) {
					element._color = contentColor;
					cellContent.setRawStyleProperty("color", contentColor);
				}
				if (reset || contentWidth != element._contentWidth) {
					element._contentWidth = contentWidth;
					cellContent.setRawStyleProperty("width", contentWidth + "px");
				}
				if (reset || contentHeight != element._contentHeight) {
					element._contentHeight = contentHeight;
					cellContent.setRawStyleProperty("height", contentHeight + "px");
				}
			}
			if (clip != element._clip) {
				element._clip = clip;
				visual.setRawStyleProperty("clip", clip);
			}
			if (cellContentWidth != element._cellWidth) {
				element._cellWidth = cellContentWidth;
				visual.setRawStyleProperty("width", cellContentWidth + "px");
			}
			if (cellContentHeight != element._cellHeight) {
				element._cellHeight = cellContentHeight;
				visual.setRawStyleProperty("height", cellContentHeight + "px");
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetCellValueElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeFormulaTextArea(System.Html.IDomWrapper)" />*/
	initializeFormulaTextArea: function (ta) {
		ta.setAttribute("readonly", true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeFormulaTextArea(System.Html.IDomWrapper)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeTabText(System.Html.IDomWrapper, System.String)" />*/
	initializeTabText: function (tabContent, tabName) {
		if (tabContent != null) {
			tabContent.setText(tabName != null ? tabName : "");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::InitializeTabText(System.Html.IDomWrapper, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::IsNameBoxCombo(Infragistics.Controls.Core.VisualElement)" />*/
	isNameBoxCombo: function (element) {
		return element != null && element._id == $.ig.ComboBoxVisualElement.prototype.defaultId && element.__parent != null && element.__parent._id == $.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxContainer;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder::IsNameBoxCombo(Infragistics.Controls.Core.VisualElement)" />*/
	,
	$type: new $.ig.Type('SpreadsheetVisualElementDomBuilder', $.ig.VisualElementDomBuilder.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder_CanvasCache" />*/

$.ig.util.defType('SpreadsheetVisualElementDomBuilder_CanvasCache', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_canvasContext: null,
	_lastWidth: 0,
	_lastHeight: 0,
	$type: new $.ig.Type('SpreadsheetVisualElementDomBuilder_CanvasCache', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder_CanvasCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMetricsCache" />*/

$.ig.util.defType('SpreadsheetMetricsCache', 'Object', {
	init: function () {
		this._nameBoxSplitterSize = new $.ig.Size();
		this._formulaBarCancelButtonSize = new $.ig.Size();
		this._formulaBarEnterButtonSize = new $.ig.Size();
		this._formulaBarTextAreaSplitterSize = new $.ig.Size();
		this._formulaBarExpandButtonSize = new $.ig.Size();
		$.ig.Object.prototype.init.call(this);
	},
	_tabAreaBorderHeight: 0,
	_tabHeight: 0,
	_splitterBarWidth: 0,
	_splitterBarHeight: 0,
	_splitterBarWidthDisabled: 0,
	_splitterBarHeightDisabled: 0,
	_tabItemAreaSplitterHeight: 0,
	_tabItemAreaSplitterWidth: 0,
	_scrollBarHeight: 0,
	_scrollBarWidth: 0,
	_verticalScrollBarConstraint: null,
	_horizontalScrollBarConstraint: null,
	_hScrollNearButtonWidth: 0,
	_hScrollFarButtonWidth: 0,
	_vScrollNearButtonHeight: 0,
	_vScrollFarButtonHeight: 0,
	_tabScrollFirstWidth: 0,
	_tabScrollFirstHeight: 0,
	_tabScrollLastWidth: 0,
	_tabScrollLastHeight: 0,
	_tabScrollPreviousWidth: 0,
	_tabScrollPreviousHeight: 0,
	_tabScrollNextWidth: 0,
	_tabScrollNextHeight: 0,
	_activatePrevTabWidth: 0,
	_activatePrevTabHeight: 0,
	_activateNextTabWidth: 0,
	_activateNextTabHeight: 0,
	_addWorksheetWidth: 0,
	_addWorksheetHeight: 0,
	_nameBoxSplitterSize: null,
	_formulaBarCancelButtonSize: null,
	_formulaBarEnterButtonSize: null,
	_formulaBarTextAreaSplitterSize: null,
	_formulaBarExpandButtonSize: null,
	_formulaBarTextBox1LineHeight: 0,
	_formulaBarTextBox2LineHeight: 0,
	_formulaBarTextBox3LineHeight: 0,
	_formulaBarConstraint: null,
	_formulaBarNameBoxAreaConstraint: null,
	_formulaBarButtonAreaConstraint: null,
	$type: new $.ig.Type('SpreadsheetMetricsCache', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMetricsCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache" />*/

$.ig.util.defType('JsSpreadsheetRenderCache', 'SpreadsheetRenderCache', {
	__spreadsheet: null,
	__canvas: null,
	__canvasContext: null,
	__brushes: null,
	__emptyFormatData: null,
	__tempWorksheetCellFormatFont: null,
	__tempFormattedStringFont: null,
	__textCache: null,
	init: function (spreadsheet) {
		$.ig.SpreadsheetRenderCache.prototype.init.call(this, true);
		this.__spreadsheet = spreadsheet;
		this.__emptyFormatData = new $.ig.WorksheetCellFormatData(null, $.ig.WorksheetCellFormatType.prototype.cellFormat);
		this.__emptyFormatData._freeze();
		this.__tempWorksheetCellFormatFont = new $.ig.ResolvedWorksheetCellFormatDataFont(this.__emptyFormatData);
		this.__tempFormattedStringFont = new $.ig.FormattedStringFontResolved(null, this.__emptyFormatData);
		this.__textCache = new $.ig.LRUCache$2(String, $.ig.JsSpreadsheetText.prototype.$type, 0, 250);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::Workbook()" />*/
	workbook: function () {
		return this.__spreadsheet.workbook();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::Workbook()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CalculateHeaderTextHeight(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	calculateHeaderTextHeight: function (font, zoomLevel, text) {
		var fontStyle = this.createHeaderFontStyle(font, zoomLevel);
		return this.__spreadsheet._measureHelper().getSingleLineHeight("font:" + fontStyle, fontStyle) / zoomLevel;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CalculateHeaderTextHeight(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	calculateHeaderTextWidth1: function (font, zoomLevel, text) {
		var scaleFactor = zoomLevel;
		var canvasContext = this.getCanvasContext();
		canvasContext.font = this.createHeaderFontStyle(font, scaleFactor);
		var metrics = canvasContext.measureText(text);
		return Math.ceil(metrics.width / scaleFactor);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Documents.Excel.IWorkbookFont, System.Double, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.String)" />*/
	calculateHeaderTextWidth: function (scrollRegion, text) {
		return this.calculateHeaderTextWidth1(scrollRegion._headerFont(), scrollRegion._zoomLevel(), text);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CalculateHeaderTextWidth(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::ClearOverride()" />*/
	clearOverride: function () {
		this.__brushes = null;
		this.__textCache.clear();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::ClearOverride()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::IsTransparentResource(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	isTransparentResource: function (id) {
		if (this.__spreadsheet._measureHelper() == null) {
			return false;
		}
		var b = this.__spreadsheet._measureHelper()._resourceBrushes[id];
		return $.ig.BrushUtil.prototype.isFullyTransparent(b);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::IsTransparentResource(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateDisplayTextMetricsProvider()" />*/
	createDisplayTextMetricsProvider: function () {
		return $.ig.excel.Workbook.prototype._createDefaultTextMetricsProvider(this.__spreadsheet.workbook());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateDisplayTextMetricsProvider()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double)" />*/
	getUnderlineHeight: function (format, dpiY) {
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateSpreadsheetText(Infragistics.Documents.Excel.FormattedString, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	createSpreadsheetText: function (fs, format, availableWidth, textAlignment, wrapText, isVisitedHyperlink, zoomFactor, foreground) {
		var unformattedText = fs.unformattedString();
		var runText = "";
		var en = fs.getFormattingRuns().getEnumerator();
		while (en.moveNext()) {
			var run = en.current();
			this.__tempFormattedStringFont._initialize(run, format);
			var unformattedRunText = unformattedText.substr(run.startIndex(), run.length());
			if (!wrapText) {
				unformattedRunText = $.ig.util.replace(unformattedRunText, "\r\n", " ");
			}
			runText += this.getRun(this.__tempFormattedStringFont, unformattedRunText, zoomFactor, true);
		}
		this.__tempFormattedStringFont._initialize(null, this.__emptyFormatData);
		return this.createSpreadsheetText2(availableWidth, textAlignment, wrapText, runText, zoomFactor, null, unformattedText);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateSpreadsheetText(Infragistics.Documents.Excel.FormattedString, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateSpreadsheetText(System.String, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	createSpreadsheetText1: function (text, format, availableWidth, textAlignment, wrapText, isVisitedHyperlink, zoomFactor, foreground) {
		this.__tempWorksheetCellFormatFont._initialize(format);
		var run = this.getRun(this.__tempWorksheetCellFormatFont, text, zoomFactor, false);
		var ssText = this.createSpreadsheetText2(availableWidth, textAlignment, wrapText, run, zoomFactor, this.__tempWorksheetCellFormatFont, text);
		this.__tempWorksheetCellFormatFont._initialize(this.__emptyFormatData);
		return ssText;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateSpreadsheetText(System.String, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.Boolean, System.Double, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateSpreadsheetText(System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.String, System.Double, Infragistics.Documents.Excel.IWorkbookFont, System.String)" />*/
	createSpreadsheetText2: function (availableWidth, textAlignment, wrapText, run, zoomFactor, singleRunFont, unformattedText) {
		availableWidth *= zoomFactor;
		var containerStyle = "position:absolute;";
		switch (textAlignment) {
			case $.ig.IGTextAlignment.prototype.left:
			case $.ig.IGTextAlignment.prototype.fill:
				containerStyle += "text-align: left;";
				break;
			case $.ig.IGTextAlignment.prototype.right:
				containerStyle += "text-align: right;";
				break;
			case $.ig.IGTextAlignment.prototype.center:
				containerStyle += "text-align: center;";
				break;
			case $.ig.IGTextAlignment.prototype.justify:
				containerStyle += "text-align: justify;";
				break;
			case $.ig.IGTextAlignment.prototype.distributed:
				containerStyle += "text-align: justify;";
				break;
		}
		if (wrapText) {
			containerStyle += "max-width:" + availableWidth + "px;";
			containerStyle += "overflow-wrap:break-word;word-wrap:break-word;";
			if (textAlignment == $.ig.IGTextAlignment.prototype.justify || textAlignment == $.ig.IGTextAlignment.prototype.distributed) {
				containerStyle += "white-space:pre-line;";
			} else {
				containerStyle += "white-space:pre-wrap;";
			}
		} else {
			containerStyle += "white-space:pre;";
		}
		var html = "<div style='" + containerStyle + "'>" + run + "</div>";
		var cachedText = this.__textCache.item(html);
		if (cachedText != null) {
			return cachedText;
		}
		var width, height;
		if (singleRunFont != null && !wrapText && unformattedText.indexOf('\n') < 0) {
			var canvasContext = this.getCanvasContext();
			var fontStyle = this.createRunFontStyle(singleRunFont, zoomFactor);
			canvasContext.font = fontStyle;
			var metrics = canvasContext.measureText(unformattedText);
			width = metrics.width;
			height = this.__spreadsheet._measureHelper().getSingleLineHeight(this.createRunStyle(singleRunFont, zoomFactor), fontStyle);
		} else {
			var measureContainer = this.__spreadsheet._measureHelper().textMeasureContainer();
			var oldWidth = measureContainer.getStyleProperty("width");
			measureContainer.setRawStyleProperty("width", Math.ceil(availableWidth) + "px");
			measureContainer.setProperty("innerHTML", html);
			var newChild = measureContainer.getChildAt(0);
			var r = newChild.getNativeElement().getBoundingClientRect();
			width = Math.ceil(r.width);
			height = Math.ceil(r.height);
			measureContainer.setProperty("innerHTML", "");
			measureContainer.setRawStyleProperty("width", oldWidth);
		}
		var ssText = new $.ig.JsSpreadsheetText();
		ssText._html = html;
		ssText._textWidth = width / zoomFactor;
		ssText._textHeight = height / zoomFactor;
		this.__textCache.item(html, ssText);
		return ssText;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateSpreadsheetText(System.Double, Infragistics.Controls.IGTextAlignment, System.Boolean, System.String, System.Double, Infragistics.Documents.Excel.IWorkbookFont, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateHeaderFontStyle(Infragistics.Documents.Excel.IWorkbookFont, System.Single)" />*/
	createHeaderFontStyle: function (font, scaleFactor) {
		return "" + (font.height() / 20) * scaleFactor + "pt \"" + font.name() + "\", sans-serif";
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateHeaderFontStyle(Infragistics.Documents.Excel.IWorkbookFont, System.Single)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateRunFontStyle(Infragistics.Documents.Excel.IWorkbookFont, System.Double)" />*/
	createRunFontStyle: function (font, zoomFactor) {
		var textStyle = "";
		var size = (font.height() / 20) * zoomFactor;
		switch (font.superscriptSubscriptStyle()) {
			case $.ig.excel.FontSuperscriptSubscriptStyle.subscript:
			case $.ig.excel.FontSuperscriptSubscriptStyle.superscript:
				size *= $.ig.JsSpreadsheetRenderCache.prototype._superSubScriptFactor;
				break;
		}
		if ($.ig.util.nullableEquals(font._italic$i(), true)) {
			textStyle += "italic ";
		}
		if ($.ig.util.nullableEquals(font._bold$i(), true)) {
			textStyle += "bold ";
		}
		textStyle += size + "pt \"" + font.name() + "\", sans-serif";
		return textStyle;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateRunFontStyle(Infragistics.Documents.Excel.IWorkbookFont, System.Double)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateRunStyle(Infragistics.Documents.Excel.IWorkbookFont, System.Double)" />*/
	createRunStyle: function (font, zoomFactor) {
		var textStyle = "";
		var size = (font.height() / 20) * zoomFactor;
		switch (font.superscriptSubscriptStyle()) {
			case $.ig.excel.FontSuperscriptSubscriptStyle.subscript:
				size *= $.ig.JsSpreadsheetRenderCache.prototype._superSubScriptFactor;
				textStyle += "vertical-align: sub;";
				break;
			case $.ig.excel.FontSuperscriptSubscriptStyle.superscript:
				size *= $.ig.JsSpreadsheetRenderCache.prototype._superSubScriptFactor;
				textStyle += "vertical-align: super;";
				break;
		}
		textStyle += "font-family:\"" + font.name() + "\", sans-serif;";
		textStyle += "font-size:" + size + "pt;";
		if ($.ig.util.nullableEquals(font._bold$i(), true)) {
			textStyle += "font-weight:bold;";
		}
		if ($.ig.util.nullableEquals(font._italic$i(), true)) {
			textStyle += "font-style:italic;";
		}
		var isStrikeThrough = $.ig.util.nullableEquals(font._strikeout$i(), true);
		switch (font.underlineStyle()) {
			case $.ig.excel.FontUnderlineStyle.double1:
				if (isStrikeThrough) {
					textStyle += "text-decoration:line-through;";
				}
				textStyle += "border-bottom: double 3px;";
				break;
			case $.ig.excel.FontUnderlineStyle.single:
				if (isStrikeThrough) {
					textStyle += "text-decoration:line-through underline;";
				} else {
					textStyle += "text-decoration:underline;";
				}
				break;
			default:
				if (isStrikeThrough) {
					textStyle += "text-decoration:line-through;";
				}
				break;
		}
		return textStyle;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::CreateRunStyle(Infragistics.Documents.Excel.IWorkbookFont, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Html.Media.Graphics.CanvasContext2D Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetCanvasContext()" />*/
	getCanvasContext: function () {
		if (this.__canvasContext == null) {
			var renderer = this.__spreadsheet._container();
			this.__canvas = renderer.getSubRenderer(renderer.createElement("canvas"));
			this.__canvasContext = this.__canvas.get2DCanvasContext(this.__canvas.rootWrapper());
		}
		return this.__canvasContext;
	}
	/*<EndMethod Name="System.Html.Media.Graphics.CanvasContext2D Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetCanvasContext()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetPrimaryColor(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	getPrimaryColor: function (id) {
		if (this.__brushes == null) {
			this.__brushes = this.__spreadsheet._measureHelper()._resourceBrushes;
		}
		return this.__brushes[id].__fill;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetPrimaryColor(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetRun(Infragistics.Documents.Excel.IWorkbookFont, System.String, System.Double, System.Boolean)" />*/
	getRun: function (font, text, zoomFactor, includeColor) {
		text = $.ig.util.replace($.ig.util.replace($.ig.util.replace($.ig.util.replace($.ig.util.replace(text, "<", "&lt;"), ">", "&gt;"), "&", "&amp;"), "'", "&apos;"), "\"", "&quot;");
		var textStyle = this.createRunStyle(font, zoomFactor);
		if (includeColor) {
			var fontColor = font.colorInfo()._toResolved(this.workbook(), false)._color$i().value();
			textStyle += "color:" + fontColor.colorString() + ";";
		}
		return "<span style='" + textStyle + "'>" + text + "</span>";
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache::GetRun(Infragistics.Documents.Excel.IWorkbookFont, System.String, System.Double, System.Boolean)" />*/
	,
	$type: new $.ig.Type('JsSpreadsheetRenderCache', $.ig.SpreadsheetRenderCache.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange" />*/

$.ig.spreadsheet.SpreadsheetCellRange = $.ig.util.defType('spreadsheet.SpreadsheetCellRange', 'ValueType', {
	init: function () {
		var initNumber;
		if (arguments.length === 0) {
			initNumber = 0;
		} else if (arguments.length === 1) {
			initNumber = 3;
		} else if (arguments.length === 2) {
			initNumber = 1;
		} else if (arguments.length === 4) {
			initNumber = 2;
		}
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this._init1.apply(this, arguments);
					break;
				case 2:
					this._init2.apply(this, arguments);
					break;
				case 3:
					this._init3.apply(this, arguments);
					break;
				default: throw new Error('Invalid arguments');
			}
			return;
		}
		$.ig.ValueType.prototype.init.call(this);
	},
	___firstColumn: 0,
	___lastColumn: 0,
	___firstRow: 0,
	___lastRow: 0,
	___hashCode: 0,
	_staticInit: function () {
		$.ig.spreadsheet.SpreadsheetCellRange.prototype.empty = new $.ig.spreadsheet.SpreadsheetCellRange(-1, -1, -1, -1);
	},
	_init1: function (firstRow, firstColumn) {
		$.ig.spreadsheet.SpreadsheetCellRange.prototype._init2.call(this, firstRow, firstColumn, firstRow, firstColumn);
	},
	_init2: function (firstRow, firstColumn, lastRow, lastColumn) {
		$.ig.ValueType.prototype.init.call(this);
		if (firstRow != -1 || lastRow != -1 || firstColumn != -1 || lastColumn != -1) {
			$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(firstRow, "firstRow");
			$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(lastRow, "lastRow");
			$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(firstColumn, "firstColumn");
			$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(lastColumn, "lastColumn");
		}
		this.___firstRow = Math.min(firstRow, lastRow);
		this.___lastRow = Math.max(firstRow, lastRow);
		this.___firstColumn = Math.min(firstColumn, lastColumn);
		this.___lastColumn = Math.max(firstColumn, lastColumn);
		this.___hashCode = this.___firstRow ^ this.___lastRow << 5 ^ this.___firstColumn << 10 ^ this.___lastColumn << 15;
	},
	_init3: function (address) {
		$.ig.ValueType.prototype.init.call(this);
		var firstRowIndex;
		var firstColumnIndex;
		var lastRowIndex;
		var lastColumnIndex;
		var $ret = $.ig.ExcelUtils.prototype.parseA1RegionAddress1(address, $.ig.excel.WorkbookFormat.excel2007, $.ig.CultureInfo.prototype.currentCulture(), firstRowIndex, firstColumnIndex, lastRowIndex, lastColumnIndex);
		firstRowIndex = $ret.p3;
		firstColumnIndex = $ret.p4;
		lastRowIndex = $ret.p5;
		lastColumnIndex = $ret.p6;
		if (lastRowIndex < 0 && firstRowIndex < 0) {
			throw new $.ig.ArgumentException(1, $.ig.util.stringFormat("The specified address '{0}' is not a valid A1 cell range address.", address));
		}
		if (lastRowIndex < 0) {
			lastRowIndex = firstRowIndex;
			lastColumnIndex = firstColumnIndex;
		}
		$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(firstRowIndex, "firstRow");
		$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(lastRowIndex, "lastRow");
		$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(firstColumnIndex, "firstColumn");
		$.ig.spreadsheet.SpreadsheetCellRange.prototype._verifyIndex(lastColumnIndex, "lastColumn");
		this.___firstRow = Math.min(firstRowIndex, lastRowIndex);
		this.___lastRow = Math.max(firstRowIndex, lastRowIndex);
		this.___firstColumn = Math.min(firstColumnIndex, lastColumnIndex);
		this.___lastColumn = Math.max(firstColumnIndex, lastColumnIndex);
		this.___hashCode = this.___firstRow ^ this.___lastRow << 5 ^ this.___firstColumn << 10 ^ this.___lastColumn << 15;
	},
	equals: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if ($.ig.util.cast($.ig.Object.prototype.$type, arguments[0]) !== null) {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._equals.apply(this, arguments);
			case 1: return this.equals1.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Equals(System.Object)" />*/
	equals1: function (obj) {
		if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, obj) !== null) {
			return this._equals(obj);
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Equals(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::GetHashCode()" />*/
	getHashCode: function () {
		return this.___hashCode;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::GetHashCode()" />*/
	,
	toString: function () {
		var n;
		if (arguments.length === 0) {
			n = 0;
		} else if (arguments.length === 1) {
			n = 1;
		}
		switch (n) {
			case 0: return $_2(this._toString.apply(this, arguments));
			case 1: return $_2(this._toString1.apply(this, arguments));
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString()" />*/
	_toString: function () {
		return this._toString1($.ig.excel.CellReferenceMode.a1);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::FirstColumn()" />*/
	firstColumn: function () {
		return this.___firstColumn;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::FirstColumn()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::FirstRow()" />*/
	firstRow: function () {
		return this.___firstRow;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::FirstRow()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Height()" />*/
	_height: function () {
		return this.___lastRow - this.___firstRow + 1;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Height()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::IsSingleCell()" />*/
	isSingleCell: function () {
		return this.___firstColumn == this.___lastColumn && this.___firstRow == this.___lastRow;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::IsSingleCell()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::IsEmpty()" />*/
	isEmpty: function () {
		return $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(this, $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::IsEmpty()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::LastColumn()" />*/
	lastColumn: function () {
		return this.___lastColumn;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::LastColumn()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::LastRow()" />*/
	lastRow: function () {
		return this.___lastRow;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::LastRow()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellRange::LowerRight()" />*/
	_lowerRight: function () {
		return new $.ig.spreadsheet.SpreadsheetCell(this.___lastRow, this.___lastColumn);
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellRange::LowerRight()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellRange::UpperLeft()" />*/
	_upperLeft: function () {
		return new $.ig.spreadsheet.SpreadsheetCell(this.___firstRow, this.___firstColumn);
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellRange::UpperLeft()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Width()" />*/
	_width: function () {
		return this.___lastColumn - this.___firstColumn + 1;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Width()" />*/
	,
	contains: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 1;
			}
		} else if (arguments.length === 2) {
			n = 2;
		}
		switch (n) {
			case 0: return this._contains.apply(this, arguments);
			case 1: return this._contains1.apply(this, arguments);
			case 2: return this._contains2.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Contains(System.Int32, System.Int32)" />*/
	_contains2: function (row, column) {
		return !(column < this.___firstColumn || column > this.___lastColumn || row < this.___firstRow || row > this.___lastRow);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Contains(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Contains(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_contains: function (cell) {
		return this._contains2(cell.row(), cell.column());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Contains(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Contains(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_contains1: function (range) {
		return !(range.firstColumn() < this.___firstColumn || range.lastColumn() > this.___lastColumn || range.firstRow() < this.___firstRow || range.lastRow() > this.___lastRow);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Contains(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Intersect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	intersect: function (range) {
		if (!this.intersectsWith(range)) {
			return $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		}
		return new $.ig.spreadsheet.SpreadsheetCellRange(this.___firstRow < range.___firstRow ? range.___firstRow : this.___firstRow, this.___firstColumn < range.___firstColumn ? range.___firstColumn : this.___firstColumn, this.___lastRow > range.___lastRow ? range.___lastRow : this.___lastRow, this.___lastColumn > range.___lastColumn ? range.___lastColumn : this.___lastColumn);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Intersect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::IntersectsWith(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	intersectsWith: function (range) {
		return range.___firstRow <= this.___lastRow && range.___lastRow >= this.___firstRow && range.___firstColumn <= this.___lastColumn && range.___lastColumn >= this.___firstColumn;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::IntersectsWith(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString(Infragistics.Documents.Excel.CellReferenceMode)" />*/
	_toString1: function (mode) {
		return this._toString2(mode, mode == $.ig.excel.CellReferenceMode.a1);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString(Infragistics.Documents.Excel.CellReferenceMode)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString(Infragistics.Documents.Excel.CellReferenceMode, System.Boolean)" />*/
	_toString2: function (mode, isRelative) {
		var upperLeft = (function (t1, t2, t3, t4, t5) { return $.ig.CellAddress.prototype.getCellReferenceString(t1, t2, 2, t4, t5, -1, -1, false, t3); }(this.___firstRow, this.___firstColumn, mode, isRelative, isRelative));
		if (this.isSingleCell()) {
			return upperLeft;
		}
		return $.ig.util.stringFormat("{0}{1}{2}", upperLeft, $.ig.FormulaParser.prototype.rangeOperator, (function (t11, t21, t31, t41, t51) { return $.ig.CellAddress.prototype.getCellReferenceString(t11, t21, 2, t41, t51, -1, -1, false, t31); }(this.___lastRow, this.___lastColumn, mode, isRelative, isRelative)));
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString(Infragistics.Documents.Excel.CellReferenceMode, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Union(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	union: function (range) {
		if (this.isEmpty()) {
			return range;
		}
		return new $.ig.spreadsheet.SpreadsheetCellRange(this.___firstRow > range.___firstRow ? range.___firstRow : this.___firstRow, this.___firstColumn > range.___firstColumn ? range.___firstColumn : this.___firstColumn, this.___lastRow < range.___lastRow ? range.___lastRow : this.___lastRow, this.___lastColumn < range.___lastColumn ? range.___lastColumn : this.___lastColumn);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Union(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetCellRange::CreateRanges(System.String)" />*/
	_createRanges: function (rangesAddress) {
		var referencesSplit = null;
		if (rangesAddress != null && rangesAddress.length > 0) {
			referencesSplit = $.ig.util.stringSplit(rangesAddress, [ ',' ], $.ig.StringSplitOptions.prototype.removeEmptyEntries);
		}
		var rangesCount = referencesSplit == null ? 0 : referencesSplit.length;
		var ranges = new Array(rangesCount);
		for (var i = 0; i < rangesCount; i++) {
			var reference = referencesSplit[i].trim([]);
			ranges[i] = new $.ig.spreadsheet.SpreadsheetCellRange(reference);
		}
		return ranges;
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetCellRange::CreateRanges(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::HasAnyOverlappingRanges(System.Collections.Generic.IList)" />*/
	_hasAnyOverlappingRanges: function (cellRanges) {
		for (var i = 0, count = cellRanges.count(); i < count; i++) {
			var firstRange = cellRanges.item(i);
			for (var j = i + 1; j < count; j++) {
				var secondRange = cellRanges.item(j);
				if (secondRange.intersectsWith(firstRange)) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::HasAnyOverlappingRanges(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString(System.Collections.Generic.IList, Infragistics.Documents.Excel.CellReferenceMode, System.Char)" />*/
	_toString3: function (ranges, mode, separator) {
		if (ranges == null || ranges.count() == 0) {
			return String.empty();
		}
		if (ranges.count() == 1) {
			return ranges.item(0)._toString1(mode);
		}
		var sb = new $.ig.StringBuilder(0);
		var en = ranges.getEnumerator();
		while (en.moveNext()) {
			var range = en.current();
			if (sb.length() > 0) {
				sb.append1(separator);
			}
			sb.append5(range._toString1(mode));
		}
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRange::ToString(System.Collections.Generic.IList, Infragistics.Documents.Excel.CellReferenceMode, System.Char)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRange::VerifyIndex(System.Int32, System.String)" />*/
	_verifyIndex: function (index, name) {
		if (index < 0) {
			throw new $.ig.ArgumentException(2, "Row and column indexes must be 0 or greater.", name);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRange::VerifyIndex(System.Int32, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Equals(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_equals: function (other) {
		return other.___firstRow == this.___firstRow && other.___lastRow == this.___lastRow && other.___firstColumn == this.___firstColumn && other.___lastColumn == this.___lastColumn;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::Equals(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Equality(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	l_op_Equality: function (d1, d2) {
		return d1._equals(d2);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Equality(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Equality_Lifted(System.Nullable, System.Nullable)" />*/
	l_op_Equality_Lifted: function (d1, d2) {
		d1 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, d1);
		d2 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, d2);
		if (!d1.hasValue()) {
			return !d2.hasValue();
		} else if (!d2.hasValue()) {
			return false;
		}
		return $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(d1.value(), d2.value());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Equality_Lifted(System.Nullable, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Inequality(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	l_op_Inequality: function (d1, d2) {
		return !($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(d1, d2));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Inequality(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Inequality_Lifted(System.Nullable, System.Nullable)" />*/
	l_op_Inequality_Lifted: function (d1, d2) {
		d1 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, d1);
		d2 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, d2);
		if (!d1.hasValue()) {
			return d2.hasValue();
		} else if (!d2.hasValue()) {
			return true;
		}
		return $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality(d1.value(), d2.value());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellRange::L_op_Inequality_Lifted(System.Nullable, System.Nullable)" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetCellRange', $.ig.ValueType.prototype.$type, [$.ig.IEquatable$1.prototype.$type.specialize(-1)])
}, true);

$.ig.spreadsheet.SpreadsheetCellRange.prototype.$type.initSelfReferences();

$.ig.spreadsheet.SpreadsheetCellRange.l_op_Equality = $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality.runOn($.ig.spreadsheet.SpreadsheetCellRange.prototype);

$.ig.spreadsheet.SpreadsheetCellRange.l_op_Equality_Lifted = $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality_Lifted.runOn($.ig.spreadsheet.SpreadsheetCellRange.prototype);

$.ig.spreadsheet.SpreadsheetCellRange.l_op_Inequality = $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality.runOn($.ig.spreadsheet.SpreadsheetCellRange.prototype);

$.ig.spreadsheet.SpreadsheetCellRange.l_op_Inequality_Lifted = $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality_Lifted.runOn($.ig.spreadsheet.SpreadsheetCellRange.prototype);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetUtilities" />*/

$.ig.util.defType('SpreadsheetUtilities', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CalculateSRgbBrightness(System.Windows.Media.Color)" />*/
	calculateSRgbBrightness: function (color) {
		var Gamma = 2.2;
		var brightness = (Math.pow(color.r() / 255, Gamma) * 0.2126) + (Math.pow(color.g() / 255, Gamma) * 0.7152) + (Math.pow(color.b() / 255, Gamma) * 0.0722);
		return brightness;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CalculateSRgbBrightness(System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertDomExtentToPixels(System.String, System.Double)" />*/
	convertDomExtentToPixels: function (value, defaultValue) {
		if (!String.isNullOrEmpty(value) && value != "auto") {
			if (value.contains("px")) {
				value = $.ig.util.replace(value, "px", "");
			}
			var d = parseFloat(value);
			if (!isNaN(d)) {
				return d;
			}
		}
		return defaultValue;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertDomExtentToPixels(System.String, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Contains(Infragistics.Controls.Core.VisualElement, System.Html.Element)" />*/
	contains: function (element, $native) {
		if ($native == null || element == null || element._platformObject == null) {
			return false;
		}
		var nativeElement = element._platformObject.rootWrapper().getNativeElement();
		return nativeElement.contains($native);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Contains(Infragistics.Controls.Core.VisualElement, System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetAncestorInfo(System.Html.Element)" />*/
	getAncestorInfo: function (descendant) {
		var path = "";
		var p = descendant;
		while (p != null) {
			if (path.length > 0) {
				path = "->" + path;
			}
			if (!String.isNullOrEmpty(p.className)) {
				path = "{" + p.className + "}" + path;
			}
			if (!String.isNullOrEmpty(p.id)) {
				path = "(" + p.id + ")" + path;
			}
			path = p.nodeName + path;
			p = p.parentNode;
		}
		return path;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetAncestorInfo(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetChildren(System.Html.Element)" />*/
	getChildren: function (element) {
		var children = new $.ig.List$1($.ig.Element.prototype.$type, 0);
		var child = element.firstChild;
		while (child != null) {
			children.add(child);
			child = child.nextSibling;
		}
		return children;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetChildren(System.Html.Element)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::StopPropagation(System.Html.INormalizedEvent)" />*/
	stopPropagation: function (e) {
		if (e.originalEvent.stopPropagation) {
			e.originalEvent.stopPropagation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::StopPropagation(System.Html.INormalizedEvent)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AddListener(Infragistics.ISupportPropertyChangeNotifications, Infragistics.IPropertyChangeListener, System.Boolean)" />*/
	addListener: function (notifier, listener, useWeakReference) {
		notifier.addListener(listener, useWeakReference);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AddListener(Infragistics.ISupportPropertyChangeNotifications, Infragistics.IPropertyChangeListener, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AddRunToParagraph(Infragistics.Controls.Grids.Core.IGFormattedTextParagraph, System.Int32, Infragistics.Documents.Excel.IWorkbookFont, System.Int32, System.Int32)" />*/
	addRunToParagraph: function (p, nextExpectedStart, runFont, runStart, runLength) {
		if (runStart > nextExpectedStart) {
			var emptyRun = new $.ig.IGFormattedTextRun();
			emptyRun._start = nextExpectedStart;
			emptyRun._length = runStart - nextExpectedStart;
			p._children.add(emptyRun);
		}
		var igRun = new $.ig.IGFormattedTextRun();
		igRun._start = runStart;
		igRun._length = runLength;
		$.ig.SpreadsheetUtilities.prototype.initializeFormattedTextSettings(igRun._textSettings, runFont);
		p._children.add(igRun);
		nextExpectedStart = runStart + runLength;
		return nextExpectedStart;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AddRunToParagraph(Infragistics.Controls.Grids.Core.IGFormattedTextParagraph, System.Int32, Infragistics.Documents.Excel.IWorkbookFont, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AreAllHashes(System.String)" />*/
	areAllHashes: function (displayText) {
		if (String.isNullOrEmpty(displayText)) {
			return false;
		}
		for (var i = 0, len = displayText.length; i < len; i++) {
			if ('#' != displayText.charAt(i)) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AreAllHashes(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AreAllVisibleSheetsSelected(Infragistics.Documents.Excel.Workbook)" />*/
	areAllVisibleSheetsSelected: function (wb) {
		if (wb != null) {
			var en = wb.worksheets().getEnumerator();
			while (en.moveNext()) {
				var sheet = en.current();
				var options = sheet.displayOptions();
				if (!options._isTabSelected() && options.visibility() == $.ig.excel.WorksheetVisibility.visible) {
					return false;
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::AreAllVisibleSheetsSelected(Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CanRenderShape(Infragistics.Documents.Excel.WorksheetShape)" />*/
	canRenderShape: function (shape) {
		if ($.ig.util.cast($.ig.excel.WorksheetImage.prototype.$type, shape) !== null) {
			return true;
		}
		if ($.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, shape) !== null) {
			return true;
		}
		if ($.ig.util.nullableNotEquals(shape._type2007(), null)) {
			return $.ig.PredefinedShapes.prototype.instance().getShape($.ig.ST_ShapeType.prototype.$getName(shape._type2007().value())) != null;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CanRenderShape(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ChangeFontSize(System.Int32, System.Boolean)" />*/
	changeFontSize: function (currentSize, increase) {
		var fontSizes = $.ig.SpreadsheetUtilities.prototype.__fontSizes;
		var newIndex = fontSizes.binarySearch(currentSize);
		var newValue = currentSize;
		if (newIndex < 0) {
			newIndex = ~newIndex;
			if (newIndex == 0) {
				newValue = increase ? fontSizes.__inner[0] : currentSize;
			} else if (newIndex == fontSizes.count()) {
				newValue = increase ? currentSize : fontSizes.__inner[newIndex - 1];
			} else if (increase) {
				newValue = fontSizes.__inner[newIndex];
			} else {
				newValue = fontSizes.__inner[newIndex - 1];
			}
		} else if (!increase && newIndex > 0) {
			newValue = fontSizes.__inner[newIndex - 1];
		} else if (increase && newIndex < fontSizes.count() - 1) {
			newValue = fontSizes.__inner[newIndex + 1];
		}
		return newValue;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ChangeFontSize(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Contains`1(System.Collections.Generic.IList, Infragistics.Controls.Grids.Core.SpreadsheetUtilities.T)" />*/
	contains$1: function ($t, ranges, value) {
		for (var i = 0; i < ranges.count(); i++) {
			if (ranges.item(i)._containsInclusive(value)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Contains`1(System.Collections.Generic.IList, Infragistics.Controls.Grids.Core.SpreadsheetUtilities.T)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertLogicalPixelsToTwips(System.Double)" />*/
	convertLogicalPixelsToTwips: function (pixels) {
		return $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(pixels)) * 15;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertLogicalPixelsToTwips(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertTwipsToLogicalPixels(System.Int32)" />*/
	convertTwipsToLogicalPixels1: function (twips) {
		return twips / 15;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertTwipsToLogicalPixels(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertTwipsToLogicalPixels(System.Double)" />*/
	convertTwipsToLogicalPixels: function (twips) {
		return twips / 15;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ConvertTwipsToLogicalPixels(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Copy(System.Windows.Rect)" />*/
	copy: function (r) {
		return new $.ig.Rect(0, r.x(), r.y(), r.width(), r.height());
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Copy(System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateBuiltInCellFormatCategoryTable()" />*/
	createBuiltInCellFormatCategoryTable: function () {
		var table = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.ExcelCellFormatCategory.prototype.$type, 0);
		table.item(0, $.ig.ExcelCellFormatCategory.prototype.general);
		table.item(49, $.ig.ExcelCellFormatCategory.prototype.text);
		var $t = [ 1, 2, 3, 4, 37, 38, 39, 40 ];
		for (var i1 = 0; i1 < $t.length; i1++) {
			var i = $t[i1];
			table.item(i, $.ig.ExcelCellFormatCategory.prototype.number);
		}
		var $t1 = [ 5, 6, 7, 8 ];
		for (var i3 = 0; i3 < $t1.length; i3++) {
			var i2 = $t1[i3];
			table.item(i2, $.ig.ExcelCellFormatCategory.prototype.currency);
		}
		var $t2 = [ 41, 42, 43, 44 ];
		for (var i5 = 0; i5 < $t2.length; i5++) {
			var i4 = $t2[i5];
			table.item(i4, $.ig.ExcelCellFormatCategory.prototype.accounting);
		}
		var $t3 = [ 9, 10 ];
		for (var i7 = 0; i7 < $t3.length; i7++) {
			var i6 = $t3[i7];
			table.item(i6, $.ig.ExcelCellFormatCategory.prototype.percentage);
		}
		var $t4 = [ 11, 48 ];
		for (var i9 = 0; i9 < $t4.length; i9++) {
			var i8 = $t4[i9];
			table.item(i8, $.ig.ExcelCellFormatCategory.prototype.scientific);
		}
		var $t5 = [ 12, 13 ];
		for (var i11 = 0; i11 < $t5.length; i11++) {
			var i10 = $t5[i11];
			table.item(i10, $.ig.ExcelCellFormatCategory.prototype.fraction);
		}
		var $t6 = [ 18, 19, 20, 21, 45, 46, 47 ];
		for (var i13 = 0; i13 < $t6.length; i13++) {
			var i12 = $t6[i13];
			table.item(i12, $.ig.ExcelCellFormatCategory.prototype.time);
		}
		var $t7 = [ 14, 15, 16, 17, 22 ];
		for (var i15 = 0; i15 < $t7.length; i15++) {
			var i14 = $t7[i15];
			table.item(i14, $.ig.ExcelCellFormatCategory.prototype.date);
		}
		return table;
	}
	/*<EndMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateBuiltInCellFormatCategoryTable()" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellBoderOrderArray()" />*/
	createCellBoderOrderArray: function () {
		var cellBorderOrder = new Array(14);
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.none] = 0;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.hair] = 1;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.dashDotDot] = 2;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.dashDot] = 3;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.dotted] = 4;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.dashed] = 5;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.thin] = 6;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.mediumDashDotDot] = 7;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.slantedDashDot] = 8;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.mediumDashDot] = 9;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.mediumDashed] = 10;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.medium] = 11;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.thick] = 12;
		cellBorderOrder[$.ig.excel.CellBorderLineStyle.double1] = 13;
		return cellBorderOrder;
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellBoderOrderArray()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellFillPatternTemplateTable()" />*/
	createCellFillPatternTemplateTable: function () {
		var table = new $.ig.Dictionary$2($.ig.excel.FillPatternStyle.prototype.$type, Array, 0);
		var en = $.ig.Enum.prototype.getValues($.ig.excel.FillPatternStyle.prototype.$type).getEnumerator();
		while (en.moveNext()) {
			var pattern = en.current();
			var patternTemplate = null;
			switch (pattern) {
				case $.ig.excel.FillPatternStyle.gray75percent:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1, 1, 1, 0 ]);
						$ret.add([ 1, 0, 1, 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.gray50percent:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1, 0 ]);
						$ret.add([ 0, 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.gray25percent:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1, 0, 0, 0 ]);
						$ret.add([ 0, 0, 1, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.gray12percent:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1, 0, 0, 0 ]);
						$ret.add([ 0, 0, 0, 0 ]);
						$ret.add([ 0, 0, 1, 0 ]);
						$ret.add([ 0, 0, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.gray6percent:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1, 0, 0, 0, 0, 0, 0, 0 ]);
						$ret.add([ 0, 0, 0, 0, 0, 0, 0, 0 ]);
						$ret.add([ 0, 0, 0, 0, 1, 0, 0, 0 ]);
						$ret.add([ 0, 0, 0, 0, 0, 0, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.verticalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 1, 1, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.horizontalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1 ]);
						$ret.add([ 0 ]);
						$ret.add([ 0 ]);
						$ret.add([ 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.reverseDiagonalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 0, 1, 1 ]);
						$ret.add([ 1, 0, 0, 1 ]);
						$ret.add([ 1, 1, 0, 0 ]);
						$ret.add([ 0, 1, 1, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.diagonalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 0, 1, 1 ]);
						$ret.add([ 0, 1, 1, 0 ]);
						$ret.add([ 1, 1, 0, 0 ]);
						$ret.add([ 1, 0, 0, 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.diagonalCrosshatch:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 0, 1, 1 ]);
						$ret.add([ 0, 0, 1, 1 ]);
						$ret.add([ 1, 1, 0, 0 ]);
						$ret.add([ 1, 1, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thickDiagonalCrosshatch:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 0, 1, 1 ]);
						$ret.add([ 1, 1, 1, 1 ]);
						$ret.add([ 1, 1, 0, 0 ]);
						$ret.add([ 1, 1, 1, 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thinHorizontalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0 ]);
						$ret.add([ 0 ]);
						$ret.add([ 0 ]);
						$ret.add([ 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thinVerticalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 1, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thinReverseDiagonalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 0, 1, 0 ]);
						$ret.add([ 0, 0, 0, 1 ]);
						$ret.add([ 1, 0, 0, 0 ]);
						$ret.add([ 0, 1, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thinDiagonalStripe:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 0, 0, 1 ]);
						$ret.add([ 0, 0, 1, 0 ]);
						$ret.add([ 0, 1, 0, 0 ]);
						$ret.add([ 1, 0, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thinHorizontalCrosshatch:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 0, 1, 0, 0 ]);
						$ret.add([ 0, 1, 0, 0 ]);
						$ret.add([ 0, 1, 0, 0 ]);
						$ret.add([ 1, 1, 1, 1 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.thinDiagonalCrosshatch:
					patternTemplate = (function () {
						var $ret = new Array();
						$ret.add([ 1, 0, 1, 0 ]);
						$ret.add([ 0, 0, 0, 1 ]);
						$ret.add([ 1, 0, 1, 0 ]);
						$ret.add([ 0, 1, 0, 0 ]);
						return $ret;
					}());
					break;
				case $.ig.excel.FillPatternStyle.$default:
				case $.ig.excel.FillPatternStyle.solid:
				case $.ig.excel.FillPatternStyle.none:
					break;
				default:
					$.ig.Debug.prototype.assert1(false, "Unknown FillPatternStyle:" + $.ig.excel.FillPatternStyle.prototype.getBox(pattern));
					break;
			}
			table.item(pattern, patternTemplate);
		}
		return table;
	}
	/*<EndMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellFillPatternTemplateTable()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellInfo(Infragistics.Documents.Excel.WorksheetMergedCellsRegion)" />*/
	createCellInfo: function (region) {
		var address = region._address();
		return (function () {
			var $ret = new $.ig.SpreadsheetCellValueInfo();
			$ret._startColumnIndex = address._firstColumnIndex();
			$ret._startRowIndex = address._firstRowIndex();
			$ret._endColumnIndex = address._lastColumnIndex();
			$ret._endRowIndex = address._lastRowIndex();
			$ret.isMergedCell(true);
			$ret._rowWithValue = region._topRow();
			$ret._columnIndexForValue = region.firstColumn();
			$ret._value = region.value();
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellInfo(Infragistics.Documents.Excel.WorksheetMergedCellsRegion)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellInfo(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	createCellInfo1: function (row, columnIndex) {
		return (function () {
			var $ret = new $.ig.SpreadsheetCellValueInfo();
			$ret._startColumnIndex = columnIndex;
			$ret._endColumnIndex = columnIndex;
			$ret._startRowIndex = row.index();
			$ret._endRowIndex = row.index();
			$ret.isMergedCell(false);
			$ret._rowWithValue = row;
			$ret._columnIndexForValue = columnIndex;
			$ret._value = row._getCellValue1(columnIndex);
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateCellInfo(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateDashArray(Infragistics.Controls.Grids.Core.CellBorderPen)" />*/
	createDashArray: function (pen) {
		switch (pen) {
			case $.ig.CellBorderPen.prototype.hair: return [ 1, 1 ];
			case $.ig.CellBorderPen.prototype.dashDotDot: return [ 9, 3, 3, 3, 3, 3 ];
			case $.ig.CellBorderPen.prototype.dashDot: return [ 9, 3, 3, 3 ];
			case $.ig.CellBorderPen.prototype.dotted: return [ 2, 2 ];
			case $.ig.CellBorderPen.prototype.dashed: return [ 3, 1 ];
			case $.ig.CellBorderPen.prototype.mediumDashDotDot: return [ 3, 3, 9, 3, 3, 3 ];
			case $.ig.CellBorderPen.prototype.slantedDashDotOuter: return [ 5, 1, 11, 1 ];
			case $.ig.CellBorderPen.prototype.slantedDashDotInner: return [ 4, 2, 10, 2 ];
			case $.ig.CellBorderPen.prototype.slantedDashDotDiagonal: return [ 5, 1, 2, 1 ];
			case $.ig.CellBorderPen.prototype.mediumDashDot: return [ 3, 3, 9, 3, 3, 3 ];
			case $.ig.CellBorderPen.prototype.mediumDashed: return [ 9, 3 ];
			case $.ig.CellBorderPen.prototype.medium:
			case $.ig.CellBorderPen.prototype.thick:
			case $.ig.CellBorderPen.prototype.thin:
			case $.ig.CellBorderPen.prototype.none:
				return null;
			default:
				$.ig.Debug.prototype.assert1(false, "Unrecognized pen style:" + $.ig.CellBorderPen.prototype.getBox(pen));
				return null;
		}
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateDashArray(Infragistics.Controls.Grids.Core.CellBorderPen)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormatColors()" />*/
	createFormatColors: function () {
		var colors = new $.ig.Dictionary$2(String, $.ig.Color.prototype.$type, 2, $.ig.StringComparer.prototype.invariantCultureIgnoreCase);
		colors.item("black", $.ig.Colors.prototype.black());
		colors.item("green", $.ig.Color.prototype.fromArgb(255, 0, 255, 0));
		colors.item("white", $.ig.Colors.prototype.white());
		colors.item("blue", $.ig.Colors.prototype.blue());
		colors.item("magenta", $.ig.Colors.prototype.magenta());
		colors.item("yellow", $.ig.Colors.prototype.yellow());
		colors.item("cyan", $.ig.Colors.prototype.cyan());
		colors.item("red", $.ig.Colors.prototype.red());
		return colors;
	}
	/*<EndMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormatColors()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocument(Infragistics.Documents.Excel.FormattedText, System.Boolean)" />*/
	createFormattedTextDocument1: function (ft, isVisitedHyperlink) {
		var font = ft._getFont(0);
		var fallback = ft._workbook().styles().normalStyle().styleFormat().font();
		var doc = $.ig.SpreadsheetUtilities.prototype.createFormattedTextDocumentHelper(null, new $.ig.ResolvedWorkbookFont(font, fallback), ft._workbook(), isVisitedHyperlink);
		var nextExpectedStart = 0;
		var en = ft.paragraphs().getEnumerator();
		while (en.moveNext()) {
			var excelPara = en.current();
			var p = new $.ig.IGFormattedTextParagraph();
			p._alignment = $.ig.util.toNullable($.ig.excel.HorizontalTextAlignment.prototype.$type, excelPara.alignment());
			p._start = doc._text.length();
			doc._text.append5(excelPara.unformattedString());
			p._length = doc._text.length() - p._start;
			doc._children.add(p);
			var runs = excelPara._getFormattingRuns(ft._workbook());
			for (var i = 0; i < runs.count(); i++) {
				var run = runs.__inner[i];
				var endIdx = i == runs.count() - 1 ? (p._start + p._length) : runs.__inner[i + 1].firstFormattedCharAbsolute();
				nextExpectedStart = $.ig.SpreadsheetUtilities.prototype.addRunToParagraph(p, nextExpectedStart, run.getFont(ft._workbook()), run.firstFormattedCharAbsolute(), endIdx - run.firstFormattedCharAbsolute());
			}
			nextExpectedStart = $.ig.SpreadsheetUtilities.prototype.processEndOfParagraph(p, nextExpectedStart);
		}
		doc._length = doc._text.length();
		return doc;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocument(Infragistics.Documents.Excel.FormattedText, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocument(Infragistics.Documents.Excel.FormattedString, Infragistics.Controls.IGTextAlignment, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	createFormattedTextDocument: function (fs, textAlignment, cellFormat, isVisitedHyperlink) {
		var font = new $.ig.FormattedStringFontResolved(fs._getFont(0), cellFormat);
		var doc = $.ig.SpreadsheetUtilities.prototype.createFormattedTextDocumentHelper(fs.unformattedString(), font, fs._workbook(), isVisitedHyperlink);
		var p = new $.ig.IGFormattedTextParagraph();
		p._alignment = $.ig.util.toNullable($.ig.excel.HorizontalTextAlignment.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toHorizontalTextAlignment(textAlignment));
		p._length = fs._unformattedStringLength();
		doc._children.add(p);
		var nextExpectedStart = 0;
		var en = fs.getFormattingRuns().getEnumerator();
		while (en.moveNext()) {
			var run = en.current();
			nextExpectedStart = $.ig.SpreadsheetUtilities.prototype.addRunToParagraph(p, nextExpectedStart, run, run.startIndex(), run.length());
		}
		nextExpectedStart = $.ig.SpreadsheetUtilities.prototype.processEndOfParagraph(p, nextExpectedStart);
		return doc;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocument(Infragistics.Documents.Excel.FormattedString, Infragistics.Controls.IGTextAlignment, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocument(System.String, Infragistics.Documents.Excel.Workbook, Infragistics.Controls.IGTextAlignment, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	createFormattedTextDocument2: function (value, wb, textAlignment, cellFormat, isVisitedHyperlink) {
		if (value == null) {
			value = String.empty();
		}
		var font = new $.ig.ResolvedWorksheetCellFormatDataFont(cellFormat);
		var doc = $.ig.SpreadsheetUtilities.prototype.createFormattedTextDocumentHelper(value, font, wb, isVisitedHyperlink);
		var p = new $.ig.IGFormattedTextParagraph();
		p._alignment = $.ig.util.toNullable($.ig.excel.HorizontalTextAlignment.prototype.$type, $.ig.SpreadsheetUtilities.prototype.toHorizontalTextAlignment(textAlignment));
		p._length = doc._length;
		doc._children.add(p);
		var igRun = new $.ig.IGFormattedTextRun();
		igRun._length = doc._length;
		igRun._textSettings._initializeDefaults(doc._textSettings);
		p._children.add(igRun);
		return doc;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocument(System.String, Infragistics.Documents.Excel.Workbook, Infragistics.Controls.IGTextAlignment, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocumentHelper(System.String, Infragistics.Documents.Excel.IWorkbookFont, Infragistics.Documents.Excel.Workbook, System.Boolean)" />*/
	createFormattedTextDocumentHelper: function (unformattedText, defaultDocumentFont, workbook, isVisitedHyperlink) {
		if (unformattedText == null) {
			unformattedText = String.empty();
		}
		var doc = new $.ig.IGFormattedTextDocument();
		doc._text.append5(unformattedText);
		doc._length = unformattedText.length;
		$.ig.SpreadsheetUtilities.prototype.initializeFormattedTextSettings(doc._textSettings, defaultDocumentFont);
		if (isVisitedHyperlink && workbook != null) {
			$.ig.SpreadsheetUtilities.prototype.replaceSettingsForeground(workbook, doc, $.ig.BuiltInStyleType.prototype.hyperlink, $.ig.BuiltInStyleType.prototype.followedHyperlink);
		}
		return doc;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreateFormattedTextDocumentHelper(System.String, Infragistics.Documents.Excel.IWorkbookFont, Infragistics.Documents.Excel.Workbook, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreatePoint(System.Double, System.Double)" />*/
	createPoint: function (x, y) {
		return { __x: x, __y: y, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetUtilities::CreatePoint(System.Double, System.Double)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::DoubleClickTimeInMs()" />*/
	doubleClickTimeInMs: function () {
		return 500;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::DoubleClickTimeInMs()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.Direction Infragistics.Controls.Grids.Core.SpreadsheetUtilities::FlipDirection(Infragistics.Controls.Grids.Core.Direction)" />*/
	flipDirection: function (direction) {
		switch (direction) {
			case $.ig.Direction.prototype.right: return $.ig.Direction.prototype.left;
			case $.ig.Direction.prototype.left: return $.ig.Direction.prototype.right;
			case $.ig.Direction.prototype.up: return $.ig.Direction.prototype.down;
			case $.ig.Direction.prototype.down: return $.ig.Direction.prototype.up;
			default:
				$.ig.Debug.prototype.fail("Unrecognized value:" + $.ig.Direction.prototype.getBox(direction));
				return direction;
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.Direction Infragistics.Controls.Grids.Core.SpreadsheetUtilities::FlipDirection(Infragistics.Controls.Grids.Core.Direction)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::FormatExcelDate(Infragistics.Documents.Excel.CalcEngine.ValueFormatter, System.DateTime, Infragistics.Documents.Excel.Workbook)" />*/
	formatExcelDate: function (formatter, validExcelDate, workbook) {
		var testValue = $.ig.excel.ExcelCalcValue.prototype._dateTimeToExcelDate(workbook, validExcelDate);
		var formattedText = null;
		if (testValue.hasValue()) {
			var $ret = formatter.tryFormatValue(testValue.value(), "", formattedText);
			formattedText = $ret.p2;
		}
		return formattedText;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::FormatExcelDate(Infragistics.Documents.Excel.CalcEngine.ValueFormatter, System.DateTime, Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ShouldUseOtherBorderLineStyle(Infragistics.Documents.Excel.CellBorderLineStyle, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	shouldUseOtherBorderLineStyle: function (nearBorderStyle, otherBorderStyle) {
		if (nearBorderStyle == $.ig.excel.CellBorderLineStyle.$default) {
			nearBorderStyle = $.ig.excel.CellBorderLineStyle.none;
		} else if (nearBorderStyle >= $.ig.SpreadsheetUtilities.prototype.__cellBorderOrder.length) {
			nearBorderStyle = $.ig.excel.CellBorderLineStyle.thin;
		}
		if (otherBorderStyle == $.ig.excel.CellBorderLineStyle.$default) {
			otherBorderStyle = $.ig.excel.CellBorderLineStyle.none;
		} else if (otherBorderStyle >= $.ig.SpreadsheetUtilities.prototype.__cellBorderOrder.length) {
			otherBorderStyle = $.ig.excel.CellBorderLineStyle.thin;
		}
		var weightNear = $.ig.SpreadsheetUtilities.prototype.__cellBorderOrder[nearBorderStyle];
		var weightOther = $.ig.SpreadsheetUtilities.prototype.__cellBorderOrder[otherBorderStyle];
		return weightOther > weightNear;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ShouldUseOtherBorderLineStyle(Infragistics.Documents.Excel.CellBorderLineStyle, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetBorderThickness(Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	getBorderThickness: function (style) {
		switch (style) {
			case $.ig.excel.CellBorderLineStyle.double1:
			case $.ig.excel.CellBorderLineStyle.thick:
				return 3;
			case $.ig.excel.CellBorderLineStyle.medium:
			case $.ig.excel.CellBorderLineStyle.mediumDashDot:
			case $.ig.excel.CellBorderLineStyle.mediumDashDotDot:
			case $.ig.excel.CellBorderLineStyle.mediumDashed:
			case $.ig.excel.CellBorderLineStyle.slantedDashDot:
				return 2;
			case $.ig.excel.CellBorderLineStyle.none: return 0;
			default: return 1;
		}
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetBorderThickness(Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetBorderWeight(Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	getBorderWeight: function (borderStyle) {
		if (borderStyle == $.ig.excel.CellBorderLineStyle.$default) {
			borderStyle = $.ig.excel.CellBorderLineStyle.none;
		} else if (borderStyle >= $.ig.SpreadsheetUtilities.prototype.__cellBorderOrder.length) {
			borderStyle = $.ig.excel.CellBorderLineStyle.thin;
		}
		return $.ig.SpreadsheetUtilities.prototype.__cellBorderOrder[borderStyle];
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetBorderWeight(Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ExcelCellFormatCategory Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetBuiltInCellFormatCategory(System.Int32)" />*/
	getBuiltInCellFormatCategory: function (formatStringIndex) {
		var category;
		if (!(function () { var $ret = $.ig.SpreadsheetUtilities.prototype.__builtInCellFormatCategoryTable.tryGetValue(formatStringIndex, category); category = $ret.p1; return $ret.ret; }())) {
			category = $.ig.ExcelCellFormatCategory.prototype.custom;
		}
		return category;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ExcelCellFormatCategory Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetBuiltInCellFormatCategory(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetCellContextMenuArea(Infragistics.Controls.Grids.Core.SpreadsheetSelection)" />*/
	getCellContextMenuArea: function (selection) {
		var area;
		if (selection.cellRanges().count() > 1) {
			area = $.ig.SpreadsheetSelectionContextMenuArea.prototype.cell;
		}
		if (selection._selectedRows().count() > 0) {
			area = $.ig.SpreadsheetSelectionContextMenuArea.prototype.row;
		} else if (selection._selectedColumns().count() > 0) {
			area = $.ig.SpreadsheetSelectionContextMenuArea.prototype.column;
		} else {
			area = $.ig.SpreadsheetSelectionContextMenuArea.prototype.cell;
		}
		return area;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionContextMenuArea Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetCellContextMenuArea(Infragistics.Controls.Grids.Core.SpreadsheetSelection)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetChangeDescription(Infragistics.Documents.Excel.ExcelChangeAction, System.String)" />*/
	getChangeDescription: function (changeType, name) {
		var resourceName = null;
		switch (changeType) {
			case $.ig.ExcelChangeAction.prototype.worksheetCellAdd:
				resourceName = "Undo_InsertCells";
				break;
			case $.ig.ExcelChangeAction.prototype.worksheetColumnAdd:
				resourceName = "Undo_InsertColumns";
				break;
			case $.ig.ExcelChangeAction.prototype.worksheetRowAdd:
				resourceName = "Undo_InsertRows";
				break;
			case $.ig.ExcelChangeAction.prototype.worksheetCellRemove:
			case $.ig.ExcelChangeAction.prototype.worksheetColumnRemove:
			case $.ig.ExcelChangeAction.prototype.worksheetRowRemove:
				resourceName = "Undo_Delete";
				break;
			case $.ig.ExcelChangeAction.prototype.cellFormat:
			case $.ig.ExcelChangeAction.prototype.rowFormat:
			case $.ig.ExcelChangeAction.prototype.tableAreaFormat:
				resourceName = "Undo_FormatCells";
				break;
			case $.ig.ExcelChangeAction.prototype.clearMergedRegions:
			case $.ig.ExcelChangeAction.prototype.mergedRegionAdd:
			case $.ig.ExcelChangeAction.prototype.mergedRegionRemove:
				resourceName = "Undo_MergeCells";
				break;
			case $.ig.ExcelChangeAction.prototype.clearHyperlinks:
			case $.ig.ExcelChangeAction.prototype.hyperlink:
			case $.ig.ExcelChangeAction.prototype.hyperlinkAdd:
			case $.ig.ExcelChangeAction.prototype.hyperlinkRemove:
				resourceName = "Undo_Hyperlink";
				break;
			case $.ig.ExcelChangeAction.prototype.zoom:
				resourceName = "Undo_Zoom";
				break;
			case $.ig.ExcelChangeAction.prototype.namedReferenceAdd:
			case $.ig.ExcelChangeAction.prototype.namedReferenceRemove:
			case $.ig.ExcelChangeAction.prototype.clearNamedReferences:
				resourceName = "Undo_CreateNamedReference";
				break;
			case $.ig.ExcelChangeAction.prototype.tableAdd:
				resourceName = "Undo_CreateTable";
				break;
			case $.ig.ExcelChangeAction.prototype.tableRemove:
				resourceName = "Undo_RemoveTable";
				break;
			case $.ig.ExcelChangeAction.prototype.clearWorksheetTables:
				resourceName = "Undo_ClearTables";
				break;
			case $.ig.ExcelChangeAction.prototype.displayOptions:
				{
					switch (name) {
						case "Reset":
							resourceName = "Undo_ResetOptions";
							break;
						case "TabColorInfo":
							resourceName = "Undo_TabColor";
							break;
						case "View":
							resourceName = "Undo_View";
							break;
					}
					break;
				}
			case $.ig.ExcelChangeAction.prototype.applyTableFilters:
			case $.ig.ExcelChangeAction.prototype.filter:
			case $.ig.ExcelChangeAction.prototype.fixedDateGroupAdd:
			case $.ig.ExcelChangeAction.prototype.fixedDateGroupRemove:
			case $.ig.ExcelChangeAction.prototype.clearFixedDateGroups:
				resourceName = "Undo_Filter";
				break;
			case $.ig.ExcelChangeAction.prototype.tableSort:
			case $.ig.ExcelChangeAction.prototype.applySortConditions:
			case $.ig.ExcelChangeAction.prototype.clearSortConditions:
				resourceName = "Undo_Sort";
				break;
			case $.ig.ExcelChangeAction.prototype.clearTableStyles:
			case $.ig.ExcelChangeAction.prototype.tableStyle:
			case $.ig.ExcelChangeAction.prototype.tableStyleAdd:
			case $.ig.ExcelChangeAction.prototype.tableStyleRemove:
				resourceName = "Undo_Style";
				break;
			case $.ig.ExcelChangeAction.prototype.column:
				{
					switch (name) {
						case "Width":
						case "Hidden":
							resourceName = "Undo_ResizeColumn";
							break;
						case "OutlineLevel":
							resourceName = "Undo_Group";
							break;
					}
					break;
				}
			case $.ig.ExcelChangeAction.prototype.row:
				{
					switch (name) {
						case "Height":
						case "Hidden":
							resourceName = "Undo_ResizeRow";
							break;
						case "OutlineLevel":
							resourceName = "Undo_Group";
							break;
					}
					break;
				}
		}
		if (resourceName == null) {
			return $.ig.ExcelChangeAction.prototype.$getName(changeType);
		}
		return $.ig.spreadsheet.locale.getString(resourceName, []);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetChangeDescription(Infragistics.Documents.Excel.ExcelChangeAction, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetEditText(System.Object, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	getEditText: function (value, ws, format) {
		var strValue = String.empty();
		var wb = ws.workbook();
		if (value == null) {
		} else if (typeof value === 'string') {
			strValue = value;
		} else if ($.ig.util.cast($.ig.excel.Formula.prototype.$type, value) !== null) {
			strValue = (value)._toString1(wb.cellReferenceMode());
		} else if ($.ig.util.cast($.ig.excel.ErrorValue.prototype.$type, value) !== null) {
			strValue = (value).toString();
		} else if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null) {
			strValue = value ? "TRUE" : "FALSE";
		} else if ($.ig.util.cast($.ig.excel.FormattedString.prototype.$type, value) !== null) {
			strValue = (value).unformattedString();
		} else if (value != null) {
			var numericValue;
			if ((function () { var $ret = $.ig.ExcelUtils.prototype.tryGetNumericValue(wb, value, numericValue); numericValue = $ret.p2; return $ret.ret; }())) {
				var formatter = wb._formats().getValueFormatter(format._formatStringIndexResolved());
				$.ig.Debug.prototype.assert1(formatter.isValid(), "What should we do with an invalid format?");
				if (formatter.isValid()) {
					var sectionIndex = -1;
					sectionIndex = formatter.getSectionIndex(numericValue);
					if (sectionIndex >= 0) {
						var sectionInfo = formatter.getSectionInfo(sectionIndex);
						var datetime = $.ig.util.toNullable($.ig.Date.prototype.$type, null);
						var timespan = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
						if (sectionInfo.isDateSection() && numericValue >= 0) {
							if (sectionInfo.hasAnyDateParts()) {
								datetime = $.ig.excel.ExcelCalcValue.prototype._excelDateToDateTime2(wb, numericValue, true, true);
							} else if (sectionInfo.hasAnyTimeParts()) {
								var tempDate = $.ig.excel.ExcelCalcValue.prototype._excelDateToDateTime2(wb, numericValue, true, true);
								if ($.ig.util.nullableNotEquals(tempDate, null)) {
									timespan = $.ig.util.toNullable($.ig.Number.prototype.$type, $.ig.excel.ExcelCalcValue.prototype._excelDateToTimeOfDay(numericValue, true));
									if ($.ig.util.nullableNotEquals(timespan, null) && $.ig.util.timeSpanTotalDays(timespan.value()) >= 1) {
										datetime = tempDate;
									}
								}
							}
						}
						if ($.ig.util.nullableNotEquals(datetime, null)) {
							if (sectionInfo.hasAnyTimeParts() || $.ig.Date.prototype.getTimeOfDay(datetime.value()) != (0)) {
								strValue = $.ig.SpreadsheetUtilities.prototype.toLongGeneralDateString(datetime.value(), ws);
							} else {
								strValue = $.ig.SpreadsheetUtilities.prototype.toShortDateString(datetime.value(), ws);
							}
						} else if ($.ig.util.nullableNotEquals(timespan, null)) {
							strValue = $.ig.SpreadsheetUtilities.prototype.toLongTimeString1(timespan.value(), ws);
						} else if (sectionInfo.isNumberSection()) {
							var percentCount = sectionInfo.percentCount();
							if (percentCount == 1) {
								strValue = $.ig.SpreadsheetUtilities.prototype.toPrecisionPercentString(numericValue, ws._culture());
							}
						}
					}
				}
				if (String.isNullOrEmpty(strValue)) {
					strValue = $.ig.util.numberToString1(numericValue, "r", ws._culture());
				}
			} else {
				$.ig.Debug.prototype.fail("What type is this?");
			}
		}
		return strValue;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetEditText(System.Object, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetFollowedHyperlinkColor(Infragistics.Documents.Excel.Workbook)" />*/
	getFollowedHyperlinkColor: function (workbook) {
		var colorInfo = workbook.styles()._getBuiltInStyle($.ig.BuiltInStyleType.prototype.followedHyperlink)._styleFormatInternal()._fontColorInfoResolved();
		if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(colorInfo, null)) {
			return $.ig.ExcelUtils.prototype.colorEmpty;
		} else {
			return $.ig.ExcelUtils.prototype.toNative(colorInfo._getResolvedColorInternal(workbook, true, true));
		}
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetFollowedHyperlinkColor(Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetFormatColor(System.String, Infragistics.Documents.Excel.WorkbookColorPalette)" />*/
	getFormatColor: function (colorString, palette) {
		if (String.isNullOrEmpty(colorString)) {
			return $.ig.ExcelUtils.prototype.colorEmpty;
		}
		if ($.ig.SpreadsheetUtilities.prototype.__formatColors == null) {
			$.ig.SpreadsheetUtilities.prototype.__formatColors = $.ig.SpreadsheetUtilities.prototype.createFormatColors();
		}
		var color = new $.ig.Color();
		if (!(function () { var $ret = $.ig.SpreadsheetUtilities.prototype.__formatColors.tryGetValue(colorString, color); color = $ret.p1; return $ret.ret; }())) {
			if (colorString.startsWith1("Color", $.ig.StringComparison.prototype.invariantCultureIgnoreCase) && colorString.length > 5) {
				colorString = colorString.substr(5);
			}
			if ($.ig.util.isDigit(colorString.charAt(0))) {
				var index;
				if ((function () { var $ret = $.ig.util.tryParseInt32_1(colorString, index); index = $ret.p1; return $ret.ret; }()) && index >= 1 && index <= 56) {
					color = palette._item$i(index - 1);
				}
			} else {
				if (!(function () { var $ret = $.ig.SpreadsheetUtilities.prototype.__formatColors.tryGetValue(colorString, color); color = $ret.p1; return $ret.ret; }())) {
					color = $.ig.ExcelUtils.prototype.colorEmpty;
				}
			}
		}
		return color;
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetFormatColor(System.String, Infragistics.Documents.Excel.WorkbookColorPalette)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetGeneralAlignment(System.Object, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.Workbook)" />*/
	getGeneralAlignment: function (value, format, workbook) {
		if (value != null) {
			if ($.ig.util.cast($.ig.Boolean.prototype.$type, value) !== null || $.ig.util.cast($.ig.excel.ErrorValue.prototype.$type, value) !== null) {
				return $.ig.excel.HorizontalCellAlignment.center;
			}
			if ($.ig.ExcelUtils.prototype.isNumber(value) || $.ig.util.cast($.ig.Date.prototype.$type, value) !== null) {
				if (workbook != null) {
					var index = format._formatStringIndexResolved();
					if (index != $.ig.WorkbookFormatCollection.prototype.generalFormatIndex) {
						var formatter = workbook._formats().getValueFormatter(index);
						if (formatter.isValid() && formatter.isTextSection(0)) {
							return $.ig.excel.HorizontalCellAlignment.left;
						}
					}
				}
				return $.ig.excel.HorizontalCellAlignment.right;
			}
		}
		return $.ig.excel.HorizontalCellAlignment.left;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetGeneralAlignment(System.Object, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetPenThickness(Infragistics.Controls.Grids.Core.CellBorderPen, System.Double)" />*/
	getPenThickness: function (pen, pixelThickness) {
		switch (pen) {
			case $.ig.CellBorderPen.prototype.mediumDashDotDot:
			case $.ig.CellBorderPen.prototype.slantedDashDotDiagonal:
			case $.ig.CellBorderPen.prototype.mediumDashDot:
			case $.ig.CellBorderPen.prototype.mediumDashed:
			case $.ig.CellBorderPen.prototype.medium:
				pixelThickness *= 2;
				break;
			case $.ig.CellBorderPen.prototype.thick:
				pixelThickness *= 3;
				break;
		}
		return pixelThickness;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetPenThickness(Infragistics.Controls.Grids.Core.CellBorderPen, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetPrecision(System.Double)" />*/
	getPrecision: function (numericValue) {
		var s = $.ig.util.numberToString1(numericValue, "r", $.ig.CultureInfo.prototype.invariantCulture());
		var idx = s.indexOf(".");
		return idx < 0 ? 0 : s.length - (idx + 1);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetPrecision(System.Double)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetSelectedWorksheets(Infragistics.Documents.Excel.Workbook)" />*/
	getSelectedWorksheets: function (workbook) {
		var ws = null;
		var sheets = null;
		var en = workbook.worksheets().getEnumerator();
		while (en.moveNext()) {
			var sheet = en.current();
			if (sheet.displayOptions()._isTabSelected()) {
				if (ws == null) {
					ws = sheet;
				} else {
					if (sheets == null) {
						sheets = new $.ig.List$1($.ig.excel.Worksheet.prototype.$type, 0);
						sheets.add(ws);
					}
					sheets.add(sheet);
				}
			}
		}
		if (sheets != null) {
			return sheets.toArray();
		} else if (ws != null) {
			return [ ws ];
		} else {
			return new Array(0);
		}
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetSelectedWorksheets(Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeCustomAvList(Infragistics.Documents.Excel.WorksheetShape)" />*/
	getShapeCustomAvList: function (shape) {
		var customAvList = null;
		if (shape != null) {
			var ctShape = $.ig.util.cast($.ig.ICT_ShapePropertiesOwner.prototype.$type, shape._excel2007GraphicalObjectContent());
			if (ctShape != null && ctShape.spPr() != null) {
				var geom = $.ig.util.cast($.ig.CT_PresetGeometry2D.prototype.$type, ctShape.spPr().geom());
				if (geom.avLst() != null) {
					customAvList = geom.avLst();
				}
			}
		}
		return customAvList;
	}
	/*<EndMethod Name="Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeCustomAvList(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.ShapeFill Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeFill(Infragistics.Documents.Excel.WorksheetShape)" />*/
	getShapeFill: function (shape) {
		var fill = null;
		if (shape._canHaveFill()) {
			fill = shape._fillResolved();
			if (fill == $.ig.ShapeFillNoFill.prototype._instance) {
				fill = null;
			}
		}
		return fill;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.ShapeFill Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeFill(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.ShapeOutline Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeOutline(Infragistics.Documents.Excel.WorksheetShape)" />*/
	getShapeOutline: function (shape) {
		var outline = null;
		if (shape._canHaveOutline()) {
			outline = shape._outlineResolved();
			if (outline == $.ig.ShapeOutlineNoOutline.prototype._instance) {
				outline = null;
			}
		}
		return outline;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.ShapeOutline Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeOutline(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeOutlineOverflowInTwips(Infragistics.Documents.Excel.WorksheetShape)" />*/
	getShapeOutlineOverflowInTwips: function (shape) {
		if (shape == null || !shape._canHaveOutline()) {
			return 0;
		}
		var outline = shape.outline();
		if (outline == null || outline == $.ig.ShapeOutlineNoOutline.prototype._instance) {
			return 0;
		}
		var width = $.ig.ExcelUtils.prototype.eMUToTwips(outline._widthInternal());
		if ($.ig.util.cast($.ig.excel.WorksheetImage.prototype.$type, shape) !== null == false) {
			width /= 2;
		}
		return width;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetShapeOutlineOverflowInTwips(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetWorksheetRegions(Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.IList)" />*/
	getWorksheetRegions: function (worksheet, ranges) {
		var regions = new Array(ranges.count());
		for (var i = 0; i < regions.length; i++) {
			var range = ranges.item(i);
			regions[i] = worksheet._getCachedRegion1(range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn());
		}
		return regions;
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::GetWorksheetRegions(Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::HasWhitespace(System.String, System.Int32, System.Int32)" />*/
	hasWhitespace: function (text, startIndex, length) {
		if (text != null) {
			for (var i = startIndex, end = Math.min(text.length, startIndex + length); i < end; i++) {
				if (/\s/i.test(text.charAt(i))) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::HasWhitespace(System.String, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IndexOfCarriageReturn(System.String, System.Int32)" />*/
	indexOfCarriageReturn: function (text, start) {
		var cr = text.indexOf('\r', start);
		if (cr < 0) {
			cr = text.indexOf('\n', start);
		}
		return cr;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IndexOfCarriageReturn(System.String, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IndexOfCarriageReturn(System.String, System.Int32, System.Int32)" />*/
	indexOfCarriageReturn1: function (text, start, count) {
		var cr = text.indexOf('\r', start);
		if (cr < 0 || cr >= start + count - 1) {
			cr = text.indexOf('\n', start);
			if (cr >= start + count - 1) {
				cr = -1;
			}
		}
		return cr;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IndexOfCarriageReturn(System.String, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::InitializeFormattedTextSettings(Infragistics.Controls.Grids.Core.IGFormattedTextSettings, Infragistics.Documents.Excel.IWorkbookFont)" />*/
	initializeFormattedTextSettings: function (settings, font) {
		var bold = font._bold$i();
		if ($.ig.util.nullableNotEquals(bold, null)) {
			settings._bold($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(bold, true)));
		}
		var color = font.colorInfo();
		if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(color, null)) {
			settings._foreground(color);
		}
		var height = font.height();
		if (height >= 0) {
			settings._height($.ig.util.toNullable(Number, height));
		}
		var italic = font._italic$i();
		if ($.ig.util.nullableNotEquals(italic, null)) {
			settings._italic($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(italic, true)));
		}
		var fontName = font.name();
		if (!String.isNullOrEmpty(fontName)) {
			settings._font(fontName);
		}
		var strikeout = font._strikeout$i();
		if ($.ig.util.nullableNotEquals(strikeout, null)) {
			settings._strikeThrough($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(strikeout, true)));
		}
		var superSubScript = font.superscriptSubscriptStyle();
		if (superSubScript != $.ig.excel.FontSuperscriptSubscriptStyle.$default) {
			settings._superSubScript($.ig.util.toNullable($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, superSubScript));
		}
		var underline = font.underlineStyle();
		if (underline != $.ig.excel.FontUnderlineStyle.$default) {
			settings._underlineStyle($.ig.util.toNullable($.ig.excel.FontUnderlineStyle.prototype.$type, underline));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::InitializeFormattedTextSettings(Infragistics.Controls.Grids.Core.IGFormattedTextSettings, Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsDoubleUnderlineStyle(Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	isDoubleUnderlineStyle: function (underlineStyle) {
		return underlineStyle == $.ig.excel.FontUnderlineStyle.double1 || underlineStyle == $.ig.excel.FontUnderlineStyle.doubleAccounting;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsDoubleUnderlineStyle(Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsEmptyFill(Infragistics.Documents.Excel.CellFill)" />*/
	isEmptyFill: function (fill) {
		if (fill == null || $.ig.Object.prototype.referenceEquals(fill, $.ig.excel.CellFill.prototype.noColor())) {
			return true;
		}
		return $.ig.util.cast($.ig.excel.CellFillPattern.prototype.$type, fill) !== null && (fill).patternStyle() == $.ig.excel.FillPatternStyle.none;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsEmptyFill(Infragistics.Documents.Excel.CellFill)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsHyperlinkText(System.String)" />*/
	isHyperlinkText: function (newText) {
		if (String.isNullOrEmpty(newText) || /\s/i.test(newText.charAt(0))) {
			return false;
		}
		var isValidUri = false;
		var atIndex;
		var uri;
		if (newText.startsWith("\\\\")) {
			var path = newText.length == 2 ? String.empty() : newText.substr(2);
			isValidUri = String.isNullOrWhiteSpace(path) || $.ig.Uri.prototype.isWellFormedUriString(path, $.ig.UriKind.prototype.relativeOrAbsolute);
		} else if (newText.length > 1 && (atIndex = newText.indexOf('@', 1)) > 0 && (atIndex == newText.length - 1 || newText.charAt(atIndex + 1) != '@') && !$.ig.SpreadsheetUtilities.prototype.hasWhitespace(newText, 0, atIndex)) {
			isValidUri = true;
		} else if ((function () { var $ret = $.ig.Uri.prototype.tryCreate(newText, $.ig.UriKind.prototype.relativeOrAbsolute, uri); uri = $ret.p2; return $ret.ret; }())) {
			if (uri.isAbsoluteUri()) {
				if (newText.length > uri.scheme().length + 1) {
					if (!String.isNullOrEmpty(uri.localPath()) && /\s/i.test(uri.localPath().charAt(0))) {
					} else if ($.ig.UriParser.prototype.isKnownScheme(uri.scheme())) {
						isValidUri = true;
					}
				}
			} else {
				var trimmed = newText.trimEnd([]);
				if (trimmed != newText) {
					var $ret = $.ig.Uri.prototype.tryCreate(trimmed, $.ig.UriKind.prototype.relativeOrAbsolute, uri);
					uri = $ret.p2;
				}
				if (trimmed.length > 4) {
					if (uri.isWellFormedOriginalString()) {
						if (newText.startsWith1("www.", $.ig.StringComparison.prototype.invariantCultureIgnoreCase) || newText.startsWith1("ftp", $.ig.StringComparison.prototype.invariantCultureIgnoreCase)) {
							isValidUri = true;
						}
					} else if (trimmed.startsWith("ftp.")) {
						var remainder = trimmed.substr(4);
						if (!/\s/i.test(remainder.charAt(0))) {
							isValidUri = true;
						}
					}
				}
			}
		} else {
			var delimiterIndex = newText.indexOf($.ig.Uri.prototype.schemeDelimiter);
			if (delimiterIndex > 0) {
				var prefix = newText.substr(0, delimiterIndex);
				if ($.ig.UriParser.prototype.isKnownScheme(prefix)) {
					var suffix = String.empty();
					if (delimiterIndex + $.ig.Uri.prototype.schemeDelimiter.length < newText.length) {
						suffix = newText.substr(delimiterIndex + $.ig.Uri.prototype.schemeDelimiter.length).trim([]);
					}
					if (suffix.length == 0 || !$.ig.util.stringCompare1("ftp", prefix, $.ig.StringComparison.prototype.currentCultureIgnoreCase)) {
						isValidUri = true;
					}
				}
			} else if (newText.startsWith1("mailto:", $.ig.StringComparison.prototype.invariantCultureIgnoreCase)) {
				if (newText.length > 7 && !/\s/i.test(newText.charAt(7))) {
					isValidUri = true;
				}
			}
		}
		return isValidUri;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsHyperlinkText(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsHyperlinkToolTip(Infragistics.Controls.Grids.Core.SpreadsheetToolTipType)" />*/
	isHyperlinkToolTip: function (type) {
		return type == $.ig.SpreadsheetToolTipType.prototype.hyperlink || type == $.ig.SpreadsheetToolTipType.prototype.hyperlinkDefault;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::IsHyperlinkToolTip(Infragistics.Controls.Grids.Core.SpreadsheetToolTipType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::MeasurePerf(System.String, System.String, System.String)" />*/
	measurePerf: function (measureName, startMarkerName, endMarkerName) {
		if (performance !== undefined && performance.measure !== undefined) performance.measure(measureName, startMarkerName, endMarkerName);;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::MeasurePerf(System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ProcessEndOfParagraph(Infragistics.Controls.Grids.Core.IGFormattedTextParagraph, System.Int32)" />*/
	processEndOfParagraph: function (p, nextExpectedStart) {
		if (nextExpectedStart < (p._start + p._length)) {
			var endRun = new $.ig.IGFormattedTextRun();
			endRun._start = nextExpectedStart;
			endRun._length = (p._start + p._length) - nextExpectedStart;
			p._children.add(endRun);
			nextExpectedStart = endRun._start + endRun._length;
		}
		return nextExpectedStart;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ProcessEndOfParagraph(Infragistics.Controls.Grids.Core.IGFormattedTextParagraph, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::RemoveListener(Infragistics.ISupportPropertyChangeNotifications, Infragistics.IPropertyChangeListener)" />*/
	removeListener: function (notifier, listener) {
		notifier.removeListener(listener);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::RemoveListener(Infragistics.ISupportPropertyChangeNotifications, Infragistics.IPropertyChangeListener)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ReplaceSettingsForeground(Infragistics.Documents.Excel.Workbook, Infragistics.Controls.Grids.Core.IGFormattedTextDocument, Infragistics.Documents.Excel.BuiltInStyleType, Infragistics.Documents.Excel.BuiltInStyleType)" />*/
	replaceSettingsForeground: function (workbook, formattedTextDocument, sourceStyle, targetStyle) {
		var sourceColor = workbook.styles()._getBuiltInStyle(sourceStyle)._styleFormatInternal()._fontColorInfoResolved()._getResolvedColor1(workbook);
		var targetColorInfo = null;
		formattedTextDocument.forEachSettings(function (settings) {
			var colorInfo = settings._foreground();
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(colorInfo, null)) {
				if ($.ig.Color.prototype.l_op_Equality(colorInfo._getResolvedColor1(workbook), sourceColor)) {
					if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(targetColorInfo, null)) {
						targetColorInfo = workbook.styles()._getBuiltInStyle(targetStyle)._styleFormatInternal()._fontColorInfoResolved();
					}
					settings._foreground(targetColorInfo);
				}
			}
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ReplaceSettingsForeground(Infragistics.Documents.Excel.Workbook, Infragistics.Controls.Grids.Core.IGFormattedTextDocument, Infragistics.Documents.Excel.BuiltInStyleType, Infragistics.Documents.Excel.BuiltInStyleType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetAlignment(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	setAlignment: function (format, newValue) {
		format._setAlignment(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetAlignment(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetBold(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	setBold: function (format, newValue) {
		format._fontInternal()._setBold(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetBold(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetFontSize(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Int32)" />*/
	setFontSize: function (format, newValue) {
		format._fontInternal()._setHeight(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetFontSize(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetItalic(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	setItalic: function (format, newValue) {
		format._fontInternal()._setItalic(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetItalic(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetMeasureMarker(System.String)" />*/
	setMeasureMarker: function (markerName) {
		if (performance !== undefined && performance.mark !== undefined) performance.mark(markerName);;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetMeasureMarker(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetStrikeThrough(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	setStrikeThrough: function (format, newValue) {
		format._fontInternal()._setStrikeout(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetStrikeThrough(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetSuperscriptSubscriptStyle(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle)" />*/
	setSuperscriptSubscriptStyle: function (format, newValue) {
		format._fontInternal()._setSuperscriptSubscriptStyle(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetSuperscriptSubscriptStyle(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetUnderline(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	setUnderline: function (format, newValue) {
		format._fontInternal()._setUnderlineStyle(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetUnderline(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetVerticalAlignment(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.VerticalCellAlignment)" />*/
	setVerticalAlignment: function (format, newValue) {
		format._setVerticalAlignment(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetVerticalAlignment(Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.VerticalCellAlignment)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetWrapText(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	setWrapText: function (format, newValue) {
		format._setWrapText(newValue, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, format._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetUtilities::SetWrapText(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ShouldAdjustShapeRectForRotation(Infragistics.Documents.Excel.WorksheetShape)" />*/
	shouldAdjustShapeRectForRotation: function (shape) {
		var collection = shape._collection();
		if ($.ig.util.cast($.ig.excel.WorksheetShapeGroup.prototype.$type, collection._owner()) !== null) {
			return false;
		}
		return $.ig.ExcelUtils.prototype.isRotatedShapeAngle(shape._rotation());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ShouldAdjustShapeRectForRotation(Infragistics.Documents.Excel.WorksheetShape)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::StripCarriageReturns(System.String)" />*/
	stripCarriageReturns: function (text) {
		if (!String.isNullOrEmpty(text)) {
			var start = 0;
			var length = text.length;
			var crIndex;
			var sb = null;
			while (start < length && (crIndex = $.ig.SpreadsheetUtilities.prototype.indexOfCarriageReturn(text, start)) >= 0) {
				if (sb == null) {
					sb = new $.ig.StringBuilder(0);
				}
				if (crIndex > start) {
					sb.append6(text, start, crIndex - start);
				}
				if (text.charAt(crIndex) == '\r' && crIndex < length - 1 && text.charAt(crIndex + 1) == '\n') {
					crIndex++;
				}
				start = crIndex + 1;
			}
			if (sb != null) {
				if (start < length) {
					sb.append6(text, start, length - start);
				}
				text = sb.toString();
			}
		}
		return text;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::StripCarriageReturns(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.CellBorderPen Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToCellBorderPen(Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	toCellBorderPen: function (style) {
		switch (style) {
			case $.ig.excel.CellBorderLineStyle.none: return $.ig.CellBorderPen.prototype.none;
			case $.ig.excel.CellBorderLineStyle.hair: return $.ig.CellBorderPen.prototype.hair;
			case $.ig.excel.CellBorderLineStyle.dashDot: return $.ig.CellBorderPen.prototype.dashDot;
			case $.ig.excel.CellBorderLineStyle.dashDotDot: return $.ig.CellBorderPen.prototype.dashDotDot;
			case $.ig.excel.CellBorderLineStyle.dashed: return $.ig.CellBorderPen.prototype.dashed;
			case $.ig.excel.CellBorderLineStyle.dotted: return $.ig.CellBorderPen.prototype.dotted;
			case $.ig.excel.CellBorderLineStyle.medium: return $.ig.CellBorderPen.prototype.medium;
			case $.ig.excel.CellBorderLineStyle.mediumDashDot: return $.ig.CellBorderPen.prototype.mediumDashDot;
			case $.ig.excel.CellBorderLineStyle.mediumDashDotDot: return $.ig.CellBorderPen.prototype.mediumDashDotDot;
			case $.ig.excel.CellBorderLineStyle.mediumDashed: return $.ig.CellBorderPen.prototype.mediumDashed;
			case $.ig.excel.CellBorderLineStyle.thick: return $.ig.CellBorderPen.prototype.thick;
			case $.ig.excel.CellBorderLineStyle.thin: return $.ig.CellBorderPen.prototype.thin;
			default:
			case $.ig.excel.CellBorderLineStyle.double1:
			case $.ig.excel.CellBorderLineStyle.slantedDashDot:
			case $.ig.excel.CellBorderLineStyle.$default:
				$.ig.Debug.prototype.fail("Can't handle complex types");
				return $.ig.CellBorderPen.prototype.none;
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.CellBorderPen Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToCellBorderPen(Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.CellDiagonalBorder Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToCellDiagonalBorder(Infragistics.Documents.Excel.DiagonalBorders)" />*/
	toCellDiagonalBorder: function (diagonalBorders) {
		switch (diagonalBorders) {
			case $.ig.excel.DiagonalBorders.all: return $.ig.CellDiagonalBorder.prototype.both;
			case $.ig.excel.DiagonalBorders.diagonalDown: return $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight;
			case $.ig.excel.DiagonalBorders.diagonalUp: return $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight;
			default:
			case $.ig.excel.DiagonalBorders.none:
				return $.ig.CellDiagonalBorder.prototype.none;
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.CellDiagonalBorder Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToCellDiagonalBorder(Infragistics.Documents.Excel.DiagonalBorders)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToLongGeneralDateString(System.DateTime, Infragistics.Documents.Excel.Worksheet)" />*/
	toLongGeneralDateString: function (d, ws) {
		return $.ig.SpreadsheetUtilities.prototype.toShortDateString(d, ws) + " " + $.ig.SpreadsheetUtilities.prototype.toLongTimeString(d, ws);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToLongGeneralDateString(System.DateTime, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToLongTimeString(System.TimeSpan, Infragistics.Documents.Excel.Worksheet)" />*/
	toLongTimeString1: function (t, ws) {
		var dt = $.ig.Date.prototype.today();
		dt = $.ig.Date.prototype.addHours(dt, $.ig.util.timeSpanTotalHours(t));
		return $.ig.SpreadsheetUtilities.prototype.toLongTimeString(dt, ws);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToLongTimeString(System.TimeSpan, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToLongTimeString(System.DateTime, Infragistics.Documents.Excel.Worksheet)" />*/
	toLongTimeString: function (d, ws) {
		return d.toLocaleTimeString(ws._culture().name());
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToLongTimeString(System.DateTime, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToPrecisionPercentString(System.Double, System.Globalization.CultureInfo)" />*/
	toPrecisionPercentString: function (numericValue, c) {
		var v = numericValue * 100;
		return v.toLocaleString(c.name(), { maximumFractionDigits : 20, maximumSignificantDigits: 15 }) + c.numberFormat().percentSymbol();
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToPrecisionPercentString(System.Double, System.Globalization.CultureInfo)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToShortDateString(System.DateTime, Infragistics.Documents.Excel.Worksheet)" />*/
	toShortDateString: function (d, ws) {
		var c = ws._culture();
		if ($.ig.SpreadsheetUtilities.prototype.__shortDateFormatter == null || $.ig.SpreadsheetUtilities.prototype.__shortDateFormatter.item2() != c) {
			var f = $.ig.WorkbookFormatCollection.prototype.getShortDatePattern(c);
			$.ig.SpreadsheetUtilities.prototype.__shortDateFormatter = new $.ig.Tuple$2($.ig.ValueFormatter.prototype.$type, $.ig.CultureInfo.prototype.$type, new $.ig.ValueFormatter(1, f, c), c);
		}
		return $.ig.SpreadsheetUtilities.prototype.formatExcelDate($.ig.SpreadsheetUtilities.prototype.__shortDateFormatter.item1(), d, ws.workbook());
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToShortDateString(System.DateTime, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Toggle(System.Nullable)" />*/
	toggle1: function (value) {
		return $.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(value, true) ? false : true);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Toggle(System.Nullable)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Toggle(Infragistics.Documents.Excel.HorizontalCellAlignment, Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	toggle: function (currentValue, preferredValue) {
		return currentValue == preferredValue ? $.ig.excel.HorizontalCellAlignment.general : preferredValue;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::Toggle(Infragistics.Documents.Excel.HorizontalCellAlignment, Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToggleSingle(Infragistics.Documents.Excel.FontUnderlineStyle, System.Boolean)" />*/
	toggleSingle: function (currentValue, isAccounting) {
		return currentValue == $.ig.excel.FontUnderlineStyle.single || currentValue == $.ig.excel.FontUnderlineStyle.singleAccounting ? $.ig.excel.FontUnderlineStyle.none : isAccounting ? $.ig.excel.FontUnderlineStyle.singleAccounting : $.ig.excel.FontUnderlineStyle.single;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToggleSingle(Infragistics.Documents.Excel.FontUnderlineStyle, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToggleDouble(Infragistics.Documents.Excel.FontUnderlineStyle, System.Boolean)" />*/
	toggleDouble: function (currentValue, isAccounting) {
		return currentValue == $.ig.excel.FontUnderlineStyle.double1 || currentValue == $.ig.excel.FontUnderlineStyle.doubleAccounting ? $.ig.excel.FontUnderlineStyle.none : isAccounting ? $.ig.excel.FontUnderlineStyle.doubleAccounting : $.ig.excel.FontUnderlineStyle.double1;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToggleDouble(Infragistics.Documents.Excel.FontUnderlineStyle, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.Direction Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToDirection(Infragistics.Controls.Grids.Core.SpreadsheetEnterKeyNavigationDirection)" />*/
	toDirection: function (direction) {
		switch (direction) {
			case $.ig.SpreadsheetEnterKeyNavigationDirection.prototype.left: return $.ig.Direction.prototype.left;
			case $.ig.SpreadsheetEnterKeyNavigationDirection.prototype.right: return $.ig.Direction.prototype.right;
			default:
			case $.ig.SpreadsheetEnterKeyNavigationDirection.prototype.down:
				return $.ig.Direction.prototype.down;
			case $.ig.SpreadsheetEnterKeyNavigationDirection.prototype.up: return $.ig.Direction.prototype.up;
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.Direction Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToDirection(Infragistics.Controls.Grids.Core.SpreadsheetEnterKeyNavigationDirection)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.IGTextAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToIGTextAlignment(Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	toIGTextAlignment: function (horizontalCellAlignment) {
		var textAlignment;
		switch (horizontalCellAlignment) {
			default:
			case $.ig.excel.HorizontalCellAlignment.left:
				textAlignment = $.ig.IGTextAlignment.prototype.left;
				break;
			case $.ig.excel.HorizontalCellAlignment.fill:
				textAlignment = $.ig.IGTextAlignment.prototype.fill;
				break;
			case $.ig.excel.HorizontalCellAlignment.center:
			case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
				textAlignment = $.ig.IGTextAlignment.prototype.center;
				break;
			case $.ig.excel.HorizontalCellAlignment.right:
				textAlignment = $.ig.IGTextAlignment.prototype.right;
				break;
			case $.ig.excel.HorizontalCellAlignment.justify:
				textAlignment = $.ig.IGTextAlignment.prototype.justify;
				break;
			case $.ig.excel.HorizontalCellAlignment.distributed:
				textAlignment = $.ig.IGTextAlignment.prototype.distributed;
				break;
		}
		return textAlignment;
	}
	/*<EndMethod Name="Infragistics.Controls.IGTextAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToIGTextAlignment(Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.IGVerticalTextAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToIGVerticalTextAlignment(Infragistics.Documents.Excel.VerticalCellAlignment)" />*/
	toIGVerticalTextAlignment: function (alignment) {
		switch (alignment) {
			case $.ig.excel.VerticalCellAlignment.top: return $.ig.IGVerticalTextAlignment.prototype.top;
			case $.ig.excel.VerticalCellAlignment.center: return $.ig.IGVerticalTextAlignment.prototype.center;
			default:
			case $.ig.excel.VerticalCellAlignment.bottom:
				return $.ig.IGVerticalTextAlignment.prototype.bottom;
			case $.ig.excel.VerticalCellAlignment.distributed: return $.ig.IGVerticalTextAlignment.prototype.distributed;
			case $.ig.excel.VerticalCellAlignment.justify: return $.ig.IGVerticalTextAlignment.prototype.justify;
		}
	}
	/*<EndMethod Name="Infragistics.Controls.IGVerticalTextAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToIGVerticalTextAlignment(Infragistics.Documents.Excel.VerticalCellAlignment)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToRadians(System.Double)" />*/
	toRadians: function (angleInDegrees) {
		return angleInDegrees * Math.PI / 180;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToRadians(System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToSheetCell(Infragistics.Documents.Excel.WorksheetCellAddress)" />*/
	toSheetCell: function (excelCell) {
		return new $.ig.spreadsheet.SpreadsheetCell(excelCell.rowIndex(), excelCell.columnIndex());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToSheetCell(Infragistics.Documents.Excel.WorksheetCellAddress)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToSheetCellRange(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	toSheetCellRange1: function (excelRange) {
		return new $.ig.spreadsheet.SpreadsheetCellRange(excelRange._firstRowIndex(), excelRange._firstColumnIndex(), excelRange._lastRowIndex(), excelRange._lastColumnIndex());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToSheetCellRange(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToSheetCellRange(System.Collections.Generic.IList)" />*/
	toSheetCellRange: function (excelRanges) {
		var ranges = new Array(excelRanges.count());
		for (var i = 0; i < ranges.length; i++) {
			ranges[i] = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(excelRanges.item(i));
		}
		return ranges;
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToSheetCellRange(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.HorizontalTextAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToHorizontalTextAlignment(Infragistics.Controls.IGTextAlignment)" />*/
	toHorizontalTextAlignment: function (alignment) {
		switch (alignment) {
			case $.ig.IGTextAlignment.prototype.justify: return $.ig.excel.HorizontalTextAlignment.justified;
			case $.ig.IGTextAlignment.prototype.distributed: return $.ig.excel.HorizontalTextAlignment.distributed;
			case $.ig.IGTextAlignment.prototype.left:
			case $.ig.IGTextAlignment.prototype.fill:
				return $.ig.excel.HorizontalTextAlignment.left;
			case $.ig.IGTextAlignment.prototype.right: return $.ig.excel.HorizontalTextAlignment.right;
			case $.ig.IGTextAlignment.prototype.center: return $.ig.excel.HorizontalTextAlignment.center;
			default:
				$.ig.Debug.prototype.fail("Unrecognized value:" + $.ig.IGTextAlignment.prototype.getBox(alignment));
				return $.ig.excel.HorizontalTextAlignment.left;
		}
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.HorizontalTextAlignment Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToHorizontalTextAlignment(Infragistics.Controls.IGTextAlignment)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetCellAddress(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	toWorksheetCellAddress: function (cell) {
		return new $.ig.WorksheetCellAddress(1, cell.row(), cell.column());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetCellAddress(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetRegionAddress(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	toWorksheetRegionAddress1: function (range) {
		return new $.ig.WorksheetRegionAddress(1, range.firstRow(), range.lastRow(), range.firstColumn(), range.lastColumn());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetRegionAddress(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetRegionAddress(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	toWorksheetRegionAddress: function (cell) {
		return $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress2(cell.row(), cell.column());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetRegionAddress(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetRegionAddress(System.Int32, System.Int16)" />*/
	toWorksheetRegionAddress2: function (row, column) {
		return new $.ig.WorksheetRegionAddress(1, row, row, column, column);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.SpreadsheetUtilities::ToWorksheetRegionAddress(System.Int32, System.Int16)" />*/
	,
	$type: new $.ig.Type('SpreadsheetUtilities', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetUtilities" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCell" />*/

$.ig.spreadsheet.SpreadsheetCell = $.ig.util.defType('spreadsheet.SpreadsheetCell', 'ValueType', {
	init: function () {
		var initNumber;
		if (arguments.length === 0) {
			initNumber = 0;
		} else if (arguments.length === 1) {
			initNumber = 2;
		} else if (arguments.length === 2) {
			initNumber = 1;
		}
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this._init1.apply(this, arguments);
					break;
				case 2:
					this._init2.apply(this, arguments);
					break;
				default: throw new Error('Invalid arguments');
			}
			return;
		}
		$.ig.ValueType.prototype.init.call(this);
	},
	___column: 0,
	___row: 0,
	_staticInit: function () {
	},
	_init1: function (row, column) {
		$.ig.ValueType.prototype.init.call(this);
		$.ig.spreadsheet.SpreadsheetCell.prototype._verifyIndex(row, "row");
		$.ig.spreadsheet.SpreadsheetCell.prototype._verifyIndex(column, "column");
		this.___row = row;
		this.___column = column;
	},
	_init2: function (address) {
		$.ig.ValueType.prototype.init.call(this);
		var columnIndex;
		var rowIndex;
		if (!(function () { var $ret = $.ig.ExcelUtils.prototype.parseA1CellAddress(address, $.ig.excel.WorkbookFormat.excel2007, $.ig.CultureInfo.prototype.currentCulture(), columnIndex, rowIndex); columnIndex = $ret.p3; rowIndex = $ret.p4; return $ret.ret; }())) {
			throw new $.ig.ArgumentException(1, $.ig.util.stringFormat("The specified address '{0}' is not a valid A1 cell address.", address));
		}
		this.___row = rowIndex;
		this.___column = columnIndex;
	},
	equals: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if ($.ig.util.cast($.ig.Object.prototype.$type, arguments[0]) !== null) {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._equals.apply(this, arguments);
			case 1: return this.equals1.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::Equals(System.Object)" />*/
	equals1: function (obj) {
		if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, obj) !== null) {
			return this._equals(obj);
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::Equals(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCell::GetHashCode()" />*/
	getHashCode: function () {
		return this.___row ^ this.___column << 8;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCell::GetHashCode()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCell::ToString()" />*/
	toString: function () {
		return $.ig.CellAddress.prototype.getCellReferenceString(this.___row, this.___column, 2, true, true, -1, -1, false, 1);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCell::ToString()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCell::Row()" />*/
	row: function () {
		return this.___row;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCell::Row()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCell::Column()" />*/
	column: function () {
		return this.___column;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCell::Column()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCell::VerifyIndex(System.Int32, System.String)" />*/
	_verifyIndex: function (index, name) {
		if (index < 0) {
			throw new $.ig.ArgumentException(2, "Row and column indexes must be 0 or greater.", name);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCell::VerifyIndex(System.Int32, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::Equals(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_equals: function (other) {
		return other.___row == this.___row && other.___column == this.___column;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::Equals(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Equality(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	l_op_Equality: function (d1, d2) {
		return d1._equals(d2);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Equality(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Equality_Lifted(System.Nullable, System.Nullable)" />*/
	l_op_Equality_Lifted: function (d1, d2) {
		d1 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, d1);
		d2 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, d2);
		if (!d1.hasValue()) {
			return !d2.hasValue();
		} else if (!d2.hasValue()) {
			return false;
		}
		return $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality(d1.value(), d2.value());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Equality_Lifted(System.Nullable, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Inequality(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	l_op_Inequality: function (d1, d2) {
		return !($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality(d1, d2));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Inequality(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Inequality_Lifted(System.Nullable, System.Nullable)" />*/
	l_op_Inequality_Lifted: function (d1, d2) {
		d1 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, d1);
		d2 = $.ig.util.wrapNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, d2);
		if (!d1.hasValue()) {
			return d2.hasValue();
		} else if (!d2.hasValue()) {
			return true;
		}
		return $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(d1.value(), d2.value());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCell::L_op_Inequality_Lifted(System.Nullable, System.Nullable)" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetCell', $.ig.ValueType.prototype.$type, [$.ig.IEquatable$1.prototype.$type.specialize(-1)])
}, true);

$.ig.spreadsheet.SpreadsheetCell.prototype.$type.initSelfReferences();

$.ig.spreadsheet.SpreadsheetCell.l_op_Equality = $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality.runOn($.ig.spreadsheet.SpreadsheetCell.prototype);

$.ig.spreadsheet.SpreadsheetCell.l_op_Equality_Lifted = $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted.runOn($.ig.spreadsheet.SpreadsheetCell.prototype);

$.ig.spreadsheet.SpreadsheetCell.l_op_Inequality = $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality.runOn($.ig.spreadsheet.SpreadsheetCell.prototype);

$.ig.spreadsheet.SpreadsheetCell.l_op_Inequality_Lifted = $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted.runOn($.ig.spreadsheet.SpreadsheetCell.prototype);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCell" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditInfo" />*/

$.ig.util.defType('SpreadsheetCellEditInfo', 'Object', {
	_valueInfo: null,
	_format: null,
	_isVisitedHyperlink: false,
	init: function (valueInfo, format, isVisitedHyperlink) {
		$.ig.Object.prototype.init.call(this);
		this._valueInfo = valueInfo;
		this._format = format;
		this._isVisitedHyperlink = isVisitedHyperlink;
	},
	$type: new $.ig.Type('SpreadsheetCellEditInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetResolvedRenderFormat" />*/

$.ig.util.defType('SpreadsheetResolvedRenderFormat', 'Object', {
	init: function () {
		this._leftBorderColor = new $.ig.Color();
		this._topBorderColor = new $.ig.Color();
		this._rightBorderColor = new $.ig.Color();
		this._bottomBorderColor = new $.ig.Color();
		this._diagonalBorderColor = new $.ig.Color();
		$.ig.Object.prototype.init.call(this);
	},
	_background: null,
	_leftBorderStyle: 0,
	_leftBorderColor: null,
	_topBorderStyle: 0,
	_topBorderColor: null,
	_rightBorderStyle: 0,
	_rightBorderColor: null,
	_bottomBorderStyle: 0,
	_bottomBorderColor: null,
	_diagonalBorderStyle: 0,
	_diagonalBorderColor: null,
	_diagonalBorders: 0,
	$type: new $.ig.Type('SpreadsheetResolvedRenderFormat', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetResolvedRenderFormat" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo" />*/

$.ig.util.defType('SpreadsheetCellRenderInfo', 'Object', {
	init: function () {
		this._leftBorderColor = new $.ig.Color();
		this._topBorderColor = new $.ig.Color();
		this._diagonalBorderColor = new $.ig.Color();
		$.ig.Object.prototype.init.call(this);
	},
	_background: null,
	_leftBorderStyle: 0,
	_leftBorderColor: null,
	_topBorderStyle: 0,
	_topBorderColor: null,
	_topOffset: 0,
	_bottomOffset: 0,
	_leftOffset: 0,
	_rightOffset: 0,
	_diagonalBorderStyle: 0,
	_diagonalBorderColor: null,
	_diagonalBorders: 0,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo::CreateDefault()" />*/
	createDefault: function () {
		var d = new $.ig.SpreadsheetCellRenderInfo();
		d._diagonalBorderColor = d._leftBorderColor = d._topBorderColor = $.ig.ExcelUtils.prototype.colorEmpty;
		return d;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo::CreateDefault()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellRenderInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray" />*/

$.ig.util.defType('SpreadsheetCellRenderInfoArray', 'Object', {
	__items: null,
	init: function (rows, columns) {
		$.ig.Object.prototype.init.call(this);
		this.initialize(rows, columns);
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::ColumnCount()" />*/
	columnCount: function () {
		return this.__items.columnCount();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::ColumnCount()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::RowCount()" />*/
	rowCount: function () {
		return this.__items.rowCount();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::RowCount()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::Item(System.Int32, System.Int32)" />*/
	item: function (row, column) {
		return this.__items.item(row, column) || $.ig.SpreadsheetCellRenderInfoArray.prototype.__default;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::Item(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::CopyFill(System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	copyFill: function (srcRow, srcColumn, targetRow, targetColumn) {
		if (this.__items.item(srcRow, srcColumn) == null && this.__items.item(targetRow, targetColumn) == null) {
			return;
		}
		var src = this.get(srcRow, srcColumn);
		var target = this.get(targetRow, targetColumn);
		target._background = src._background;
		target._diagonalBorders = src._diagonalBorders;
		target._diagonalBorderStyle = src._diagonalBorderStyle;
		target._diagonalBorderColor = src._diagonalBorderColor;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::CopyFill(System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::Initialize(System.Int32, System.Int32)" />*/
	initialize: function (rows, columns) {
		if (this.__items == null) {
			this.__items = new $.ig.MDList$1($.ig.SpreadsheetCellRenderInfo.prototype.$type, rows, columns);
		} else {
			this.__items.initialize(rows, columns);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::Initialize(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetTopBorder(System.Int32, System.Int32, Infragistics.Documents.Excel.CellBorderLineStyle, System.Windows.Media.Color)" />*/
	setTopBorder: function (row, column, style, color) {
		if (style == $.ig.excel.CellBorderLineStyle.none && this.__items.item(row, column) == null) {
			return;
		}
		var v = this.get(row, column);
		v._topBorderStyle = style;
		v._topBorderColor = color;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetTopBorder(System.Int32, System.Int32, Infragistics.Documents.Excel.CellBorderLineStyle, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetLeftBorder(System.Int32, System.Int32, Infragistics.Documents.Excel.CellBorderLineStyle, System.Windows.Media.Color)" />*/
	setLeftBorder: function (row, column, style, color) {
		if (style == $.ig.excel.CellBorderLineStyle.none && this.__items.item(row, column) == null) {
			return;
		}
		var v = this.get(row, column);
		v._leftBorderStyle = style;
		v._leftBorderColor = color;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetLeftBorder(System.Int32, System.Int32, Infragistics.Documents.Excel.CellBorderLineStyle, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetBackground(System.Int32, System.Int32, Infragistics.Documents.Excel.CellFill)" />*/
	setBackground: function (row, column, fill) {
		if (fill == null && this.__items.item(row, column) == null) {
			return;
		}
		this.get(row, column)._background = fill;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetBackground(System.Int32, System.Int32, Infragistics.Documents.Excel.CellFill)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetDiagonalBorders(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.CellDiagonalBorder, Infragistics.Documents.Excel.CellBorderLineStyle, System.Windows.Media.Color)" />*/
	setDiagonalBorders: function (row, column, borders, style, color) {
		if (borders == $.ig.CellDiagonalBorder.prototype.none && this.__items.item(row, column) == null) {
			return;
		}
		var v = this.get(row, column);
		v._diagonalBorders = borders;
		v._diagonalBorderStyle = style;
		v._diagonalBorderColor = color;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetDiagonalBorders(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.CellDiagonalBorder, Infragistics.Documents.Excel.CellBorderLineStyle, System.Windows.Media.Color)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetLeftOffset(System.Int32, System.Int32, System.Int32)" />*/
	setLeftOffset: function (row, column, value) {
		if (value == 0 && this.__items.item(row, column) == null) {
			return;
		}
		this.get(row, column)._leftOffset = value;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetLeftOffset(System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetRightOffset(System.Int32, System.Int32, System.Int32)" />*/
	setRightOffset: function (row, column, value) {
		if (value == 0 && this.__items.item(row, column) == null) {
			return;
		}
		this.get(row, column)._rightOffset = value;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetRightOffset(System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetTopOffset(System.Int32, System.Int32, System.Int32)" />*/
	setTopOffset: function (row, column, value) {
		if (value == 0 && this.__items.item(row, column) == null) {
			return;
		}
		this.get(row, column)._topOffset = value;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetTopOffset(System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetBottomOffset(System.Int32, System.Int32, System.Int32)" />*/
	setBottomOffset: function (row, column, value) {
		if (value == 0 && this.__items.item(row, column) == null) {
			return;
		}
		this.get(row, column)._bottomOffset = value;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::SetBottomOffset(System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::Get(System.Int32, System.Int32)" />*/
	get: function (row, column) {
		var result = this.__items.item(row, column);
		if (result == null) {
			this.__items.item(row, column, result = $.ig.SpreadsheetCellRenderInfo.prototype.createDefault());
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfo Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray::Get(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellRenderInfoArray', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.AccountingUnderlineInfo" />*/

$.ig.util.defType('AccountingUnderlineInfo', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_isSingle: false,
	_thickness: 0,
	_clipToTextArea: false,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.AccountingUnderlineInfo Infragistics.Controls.Grids.Core.AccountingUnderlineInfo::Create(System.UInt16, System.Boolean, Infragistics.Documents.Excel.Worksheet, System.Object, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	create: function (underlineHeight, isSingle, worksheet, value, format) {
		var info = new $.ig.AccountingUnderlineInfo();
		info._thickness = underlineHeight;
		info._isSingle = isSingle;
		var clipToTextArea = false;
		if (worksheet != null && !worksheet.displayOptions().showFormulasInCells() && value != null && $.ig.ExcelUtils.prototype.isNumber(value)) {
			var workbook = worksheet.workbook();
			if (workbook != null) {
				clipToTextArea = true;
				var index = format._formatStringIndexResolved();
				if (index != $.ig.WorkbookFormatCollection.prototype.generalFormatIndex) {
					var formatter = workbook._formats().getValueFormatter(index);
					if (formatter.isValid() && formatter.isDateSection(0)) {
						clipToTextArea = false;
					}
				}
			}
		}
		info._clipToTextArea = clipToTextArea;
		return info;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.AccountingUnderlineInfo Infragistics.Controls.Grids.Core.AccountingUnderlineInfo::Create(System.UInt16, System.Boolean, Infragistics.Documents.Excel.Worksheet, System.Object, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	$type: new $.ig.Type('AccountingUnderlineInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.AccountingUnderlineInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection" />*/

$.ig.spreadsheet.SpreadsheetSelection = $.ig.util.defType('spreadsheet.SpreadsheetSelection', 'PropertyChangeNotifierExtended', {
	___owningSpreadsheet: null,
	___owningPane: null,
	___cellRangesSource: null,
	___cellRanges: null,
	___allColumns: null,
	___allRows: null,
	___selectedColumns: null,
	___selectedRows: null,
	___activeCell: null,
	___activeCellAsRange: null,
	___activeCellRangeIndex: 0,
	___availableColumnRange: null,
	___availableRowRange: null,
	___cellSelectionMode: 0,
	___hasOverlappingSelection: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___hasMixedCellSelection: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___cellRangesAddress: null,
	init: function (owningSpreadsheet, owningPane) {
		this.___activeCell = new $.ig.spreadsheet.SpreadsheetCell();
		this.___activeCellAsRange = new $.ig.spreadsheet.SpreadsheetCellRange();
		this.___availableColumnRange = new $.ig.Range$1($.ig.Number.prototype.$type, 1, 0, 0);
		this.___availableRowRange = new $.ig.Range$1($.ig.Number.prototype.$type, 1, 0, 0);
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(owningSpreadsheet);
		$.ig.CoreUtilities.prototype.validateNotNull(owningPane);
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type), this.___cellRangesSource, new $.ig.ObservableCollectionExtended$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, 0), this, false);
		this.___cellRangesSource = $ret.p0;
		var $ret1 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.AdapterRangeSet$2.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type), this.___allColumns, new $.ig.AdapterRangeSet$2($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type, this.___cellRangesSource, this._getColumnRange.runOn(this), null), this, false);
		this.___allColumns = $ret1.p0;
		var $ret2 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.AdapterRangeSet$2.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type), this.___allRows, new $.ig.AdapterRangeSet$2($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type, this.___cellRangesSource, this._getRowRange.runOn(this), null), this, false);
		this.___allRows = $ret2.p0;
		var $ret3 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.AdapterRangeSet$2.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type), this.___selectedColumns, new $.ig.AdapterRangeSet$2($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type, this.___cellRangesSource, this._getColumnRange.runOn(this), this._isColumnSelection.runOn(this)), this, false);
		this.___selectedColumns = $ret3.p0;
		var $ret4 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.AdapterRangeSet$2.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type), this.___selectedRows, new $.ig.AdapterRangeSet$2($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type, this.___cellRangesSource, this._getRowRange.runOn(this), this._isRowSelection.runOn(this)), this, false);
		this.___selectedRows = $ret4.p0;
		this.___owningSpreadsheet = owningSpreadsheet;
		this.___owningPane = owningPane;
		this.___cellRanges = new $.ig.ReadOnlyNotifyCollection$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, this.___cellRangesSource);
		this.___cellRangesSource.add(new $.ig.spreadsheet.SpreadsheetCellRange(this.___activeCell.row(), this.___activeCell.column()));
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		if (sender == this) {
			switch (property) {
				case "AvailableColumnRange":
					this.___selectedColumns._dirty();
					break;
				case "AvailableRowRange":
					this.___selectedRows._dirty();
					break;
			}
		} else if (sender == this.___cellRangesSource) {
			this.___cellRangesAddress = null;
		}
		$.ig.PropertyChangeNotifierExtended.prototype.onSubObjectPropertyChanged.call(this, sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetSelection::ActiveCell()" />*/
	activeCell: function () {
		return this.___activeCell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetSelection::ActiveCell()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::ActiveCellAsRange()" />*/
	_activeCellAsRange: function () {
		return this.___activeCellAsRange;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::ActiveCellAsRange()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetSelection::ActiveCellRangeIndex()" />*/
	activeCellRangeIndex: function () {
		return this.___activeCellRangeIndex;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetSelection::ActiveCellRangeIndex()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::CellRanges()" />*/
	cellRanges: function () {
		return this.___cellRanges;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::CellRanges()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetSelection::CellRangesAddress()" />*/
	cellRangesAddress: function (value) {
		if (arguments.length === 1) {
			if (String.isNullOrEmpty(value)) {
				throw new $.ig.ArgumentNullException(1);
			}
			var ranges = $.ig.spreadsheet.SpreadsheetCellRange.prototype._createRanges(value);
			this._resetSelection(ranges, ranges[0]._upperLeft(), 0, true);
			return value;
		} else {
			if (this.___cellRangesAddress == null) {
				this.___cellRangesAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype._toString3(this.___cellRanges, $.ig.excel.CellReferenceMode.a1, ",");
			}
			return this.___cellRangesAddress;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetSelection::CellRangesAddress()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::AllColumns()" />*/
	_allColumns: function () {
		return this.___allColumns;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::AllColumns()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::AllRows()" />*/
	_allRows: function () {
		return this.___allRows;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::AllRows()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AreAllColumnsSelected()" />*/
	_areAllColumnsSelected: function () {
		var collection = this._allColumns();
		return collection.count() == 1 && collection.item(0).__start <= this._availableColumnRange().__start && collection.item(0).__end >= this._availableColumnRange().__end;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AreAllColumnsSelected()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AreAllRowsSelected()" />*/
	_areAllRowsSelected: function () {
		var collection = this._allRows();
		return collection.count() == 1 && collection.item(0).__start <= this._availableRowRange().__start && collection.item(0).__end >= this._availableRowRange().__end;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AreAllRowsSelected()" />*/
	,
	/*<BeginProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::AvailableColumnRange()" />*/
	_availableColumnRange: function (value) {
		if (arguments.length === 1) {
			if (!this.___availableColumnRange.equals(value)) {
				this.___availableColumnRange = value;
				this.onPropertyChanged("AvailableColumnRange");
			}
			return value;
		} else {
			return this.___availableColumnRange;
		}
	}
	/*<EndProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::AvailableColumnRange()" />*/
	,
	/*<BeginProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::AvailableRowRange()" />*/
	_availableRowRange: function (value) {
		if (arguments.length === 1) {
			if (!this.___availableRowRange.equals(value)) {
				this.___availableRowRange = value;
				this.onPropertyChanged("AvailableRowRange");
			}
			return value;
		} else {
			return this.___availableRowRange;
		}
	}
	/*<EndProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::AvailableRowRange()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode Infragistics.Controls.Grids.Core.SpreadsheetSelection::CellSelectionMode()" />*/
	_cellSelectionMode: function (value) {
		if (arguments.length === 1) {
			if (this.___cellSelectionMode != value) {
				this.___cellSelectionMode = value;
				this.onPropertyChanged("CellSelectionMode");
				if (value == $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection) {
					this._hasCreatedRangeForAddToSelection(false);
				}
			}
			return value;
		} else {
			return this.___cellSelectionMode;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode Infragistics.Controls.Grids.Core.SpreadsheetSelection::CellSelectionMode()" />*/
	,
	__hasCreatedRangeForAddToSelection: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::HasCreatedRangeForAddToSelection()" />*/
	_hasCreatedRangeForAddToSelection: function (value) {
		if (arguments.length === 1) {
			this.__hasCreatedRangeForAddToSelection = value;
			return value;
		} else {
			return this.__hasCreatedRangeForAddToSelection;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::HasCreatedRangeForAddToSelection()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::HasOverlappingRanges()" />*/
	_hasOverlappingRanges: function () {
		if ($.ig.util.nullableEquals(this.___hasOverlappingSelection, null)) {
			this.___hasOverlappingSelection = $.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.spreadsheet.SpreadsheetCellRange.prototype._hasAnyOverlappingRanges(this.___cellRanges));
		}
		return this.___hasOverlappingSelection.value();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::HasOverlappingRanges()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::HasMixedCellSelection()" />*/
	_hasMixedCellSelection: function () {
		if ($.ig.util.nullableEquals(this.___hasMixedCellSelection, null)) {
			this.___hasMixedCellSelection = $.ig.util.toNullable($.ig.Boolean.prototype.$type, this._getHasMixedCellSelection());
		}
		return this.___hasMixedCellSelection.value();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::HasMixedCellSelection()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetSelection::Pane()" />*/
	_pane: function () {
		return this.___owningPane;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetSelection::Pane()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::SelectedColumns()" />*/
	_selectedColumns: function () {
		return this.___selectedColumns;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::SelectedColumns()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::SelectedRows()" />*/
	_selectedRows: function () {
		return this.___selectedRows;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetSelection::SelectedRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetSelection::Spreadsheet()" />*/
	_spreadsheet: function () {
		return this.___owningSpreadsheet;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetSelection::Spreadsheet()" />*/
	,
	addActiveCellRange: function () {
		var n;
		if (arguments.length === 2) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		} else if (arguments.length === 3) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._addActiveCellRange1.apply(this, arguments);
			case 1: return this._addActiveCellRange2.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRange(System.String, System.String, System.Boolean)" />*/
	_addActiveCellRange2: function (rangeAddress, activeCellAddress, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		return this._addActiveCellRange1(new $.ig.spreadsheet.SpreadsheetCellRange(rangeAddress), new $.ig.spreadsheet.SpreadsheetCell(activeCellAddress), extendRangeForMergedCells);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRange(System.String, System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	_addActiveCellRange1: function (range, activeCell, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		if (!range._contains(activeCell)) {
			throw new $.ig.ArgumentException(0);
		}
		if (extendRangeForMergedCells) {
			var $ret = this._extendRangeForMergedCells(range);
			range = $ret.p0;
		}
		return this._addActiveCellRangeImpl(range, activeCell, this._getCellRange(activeCell));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	,
	addCellRange: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		} else if (arguments.length === 2) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._addCellRange.apply(this, arguments);
			case 1: return this._addCellRange1.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddCellRange(System.String, System.Boolean)" />*/
	_addCellRange1: function (rangeAddress, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		this._addCellRange(new $.ig.spreadsheet.SpreadsheetCellRange(rangeAddress), extendRangeForMergedCells);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddCellRange(System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Boolean)" />*/
	_addCellRange: function (range, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		if (extendRangeForMergedCells) {
			var $ret = this._extendRangeForMergedCells(range);
			range = $ret.p0;
		}
		{
			var t1 = this._createSelectionLock();
			try {
				try {
					this.___cellRangesSource.beginUpdate();
					this.___cellRangesSource.add(range);
				}
				finally {
					this.___cellRangesSource.endUpdate();
				}
			}
			finally {
				if (t1 != null) {
					t1.dispose();
				}
			}
		}
		this._onSelectionChanged();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ClearCellRanges()" />*/
	clearCellRanges: function () {
		return this._resetSelection1(this.activeCell());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ClearCellRanges()" />*/
	,
	replaceActiveCellRange: function () {
		var n;
		if (arguments.length === 2) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		} else if (arguments.length === 3) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._replaceActiveCellRange1.apply(this, arguments);
			case 1: return this._replaceActiveCellRange2.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRange(System.String, System.String, System.Boolean)" />*/
	_replaceActiveCellRange2: function (rangeAddress, activeCellAddress, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		return this._replaceActiveCellRange1(new $.ig.spreadsheet.SpreadsheetCellRange(rangeAddress), new $.ig.spreadsheet.SpreadsheetCell(activeCellAddress), extendRangeForMergedCells);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRange(System.String, System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	_replaceActiveCellRange1: function (range, activeCell, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		if (extendRangeForMergedCells) {
			var $ret = this._extendRangeForMergedCells(range);
			range = $ret.p0;
		}
		if (!range._contains(activeCell)) {
			throw new $.ig.ArgumentException(0);
		}
		return this._replaceActiveCellRangeImpl(range, activeCell);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	,
	resetSelection: function () {
		var n;
		if (arguments.length === 2) {
			n = 1;
		} else if (arguments.length === 3) {
			if (arguments[0] instanceof Array) {
				n = 0;
			} else if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, arguments[0]) !== null) {
				n = 1;
			} else if (typeof arguments[0] === 'string') {
				n = 2;
			} else if (arguments[0] == null) {
				if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[1]) !== null) {
					n = 0;
				} else if (typeof arguments[1] === 'string') {
					n = 2;
				} else if (arguments[1] == null) {
					n = 2;
				}
			}
		} else if (arguments.length === 4) {
			if (arguments[0] instanceof Array) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 2;
			} else if (arguments[0] == null) {
				if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[1]) !== null) {
					n = 0;
				} else if (typeof arguments[1] === 'string') {
					n = 2;
				} else if (arguments[1] == null) {
					n = 2;
				}
			}
		}
		switch (n) {
			case 0: return this._resetSelection.apply(this, arguments);
			case 1: return this._resetSelection2.apply(this, arguments);
			case 2: return this._resetSelection3.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	_resetSelection2: function (range, activeCell, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		if (!range._contains(activeCell)) {
			throw new $.ig.ArgumentException(0);
		}
		return this._resetSelection([ range ], activeCell, 0, extendRangeForMergedCells);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(System.String, System.String, System.Int32, System.Boolean)" />*/
	_resetSelection3: function (rangesAddress, activeCellAddress, newActiveRangeIndex, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		return this._resetSelection($.ig.spreadsheet.SpreadsheetCellRange.prototype._createRanges(rangesAddress), new $.ig.spreadsheet.SpreadsheetCell(activeCellAddress), newActiveRangeIndex, extendRangeForMergedCells);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(System.String, System.String, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Int32, System.Boolean)" />*/
	_resetSelection: function (ranges, activeCell, newActiveRangeIndex, extendRangeForMergedCells) {
		extendRangeForMergedCells = (extendRangeForMergedCells !== void 0 ? extendRangeForMergedCells : true);
		$.ig.CoreUtilities.prototype.validateNotNull1(ranges, "ranges");
		if (ranges.length == 0) {
			throw new $.ig.ArgumentException(0);
		}
		if (newActiveRangeIndex < 0 || newActiveRangeIndex >= ranges.length) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		if (!ranges[newActiveRangeIndex]._contains(activeCell)) {
			throw new $.ig.ArgumentException(0);
		}
		var hasActiveCellChanged = $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(activeCell, this.activeCell());
		var hasSelectionChanged = this.cellRanges().count() != ranges.length;
		if (!hasSelectionChanged) {
			for (var i = 0; i < ranges.length; i++) {
				if (!ranges[i]._equals(this.___cellRanges.item(i))) {
					hasSelectionChanged = true;
					break;
				}
			}
		}
		if (hasActiveCellChanged && !this._onActiveCellChanging(activeCell)) {
			return false;
		}
		var activeCellRange = extendRangeForMergedCells ? this._getCellRange(activeCell) : new $.ig.spreadsheet.SpreadsheetCellRange(activeCell.row(), activeCell.column());
		if (extendRangeForMergedCells) {
			if (ranges.length != 1 || $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality(ranges[newActiveRangeIndex], activeCellRange)) {
				for (var i1 = 0; i1 < ranges.length; i1++) {
					var $ret = this._extendRangeForMergedCells(ranges[i1]);
					ranges[i1] = $ret.p0;
				}
			}
		}
		{
			var t1 = this._createSelectionLock();
			try {
				try {
					if (hasSelectionChanged) {
						this.___cellRangesSource.beginUpdate();
						this.___cellRangesSource.clear();
						this.___cellRangesSource._reInitialize(ranges);
					}
					this._setProperties(activeCell, newActiveRangeIndex, activeCellRange);
				}
				finally {
					if (hasSelectionChanged) {
						this.___cellRangesSource.endUpdate();
					}
				}
			}
			finally {
				if (t1 != null) {
					t1.dispose();
				}
			}
		}
		if (hasSelectionChanged) {
			this._onSelectionChanged();
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Int32, System.Boolean)" />*/
	,
	setActiveCell: function () {
		var n;
		if (arguments.length === 1) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		} else if (arguments.length === 2) {
			if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetCell.prototype.$type, arguments[0]) !== null) {
				n = 0;
			} else if (typeof arguments[0] === 'string') {
				n = 1;
			} else if (arguments[0] == null) {
				n = 1;
			}
		}
		switch (n) {
			case 0: return this._setActiveCell.apply(this, arguments);
			case 1: return this._setActiveCell1.apply(this, arguments);
			default: throw new Error('Invalid arguments');
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::SetActiveCell(System.String, System.Nullable)" />*/
	_setActiveCell1: function (cellAddress, rangeIndex) {
		rangeIndex = (rangeIndex !== void 0 ? rangeIndex : null);
		rangeIndex = $.ig.util.wrapNullable($.ig.Number.prototype.$type, rangeIndex);
		return this._setActiveCell(new $.ig.spreadsheet.SpreadsheetCell(cellAddress), rangeIndex);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::SetActiveCell(System.String, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::SetActiveCell(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Nullable)" />*/
	_setActiveCell: function (cell, rangeIndex) {
		rangeIndex = (rangeIndex !== void 0 ? rangeIndex : null);
		rangeIndex = $.ig.util.wrapNullable($.ig.Number.prototype.$type, rangeIndex);
		var start = !$.ig.util.nullableIsNull(rangeIndex) ? rangeIndex.value() : this.activeCellRangeIndex();
		var count = this.___cellRanges.count();
		var actualIndex = count;
		for (var i = start, end = start + this.___cellRanges.count(); i < end; i++) {
			if (this.___cellRanges.item(i % count)._contains(cell)) {
				actualIndex = i % count;
				break;
			}
		}
		if (actualIndex == count) {
			return this._resetSelection1(cell);
		} else {
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(cell, this.activeCell()) && !this._onActiveCellChanging(cell)) {
				return false;
			}
			this._setProperties(cell, actualIndex, this._getCellRange(cell));
			return true;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::SetActiveCell(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_addActiveCellRange: function (cell) {
		var range = this._getCellRange(cell);
		return this._addActiveCellRangeImpl(range, cell, range);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::Contains(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_contains: function (cell) {
		for (var i = 0; i < this.___cellRanges.count(); i++) {
			if (this.___cellRanges.item(i)._contains(cell)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::Contains(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.IDisposable Infragistics.Controls.Grids.Core.SpreadsheetSelection::CreateSelectionLock()" />*/
	_createSelectionLock: function () {
		return new $.ig.Spreadsheet_SynchronizationSuspender(this.___owningSpreadsheet);
	}
	/*<EndMethod Name="System.IDisposable Infragistics.Controls.Grids.Core.SpreadsheetSelection::CreateSelectionLock()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ExtendActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	_extendActiveCellRange: function (cell, extendRangeForMergedCells) {
		var range = extendRangeForMergedCells ? this._getCellRange(cell) : new $.ig.spreadsheet.SpreadsheetCellRange(cell.row(), cell.column());
		return this._extendActiveCellRange1(range, extendRangeForMergedCells);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ExtendActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ExtendActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Boolean)" />*/
	_extendActiveCellRange1: function (range, extendRangeForMergedCells) {
		range = range.union(this._activeCellAsRange());
		if (extendRangeForMergedCells) {
			var $ret = this._extendRangeForMergedCells(range);
			range = $ret.p0;
		}
		return this._replaceActiveCellRangeImpl(range, this.activeCell());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ExtendActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::ExtendRangeForMergedCells(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_extendRangeForMergedCells: function (range) {
		range = this.___owningPane.__owner.extendRangeForMergedCells(range);
		return {
			p0: range
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::ExtendRangeForMergedCells(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetActiveCellRange()" />*/
	_getActiveCellRange: function () {
		this._verify();
		return this.cellRanges().item(this.activeCellRangeIndex());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetActiveCellRange()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_getCellRange: function (cell) {
		return this.___owningPane.__owner.getCellRange(cell);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetCellRangeUnion(System.Boolean)" />*/
	_getCellRangeUnion: function (adjustRowColumnSelection) {
		var range = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		var activeCell = this.activeCell();
		var en = this.cellRanges().getEnumerator();
		while (en.moveNext()) {
			var r = en.current();
			var rowIsSelected = this._isRowSelection(r);
			var colIsSelected = this._isColumnSelection(r);
			if (rowIsSelected == colIsSelected || adjustRowColumnSelection == false) {
				range = range.union(r);
			} else if (colIsSelected) {
				if (this._selectedRows().count() > 0) {
					var en1 = this._selectedRows().getEnumerator();
					while (en1.moveNext()) {
						var rowRange = en1.current();
						range = range.union(new $.ig.spreadsheet.SpreadsheetCellRange(rowRange.__start, r.firstColumn(), rowRange.__end, r.lastColumn()));
					}
				} else {
					range = range.union(new $.ig.spreadsheet.SpreadsheetCellRange(activeCell.row(), r.firstColumn(), activeCell.row(), r.lastColumn()));
				}
			} else {
				if (this._selectedColumns().count() > 0) {
					var en2 = this._selectedColumns().getEnumerator();
					while (en2.moveNext()) {
						var colRange = en2.current();
						range = range.union(new $.ig.spreadsheet.SpreadsheetCellRange(r.firstRow(), colRange.__start, r.lastRow(), colRange.__end));
					}
				} else {
					range = range.union(new $.ig.spreadsheet.SpreadsheetCellRange(r.firstRow(), activeCell.column(), r.lastRow(), activeCell.column()));
				}
			}
		}
		return range;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetCellRangeUnion(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IntersectsWith(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_intersectsWith: function (range) {
		for (var i = 0; i < this.___cellRanges.count(); i++) {
			if (this.___cellRanges.item(i).intersectsWith(range)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IntersectsWith(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IsColumnSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_isColumnSelection: function (range) {
		return range.firstRow() <= this.___availableRowRange.__start && range.lastRow() >= this.___availableRowRange.__end;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IsColumnSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IsRowSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_isRowSelection: function (range) {
		return range.firstColumn() <= this.___availableColumnRange.__start && range.lastColumn() >= this.___availableColumnRange.__end;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IsRowSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IsSelectedCellRangesSource(System.Object)" />*/
	_isSelectedCellRangesSource: function (sender) {
		return sender == this.___cellRangesSource || sender == this.___cellRanges;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::IsSelectedCellRangesSource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnActiveCellChanging(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_onActiveCellChanging: function (newActiveCell) {
		return this.___owningSpreadsheet._onActiveCellChanging(newActiveCell);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnActiveCellChanging(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnBeforeSelectionMouseDown()" />*/
	_onBeforeSelectionMouseDown: function () {
		return this.___owningSpreadsheet._tryExitEditMode(true);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnBeforeSelectionMouseDown()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnSelectionChanged()" />*/
	_onSelectionChanged: function () {
		this.___hasMixedCellSelection = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___hasOverlappingSelection = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		if (!this.___owningPane._suppressSelectionChanged()) {
			this.___owningSpreadsheet._raiseSelectionChanged(new $.ig.SpreadsheetSelectionChangedEventArgs(this.___owningPane));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::OnSelectionChanged()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_replaceActiveCellRange: function (cell) {
		return this._replaceActiveCellRangeImpl(this._getCellRange(cell), cell);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_resetSelection1: function (cell) {
		var cellRange = this._getCellRange(cell);
		return this._resetSelection2(cellRange, cell, true);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ResetSelection(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::Verify()" />*/
	_verify: function () {
		for (var i = this.___activeCellRangeIndex; i < this.___cellRangesSource.count(); i++) {
			if (this.___cellRangesSource.__inner[i]._contains(this.___activeCell)) {
				this.___activeCellRangeIndex = i;
				return;
			}
		}
		if (this.___activeCellRangeIndex > 0) {
			for (var i1 = this.___activeCellRangeIndex - 1; i1 >= 0; i1--) {
				if (this.___cellRangesSource.__inner[i1]._contains(this.___activeCell)) {
					this.___activeCellRangeIndex = i1;
					return;
				}
			}
		}
		this._resetSelection1(this.___activeCell);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::Verify()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::VerifyActiveCellResolved()" />*/
	_verifyActiveCellResolved: function () {
		this._setProperties(this.activeCell(), this.activeCellRangeIndex(), this._getCellRange(this.activeCell()));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::VerifyActiveCellResolved()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRangeImpl(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_addActiveCellRangeImpl: function (range, cell, cellAsRange) {
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(cell, this.activeCell()) && !this._onActiveCellChanging(cell)) {
			return false;
		}
		{
			var t1 = this._createSelectionLock();
			try {
				try {
					this.___cellRangesSource.beginUpdate();
					this.___cellRangesSource.add(range);
					this._setProperties(cell, this.___cellRangesSource.count() - 1, cellAsRange);
				}
				finally {
					this.___cellRangesSource.endUpdate();
				}
			}
			finally {
				if (t1 != null) {
					t1.dispose();
				}
			}
		}
		this._onSelectionChanged();
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::AddActiveCellRangeImpl(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetColumnRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getColumnRange: function (range) {
		return new $.ig.Range$1($.ig.Number.prototype.$type, 1, range.firstColumn(), range.lastColumn());
	}
	/*<EndMethod Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetColumnRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetHasMixedCellSelection()" />*/
	_getHasMixedCellSelection: function () {
		if (this.___cellRanges.count() < 2) {
			return false;
		}
		var hasColSelection = false;
		var hasRowSelection = false;
		var hasCellSelection = false;
		var en = this.___cellRanges.getEnumerator();
		while (en.moveNext()) {
			var range = en.current();
			var isCellSelection = true;
			if (this._isColumnSelection(range)) {
				hasColSelection = true;
				isCellSelection = false;
			}
			if (this._isRowSelection(range)) {
				hasRowSelection = true;
				isCellSelection = false;
			}
			if (isCellSelection) {
				hasCellSelection = true;
			}
		}
		return hasCellSelection && (hasRowSelection || hasColSelection);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetHasMixedCellSelection()" />*/
	,
	/*<BeginMethod Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetRowRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getRowRange: function (range) {
		return new $.ig.Range$1($.ig.Number.prototype.$type, 1, range.firstRow(), range.lastRow());
	}
	/*<EndMethod Name="Infragistics.Range Infragistics.Controls.Grids.Core.SpreadsheetSelection::GetRowRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::DoesMatchCurrentSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_doesMatchCurrentSelection: function (range) {
		return this.___cellRanges.count() == 1 && range._equals(this.___cellRanges.item(0));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::DoesMatchCurrentSelection(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRangeImpl(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_replaceActiveCellRangeImpl: function (range, activeCell) {
		var hasSelectionChanged = !this.___cellRangesSource.__inner[this.activeCellRangeIndex()]._equals(range);
		var hasActiveCellChanged = $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(activeCell, this.activeCell());
		if (hasActiveCellChanged && !this._onActiveCellChanging(activeCell)) {
			return false;
		}
		{
			var t1 = this._createSelectionLock();
			try {
				try {
					if (hasSelectionChanged) {
						this.___cellRangesSource.beginUpdate();
						this.___cellRangesSource.item(this.activeCellRangeIndex(), range);
					}
					if (hasActiveCellChanged) {
						this._setProperties(activeCell, this.activeCellRangeIndex(), this._getCellRange(activeCell));
					}
				}
				finally {
					if (hasSelectionChanged) {
						this.___cellRangesSource.endUpdate();
					}
				}
			}
			finally {
				if (t1 != null) {
					t1.dispose();
				}
			}
		}
		if (hasSelectionChanged) {
			this._onSelectionChanged();
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelection::ReplaceActiveCellRangeImpl(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::SetProperties(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Int32, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_setProperties: function (activeCell, newActiveRangeIndex, activeCellRange) {
		var indexBefore = this.activeCellRangeIndex();
		var cellAsRangeBefore = this._activeCellAsRange();
		var cellBefore = this.activeCell();
		this.___activeCellRangeIndex = newActiveRangeIndex;
		this.___activeCellAsRange = activeCellRange;
		this.___activeCell = activeCell;
		if (indexBefore != newActiveRangeIndex) {
			this.onPropertyChanged("ActiveCellRangeIndex");
		}
		if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality(cellAsRangeBefore, activeCellRange)) {
			this.onPropertyChanged("ActiveCellAsRange");
		}
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(cellBefore, activeCell)) {
			this.onPropertyChanged("ActiveCell");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetSelection::SetProperties(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Int32, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetSelection', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelection" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SelectionSnapshot" />*/

$.ig.util.defType('SelectionSnapshot', 'Object', {
	__cellRanges: null,
	__activeCellRangeIndex: 0,
	__activeCell: null,
	___worksheet: null,
	init: function (worksheet, cellRanges, activeCell, activeCellRangeIndex) {
		this.__activeCell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.Object.prototype.init.call(this);
		$.ig.Debug.prototype.assert(cellRanges != null && activeCellRangeIndex >= 0 && activeCellRangeIndex < cellRanges.length && cellRanges[activeCellRangeIndex]._contains(activeCell));
		this.___worksheet = new $.ig.WeakReference(worksheet);
		this.__activeCell = activeCell;
		this.__cellRanges = cellRanges;
		this.__activeCellRangeIndex = activeCellRangeIndex;
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SelectionSnapshot::Worksheet()" />*/
	_worksheet: function () {
		return $.ig.util.cast($.ig.excel.Worksheet.prototype.$type, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.___worksheet));
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SelectionSnapshot::Worksheet()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::Create(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetSelection)" />*/
	_create2: function (worksheet, selection) {
		return new $.ig.SelectionSnapshot(worksheet, $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges()), selection.activeCell(), selection.activeCellRangeIndex());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::Create(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetSelection)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::Create(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_create: function (worksheet, range) {
		return $.ig.SelectionSnapshot.prototype._create1(worksheet, range, range._upperLeft());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::Create(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::Create(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_create1: function (worksheet, range, activeCell) {
		$.ig.Debug.prototype.assert(range._contains(activeCell));
		return new $.ig.SelectionSnapshot(worksheet, [ range ], activeCell, 0);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::Create(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SelectionSnapshot::Equals(Infragistics.Controls.Grids.Core.SelectionSnapshot)" />*/
	equals: function (other) {
		return other != null && this.__activeCell._equals(other.__activeCell) && this.__activeCellRangeIndex == other.__activeCellRangeIndex && $.ig.CoreUtilities.prototype.areEqual$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, this.__cellRanges, other.__cellRanges, null) && other._worksheet() == this._worksheet();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SelectionSnapshot::Equals(Infragistics.Controls.Grids.Core.SelectionSnapshot)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SelectionSnapshot::IsSameSelection(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetSelection)" />*/
	_isSameSelection: function (worksheet, selection) {
		return this.__activeCell._equals(selection.activeCell()) && this.__activeCellRangeIndex == selection.activeCellRangeIndex() && $.ig.CoreUtilities.prototype.areEqual$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, this.__cellRanges, selection.cellRanges(), null) && worksheet == this._worksheet();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SelectionSnapshot::IsSameSelection(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetSelection)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::WithRangeAndCell(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode)" />*/
	_withRangeAndCell: function (ws, range, activeCell, selectionMode) {
		$.ig.Debug.prototype.assert(range._contains(activeCell));
		if (selectionMode != $.ig.SpreadsheetCellSelectionMode.prototype.normal && ws != this._worksheet()) {
			return this;
		}
		switch (selectionMode) {
			default:
			case $.ig.SpreadsheetCellSelectionMode.prototype.normal:
				return $.ig.SelectionSnapshot.prototype._create1(ws, range, activeCell);
			case $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection:
				var activeCellRange = $.ig.SpreadsheetPaneManager.prototype._getCellRange2(activeCell.row(), activeCell.column(), ws);
				var extendedRanges = $.ig.Enumerable.prototype.toList$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, this.__cellRanges);
				var newRange = range.union(activeCellRange);
				newRange = $.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(ws, newRange, null);
				extendedRanges.__inner[this.__activeCellRangeIndex] = newRange;
				return new $.ig.SelectionSnapshot(ws, extendedRanges.toArray(), this.__activeCell, this.__activeCellRangeIndex);
			case $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection:
				var newRanges = $.ig.Enumerable.prototype.toList$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, this.__cellRanges);
				newRanges.add($.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(ws, range, null));
				return new $.ig.SelectionSnapshot(ws, newRanges.toArray(), activeCell, newRanges.count() - 1);
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::WithRangeAndCell(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::WithRange(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode)" />*/
	_withRange: function (worksheet, range, selectionMode) {
		return this._withRangeAndCell(worksheet, range, range._upperLeft(), selectionMode);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SelectionSnapshot Infragistics.Controls.Grids.Core.SelectionSnapshot::WithRange(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionMode)" />*/
	,
	$type: new $.ig.Type('SelectionSnapshot', $.ig.Object.prototype.$type, [$.ig.IEquatable$1.prototype.$type.specialize(-1)])
}, true);

$.ig.SelectionSnapshot.prototype.$type.initSelfReferences();

/*<EndType Name="Infragistics.Controls.Grids.Core.SelectionSnapshot" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder" />*/

$.ig.util.defType('SpreadsheetCommandBuilder', 'Object', {
	__requirements: null,
	__items: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.__items = new $.ig.List$1($.ig.CommandMap_KeyMapping.prototype.$type, 0);
		this.__requirements = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.CommandMap_Requirement.prototype.$type, 0);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::InitializeRequirements()" />*/
	initializeRequirements: function () {
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes, $.ig.SpreadsheetStatesLow.prototype.hasMultiplePanes, [ $.ig.spreadsheet.SpreadsheetAction.activateNextPane, $.ig.spreadsheet.SpreadsheetAction.activatePreviousPane ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes, $.ig.SpreadsheetStatesLow.prototype.hasColumnScrollRegionSplit, [ $.ig.spreadsheet.SpreadsheetAction.snapColumnScrollRegionSplit ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes, $.ig.SpreadsheetStatesLow.prototype.hasRowScrollRegionSplit, [ $.ig.spreadsheet.SpreadsheetAction.snapRowScrollRegionSplit ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes, $.ig.SpreadsheetStatesLow.prototype.hasMultiplePanes, [ $.ig.spreadsheet.SpreadsheetAction.snapScrollRegionSplits ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasColumnScrollRegionSplit, [ $.ig.spreadsheet.SpreadsheetAction.removeColumnScrollRegionSplit ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasRowScrollRegionSplit, [ $.ig.spreadsheet.SpreadsheetAction.removeRowScrollRegionSplit ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasMultiplePanes, [ $.ig.spreadsheet.SpreadsheetAction.removeScrollRegionSplits ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.cellInSelectionAbove, $.ig.spreadsheet.SpreadsheetAction.cellInSelectionBelow, $.ig.spreadsheet.SpreadsheetAction.cellInSelectionRight, $.ig.spreadsheet.SpreadsheetAction.cellInSelectionLeft, $.ig.spreadsheet.SpreadsheetAction.enterKeyNavigation, $.ig.spreadsheet.SpreadsheetAction.shiftEnterKeyNavigation, $.ig.spreadsheet.SpreadsheetAction.firstCellInViewWithinSelection, $.ig.spreadsheet.SpreadsheetAction.lastCellInViewWithinSelection, $.ig.spreadsheet.SpreadsheetAction.selectCellRight, $.ig.spreadsheet.SpreadsheetAction.selectCellLeft, $.ig.spreadsheet.SpreadsheetAction.selectCellAbove, $.ig.spreadsheet.SpreadsheetAction.selectCellBelow, $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataLeft, $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataRight, $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataAbove, $.ig.spreadsheet.SpreadsheetAction.selectCellWithDataBelow, $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataLeft, $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataRight, $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataAbove, $.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataBelow, $.ig.spreadsheet.SpreadsheetAction.selectCellPageBelow, $.ig.spreadsheet.SpreadsheetAction.selectCellPageAbove, $.ig.spreadsheet.SpreadsheetAction.selectCellPageRight, $.ig.spreadsheet.SpreadsheetAction.selectCellPageLeft, $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInRow, $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInView, $.ig.spreadsheet.SpreadsheetAction.selectFirstCellInWorksheet, $.ig.spreadsheet.SpreadsheetAction.selectLastCellInView, $.ig.spreadsheet.SpreadsheetAction.selectLastUsedCell, $.ig.spreadsheet.SpreadsheetAction.selectLastUsedCellInRow, $.ig.spreadsheet.SpreadsheetAction.selectCurrentRegion, $.ig.spreadsheet.SpreadsheetAction.selectAllCells, $.ig.spreadsheet.SpreadsheetAction.selectCurrentArray, $.ig.spreadsheet.SpreadsheetAction.selectVisibleCellsOnly, $.ig.spreadsheet.SpreadsheetAction.cellInNextSelectionRange, $.ig.spreadsheet.SpreadsheetAction.cellInPreviousSelectionRange, $.ig.spreadsheet.SpreadsheetAction.selectActiveCellOnly, $.ig.spreadsheet.SpreadsheetAction.firstUnlockedCell, $.ig.spreadsheet.SpreadsheetAction.lastUnlockedCell, $.ig.spreadsheet.SpreadsheetAction.selectColumns, $.ig.spreadsheet.SpreadsheetAction.selectRows ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.isFormatRowsProtected, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.autoFitRowHeight ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.isFormatColumnsProtected, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.autoFitColumnWidth ]);
		this.addDefinitions1(0, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.cut, $.ig.spreadsheet.SpreadsheetAction.copy, $.ig.spreadsheet.SpreadsheetAction.paste ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isFormatCellsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.toggleBold, $.ig.spreadsheet.SpreadsheetAction.toggleItalic, $.ig.spreadsheet.SpreadsheetAction.toggleStrikeThrough, $.ig.spreadsheet.SpreadsheetAction.toggleDoubleUnderline, $.ig.spreadsheet.SpreadsheetAction.toggleUnderline, $.ig.spreadsheet.SpreadsheetAction.toggleSubscript, $.ig.spreadsheet.SpreadsheetAction.toggleSuperscript, $.ig.spreadsheet.SpreadsheetAction.decreaseFontSize, $.ig.spreadsheet.SpreadsheetAction.increaseFontSize ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.insertCells, $.ig.spreadsheet.SpreadsheetAction.deleteCells, $.ig.spreadsheet.SpreadsheetAction.toggleShowFormulasInCells ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isFormatCellsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.alignHorizontalCenter, $.ig.spreadsheet.SpreadsheetAction.alignHorizontalJustify, $.ig.spreadsheet.SpreadsheetAction.alignHorizontalLeft, $.ig.spreadsheet.SpreadsheetAction.alignHorizontalRight, $.ig.spreadsheet.SpreadsheetAction.alignVerticalBottom, $.ig.spreadsheet.SpreadsheetAction.alignVerticalMiddle, $.ig.spreadsheet.SpreadsheetAction.toggleWrapText, $.ig.spreadsheet.SpreadsheetAction.alignVerticalTop, $.ig.spreadsheet.SpreadsheetAction.decreaseIndentation, $.ig.spreadsheet.SpreadsheetAction.increaseIndentation ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.hasColumnsSelected | $.ig.SpreadsheetStatesLow.prototype.isInsertRowsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.insertRows ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.hasRowsSelected | $.ig.SpreadsheetStatesLow.prototype.isInsertColumnsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.insertColumns ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.hasColumnsSelected | $.ig.SpreadsheetStatesLow.prototype.isDeleteRowsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.deleteRows ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.hasRowsSelected | $.ig.SpreadsheetStatesLow.prototype.isDeleteColumnsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.deleteColumns ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.hasColumnsSelected | $.ig.SpreadsheetStatesLow.prototype.isWorksheetProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.insertCellsShiftDown, $.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftUp ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.hasRowsSelected | $.ig.SpreadsheetStatesLow.prototype.isWorksheetProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.insertCellsShiftRight, $.ig.spreadsheet.SpreadsheetAction.deleteCellsShiftLeft ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.zoomIn, $.ig.spreadsheet.SpreadsheetAction.zoomOut, $.ig.spreadsheet.SpreadsheetAction.zoomTo100, $.ig.spreadsheet.SpreadsheetAction.zoomToSelection, $.ig.spreadsheet.SpreadsheetAction.toggleSplitPanes, $.ig.spreadsheet.SpreadsheetAction.toggleFreezePanes, $.ig.spreadsheet.SpreadsheetAction.freezeFirstColumn, $.ig.spreadsheet.SpreadsheetAction.freezeFirstRow, $.ig.spreadsheet.SpreadsheetAction.clearHyperlinks, $.ig.spreadsheet.SpreadsheetAction.removeHyperlinks ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isFormatColumnsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.hideColumns, $.ig.spreadsheet.SpreadsheetAction.unhideColumns ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isFormatRowsProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.hideRows, $.ig.spreadsheet.SpreadsheetAction.unhideRows ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isWorksheetProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.mergeCellsAndCenter, $.ig.spreadsheet.SpreadsheetAction.mergeCellsAcross, $.ig.spreadsheet.SpreadsheetAction.mergeCells, $.ig.spreadsheet.SpreadsheetAction.unmergeCells ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.cellAbove, $.ig.spreadsheet.SpreadsheetAction.cellBelow, $.ig.spreadsheet.SpreadsheetAction.cellLeft, $.ig.spreadsheet.SpreadsheetAction.cellRight, $.ig.spreadsheet.SpreadsheetAction.cellWithDataAbove, $.ig.spreadsheet.SpreadsheetAction.cellWithDataBelow, $.ig.spreadsheet.SpreadsheetAction.cellWithDataLeft, $.ig.spreadsheet.SpreadsheetAction.cellWithDataRight, $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataAbove, $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataBelow, $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataLeft, $.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataRight, $.ig.spreadsheet.SpreadsheetAction.cellPageLeft, $.ig.spreadsheet.SpreadsheetAction.cellPageRight, $.ig.spreadsheet.SpreadsheetAction.cellPageAbove, $.ig.spreadsheet.SpreadsheetAction.cellPageBelow, $.ig.spreadsheet.SpreadsheetAction.firstCellInView, $.ig.spreadsheet.SpreadsheetAction.lastCellInView, $.ig.spreadsheet.SpreadsheetAction.firstCellInRow, $.ig.spreadsheet.SpreadsheetAction.firstCellInWorksheet ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.scrollUp, $.ig.spreadsheet.SpreadsheetAction.scrollDown, $.ig.spreadsheet.SpreadsheetAction.scrollLeft, $.ig.spreadsheet.SpreadsheetAction.scrollRight, $.ig.spreadsheet.SpreadsheetAction.scrollPageLeft, $.ig.spreadsheet.SpreadsheetAction.scrollPageRight, $.ig.spreadsheet.SpreadsheetAction.scrollPageAbove, $.ig.spreadsheet.SpreadsheetAction.scrollPageBelow ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.isInEndMode, 0, [ $.ig.spreadsheet.SpreadsheetAction.enterEndMode ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.isInEndMode, [ $.ig.spreadsheet.SpreadsheetAction.exitEndMode ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected, 0, $.ig.SpreadsheetStatesLow.prototype.hasWorkbook, $.ig.SpreadsheetStatesHigh.prototype.addWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.addNewWorksheet ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorkbook, $.ig.SpreadsheetStatesHigh.prototype.addWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorkbook, $.ig.SpreadsheetStatesHigh.prototype.deleteWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.deleteWorksheets ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode | $.ig.SpreadsheetStatesLow.prototype.isWorkbookProtected, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorkbook, 0, [ $.ig.spreadsheet.SpreadsheetAction.renameWorksheet ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.activateNextWorksheet, $.ig.spreadsheet.SpreadsheetAction.activatePreviousWorksheet, $.ig.spreadsheet.SpreadsheetAction.activateAndSelectNextWorksheet, $.ig.spreadsheet.SpreadsheetAction.activateAndSelectPreviousWorksheet, $.ig.spreadsheet.SpreadsheetAction.selectAllWorksheets ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasMultipleSelectedWorksheets, [ $.ig.spreadsheet.SpreadsheetAction.unselectWorksheets ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.hasMultipleSelectedWorksheets | $.ig.SpreadsheetStatesLow.prototype.isInEditMode, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.openHyperlink, $.ig.spreadsheet.SpreadsheetAction.circleInvalidData, $.ig.spreadsheet.SpreadsheetAction.clearValidationCircles ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet | $.ig.SpreadsheetStatesLow.prototype.isPreviousWorksheetTabOutOfView, [ $.ig.spreadsheet.SpreadsheetAction.scrollPreviousWorksheet, $.ig.spreadsheet.SpreadsheetAction.scrollToFirstWorksheet, $.ig.spreadsheet.SpreadsheetAction.activatePreviousOutOfViewWorksheet ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet | $.ig.SpreadsheetStatesLow.prototype.isNextWorksheetTabOutOfView, [ $.ig.spreadsheet.SpreadsheetAction.scrollNextWorksheet, $.ig.spreadsheet.SpreadsheetAction.scrollToLastWorksheet, $.ig.spreadsheet.SpreadsheetAction.activateNextOutOfViewWorksheet ]);
		this.addDefinitions1($.ig.SpreadsheetStatesLow.prototype.isInEditMode, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0, [ $.ig.spreadsheet.SpreadsheetAction.enterEditMode, $.ig.spreadsheet.SpreadsheetAction.enterEditModeAndClearValue, $.ig.spreadsheet.SpreadsheetAction.clearContents ]);
		this.addDefinitions2(0, $.ig.SpreadsheetStatesLow.prototype.isInEditMode, [ $.ig.spreadsheet.SpreadsheetAction.toggleCellEditMode, $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndDiscardChanges, $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateActiveCell, $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateSelectedCells, $.ig.spreadsheet.SpreadsheetAction.exitEditModeAndCreateArrayFormula ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.isInNormalSelectionMode, 0, [ $.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode, 0, [ $.ig.spreadsheet.SpreadsheetAction.switchToExtendSelectionMode ]);
		this.addDefinitions2($.ig.SpreadsheetStatesLow.prototype.isInAddToSelectionMode, 0, [ $.ig.spreadsheet.SpreadsheetAction.switchToAddToSelectionMode ]);
		this.addDefinitions1(0, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.canUndo, 0, [ $.ig.spreadsheet.SpreadsheetAction.undo ]);
		this.addDefinitions1(0, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, $.ig.SpreadsheetStatesLow.prototype.canRedo, 0, [ $.ig.spreadsheet.SpreadsheetAction.redo ]);
		this.addDefinitions(0, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet, [ $.ig.spreadsheet.SpreadsheetAction.cancelRenameWorksheet, $.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet ]);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::InitializeRequirements()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, )" />*/
	addDefinitions2: function (disallowed, required, commands) {
		this.addDefinitions1(disallowed, 0, required, 0, commands);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, )" />*/
	addDefinitions: function (disallowed, required, commands) {
		this.addDefinitions1(0, disallowed, 0, required, commands);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, )" />*/
	addDefinitions1: function (disallowedLow, disallowedHigh, requiredLow, requiredHigh, commands) {
		var d = new $.ig.LongValue(0);
		d._low = (disallowedLow | $.ig.SpreadsheetStatesLow.prototype.isInNameBox);
		d._high = disallowedHigh;
		var r = new $.ig.LongValue(0);
		r._low = requiredLow;
		r._high = requiredHigh;
		this.addDefinitions3(d, r, commands);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, Infragistics.Controls.Grids.Core.SpreadsheetStatesLow, Infragistics.Controls.Grids.Core.SpreadsheetStatesHigh, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Core.LongValue, Infragistics.Core.LongValue, )" />*/
	addDefinitions3: function (disallowed, required, commands) {
		var requirement = new $.ig.CommandMap_Requirement(disallowed, required);
		for (var i = 0; i < commands.length; i++) {
			var cmd = commands[i];
			$.ig.Debug.prototype.assert(!this.__requirements.containsKey(cmd));
			this.__requirements.item(cmd, requirement);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddDefinitions(Infragistics.Core.LongValue, Infragistics.Core.LongValue, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddItems()" />*/
	addItems: function () {
		var AltModifier = $.ig.CommandMap.prototype.altModifier;
		var CtrlShift = $.ig.ModifierKeys.prototype.shift | $.ig.ModifierKeys.prototype.control;
		var AltShift = $.ig.ModifierKeys.prototype.shift | AltModifier;
		var Ctrl = $.ig.ModifierKeys.prototype.control;
		var Alt = AltModifier;
		var Shift = $.ig.ModifierKeys.prototype.shift;
		var None = $.ig.ModifierKeys.prototype.none;
		var OemTilde = $.ig.Key.prototype.oemTilde;
		var zero = $.ig.SpreadsheetCommandBuilder.prototype._zero;
		var isRenamingWorksheet = new $.ig.LongValue(1, 0, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet);
		var hasWorksheet = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.hasWorksheet, 0);
		var scrollLock = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.hasScrollLock, 0);
		var endMode = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.isInEndMode, 0);
		var frozen = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes, 0);
		var unlocked = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.isNavigatingUnlockedCellsOnly, 0);
		var isInAddToSelectionMode = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.isInAddToSelectionMode, 0);
		var enterKeyNav = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.enterKeyNavigation, 0);
		var extSel = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode, 0);
		var extSel_Frozen = extSel.orLow($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes);
		var extSel_ScrollLock = new $.ig.LongValue(1, ($.ig.SpreadsheetStatesLow.prototype.hasScrollLock | $.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode), 0);
		var extSel_ScrollLock_IsRenaming = extSel_ScrollLock.orHigh($.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet);
		var inEdit_IsRenaming = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.isInEditMode, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet);
		var endMode_IsRenaming = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.isInEndMode, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet);
		var endMode_IsRenaming_ArrowNav = endMode_IsRenaming.orLow($.ig.SpreadsheetStatesLow.prototype.arrowKeysNavigateWithinCell);
		var endMode_IsRenaming_ArrowNav_ScrollLock = endMode_IsRenaming_ArrowNav.orLow($.ig.SpreadsheetStatesLow.prototype.hasScrollLock);
		var endMode_IsRenaming_ArrowNav_ScrollLock_Frozen = endMode_IsRenaming_ArrowNav_ScrollLock.orLow($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes);
		var arrowNav_IsRenaming = new $.ig.LongValue(1, $.ig.SpreadsheetStatesLow.prototype.arrowKeysNavigateWithinCell, $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet);
		var arrowNav_IsRenaming_Frozen = arrowNav_IsRenaming.orLow($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes);
		var arrowNav_IsRenaming_ExtSel = arrowNav_IsRenaming.orLow($.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode);
		var arrowNav_IsRenaming_ExtSel_Frozen = arrowNav_IsRenaming_ExtSel.orLow($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes);
		var arrowNav_IsRenaming_ScrollLock = new $.ig.LongValue(1, ($.ig.SpreadsheetStatesLow.prototype.hasScrollLock | $.ig.SpreadsheetStatesLow.prototype.arrowKeysNavigateWithinCell), $.ig.SpreadsheetStatesHigh.prototype.isRenamingWorksheet);
		var arrowNav_IsRenaming_ScrollLock_ExtSel = arrowNav_IsRenaming_ScrollLock.orLow($.ig.SpreadsheetStatesLow.prototype.isInExtendedSelectionMode);
		var arrowNav_IsRenaming_ScrollLock_ExtSel_NavUnlock_AddSel = arrowNav_IsRenaming_ScrollLock_ExtSel.orLow(($.ig.SpreadsheetStatesLow.prototype.isNavigatingUnlockedCellsOnly | $.ig.SpreadsheetStatesLow.prototype.isInAddToSelectionMode));
		var arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode = arrowNav_IsRenaming_ScrollLock_ExtSel.orLow($.ig.SpreadsheetStatesLow.prototype.isInEndMode);
		var arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode_NavUnlock = arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode.orLow($.ig.SpreadsheetStatesLow.prototype.isNavigatingUnlockedCellsOnly);
		var arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode_NavUnlock_Frozen = arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode_NavUnlock.orLow($.ig.SpreadsheetStatesLow.prototype.hasFrozenPanes);
		var unlocked_IsRenaming = isRenamingWorksheet.orLow($.ig.SpreadsheetStatesLow.prototype.isNavigatingUnlockedCellsOnly);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToAddToSelectionMode, $.ig.Key.prototype.f8, Shift, hasWorksheet, zero, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.f8, Shift, isInAddToSelectionMode, zero, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToExtendSelectionMode, $.ig.Key.prototype.f8, None, hasWorksheet, zero, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.f8, None, extSel, zero, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.escape, None, zero, inEdit_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.up, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.down, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.left, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.right, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.pageUp, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.pageDown, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.home, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.switchToNormalSelectionMode, $.ig.Key.prototype.end, Shift, isInAddToSelectionMode, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.enterEndMode, $.ig.Key.prototype.end, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel_NavUnlock_AddSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.exitEndMode, $.ig.Key.prototype.end, None, zero, extSel_ScrollLock_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.enterEndMode, $.ig.Key.prototype.end, Shift, zero, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.exitEndMode, $.ig.Key.prototype.end, Shift, zero, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.enterEditMode, $.ig.Key.prototype.f2, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.enterEditModeAndClearValue, $.ig.Key.prototype.back, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.exitEditModeAndDiscardChanges, $.ig.Key.prototype.escape, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateSelectedCells, $.ig.Key.prototype.enter, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.exitEditModeAndCreateArrayFormula, $.ig.Key.prototype.enter, CtrlShift);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateActiveCell, $.ig.Key.prototype.enter, None, zero, enterKeyNav, false);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleCellEditMode, $.ig.Key.prototype.f2, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.cancelRenameWorksheet, $.ig.Key.prototype.escape, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet, $.ig.Key.prototype.enter, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet, $.ig.Key.prototype.enter, Shift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet, $.ig.Key.prototype.enter, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet, $.ig.Key.prototype.tab, None);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet, $.ig.Key.prototype.tab, Shift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.commitRenameWorksheet, $.ig.Key.prototype.tab, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.clearContents, $.ig.Key.prototype.del, None);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellLeft, $.ig.Key.prototype.left, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellRight, $.ig.Key.prototype.right, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellAbove, $.ig.Key.prototype.up, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellBelow, $.ig.Key.prototype.down, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellLeft, $.ig.Key.prototype.left, Shift, zero, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellRight, $.ig.Key.prototype.right, Shift, zero, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellAbove, $.ig.Key.prototype.up, Shift, zero, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellBelow, $.ig.Key.prototype.down, Shift, zero, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellLeft, $.ig.Key.prototype.left, None, extSel, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellRight, $.ig.Key.prototype.right, None, extSel, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellAbove, $.ig.Key.prototype.up, None, extSel, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellBelow, $.ig.Key.prototype.down, None, extSel, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataLeft, $.ig.Key.prototype.left, Ctrl, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataRight, $.ig.Key.prototype.right, Ctrl, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataAbove, $.ig.Key.prototype.up, Ctrl, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataBelow, $.ig.Key.prototype.down, Ctrl, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataLeft, $.ig.Key.prototype.left, CtrlShift, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataRight, $.ig.Key.prototype.right, CtrlShift, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataAbove, $.ig.Key.prototype.up, CtrlShift, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataBelow, $.ig.Key.prototype.down, CtrlShift, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataLeft, $.ig.Key.prototype.left, Ctrl, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataRight, $.ig.Key.prototype.right, Ctrl, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataAbove, $.ig.Key.prototype.up, Ctrl, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataBelow, $.ig.Key.prototype.down, Ctrl, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellInSelectionRight, $.ig.Key.prototype.tab, None, zero, unlocked_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellInSelectionLeft, $.ig.Key.prototype.tab, Shift, zero, unlocked_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellInNextSelectionRange, $.ig.Key.prototype.right, Ctrl | Alt, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellInPreviousSelectionRange, $.ig.Key.prototype.left, Ctrl | Alt, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectActiveCellOnly, $.ig.Key.prototype.back, Shift, zero, inEdit_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectVisibleCellsOnly, $.ig.Key.prototype.oemSemicolon, Alt, zero, inEdit_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCurrentArray, $.ig.Key.prototype.oemQuestion, Ctrl, zero, inEdit_IsRenaming, false);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleShowFormulasInCells, OemTilde, Ctrl);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectColumns, $.ig.Key.prototype.space, Ctrl, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectRows, $.ig.Key.prototype.space, Shift, zero, arrowNav_IsRenaming, false);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.undo, $.ig.Key.prototype.z, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.redo, $.ig.Key.prototype.y, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleBold, $.ig.Key.prototype.d2, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleBold, $.ig.Key.prototype.b, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleItalic, $.ig.Key.prototype.d3, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleItalic, $.ig.Key.prototype.i, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleUnderline, $.ig.Key.prototype.d4, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleUnderline, $.ig.Key.prototype.u, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.toggleStrikeThrough, $.ig.Key.prototype.d5, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.cut, $.ig.Key.prototype.x, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.copy, $.ig.Key.prototype.c, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.paste, $.ig.Key.prototype.v, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.cut, $.ig.Key.prototype.del, Shift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.copy, $.ig.Key.prototype.insert, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.paste, $.ig.Key.prototype.insert, Shift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.activateNextWorksheet, $.ig.Key.prototype.pageDown, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.activatePreviousWorksheet, $.ig.Key.prototype.pageUp, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.activateAndSelectNextWorksheet, $.ig.Key.prototype.pageDown, CtrlShift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.activateAndSelectPreviousWorksheet, $.ig.Key.prototype.pageUp, CtrlShift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets, $.ig.Key.prototype.f11, Shift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.insertNewWorksheets, $.ig.Key.prototype.f1, AltShift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.hideColumns, $.ig.Key.prototype.d0, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.unhideColumns, $.ig.Key.prototype.d0, CtrlShift);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.hideRows, $.ig.Key.prototype.d9, Ctrl);
		this.addItem($.ig.spreadsheet.SpreadsheetAction.unhideRows, $.ig.Key.prototype.d9, CtrlShift);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.enterKeyNavigation, $.ig.Key.prototype.enter, None, enterKeyNav, endMode_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.shiftEnterKeyNavigation, $.ig.Key.prototype.enter, Shift, enterKeyNav, endMode_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellPageBelow, $.ig.Key.prototype.pageDown, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellPageAbove, $.ig.Key.prototype.pageUp, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellPageLeft, $.ig.Key.prototype.pageUp, Alt, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellPageRight, $.ig.Key.prototype.pageDown, Alt, zero, arrowNav_IsRenaming_ScrollLock_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageBelow, $.ig.Key.prototype.pageDown, Shift, zero, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageAbove, $.ig.Key.prototype.pageUp, Shift, zero, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageLeft, $.ig.Key.prototype.pageUp, AltShift, zero, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageRight, $.ig.Key.prototype.pageDown, AltShift, zero, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageBelow, $.ig.Key.prototype.pageDown, None, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageAbove, $.ig.Key.prototype.pageUp, None, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageLeft, $.ig.Key.prototype.pageUp, Alt, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCellPageRight, $.ig.Key.prototype.pageDown, Alt, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.firstCellInWorksheet, $.ig.Key.prototype.home, Ctrl, zero, arrowNav_IsRenaming_ExtSel_Frozen, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.firstCellInRow, $.ig.Key.prototype.home, None, zero, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode_NavUnlock_Frozen, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.firstScrollableCellInWorksheet, $.ig.Key.prototype.home, Ctrl, frozen, arrowNav_IsRenaming_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.firstScrollableCellInRow, $.ig.Key.prototype.home, None, frozen, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode_NavUnlock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstCellInWorksheet, $.ig.Key.prototype.home, CtrlShift, zero, arrowNav_IsRenaming_Frozen, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstCellInRow, $.ig.Key.prototype.home, Shift, zero, endMode_IsRenaming_ArrowNav_ScrollLock_Frozen, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstCellInWorksheet, $.ig.Key.prototype.home, Ctrl, extSel, arrowNav_IsRenaming_Frozen, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstCellInRow, $.ig.Key.prototype.home, None, extSel, endMode_IsRenaming_ArrowNav_ScrollLock_Frozen, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInWorksheet, $.ig.Key.prototype.home, CtrlShift, frozen, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInRow, $.ig.Key.prototype.home, Shift, frozen, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInWorksheet, $.ig.Key.prototype.home, Ctrl, extSel_Frozen, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstScrollableCellInRow, $.ig.Key.prototype.home, None, extSel_Frozen, endMode_IsRenaming_ArrowNav_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.firstUnlockedCell, $.ig.Key.prototype.home, None, unlocked, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.lastUnlockedCell, $.ig.Key.prototype.end, None, unlocked, arrowNav_IsRenaming_ScrollLock_ExtSel_EndMode, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellRight, $.ig.Key.prototype.tab, None, unlocked, isRenamingWorksheet, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.cellLeft, $.ig.Key.prototype.tab, Shift, unlocked, isRenamingWorksheet, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.lastUsedCell, $.ig.Key.prototype.end, Ctrl, zero, arrowNav_IsRenaming_ExtSel, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectLastUsedCell, $.ig.Key.prototype.end, CtrlShift, zero, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectLastUsedCell, $.ig.Key.prototype.end, Ctrl, extSel, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectLastUsedCellInRow, $.ig.Key.prototype.end, None, extSel, arrowNav_IsRenaming_ScrollLock, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCurrentRegion, $.ig.Key.prototype.a, Ctrl, zero, inEdit_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectCurrentRegion, $.ig.Key.prototype.space, CtrlShift, zero, inEdit_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollLeft, $.ig.Key.prototype.left, None, scrollLock, endMode_IsRenaming_ArrowNav, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollRight, $.ig.Key.prototype.right, None, scrollLock, endMode_IsRenaming_ArrowNav, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollUp, $.ig.Key.prototype.up, None, scrollLock, endMode_IsRenaming_ArrowNav, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollDown, $.ig.Key.prototype.down, None, scrollLock, endMode_IsRenaming_ArrowNav, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageLeft, $.ig.Key.prototype.left, Ctrl, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageRight, $.ig.Key.prototype.right, Ctrl, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageAbove, $.ig.Key.prototype.up, Ctrl, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageBelow, $.ig.Key.prototype.down, Ctrl, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageBelow, $.ig.Key.prototype.pageDown, None, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageAbove, $.ig.Key.prototype.pageUp, None, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageLeft, $.ig.Key.prototype.pageUp, AltModifier, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.scrollPageRight, $.ig.Key.prototype.pageDown, AltModifier, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.firstCellInView, $.ig.Key.prototype.home, None, scrollLock, endMode_IsRenaming_ArrowNav, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.lastCellInView, $.ig.Key.prototype.end, None, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectFirstCellInView, $.ig.Key.prototype.home, Shift, scrollLock, endMode_IsRenaming_ArrowNav, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectLastCellInView, $.ig.Key.prototype.end, Shift, scrollLock, arrowNav_IsRenaming, false);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataLeft, $.ig.Key.prototype.left, None, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataRight, $.ig.Key.prototype.right, None, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataAbove, $.ig.Key.prototype.up, None, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.edgeCellWithDataBelow, $.ig.Key.prototype.down, None, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.lastUsedCell, $.ig.Key.prototype.home, None, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.lastUsedCellInRow, $.ig.Key.prototype.enter, None, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataLeft, $.ig.Key.prototype.left, Shift, endMode, arrowNav_IsRenaming_ScrollLock, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataRight, $.ig.Key.prototype.right, Shift, endMode, arrowNav_IsRenaming_ScrollLock, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataAbove, $.ig.Key.prototype.up, Shift, endMode, arrowNav_IsRenaming_ScrollLock, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectEdgeCellWithDataBelow, $.ig.Key.prototype.down, Shift, endMode, arrowNav_IsRenaming_ScrollLock, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectLastUsedCell, $.ig.Key.prototype.home, Shift, endMode, arrowNav_IsRenaming, true);
		this.addItem1($.ig.spreadsheet.SpreadsheetAction.selectLastUsedCellInRow, $.ig.Key.prototype.enter, Shift, endMode, arrowNav_IsRenaming, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddItems()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Windows.Input.Key, System.Windows.Input.ModifierKeys)" />*/
	addItem: function (cmd, key, requiredModifier) {
		this.addItem1(cmd, key, requiredModifier, $.ig.SpreadsheetCommandBuilder.prototype._zero, $.ig.SpreadsheetCommandBuilder.prototype._zero, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Windows.Input.Key, System.Windows.Input.ModifierKeys)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Windows.Input.Key, System.Windows.Input.ModifierKeys, Infragistics.Core.LongValue, Infragistics.Core.LongValue, System.Boolean)" />*/
	addItem1: function (cmd, key, requiredModifier, required, disallowed, exitEndMode) {
		this.__items.add(new $.ig.CommandMap_KeyMapping(cmd, disallowed, required, key, requiredModifier, $.ig.CommandMap.prototype.allModifiers & ~requiredModifier));
		if (exitEndMode) {
			this.addItem1($.ig.spreadsheet.SpreadsheetAction.exitEndMode, key, requiredModifier, required, disallowed, false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::AddItem(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Windows.Input.Key, System.Windows.Input.ModifierKeys, Infragistics.Core.LongValue, Infragistics.Core.LongValue, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IDictionary Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::GetMinimumStates()" />*/
	getMinimumStates: function () {
		var builder = new $.ig.SpreadsheetCommandBuilder();
		builder.initializeRequirements();
		return builder.__requirements;
	}
	/*<EndMethod Name="System.Collections.Generic.IDictionary Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::GetMinimumStates()" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::GetKeyMappings()" />*/
	getKeyMappings: function () {
		var builder = new $.ig.SpreadsheetCommandBuilder();
		builder.addItems();
		return builder.__items.toArray();
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::GetKeyMappings()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.CommandMap Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::CreateCommandMap()" />*/
	createCommandMap: function () {
		var builder = new $.ig.SpreadsheetCommandBuilder();
		builder.initializeRequirements();
		builder.addItems();
		return new $.ig.CommandMap(builder.__items.toArray(), builder.__requirements);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.CommandMap Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder::CreateCommandMap()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCommandBuilder', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCursorHelper" />*/

$.ig.util.defType('SpreadsheetCursorHelper', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCursorHelper::GetCursorInfo(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	getCursorInfo: function (cursorType) {
		var isOldIE = $.ig.util.isIE && $.ig.util.browserVersion < 10;;
		switch (cursorType) {
			case $.ig.SpreadsheetCursor.prototype.arrow: return "default";
			case $.ig.SpreadsheetCursor.prototype.autoFill: return "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAkAAAAJAAAACQAAAAkAAAH5+AABAAgAAQAIAAH5+AAACQAAAAkAAAAJAAAACQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////////////////////////////w////8P////D////w////8P///gAH//4AB//+AAf//gAH///w////8P////D////w////8P/////////////////////////////////////////////////8=), crosshair";
			case $.ig.SpreadsheetCursor.prototype.dragCopy: return isOldIE ? "move" : "url(data:application/cur;base64,AAACAAEAICAAABAACQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAFVQAACqqAAAQBAAAIAIAABAEAAAhggAAEYQAACMKAAATFAAABgAAAIYAAADMAAAA7AAAAPwAAAD/gAAA/wAAAP4AAAD8AAAA+cAAAPFAAADncAAAxBAAAIdwAAABQAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///AAf//wAH//8/5///P+f//znn//8w5///MOf//yGH//shB//5w///+MP///gH///4B///+AB///gA///4Af//+AP///gH///4CP//+Bj///ggP//4YD//+OA///n4////+P/////////////////////////////////////8=), copy";
			case $.ig.SpreadsheetCursor.prototype.dragMove: return "url(data:application/cur;base64,AAACAAEAICAAAA8ACgAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAYAAAAGAAAADAAAAIwAAADYAAAA+AAAAP8AAAL+AAAE/AAACPgAAA7wAAAA4AAAYMwAAKCKAAE8eQACBECAATx5AACjigAAYowAAAKAAAAO4AAACCAAAARAAAACgAAAAQAA/////////////////////////H////h////4f///8P///vD///5h///+If///gP///4AP//+AH///AD///gB///wA///8Af///4P//+eE///HjH//gIA//wCgH/+A4D//xxx//+cc////H////Af///wH///+D////x////+//8=), move";
			case $.ig.SpreadsheetCursor.prototype.dragSheet: return "url(data:application/cur;base64,AAACAAEAICAAAA8ACQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAIAAAAGAAAABAAAAIwAAADIAAAA+AAAAP8AAAD+AAAA/AAAAPgAAADwAAAe6AAAHtgAAB64AAAeeAAAHvgAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH8AAAB/QAAAfwAAAAAAA/////////////////////////P////x////4f///+P///vD///5x///+If///gP///4AP//+AH///gD///4B///+A///wAP//8AD///AA///wAP//8AD///AA///wAP//8AD///AA///wAP//8AD///AA///wAf//8AP///AH/8=), pointer";
			case $.ig.SpreadsheetCursor.prototype.hyperlink: return "pointer";
			case $.ig.SpreadsheetCursor.prototype.resizeColumn: return isOldIE ? "ne-resize" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAJAAAACQAAAAkAAAAJAAAAyTAAAUkoAAJ55AAEAAIABAACAAJ55AABSSgAAMkwAAAJAAAACQAAAAkAAAAJAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////////8P////D////w////8P////D///8wz//+MMf//AAD//gAAf/4AAH//AAD//4wx///MM////D////w////8P////D////w///////////////////////////////////////8=), ew-resize";
			case $.ig.SpreadsheetCursor.prototype.resizePaneColumnSplit:
			case $.ig.SpreadsheetCursor.prototype.tabItemSplit:
			case $.ig.SpreadsheetCursor.prototype.unhideColumn:
				return isOldIE ? "nw-resize" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+AAAAWgAAAFoAAABaAAAAWgAABlpgAApaUAAT28gAIBgEACAYBAAT28gAClpQAAZaYAAAWgAAAFoAAABaAAAAWgAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////////4H///+B////gf///4H///+B///5gZ//8YGP/+AAB//AAAP/wAAD/+AAB//xgY//+YGf//+B////gf///4H///+B////gf//////////////////////////////////////8=), col-resize";
			case $.ig.SpreadsheetCursor.prototype.resizePaneRowSplit:
			case $.ig.SpreadsheetCursor.prototype.unhideRow:
				return isOldIE ? "sw-resize" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAkAAAAQgAAAIEAAADnAAAAJAAAACQAAB/n+AAQAAgAH//4AB//+AAQAAgAH+f4AAAkAAAAJAAAAOcAAACBAAAAQgAAACQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////////////5////8P///+B////AP///wD////D////w///4AAH/+AAB//gAAf/4AAH/+AAB//gAAf//8P////D////AP///wD///+B////w////+f/////////////////////////////////8=), row-resize";
			case $.ig.SpreadsheetCursor.prototype.resizePaneSplitIntersection: return "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAJAAAAEIAAACBAAAA5wAAAyTAAAUkoAAJ55AAEAAIABAACAAJ55AABSSgAAMkwAAA5wAAAIEAAABCAAAAJAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////////+f////D////gf///wD///8A///8wz//+MMf//AAD//gAAf/4AAH//AAD//4wx///MM///8A////AP///4H////D////5///////////////////////////////////////8=), move";
			case $.ig.SpreadsheetCursor.prototype.resizeRow: return isOldIE ? "se-resize" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAJAAAAEIAAACBAAAA5wAAACQAAAAkAAAf5/gAEAAIABAACAAf5/gAACQAAAAkAAAA5wAAAIEAAABCAAAAJAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////////+f////D////gf///wD///8A////w////8P//+AAB//gAAf/4AAH/+AAB///w////8P///8A////AP///4H////D////5///////////////////////////////////////8=), ns-resize";
			case $.ig.SpreadsheetCursor.prototype.rotate: return isOldIE ? "pointer" : "url(data:application/cur;base64,AAACAAEAICAAAA8AEAAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAAAMGAAAEAQAACPiAAAkEgAASAkAAEgJAABICQAASA8AAEsJAAAmnwAAIlIAABA+AAAMIAAAAkAAAAKAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////////////B////AH///gA///wAH//8Ph//+H8P//h/D//4fw//+H8P//hPD//8Bg///AIf//4AH///Af///8P////H////z///////////////////////////////////////8=), grab";
			case $.ig.SpreadsheetCursor.prototype.rotating: return isOldIE ? "pointer" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAUAAAHZAAAGUMAACFAgABHZEAAzBZAAAILIACEASAASAEgADAB4AAAAAAAeADAAEgBIABIAhAASQQIACaDMAAiTiAAEChAAAwpgAACTgAAAoAAAAEAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////9////+P///iD///ggP//wIB//4CAP/8D4D//AfQf/wP+H/+H/h//z/4f//////+H/z//h/4f/4f8D/+G+Af/wHwP/8AwH//gED//8BB///wx///8f////v///////////////////////8=), grabbing";
			case $.ig.SpreadsheetCursor.prototype.selectColumn: return isOldIE ? "pointer" : "url(data:application/cur;base64,AAACAAEAICAAAA8AEAAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAoAAAARAAAAIIAAAEBAAABxwAAAEQAAABEAAAARAAAAEQAAABEAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////////////////////////////////////////////////////////////7////8f///+D////Af///gD///4A////g////4P///+D////g////4P///+D////////////////////////////8=), cell";
			case $.ig.SpreadsheetCursor.prototype.selectMode: return isOldIE ? "crosshair" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAPAAAADwAAAA8AAAD/8AAA//AAAP/wAAD/8AAADwAAAA8AAAAPAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////////////A////gP///4D///+A///8AA//+AAP//gAD//4AA//+AAP//gAD//4AB///4D///+A////gP///4H/////////////////////////////////////////////////8=), cell";
			case $.ig.SpreadsheetCursor.prototype.selectRow: return isOldIE ? "pointer" : "url(data:application/cur;base64,AAACAAEAICAAAA8ADwAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAgAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAKAAAD+QAAAgCAAAIAQAACAIAAA/kAAAAKAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////////////////////////////////8/////H///wA///8AH///AA///wAf//8AP////H////z/////////////////////////////////////////////////////////////8=), cell";
			default:
				$.ig.Debug.prototype.assert1(cursorType == $.ig.SpreadsheetCursor.prototype.arrow, "Unrecognized cursor:" + $.ig.SpreadsheetCursor.prototype.getBox(cursorType));
				return "help";
		}
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCursorHelper::GetCursorInfo(Infragistics.Controls.Grids.Core.SpreadsheetCursor)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCursorHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCursorHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.EditModeDataValidationException" />*/

$.ig.util.defType('EditModeDataValidationException', 'Error', {
	init: function () {
		$.ig.Error.prototype.init.call(this, 0);
	},
	$type: new $.ig.Type('EditModeDataValidationException', $.ig.Error.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.EditModeDataValidationException" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont" />*/

$.ig.util.defType('EditModeWorkbookFont', 'PropertyChangeNotifierExtended', {
	___isDirty: false,
	___font: null,
	___tempFont: null,
	___cellEditManager: null,
	init: function (cellEditManager) {
		this.___isDirty = true;
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(cellEditManager);
		this.___cellEditManager = cellEditManager;
		this.___font = new $.ig.EditModeWorkbookFontInfo();
		this.___tempFont = new $.ig.EditModeWorkbookFontInfo();
	},
	bold: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._bold$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._bold$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Bold()" />*/
	_bold$i: function (value) {
		if (arguments.length === 1) {
			this._setBold($.ig.util.nullableEquals(value, true));
			return value;
		} else {
			this._update();
			return this.___font._bold;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Bold()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.EditModeWorkbookFont::CellEditManager()" />*/
	_cellEditManager: function () {
		return this.___cellEditManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.EditModeWorkbookFont::CellEditManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.EditModeWorkbookFont::ColorInfo()" />*/
	colorInfo: function (value) {
		if (arguments.length === 1) {
			this._setColorInfo(value);
			return value;
		} else {
			this._update();
			return this.___font._colorInfo;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.EditModeWorkbookFont::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.EditModeWorkbookFont::DefaultFontName()" />*/
	_defaultFontName: function () {
		return $.ig.WorksheetCellFormatData.prototype._getDefaultValue($.ig.CellFormatValue.prototype.fontName);
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.EditModeWorkbookFont::DefaultFontName()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			this._setHeight(value);
			return value;
		} else {
			this._update();
			return this.___font._height;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Height()" />*/
	,
	italic: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._italic$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._italic$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Italic()" />*/
	_italic$i: function (value) {
		if (arguments.length === 1) {
			this._setItalic($.ig.util.nullableEquals(value, true));
			return value;
		} else {
			this._update();
			return this.___font._italic;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Italic()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this._setName(value);
			return value;
		} else {
			this._update();
			return this.___font._name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Name()" />*/
	,
	strikeout: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._strikeout$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._strikeout$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Strikeout()" />*/
	_strikeout$i: function (value) {
		if (arguments.length === 1) {
			this._setStrikeout($.ig.util.nullableEquals(value, true));
			return value;
		} else {
			this._update();
			return this.___font._strikeout;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Strikeout()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SuperscriptSubscriptStyle()" />*/
	superscriptSubscriptStyle: function (value) {
		if (arguments.length === 1) {
			if (value == $.ig.excel.FontSuperscriptSubscriptStyle.$default) {
				value = $.ig.excel.FontSuperscriptSubscriptStyle.none;
			}
			this._setSuperscriptSubscriptStyle(value);
			return value;
		} else {
			this._update();
			return this.___font._superscriptSubscriptStyle;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SuperscriptSubscriptStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.EditModeWorkbookFont::UnderlineStyle()" />*/
	underlineStyle: function (value) {
		if (arguments.length === 1) {
			if (value == $.ig.excel.FontUnderlineStyle.$default) {
				value = $.ig.excel.FontUnderlineStyle.none;
			}
			this._setUnderlineStyle(value);
			return value;
		} else {
			this._update();
			return this.___font._underlineStyle;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.EditModeWorkbookFont::UnderlineStyle()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	setFontFormatting: function (source) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Dirty(System.Boolean)" />*/
	_dirty: function (sendChangeNotification) {
		if (this.___isDirty == false) {
			this.___isDirty = true;
			if (sendChangeNotification) {
				this._sendChangeNotification();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Dirty(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SendChangeNotification()" />*/
	_sendChangeNotification: function () {
		this.onPropertyChanged(String.empty());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SendChangeNotification()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::GetCurrentFontInfo(Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo)" />*/
	_getCurrentFontInfo: function (fontInfo) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::GetCurrentFontInfo(Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetBold(System.Boolean)" />*/
	_setBold: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetBold(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetColorInfo(Infragistics.Documents.Excel.WorkbookColorInfo)" />*/
	_setColorInfo: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetColorInfo(Infragistics.Documents.Excel.WorkbookColorInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetHeight(System.Int32)" />*/
	_setHeight: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetHeight(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetItalic(System.Boolean)" />*/
	_setItalic: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetItalic(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetName(System.String)" />*/
	_setName: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetName(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetStrikeout(System.Boolean)" />*/
	_setStrikeout: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetStrikeout(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetSuperscriptSubscriptStyle(Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle)" />*/
	_setSuperscriptSubscriptStyle: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetSuperscriptSubscriptStyle(Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetUnderlineStyle(Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	_setUnderlineStyle: function (value) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::SetUnderlineStyle(Infragistics.Documents.Excel.FontUnderlineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Update()" />*/
	_update: function () {
		if (this.___isDirty) {
			this.___isDirty = false;
			this._updateImpl();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::Update()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::UpdateImpl()" />*/
	_updateImpl: function () {
		this._getCurrentFontInfo(this.___tempFont);
		var propertyNotification = this.___font.initializeFrom(this.___tempFont);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFont::UpdateImpl()" />*/
	,
	$type: new $.ig.Type('EditModeWorkbookFont', $.ig.PropertyChangeNotifierExtended.prototype.$type, [$.ig.excel.IWorkbookFont.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont`1" />*/

$.ig.util.defType('EditModeWorkbookFont$1', 'EditModeWorkbookFont', {
	$tEditor: null,
	init: function ($tEditor, cellEditManager) {
		this.$tEditor = $tEditor;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tEditor);
		}
		$.ig.EditModeWorkbookFont.prototype.init.call(this, cellEditManager);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.EditModeWorkbookFont`1::CellEditManager()" />*/
	_cellEditManager: function () {
		return $.ig.EditModeWorkbookFont.prototype._cellEditManager.call(this);
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager Infragistics.Controls.Grids.Core.EditModeWorkbookFont`1::CellEditManager()" />*/
	,
	$type: new $.ig.Type('EditModeWorkbookFont$1', $.ig.EditModeWorkbookFont.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFont`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo" />*/

$.ig.util.defType('EditModeWorkbookFontInfo', 'Object', {
	init: function () {
		this._bold = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this._italic = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this._strikeout = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		$.ig.Object.prototype.init.call(this);
	},
	_bold: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	_colorInfo: null,
	_height: 0,
	_italic: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	_name: null,
	_strikeout: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	_superscriptSubscriptStyle: 0,
	_underlineStyle: 0,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo::InitializeFrom(Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo)" />*/
	initializeFrom: function (other) {
		var propertyNotification = null;
		var $ret = this.setMemberImpl$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), this._bold, other._bold, "Bold", propertyNotification);
		this._bold = $ret.p0;
		propertyNotification = $ret.p3;
		var $ret1 = this.setMemberImpl$1($.ig.excel.WorkbookColorInfo.prototype.$type, this._colorInfo, other._colorInfo, "ColorInfo", propertyNotification);
		this._colorInfo = $ret1.p0;
		propertyNotification = $ret1.p3;
		var $ret2 = this.setMemberImpl$1($.ig.Number.prototype.$type, this._height, other._height, "Height", propertyNotification);
		this._height = $ret2.p0;
		propertyNotification = $ret2.p3;
		var $ret3 = this.setMemberImpl$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), this._italic, other._italic, "Italic", propertyNotification);
		this._italic = $ret3.p0;
		propertyNotification = $ret3.p3;
		var $ret4 = this.setMemberImpl$1(String, this._name, other._name, "Name", propertyNotification);
		this._name = $ret4.p0;
		propertyNotification = $ret4.p3;
		var $ret5 = this.setMemberImpl$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), this._strikeout, other._strikeout, "Strikeout", propertyNotification);
		this._strikeout = $ret5.p0;
		propertyNotification = $ret5.p3;
		var $ret6 = this.setMemberImpl$1($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, this._superscriptSubscriptStyle, other._superscriptSubscriptStyle, "SuperscriptSubscriptStyle", propertyNotification);
		this._superscriptSubscriptStyle = $ret6.p0;
		propertyNotification = $ret6.p3;
		var $ret7 = this.setMemberImpl$1($.ig.excel.FontUnderlineStyle.prototype.$type, this._underlineStyle, other._underlineStyle, "UnderlineStyle", propertyNotification);
		this._underlineStyle = $ret7.p0;
		propertyNotification = $ret7.p3;
		return propertyNotification;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo::InitializeFrom(Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo::Reset()" />*/
	reset: function () {
		this._bold = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
		this._colorInfo = $.ig.excel.WorkbookColorInfo.prototype.automatic();
		this._height = $.ig.util.getValue($.ig.WorksheetCellFormatData.prototype._getDefaultValue($.ig.CellFormatValue.prototype.fontHeight));
		this._italic = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
		this._name = $.ig.WorksheetCellFormatData.prototype._getDefaultValue($.ig.CellFormatValue.prototype.fontName);
		this._strikeout = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
		this._superscriptSubscriptStyle = $.ig.excel.FontSuperscriptSubscriptStyle.none;
		this._underlineStyle = $.ig.excel.FontUnderlineStyle.none;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo::Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo::SetMemberImpl`1(Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo.T, Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo.T, System.String, System.String)" />*/
	setMemberImpl$1: function ($t, member, newValue, propertyName, propertyForChangeNotification) {
		if (!$.ig.EqualityComparer$1.prototype.defaultEqualityComparerValue($t).equalsC(member, newValue)) {
			member = newValue;
			if (propertyForChangeNotification == null) {
				propertyForChangeNotification = propertyName;
			} else {
				propertyForChangeNotification = String.empty();
			}
		}
		return {
			p0: member,
			p3: propertyForChangeNotification
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo::SetMemberImpl`1(Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo.T, Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo.T, System.String, System.String)" />*/
	,
	$type: new $.ig.Type('EditModeWorkbookFontInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.EditModeWorkbookFontInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue" />*/

$.ig.util.defType('ISpreadsheetEditorValue', 'Object', {
	$type: new $.ig.Type('ISpreadsheetEditorValue', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo" />*/

$.ig.util.defType('ISpreadsheetEditInfo', 'Object', {
	$type: new $.ig.Type('ISpreadsheetEditInfo', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation" />*/

$.ig.util.defType('LockedEditRangeInfoForOperation', 'Object', {
	__worksheetInfos: null,
	__readOnlyWorksheetInfos: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.__worksheetInfos = new $.ig.List$1($.ig.LockedEditRangeInfoForWorksheet.prototype.$type, 0);
		this.__readOnlyWorksheetInfos = new $.ig.ReadOnlyCollection$1($.ig.LockedEditRangeInfoForWorksheet.prototype.$type, 1, this.__worksheetInfos);
	},
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::WorksheetInfos()" />*/
	worksheetInfos: function () {
		return this.__worksheetInfos;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::WorksheetInfos()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::CanPerformOperation()" />*/
	canPerformOperation: function () {
		var en = this.__worksheetInfos.getEnumerator();
		while (en.moveNext()) {
			var info = en.current();
			if (info.hasUneditableCells()) {
				return false;
			}
			if (info.primaryLockedRanges() != null && $.ig.Enumerable.prototype.firstOrDefault$1($.ig.excel.WorksheetProtectedRange.prototype.$type, info.primaryLockedRanges()) == null) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::CanPerformOperation()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::GetRangesToUnlock(System.Boolean)" />*/
	getRangesToUnlock: function (primaryOnly) {
		var rangesToUnlock = new $.ig.List$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
		var en = this.worksheetInfos().getEnumerator();
		while (en.moveNext()) {
			var wsInfo = en.current();
			var rangesToUnlockInWs = primaryOnly ? wsInfo.primaryLockedRanges() : wsInfo.allRanges();
			if (rangesToUnlockInWs != null) {
				var en1 = rangesToUnlockInWs.getEnumerator();
				while (en1.moveNext()) {
					var range = en1.current();
					if (range.isProtected()) {
						rangesToUnlock.add(range);
					}
				}
			}
		}
		return rangesToUnlock;
	}
	/*<EndMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::GetRangesToUnlock(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::GetWorksheetInfo(Infragistics.Documents.Excel.Worksheet)" />*/
	getWorksheetInfo: function (ws) {
		var en = this.__worksheetInfos.getEnumerator();
		while (en.moveNext()) {
			var info = en.current();
			if (info._worksheet == ws) {
				return info;
			}
		}
		var newInfo = new $.ig.LockedEditRangeInfoForWorksheet(this, ws);
		this.__worksheetInfos.add(newInfo);
		return newInfo;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation::GetWorksheetInfo(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	$type: new $.ig.Type('LockedEditRangeInfoForOperation', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet" />*/

$.ig.util.defType('LockedEditRangeInfoForWorksheet', 'Object', {
	__operationInfo: null,
	_worksheet: null,
	__allRanges: null,
	__primaryRanges: null,
	__hasUneditableCells: false,
	init: function (operationInfo, worksheet) {
		$.ig.Object.prototype.init.call(this);
		this.__operationInfo = operationInfo;
		this._worksheet = worksheet;
		this.__allRanges = new $.ig.HashSet$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
	},
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::AllRanges()" />*/
	allRanges: function () {
		return this.__allRanges;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::AllRanges()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::HasUneditableCells()" />*/
	hasUneditableCells: function () {
		return this.__hasUneditableCells;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::HasUneditableCells()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::PrimaryLockedRanges()" />*/
	primaryLockedRanges: function () {
		return this.__primaryRanges;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::PrimaryLockedRanges()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::AddRanges(System.Collections.Generic.IList)" />*/
	addRanges: function (ranges) {
		if (ranges != null) {
			var en = ranges.getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				$.ig.Debug.prototype.assert(range.worksheet() == this._worksheet);
				this.__allRanges.add(range);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::AddRanges(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::HitLockedCell()" />*/
	hitLockedCell: function () {
		this.__hasUneditableCells = true;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::HitLockedCell()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::HitUnlockableCell(System.Int32, System.Int32)" />*/
	hitUnlockableCell: function (row, column) {
		var columnIndex = column;
		if (this.__primaryRanges == null) {
			this.__primaryRanges = new $.ig.List$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
			var en = this.__allRanges.getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				if (range.isProtected() == false) {
					continue;
				}
				var en1 = range.ranges().getEnumerator();
				while (en1.moveNext()) {
					var cellRange = en1.current();
					if (cellRange._address()._contains2(row, columnIndex)) {
						this.__primaryRanges.add(range);
						break;
					}
				}
			}
		}
		if (this.__primaryRanges.count() > 0) {
			for (var i = this.__primaryRanges.count() - 1; i >= 0; i--) {
				var isInRange = false;
				var en2 = this.__primaryRanges.__inner[i].ranges().getEnumerator();
				while (en2.moveNext()) {
					var cellRange1 = en2.current();
					if (cellRange1._address()._contains2(row, columnIndex)) {
						isInRange = true;
						break;
					}
				}
				if (isInRange == false) {
					this.__primaryRanges.removeAt(i);
				}
			}
		}
		return this.__primaryRanges.count() > 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet::HitUnlockableCell(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('LockedEditRangeInfoForWorksheet', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange" />*/

$.ig.util.defType('LockedEditRangeInfoForCellRange', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::AddUnallocatedRowBlock(System.Int32, System.Int32)" />*/
	addUnallocatedRowBlock: function (startRow, endRow) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::AddUnallocatedRowBlock(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::CanUnlock(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	canUnlock: function (row, startColumn, endColumn) {
		var rowIndex = row.index();
		for (var i = startColumn; i <= endColumn; i++) {
			if (!this.canUnlockCell(rowIndex, i)) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::CanUnlock(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::CanUnlockCell(System.Int32, System.Int32)" />*/
	canUnlockCell: function (row, column) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::CanUnlockCell(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::CanUnlockColumnBlock(System.Int32, System.Int32)" />*/
	canUnlockColumnBlock: function (startColumn, endColumn) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::CanUnlockColumnBlock(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::Create(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet, System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	create: function (worksheetInfo, startRow, startColumn, endRow, endColumn) {
		if (worksheetInfo != null && worksheetInfo._worksheet.protection().allowedEditRanges().count() > 0) {
			var cellRange = new $.ig.spreadsheet.SpreadsheetCellRange(startRow, startColumn, endRow, endColumn);
			var lockedRanges = new $.ig.List$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
			var unlockedRanges = new $.ig.List$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
			var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(cellRange);
			var en = worksheetInfo._worksheet.protection().allowedEditRanges().getEnumerator();
			while (en.moveNext()) {
				var editRange = en.current();
				var en1 = editRange.ranges().getEnumerator();
				while (en1.moveNext()) {
					var editCellRange = en1.current();
					if (editCellRange._address()._intersectsWith(excelRange)) {
						var target = editRange.isProtected() && editRange.hasPassword() ? lockedRanges : unlockedRanges;
						target.add(editRange);
						break;
					}
				}
			}
			if (unlockedRanges.count() > 0 || lockedRanges.count() > 0) {
				var rangeInfo = new $.ig.LockedEditRangeInfoForCellRange_WithRanges(worksheetInfo, lockedRanges, unlockedRanges);
				return rangeInfo;
			}
		}
		return worksheetInfo == null ? $.ig.LockedEditRangeInfoForCellRange_WithoutRanges.prototype.empty : new $.ig.LockedEditRangeInfoForCellRange_WithoutRanges(worksheetInfo);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::Create(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet, System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::IsUnlocked(System.Int32, System.Int32)" />*/
	isUnlocked: function (row, column) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange::IsUnlocked(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('LockedEditRangeInfoForCellRange', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges" />*/

$.ig.util.defType('LockedEditRangeInfoForCellRange_WithRanges', 'LockedEditRangeInfoForCellRange', {
	__lockedRanges: null,
	__unlockedRanges: null,
	__lockedRangeInfo: null,
	__unallocatedRowBlocks: null,
	init: function (lockedRangeInfo, lockedRanges, unlockedRanges) {
		$.ig.LockedEditRangeInfoForCellRange.prototype.init.call(this);
		lockedRangeInfo.addRanges(lockedRanges);
		lockedRangeInfo.addRanges(unlockedRanges);
		this.__lockedRangeInfo = lockedRangeInfo;
		this.__unlockedRanges = $.ig.LockedEditRangeInfoForCellRange_WithRanges.prototype.createList(unlockedRanges);
		this.__lockedRanges = $.ig.LockedEditRangeInfoForCellRange_WithRanges.prototype.createList(lockedRanges);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::AddUnallocatedRowBlock(System.Int32, System.Int32)" />*/
	addUnallocatedRowBlock: function (startRow, endRow) {
		if (this.__unallocatedRowBlocks == null) {
			this.__unallocatedRowBlocks = new $.ig.List$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), 0);
		}
		this.__unallocatedRowBlocks.add(new $.ig.Range$1($.ig.Number.prototype.$type, 1, startRow, endRow));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::AddUnallocatedRowBlock(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::CanUnlockCell(System.Int32, System.Int32)" />*/
	canUnlockCell: function (row, column) {
		if (this.__unlockedRanges != null) {
			var en = this.__unlockedRanges.getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				if (range._contains2(row, column)) {
					return true;
				}
			}
		}
		if (this.__lockedRanges != null) {
			var en1 = this.__lockedRanges.getEnumerator();
			while (en1.moveNext()) {
				var range1 = en1.current();
				if (range1._contains2(row, column)) {
					return this.__lockedRangeInfo.hitUnlockableCell(row, column);
				}
			}
		}
		this.__lockedRangeInfo.hitLockedCell();
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::CanUnlockCell(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::CanUnlockColumnBlock(System.Int32, System.Int32)" />*/
	canUnlockColumnBlock: function (startColumn, endColumn) {
		if (this.__unallocatedRowBlocks != null) {
			var en = this.__unallocatedRowBlocks.getEnumerator();
			while (en.moveNext()) {
				var unallocatedRowBlock = en.current();
				for (var r = unallocatedRowBlock.__start; r <= unallocatedRowBlock.__end; r++) {
					for (var c = startColumn; c <= endColumn; c++) {
						if (!this.canUnlockCell(r, c)) {
							return false;
						}
					}
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::CanUnlockColumnBlock(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::CreateList(System.Collections.Generic.List)" />*/
	createList: function (editRanges) {
		if (editRanges != null && editRanges.count() != 0) {
			var newRanges = new $.ig.List$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, 0);
			var en = editRanges.getEnumerator();
			while (en.moveNext()) {
				var editRange = en.current();
				var en1 = editRange.ranges().getEnumerator();
				while (en1.moveNext()) {
					var editCellRange = en1.current();
					newRanges.add($.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(editCellRange._address()));
				}
			}
			for (var i = newRanges.count() - 1; i >= 1; i--) {
				var thisRange = newRanges.__inner[i];
				for (var j = i - 1; j >= 0; j--) {
					var nextRange = newRanges.__inner[j];
					if (nextRange._contains1(thisRange) || $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(nextRange, thisRange)) {
						newRanges.removeAt(i);
						break;
					} else if (thisRange._contains1(nextRange)) {
						newRanges.removeAt(j);
						i--;
					}
				}
			}
			if (newRanges.count() > 0) {
				return newRanges;
			}
		}
		return null;
	}
	/*<EndMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::CreateList(System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::IsUnlocked(System.Int32, System.Int32)" />*/
	isUnlocked: function (row, column) {
		if (this.__unlockedRanges != null) {
			var en = this.__unlockedRanges.getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				if (range._contains2(row, column)) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges::IsUnlocked(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('LockedEditRangeInfoForCellRange_WithRanges', $.ig.LockedEditRangeInfoForCellRange.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithRanges" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges" />*/

$.ig.util.defType('LockedEditRangeInfoForCellRange_WithoutRanges', 'LockedEditRangeInfoForCellRange', {
	__lockedRangeInfo: null,
	init: function (lockedRangeInfo) {
		$.ig.LockedEditRangeInfoForCellRange.prototype.init.call(this);
		this.__lockedRangeInfo = lockedRangeInfo;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges::CanUnlockCell(System.Int32, System.Int32)" />*/
	canUnlockCell: function (row, column) {
		if (this.__lockedRangeInfo != null) {
			this.__lockedRangeInfo.hitLockedCell();
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges::CanUnlockCell(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges::CanUnlockColumnBlock(System.Int32, System.Int32)" />*/
	canUnlockColumnBlock: function (startColumn, endColumn) {
		if (this.__lockedRangeInfo != null) {
			this.__lockedRangeInfo.hitLockedCell();
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges::CanUnlockColumnBlock(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges::CanUnlock(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	canUnlock: function (row, startColumn, endColumn) {
		if (this.__lockedRangeInfo != null) {
			this.__lockedRangeInfo.hitLockedCell();
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges::CanUnlock(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('LockedEditRangeInfoForCellRange_WithoutRanges', $.ig.LockedEditRangeInfoForCellRange.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditHelper" />*/

$.ig.util.defType('SpreadsheetEditHelper', 'Object', {
	__isFixedDecimalEnabled: false,
	__fixedDecimalPlaceCount: 0,
	__sheetManager: null,
	__editPane: null,
	__workbook: null,
	__editWorksheets: null,
	__editCell: null,
	__promptCallback: null,
	__executeInUndo: null,
	init: function (sheetManager, editPane, editCell, isFixedDecimalPlaceEnabled, fixedDecimalPlaceCount, promptCallback, executeInUndo) {
		this.__editCell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(sheetManager, "sheetManager");
		$.ig.CoreUtilities.prototype.validateNotNull1(editPane, "editPane");
		$.ig.CoreUtilities.prototype.validateNotNull1(promptCallback, "promptCallback");
		$.ig.CoreUtilities.prototype.validateNotNull1(executeInUndo, "executeInUndo");
		this.__sheetManager = sheetManager;
		this.__editPane = editPane;
		this.__editWorksheets = $.ig.Enumerable.prototype.toArray$1($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.excel.Worksheet.prototype.$type, this.__sheetManager._tabManager()._selectedTabs(), function (t) { return t._worksheet(); }));
		this.__editCell = editCell;
		this.__workbook = sheetManager._worksheet().workbook();
		this.__promptCallback = promptCallback;
		this.__isFixedDecimalEnabled = isFixedDecimalPlaceEnabled;
		this.__fixedDecimalPlaceCount = fixedDecimalPlaceCount;
		this.__executeInUndo = executeInUndo;
	},
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetNewValue(Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo, Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue, System.Boolean, System.Boolean, System.Int32)" />*/
	getNewValue: function (info, value, createArrayFormula, useTextForInvalidFormulas, preferredFormatIndex) {
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		var text = value.unformattedText();
		var workbook = info.workbook();
		var culture = workbook._cultureResolved();
		var formatString = value.editCellFormat()._formatStringResolved();
		var formatParser = new $.ig.ValueFormatter(1, formatString, culture);
		var hasNonTextSections = false;
		if (formatParser.isValid()) {
			for (var i = 0; i < 4; i++) {
				if (formatParser.isNonTextSection(i)) {
					hasNonTextSections = true;
					break;
				}
			}
		}
		var isGeneralFormat = $.ig.WorksheetCellBlock.prototype.isGeneralFormat(formatString);
		if (String.isNullOrEmpty(text)) {
			return {
				ret: null,
				p4: preferredFormatIndex
			};
		} else if (String.isNullOrWhiteSpace(text) || (hasNonTextSections == false && isGeneralFormat == false)) {
		} else if (text.length > 1 && text.startsWith("=")) {
			var formulaResult = $.ig.SpreadsheetEditHelper.prototype.getFormula(info, createArrayFormula, text, culture, true);
			if ($.ig.util.cast($.ig.excel.Formula.prototype.$type, formulaResult) !== null || useTextForInvalidFormulas == false) {
				return {
					ret: formulaResult,
					p4: preferredFormatIndex
				};
			}
		} else if (text.indexOf('\r') >= 0 || text.indexOf('\n') >= 0) {
		} else if ($.ig.util.stringCompare1("true", text, $.ig.StringComparison.prototype.invariantCultureIgnoreCase) == 0) {
			return {
				ret: $.ig.SpreadsheetEditHelper.prototype.trueBox,
				p4: preferredFormatIndex
			};
		} else if ($.ig.util.stringCompare1("false", text, $.ig.StringComparison.prototype.invariantCultureIgnoreCase) == 0) {
			return {
				ret: $.ig.SpreadsheetEditHelper.prototype.falseBox,
				p4: preferredFormatIndex
			};
		} else {
			if (text.startsWith("#")) {
				var error = $.ig.FormulaParser.prototype.parseError(text, culture);
				if (error != null) {
					if ($.ig.excel.ErrorValue.prototype.circularity() != error) {
						return {
							ret: error,
							p4: preferredFormatIndex
						};
					}
					return {
						ret: value,
						p4: preferredFormatIndex
					};
				}
			}
			var numericValue;
			var dateOrTimeSpan;
			var skipRemainingParseAttempts = false;
			if (isGeneralFormat) {
				if (!skipRemainingParseAttempts && (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseFraction(text, true, culture, numericValue, preferredFormatIndex, skipRemainingParseAttempts); numericValue = $ret.p3; preferredFormatIndex = $ret.p4; skipRemainingParseAttempts = $ret.p5; return $ret.ret; }())) {
					return {
						ret: numericValue,
						p4: preferredFormatIndex
					};
				}
				if (!skipRemainingParseAttempts && (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseDate(text, workbook, culture, dateOrTimeSpan, preferredFormatIndex); dateOrTimeSpan = $ret.p3; preferredFormatIndex = $ret.p4; return $ret.ret; }())) {
					return {
						ret: dateOrTimeSpan,
						p4: preferredFormatIndex
					};
				}
			} else {
				if (!skipRemainingParseAttempts && (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseFraction(text, false, culture, numericValue, preferredFormatIndex, skipRemainingParseAttempts); numericValue = $ret.p3; preferredFormatIndex = $ret.p4; skipRemainingParseAttempts = $ret.p5; return $ret.ret; }())) {
					return {
						ret: numericValue,
						p4: preferredFormatIndex
					};
				}
				if (!skipRemainingParseAttempts && (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseDate(text, workbook, culture, dateOrTimeSpan, preferredFormatIndex); dateOrTimeSpan = $ret.p3; preferredFormatIndex = $ret.p4; return $ret.ret; }())) {
					return {
						ret: dateOrTimeSpan,
						p4: preferredFormatIndex
					};
				}
			}
			var timeSpan = new $.ig.Number();
			if (!skipRemainingParseAttempts && (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseTimeSpan(text, culture, timeSpan, preferredFormatIndex); timeSpan = $ret.p2; preferredFormatIndex = $ret.p3; return $ret.ret; }())) {
				return {
					ret: $.ig.excel.ExcelCalcValue.prototype._timeOfDayToExcelDate(timeSpan, true),
					p4: preferredFormatIndex
				};
			}
			if (!skipRemainingParseAttempts) {
				if ((function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParsePercent(text, culture, numericValue, preferredFormatIndex); numericValue = $ret.p2; preferredFormatIndex = $ret.p3; return $ret.ret; }())) {
					return {
						ret: numericValue,
						p4: preferredFormatIndex
					};
				}
				if ((function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseExponent(text, culture, numericValue, preferredFormatIndex); numericValue = $ret.p2; preferredFormatIndex = $ret.p3; return $ret.ret; }())) {
					return {
						ret: numericValue,
						p4: preferredFormatIndex
					};
				}
				if ((function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseCurrency(text, culture, numericValue, preferredFormatIndex, skipRemainingParseAttempts); numericValue = $ret.p2; preferredFormatIndex = $ret.p3; skipRemainingParseAttempts = $ret.p4; return $ret.ret; }())) {
					return {
						ret: numericValue,
						p4: preferredFormatIndex
					};
				}
				var decimalPlaceCount = info.isFixedDecimalEnabled() ? info.fixedDecimalPlaceCount() : 0;
				if (!skipRemainingParseAttempts && (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.tryParseNumber(text, culture, decimalPlaceCount, numericValue, preferredFormatIndex); numericValue = $ret.p3; preferredFormatIndex = $ret.p4; return $ret.ret; }())) {
					return {
						ret: numericValue,
						p4: preferredFormatIndex
					};
				}
			}
			if (text.length > 1 && (text.startsWith("-") || text.startsWith("+"))) {
				var formulaResult1 = $.ig.SpreadsheetEditHelper.prototype.getFormula(info, createArrayFormula, "=" + text, culture, true);
				if ($.ig.util.cast($.ig.excel.Formula.prototype.$type, formulaResult1) !== null || useTextForInvalidFormulas == false) {
					return {
						ret: formulaResult1,
						p4: preferredFormatIndex
					};
				}
			}
		}
		return {
			ret: value,
			p4: preferredFormatIndex
		};
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetNewValue(Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo, Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue, System.Boolean, System.Boolean, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateCells(Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction, Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue, System.Boolean, System.String, System.Boolean)" />*/
	updateCells: function (exitAction, editValue, canStayInEditMode, unformattedText, wasVisitedHyperlinkCell) {
		var $self = this;
		$.ig.Debug.prototype.assert(exitAction != $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges);
		if (exitAction == $.ig.SpreadsheetCellExitModeAction.prototype.discardChanges) {
			return $.ig.SpreadsheetOperationResult.prototype.error;
		}
		var newFormatIndex;
		var newValue = (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.getNewValue($self, editValue, exitAction == $.ig.SpreadsheetCellExitModeAction.prototype.createArrayFormula, false, newFormatIndex); newFormatIndex = $ret.p4; return $ret.ret; }());
		if (newValue == editValue) {
			newValue = $.ig.SpreadsheetEditHelper.prototype.getTextValue(editValue, this.__workbook, wasVisitedHyperlinkCell);
		}
		var editCellFormat = editValue.editCellFormat();
		var cell = this.__editCell;
		if ($.ig.util.cast($.ig.SpreadsheetUserPromptInfo.prototype.$type, newValue) !== null) {
			var promptInfo = $.ig.util.cast($.ig.SpreadsheetUserPromptInfo.prototype.$type, newValue);
			$.ig.Debug.prototype.assert(!promptInfo.allowCancel());
			this.__promptCallback(promptInfo);
			return $.ig.SpreadsheetOperationResult.prototype.cancelled;
		}
		var selection = this.__editPane._activeSelection();
		var sheetManager = this.__sheetManager;
		var selectionCellRanges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
		var targetRangesForUndoInfo = selectionCellRanges;
		var result;
		var hasProtectedSheets = $.ig.util.nullableNotEquals(sheetManager._areSelectedTabsProtected(), false);
		var lockedOperationInfo = hasProtectedSheets ? new $.ig.LockedEditRangeInfoForOperation() : null;
		var blockingValuesToClear = new $.ig.HashSet$1($.ig.IRegionBlockingValue.prototype.$type, 0);
		if ($.ig.util.cast($.ig.excel.ArrayFormula.prototype.$type, newValue) !== null) {
			var range = selection._getActiveCellRange();
			var formula = $.ig.util.cast($.ig.excel.ArrayFormula.prototype.$type, newValue);
			var regionList = new $.ig.List$1($.ig.excel.WorksheetRegion.prototype.$type, 0);
			if (sheetManager._canCreateArrayFormula(range) == false) {
				result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
			} else {
				if (lockedOperationInfo != null && !(function () { var $ret = sheetManager._verifyCanEditInactiveSelectedTabs(lockedOperationInfo, [ range ], canStayInEditMode, result); result = $ret.p3; return $ret.ret; }())) {
					return result;
				}
				var en = sheetManager._tabManager()._selectedTabs().getEnumerator();
				while (en.moveNext()) {
					var tab = en.current();
					regionList.add(tab._worksheet()._getCachedRegion1(range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn()));
				}
				result = this.verifyBlockedRegionInExitEditMode(regionList.toArray(), canStayInEditMode, blockingValuesToClear);
			}
			if (result == $.ig.SpreadsheetOperationResult.prototype.success) {
				result = this.verifyTargetRangesInExitEditMode([ range ]);
			}
			if (result != $.ig.SpreadsheetOperationResult.prototype.success) {
				return result;
			}
			var tempBool = false;
			var $ret = this.removeBlockingRegionsInExitEditMode(lockedOperationInfo, blockingValuesToClear, tempBool);
			tempBool = $ret.p2;
			return this.updateCellsImpl(targetRangesForUndoInfo, unformattedText, function () {
				for (var i = 0; i < regionList.count(); i++) {
					var f = i == 0 ? formula : formula._clone();
					f._applyTo3(regionList.__inner[i]);
				}
				return $.ig.SpreadsheetOperationResult.prototype.success;
			});
		}
		var isSingleCell = exitAction == $.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell;
		var targetRanges;
		switch (exitAction) {
			case $.ig.SpreadsheetCellExitModeAction.prototype.createArrayFormula:
				targetRanges = [ selection._getActiveCellRange() ];
				break;
			case $.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell:
				targetRanges = [ new $.ig.spreadsheet.SpreadsheetCellRange(cell.row(), cell.column()) ];
				break;
			default:
				targetRanges = selectionCellRanges;
				break;
		}
		if (lockedOperationInfo != null && !(function () { var $ret = sheetManager._verifyCanEditInactiveSelectedTabs(lockedOperationInfo, targetRanges, canStayInEditMode, result); result = $ret.p3; return $ret.ret; }())) {
			return result;
		}
		result = this.verifyTargetRangesInExitEditMode(targetRanges);
		if (result != $.ig.SpreadsheetOperationResult.prototype.success) {
			return result;
		}
		$.ig.Debug.prototype.assert1(isSingleCell || $.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality(selection.activeCell(), cell), "We may not want to use the selection state if the active cell has changed.");
		if (newValue == null) {
			var clearContentAction = function () {
				return sheetManager._clearCellContents($.ig.spreadsheet.SpreadsheetUserPromptTrigger.editError, canStayInEditMode, targetRanges, lockedOperationInfo);
			};
			return this.__executeInUndo($.ig.SpreadsheetTransactionOperation.prototype.editCell, clearContentAction, String.empty(), targetRangesForUndoInfo);
		}
		var allRegionsList = new $.ig.List$1($.ig.excel.WorksheetRegion.prototype.$type, 0);
		var regionsByWorksheet = new $.ig.Dictionary$2($.ig.excel.Worksheet.prototype.$type, Array, 0);
		var en1 = sheetManager._tabManager()._selectedTabs().getEnumerator();
		while (en1.moveNext()) {
			var tab1 = en1.current();
			allRegionsList.addRange(regionsByWorksheet.item(tab1._worksheet(), $.ig.SpreadsheetUtilities.prototype.getWorksheetRegions(tab1._worksheet(), targetRanges)));
		}
		var allRegions = allRegionsList.toArray();
		result = this.verifyBlockedRegionInExitEditMode($.ig.Enumerable.prototype.toArray$1($.ig.excel.WorksheetRegion.prototype.$type, allRegions), canStayInEditMode, blockingValuesToClear);
		if (result != $.ig.SpreadsheetOperationResult.prototype.success) {
			return result;
		}
		var hasTriedToModifyLockedCell = false;
		if ($.ig.util.cast($.ig.excel.Formula.prototype.$type, newValue) !== null) {
			var $ret1 = this.removeBlockingRegionsInExitEditMode(lockedOperationInfo, blockingValuesToClear, hasTriedToModifyLockedCell);
			hasTriedToModifyLockedCell = $ret1.p2;
			var formula1 = $.ig.util.cast($.ig.excel.Formula.prototype.$type, newValue);
			var columnIndex = cell.column();
			result = this.updateCellsImpl(targetRangesForUndoInfo, unformattedText, function () {
				var en = regionsByWorksheet.getEnumerator();
				while (en.moveNext()) {
					var pair = en.current();
					var ws = pair.key();
					var row = ws.rows().item(cell.row());
					var applyToRegions = exitAction == $.ig.SpreadsheetCellExitModeAction.prototype.updateSelectedCells;
					if (lockedOperationInfo != null && ws.isProtected() && ws == sheetManager._worksheet()) {
						var $t = pair.value();
						for (var i = 0; i < $t.length; i++) {
							var region = $t[i];
							var lockedOperationInfoForWs = lockedOperationInfo.getWorksheetInfo(ws);
							var regionAddress = region._address();
							if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(ws, regionAddress._firstRowIndex(), regionAddress._firstColumnIndex(), regionAddress._lastRowIndex(), regionAddress._lastColumnIndex(), lockedOperationInfoForWs)) {
								$.ig.SpreadsheetEditHelper.prototype.applyFormula(formula1, applyToRegions ? [ region ] : null, row, columnIndex);
							} else {
								hasTriedToModifyLockedCell = true;
								var editRangeInfo = $.ig.LockedEditRangeInfoForCellRange.prototype.create(lockedOperationInfoForWs, regionAddress._firstRowIndex(), regionAddress._firstColumnIndex(), regionAddress._lastRowIndex(), regionAddress._lastColumnIndex());
								var en1 = $.ig.SpreadsheetPaneManager.prototype._getAllCells(pair.key(), [ $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(regionAddress) ], null).getEnumerator();
								while (en1.moveNext()) {
									var tempCell = en1.current();
									var tempRow = ws.rows().item(tempCell.row());
									var format = ws._getCellFormatElementReadOnly(tempRow, tempCell.column());
									if ($.ig.util.nullableEquals(format._lockedResolved(), false) || editRangeInfo.isUnlocked(tempCell.row(), tempCell.column())) {
										$.ig.SpreadsheetEditHelper.prototype.applyFormula1(formula1, tempRow, tempCell.column(), row, columnIndex);
									}
								}
							}
						}
					} else {
						$.ig.SpreadsheetEditHelper.prototype.applyFormula(formula1, applyToRegions ? pair.value() : null, row, columnIndex);
					}
				}
				return $.ig.SpreadsheetOperationResult.prototype.success;
			});
			if (result == $.ig.SpreadsheetOperationResult.prototype.success && hasTriedToModifyLockedCell) {
				this.__promptCallback(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			}
			return result;
		}
		try {
			$.ig.WorksheetCellBlock.prototype.verifyDirectSetValue(newValue);
			$.ig.WorksheetCellBlock.prototype.verifyStringLength(newValue);
		}
		catch (ex) {
			var prompt = new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.editError, null, ex, null, canStayInEditMode);
			if (this.__promptCallback(prompt) == false) {
				return $.ig.SpreadsheetOperationResult.prototype.cancelled;
			}
			return $.ig.SpreadsheetOperationResult.prototype.error;
		}
		var $ret2 = this.removeBlockingRegionsInExitEditMode(lockedOperationInfo, blockingValuesToClear, hasTriedToModifyLockedCell);
		hasTriedToModifyLockedCell = $ret2.p2;
		var worksheetForHyperlink = null;
		if (sheetManager._tabManager()._selectedTabs().count() == 1) {
			var firstWs = sheetManager._tabManager()._selectedTabs().item(0)._worksheet();
			if (firstWs.isProtected() == false || firstWs.protection().allowInsertingHyperlinks()) {
				worksheetForHyperlink = firstWs;
			}
		}
		result = this.updateCellsImpl(targetRangesForUndoInfo, unformattedText, function () {
			var en = sheetManager._tabManager()._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				var ws = tab._worksheet();
				if (exitAction == $.ig.SpreadsheetCellExitModeAction.prototype.updateActiveCell) {
					$.ig.SpreadsheetEditHelper.prototype.updateActiveCellImpl(cell, ws, editCellFormat, newValue, newFormatIndex);
				} else {
					var lockedRangeInfoForWs = lockedOperationInfo != null && ws.isProtected() && ws == sheetManager._worksheet() ? lockedOperationInfo.getWorksheetInfo(ws) : null;
					var rowIndex = -1;
					var row = null;
					var lockedRangeInfoForRange = null;
					var protectedRangeInitializer = lockedRangeInfoForWs != null ? function (rr) { lockedRangeInfoForRange = $.ig.LockedEditRangeInfoForCellRange.prototype.create(lockedRangeInfoForWs, rr.firstRow(), rr.firstColumn(), rr.lastRow(), rr.lastColumn()); } : null;
					var enumerable = $.ig.SpreadsheetPaneManager.prototype._getAllCells(ws, targetRanges, protectedRangeInitializer);
					var cellFormat = null;
					var textChange = $.ig.util.cast($.ig.SpreadsheetEditHelper_TextChangeWithOptions.prototype.$type, newValue);
					var cachedActiveCellFont = null;
					var activeCellFormat = null;
					var formattedString = null;
					var activeCellHasApplyFont = false;
					var activeCellStyle = null;
					var tempFontResolved = null;
					$.ig.SpreadsheetEditHelper.prototype.updateActiveCellImpl(cell, ws, editCellFormat, newValue, newFormatIndex);
					if (textChange != null) {
						row = ws.rows().item(cell.row());
						var resolved = row._getResolvedCellFormat1(cell.column());
						activeCellFormat = ws._getCellFormatElementReadOnly(row, cell.column());
						activeCellHasApplyFont = (activeCellFormat.formatOptions() & $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting) != 0;
						activeCellStyle = resolved.style();
						tempFontResolved = new $.ig.ResolvedWorksheetCellFormatDataFont(activeCellFormat);
						cachedActiveCellFont = new $.ig.WorkbookFontData(0, ws.workbook());
						cachedActiveCellFont.setFontFormatting(resolved.font());
						formattedString = $.ig.util.cast($.ig.excel.FormattedString.prototype.$type, row._getCellValue1(cell.column()));
					}
					var newFormatCategory = $.ig.SpreadsheetUtilities.prototype.getBuiltInCellFormatCategory(newFormatIndex);
					var newFormat = newFormatIndex != $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex ? ws.workbook()._formats().item(newFormatIndex) : null;
					var mayUpdateTargetCellFormat = $.ig.SpreadsheetEditHelper.prototype.shouldUpdateTargetCellFormat(newFormatCategory);
					var en1 = enumerable.getEnumerator();
					while (en1.moveNext()) {
						var item = en1.current();
						if (item.row() != rowIndex) {
							rowIndex = item.row();
							row = ws.rows().item(rowIndex);
						}
						if (mayUpdateTargetCellFormat || lockedRangeInfoForRange != null) {
							cellFormat = ws._getCellFormatElementReadOnly(row, item.column());
							if (lockedRangeInfoForRange != null && $.ig.util.nullableEquals(cellFormat._lockedResolved(), true) && lockedRangeInfoForRange.isUnlocked(rowIndex, item.column()) == false) {
								hasTriedToModifyLockedCell = true;
								continue;
							}
							var targetCategory = $.ig.SpreadsheetUtilities.prototype.getBuiltInCellFormatCategory(cellFormat._formatStringIndexResolved());
							if (targetCategory != newFormatCategory && !$.ig.SpreadsheetEditHelper.prototype.shouldKeepTargetCellFormat(targetCategory)) {
								row.getCellFormat(item.column()).formatString(newFormat);
							}
						}
						if (cachedActiveCellFont != null) {
							if (mayUpdateTargetCellFormat == false) {
								cellFormat = ws._getCellFormatElementReadOnly(row, item.column());
							}
							if ($.ig.Object.prototype.referenceEquals(cellFormat, activeCellFormat) == false) {
								var copyFormat;
								if (activeCellHasApplyFont == false && (cellFormat.formatOptions() & $.ig.excel.WorksheetCellFormatOptions.applyFontFormatting) == 0) {
									copyFormat = activeCellStyle != cellFormat.style() && $.ig.Object.prototype.referenceEquals(activeCellStyle._styleFormatInternal()._fontInternal().element(), cellFormat.style()._styleFormatInternal()._fontInternal().element()) == false;
								} else {
									if (activeCellHasApplyFont == false && (activeCellStyle == cellFormat.style() || $.ig.Object.prototype.referenceEquals(activeCellStyle._styleFormatInternal()._fontInternal().element(), cellFormat.style()._styleFormatInternal()._fontInternal().element()))) {
										row._getCellFormatInternal1(item.column()).formatOptions(row._getCellFormatInternal1(item.column()).formatOptions() & (~$.ig.excel.WorksheetCellFormatOptions.applyFontFormatting));
										copyFormat = false;
									} else {
										tempFontResolved._initialize(cellFormat);
										copyFormat = $.ig.WorkbookFontProxy.prototype._getDifferences(cachedActiveCellFont, tempFontResolved) != 0;
									}
								}
								if (copyFormat) {
									row._getCellFormatInternal1(item.column()).font().setFontFormatting(cachedActiveCellFont);
								}
							}
						}
						var valueToUse;
						if (textChange == null) {
							valueToUse = newValue;
						} else if (formattedString == null) {
							valueToUse = textChange._unformattedText;
						} else {
							valueToUse = formattedString.clone();
						}
						row.setCellValue(item.column(), valueToUse);
					}
				}
			}
			return $.ig.SpreadsheetOperationResult.prototype.success;
		});
		if (result == $.ig.SpreadsheetOperationResult.prototype.success) {
			if (hasTriedToModifyLockedCell) {
				this.__promptCallback(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			} else if (worksheetForHyperlink != null) {
				var row = worksheetForHyperlink.rows().item(cell.row());
				var cellValue = row._getCellValueRaw(cell.column());
				if ($.ig.util.cast($.ig.StringElement.prototype.$type, cellValue) !== null || $.ig.util.cast($.ig.excel.FormattedString.prototype.$type, cellValue) !== null) {
					var newText = $.ig.util.cast($.ig.excel.FormattedString.prototype.$type, cellValue) !== null ? (cellValue).unformattedString() : (cellValue)._unformattedString();
					var newHyperlink = null;
					var hyperlinkToEdit = null;
					if ($.ig.SpreadsheetUtilities.prototype.isHyperlinkText(newText)) {
						var currentHyperlink = $.ig.SpreadsheetEditHelper.prototype.getCellSpecificHyperlink(row, cell.column());
						if (currentHyperlink == null || currentHyperlink.isSealed()) {
							var mergedCell = row.getCellAssociatedMergedCellsRegion(cell.column());
							if (mergedCell != null) {
								newHyperlink = new $.ig.excel.WorksheetHyperlink(worksheetForHyperlink._getCachedRegion(mergedCell._address()), newText, null, null);
							} else {
								newHyperlink = new $.ig.excel.WorksheetHyperlink(row.cells().item(cell.column()), newText, null, null);
							}
						} else {
							hyperlinkToEdit = currentHyperlink;
						}
						this.__executeInUndo($.ig.SpreadsheetTransactionOperation.prototype.hyperlink, function () {
							if (newHyperlink != null) {
								worksheetForHyperlink.hyperlinks().add(newHyperlink);
							} else if (hyperlinkToEdit != null) {
								hyperlinkToEdit.targetAddress(newText);
							}
							if ($.ig.util.cast($.ig.FormattedStringElement.prototype.$type, cellValue) !== null || $.ig.util.cast($.ig.excel.FormattedString.prototype.$type, cellValue) !== null) {
								row.setCellValue(cell.column(), newText);
							}
							return $.ig.SpreadsheetOperationResult.prototype.success;
						}, null, null);
					}
				}
			}
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateCells(Infragistics.Controls.Grids.Core.SpreadsheetCellExitModeAction, Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue, System.Boolean, System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateCellValue(Infragistics.Documents.Excel.WorksheetRow, System.Int32, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Object, System.Int32)" />*/
	updateCellValue: function (row, columnIndex, editCellFormat, newValue, newFormatIndex) {
		var textChange = $.ig.util.cast($.ig.SpreadsheetEditHelper_TextChangeWithOptions.prototype.$type, newValue);
		if (textChange != null) {
			textChange.updateCellFormat(row, columnIndex);
		}
		if (newFormatIndex != $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex) {
			var updateCellFormat = $.ig.WorksheetCellBlock.prototype.isGeneralFormat(editCellFormat._formatStringResolved());
			var newFormat = row.worksheet().workbook()._formats().item(newFormatIndex);
			if (!updateCellFormat) {
				var newFormatCategory = $.ig.SpreadsheetUtilities.prototype.getBuiltInCellFormatCategory(newFormatIndex);
				var currentCategory = $.ig.SpreadsheetUtilities.prototype.getBuiltInCellFormatCategory(editCellFormat._formatStringIndexResolved());
				if ($.ig.SpreadsheetEditHelper.prototype.shouldUpdateTargetCellFormat(newFormatCategory) && !$.ig.SpreadsheetEditHelper.prototype.shouldKeepTargetCellFormat(currentCategory) && newFormatCategory != currentCategory) {
					updateCellFormat = true;
				}
			}
			if (updateCellFormat) {
				var cellFormat = row.getCellFormat(columnIndex);
				cellFormat.formatString(newFormat);
			}
		}
		if (textChange != null) {
			if (textChange._formattedTextDocument == null) {
				newValue = textChange._unformattedText;
			} else {
				newValue = new $.ig.excel.FormattedString(textChange._unformattedText);
			}
		}
		row.setCellValue(columnIndex, newValue);
		if (textChange != null && textChange._formattedTextDocument != null) {
			textChange.updateFormattedString($.ig.util.cast($.ig.excel.FormattedString.prototype.$type, newValue));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateCellValue(Infragistics.Documents.Excel.WorksheetRow, System.Int32, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Object, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ApplyFormula(Infragistics.Documents.Excel.Formula, , Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	applyFormula: function (formula, regions, anchorRow, anchorColumnIndex) {
		var f = formula._owningCellRow() == null ? formula : formula._clone();
		if (regions != null) {
			f._applyTo1(regions, anchorRow, anchorColumnIndex);
		} else {
			f._applyTo4(anchorRow, anchorColumnIndex);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ApplyFormula(Infragistics.Documents.Excel.Formula, , Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ApplyFormula(Infragistics.Documents.Excel.Formula, Infragistics.Documents.Excel.WorksheetRow, System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	applyFormula1: function (formula, targetRow, targetColumnIndex, anchorRow, anchorColumnIndex) {
		var f = formula._owningCellRow() == null ? formula : formula._clone();
		f._applyTo5(anchorRow, anchorColumnIndex, targetRow, targetColumnIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ApplyFormula(Infragistics.Documents.Excel.Formula, Infragistics.Documents.Excel.WorksheetRow, System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::DoesCurrencySymbolPlacementMatch(System.String, System.String, System.Int32)" />*/
	doesCurrencySymbolPlacementMatch: function (inputText, currencySymbol, currencyPattern) {
		var isBefore = currencyPattern == 0 || currencyPattern == 2;
		var symbolIndex = inputText.indexOf(currencySymbol);
		var numberIndex = inputText.indexOfAny([ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ]);
		if (numberIndex >= 0 && symbolIndex >= 0) {
			if (isBefore && symbolIndex > numberIndex) {
				return false;
			} else if (!isBefore && symbolIndex < numberIndex) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::DoesCurrencySymbolPlacementMatch(System.String, System.String, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetCellSpecificHyperlink(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	getCellSpecificHyperlink: function (row, colIndex) {
		var cellHyperlink = row._getCellFormulaHyperlink(colIndex);
		if (cellHyperlink == null) {
			var ws = row.worksheet();
			var mergedCell = ws._getCellAssociatedMergedCellsRegion(row.index(), colIndex);
			var isMerged = mergedCell != null;
			var cellAddress = mergedCell != null ? mergedCell._address() : new $.ig.WorksheetRegionAddress(1, row.index(), row.index(), colIndex, colIndex);
			var en = ws.hyperlinks().getEnumerator();
			while (en.moveNext()) {
				var hyperlink = en.current();
				var hyperlinkAddress = hyperlink.sourceRegion()._address();
				if ($.ig.WorksheetRegionAddress.prototype._l_op_Equality(cellAddress, hyperlinkAddress) || (isMerged && cellAddress._contains1(hyperlinkAddress))) {
					cellHyperlink = hyperlink;
					break;
				}
			}
		}
		return cellHyperlink;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetCellSpecificHyperlink(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetFormula(Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo, System.Boolean, System.String, System.Globalization.CultureInfo, System.Boolean)" />*/
	getFormula: function (info, createArrayFormula, text, culture, canAddImplicitEndParens) {
		var wb = info.workbook();
		var exception;
		if (createArrayFormula) {
			var arrayFormula;
			if ((function () { var $ret = $.ig.excel.ArrayFormula.prototype._tryParse15(text, wb.cellReferenceMode(), wb.currentFormat(), culture, arrayFormula, exception); arrayFormula = $ret.p4; exception = $ret.p5; return $ret.ret; }())) {
				return arrayFormula;
			}
		} else {
			var formula;
			if ((function () { var $ret = $.ig.excel.Formula.prototype._tryParse6(text, wb.cellReferenceMode(), wb.currentFormat(), culture, formula, exception); formula = $ret.p4; exception = $ret.p5; return $ret.ret; }())) {
				return formula;
			}
		}
		if (canAddImplicitEndParens && text.indexOf(')') < 0) {
			var closedFormula = $.ig.util.cast($.ig.excel.Formula.prototype.$type, $.ig.SpreadsheetEditHelper.prototype.getFormula(info, createArrayFormula, text + ")", culture, false));
			if (closedFormula != null) {
				return closedFormula;
			}
		}
		return new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.formulaParseError, null, exception, null, false);
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetFormula(Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo, System.Boolean, System.String, System.Globalization.CultureInfo, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetTextValue(Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue, Infragistics.Documents.Excel.Workbook, System.Boolean)" />*/
	getTextValue: function (value, workbook, wasVisitedHyperlinkCell) {
		var formattedTextDocument = value.createDocument();
		$.ig.Debug.prototype.assert(formattedTextDocument != null);
		if (formattedTextDocument != null) {
			var font = new $.ig.ResolvedWorksheetCellFormatDataFont(value.editCellFormat());
			var tempSettings = new $.ig.IGFormattedTextSettings();
			$.ig.SpreadsheetUtilities.prototype.initializeFormattedTextSettings(tempSettings, font);
			formattedTextDocument._textSettings._initializeDefaults(tempSettings);
			formattedTextDocument.resolveTextProperties();
		}
		if (formattedTextDocument != null && formattedTextDocument.hasNonDefaultSettings()) {
			if (wasVisitedHyperlinkCell) {
				$.ig.SpreadsheetUtilities.prototype.replaceSettingsForeground(workbook, formattedTextDocument, $.ig.BuiltInStyleType.prototype.followedHyperlink, $.ig.BuiltInStyleType.prototype.hyperlink);
			}
			var props = formattedTextDocument._textSettings;
			var uniformSettings = formattedTextDocument.getUniformTextRunSettings();
			if (uniformSettings == null || uniformSettings.equals(props)) {
			} else {
				var docProps = props._propertiesWithValues();
				var uniformProps = uniformSettings._propertiesWithValues();
				uniformSettings._clearMatchingNonNullValues(props);
				formattedTextDocument.removeTrailingCrLf();
				var ourUnformattedText = formattedTextDocument._text.toString();
				if (docProps != uniformProps) {
					return new $.ig.SpreadsheetEditHelper_TextChangeWithOptions(ourUnformattedText, uniformSettings, formattedTextDocument);
				}
				return new $.ig.SpreadsheetEditHelper_TextChangeWithOptions(ourUnformattedText, uniformSettings, null);
			}
		}
		return new $.ig.SpreadsheetEditHelper_TextChangeWithOptions(value.unformattedText(), new $.ig.IGFormattedTextSettings(), null);
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::GetTextValue(Infragistics.Controls.Grids.Core.ISpreadsheetEditorValue, Infragistics.Documents.Excel.Workbook, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::RemoveBlockingRegionsInExitEditMode(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Collections.Generic.HashSet, System.Boolean)" />*/
	removeBlockingRegionsInExitEditMode: function (lockedOperationInfo, blockingValuesToClear, hasTriedToModifyLockedCell) {
		var en = blockingValuesToClear.getEnumerator();
		while (en.moveNext()) {
			var blockingValue = en.current();
			if (lockedOperationInfo != null) {
				var blockingRegionWorksheet = blockingValue.blockedRegion().worksheet();
				if (blockingRegionWorksheet.isProtected()) {
					var blockInfoForWs = lockedOperationInfo.getWorksheetInfo(blockingRegionWorksheet);
					var blockedAddress = blockingValue.blockedRegion()._address();
					if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(blockingRegionWorksheet, blockedAddress._firstRowIndex(), blockedAddress._firstColumnIndex(), blockedAddress._lastRowIndex(), blockedAddress._lastColumnIndex(), blockInfoForWs) == false) {
						hasTriedToModifyLockedCell = true;
						continue;
					}
				}
			}
			blockingValue.removeFromRegion();
		}
		return {
			p2: hasTriedToModifyLockedCell
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::RemoveBlockingRegionsInExitEditMode(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Collections.Generic.HashSet, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ShouldKeepTargetCellFormat(Infragistics.Controls.Grids.Core.ExcelCellFormatCategory)" />*/
	shouldKeepTargetCellFormat: function (currentTargetCellFormatCategory) {
		switch (currentTargetCellFormatCategory) {
			case $.ig.ExcelCellFormatCategory.prototype.accounting:
			case $.ig.ExcelCellFormatCategory.prototype.currency:
			case $.ig.ExcelCellFormatCategory.prototype.date:
			case $.ig.ExcelCellFormatCategory.prototype.fraction:
			case $.ig.ExcelCellFormatCategory.prototype.percentage:
			case $.ig.ExcelCellFormatCategory.prototype.scientific:
			case $.ig.ExcelCellFormatCategory.prototype.time:
			case $.ig.ExcelCellFormatCategory.prototype.general:
			case $.ig.ExcelCellFormatCategory.prototype.text:
				return false;
			case $.ig.ExcelCellFormatCategory.prototype.custom:
			case $.ig.ExcelCellFormatCategory.prototype.number:
				return true;
			default:
				$.ig.Debug.prototype.fail("Unrecognized category:" + $.ig.ExcelCellFormatCategory.prototype.getBox(currentTargetCellFormatCategory));
				return true;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ShouldKeepTargetCellFormat(Infragistics.Controls.Grids.Core.ExcelCellFormatCategory)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ShouldUpdateTargetCellFormat(Infragistics.Controls.Grids.Core.ExcelCellFormatCategory)" />*/
	shouldUpdateTargetCellFormat: function (newFormatCategory) {
		switch (newFormatCategory) {
			case $.ig.ExcelCellFormatCategory.prototype.accounting:
			case $.ig.ExcelCellFormatCategory.prototype.currency:
			case $.ig.ExcelCellFormatCategory.prototype.date:
			case $.ig.ExcelCellFormatCategory.prototype.fraction:
			case $.ig.ExcelCellFormatCategory.prototype.percentage:
			case $.ig.ExcelCellFormatCategory.prototype.scientific:
			case $.ig.ExcelCellFormatCategory.prototype.time:
			case $.ig.ExcelCellFormatCategory.prototype.general:
				return true;
			case $.ig.ExcelCellFormatCategory.prototype.custom:
			case $.ig.ExcelCellFormatCategory.prototype.number:
			case $.ig.ExcelCellFormatCategory.prototype.text:
				return false;
			default:
				$.ig.Debug.prototype.fail("Unrecognized category:" + $.ig.ExcelCellFormatCategory.prototype.getBox(newFormatCategory));
				return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::ShouldUpdateTargetCellFormat(Infragistics.Controls.Grids.Core.ExcelCellFormatCategory)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseCurrency(System.String, System.IFormatProvider, System.Double, System.Int32, System.Boolean)" />*/
	tryParseCurrency: function (text, formatProvider, value, preferredFormatIndex, skipRemainingParseAttempts) {
		if (formatProvider == null) {
			formatProvider = $.ig.CultureInfo.prototype.currentCulture();
		}
		skipRemainingParseAttempts = false;
		var numberFormat = $.ig.util.cast($.ig.NumberFormatInfo.prototype.$type, formatProvider.getFormat($.ig.NumberFormatInfo.prototype.$type));
		var currencySymbol = numberFormat.currencySymbol();
		if (text.contains(currencySymbol)) {
			var WholeNumber = $.ig.NumberStyles.prototype.allowLeadingSign | $.ig.NumberStyles.prototype.allowLeadingWhite | $.ig.NumberStyles.prototype.allowParentheses | $.ig.NumberStyles.prototype.allowThousands | $.ig.NumberStyles.prototype.allowTrailingWhite | $.ig.NumberStyles.prototype.allowCurrencySymbol;
			if ((function () { var $ret = $.ig.util.tryParseNumber1(text, WholeNumber, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
				if ($.ig.SpreadsheetEditHelper.prototype.doesCurrencySymbolPlacementMatch(text, currencySymbol, numberFormat.currencyPositivePattern())) {
					preferredFormatIndex = 6;
					return {
						ret: true,
						p2: value,
						p3: preferredFormatIndex,
						p4: skipRemainingParseAttempts
					};
				} else {
					skipRemainingParseAttempts = true;
				}
			} else {
				var FractionNumber = WholeNumber | $.ig.NumberStyles.prototype.allowDecimalPoint;
				if ($.ig.SpreadsheetEditHelper.prototype.doesCurrencySymbolPlacementMatch(text, currencySymbol, numberFormat.currencyPositivePattern())) {
					if ((function () { var $ret = $.ig.util.tryParseNumber1(text, FractionNumber, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
						preferredFormatIndex = 8;
						return {
							ret: true,
							p2: value,
							p3: preferredFormatIndex,
							p4: skipRemainingParseAttempts
						};
					}
				} else {
					skipRemainingParseAttempts = true;
				}
			}
		}
		value = NaN;
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		return {
			ret: false,
			p2: value,
			p3: preferredFormatIndex,
			p4: skipRemainingParseAttempts
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseCurrency(System.String, System.IFormatProvider, System.Double, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseDate(System.String, Infragistics.Documents.Excel.Workbook, System.IFormatProvider, System.Object, System.Int32)" />*/
	tryParseDate: function (text, workbook, formatProvider, dateOrTimeSpan, preferredFormatIndex) {
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		if (text != null) {
			if (formatProvider == null) {
				formatProvider = $.ig.CultureInfo.prototype.currentCulture();
			}
			var date;
			if (!/\s/i.test(text.charAt(0)) && (function () { var $ret = $.ig.Date.prototype.tryParse(text, date); date = $ret.p1; return $ret.ret; }())) {
				var dtfi = $.ig.util.cast($.ig.DateTimeFormatInfo.prototype.$type, formatProvider.getFormat($.ig.DateTimeFormatInfo.prototype.$type));
				var isValidDate = true;
				if (+($.ig.Date.prototype.getDate(date)) == +($.ig.Date.prototype.minValue())) {
					dateOrTimeSpan = $.ig.excel.ExcelCalcValue.prototype._timeOfDayToExcelDate($.ig.Date.prototype.getTimeOfDay(date), false);
				} else {
					dateOrTimeSpan = $.ig.util.unwrapNullable($.ig.excel.ExcelCalcValue.prototype._dateTimeToExcelDate(workbook, date));
				}
				if (dateOrTimeSpan == null) {
					isValidDate = false;
				} else if (dtfi != null) {
					var dateSep = dtfi.dateSeparator();
					var timeSep = dtfi.timeSeparator();
					var hasDateSep = String.isNullOrWhiteSpace(dateSep) || text.contains(dateSep);
					var hasTimeSep = String.isNullOrWhiteSpace(timeSep) || text.contains(timeSep);
					if (hasTimeSep || hasDateSep) {
						var am = dtfi.aMDesignator();
						var pm = dtfi.pMDesignator();
						var hasAmPm = (!String.isNullOrWhiteSpace(am) && text.contains(am)) || (!String.isNullOrWhiteSpace(pm) && text.contains(pm));
						var timeSepCount = 0;
						var timeSepIdx = text.indexOf(timeSep, 0);
						while (timeSepIdx >= 0) {
							timeSepCount++;
							timeSepIdx = timeSepIdx < text.length ? text.indexOf(timeSep, timeSepIdx + 1) : -1;
						}
						if (+($.ig.Date.prototype.getDate(date)) == +($.ig.Date.prototype.minValue())) {
							if (hasAmPm) {
								preferredFormatIndex = timeSepCount > 1 ? 19 : 18;
							} else {
								preferredFormatIndex = timeSepCount > 1 ? 21 : 20;
							}
						} else {
							if (hasAmPm || timeSepCount > 0) {
								preferredFormatIndex = $.ig.WorkbookFormatCollection.prototype.shortDateAndTimeFormatIndex;
							} else {
								preferredFormatIndex = $.ig.WorkbookFormatCollection.prototype.shortDateFormatIndex;
							}
						}
					} else {
						isValidDate = false;
					}
				}
				if (isValidDate) {
					return {
						ret: true,
						p3: dateOrTimeSpan,
						p4: preferredFormatIndex
					};
				}
			}
		}
		dateOrTimeSpan = null;
		return {
			ret: false,
			p3: dateOrTimeSpan,
			p4: preferredFormatIndex
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseDate(System.String, Infragistics.Documents.Excel.Workbook, System.IFormatProvider, System.Object, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseExponent(System.String, System.IFormatProvider, System.Double, System.Int32)" />*/
	tryParseExponent: function (text, formatProvider, value, preferredFormatIndex) {
		var exponentIndex;
		exponentIndex = text.indexOf('E');
		if (exponentIndex < 0) {
			text.indexOf('e');
		}
		if (exponentIndex >= 0) {
			if (formatProvider == null) {
				formatProvider = $.ig.CultureInfo.prototype.currentCulture();
			}
			var Exponent = $.ig.NumberStyles.prototype.allowExponent | $.ig.NumberStyles.prototype.allowParentheses | $.ig.NumberStyles.prototype.allowThousands | $.ig.NumberStyles.prototype.allowDecimalPoint | $.ig.NumberStyles.prototype.allowLeadingSign | $.ig.NumberStyles.prototype.allowLeadingWhite | $.ig.NumberStyles.prototype.allowTrailingWhite;
			if ((function () { var $ret = $.ig.util.tryParseNumber1(text, Exponent, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
				preferredFormatIndex = 11;
				return {
					ret: true,
					p2: value,
					p3: preferredFormatIndex
				};
			}
		}
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		value = NaN;
		return {
			ret: false,
			p2: value,
			p3: preferredFormatIndex
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseExponent(System.String, System.IFormatProvider, System.Double, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseFraction(System.String, System.Boolean, System.IFormatProvider, System.Double, System.Int32, System.Boolean)" />*/
	tryParseFraction: function (text, mustHaveLeadingDecimal, formatProvider, value, preferredFormatIndex, hasLargePostIntegerSpace) {
		hasLargePostIntegerSpace = false;
		if (text != null) {
			var SignGroup = 1;
			var IntegerGroup = 2;
			var NumeratorGroup = 3;
			var DenominatorGroup = 4;
			if ($.ig.SpreadsheetEditHelper.prototype.__fractionRegex == null) {
				$.ig.SpreadsheetEditHelper.prototype.__fractionRegex = new $.ig.Regex(0, "^(-)?\\s*(\\S+\\s+)?(\\d+)/(\\d+)\\s*$");
			}
			var match = $.ig.SpreadsheetEditHelper.prototype.__fractionRegex.match(text);
			if (match.success()) {
				if (mustHaveLeadingDecimal == false || match.groups().item(IntegerGroup).length() > 0 || match.groups().item(SignGroup).length() > 0) {
					if (formatProvider == null) {
						formatProvider = $.ig.CultureInfo.prototype.currentCulture();
					}
					var integerString = (function ($t) { return $t != null ? $t : String.empty(); }(match.groups().item(IntegerGroup).value()));
					var integer = 0;
					if (String.isNullOrEmpty(integerString) || (function () { var $ret = $.ig.util.tryParseInt32_2(match.groups().item(IntegerGroup).value(), $.ig.NumberStyles.prototype.allowThousands | $.ig.NumberStyles.prototype.allowTrailingWhite, formatProvider, integer); integer = $ret.p3; return $ret.ret; }())) {
						var numerator = $.ig.util.parseInt32_1(match.groups().item(NumeratorGroup).value(), formatProvider);
						var denominator = $.ig.util.parseInt32_1(match.groups().item(DenominatorGroup).value(), formatProvider);
						if (denominator != 0) {
							value = integer + numerator / denominator;
							if (match.groups().item(SignGroup).length() > 0) {
								value = -value;
							}
							var postIntegerWhitespace = 0;
							for (var i = integerString.length - 1; i >= 0; i--) {
								if (/\s/i.test(integerString.charAt(i))) {
									postIntegerWhitespace++;
								} else {
									break;
								}
							}
							if (postIntegerWhitespace > 1) {
								hasLargePostIntegerSpace = true;
							} else {
								preferredFormatIndex = denominator < 10 ? 12 : 13;
								return {
									ret: true,
									p3: value,
									p4: preferredFormatIndex,
									p5: hasLargePostIntegerSpace
								};
							}
						}
					}
				}
			}
		}
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		value = NaN;
		return {
			ret: false,
			p3: value,
			p4: preferredFormatIndex,
			p5: hasLargePostIntegerSpace
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseFraction(System.String, System.Boolean, System.IFormatProvider, System.Double, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseNumber(System.String, System.IFormatProvider, System.Int32, System.Double, System.Int32)" />*/
	tryParseNumber: function (text, formatProvider, decimalPlaceCount, value, preferredFormatIndex) {
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		if (formatProvider == null) {
			formatProvider = $.ig.CultureInfo.prototype.currentCulture();
		}
		var WholeNumberStyles = $.ig.NumberStyles.prototype.allowLeadingSign | $.ig.NumberStyles.prototype.allowLeadingWhite | $.ig.NumberStyles.prototype.allowParentheses | $.ig.NumberStyles.prototype.allowThousands | $.ig.NumberStyles.prototype.allowTrailingWhite;
		if (decimalPlaceCount != 0) {
			if ((function () { var $ret = $.ig.util.tryParseNumber1(text, WholeNumberStyles, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
				value *= Math.pow(10, -decimalPlaceCount);
				return {
					ret: true,
					p3: value,
					p4: preferredFormatIndex
				};
			}
		}
		var AllowedStyles = WholeNumberStyles | $.ig.NumberStyles.prototype.allowDecimalPoint;
		if ((function () { var $ret = $.ig.util.tryParseNumber1(text, AllowedStyles, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
			return {
				ret: true,
				p3: value,
				p4: preferredFormatIndex
			};
		}
		return {
			ret: false,
			p3: value,
			p4: preferredFormatIndex
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseNumber(System.String, System.IFormatProvider, System.Int32, System.Double, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParsePercent(System.String, System.IFormatProvider, System.Double, System.Int32)" />*/
	tryParsePercent: function (text, formatProvider, value, preferredFormatIndex) {
		if (formatProvider == null) {
			formatProvider = $.ig.CultureInfo.prototype.currentCulture();
		}
		var numberFormat = $.ig.util.cast($.ig.NumberFormatInfo.prototype.$type, formatProvider.getFormat($.ig.NumberFormatInfo.prototype.$type));
		var percentSymbol = numberFormat.percentSymbol();
		if (!String.isNullOrWhiteSpace(percentSymbol) && text.indexOf(percentSymbol) >= 0) {
			var idx = text.indexOf(percentSymbol);
			if (idx == text.length || text.indexOf(percentSymbol, idx + 1) == -1) {
				var textWithoutPercent = $.ig.util.replace(text, percentSymbol, "");
				var PercentWhole = $.ig.NumberStyles.prototype.allowParentheses | $.ig.NumberStyles.prototype.allowThousands | $.ig.NumberStyles.prototype.allowLeadingSign | $.ig.NumberStyles.prototype.allowLeadingWhite | $.ig.NumberStyles.prototype.allowTrailingWhite;
				if ((function () { var $ret = $.ig.util.tryParseNumber1(textWithoutPercent, PercentWhole, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
					preferredFormatIndex = 9;
					value = value / 100;
					return {
						ret: true,
						p2: value,
						p3: preferredFormatIndex
					};
				}
				var PercentFraction = PercentWhole | $.ig.NumberStyles.prototype.allowDecimalPoint;
				if ((function () { var $ret = $.ig.util.tryParseNumber1(textWithoutPercent, PercentFraction, formatProvider, value); value = $ret.p3; return $ret.ret; }())) {
					preferredFormatIndex = 10;
					value = value / 100;
					return {
						ret: true,
						p2: value,
						p3: preferredFormatIndex
					};
				}
			}
		}
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		value = NaN;
		return {
			ret: false,
			p2: value,
			p3: preferredFormatIndex
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParsePercent(System.String, System.IFormatProvider, System.Double, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseTimeSpan(System.String, System.IFormatProvider, System.TimeSpan, System.Int32)" />*/
	tryParseTimeSpan: function (text, formatProvider, value, preferredFormatIndex) {
		if (formatProvider == null) {
			formatProvider = $.ig.CultureInfo.prototype.currentCulture();
		}
		var dtfi = $.ig.util.cast($.ig.DateTimeFormatInfo.prototype.$type, formatProvider.getFormat($.ig.DateTimeFormatInfo.prototype.$type));
		if (dtfi != null) {
			var sep = dtfi.timeSeparator();
			if (text.contains(sep)) {
				var segments = $.ig.util.stringSplit(text, [ sep ], $.ig.StringSplitOptions.prototype.removeEmptyEntries);
				if (segments != null && segments.length > 1 && segments.length <= 3) {
					var hours, minutes, seconds;
					hours = minutes = seconds = 0;
					var LeadingStyles = $.ig.NumberStyles.prototype.allowTrailingWhite;
					var MiddleStyles = $.ig.NumberStyles.prototype.allowLeadingWhite | $.ig.NumberStyles.prototype.allowTrailingWhite;
					var LastSectionStyle = $.ig.NumberStyles.prototype.allowLeadingWhite | $.ig.NumberStyles.prototype.allowTrailingWhite | $.ig.NumberStyles.prototype.allowDecimalPoint;
					if ((function () { var $ret = $.ig.util.tryParseNumber1(segments[0], LeadingStyles, formatProvider, hours); hours = $ret.p3; return $ret.ret; }()) && hours >= 0 && hours <= 9999) {
						var secondStyle = segments.length == 2 ? LastSectionStyle : MiddleStyles;
						if ((function () { var $ret = $.ig.util.tryParseNumber1(segments[1], secondStyle, formatProvider, minutes); minutes = $ret.p3; return $ret.ret; }()) && minutes >= 0 && minutes < 60) {
							if (segments.length == 2 || ((function () { var $ret = $.ig.util.tryParseNumber1(segments[2], LastSectionStyle, formatProvider, seconds); seconds = $ret.p3; return $ret.ret; }()) && seconds >= 0 && seconds < 60)) {
								preferredFormatIndex = 46;
								value = $.ig.util.timeSpanFromHours(hours + (minutes / 60) + (seconds / 3600));
								return {
									ret: true,
									p2: value,
									p3: preferredFormatIndex
								};
							}
						}
					}
				}
			}
		}
		preferredFormatIndex = $.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex;
		value = $.ig.Number.prototype.minValue();
		return {
			ret: false,
			p2: value,
			p3: preferredFormatIndex
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::TryParseTimeSpan(System.String, System.IFormatProvider, System.TimeSpan, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateActiveCellImpl(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Object, System.Int32)" />*/
	updateActiveCellImpl: function (cell, ws, editCellFormat, newValue, newFormatIndex) {
		var row = ws.rows().item(cell.row());
		$.ig.SpreadsheetEditHelper.prototype.updateCellValue(row, cell.column(), editCellFormat, newValue, newFormatIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateActiveCellImpl(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Object, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateCellsImpl(, System.String, System.Func)" />*/
	updateCellsImpl: function (targetRangesForUndoInfo, unformattedText, action) {
		var text = unformattedText == null || unformattedText.length < 30 ? unformattedText : unformattedText.substr(0, 30);
		return this.__executeInUndo($.ig.SpreadsheetTransactionOperation.prototype.editCell, action, text, targetRangesForUndoInfo);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::UpdateCellsImpl(, System.String, System.Func)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::VerifyBlockedRegionInExitEditMode(, System.Boolean, System.Collections.Generic.HashSet)" />*/
	verifyBlockedRegionInExitEditMode: function (regions, canCancel, blockingValuesToClear) {
		try {
			$.ig.ExcelUtils.prototype.verifyBlockedRegions(regions, blockingValuesToClear);
		}
		catch (ex) {
			var promptInfo = new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.editError, null, ex, null, true);
			if (this.__promptCallback(promptInfo) == false) {
				return $.ig.SpreadsheetOperationResult.prototype.cancelled;
			}
			return $.ig.SpreadsheetOperationResult.prototype.error;
		}
		return $.ig.SpreadsheetOperationResult.prototype.success;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::VerifyBlockedRegionInExitEditMode(, System.Boolean, System.Collections.Generic.HashSet)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::VerifyTargetRangesInExitEditMode()" />*/
	verifyTargetRangesInExitEditMode: function (ranges) {
		if (this.__sheetManager._tabManager()._selectedTabs().count() > 1) {
			var regions = new Array(ranges.length);
			for (var i = 0; i < regions.length; i++) {
				regions[i] = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(ranges[i]);
			}
			var en = this.__sheetManager._tabManager()._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				if ($.ig.SpreadsheetPaneManager.prototype._intersectsTable(tab._worksheet(), regions)) {
					var promptInfo = new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.tableChangeWithMultipleSelectedSheets, null, null, null, false);
					if (this.__promptCallback(promptInfo)) {
						return $.ig.SpreadsheetOperationResult.prototype.cancelled;
					}
					return $.ig.SpreadsheetOperationResult.prototype.error;
				}
			}
		}
		return $.ig.SpreadsheetOperationResult.prototype.success;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::VerifyTargetRangesInExitEditMode()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.Workbook()" />*/
	workbook: function () {
		return this.__workbook;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.Workbook()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.IsFixedDecimalEnabled()" />*/
	isFixedDecimalEnabled: function () {
		return this.__isFixedDecimalEnabled;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.IsFixedDecimalEnabled()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.FixedDecimalPlaceCount()" />*/
	fixedDecimalPlaceCount: function () {
		return this.__fixedDecimalPlaceCount;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetEditHelper::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.FixedDecimalPlaceCount()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditHelper', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetEditInfo.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions" />*/

$.ig.util.defType('SpreadsheetEditHelper_TextChangeWithOptions', 'Object', {
	_cellFormatSettingsToChange: null,
	_formattedTextDocument: null,
	_unformattedText: null,
	init: function (unformattedText, cellFormatSettingsToChange, formattedTextDocument) {
		$.ig.Object.prototype.init.call(this);
		this._formattedTextDocument = formattedTextDocument;
		this._cellFormatSettingsToChange = cellFormatSettingsToChange;
		this._unformattedText = unformattedText;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::ApplySettings(Infragistics.Documents.Excel.IWorkbookFont, Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	applySettings: function (font, settings) {
		if (!String.isNullOrEmpty(settings._font())) {
			font.name(settings._font());
		}
		if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(settings._foreground(), null)) {
			font.colorInfo(settings._foreground());
		}
		if ($.ig.util.nullableNotEquals(settings._height(), null)) {
			font.height($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(settings._height().value())));
		}
		if ($.ig.util.nullableNotEquals(settings._strikeThrough(), null)) {
			font._strikeout$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(settings._strikeThrough(), true) ? true : false));
		}
		if ($.ig.util.nullableNotEquals(settings._underlineStyle(), null)) {
			font.underlineStyle(settings._underlineStyle().value());
		}
		if ($.ig.util.nullableNotEquals(settings._bold(), null)) {
			font._bold$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(settings._bold(), false) ? false : true));
		}
		if ($.ig.util.nullableNotEquals(settings._italic(), null)) {
			font._italic$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(settings._italic(), false) ? false : true));
		}
		if ($.ig.util.nullableNotEquals(settings._superSubScript(), null)) {
			font.superscriptSubscriptStyle(settings._superSubScript().value());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::ApplySettings(Infragistics.Documents.Excel.IWorkbookFont, Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::UpdateCellFormat(Infragistics.Documents.Excel.WorksheetRow, System.Int32)" />*/
	updateCellFormat: function (row, columnIndex) {
		if (this._cellFormatSettingsToChange._hasNonDefaultSettings()) {
			var format = row.getCellFormat(columnIndex);
			var font = format.font();
			var settings = this._cellFormatSettingsToChange;
			this.applySettings(font, settings);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::UpdateCellFormat(Infragistics.Documents.Excel.WorksheetRow, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::UpdateFormattedString(Infragistics.Documents.Excel.FormattedString)" />*/
	updateFormattedString: function (formattedString) {
		this.updateFormattedString1(formattedString, this._formattedTextDocument._children);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::UpdateFormattedString(Infragistics.Documents.Excel.FormattedString)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::UpdateFormattedString(Infragistics.Documents.Excel.FormattedString, System.Collections.Generic.IEnumerable)" />*/
	updateFormattedString1: function (formattedString, children) {
		if (formattedString._owner() == null) {
			return;
		}
		var en = children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			var run = $.ig.util.cast($.ig.IGFormattedTextRun.prototype.$type, child);
			if (run != null) {
				if (run._length > 0) {
					this.applySettings(formattedString._getFont1(run._start, run._length), run._textSettings);
				}
			} else {
				var span = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child);
				if (span != null) {
					this.updateFormattedString1(formattedString, span._children);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions::UpdateFormattedString(Infragistics.Documents.Excel.FormattedString, System.Collections.Generic.IEnumerable)" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditHelper_TextChangeWithOptions', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditHelper_TextChangeWithOptions" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettings" />*/

$.ig.util.defType('IGFormattedTextSettings', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	___font: null,
	___bold: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___height: $.ig.util.toNullable(Number, null),
	___italic: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___strikeThrough: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___superSubScript: $.ig.util.toNullable($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, null),
	___underlineStyle: $.ig.util.toNullable($.ig.excel.FontUnderlineStyle.prototype.$type, null),
	___foreground: null,
	___propertiesWithValues: 0,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Equals(System.Object)" />*/
	equals1: function (obj) {
		var other = $.ig.util.cast($.ig.IGFormattedTextSettings.prototype.$type, obj);
		return other != null && this.equals(other);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Equals(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGFormattedTextSettings::GetHashCode()" />*/
	getHashCode: function () {
		$.ig.Debug.prototype.fail("We're not currently returning meaningful here.");
		return this.___propertiesWithValues.getHashCode();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGFormattedTextSettings::GetHashCode()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Font()" />*/
	_font: function (value) {
		if (arguments.length === 1) {
			if (this.___font != value) {
				this.___font = value;
				this._onSetField$1(String, value, $.ig.IGFormattedTextSettingsFlags.prototype.font);
			}
			return value;
		} else {
			return this.___font;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Font()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Bold()" />*/
	_bold: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___bold, value)) {
				this.___bold = value;
				this._onSetField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), value, $.ig.IGFormattedTextSettingsFlags.prototype.bold);
			}
			return value;
		} else {
			return this.___bold;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Bold()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Height()" />*/
	_height: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___height, value)) {
				this.___height = value;
				this._onSetField$1($.ig.Nullable$1.prototype.$type.specialize(Number), value, $.ig.IGFormattedTextSettingsFlags.prototype.height);
			}
			return value;
		} else {
			return this.___height;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Height()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags Infragistics.Controls.Grids.Core.IGFormattedTextSettings::PropertiesWithValues()" />*/
	_propertiesWithValues: function () {
		return this.___propertiesWithValues;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags Infragistics.Controls.Grids.Core.IGFormattedTextSettings::PropertiesWithValues()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Italic()" />*/
	_italic: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___italic, value)) {
				this.___italic = value;
				this._onSetField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), value, $.ig.IGFormattedTextSettingsFlags.prototype.italic);
			}
			return value;
		} else {
			return this.___italic;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Italic()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::StrikeThrough()" />*/
	_strikeThrough: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___strikeThrough, value)) {
				this.___strikeThrough = value;
				this._onSetField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), value, $.ig.IGFormattedTextSettingsFlags.prototype.strikeThrough);
			}
			return value;
		} else {
			return this.___strikeThrough;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::StrikeThrough()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::SuperSubScript()" />*/
	_superSubScript: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___superSubScript, value)) {
				this.___superSubScript = value;
				this._onSetField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type), value, $.ig.IGFormattedTextSettingsFlags.prototype.superSubScript);
			}
			return value;
		} else {
			return this.___superSubScript;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::SuperSubScript()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::UnderlineStyle()" />*/
	_underlineStyle: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___underlineStyle, value)) {
				this.___underlineStyle = value;
				this._onSetField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.excel.FontUnderlineStyle.prototype.$type), value, $.ig.IGFormattedTextSettingsFlags.prototype.underline);
			}
			return value;
		} else {
			return this.___underlineStyle;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.IGFormattedTextSettings::UnderlineStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Foreground()" />*/
	_foreground: function (value) {
		if (arguments.length === 1) {
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(this.___foreground, value)) {
				this.___foreground = value;
				this._onSetField$1($.ig.excel.WorkbookColorInfo.prototype.$type, value, $.ig.IGFormattedTextSettingsFlags.prototype.foreground);
			}
			return value;
		} else {
			return this.___foreground;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Foreground()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearDifferingNonNullValues(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	_clearDifferingNonNullValues: function (other) {
		this._clearIfEquals(other, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearDifferingNonNullValues(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearIfEquals(Infragistics.Controls.Grids.Core.IGFormattedTextSettings, System.Boolean)" />*/
	_clearIfEquals: function (other, equals) {
		var $ret = this._clearIfEquals$1(String, this.___font, other.___font, equals, $.ig.IGFormattedTextSettingsFlags.prototype.font, null);
		this.___font = $ret.p0;
		var $ret1 = this._clearIfEquals$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), this.___bold, other.___bold, equals, $.ig.IGFormattedTextSettingsFlags.prototype.bold, null);
		this.___bold = $ret1.p0;
		var $ret2 = this._clearIfEquals$1($.ig.Nullable$1.prototype.$type.specialize(Number), this.___height, other.___height, equals, $.ig.IGFormattedTextSettingsFlags.prototype.height, null);
		this.___height = $ret2.p0;
		var $ret3 = this._clearIfEquals$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), this.___strikeThrough, other.___strikeThrough, equals, $.ig.IGFormattedTextSettingsFlags.prototype.strikeThrough, null);
		this.___strikeThrough = $ret3.p0;
		var $ret4 = this._clearIfEquals$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), this.___italic, other.___italic, equals, $.ig.IGFormattedTextSettingsFlags.prototype.italic, null);
		this.___italic = $ret4.p0;
		var $ret5 = this._clearIfEquals$1($.ig.Nullable$1.prototype.$type.specialize($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type), this.___superSubScript, other.___superSubScript, equals, $.ig.IGFormattedTextSettingsFlags.prototype.superSubScript, null);
		this.___superSubScript = $ret5.p0;
		var $ret6 = this._clearIfEquals$1($.ig.Nullable$1.prototype.$type.specialize($.ig.excel.FontUnderlineStyle.prototype.$type), this.___underlineStyle, other.___underlineStyle, equals, $.ig.IGFormattedTextSettingsFlags.prototype.underline, null);
		this.___underlineStyle = $ret6.p0;
		var $ret7 = this._clearIfEquals$1($.ig.excel.WorkbookColorInfo.prototype.$type, this.___foreground, other.___foreground, equals, $.ig.IGFormattedTextSettingsFlags.prototype.foreground, null);
		this.___foreground = $ret7.p0;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearIfEquals(Infragistics.Controls.Grids.Core.IGFormattedTextSettings, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearIfEquals`1(Infragistics.Controls.Grids.Core.IGFormattedTextSettings.T, Infragistics.Controls.Grids.Core.IGFormattedTextSettings.T, System.Boolean, Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags, System.Collections.Generic.IEqualityComparer)" />*/
	_clearIfEquals$1: function ($t, member, other, equals, property, comparer) {
		if ((comparer || $.ig.EqualityComparer$1.prototype.defaultEqualityComparerValue($t)).equalsC(member, other) == equals) {
			this.___propertiesWithValues &= ~property;
			member = $.ig.util.getDefaultValue($t);
		}
		return {
			p0: member
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearIfEquals`1(Infragistics.Controls.Grids.Core.IGFormattedTextSettings.T, Infragistics.Controls.Grids.Core.IGFormattedTextSettings.T, System.Boolean, Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags, System.Collections.Generic.IEqualityComparer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearMatchingNonNullValues(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	_clearMatchingNonNullValues: function (other) {
		this._clearIfEquals(other, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::ClearMatchingNonNullValues(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Equals(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	equals: function (other) {
		if (other.___propertiesWithValues != this.___propertiesWithValues) {
			return false;
		}
		if ($.ig.util.nullableNotEquals(other.___height, this.___height) || $.ig.util.nullableNotEquals(other.___strikeThrough, this.___strikeThrough) || $.ig.util.nullableNotEquals(other.___italic, this.___italic) || $.ig.util.nullableNotEquals(other.___superSubScript, this.___superSubScript) || $.ig.util.nullableNotEquals(other.___underlineStyle, this.___underlineStyle) || $.ig.util.nullableNotEquals(other.___bold, this.___bold)) {
			return false;
		}
		if (!$.ig.Object.prototype.equalsStatic(other.___font, this.___font)) {
			return false;
		}
		if (!$.ig.Object.prototype.equalsStatic(other.___foreground, this.___foreground)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::Equals(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::HasNonDefaultSettings()" />*/
	_hasNonDefaultSettings: function () {
		return this.___propertiesWithValues != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::HasNonDefaultSettings()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::HasProperty(Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags)" />*/
	_hasProperty: function (property) {
		return (property & this.___propertiesWithValues) != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSettings::HasProperty(Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::InitializeDefaults(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	_initializeDefaults: function (source) {
		if (source.___propertiesWithValues != 0) {
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.font)) {
				this._font(source._font());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.bold)) {
				this._bold(source._bold());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.height)) {
				this._height(source._height());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.strikeThrough)) {
				this._strikeThrough(source._strikeThrough());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.superSubScript)) {
				this._superSubScript(source._superSubScript());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.underline)) {
				this._underlineStyle(source._underlineStyle());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.italic)) {
				this._italic(source._italic());
			}
			if (!this._hasProperty($.ig.IGFormattedTextSettingsFlags.prototype.foreground)) {
				this._foreground(source._foreground());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::InitializeDefaults(Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::OnSetField`1(Infragistics.Controls.Grids.Core.IGFormattedTextSettings.T, Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags)" />*/
	_onSetField$1: function ($t, value, property) {
		if ($.ig.EqualityComparer$1.prototype.defaultEqualityComparerValue($t).equalsC(value, $.ig.util.getDefaultValue($t))) {
			this.___propertiesWithValues &= ~property;
		} else {
			this.___propertiesWithValues |= property;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSettings::OnSetField`1(Infragistics.Controls.Grids.Core.IGFormattedTextSettings.T, Infragistics.Controls.Grids.Core.IGFormattedTextSettingsFlags)" />*/
	,
	$type: new $.ig.Type('IGFormattedTextSettings', $.ig.Object.prototype.$type, [$.ig.IEquatable$1.prototype.$type.specialize(-1)])
}, true);

$.ig.IGFormattedTextSettings.prototype.$type.initSelfReferences();

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettings" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextElement" />*/

$.ig.util.defType('IGFormattedTextElement', 'Object', {
	_textSettings: null,
	_start: 0,
	_length: 0,
	init: function () {
		this._textSettings = new $.ig.IGFormattedTextSettings();
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextElement::Contains(System.Int32)" />*/
	contains: function (index) {
		return this._start <= index && index < this._start + this._length;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextElement::Contains(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextElement::HasNonDefaultSettings()" />*/
	hasNonDefaultSettings: function () {
		return this._textSettings._hasNonDefaultSettings();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextElement::HasNonDefaultSettings()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextElement::HasNonDefaultSettings`1(System.Collections.Generic.IEnumerable)" />*/
	hasNonDefaultSettings$1: function ($t, children) {
		var en = children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			if (child.hasNonDefaultSettings()) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextElement::HasNonDefaultSettings`1(System.Collections.Generic.IEnumerable)" />*/
	,
	$type: new $.ig.Type('IGFormattedTextElement', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextRun" />*/

$.ig.util.defType('IGFormattedTextRun', 'IGFormattedTextElement', {
	init: function () {
		$.ig.IGFormattedTextElement.prototype.init.call(this);
	},
	$type: new $.ig.Type('IGFormattedTextRun', $.ig.IGFormattedTextElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextRun" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextSpan" />*/

$.ig.util.defType('IGFormattedTextSpan', 'IGFormattedTextElement', {
	init: function () {
		this._children = new $.ig.List$1($.ig.IGFormattedTextElement.prototype.$type, 0);
		$.ig.IGFormattedTextElement.prototype.init.call(this);
	},
	_children: null,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSpan::HasNonDefaultSettings()" />*/
	hasNonDefaultSettings: function () {
		return $.ig.IGFormattedTextElement.prototype.hasNonDefaultSettings.call(this) || $.ig.IGFormattedTextElement.prototype.hasNonDefaultSettings$1($.ig.IGFormattedTextElement.prototype.$type, this._children);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextSpan::HasNonDefaultSettings()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextSpan Infragistics.Controls.Grids.Core.IGFormattedTextSpan::GetLeafSpan()" />*/
	getLeafSpan: function () {
		if (this._children.count() == 0) {
			return this;
		}
		var last = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, this._children.__inner[this._children.count() - 1]);
		if (last == null) {
			return this;
		}
		return last.getLeafSpan();
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextSpan Infragistics.Controls.Grids.Core.IGFormattedTextSpan::GetLeafSpan()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSpan::RemoveEmptySpans()" />*/
	removeEmptySpans: function () {
		for (var i = this._children.count() - 1; i >= 0; i--) {
			var child = this._children.__inner[i];
			var span = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child);
			if (span != null) {
				span.removeEmptySpans();
				if (span._children.count() == 0) {
					this._children.removeAt(i);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSpan::RemoveEmptySpans()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSpan::SplitRuns(System.Int32, System.Int32)" />*/
	splitRuns: function (start, end) {
		for (var i = 0; i < this._children.count(); i++) {
			var child = this._children.__inner[i];
			if (child.contains(start) || child.contains(end)) {
				var span = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child);
				if (span != null) {
					span.splitRuns(start, end);
				} else {
					var run = $.ig.util.cast($.ig.IGFormattedTextRun.prototype.$type, child);
					$.ig.Debug.prototype.assert(run != null);
					if (run != null) {
						if (run._start < start) {
							var originalLen = run._length;
							run._length = start - run._start;
							var tempRun = new $.ig.IGFormattedTextRun();
							tempRun._start = start;
							tempRun._length = originalLen - run._length;
							tempRun._textSettings._initializeDefaults(run._textSettings);
							run = tempRun;
							i++;
							this._children.insert(i, run);
						}
						if (end < run._start + run._length - 1) {
							var originalLen1 = run._length;
							run._length = end - run._start + 1;
							var tempRun1 = new $.ig.IGFormattedTextRun();
							tempRun1._start = end + 1;
							tempRun1._length = originalLen1 - run._length;
							tempRun1._textSettings._initializeDefaults(run._textSettings);
							run = tempRun1;
							i++;
							this._children.insert(i, run);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextSpan::SplitRuns(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('IGFormattedTextSpan', $.ig.IGFormattedTextElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextSpan" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextParagraph" />*/

$.ig.util.defType('IGFormattedTextParagraph', 'IGFormattedTextSpan', {
	init: function () {
		$.ig.IGFormattedTextSpan.prototype.init.call(this);
	},
	_alignment: $.ig.util.toNullable($.ig.excel.HorizontalTextAlignment.prototype.$type, null),
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextParagraph::HasNonDefaultSettings()" />*/
	hasNonDefaultSettings: function () {
		if ($.ig.IGFormattedTextSpan.prototype.hasNonDefaultSettings.call(this)) {
			return true;
		}
		return $.ig.util.nullableNotEquals(this._alignment, null);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextParagraph::HasNonDefaultSettings()" />*/
	,
	$type: new $.ig.Type('IGFormattedTextParagraph', $.ig.IGFormattedTextSpan.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextParagraph" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument" />*/

$.ig.util.defType('IGFormattedTextDocument', 'IGFormattedTextElement', {
	_children: null,
	_text: null,
	init: function () {
		this._children = new $.ig.List$1($.ig.IGFormattedTextParagraph.prototype.$type, 0);
		this._text = new $.ig.StringBuilder(0);
		$.ig.IGFormattedTextElement.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextDocument::HasNonDefaultSettings()" />*/
	hasNonDefaultSettings: function () {
		return $.ig.IGFormattedTextElement.prototype.hasNonDefaultSettings.call(this) || $.ig.IGFormattedTextElement.prototype.hasNonDefaultSettings$1($.ig.IGFormattedTextParagraph.prototype.$type, this._children);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGFormattedTextDocument::HasNonDefaultSettings()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettings Infragistics.Controls.Grids.Core.IGFormattedTextDocument::GetUniformTextRunSettings()" />*/
	getUniformTextRunSettings: function () {
		var settings = null;
		var $ret = this.getUniformTextRunSettingsImpl(settings, this._children);
		settings = $ret.p0;
		return settings;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextSettings Infragistics.Controls.Grids.Core.IGFormattedTextDocument::GetUniformTextRunSettings()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::GetUniformTextRunSettingsImpl(Infragistics.Controls.Grids.Core.IGFormattedTextSettings, System.Collections.Generic.IEnumerable)" />*/
	getUniformTextRunSettingsImpl: function (settings, children) {
		var en = children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			var run = $.ig.util.cast($.ig.IGFormattedTextRun.prototype.$type, child);
			if (run != null) {
				if (settings == null) {
					settings = new $.ig.IGFormattedTextSettings();
					settings._initializeDefaults(run._textSettings);
				} else {
					settings._clearDifferingNonNullValues(run._textSettings);
				}
			} else {
				var span = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child);
				$.ig.Debug.prototype.assert1(span != null, "Not sure what else we have in here");
				if (span != null) {
					var $ret = this.getUniformTextRunSettingsImpl(settings, span._children);
					settings = $ret.p0;
				}
			}
		}
		return {
			p0: settings
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::GetUniformTextRunSettingsImpl(Infragistics.Controls.Grids.Core.IGFormattedTextSettings, System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachSettings(System.Action)" />*/
	forEachSettings: function (action) {
		action(this._textSettings);
		$.ig.IGFormattedTextDocument.prototype.forEachSettings1(action, this._children);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachSettings(System.Action)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachSettings(System.Action, System.Collections.Generic.IEnumerable)" />*/
	forEachSettings1: function (action, children) {
		var en = children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			action(child._textSettings);
			var span = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child);
			if (span != null) {
				$.ig.IGFormattedTextDocument.prototype.forEachSettings1(action, span._children);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachSettings(System.Action, System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachRun(System.Int32, System.Int32, System.Action)" />*/
	forEachRun: function (start, length, action) {
		$.ig.IGFormattedTextDocument.prototype.forEachRun1(start, length, action, this._children);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachRun(System.Int32, System.Int32, System.Action)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachRun(System.Int32, System.Int32, System.Action, System.Collections.Generic.IEnumerable)" />*/
	forEachRun1: function (start, length, action, children) {
		var foundStart = false;
		var end = start + length - 1;
		var en = children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			if (!foundStart) {
				if (child.contains(start)) {
					foundStart = true;
				}
			}
			if (foundStart) {
				if (end < child._start) {
					return;
				}
				var run = $.ig.util.cast($.ig.IGFormattedTextRun.prototype.$type, child);
				if (run != null) {
					action(run);
				} else {
					var span = $.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child);
					$.ig.Debug.prototype.assert(span != null);
					if (span != null) {
						$.ig.IGFormattedTextDocument.prototype.forEachRun1(start, length, action, span._children);
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ForEachRun(System.Int32, System.Int32, System.Action, System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::RemoveTrailingCrLf()" />*/
	removeTrailingCrLf: function () {
		var sb = this._text;
		var sbLen = sb.length();
		if (sbLen > 0) {
			var en = this._children.getEnumerator();
			while (en.moveNext()) {
				var child = en.current();
				child.removeEmptySpans();
			}
			var leafSpan = this._children.__inner[this._children.count() - 1].getLeafSpan();
			if (leafSpan != null) {
				var run = $.ig.util.cast($.ig.IGFormattedTextRun.prototype.$type, leafSpan._children.__inner[leafSpan._children.count() - 1]);
				$.ig.Debug.prototype.assert(run != null);
				if (run._length > 0) {
					var shouldRemove = false;
					if (sb.item(run._start) == '\r') {
						shouldRemove = run._length == 1 || (run._length == 2 && sb.item(run._start + 1) == '\n');
					} else if (sb.item(run._start) == '\n') {
						shouldRemove = run._length == 1;
					}
					if (shouldRemove) {
						leafSpan._children.removeAt(leafSpan._children.count() - 1);
						sb.remove(sbLen - run._length, run._length);
					} else {
						var end = run._start + run._length - 1;
						if (sb.item(end) == '\r') {
							run._length -= 1;
						} else if (sb.item(end) == '\n' && run._length > 1 && sb.item(end - 1) == '\r') {
							run._length -= 2;
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::RemoveTrailingCrLf()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ResolveTextProperties()" />*/
	resolveTextProperties: function () {
		$.ig.IGFormattedTextDocument.prototype.resolveTextProperties1(this._children, this._textSettings);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ResolveTextProperties()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ResolveTextProperties(System.Collections.Generic.IEnumerable, Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	resolveTextProperties1: function (children, defaultSettings) {
		var en = children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			child._textSettings._initializeDefaults(defaultSettings);
			if ($.ig.util.cast($.ig.IGFormattedTextSpan.prototype.$type, child) !== null) {
				$.ig.IGFormattedTextDocument.prototype.resolveTextProperties1((child)._children, child._textSettings);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::ResolveTextProperties(System.Collections.Generic.IEnumerable, Infragistics.Controls.Grids.Core.IGFormattedTextSettings)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::SplitRuns(System.Int32, System.Int32)" />*/
	splitRuns: function (start, length) {
		var end = start + length - 1;
		var en = this._children.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			if (child.contains(start) || child.contains(end)) {
				child.splitRuns(start, end);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGFormattedTextDocument::SplitRuns(System.Int32, System.Int32)" />*/
	,
	$type: new $.ig.Type('IGFormattedTextDocument', $.ig.IGFormattedTextElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1" />*/

$.ig.util.defType('SpreadsheetCellEditManager$1', 'SpreadsheetCellEditManager', {
	$tEditor: null,
	init: function ($tEditor, spreadsheet) {
		this.$tEditor = $tEditor;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tEditor);
		}
		$.ig.SpreadsheetCellEditManager.prototype.init.call(this, spreadsheet);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	canExecuteCommand: function (command) {
		var $self = this;
		var editor;
		if (!(function () { var $ret = $self.tryGetEditor(editor); editor = $ret.p0; return $ret.ret; }())) {
			return false;
		}
		return this.canExecuteCommandOverride(command, editor);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::CanExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	executeCommand: function (command, canRaiseCommandEvents) {
		var $self = this;
		var editor;
		if (!(function () { var $ret = $self.tryGetEditor(editor); editor = $ret.p0; return $ret.ret; }())) {
			return false;
		}
		switch (command) {
			case $.ig.spreadsheet.SpreadsheetAction.undo:
			case $.ig.spreadsheet.SpreadsheetAction.redo:
				canRaiseCommandEvents = false;
				break;
		}
		if (canRaiseCommandEvents) {
			var commandArgs = new $.ig.SpreadsheetCommandExecutingEventArgs(command, null, editor);
			this.spreadsheet()._onActionExecuting(commandArgs);
			if (commandArgs.cancel()) {
				return true;
			}
		}
		if (!this.executeCommandOverride(command, editor)) {
			$.ig.Debug.prototype.assert1(!canRaiseCommandEvents, "We shouldn't be calling into here for this command as we would have raised the executing but not been able to process it.");
			return false;
		}
		if (canRaiseCommandEvents) {
			this.spreadsheet()._onActionExecuted(new $.ig.SpreadsheetCommandExecutedEventArgs(command, null, editor));
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, System.Boolean)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::Editor()" />*/
	editor: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::Editor()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::CanExecuteCommandOverride(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor)" />*/
	canExecuteCommandOverride: function (command, editor) {
		if (this.spreadsheet().isInEditMode()) {
			switch (command) {
				case $.ig.spreadsheet.SpreadsheetAction.increaseFontSize:
				case $.ig.spreadsheet.SpreadsheetAction.decreaseFontSize:
				case $.ig.spreadsheet.SpreadsheetAction.toggleBold:
				case $.ig.spreadsheet.SpreadsheetAction.toggleDoubleUnderline:
				case $.ig.spreadsheet.SpreadsheetAction.toggleItalic:
				case $.ig.spreadsheet.SpreadsheetAction.toggleStrikeThrough:
				case $.ig.spreadsheet.SpreadsheetAction.toggleSubscript:
				case $.ig.spreadsheet.SpreadsheetAction.toggleSuperscript:
				case $.ig.spreadsheet.SpreadsheetAction.toggleUnderline:
					return true;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::CanExecuteCommandOverride(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::ExecuteCommandOverride(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor)" />*/
	executeCommandOverride: function (command, editor) {
		if (this.spreadsheet().isInEditMode()) {
			var editFont = this.spreadsheet().activeSelectionCellRangeFormat().font();
			switch (command) {
				case $.ig.spreadsheet.SpreadsheetAction.toggleBold:
					editFont._bold$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(editFont._bold$i(), true) ? false : true));
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.toggleItalic:
					editFont._italic$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(editFont._italic$i(), true) ? false : true));
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.toggleStrikeThrough:
					editFont._strikeout$i($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.util.nullableEquals(editFont._strikeout$i(), true) ? false : true));
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.increaseFontSize:
					editFont.height($.ig.SpreadsheetUtilities.prototype.changeFontSize(editFont.height(), true));
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.decreaseFontSize:
					editFont.height($.ig.SpreadsheetUtilities.prototype.changeFontSize(editFont.height(), false));
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.toggleSubscript:
					editFont.superscriptSubscriptStyle(editFont.superscriptSubscriptStyle() == $.ig.excel.FontSuperscriptSubscriptStyle.subscript ? $.ig.excel.FontSuperscriptSubscriptStyle.none : $.ig.excel.FontSuperscriptSubscriptStyle.subscript);
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.toggleSuperscript:
					editFont.superscriptSubscriptStyle(editFont.superscriptSubscriptStyle() == $.ig.excel.FontSuperscriptSubscriptStyle.superscript ? $.ig.excel.FontSuperscriptSubscriptStyle.none : $.ig.excel.FontSuperscriptSubscriptStyle.superscript);
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.toggleDoubleUnderline:
					editFont.underlineStyle($.ig.SpreadsheetUtilities.prototype.toggleDouble(editFont.underlineStyle(), this.spreadsheet()._shouldUseAccountUnderlineForActiveCell()));
					return true;
				case $.ig.spreadsheet.SpreadsheetAction.toggleUnderline:
					editFont.underlineStyle($.ig.SpreadsheetUtilities.prototype.toggleSingle(editFont.underlineStyle(), this.spreadsheet()._shouldUseAccountUnderlineForActiveCell()));
					return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::ExecuteCommandOverride(Infragistics.Controls.Grids.Core.SpreadsheetCommandType, Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::TryGetEditor(Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor)" />*/
	tryGetEditor: function (editor) {
		if (!this.spreadsheet().isInEditMode()) {
			editor = null;
			return {
				ret: false,
				p0: editor
			};
		} else {
			editor = this.editor();
			return {
				ret: editor != null,
				p0: editor
			};
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1::TryGetEditor(Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager.TEditor)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellEditManager$1', $.ig.SpreadsheetCellEditManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditManager`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.TextAnalyzer" />*/

$.ig.util.defType('TextAnalyzer', 'Object', {
	__text: null,
	__prefixLength: 0,
	__selectionLength: 0,
	__suffixLength: 0,
	__prefixText: null,
	__suffixText: null,
	__selectedText: null,
	init: function (text, selectionStart, selectionLength) {
		this.__prefixText = null;
		this.__suffixText = null;
		this.__selectedText = null;
		$.ig.Object.prototype.init.call(this);
		this.__text = text;
		this.__prefixLength = selectionStart;
		this.__suffixLength = Math.max(0, this.textLength() - (selectionStart + selectionLength));
		this.__selectionLength = selectionLength;
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.TextAnalyzer Infragistics.Controls.Grids.Core.TextAnalyzer::FromPrefixAndSuffixLength(System.String, System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	fromPrefixAndSuffixLength: function (text, prefixLength, suffixLength, fallbackPrefixLength, fallbackSuffixLength) {
		var textLength = text.length;
		var isValid = prefixLength + suffixLength <= textLength;
		if (isValid) {
			return new $.ig.TextAnalyzer(text, prefixLength, textLength - suffixLength - prefixLength);
		}
		return new $.ig.TextAnalyzer(text, fallbackPrefixLength, fallbackSuffixLength);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.TextAnalyzer Infragistics.Controls.Grids.Core.TextAnalyzer::FromPrefixAndSuffixLength(System.String, System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::ToString()" />*/
	toString: function () {
		var sb = new $.ig.StringBuilder(0);
		sb.append5("'");
		sb.append5(this.__text);
		sb.append5("' (");
		sb.append5(this.prefixText());
		sb.append5(",");
		sb.append5(this.selectedText());
		sb.append5(",");
		sb.append5(this.suffixText());
		sb.append5(")");
		return sb.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::ToString()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::PrefixLength()" />*/
	prefixLength: function () {
		return this.__prefixLength;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::PrefixLength()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::PrefixText()" />*/
	prefixText: function () {
		if (this.__prefixText == null) {
			if (String.isNullOrEmpty(this.__text)) {
				this.__prefixText = String.empty();
			} else if (this.prefixLength() == 0 || this.prefixLength() > this.textLength()) {
				this.__prefixText = String.empty();
			} else {
				this.__prefixText = this.__text.substr(0, this.prefixLength());
			}
		}
		return this.__prefixText;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::PrefixText()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::SelectedText()" />*/
	selectedText: function () {
		if (this.__selectedText == null) {
			if (String.isNullOrEmpty(this.__text)) {
				this.__selectedText = String.empty();
			} else if (this.selectionLength() == 0 || this.prefixLength() + this.selectionLength() > this.textLength()) {
				this.__selectedText = String.empty();
			} else {
				this.__selectedText = this.__text.substr(this.prefixLength(), this.selectionLength());
			}
		}
		return this.__selectedText;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::SelectedText()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SelectionLength()" />*/
	selectionLength: function () {
		return this.__selectionLength;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SelectionLength()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SelectionOffset()" />*/
	selectionOffset: function () {
		return this.prefixLength();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SelectionOffset()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SuffixLength()" />*/
	suffixLength: function () {
		return this.__suffixLength;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SuffixLength()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SuffixOffset()" />*/
	suffixOffset: function () {
		return Math.max(-1, this.textLength() - this.suffixLength());
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::SuffixOffset()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::SuffixText()" />*/
	suffixText: function () {
		if (this.__suffixText == null) {
			if (String.isNullOrEmpty(this.__text)) {
				this.__suffixText = String.empty();
			} else if (this.suffixLength() == 0 || this.suffixLength() > this.textLength()) {
				this.__suffixText = String.empty();
			} else {
				this.__suffixText = this.__text.substr(this.textLength() - this.suffixLength(), this.suffixLength());
			}
		}
		return this.__suffixText;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.TextAnalyzer::SuffixText()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::TextLength()" />*/
	textLength: function () {
		return this.__text.length;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.TextAnalyzer::TextLength()" />*/
	,
	$type: new $.ig.Type('TextAnalyzer', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.TextAnalyzer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs" />*/

$.ig.util.defType('SpreadsheetActiveCellChangedEventArgs', 'EventArgs', {
	___oldValue: null,
	___newValue: null,
	init: function (oldValue, newValue) {
		this.___oldValue = new $.ig.spreadsheet.SpreadsheetCell();
		this.___newValue = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.EventArgs.prototype.init.call(this);
		this.___oldValue = oldValue;
		this.___newValue = newValue;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs::NewValue()" />*/
	newValue: function () {
		return this.___newValue;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs::NewValue()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs::OldValue()" />*/
	oldValue: function () {
		return this.___oldValue;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs::OldValue()" />*/
	,
	$type: new $.ig.Type('SpreadsheetActiveCellChangedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveCellChangedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs" />*/

$.ig.util.defType('SpreadsheetActivePaneChangedEventArgs', 'EventArgs', {
	___oldValue: null,
	___newValue: null,
	init: function (oldValue, newValue) {
		$.ig.EventArgs.prototype.init.call(this);
		this.___oldValue = oldValue;
		this.___newValue = newValue;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs::NewValue()" />*/
	newValue: function () {
		return this.___newValue;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs::NewValue()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs::OldValue()" />*/
	oldValue: function () {
		return this.___oldValue;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs::OldValue()" />*/
	,
	$type: new $.ig.Type('SpreadsheetActivePaneChangedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetActivePaneChangedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs" />*/

$.ig.util.defType('SpreadsheetActiveWorksheetChangedEventArgs', 'EventArgs', {
	___oldValue: null,
	___newValue: null,
	init: function (oldValue, newValue) {
		$.ig.EventArgs.prototype.init.call(this);
		this.___oldValue = oldValue;
		this.___newValue = newValue;
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs::NewValue()" />*/
	newValue: function () {
		return this.___newValue;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs::NewValue()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs::OldValue()" />*/
	oldValue: function () {
		return this.___oldValue;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs::OldValue()" />*/
	,
	$type: new $.ig.Type('SpreadsheetActiveWorksheetChangedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetActiveWorksheetChangedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs" />*/

$.ig.util.defType('SpreadsheetCommandExecutedEventArgs', 'EventArgs', {
	___command: 0,
	___commandParameter: null,
	___sourceElement: null,
	init: function (command, commandParameter, sourceElement) {
		$.ig.EventArgs.prototype.init.call(this);
		this.___command = command;
		this.___commandParameter = commandParameter;
		this.___sourceElement = sourceElement;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandType Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs::Command()" />*/
	command: function () {
		return this.___command;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandType Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs::Command()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs::CommandParameter()" />*/
	commandParameter: function () {
		return this.___commandParameter;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs::CommandParameter()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs::SourceElement()" />*/
	sourceElement: function () {
		return this.___sourceElement;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs::SourceElement()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCommandExecutedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs" />*/

$.ig.util.defType('SpreadsheetCommandExecutingEventArgs', 'CancelEventArgs', {
	___command: 0,
	___commandParameter: null,
	___sourceElement: null,
	init: function (command, commandParameter, sourceElement) {
		$.ig.CancelEventArgs.prototype.init.call(this, 0);
		this.___command = command;
		this.___commandParameter = commandParameter;
		this.___sourceElement = sourceElement;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandType Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs::Command()" />*/
	command: function () {
		return this.___command;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandType Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs::Command()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs::CommandParameter()" />*/
	commandParameter: function () {
		return this.___commandParameter;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs::CommandParameter()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs::SourceElement()" />*/
	sourceElement: function () {
		return this.___sourceElement;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs::SourceElement()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCommandExecutingEventArgs', $.ig.CancelEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandExecutingEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs" />*/

$.ig.util.defType('SpreadsheetEditModeExitingEventArgs', 'CancelEventArgs', {
	___cell: null,
	___canCancel: false,
	___acceptChanges: false,
	init: function (cell, acceptChanges, canCancel) {
		this.___cell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.CancelEventArgs.prototype.init.call(this, 0);
		this.___cell = cell;
		this.___canCancel = canCancel;
		this.___acceptChanges = acceptChanges;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs::AcceptChanges()" />*/
	acceptChanges: function (value) {
		if (arguments.length === 1) {
			this.___acceptChanges = value;
			return value;
		} else {
			return this.___acceptChanges;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs::AcceptChanges()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs::CanCancel()" />*/
	canCancel: function () {
		return this.___canCancel;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs::CanCancel()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs::Cell()" />*/
	cell: function () {
		return this.___cell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs::Cell()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditModeExitingEventArgs', $.ig.CancelEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitingEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs" />*/

$.ig.util.defType('SpreadsheetEditModeExitedEventArgs', 'EventArgs', {
	___cell: null,
	init: function (cell) {
		this.___cell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.EventArgs.prototype.init.call(this);
		this.___cell = cell;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs::Cell()" />*/
	cell: function () {
		return this.___cell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs::Cell()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditModeExitedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeExitedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs" />*/

$.ig.util.defType('SpreadsheetEditModeEnteringEventArgs', 'CancelEventArgs', {
	___cell: null,
	init: function (cell) {
		this.___cell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.CancelEventArgs.prototype.init.call(this, 0);
		this.___cell = cell;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs::Cell()" />*/
	cell: function () {
		return this.___cell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs::Cell()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditModeEnteringEventArgs', $.ig.CancelEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteringEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs" />*/

$.ig.util.defType('SpreadsheetEditModeEnteredEventArgs', 'EventArgs', {
	___cell: null,
	init: function (cell) {
		this.___cell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.EventArgs.prototype.init.call(this);
		this.___cell = cell;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs::Cell()" />*/
	cell: function () {
		return this.___cell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs::Cell()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditModeEnteredEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeEnteredEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs" />*/

$.ig.util.defType('SpreadsheetEditModeValidationErrorEventArgs', 'EventArgs', {
	init: function (cell, rule, mustExitEditMode) {
		this._cell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.EventArgs.prototype.init.call(this);
		this.action($.ig.SpreadsheetEditModeValidationErrorAction.prototype.showPrompt);
		this.cell(cell);
		this.validationRule(rule);
		this.canStayInEditMode(!mustExitEditMode);
	},
	_action: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorAction Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::Action()" />*/
	action: function (value) {
		if (arguments.length === 1) {
			this._action = value;
			return value;
		} else {
			return this._action;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorAction Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::Action()" />*/
	,
	_canStayInEditMode: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::CanStayInEditMode()" />*/
	canStayInEditMode: function (value) {
		if (arguments.length === 1) {
			this._canStayInEditMode = value;
			return value;
		} else {
			return this._canStayInEditMode;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::CanStayInEditMode()" />*/
	,
	_cell: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::Cell()" />*/
	cell: function (value) {
		if (arguments.length === 1) {
			this._cell = value;
			return value;
		} else {
			return this._cell;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::Cell()" />*/
	,
	_validationRule: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.DataValidationRule Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::ValidationRule()" />*/
	validationRule: function (value) {
		if (arguments.length === 1) {
			this._validationRule = value;
			return value;
		} else {
			return this._validationRule;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.DataValidationRule Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs::ValidationRule()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditModeValidationErrorEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditModeValidationErrorEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs" />*/

$.ig.util.defType('SpreadsheetEditRangePasswordNeededEventArgs', 'CancelEventArgs', {
	___editRanges: null,
	___relatedWorksheets: null,
	___ranges: null,
	init: function (editRanges, relatedWorksheets) {
		$.ig.CancelEventArgs.prototype.init.call(this, 0);
		this.___relatedWorksheets = relatedWorksheets;
		this.___editRanges = editRanges;
		this.___ranges = new $.ig.ReadOnlyCollection$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 1, this.___editRanges);
	},
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::Ranges()" />*/
	ranges: function () {
		return this.___ranges;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::Ranges()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::UnprotectHelper(System.Object)" />*/
	_unprotectHelper: function (password) {
		$.ig.Debug.prototype.assert1(password == null, "We don't support password verification in JS currently");
		var unlockedRanges = new $.ig.List$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
		this._unprotectImpl(password, this.___editRanges, unlockedRanges);
		if (unlockedRanges.count() > 0) {
			var allRanges = new $.ig.List$1($.ig.excel.WorksheetProtectedRange.prototype.$type, 0);
			$.ig.ExcelUtils.prototype.forEach$1($.ig.excel.Worksheet.prototype.$type, this.___relatedWorksheets, function (ws) { allRanges.addRange(ws.protection().allowedEditRanges()); });
			this._unprotectImpl(password, allRanges, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::UnprotectHelper(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::UnprotectImpl(System.Object, System.Collections.Generic.IEnumerable, System.Collections.Generic.List)" />*/
	_unprotectImpl: function (password, rangesToUnlock, unlockedRanges) {
		$.ig.Debug.prototype.assert(typeof password === 'string' || $.ig.util.cast($.ig.SecureString.prototype.$type, password) !== null || password == null);
		var passwordAsSecureString = $.ig.util.cast($.ig.SecureString.prototype.$type, password);
		var en = rangesToUnlock.getEnumerator();
		while (en.moveNext()) {
			var range = en.current();
			if (range.isProtected()) {
				range.unprotect();
				if (unlockedRanges != null && !range.isProtected()) {
					unlockedRanges.add(range);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::UnprotectImpl(System.Object, System.Collections.Generic.IEnumerable, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::GetRangesArray()" />*/
	_getRangesArray: function () {
		return $.ig.Enumerable.prototype.toArray$1($.ig.excel.WorksheetProtectedRange.prototype.$type, this.ranges());
	}
	/*<EndMethod Name=" Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::GetRangesArray()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::Unprotect()" />*/
	unprotect: function () {
		this._unprotectHelper(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs::Unprotect()" />*/
	,
	$type: new $.ig.Type('SpreadsheetEditRangePasswordNeededEventArgs', $.ig.CancelEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEditRangePasswordNeededEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs" />*/

$.ig.util.defType('SpreadsheetHyperlinkExecutingEventArgs', 'CancelEventArgs', {
	___hyperlink: null,
	init: function (hyperlink) {
		$.ig.CancelEventArgs.prototype.init.call(this, 0);
		this.___hyperlink = hyperlink;
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs::Hyperlink()" />*/
	hyperlink: function () {
		return this.___hyperlink;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs::Hyperlink()" />*/
	,
	_workingDirectory: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs::WorkingDirectory()" />*/
	workingDirectory: function (value) {
		if (arguments.length === 1) {
			this._workingDirectory = value;
			return value;
		} else {
			return this._workingDirectory;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs::WorkingDirectory()" />*/
	,
	$type: new $.ig.Type('SpreadsheetHyperlinkExecutingEventArgs', $.ig.CancelEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHyperlinkExecutingEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs" />*/

$.ig.util.defType('SpreadsheetSelectionChangedEventArgs', 'EventArgs', {
	___pane: null,
	init: function (pane) {
		$.ig.EventArgs.prototype.init.call(this);
		this.___pane = pane;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs::Pane()" />*/
	pane: function () {
		return this.___pane;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs::Pane()" />*/
	,
	$type: new $.ig.Type('SpreadsheetSelectionChangedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionChangedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs" />*/

$.ig.util.defType('SpreadsheetUserPromptDisplayingEventArgs', 'EventArgs', {
	___promptInfo: null,
	init: function (promptInfo) {
		$.ig.EventArgs.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(promptInfo);
		this.___promptInfo = promptInfo;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::CanCancel()" />*/
	canCancel: function () {
		return this.___promptInfo.allowCancel();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::CanCancel()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Cancel()" />*/
	cancel: function (value) {
		if (arguments.length === 1) {
			this.___promptInfo.cancel(value);
			return value;
		} else {
			return this.___promptInfo.cancel();
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Cancel()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Caption()" />*/
	caption: function (value) {
		if (arguments.length === 1) {
			this.___promptInfo.caption(value);
			return value;
		} else {
			return this.___promptInfo.caption();
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Caption()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::DisplayMessage()" />*/
	displayMessage: function (value) {
		if (arguments.length === 1) {
			this.___promptInfo.displayMessage(value);
			return value;
		} else {
			return this.___promptInfo.displayMessage();
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::DisplayMessage()" />*/
	,
	/*<BeginProperty Name="System.Exception Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Exception()" />*/
	exception: function () {
		return this.___promptInfo.exception();
	}
	/*<EndProperty Name="System.Exception Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Exception()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Message()" />*/
	message: function (value) {
		if (arguments.length === 1) {
			this.___promptInfo.message(value);
			return value;
		} else {
			return this.___promptInfo.message();
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Message()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Trigger()" />*/
	trigger: function () {
		return this.___promptInfo.trigger();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs::Trigger()" />*/
	,
	$type: new $.ig.Type('SpreadsheetUserPromptDisplayingEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptDisplayingEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetWorkbookDirtiedEventArgs" />*/

$.ig.util.defType('SpreadsheetWorkbookDirtiedEventArgs', 'EventArgs', {
	init: function () {
		$.ig.EventArgs.prototype.init.call(this);
	},
	$type: new $.ig.Type('SpreadsheetWorkbookDirtiedEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetWorkbookDirtiedEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PredefinedShapes" />*/

$.ig.util.defType('PredefinedShapes', 'Object', {
	__loadedShapes: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.__loadedShapes = new $.ig.Dictionary$2(String, $.ig.ShapeGeometry.prototype.$type, 0);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.PredefinedShapes Infragistics.Controls.Grids.Core.PredefinedShapes::Instance()" />*/
	instance: function () {
		if ($.ig.PredefinedShapes.prototype.__instance == null) {
			{
				if ($.ig.PredefinedShapes.prototype.__instance == null) {
					var instance = new $.ig.PredefinedShapes();
					$.ig.PredefinedShapes.prototype.__instance = instance;
				}
			}
		}
		return $.ig.PredefinedShapes.prototype.__instance;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.PredefinedShapes Infragistics.Controls.Grids.Core.PredefinedShapes::Instance()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ShapeGeometry Infragistics.Controls.Grids.Core.PredefinedShapes::GetShape(System.String)" />*/
	getShape: function (name) {
		var $self = this;
		if (!this.__loadedShapes.containsKey(name)) {
			this.loadShapes(null);
		}
		var geo;
		if ((function () { var $ret = $self.__loadedShapes.tryGetValue(name, geo); geo = $ret.p1; return $ret.ret; }())) {
			return geo;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ShapeGeometry Infragistics.Controls.Grids.Core.PredefinedShapes::GetShape(System.String)" />*/
	,
	/*<BeginMethod Name="System.IO.Stream Infragistics.Controls.Grids.Core.PredefinedShapes::GetPresetShapeDefinitionStream()" />*/
	getPresetShapeDefinitionStream: function () {
		var unzippedData = new $.ig.MemoryStream(0);
		{
			var presetZipStream = $.ig.spreadsheet.$embeddedFiles.get("Infragistics.Controls.Grids.presetShapeDefinitions.xml.gz");
			try {
				if (presetZipStream == null) {
					$.ig.ExcelUtils.prototype.debugFail("Cannot find the presetShapeDefinitions.xml.gz stream.");
					return null;
				}
				try {
					{
						var unzipStream = new $.ig.GZipStream(presetZipStream, $.ig.CompressionMode.prototype.decompress);
						try {
							var buffer = new Array(4096);
							while (true) {
								var bytesRead = unzipStream.read(buffer, 0, buffer.length);
								if (bytesRead == 0) {
									break;
								}
								unzippedData.write(buffer, 0, bytesRead);
							}
						}
						finally {
							if (unzipStream != null) {
								unzipStream.dispose();
							}
						}
					}
				}
				catch (ex) {
					$.ig.ExcelUtils.prototype.debugFail("Exception when loading presetShapeDefinitions.xml.gz file (this may be expected on SL): " + ex.toString());
				}
			}
			finally {
				if (presetZipStream != null) {
					presetZipStream.dispose();
				}
			}
		}
		unzippedData.position(0);
		return unzippedData;
	}
	/*<EndMethod Name="System.IO.Stream Infragistics.Controls.Grids.Core.PredefinedShapes::GetPresetShapeDefinitionStream()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::LoadShapes(System.Collections.Generic.ICollection)" />*/
	loadShapes: function (names) {
		var $self = this;
		{
			var stream = $.ig.PredefinedShapes.prototype.getPresetShapeDefinitionStream();
			try {
				var reader = new $.ig.XmlTextReader(1, stream);
				reader.moveToContent();
				var skipped = false;
				while (skipped || reader.read()) {
					skipped = false;
					if (reader.nodeType() == $.ig.XmlNodeType.prototype.element && !reader.isEmptyElement()) {
						var name = reader.name();
						if (names != null && !names.contains(name)) {
							skipped = true;
							reader.skip();
							continue;
						}
						var shape = new $.ig.CT_CustomGeometry2D();
						this.parseElement$1($.ig.CT_CustomGeometry2D.prototype.$type, shape, reader, function (s) {
							switch (reader.name()) {
								case "avLst":
									shape.avLst(new $.ig.CT_GeomGuideList());
									$self.parsePoints(reader, shape.avLst());
									return true;
								case "gdLst":
									shape.gdLst(new $.ig.CT_GeomGuideList());
									$self.parsePoints(reader, shape.gdLst());
									return true;
								case "pathLst":
									shape.pathLst(new $.ig.CT_Path2DList());
									$self.parsePathList(reader, shape.pathLst());
									return true;
								default:
								case "ahLst":
								case "cxnLst":
									return reader.isEmptyElement();
								case "rect":
									shape.rect((function () {
										var $ret = new $.ig.CT_GeomRect();
										$ret.l($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("l")));
										$ret.t($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("t")));
										$ret.r($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("r")));
										$ret.b($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("b")));
										return $ret;
									}()));
									return reader.isEmptyElement();
							}
						});
						this.__loadedShapes.item(name, new $.ig.ShapeGeometry(name, shape));
					}
				}
			}
			finally {
				if (stream != null) {
					stream.dispose();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::LoadShapes(System.Collections.Generic.ICollection)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParseElement`1(Infragistics.Controls.Grids.Core.PredefinedShapes.T, System.Xml.XmlReader, System.Func)" />*/
	parseElement$1: function ($t, item, reader, callback) {
		if (reader.isEmptyElement()) {
			return;
		}
		reader.moveToElement();
		var startingDepth = reader.depth();
		var skipped = false;
		while (startingDepth <= reader.depth() && (skipped || reader.read())) {
			skipped = false;
			if (reader.nodeType() == $.ig.XmlNodeType.prototype.element) {
				if (!callback(item)) {
					skipped = true;
					reader.skip();
				}
			}
			if (reader.nodeType() == $.ig.XmlNodeType.prototype.endElement) {
				if (reader.depth() == startingDepth) {
					break;
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParseElement`1(Infragistics.Controls.Grids.Core.PredefinedShapes.T, System.Xml.XmlReader, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePath(System.Xml.XmlReader, System.Collections.Generic.List)" />*/
	parsePath: function (reader, commands) {
		var $self = this;
		this.parseElement$1($.ig.List$1.prototype.$type.specialize($.ig.IPath2DCommand.prototype.$type), commands, reader, function (i) {
			switch (reader.localName()) {
				case "close":
					i.add(new $.ig.CT_Path2DClose());
					return true;
				case "arcTo":
					var a = new $.ig.CT_Path2DArcTo();
					a.wR($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("wR")));
					a.hR($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("hR")));
					a.stAng($.ig.ST_AdjAngle.prototype.parse(reader.getAttribute1("stAng")));
					a.swAng($.ig.ST_AdjAngle.prototype.parse(reader.getAttribute1("swAng")));
					i.add(a);
					return reader.isEmptyElement();
			}
			var pts = new $.ig.List$1($.ig.CT_AdjPoint2D.prototype.$type, 0);
			$self.parsePoints1(reader, pts);
			switch (reader.localName()) {
				case "moveTo":
					var m = new $.ig.CT_Path2DMoveTo();
					m.pt(pts.__inner[0]);
					i.add(m);
					return true;
				case "lnTo":
					var l = new $.ig.CT_Path2DLineTo();
					l.pt(pts.__inner[0]);
					i.add(l);
					return true;
				case "quadBezTo":
					var q = new $.ig.CT_Path2DQuadBezierTo();
					q.pt1(pts.__inner[0]);
					q.pt2(pts.__inner[1]);
					i.add(q);
					return true;
				case "cubicBezTo":
					var c = new $.ig.CT_Path2DCubicBezierTo();
					c.pt1(pts.__inner[0]);
					c.pt2(pts.__inner[1]);
					c.pt3(pts.__inner[2]);
					i.add(c);
					return true;
				default: return reader.isEmptyElement();
			}
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePath(System.Xml.XmlReader, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePathList(System.Xml.XmlReader, Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DList)" />*/
	parsePathList: function (reader, paths) {
		var $self = this;
		this.parseElement$1($.ig.CT_Path2DList.prototype.$type, paths, reader, function (p) {
			if (reader.localName() == "path") {
				var path = new $.ig.CT_Path2D();
				path.extrusionOk($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.PredefinedShapes.prototype.readAttribute(reader, "extrusionOk", true)));
				path.fill($.ig.util.toNullable($.ig.ST_PathFillMode.prototype.$type, $.ig.util.getEnumValue($.ig.Enum.prototype.parse($.ig.ST_PathFillMode.prototype.$type, (function ($t) { return $t != null ? $t : "norm"; }(reader.getAttribute1("fill"))), false))));
				path.stroke($.ig.util.toNullable($.ig.Boolean.prototype.$type, $.ig.PredefinedShapes.prototype.readAttribute(reader, "stroke", true)));
				var w = reader.getAttribute1("w");
				if (!String.isNullOrEmpty(w)) {
					path.w($.ig.util.toNullable($.ig.ST_PositiveCoordinate.prototype.$type, new $.ig.ST_PositiveCoordinate(1, $.ig.XmlConvert.prototype.toInt32(w))));
				}
				var h = reader.getAttribute1("h");
				if (!String.isNullOrEmpty(h)) {
					path.h($.ig.util.toNullable($.ig.ST_PositiveCoordinate.prototype.$type, new $.ig.ST_PositiveCoordinate(1, $.ig.XmlConvert.prototype.toInt32(h))));
				}
				$self.parsePath(reader, path.commands());
				p.path().add(path);
				return true;
			}
			return false;
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePathList(System.Xml.XmlReader, Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePoints(System.Xml.XmlReader, System.Collections.Generic.List)" />*/
	parsePoints1: function (reader, points) {
		this.parseElement$1($.ig.List$1.prototype.$type.specialize($.ig.CT_AdjPoint2D.prototype.$type), points, reader, function (i) {
			if (reader.localName() == "pt") {
				var pt = new $.ig.CT_AdjPoint2D();
				pt.x($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("x")));
				pt.y($.ig.ST_AdjCoordinate.prototype.parse(reader.getAttribute1("y")));
				i.add(pt);
				return true;
			} else {
				return reader.isEmptyElement();
			}
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePoints(System.Xml.XmlReader, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePoints(System.Xml.XmlReader, Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList)" />*/
	parsePoints: function (reader, guides) {
		this.parseElement$1($.ig.CT_GeomGuideList.prototype.$type, guides, reader, function (g) {
			if (reader.localName() == "gd") {
				var gd = new $.ig.CT_GeomGuide();
				gd.name(reader.getAttribute1("name"));
				gd.fmla(reader.getAttribute1("fmla"));
				g.gd().add(gd);
				return true;
			}
			return reader.isEmptyElement();
		});
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PredefinedShapes::ParsePoints(System.Xml.XmlReader, Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.PredefinedShapes::ReadAttribute(System.Xml.XmlReader, System.String, System.Boolean)" />*/
	readAttribute: function (reader, name, defaultValue) {
		var attrib = reader.getAttribute1(name);
		return attrib != null ? $.ig.XmlConvert.prototype.toBoolean(attrib) : defaultValue;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.PredefinedShapes::ReadAttribute(System.Xml.XmlReader, System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Controls.Grids.Core.PredefinedShapes::ReadAttribute(System.Xml.XmlReader, System.String, System.Int64)" />*/
	readAttribute1: function (reader, name, defaultValue) {
		var attrib = reader.getAttribute1(name);
		return attrib != null ? $.ig.XmlConvert.prototype.toInt64(attrib) : defaultValue;
	}
	/*<EndMethod Name="System.Int64 Infragistics.Controls.Grids.Core.PredefinedShapes::ReadAttribute(System.Xml.XmlReader, System.String, System.Int64)" />*/
	,
	$type: new $.ig.Type('PredefinedShapes', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PredefinedShapes" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGeometry" />*/

$.ig.util.defType('ShapeGeometry', 'Object', {
	__geometry: null,
	__name: null,
	__avGuides: null,
	__gdGuides: null,
	init: function (name, geometry) {
		$.ig.Object.prototype.init.call(this);
		this.__name = name;
		this.__geometry = geometry;
		this.__avGuides = new $.ig.List$1($.ig.ShapeGuide.prototype.$type, 0);
		this.__gdGuides = new $.ig.List$1($.ig.ShapeGuide.prototype.$type, 0);
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.ShapeGeometry::Build`1(Infragistics.Controls.Grids.Core.ShapeGeometry.T, System.Double, System.Double, Infragistics.Documents.Excel.WorksheetShape, System.Action)" />*/
	build$1: function ($t, context, widthInTwips, heightInTwips, shape, builder) {
		if (shape == null || $.ig.util.nullableEquals(shape._type2007(), null)) {
			return $.ig.Rect.prototype.empty();
		}
		var geo = $.ig.PredefinedShapes.prototype.instance().getShape($.ig.ST_ShapeType.prototype.$getName(shape._type2007().value()));
		if (geo == null) {
			return $.ig.Rect.prototype.empty();
		}
		var fill = $.ig.SpreadsheetUtilities.prototype.getShapeFill(shape);
		var outline = $.ig.SpreadsheetUtilities.prototype.getShapeOutline(shape);
		var customAvList = $.ig.SpreadsheetUtilities.prototype.getShapeCustomAvList(shape);
		var worksheet = shape.worksheet();
		var widthInEmus = $.ig.ExcelUtils.prototype.twipsToEMU(widthInTwips);
		var heightInEmus = $.ig.ExcelUtils.prototype.twipsToEMU(heightInTwips);
		var variables = new $.ig.ShapeGuideVariables();
		variables._width = widthInEmus;
		variables._height = heightInEmus;
		if (geo.__gdGuides.count() == 0 && geo.__avGuides.count() == 0) {
			geo.initializeGuides();
		}
		$.ig.ShapeGeometry.prototype.addGuideValues(variables, geo.__avGuides);
		if (customAvList != null) {
			var customGuides = new $.ig.List$1($.ig.ShapeGuide.prototype.$type, 0);
			$.ig.ShapeGeometry.prototype.createGuides(customAvList, customGuides);
			$.ig.ShapeGeometry.prototype.addGuideValues(variables, customGuides);
		}
		$.ig.ShapeGeometry.prototype.addGuideValues(variables, geo.__gdGuides);
		if (geo.__geometry.pathLst() != null) {
			var pathList = geo.__geometry.pathLst().path();
			for (var i = 0; i < pathList.count(); i++) {
				var path = pathList.__inner[i];
				var scaleX = $.ig.ST_PositiveCoordinate.prototype.l_op_Inequality_Lifted(path.w(), $.ig.util.toNullable($.ig.ST_PositiveCoordinate.prototype.$type, null)) ? $.ig.intDivide(widthInEmus, $.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_Int64_ST_PositiveCoordinate(path.w().value())) : 1;
				var scaleY = $.ig.ST_PositiveCoordinate.prototype.l_op_Inequality_Lifted(path.h(), $.ig.util.toNullable($.ig.ST_PositiveCoordinate.prototype.$type, null)) ? $.ig.intDivide(heightInEmus, $.ig.ST_PositiveCoordinate.prototype.l_op_Implicit_Int64_ST_PositiveCoordinate(path.h().value())) : 1;
				var actualFill = fill;
				var secondFill = null;
				var actualOutline = outline;
				if ($.ig.util.nullableEquals(path.stroke(), false)) {
					actualOutline = null;
				}
				var pathFill = path.fill();
				switch (!$.ig.util.nullableIsNull(pathFill) ? pathFill.value() : $.ig.ST_PathFillMode.prototype.norm) {
					case $.ig.ST_PathFillMode.prototype.none:
						actualFill = null;
						break;
					case $.ig.ST_PathFillMode.prototype.norm: break;
					case $.ig.ST_PathFillMode.prototype.darken:
						secondFill = $.ig.ShapeGeometry.prototype._darkenFill;
						break;
					case $.ig.ST_PathFillMode.prototype.darkenLess:
						secondFill = $.ig.ShapeGeometry.prototype._darkenLessFill;
						break;
					case $.ig.ST_PathFillMode.prototype.lighten:
						secondFill = $.ig.ShapeGeometry.prototype._lightenFill;
						break;
					case $.ig.ST_PathFillMode.prototype.lightenLess:
						secondFill = $.ig.ShapeGeometry.prototype._lightenLessFill;
						break;
				}
				builder(context, worksheet, path, variables, scaleX, scaleY, actualFill, actualOutline, secondFill);
			}
		}
		var textRect;
		if (geo.__geometry.rect() == null) {
			textRect = $.ig.Rect.prototype.empty();
		} else {
			var shapeWithText = $.ig.util.cast($.ig.excel.WorksheetShapeWithText.prototype.$type, shape);
			if (shapeWithText == null || !shapeWithText._hasText()) {
				textRect = $.ig.Rect.prototype.empty();
			} else {
				var text = shapeWithText.text();
				var rect = geo.__geometry.rect();
				var l = $.ig.ShapeGeometry.prototype.getLogicalPixels(variables, rect.l());
				var t = $.ig.ShapeGeometry.prototype.getLogicalPixels(variables, rect.t());
				var r = $.ig.ShapeGeometry.prototype.getLogicalPixels(variables, rect.r());
				var b = $.ig.ShapeGeometry.prototype.getLogicalPixels(variables, rect.b());
				var txtProps = $.ig.util.cast($.ig.CT_TextBodyProperties.prototype.$type, text._roundTrip2007Properties());
				if (txtProps != null) {
					var mL = $.ig.ShapeGeometry.prototype.getLogicalPixels1(txtProps.leftInset(), 9.6);
					var mT = $.ig.ShapeGeometry.prototype.getLogicalPixels1(txtProps.topInset(), 4.8);
					var mR = $.ig.ShapeGeometry.prototype.getLogicalPixels1(txtProps.rightInset(), 9.6);
					var mB = $.ig.ShapeGeometry.prototype.getLogicalPixels1(txtProps.bottomInset(), 4.8);
					l += mL;
					r -= mR;
					t += mT;
					b -= mB;
				}
				if (r <= l || b <= t) {
					textRect = $.ig.Rect.prototype.empty();
				} else {
					textRect = new $.ig.Rect(0, l, t, r - l, b - t);
				}
			}
		}
		return textRect;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.ShapeGeometry::Build`1(Infragistics.Controls.Grids.Core.ShapeGeometry.T, System.Double, System.Double, Infragistics.Documents.Excel.WorksheetShape, System.Action)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetDegrees(Infragistics.Controls.Grids.Core.ShapeGuideVariables, Infragistics.Documents.OfficeOpenXml.Core.ST_AdjAngle)" />*/
	getDegrees: function (variables, angle) {
		if ($.ig.util.nullableNotEquals(angle.guideName(), null)) {
			return variables.getValue(angle.guideName().value()._value) / $.ig.ShapeGuideFormula.prototype.unitsPerDegree;
		}
		if ($.ig.ST_Angle.prototype.l_op_Inequality_Lifted(angle.angle(), $.ig.util.toNullable($.ig.ST_Angle.prototype.$type, null))) {
			return angle.angle().value().toDegrees();
		}
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetDegrees(Infragistics.Controls.Grids.Core.ShapeGuideVariables, Infragistics.Documents.OfficeOpenXml.Core.ST_AdjAngle)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetLogicalPixels(Infragistics.Controls.Grids.Core.ShapeGuideVariables, Infragistics.Documents.OfficeOpenXml.Core.ST_AdjCoordinate)" />*/
	getLogicalPixels: function (variables, coordinate) {
		return $.ig.ShapeGeometry.prototype.getTwips(variables, coordinate) / 15;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetLogicalPixels(Infragistics.Controls.Grids.Core.ShapeGuideVariables, Infragistics.Documents.OfficeOpenXml.Core.ST_AdjCoordinate)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetLogicalPixels(System.Nullable, System.Double)" />*/
	getLogicalPixels1: function (coord, defaultValue) {
		if ($.ig.util.nullableNotEquals(coord, null)) {
			var emus = coord.value().getEmus();
			emus = $.ig.ExcelUtils.prototype.eMUToTwips(emus);
			return emus / 15;
		}
		return defaultValue;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetLogicalPixels(System.Nullable, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetTwips(Infragistics.Controls.Grids.Core.ShapeGuideVariables, Infragistics.Documents.OfficeOpenXml.Core.ST_AdjCoordinate)" />*/
	getTwips: function (variables, coordinate) {
		if ($.ig.util.nullableNotEquals(coordinate.guideName(), null)) {
			var value = variables.getValue(coordinate.guideName().value()._value);
			value = $.ig.ExcelUtils.prototype.eMUToTwips($.ig.truncate(value));
			return value;
		}
		if ($.ig.util.nullableNotEquals(coordinate.coordinate(), null)) {
			return coordinate.coordinate().value().getTwips();
		}
		return 0;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometry::GetTwips(Infragistics.Controls.Grids.Core.ShapeGuideVariables, Infragistics.Documents.OfficeOpenXml.Core.ST_AdjCoordinate)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometry::AddGuideValues(Infragistics.Controls.Grids.Core.ShapeGuideVariables, System.Collections.Generic.List)" />*/
	addGuideValues: function (variables, sourceGuides) {
		var en = sourceGuides.getEnumerator();
		while (en.moveNext()) {
			var gd = en.current();
			var v = gd.getValue(variables);
			variables._variables.item(gd._name, gd);
			variables.setCachedValue(gd._name, v);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometry::AddGuideValues(Infragistics.Controls.Grids.Core.ShapeGuideVariables, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometry::CreateGuides(Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList, System.Collections.Generic.List)" />*/
	createGuides: function (list, guides) {
		if (list != null) {
			var en = list.gd().getEnumerator();
			while (en.moveNext()) {
				var item = en.current();
				guides.add($.ig.ShapeGuide.prototype.create(item.name(), item.fmla()));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometry::CreateGuides(Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList, System.Collections.Generic.List)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometry::InitializeGuides()" />*/
	initializeGuides: function () {
		$.ig.ShapeGeometry.prototype.createGuides(this.__geometry.avLst(), this.__avGuides);
		$.ig.ShapeGeometry.prototype.createGuides(this.__geometry.gdLst(), this.__gdGuides);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometry::InitializeGuides()" />*/
	,
	$type: new $.ig.Type('ShapeGeometry', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGeometry" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuideVariables" />*/

$.ig.util.defType('ShapeGuideVariables', 'Object', {
	init: function () {
		this._variables = new $.ig.Dictionary$2(String, $.ig.ShapeGuide.prototype.$type, 0);
		this.__cachedValues = new $.ig.Dictionary$2(String, Number, 0);
		this._paramStack = new $.ig.Stack$1(String);
		$.ig.Object.prototype.init.call(this);
	},
	_width: 0,
	_height: 0,
	_variables: null,
	__cachedValues: null,
	_paramStack: null,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideVariables::GetValue(System.String)" />*/
	getValue: function (paramName) {
		var $self = this;
		var value;
		if (!(function () { var $ret = $self.__cachedValues.tryGetValue(paramName, value); value = $ret.p1; return $ret.ret; }())) {
			if (this._paramStack.contains(paramName)) {
				$.ig.Debug.prototype.fail("Recursive formula?");
				return 0;
			}
			try {
				this._paramStack.push(paramName);
				value = this.getValueImpl(paramName);
				this.__cachedValues.item(paramName, value);
			}
			finally {
				this._paramStack.pop();
			}
		}
		return value;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideVariables::GetValue(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGuideVariables::SetCachedValue(System.String, System.Double)" />*/
	setCachedValue: function (name, value) {
		this.__cachedValues.item(name, value);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGuideVariables::SetCachedValue(System.String, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideVariables::GetValueImpl(System.String)" />*/
	getValueImpl: function (paramName) {
		var $self = this;
		switch (paramName) {
			case "w":
			case "r":
				return this._width;
			case "h":
			case "b":
				return this._height;
			case "l": return 0;
			case "t": return 0;
			case "3cd4": return 16200000;
			case "3cd8": return 8100000;
			case "5cd8": return 13500000;
			case "7cd8": return 18900000;
			case "cd2": return 10800000;
			case "cd4": return 5400000;
			case "cd8": return 2700000;
			case "hc": return this._width / 2;
			case "hd2": return this._height / 2;
			case "hd3": return this._height / 3;
			case "hd4": return this._height / 4;
			case "hd5": return this._height / 5;
			case "hd6": return this._height / 6;
			case "hd8": return this._height / 8;
			case "ls": return Math.max(this._width, this._height);
			case "ss": return Math.min(this._width, this._height);
			case "ssd2": return this.getValue("ss") / 2;
			case "ssd4": return this.getValue("ss") / 4;
			case "ssd6": return this.getValue("ss") / 6;
			case "ssd8": return this.getValue("ss") / 8;
			case "vc": return this._height / 2;
			case "wd2": return this._width / 2;
			case "wd4": return this._width / 4;
			case "wd5": return this._width / 5;
			case "wd6": return this._width / 6;
			case "wd8": return this._width / 8;
			case "wd10": return this._width / 10;
			case "dx": return this._width;
			case "dy": return this._height;
			default:
				var refGuide;
				if (!(function () { var $ret = $self._variables.tryGetValue(paramName, refGuide); refGuide = $ret.p1; return $ret.ret; }())) {
					if (paramName.length > 2) {
						if (paramName.startsWith("wd") || paramName.startsWith("hd")) {
							var factor;
							if ((function () { var $ret = $.ig.util.tryParseInt32_1(paramName.substr(2), factor); factor = $ret.p1; return $ret.ret; }())) {
								var b = paramName.startsWith("wd") ? this._width : this._height;
								return b / factor;
							}
						} else if (paramName.startsWith("ssd")) {
							var factor1;
							if ((function () { var $ret = $.ig.util.tryParseInt32_1(paramName.substr(3), factor1); factor1 = $ret.p1; return $ret.ret; }())) {
								return this.getValue("ss") / factor1;
							}
						}
					}
					return parseFloat(paramName);
				}
				return refGuide.getValue(this);
		}
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideVariables::GetValueImpl(System.String)" />*/
	,
	$type: new $.ig.Type('ShapeGuideVariables', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuideVariables" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder" />*/

$.ig.util.defType('ShapeGeometryPathBuilder', 'Object', {
	_lastX: 0,
	_lastY: 0,
	_scaleX: 0,
	_scaleY: 0,
	init: function (scaleX, scaleY) {
		$.ig.Object.prototype.init.call(this);
		this._scaleX = scaleX;
		this._scaleY = scaleY;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::ArcTo(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	arcTo: function (centerX, centerY, radiusX, radiusY, startAngle, sweepAngle) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::ArcTo(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::CloseFigure()" />*/
	closeFigure: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::CloseFigure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::CubicBezierTo(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	cubicBezierTo: function (x1, y1, x2, y2, x3, y3) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::CubicBezierTo(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::LineTo(System.Double, System.Double)" />*/
	lineTo: function (x, y) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::LineTo(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::MoveTo(System.Double, System.Double)" />*/
	moveTo: function (x, y) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::MoveTo(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::QuadBezierTo(System.Double, System.Double, System.Double, System.Double)" />*/
	quadBezierTo: function (cpX, cpY, epX, epY) {
		var x1 = this._lastX + 2 / 3 * (cpX - this._lastX);
		var y1 = this._lastY + 2 / 3 * (cpY - this._lastY);
		var x2 = epX + 2 / 3 * (cpX - epX);
		var y2 = epY + 2 / 3 * (cpY - epY);
		this.cubicBezierTo(x1, y1, x2, y2, epX, epY);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::QuadBezierTo(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::UnstretchAngle(System.Double, System.Double, System.Double)" />*/
	unstretchAngle: function (angle, radiusX, radiusY) {
		var TwoPi = Math.PI * 2;
		var radians = Math.PI * angle / 180;
		if (Math.abs(Math.cos(radians)) < 1E-05 || Math.abs(Math.sin(radians)) < 1E-05) {
			return radians;
		}
		var stretchedAngle = Math.atan2(Math.sin(radians) / Math.abs(radiusY), Math.cos(radians) / Math.abs(radiusX));
		var rotationOffset = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(radians / TwoPi)) - $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(stretchedAngle / TwoPi));
		return stretchedAngle + rotationOffset * TwoPi;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::UnstretchAngle(System.Double, System.Double, System.Double)" />*/
	,
	visitCT_Path2DArcTo: function (value, argument) {
		return this._visitCT_Path2DArcTo$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DArcTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DArcTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	_visitCT_Path2DArcTo$i: function (value, argument) {
		var wr = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.wR());
		var hr = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.hR());
		var stAng = $.ig.ShapeGeometry.prototype.getDegrees(argument, value.stAng());
		var swAng = $.ig.ShapeGeometry.prototype.getDegrees(argument, value.swAng());
		var sweepAngle = swAng / 180 * Math.PI;
		var startAngle = $.ig.ShapeGeometryPathBuilder.prototype.unstretchAngle(stAng, wr, hr);
		var centerX = this._lastX - wr * Math.cos(startAngle);
		var centerY = this._lastY - hr * Math.sin(startAngle);
		this.arcTo(centerX, centerY, wr, hr, stAng, swAng);
		var endAngle = $.ig.ShapeGeometryPathBuilder.prototype.unstretchAngle(stAng + swAng, wr, hr);
		var xEnd = centerX + wr * Math.cos(endAngle);
		var yEnd = centerY + hr * Math.sin(endAngle);
		this._lastX = xEnd;
		this._lastY = yEnd;
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DArcTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DArcTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	visitCT_Path2DClose: function (value, argument) {
		return this._visitCT_Path2DClose$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DClose(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DClose, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	_visitCT_Path2DClose$i: function (value, argument) {
		this.closeFigure();
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DClose(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DClose, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	visitCT_Path2DCubicBezierTo: function (value, argument) {
		return this._visitCT_Path2DCubicBezierTo$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DCubicBezierTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DCubicBezierTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	_visitCT_Path2DCubicBezierTo$i: function (value, argument) {
		var x1 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt1().x());
		var y1 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt1().y());
		var x2 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt2().x());
		var y2 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt2().y());
		var x3 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt3().x());
		var y3 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt3().y());
		this.cubicBezierTo(x1, y1, x2, y2, x3, y3);
		this._lastX = x3;
		this._lastY = y3;
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DCubicBezierTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DCubicBezierTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	visitCT_Path2DLineTo: function (value, argument) {
		return this._visitCT_Path2DLineTo$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DLineTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DLineTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	_visitCT_Path2DLineTo$i: function (value, argument) {
		var x = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt().x());
		var y = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt().y());
		this.lineTo(x, y);
		this._lastX = x;
		this._lastY = y;
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DLineTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DLineTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	visitCT_Path2DMoveTo: function (value, argument) {
		return this._visitCT_Path2DMoveTo$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DMoveTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DMoveTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	_visitCT_Path2DMoveTo$i: function (value, argument) {
		var x = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt().x());
		var y = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt().y());
		this.moveTo(x, y);
		this._lastX = x;
		this._lastY = y;
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DMoveTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DMoveTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	visitCT_Path2DQuadBezierTo: function (value, argument) {
		return this._visitCT_Path2DQuadBezierTo$i.apply(this, arguments);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DQuadBezierTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DQuadBezierTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	_visitCT_Path2DQuadBezierTo$i: function (value, argument) {
		var x1 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt1().x());
		var y1 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt1().y());
		var x2 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt2().x());
		var y2 = $.ig.ShapeGeometry.prototype.getLogicalPixels(argument, value.pt2().y());
		this.quadBezierTo(x1, y1, x2, y2);
		this._lastX = x2;
		this._lastY = y2;
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder::VisitCT_Path2DQuadBezierTo(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DQuadBezierTo, Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	$type: new $.ig.Type('ShapeGeometryPathBuilder', $.ig.Object.prototype.$type, [$.ig.IPath2DCommandVisitor$2.prototype.$type.specialize($.ig.ShapeGuideVariables.prototype.$type, $.ig.Boolean.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGeometryPathBuilder" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuide" />*/

$.ig.util.defType('ShapeGuide', 'Object', {
	_name: null,
	init: function (name) {
		$.ig.Object.prototype.init.call(this);
		this._name = name;
	},
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.ShapeGuide Infragistics.Controls.Grids.Core.ShapeGuide::Create(System.String, System.String)" />*/
	create: function (name, fmla) {
		var parts = $.ig.util.stringSplit(fmla, [ ' ' ], $.ig.StringSplitOptions.prototype.removeEmptyEntries);
		var formulaName = parts[0];
		switch (parts.length) {
			case 2:
				{
					if (formulaName == "val") {
						var dbl;
						if ((function () { var $ret = $.ig.util.tryParseNumber(parts[1], dbl); dbl = $ret.p1; return $ret.ret; }())) {
							return new $.ig.ShapeGuide_ConstantShapeGuide(name, dbl);
						}
					}
					return new $.ig.ShapeGuide_ShapeGuide1(name, parts[1], $.ig.ShapeGuideFormula.prototype.getFormula1(formulaName));
				}
			case 3:
				{
					return new $.ig.ShapeGuide_ShapeGuide2(name, parts[1], parts[2], $.ig.ShapeGuideFormula.prototype.getFormula2(formulaName));
				}
			case 4:
				{
					return new $.ig.ShapeGuide_ShapeGuide3(name, parts[1], parts[2], parts[3], $.ig.ShapeGuideFormula.prototype.getFormula3(formulaName));
				}
			case 0:
			case 1:
				{
					$.ig.Debug.prototype.fail("Unexpected parameter count - fmla:" + fmla);
					return new $.ig.ShapeGuide_ConstantShapeGuide(name, NaN);
				}
			default:
				{
					return new $.ig.ShapeGuide_ShapeGuide3(name, parts[1], parts[2], parts[3], $.ig.ShapeGuideFormula.prototype.getFormula3(formulaName));
				}
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.ShapeGuide Infragistics.Controls.Grids.Core.ShapeGuide::Create(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	getValue: function (variables) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	$type: new $.ig.Type('ShapeGuide', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuide" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ConstantShapeGuide" />*/

$.ig.util.defType('ShapeGuide_ConstantShapeGuide', 'ShapeGuide', {
	_value: 0,
	init: function (name, value) {
		$.ig.ShapeGuide.prototype.init.call(this, name);
		this._value = value;
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ConstantShapeGuide::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	getValue: function (variables) {
		return this._value;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ConstantShapeGuide::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	$type: new $.ig.Type('ShapeGuide_ConstantShapeGuide', $.ig.ShapeGuide.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ConstantShapeGuide" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide1" />*/

$.ig.util.defType('ShapeGuide_ShapeGuide1', 'ShapeGuide', {
	__param1: null,
	__formula: null,
	init: function (name, param1, formula) {
		$.ig.ShapeGuide.prototype.init.call(this, name);
		this.__param1 = param1;
		this.__formula = formula;
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide1::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	getValue: function (variables) {
		var v1 = variables.getValue(this.__param1);
		return this.__formula(v1);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide1::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	$type: new $.ig.Type('ShapeGuide_ShapeGuide1', $.ig.ShapeGuide.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide2" />*/

$.ig.util.defType('ShapeGuide_ShapeGuide2', 'ShapeGuide', {
	__param1: null,
	__param2: null,
	__formula: null,
	init: function (name, param1, param2, formula) {
		$.ig.ShapeGuide.prototype.init.call(this, name);
		this.__param1 = param1;
		this.__param2 = param2;
		this.__formula = formula;
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide2::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	getValue: function (variables) {
		var v1 = variables.getValue(this.__param1);
		var v2 = variables.getValue(this.__param2);
		return this.__formula(v1, v2);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide2::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	$type: new $.ig.Type('ShapeGuide_ShapeGuide2', $.ig.ShapeGuide.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide2" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide3" />*/

$.ig.util.defType('ShapeGuide_ShapeGuide3', 'ShapeGuide', {
	__param1: null,
	__param2: null,
	__param3: null,
	__formula: null,
	init: function (name, param1, param2, param3, formula) {
		$.ig.ShapeGuide.prototype.init.call(this, name);
		this.__param1 = param1;
		this.__param2 = param2;
		this.__param3 = param3;
		this.__formula = formula;
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide3::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	getValue: function (variables) {
		var v1 = variables.getValue(this.__param1);
		var v2 = variables.getValue(this.__param2);
		var v3 = variables.getValue(this.__param3);
		return this.__formula(v1, v2, v3);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide3::GetValue(Infragistics.Controls.Grids.Core.ShapeGuideVariables)" />*/
	,
	$type: new $.ig.Type('ShapeGuide_ShapeGuide3', $.ig.ShapeGuide.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuide_ShapeGuide3" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeGuideFormula" />*/

$.ig.util.defType('ShapeGuideFormula', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Func Infragistics.Controls.Grids.Core.ShapeGuideFormula::GetFormula1(System.String)" />*/
	getFormula1: function (name) {
		var t1 = name;
		L0: while (true) {
			switch (t1) {
				case "abs": return $.ig.ShapeGuideFormula.prototype.abs;
				case "sqrt": return $.ig.ShapeGuideFormula.prototype.sqrt;
				case "val": return $.ig.ShapeGuideFormula.prototype.val;
				default:
					$.ig.Debug.prototype.fail("Unrecognized formula:" + name);
					t1 = "val";
					continue L0;
			}
			break;
		}
	}
	/*<EndMethod Name="System.Func Infragistics.Controls.Grids.Core.ShapeGuideFormula::GetFormula1(System.String)" />*/
	,
	/*<BeginMethod Name="System.Func Infragistics.Controls.Grids.Core.ShapeGuideFormula::GetFormula2(System.String)" />*/
	getFormula2: function (name) {
		switch (name) {
			case "at2": return $.ig.ShapeGuideFormula.prototype.at2;
			case "cos": return $.ig.ShapeGuideFormula.prototype.cos;
			case "max": return $.ig.ShapeGuideFormula.prototype.max;
			case "min": return $.ig.ShapeGuideFormula.prototype.min;
			case "sin": return $.ig.ShapeGuideFormula.prototype.sin;
			case "tan": return $.ig.ShapeGuideFormula.prototype.tan;
			default:
				$.ig.Debug.prototype.fail("Unrecognized formula:" + name);
				return null;
		}
	}
	/*<EndMethod Name="System.Func Infragistics.Controls.Grids.Core.ShapeGuideFormula::GetFormula2(System.String)" />*/
	,
	/*<BeginMethod Name="System.Func Infragistics.Controls.Grids.Core.ShapeGuideFormula::GetFormula3(System.String)" />*/
	getFormula3: function (name) {
		switch (name) {
			case "*/": return $.ig.ShapeGuideFormula.prototype.multiplyDivide;
			case "+-": return $.ig.ShapeGuideFormula.prototype.addSubtract;
			case "+/": return $.ig.ShapeGuideFormula.prototype.addDivide;
			case "?:": return $.ig.ShapeGuideFormula.prototype.ifElse;
			case "cat2": return $.ig.ShapeGuideFormula.prototype.cat2;
			case "mod": return $.ig.ShapeGuideFormula.prototype.mod;
			case "pin": return $.ig.ShapeGuideFormula.prototype.pin;
			case "sat2": return $.ig.ShapeGuideFormula.prototype.sat2;
			default:
				$.ig.Debug.prototype.fail("Unrecognized formula:" + name);
				return null;
		}
	}
	/*<EndMethod Name="System.Func Infragistics.Controls.Grids.Core.ShapeGuideFormula::GetFormula3(System.String)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideFormula::ToRads(System.Double)" />*/
	toRads: function (sixyThousandsOfDegrees) {
		return sixyThousandsOfDegrees / $.ig.ShapeGuideFormula.prototype.unitsPerDegree / 180 * Math.PI;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideFormula::ToRads(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideFormula::FromRads(System.Double)" />*/
	fromRads: function (radians) {
		return radians * 180 / Math.PI * $.ig.ShapeGuideFormula.prototype.unitsPerDegree;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.ShapeGuideFormula::FromRads(System.Double)" />*/
	,
	$type: new $.ig.Type('ShapeGuideFormula', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeGuideFormula" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont" />*/

$.ig.util.defType('RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont', 'PropertyChangeNotifier', {
	___bold: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___colorInfo: null,
	___height: 0,
	___italic: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___name: null,
	___strikeout: $.ig.util.toNullable($.ig.Boolean.prototype.$type, null),
	___superscriptSubscriptStyle: 0,
	___underlineStyle: 0,
	___format: null,
	init: function (format) {
		this.___bold = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___italic = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		this.___strikeout = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		$.ig.PropertyChangeNotifier.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(format);
		this.___format = format;
	},
	bold: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._bold$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._bold$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Bold()" />*/
	_bold$i: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), function (f, v) { f._fontInternal()._setBold(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontBold);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $self.___bold); $self.___bold = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Bold()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::ColorInfo()" />*/
	colorInfo: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.excel.WorkbookColorInfo.prototype.$type, function (f, v) { f._fontInternal()._setColorInfo(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontColorInfo);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.excel.WorkbookColorInfo.prototype.$type, $self.___colorInfo); $self.___colorInfo = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Height()" />*/
	height: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.Number.prototype.$type, function (f, v) { f._fontInternal()._setHeight(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontHeight);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.Number.prototype.$type, $self.___height); $self.___height = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Height()" />*/
	,
	italic: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._italic$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._italic$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Italic()" />*/
	_italic$i: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), function (f, v) { f._fontInternal()._setItalic(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontItalic);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $self.___italic); $self.___italic = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Italic()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1(String, function (f, v) { f._fontInternal()._setName(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontName);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1(String, $self.___name); $self.___name = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Name()" />*/
	,
	strikeout: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._strikeout$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._strikeout$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Strikeout()" />*/
	_strikeout$i: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), function (f, v) { f._fontInternal()._setStrikeout(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontStrikeout);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.Nullable$1.prototype.$type.specialize($.ig.Boolean.prototype.$type), $self.___strikeout); $self.___strikeout = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::Strikeout()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::SuperscriptSubscriptStyle()" />*/
	superscriptSubscriptStyle: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, function (f, v) { f._fontInternal()._setSuperscriptSubscriptStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontSuperscriptSubscriptStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.excel.FontSuperscriptSubscriptStyle.prototype.$type, $self.___superscriptSubscriptStyle); $self.___superscriptSubscriptStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::SuperscriptSubscriptStyle()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::UnderlineStyle()" />*/
	underlineStyle: function (value) {
		if (arguments.length === 1) {
			this.___format._setField$1($.ig.excel.FontUnderlineStyle.prototype.$type, function (f, v) { f._fontInternal()._setUnderlineStyle(v, true, $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, f._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.alwaysSendChangeNotifications : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior); }, value, $.ig.CellFormatValue.prototype.fontUnderlineStyle);
			return value;
		} else {
			var $self = this;
			return (function () { var $ret = $self.___format._getField$1($.ig.excel.FontUnderlineStyle.prototype.$type, $self.___underlineStyle); $self.___underlineStyle = $ret.p0; return $ret.ret; }());
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.FontUnderlineStyle Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::UnderlineStyle()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	setFontFormatting: function (source) {
		this.___format._setField$1($.ig.excel.IWorkbookFont.prototype.$type, function (f, v) { f.font().setFontFormatting(v); }, source, $.ig.CellFormatValue.prototype.fontFormattingProperties);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::SetFontFormattingImpl(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	_setFontFormattingImpl: function (source) {
		$.ig.CoreUtilities.prototype.validateNotNull1(source, "source");
		this.___bold = source._bold$i();
		this.___colorInfo = source.colorInfo();
		this.___height = source.height();
		this.___italic = source._italic$i();
		this.___name = source.name();
		this.___strikeout = source._strikeout$i();
		this.___superscriptSubscriptStyle = source.superscriptSubscriptStyle();
		this.___underlineStyle = source.underlineStyle();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont::SetFontFormattingImpl(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	$type: new $.ig.Type('RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont', $.ig.PropertyChangeNotifier.prototype.$type, [$.ig.excel.IWorkbookFont.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_RangeWorksheetCellFormatFont" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat" />*/

$.ig.util.defType('RangeWorksheetCellFormatBase_EmptyFormat', 'RangeWorksheetCellFormatBase', {
	init: function () {
		$.ig.RangeWorksheetCellFormatBase.prototype.init.call(this);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::Workbook()" />*/
	_workbook: function () {
		return null;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::Workbook()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.IWorksheetCellFormat Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::GetResolvedFormat()" />*/
	_getResolvedFormat: function () {
		return $_1(this);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.IWorksheetCellFormat Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::GetResolvedFormat()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	_setBorders: function (borders, borderColor, borderStyle) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::SetField`1(System.Action, Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat.T, Infragistics.Documents.Excel.CellFormatValue)" />*/
	_setField$1: function ($t, setter, value, property) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat::SetField`1(System.Action, Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat.T, Infragistics.Documents.Excel.CellFormatValue)" />*/
	,
	$type: new $.ig.Type('RangeWorksheetCellFormatBase_EmptyFormat', $.ig.RangeWorksheetCellFormatBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat" />*/

$.ig.spreadsheet.SpreadsheetCellRangeFormat = $.ig.util.defType('spreadsheet.SpreadsheetCellRangeFormat', 'PropertyChangeNotifierExtended', {
	___format: null,
	___getRanges: null,
	___fontOverride: null,
	init: function (format, getRanges) {
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(format);
		$.ig.CoreUtilities.prototype.validateNotNull(getRanges);
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.RangeWorksheetCellFormatBase.prototype.$type, this.___format, format, this, true);
		this.___format = $ret.p0;
		this.___getRanges = getRanges;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		if (sender == this.___format) {
			this.onPropertyChanged(property);
		}
		$.ig.PropertyChangeNotifierExtended.prototype.onSubObjectPropertyChanged.call(this, sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Alignment()" />*/
	alignment: function (value) {
		if (arguments.length === 1) {
			this.___format.alignment(value);
			return value;
		} else {
			return this.___format.alignment();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.HorizontalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Alignment()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Fill()" />*/
	fill: function (value) {
		if (arguments.length === 1) {
			this.___format.fill(value);
			return value;
		} else {
			return this.___format.fill();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Fill()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Font()" />*/
	font: function () {
		return $_0(this.___fontOverride || this.___format.font());
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.IWorkbookFont Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Font()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::FormatString()" />*/
	formatString: function (value) {
		if (arguments.length === 1) {
			this.___format.formatString(value);
			return value;
		} else {
			return this.___format.formatString();
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::FormatString()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Indent()" />*/
	indent: function (value) {
		if (arguments.length === 1) {
			this.___format.indent(value);
			return value;
		} else {
			return this.___format.indent();
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Indent()" />*/
	,
	locked: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._locked$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._locked$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Locked()" />*/
	_locked$i: function (value) {
		if (arguments.length === 1) {
			this.___format._locked$i(value);
			return value;
		} else {
			return this.___format._locked$i();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Locked()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Rotation()" />*/
	rotation: function (value) {
		if (arguments.length === 1) {
			this.___format.rotation(value);
			return value;
		} else {
			return this.___format.rotation();
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Rotation()" />*/
	,
	shrinkToFit: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._shrinkToFit$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._shrinkToFit$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::ShrinkToFit()" />*/
	_shrinkToFit$i: function (value) {
		if (arguments.length === 1) {
			this.___format._shrinkToFit$i(value);
			return value;
		} else {
			return this.___format._shrinkToFit$i();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::ShrinkToFit()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Style()" />*/
	style: function (value) {
		if (arguments.length === 1) {
			this.___format.style(value);
			return value;
		} else {
			return this.___format.style();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookStyle Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::Style()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::VerticalAlignment()" />*/
	verticalAlignment: function (value) {
		if (arguments.length === 1) {
			this.___format.verticalAlignment(value);
			return value;
		} else {
			return this.___format.verticalAlignment();
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.VerticalCellAlignment Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::VerticalAlignment()" />*/
	,
	wrapText: function (value) {
		if (arguments.length === 1) {
			arguments[0] = $.ig.util.wrapNullable($.ig.Boolean.prototype.$type, arguments[0]);
			this._wrapText$i.apply(this, arguments);
			return value;
		} else {
			return $.ig.util.unwrapNullable(this._wrapText$i.apply(this, arguments));
		}
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::WrapText()" />*/
	_wrapText$i: function (value) {
		if (arguments.length === 1) {
			this.___format._wrapText$i(value);
			return value;
		} else {
			return this.___format._wrapText$i();
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::WrapText()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	setBorders: function (borders, borderColor, borderStyle) {
		this.___format._setBorders(borders, borderColor, borderStyle);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::SetBorders(Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::SetFontOverride(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	_setFontOverride: function (font) {
		if (font != this.___fontOverride) {
			this.___fontOverride = font;
			this.onPropertyChanged("Font");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat::SetFontOverride(Infragistics.Documents.Excel.IWorkbookFont)" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetCellRangeFormat', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRangeFormat" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer" />*/

$.ig.util.defType('SpreadsheetHeaderBackgroundLayer', 'SpreadsheetRendererElementLayer$1', {
	___observer: null,
	init: function (rowOrColumn, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, rowOrColumn, view, $.ig.PredefinedSpreadsheetLayers.prototype.cellBackgrounds());
		this.___observer = new $.ig.SpreadsheetHeaderBackgroundObserver(rowOrColumn, this._invalidateRender.runOn(this));
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.background;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		this.___observer.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, rect, elementDpiOffset) {
		$.ig.SpreadsheetRenderUtilities.prototype.drawHeaderBackground(this._viewModel(), g, dpi, rect, elementDpiOffset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel()._sheetPaneOwner().renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer::RenderCache()" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderBackgroundLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver" />*/

$.ig.util.defType('SpreadsheetItemLayerObserver', 'Object', {
	___listener: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetItemLayerObserver.prototype.$type, this, $.ig.SpreadsheetItemLayerObserver.prototype._onSubObjectPropertyChanged, false);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::Hook(Infragistics.ISupportPropertyChangeNotifications)" />*/
	_hook: function (item) {
		$.ig.SpreadsheetUtilities.prototype.addListener(item, this.___listener, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::Hook(Infragistics.ISupportPropertyChangeNotifications)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver, System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::Unhook(Infragistics.ISupportPropertyChangeNotifications)" />*/
	_unhook: function (item) {
		$.ig.SpreadsheetUtilities.prototype.removeListener(item, this.___listener);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver::Unhook(Infragistics.ISupportPropertyChangeNotifications)" />*/
	,
	$type: new $.ig.Type('SpreadsheetItemLayerObserver', $.ig.Object.prototype.$type, [$.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetItemLayerObserver" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionLayerObserver" />*/

$.ig.util.defType('SpreadsheetScrollRegionLayerObserver', 'SpreadsheetItemLayerObserver', {
	___scrollRegion: null,
	init: function (scrollRegion) {
		$.ig.SpreadsheetItemLayerObserver.prototype.init.call(this);
		this.___scrollRegion = scrollRegion;
	},
	$type: new $.ig.Type('SpreadsheetScrollRegionLayerObserver', $.ig.SpreadsheetItemLayerObserver.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionLayerObserver" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver" />*/

$.ig.util.defType('SpreadsheetHeaderBackgroundObserver', 'SpreadsheetScrollRegionLayerObserver', {
	___invalidate: null,
	init: function (rowOrColumn, invalidate) {
		$.ig.SpreadsheetScrollRegionLayerObserver.prototype.init.call(this, rowOrColumn);
		this._hook(rowOrColumn);
		this.___invalidate = invalidate;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver::Dispose()" />*/
	dispose: function () {
		this._unhook(this.___scrollRegion);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this.___scrollRegion._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this.___scrollRegion._actualItemPositions()) {
					isDirty = true;
				} else if (this.___scrollRegion._isSelectedItemsSource(sender)) {
					isDirty = true;
				}
				break;
			case "ActiveSelection":
			case "HotTrackedIndex":
			case "ActualItemPositions":
			case "SelectionMode":
			case "ResourceProvider":
				if (sender == this.___scrollRegion) {
					isDirty = true;
				}
				break;
			case "ResourceVersion":
				if (sender == this.___scrollRegion._resourceProvider()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this.___invalidate();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged2: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderBackgroundObserver', $.ig.SpreadsheetScrollRegionLayerObserver.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderBackgroundObserver" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer" />*/

$.ig.util.defType('SpreadsheetHeaderGridlineLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.gridlines());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetHeaderGridlineLayer.prototype.$type, this, $.ig.SpreadsheetHeaderGridlineLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.borders;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var rowOrColumn = this._viewModel();
		var offsets = rowOrColumn._getRelativeItemPositions(true, true);
		var count = offsets.length;
		var isRow = rowOrColumn._isRowHeader();
		var resourceProvider = rowOrColumn._resourceProvider();
		var renderCache = rowOrColumn._sheetPaneOwner().renderCache();
		var penDpi = rowOrColumn._pixelSizeX();
		var penStyle = $.ig.CellBorderPen.prototype.thin;
		var pen = isRow ? $.ig.SpreadsheetResourceId.prototype.rowHeaderBorder : $.ig.SpreadsheetResourceId.prototype.columnHeaderBorder;
		var selectedPen = isRow ? $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsBorder : $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsBorder;
		var fullySelectedPen = isRow ? $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedBorder : $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedBorder;
		var hotTrackPen = isRow ? $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackBorder : $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackBorder;
		var hotTrackIndex = rowOrColumn._hotTrackedIndex();
		var penThickness = $.ig.SpreadsheetUtilities.prototype.getPenThickness($.ig.CellBorderPen.prototype.thin, rowOrColumn._pixelSizeX());
		if (count > 0) {
			var halfPenThickness = penThickness / 2;
			var isVerticalLines = !rowOrColumn._isRowHeader();
			var hasVisibleSelection = rowOrColumn._hasAnyVisibleSelection();
			var itemPositions = rowOrColumn._actualItemPositions();
			var itemCount = itemPositions.count();
			var offsetX = elementDpiOffset.__x;
			var offsetY = elementDpiOffset.__y;
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var twoPixelSize = pixelSize * 2;
			var pens = new Array(count);
			var previousState = $.ig.SpreadsheetHeaderState.prototype.normal;
			for (var i = 0; i < count - 1; i++) {
				var state = rowOrColumn._getHeaderState(itemPositions.__inner[i]._index());
				var stateToUse = state < previousState ? previousState : state;
				var penToUse;
				switch (stateToUse) {
					default:
					case $.ig.SpreadsheetHeaderState.prototype.normal:
						penToUse = pen;
						break;
					case $.ig.SpreadsheetHeaderState.prototype.hasCellsWithSelection:
						penToUse = selectedPen;
						break;
					case $.ig.SpreadsheetHeaderState.prototype.isSelected:
						penToUse = fullySelectedPen;
						break;
					case $.ig.SpreadsheetHeaderState.prototype.isHotTracked:
					case $.ig.SpreadsheetHeaderState.prototype.isHotTrackedSelected:
						penToUse = hotTrackPen;
						break;
				}
				pens[i] = penToUse;
				previousState = state;
			}
			if (count > 0) {
				pens[count - 1] = pens[count - 2];
			}
			if (isVerticalLines) {
				var xFactor = halfPenThickness - offsetX;
				var yFactor = -offsetY;
				var y1 = renderRect.y() - yFactor;
				var y2 = dpi.snapUp(renderRect.bottom() - halfPenThickness) - yFactor;
				var extraX = $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
				for (var i1 = 0; i1 < count; i1++) {
					var x;
					if ((i1 < itemCount && rowOrColumn._isPreviousItemHidden(i1, true)) || i1 == itemCount && rowOrColumn._isNextItemHidden(i1 - 1, true)) {
						x = dpi.snapUp(renderRect.x() + extraX + offsets[i1] - twoPixelSize) - xFactor;
						g.drawLine(penStyle, pens[i1], penDpi, x, y1, x, y2);
						x = dpi.snapUp(renderRect.x() + extraX + offsets[i1] + twoPixelSize) - xFactor;
					} else {
						x = dpi.snapUp(renderRect.x() + extraX + offsets[i1]) - xFactor;
					}
					g.drawLine(penStyle, pens[i1], penDpi, x, y1, x, y2);
				}
				var y = dpi.snapUp(renderRect.bottom()) - (halfPenThickness - offsetY);
				g.drawLine(penStyle, pen, penDpi, dpi.snapUp(renderRect.x()) - (halfPenThickness - offsetX), y, dpi.snapUp(renderRect.x() + offsets[count - 1]) - offsetX + halfPenThickness, y);
			} else {
				var xFactor1 = -offsetX;
				var yFactor1 = halfPenThickness - offsetY;
				var x1 = renderRect.x() - xFactor1;
				var x2 = dpi.snapUp(renderRect.right() - halfPenThickness) - xFactor1;
				var extraY = $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
				for (var i2 = 0; i2 < count; i2++) {
					var y3;
					if ((i2 < itemCount && rowOrColumn._isPreviousItemHidden(i2, true)) || i2 == itemCount && rowOrColumn._isNextItemHidden(i2 - 1, true)) {
						y3 = dpi.snapUp(renderRect.y() + extraY + offsets[i2] - twoPixelSize) - yFactor1;
						g.drawLine(penStyle, pens[i2], penDpi, x1, y3, x2, y3);
						y3 = dpi.snapUp(renderRect.y() + extraY + offsets[i2] + twoPixelSize) - yFactor1;
					} else {
						y3 = dpi.snapUp(renderRect.y() + extraY + offsets[i2]) - yFactor1;
					}
					g.drawLine(penStyle, pens[i2], penDpi, x1, y3, x2, y3);
				}
				var x3 = dpi.snap(renderRect.right()) - (halfPenThickness - offsetX);
				g.drawLine(penStyle, pen, penDpi, x3, dpi.snapUp(renderRect.y()) - (halfPenThickness - offsetY), x3, dpi.snapUp(renderRect.y() + offsets[count - 1]) - offsetY + halfPenThickness);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel()._sheetPaneOwner().renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this._viewModel()._actualItemPositions()) {
					isDirty = true;
				} else if (this._viewModel()._isSelectedItemsSource(sender)) {
					isDirty = true;
				}
				break;
			case "Offset":
				if (sender == this._viewModel()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "PreviousVisibleItemIndex":
			case "NextVisibleItemIndex":
			case "HotTrackedIndex":
			case "ActualItemPositions":
			case "SelectionMode":
			case "ResourceProvider":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
			case "ResourceVersion":
				if (sender == this._viewModel()._resourceProvider()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderGridlineLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderGridlineLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer" />*/

$.ig.util.defType('SpreadsheetHeaderSelectionLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	___adjacentRowColumn: null,
	___hasSingleSelection: false,
	init: function (rowOrColumn, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, rowOrColumn, view, $.ig.PredefinedSpreadsheetLayers.prototype.selection());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetHeaderSelectionLayer.prototype.$type, this, $.ig.SpreadsheetHeaderSelectionLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(rowOrColumn, this.___listener, true);
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::AdjustRectForClip(System.Windows.Rect)" />*/
	_adjustRectForClip: function (elementRect) {
		var isColumnHeader = !this._viewModel()._isRowHeader();
		var pixelX = this._viewModel()._pixelSizeX();
		var pixelY = this._viewModel()._pixelSizeY();
		if (!isColumnHeader) {
			elementRect.width(elementRect.width() + pixelX);
		} else {
			elementRect.height(elementRect.height() + pixelY);
		}
		return elementRect;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::AdjustRectForClip(System.Windows.Rect)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.background;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, rect, elementDpiOffset) {
		var rowOrColumn = this._viewModel();
		if (rowOrColumn._hasAnyVisibleSelection() && rowOrColumn._selectionMode() != $.ig.excel.WorksheetProtectedSelectionMode.noCells) {
			var zoom = rowOrColumn._zoomLevel();
			var brush = $.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorderInHeader;
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var xFactor = -elementDpiOffset.__x;
			var yFactor = -elementDpiOffset.__y;
			var isVertical = rowOrColumn._isRowHeader();
			var left = rect.x();
			var top = rect.y();
			var right = rect.right() - pixelSize / 2;
			var bottom = rect.bottom() - pixelSize / 2;
			var itemPositions = rowOrColumn._actualItemPositions();
			var selectionRanges = rowOrColumn._activeSelection().cellRanges();
			var hasSingleSelection = selectionRanges.count() == 1;
			var extra = $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
			if (isVertical) {
				top += extra;
			} else {
				left += extra;
			}
			left = dpi.snapUp(left) - xFactor;
			top = dpi.snapUp(top) - yFactor;
			right = dpi.snapUp(right) - xFactor;
			bottom = dpi.snapUp(bottom) - yFactor;
			if (isVertical) {
				left = right - pixelSize * 2;
			} else {
				top = bottom - pixelSize * 2;
			}
			var skipDefaultRendering = false;
			if (hasSingleSelection) {
				var firstSelection = $.ig.Enumerable.prototype.first$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selectionRanges);
				var adjacentRowColumn = rowOrColumn._adjacentRowColumn();
				if (adjacentRowColumn != null) {
					if (isVertical) {
						if (adjacentRowColumn.startIndex() > firstSelection.firstColumn() && adjacentRowColumn.startIndex() <= firstSelection.lastColumn()) {
							skipDefaultRendering = true;
						} else {
							top = rowOrColumn._getRelativeOffset1(firstSelection.firstRow(), true, true) * zoom + rect.y() + extra;
							bottom = rowOrColumn._getRelativeOffset1(firstSelection.lastRow(), false, true) * zoom + rect.y() + extra;
							var ExtraOutOfView = 100;
							if (top < -ExtraOutOfView) {
								top = -ExtraOutOfView;
							}
							if (bottom > rect.bottom() + ExtraOutOfView) {
								bottom = rect.bottom() + ExtraOutOfView;
							}
							top = dpi.snapUp(top) - yFactor;
							bottom = dpi.snapUp(bottom) - yFactor;
							top -= pixelSize;
							if (adjacentRowColumn.startIndex() == firstSelection.firstColumn()) {
								top -= pixelSize;
								bottom += pixelSize;
							}
						}
					} else {
						if (adjacentRowColumn.startIndex() > firstSelection.firstRow() && adjacentRowColumn.startIndex() <= firstSelection.lastRow()) {
							skipDefaultRendering = true;
						} else {
							left = rowOrColumn._getRelativeOffset1(firstSelection.firstColumn(), true, true) * zoom + rect.x() + extra;
							right = rowOrColumn._getRelativeOffset1(firstSelection.lastColumn(), false, true) * zoom + rect.x() + extra;
							left = dpi.snapUp(left) - xFactor;
							right = dpi.snapUp(right) - xFactor;
							left -= pixelSize;
							if (adjacentRowColumn.startIndex() == firstSelection.firstRow()) {
								left -= pixelSize;
								right += pixelSize;
							}
						}
					}
					if (!skipDefaultRendering) {
						skipDefaultRendering = true;
						g.fillRectangle1(brush, left, top, Math.max(right - left, 0), Math.max(bottom - top, 0));
					}
				}
			}
			if (!skipDefaultRendering) {
				var offsets = rowOrColumn._getRelativeItemPositions(true, false);
				var count = offsets.length - 1;
				for (var i = 0; i < count; i++) {
					if (!rowOrColumn._hasSelection(itemPositions.__inner[i]._index())) {
						continue;
					}
					var extendSelection = i == 0 || !rowOrColumn._hasSelection(itemPositions.__inner[i - 1]._index());
					var start = offsets[i];
					var end = offsets[i + 1];
					if (isVertical) {
						start += rect.y() + extra;
						end += rect.y() + extra;
						top = dpi.snapUp(start) - yFactor;
						bottom = dpi.snapUp(end) - yFactor;
						if (extendSelection) {
							top -= pixelSize;
						}
					} else {
						start += rect.x() + extra;
						end += rect.x() + extra;
						left = dpi.snapUp(start) - xFactor;
						right = dpi.snapUp(end) - xFactor;
						if (extendSelection) {
							left -= pixelSize;
						}
					}
					g.fillRectangle1(brush, left, top, Math.max(right - left, 0), Math.max(bottom - top, 0));
				}
			}
			this._hasSingleSelection(hasSingleSelection);
		} else {
			this._hasSingleSelection(false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel()._sheetPaneOwner().renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::RenderCache()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::HasSingleSelection()" />*/
	_hasSingleSelection: function (value) {
		if (arguments.length === 1) {
			if (value != this.___hasSingleSelection) {
				this.___hasSingleSelection = value;
				if (value) {
					var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, this.___adjacentRowColumn, this._viewModel()._adjacentRowColumn(), this.___listener, true);
					this.___adjacentRowColumn = $ret.p0;
				} else {
					var $ret1 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, this.___adjacentRowColumn, null, this.___listener, true);
					this.___adjacentRowColumn = $ret1.p0;
				}
			}
			return value;
		} else {
			return this.___hasSingleSelection;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::HasSingleSelection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this._viewModel()._scrollInfo() || (this._viewModel()._adjacentRowColumn() != null && sender == this._viewModel()._adjacentRowColumn()._scrollInfo())) {
					isDirty = true;
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this._viewModel()._actualItemPositions()) {
					isDirty = true;
				} else if (this._viewModel()._isSelectedItemsSource(sender)) {
					isDirty = true;
				}
				break;
			case "AdjacentRowColumn":
				if (this.___hasSingleSelection && sender == this._viewModel()) {
					var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, this.___adjacentRowColumn, this._viewModel()._adjacentRowColumn(), this.___listener, true);
					this.___adjacentRowColumn = $ret.p0;
					isDirty = true;
				}
				break;
			case "ActiveSelection":
			case "SelectionMode":
			case "ResourceProvider":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
			case "ResourceVersion":
				if (sender == this._viewModel()._resourceProvider()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderSelectionLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionLayer" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayerInfo" />*/

$.ig.util.defType('ElementLayerInfo', 'Object', {
	__identifier: null,
	__zIndexOrdering: null,
	__measureOrdering: null,
	init: function (initNumber, identifier, renderBelow, renderAbove) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ElementLayerInfo.prototype.init1.call(this, 1, identifier, renderBelow, renderAbove, null, null);
	},
	init1: function (initNumber, identifier, renderBelow, renderAbove, measureBefore, measureAfter) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(identifier, "identifier");
		this.__identifier = identifier;
		this.__zIndexOrdering = new $.ig.ElementLayerInfo_ElementOrderInfo(this, renderAbove, renderBelow);
		this.__measureOrdering = new $.ig.ElementLayerInfo_ElementOrderInfo(this, measureBefore, measureAfter);
	},
	/*<BeginProperty Name="System.String Infragistics.Controls.Primitives.ElementLayerInfo::Identifier()" />*/
	identifier: function () {
		return this.__identifier;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Primitives.ElementLayerInfo::Identifier()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo Infragistics.Controls.Primitives.ElementLayerInfo::MeasureOrderPositioning()" />*/
	measureOrderPositioning: function () {
		return this.__measureOrdering;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo Infragistics.Controls.Primitives.ElementLayerInfo::MeasureOrderPositioning()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo Infragistics.Controls.Primitives.ElementLayerInfo::ZIndexPositioning()" />*/
	zIndexPositioning: function () {
		return this.__zIndexOrdering;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo Infragistics.Controls.Primitives.ElementLayerInfo::ZIndexPositioning()" />*/
	,
	$type: new $.ig.Type('ElementLayerInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayerInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers" />*/

$.ig.util.defType('PredefinedSpreadsheetLayers', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Background()" />*/
	background: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__background;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Background()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::CellBackgrounds()" />*/
	cellBackgrounds: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__cellBackgrounds;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::CellBackgrounds()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::CellBorders()" />*/
	cellBorders: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__cellBorders;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::CellBorders()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::CellValues()" />*/
	cellValues: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__cellValues;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::CellValues()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Gridlines()" />*/
	gridlines: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__gridlines;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Gridlines()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::InvalidData()" />*/
	invalidData: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__invalidData;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::InvalidData()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::InteractionOverlay()" />*/
	interactionOverlay: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__interactionOverlays;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::InteractionOverlay()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Selection()" />*/
	selection: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__selection;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Selection()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Shapes()" />*/
	shapes: function () {
		return $.ig.PredefinedSpreadsheetLayers.prototype.__shapes;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ElementLayerInfo Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers::Shapes()" />*/
	,
	$type: new $.ig.Type('PredefinedSpreadsheetLayers', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IShapeLayer" />*/

$.ig.util.defType('IShapeLayer', 'Object', {
	$type: new $.ig.Type('IShapeLayer', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IShapeLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneLayerObserver" />*/

$.ig.util.defType('SpreadsheetPaneLayerObserver', 'SpreadsheetItemLayerObserver', {
	___pane: null,
	init: function (pane) {
		$.ig.SpreadsheetItemLayerObserver.prototype.init.call(this);
		this.___pane = pane;
	},
	$type: new $.ig.Type('SpreadsheetPaneLayerObserver', $.ig.SpreadsheetItemLayerObserver.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneLayerObserver" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ShapeLayerObserver" />*/

$.ig.util.defType('ShapeLayerObserver', 'SpreadsheetPaneLayerObserver', {
	___layer: null,
	init: function (pane, layer) {
		$.ig.SpreadsheetPaneLayerObserver.prototype.init.call(this, pane);
		this.___layer = layer;
		this._hook(pane);
		this._hook(pane.columnScrollRegion()._scrollInfo());
		this._hook(pane.rowScrollRegion()._scrollInfo());
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeLayerObserver::Dispose()" />*/
	dispose: function () {
		this._unhook(this.___pane);
		this._unhook(this.___pane.columnScrollRegion()._scrollInfo());
		this._unhook(this.___pane.rowScrollRegion()._scrollInfo());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeLayerObserver::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeLayerObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this.___pane.rowScrollRegion()._scrollInfo() || sender == this.___pane.columnScrollRegion()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this.___pane._shapesInternal()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this.___layer.invalidate();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ShapeLayerObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('ShapeLayerObserver', $.ig.SpreadsheetPaneLayerObserver.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ShapeLayerObserver" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PaneBackgroundLayerObserver" />*/

$.ig.util.defType('PaneBackgroundLayerObserver', 'SpreadsheetPaneLayerObserver', {
	___invalidate: null,
	init: function (pane, invalidate) {
		$.ig.SpreadsheetPaneLayerObserver.prototype.init.call(this, pane);
		this.___invalidate = invalidate;
		this._hook(pane.columnScrollRegion()._scrollInfo());
		this._hook(pane.rowScrollRegion()._scrollInfo());
		this._hook(pane);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PaneBackgroundLayerObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (this.___pane._background() != null) {
					if (sender == this.___pane.rowScrollRegion()._scrollInfo() || sender == this.___pane.columnScrollRegion()._scrollInfo()) {
						isDirty = true;
					}
				}
				break;
			case "Background":
				if (sender == this.___pane) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this.___invalidate();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PaneBackgroundLayerObserver::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PaneBackgroundLayerObserver::Dispose()" />*/
	dispose: function () {
		this._unhook(this.___pane.columnScrollRegion()._scrollInfo());
		this._unhook(this.___pane.rowScrollRegion()._scrollInfo());
		this._unhook(this.___pane);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PaneBackgroundLayerObserver::Dispose()" />*/
	,
	$type: new $.ig.Type('PaneBackgroundLayerObserver', $.ig.SpreadsheetPaneLayerObserver.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PaneBackgroundLayerObserver" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer" />*/

$.ig.util.defType('SpreadsheetPaneCellBackgroundLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.cellBackgrounds());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneCellBackgroundLayer.prototype.$type, this, $.ig.SpreadsheetPaneCellBackgroundLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.columnScrollRegion()._scrollInfo(), this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.rowScrollRegion()._scrollInfo(), this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.background;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().columnScrollRegion()._scrollInfo(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().rowScrollRegion()._scrollInfo(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		var fillArray = pane._cellFillArray();
		var cellValueArray = pane._cellValueArray();
		var paneColumn = pane.columnScrollRegion();
		var paneRow = pane.rowScrollRegion();
		var rowOffsets = paneRow._getRelativeItemPositions(true, false);
		var columnOffsets = paneColumn._getRelativeItemPositions(true, false);
		var rCount = rowOffsets.length - 1;
		var cCount = columnOffsets.length - 1;
		var zoom = paneRow._zoomLevel();
		if (rCount > 0 && cCount > 0 && cellValueArray != null) {
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var xFactor = -elementDpiOffset.__x;
			var yFactor = -elementDpiOffset.__y;
			$.ig.Debug.prototype.assert1(cellValueArray.rowCount() == rCount + 2, "Expected 1 extra row - one for after the visible");
			$.ig.Debug.prototype.assert1(cellValueArray.columnCount() == cCount + 2, "Expected 2 extra columns - one before and one after the visible");
			$.ig.Debug.prototype.assert(rCount + 2 == fillArray.rowCount() && cCount + 2 == fillArray.columnCount());
			for (var r = 1; r <= rCount; r++) {
				var hasRowValue = cellValueArray.hasRow(r);
				for (var c = 1; c <= cCount; c++) {
					if (fillArray.item(r, c)._background != null) {
						var left, right, top, bottom;
						var value = hasRowValue ? cellValueArray.item(r, c) : null;
						if (value != null && value.isMergedCell()) {
							if (r > 1 && cellValueArray.item(r - 1, c) == value) {
								continue;
							}
							if (c > 1 && cellValueArray.item(r, c - 1) == value) {
								continue;
							}
							left = paneColumn._getRelativeOffset1(value._startColumnIndex, true, true) * zoom + renderRect.x();
							right = paneColumn._getRelativeOffset1(value._endColumnIndex, false, true) * zoom + renderRect.x();
							top = paneRow._getRelativeOffset1(value._startRowIndex, true, true) * zoom + renderRect.y();
							bottom = paneRow._getRelativeOffset1(value._endRowIndex, false, true) * zoom + renderRect.y();
						} else {
							left = columnOffsets[c - 1] + renderRect.x();
							right = columnOffsets[c] + renderRect.x();
							top = rowOffsets[r - 1] + renderRect.y();
							bottom = rowOffsets[r] + renderRect.y();
						}
						left = dpi.snapUp(left) - xFactor;
						right = dpi.snapUp(right) - xFactor;
						top = dpi.snapUp(top) - yFactor;
						bottom = dpi.snapUp(bottom) - yFactor;
						left -= pixelSize;
						top -= pixelSize;
						if (value == null || !value.isMergedCell()) {
							if (r != rCount - 1 && fillArray.item(r + 1, c)._background != null) {
								bottom -= pixelSize;
							}
							if (c != cCount - 1 && fillArray.item(r, c + 1)._background != null) {
								right -= pixelSize;
							}
						}
						g.fillRectangle3(fillArray.item(r, c)._background, left, top, Math.max(right - left, 0), Math.max(bottom - top, 0));
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this._viewModel().rowScrollRegion()._scrollInfo() || sender == this._viewModel().columnScrollRegion()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "CellFillArray":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneCellBackgroundLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBackgroundLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer" />*/

$.ig.util.defType('SpreadsheetPaneCellBorderLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.cellBorders());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneCellBorderLayer.prototype.$type, this, $.ig.SpreadsheetPaneCellBorderLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.columnScrollRegion()._scrollInfo(), this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.rowScrollRegion()._scrollInfo(), this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.borders;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().columnScrollRegion()._scrollInfo(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().rowScrollRegion()._scrollInfo(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		var fillArray = pane._cellFillArray();
		var cellValueArray = pane._cellValueArray();
		var paneColumn = pane.columnScrollRegion();
		var paneRow = pane.rowScrollRegion();
		var rowOffsets = paneRow._getRelativeItemPositions(true, false);
		var columnOffsets = paneColumn._getRelativeItemPositions(true, false);
		var rCount = rowOffsets.length - 1;
		var cCount = columnOffsets.length - 1;
		var zoom = paneRow._zoomLevel();
		var dpiX = paneColumn._pixelSizeX();
		var dpiY = paneRow._pixelSizeY();
		if (rCount > 0 && cCount > 0) {
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var farPixelAdjustment = g.getFarPixelAdjustment(dpi);
			var twoPixelSize = pixelSize * 2;
			var threePixelSize = pixelSize * 3;
			var fourPixelSize = pixelSize * 4;
			var xFactor = -elementDpiOffset.__x;
			var yFactor = -elementDpiOffset.__y;
			var ptStart = new $.ig.Point(0);
			var ptEnd = new $.ig.Point(0);
			var screenPixelX = paneColumn._pixelSizeX();
			var screenPixelY = paneColumn._pixelSizeY();
			$.ig.Debug.prototype.assert1(cellValueArray.rowCount() == rCount + 2, "Expected 1 extra row - one for after the visible");
			$.ig.Debug.prototype.assert1(cellValueArray.columnCount() == cCount + 2, "Expected 2 extra columns - one before and one after the visible");
			$.ig.Debug.prototype.assert(rCount + 2 == fillArray.rowCount() && cCount + 2 == fillArray.columnCount());
			var yy = renderRect.y();
			var xx = renderRect.x();
			var rEnd = rCount + 1;
			var cEnd = cCount + 1;
			var hasDiagonalBorders = false;
			var thinPenThickness = $.ig.SpreadsheetUtilities.prototype.getPenThickness($.ig.CellBorderPen.prototype.thin, dpiY);
			for (var r = 1; r <= rEnd; r++) {
				var top = dpi.snapUp(rowOffsets[r - 1] + yy);
				var bottom = r <= rCount ? dpi.snapUp(rowOffsets[r] + yy) : top;
				for (var c = 1; c <= cEnd; c++) {
					var left = dpi.snapUp(columnOffsets[c - 1] + xx);
					var fillInfo = fillArray.item(r, c);
					if (fillInfo._diagonalBorders != $.ig.CellDiagonalBorder.prototype.none) {
						hasDiagonalBorders = true;
					}
					if (fillInfo._topBorderStyle != $.ig.excel.CellBorderLineStyle.none && c <= cCount) {
						var right = dpi.snapUp(columnOffsets[c] + xx);
						switch (fillInfo._topBorderStyle) {
							case $.ig.excel.CellBorderLineStyle.double1:
								{
									var fillValueAbove = fillArray.item(r - 1, c);
									var topPen = fillInfo._topBorderColor;
									var halfPenThickness = thinPenThickness / 2;
									ptStart.__x = left - xFactor + fillInfo._leftOffset * pixelSize;
									ptEnd.__x = right - farPixelAdjustment - xFactor - fillInfo._rightOffset * pixelSize;
									ptEnd.__y = ptStart.__y = top - (pixelSize + halfPenThickness + yFactor);
									var isDoubleBorderOnLeft = fillArray.item(r, c - 1)._topBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderAboveLeft = fillValueAbove._leftBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderBelowLeft = fillInfo._leftBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderOnRight = fillArray.item(r, c + 1)._topBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderAboveRight = fillArray.item(r - 1, c + 1)._leftBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderBelowRight = fillArray.item(r, c + 1)._leftBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									if (isDoubleBorderAboveLeft) {
										ptStart.__x -= pixelSize;
									} else if (isDoubleBorderBelowLeft) {
										ptStart.__x -= threePixelSize;
									}
									if (isDoubleBorderAboveRight) {
										ptEnd.__x -= twoPixelSize;
									}
									if (fillValueAbove._diagonalBorderStyle == $.ig.excel.CellBorderLineStyle.double1) {
										var canHaveDiagonalUpperLeft = cellValueArray.item(r - 1, c - 1) != cellValueArray.item(r - 1, c) || cellValueArray.item(r - 1, c - 1) == null || cellValueArray.item(r - 1, c) == null;
										if (canHaveDiagonalUpperLeft && (fillValueAbove._diagonalBorders & $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight) != 0) {
											ptStart.__x = Math.max(ptStart.__x, left - xFactor + fourPixelSize);
										}
										var canHaveDiagonalUpperRight = cellValueArray.item(r - 1, c + 1) != cellValueArray.item(r - 1, c) || cellValueArray.item(r - 1, c + 1) == null || cellValueArray.item(r - 1, c) == null;
										if (canHaveDiagonalUpperRight && (fillValueAbove._diagonalBorders & $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight) != 0) {
											ptEnd.__x = Math.min(ptEnd.__x, right - xFactor - fourPixelSize);
										}
									}
									g.drawLine1($.ig.CellBorderPen.prototype.thin, topPen, dpiY, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									ptStart.__x = left - xFactor + fillInfo._leftOffset * pixelSize;
									ptEnd.__x = right - farPixelAdjustment - xFactor - fillInfo._rightOffset * pixelSize;
									ptStart.__y += twoPixelSize;
									ptEnd.__y = ptStart.__y;
									if (isDoubleBorderBelowLeft) {
										ptStart.__x -= pixelSize;
									} else if (isDoubleBorderOnLeft) {
									} else if (isDoubleBorderAboveLeft) {
										ptStart.__x -= threePixelSize;
									}
									if (isDoubleBorderBelowRight) {
										ptEnd.__x -= twoPixelSize;
									}
									if (fillInfo._diagonalBorderStyle == $.ig.excel.CellBorderLineStyle.double1) {
										var canHaveDiagonalUpperLeft1 = cellValueArray.item(r, c - 1) != cellValueArray.item(r, c) || cellValueArray.item(r, c - 1) == null || cellValueArray.item(r, c) == null;
										if (canHaveDiagonalUpperLeft1 && (fillInfo._diagonalBorders & $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight) != 0) {
											ptStart.__x = Math.max(ptStart.__x, left - xFactor + fourPixelSize);
										}
										var canHaveDiagonalUpperRight1 = cellValueArray.item(r, c + 1) != cellValueArray.item(r, c) || cellValueArray.item(r, c + 1) == null || cellValueArray.item(r, c) == null;
										if (canHaveDiagonalUpperRight1 && (fillInfo._diagonalBorders & $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight) != 0) {
											ptEnd.__x = Math.min(ptEnd.__x, right - xFactor - fourPixelSize);
										}
									}
									g.drawLine1($.ig.CellBorderPen.prototype.thin, topPen, dpiY, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									break;
								}
							case $.ig.excel.CellBorderLineStyle.slantedDashDot:
								{
									var topPen1 = fillInfo._topBorderColor;
									var halfPenThickness1 = $.ig.SpreadsheetUtilities.prototype.getPenThickness($.ig.CellBorderPen.prototype.slantedDashDotOuter, dpiY) / 2;
									ptStart.__x = left - xFactor + fillInfo._leftOffset * pixelSize;
									ptEnd.__x = right - farPixelAdjustment - xFactor - fillInfo._rightOffset * pixelSize;
									ptEnd.__y = ptStart.__y = top - (halfPenThickness1 + yFactor) - pixelSize;
									g.drawLine1($.ig.CellBorderPen.prototype.slantedDashDotOuter, topPen1, dpiY, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									ptEnd.__y = ptStart.__y = top - (halfPenThickness1 + yFactor);
									g.drawLine1($.ig.CellBorderPen.prototype.slantedDashDotInner, topPen1, dpiY, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									break;
								}
							default:
								{
									var penStyle = $.ig.SpreadsheetUtilities.prototype.toCellBorderPen(fillInfo._topBorderStyle);
									var topPen2 = fillInfo._topBorderColor;
									var halfPenThickness2 = $.ig.SpreadsheetUtilities.prototype.getPenThickness(penStyle, dpiY) / 2;
									ptStart.__x = left - xFactor + fillInfo._leftOffset * pixelSize;
									ptEnd.__x = right - farPixelAdjustment - xFactor - fillInfo._rightOffset * pixelSize;
									ptEnd.__y = ptStart.__y = top - (halfPenThickness2 + yFactor);
									if (halfPenThickness2 > screenPixelY) {
										ptEnd.__y = ptStart.__y = ptStart.__y + screenPixelY;
									}
									g.drawLine1(penStyle, topPen2, dpiY, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									break;
								}
						}
					}
					if (fillInfo._leftBorderStyle != $.ig.excel.CellBorderLineStyle.none && r <= rCount) {
						switch (fillInfo._leftBorderStyle) {
							case $.ig.excel.CellBorderLineStyle.double1:
								{
									var fillValueBefore = fillArray.item(r, c - 1);
									var leftPen = fillInfo._leftBorderColor;
									var halfPenThickness3 = thinPenThickness / 2;
									var isDoubleBorderOnRight1 = fillInfo._topBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderAboveRight1 = fillArray.item(r - 1, c)._leftBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderAboveLeft1 = fillValueBefore._topBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderBelowRight1 = fillArray.item(r + 1, c)._topBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderBelow = fillArray.item(r + 1, c)._leftBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									var isDoubleBorderBelowLeft1 = fillArray.item(r + 1, c - 1)._topBorderStyle == $.ig.excel.CellBorderLineStyle.double1;
									ptEnd.__x = ptStart.__x = left - (pixelSize + halfPenThickness3 + xFactor);
									ptEnd.__y = bottom - farPixelAdjustment - yFactor - fillInfo._bottomOffset * pixelSize;
									ptStart.__y = top - yFactor + fillInfo._topOffset * pixelSize;
									var origPtStartY = ptStart.__y;
									var origPtEndY = ptEnd.__y;
									if (fillValueBefore._diagonalBorderStyle == $.ig.excel.CellBorderLineStyle.double1) {
										var canHaveDiagonalUpperLeft2 = cellValueArray.item(r, c - 1) != cellValueArray.item(r, c) || cellValueArray.item(r, c - 1) == null || cellValueArray.item(r, c) == null;
										if (canHaveDiagonalUpperLeft2 && (fillValueBefore._diagonalBorders & $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight) != 0) {
											ptStart.__y = Math.max(ptStart.__y, top + yFactor + twoPixelSize);
										}
										var canHaveDiagonalLowerLeft = cellValueArray.item(r, c - 1) != cellValueArray.item(r, c) || cellValueArray.item(r, c - 1) == null || cellValueArray.item(r, c) == null;
										if (canHaveDiagonalLowerLeft && (fillValueBefore._diagonalBorders & $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight) != 0) {
											ptEnd.__y = Math.min(ptEnd.__y, bottom - yFactor - twoPixelSize);
										}
									}
									g.drawLine1($.ig.CellBorderPen.prototype.thin, leftPen, dpiX, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									ptStart.__x += twoPixelSize;
									ptEnd.__x = ptStart.__x;
									ptStart.__y = origPtStartY;
									ptEnd.__y = origPtEndY;
									if (isDoubleBorderOnRight1) {
										if (fillInfo._topOffset < 0) {
											ptStart.__y += twoPixelSize;
										}
									} else if (isDoubleBorderAboveRight1) {
										if (isDoubleBorderAboveLeft1) {
											ptStart.__y -= pixelSize;
										}
									} else if (isDoubleBorderAboveLeft1) {
										if (fillInfo._topOffset >= 0) {
											ptStart.__y -= twoPixelSize;
										}
									}
									if (isDoubleBorderBelowRight1) {
										if (fillInfo._bottomOffset < 0) {
											ptEnd.__y -= twoPixelSize;
										}
									} else if (isDoubleBorderBelow) {
										if (isDoubleBorderBelowLeft1) {
											ptEnd.__y += twoPixelSize;
										}
									} else if (isDoubleBorderBelowLeft1) {
										ptEnd.__y += twoPixelSize;
									}
									if (fillInfo._diagonalBorderStyle == $.ig.excel.CellBorderLineStyle.double1 && c < cEnd) {
										var canHaveDiagonalUpperLeft3 = cellValueArray.item(r, c + 1) != cellValueArray.item(r, c) || cellValueArray.item(r, c + 1) == null || cellValueArray.item(r, c) == null;
										if (canHaveDiagonalUpperLeft3 && (fillInfo._diagonalBorders & $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight) != 0) {
											ptStart.__y = Math.max(ptStart.__y, top + yFactor + twoPixelSize);
										}
										var canHaveDiagonalLowerLeft1 = cellValueArray.item(r, c + 1) != cellValueArray.item(r, c) || cellValueArray.item(r, c + 1) == null || cellValueArray.item(r, c) == null;
										if (canHaveDiagonalLowerLeft1 && (fillInfo._diagonalBorders & $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight) != 0) {
											ptEnd.__y = Math.min(ptEnd.__y, bottom - yFactor - twoPixelSize);
										}
									}
									g.drawLine1($.ig.CellBorderPen.prototype.thin, leftPen, dpiX, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									break;
								}
							case $.ig.excel.CellBorderLineStyle.slantedDashDot:
								{
									var leftPen1 = fillInfo._leftBorderColor;
									var halfPenThickness4 = $.ig.SpreadsheetUtilities.prototype.getPenThickness($.ig.CellBorderPen.prototype.slantedDashDotOuter, dpiX) / 2;
									ptEnd.__x = ptStart.__x = left - (halfPenThickness4 + xFactor) - pixelSize;
									ptEnd.__y = bottom - farPixelAdjustment - yFactor - fillInfo._bottomOffset * pixelSize;
									ptStart.__y = top - yFactor + fillInfo._topOffset * pixelSize;
									g.drawLine1($.ig.CellBorderPen.prototype.slantedDashDotOuter, leftPen1, dpiX, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									ptEnd.__x = ptStart.__x = left - (halfPenThickness4 + xFactor);
									g.drawLine1($.ig.CellBorderPen.prototype.slantedDashDotInner, leftPen1, dpiX, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									break;
								}
							default:
								{
									var penStyle1 = $.ig.SpreadsheetUtilities.prototype.toCellBorderPen(fillInfo._leftBorderStyle);
									var leftPen2 = fillInfo._leftBorderColor;
									var halfPenThickness5 = $.ig.SpreadsheetUtilities.prototype.getPenThickness(penStyle1, dpiX) / 2;
									ptEnd.__x = ptStart.__x = left - (halfPenThickness5 + xFactor);
									ptEnd.__y = bottom - farPixelAdjustment - yFactor - fillInfo._bottomOffset * pixelSize;
									ptStart.__y = top - yFactor + fillInfo._topOffset * pixelSize;
									if (halfPenThickness5 > screenPixelX) {
										ptEnd.__x = ptStart.__x = ptStart.__x + screenPixelX;
									}
									g.drawLine1(penStyle1, leftPen2, dpiX, ptStart.__x, ptStart.__y, ptEnd.__x, ptEnd.__y);
									break;
								}
						}
					}
				}
			}
			if (hasDiagonalBorders) {
				for (var r1 = 1; r1 < rEnd; r1++) {
					var top1 = dpi.snapUp(rowOffsets[r1 - 1] + yy);
					for (var c1 = 1; c1 < cEnd; c1++) {
						var fillInfo1 = fillArray.item(r1, c1);
						if (fillInfo1._diagonalBorders != $.ig.CellDiagonalBorder.prototype.none) {
							var cellValue = cellValueArray.item(r1, c1);
							if (cellValue == null || !cellValue.isMergedCell() || (r1 == 1 && c1 == 1) || (r1 == 1 && cellValueArray.item(r1, c1 - 1) != cellValue) || (c1 == 1 && cellValueArray.item(r1 - 1, c1) != cellValue) || (cellValueArray.item(r1 - 1, c1) != cellValue && cellValueArray.item(r1, c1 - 1) != cellValue)) {
								var actualTop = top1;
								if ($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillInfo1._topBorderStyle) > 1) {
									actualTop += pixelSize;
								}
								var left1 = dpi.snapUp(columnOffsets[c1 - 1] + xx);
								var rightOffset, bottomOffset;
								if (cellValue != null && cellValue.isMergedCell()) {
									if (cellValueArray.item(r1 - 1, c1) == cellValue) {
										actualTop = dpi.snapUp(paneRow._getRelativeOffset1(cellValue._startRowIndex, true, true) * zoom + yy);
									}
									if (cellValueArray.item(r1, c1 - 1) == cellValue) {
										left1 = dpi.snapUp(paneColumn._getRelativeOffset1(cellValue._startColumnIndex, true, true) * zoom + xx);
									}
									var endColIndex = paneColumn._getItemPositionIndexFromActualIndex(cellValue._endColumnIndex);
									if (endColIndex < 0) {
										rightOffset = paneColumn._getRelativeOffset1(cellValue._endColumnIndex, false, true) * zoom + xx;
									} else {
										rightOffset = columnOffsets[endColIndex + 1] + xx;
										rightOffset -= pixelSize * Math.min($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1, endColIndex + 1)._leftBorderStyle), 2);
									}
									var endRowIndex = paneRow._getItemPositionIndexFromActualIndex(cellValue._endRowIndex);
									if (endRowIndex < 0) {
										bottomOffset = paneRow._getRelativeOffset1(cellValue._endRowIndex, false, true) * zoom + yy;
									} else {
										bottomOffset = rowOffsets[endRowIndex + 1] + yy;
										if ($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(endRowIndex + 1, c1)._topBorderStyle) > 1) {
											bottomOffset -= pixelSize;
										}
									}
								} else {
									rightOffset = columnOffsets[c1] + xx;
									bottomOffset = rowOffsets[r1] + yy;
									rightOffset -= pixelSize * Math.min($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1, c1 + 1)._leftBorderStyle), 2);
									if ($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1 + 1, c1)._topBorderStyle) > 1) {
										bottomOffset -= pixelSize;
									}
								}
								var right1 = dpi.snapUp(rightOffset);
								var bottom1 = dpi.snapUp(bottomOffset);
								switch (fillInfo1._diagonalBorderStyle) {
									case $.ig.excel.CellBorderLineStyle.double1:
										{
											var pen = fillInfo1._diagonalBorderColor;
											switch (fillInfo1._diagonalBorders) {
												case $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight:
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + fourPixelSize, actualTop, right1, bottom1 - pixelSize);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1, actualTop + pixelSize, right1 - fourPixelSize, bottom1);
													break;
												case $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight:
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1, bottom1 - pixelSize, right1 - fourPixelSize - pixelSize, actualTop);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + fourPixelSize, bottom1, right1, actualTop + pixelSize);
													break;
												case $.ig.CellDiagonalBorder.prototype.both:
													var width = right1 - left1;
													var height = bottom1 - actualTop;
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + fourPixelSize, actualTop, left1 + width / 2, actualTop + height / 2 - pixelSize);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + width / 2, actualTop + height / 2 - pixelSize, right1 - fourPixelSize - pixelSize, actualTop);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, right1, actualTop + pixelSize, left1 + width / 2 + fourPixelSize, actualTop + height / 2);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + width / 2 + fourPixelSize, actualTop + height / 2, right1, bottom1 - pixelSize);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, right1 - fourPixelSize, bottom1, left1 + width / 2, actualTop + height / 2 + pixelSize);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + width / 2, actualTop + height / 2 + pixelSize, left1 + fourPixelSize, bottom1);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1, bottom1 - pixelSize, left1 + width / 2 - fourPixelSize, actualTop + height / 2);
													g.drawLine1($.ig.CellBorderPen.prototype.thin, pen, dpiX, left1 + width / 2 - fourPixelSize, actualTop + height / 2, left1, actualTop + pixelSize);
													break;
											}
											break;
										}
									case $.ig.excel.CellBorderLineStyle.none: break;
									default:
										{
											var penStyle2 = fillInfo1._diagonalBorderStyle == $.ig.excel.CellBorderLineStyle.slantedDashDot ? $.ig.CellBorderPen.prototype.slantedDashDotDiagonal : $.ig.SpreadsheetUtilities.prototype.toCellBorderPen(fillInfo1._diagonalBorderStyle);
											var pen1 = fillInfo1._diagonalBorderColor;
											if (fillInfo1._diagonalBorders != $.ig.CellDiagonalBorder.prototype.bottomLeftToTopRight) {
												g.drawLine1(penStyle2, pen1, dpiX, left1, actualTop, right1, bottom1);
											}
											if (fillInfo1._diagonalBorders != $.ig.CellDiagonalBorder.prototype.topLeftToBottomRight) {
												g.drawLine1(penStyle2, pen1, dpiX, left1, bottom1, right1, actualTop);
											}
											break;
										}
								}
							}
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this._viewModel().rowScrollRegion()._scrollInfo() || sender == this._viewModel().columnScrollRegion()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "CellFillArray":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneCellBorderLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneCellBorderLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer" />*/

$.ig.util.defType('SpreadsheetPaneGridlineLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.gridlines());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneGridlineLayer.prototype.$type, this, $.ig.SpreadsheetPaneGridlineLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.borders;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		var cellValueArray = pane._cellValueArray();
		var pen = pane._gridlinePen();
		var fillArray = pane._cellFillArray();
		var rowOffsets = pane.rowScrollRegion()._getRelativeItemPositions(true, false);
		var columnOffsets = pane.columnScrollRegion()._getRelativeItemPositions(true, false);
		var rCount = rowOffsets.length - 1;
		var cCount = columnOffsets.length - 1;
		if (cellValueArray != null && pen != null && rCount > 0 && cCount > 0 && pane.rowScrollRegion()._zoomLevel() >= 0.4) {
			var penDpi = pane.rowScrollRegion()._pixelSizeX();
			var penThickness = $.ig.SpreadsheetUtilities.prototype.getPenThickness($.ig.CellBorderPen.prototype.thin, penDpi);
			var halfPenThickness = penThickness / 2;
			var xFactor, yFactor;
			$.ig.Debug.prototype.assert1(cellValueArray.rowCount() == rCount + 2, "Expected 1 extra row - one for after the visible");
			$.ig.Debug.prototype.assert1(cellValueArray.columnCount() == cCount + 2, "Expected 2 extra columns - one before and one after the visible");
			var offsetX = elementDpiOffset.__x;
			var offsetY = elementDpiOffset.__y;
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var twoPixelSize = pixelSize * 2;
			xFactor = -offsetX;
			yFactor = halfPenThickness - offsetY;
			for (var r = 0; r < rCount; r++) {
				var y = dpi.snapUp(rowOffsets[r + 1] + renderRect.y()) - yFactor;
				var startColumn = -1;
				var startOffset = 0;
				for (var c = 1; c <= cCount; c++) {
					var hasAdjacentCellFill = fillArray.item(r + 1, c)._background != null || fillArray.item(r + 2, c)._background != null;
					var hasAdjacentBorder = fillArray.item(r + 2, c)._topBorderStyle != $.ig.excel.CellBorderLineStyle.none;
					var hasPerpendicularBorder = fillArray.item(r + 1, c)._leftBorderStyle != $.ig.excel.CellBorderLineStyle.none || fillArray.item(r + 2, c)._leftBorderStyle != $.ig.excel.CellBorderLineStyle.none;
					var hasOverlappingValue = (cellValueArray.item(r + 1, c) != null && cellValueArray.item(r + 1, c) == cellValueArray.item(r + 2, c));
					if (hasAdjacentCellFill || hasAdjacentBorder || (startColumn >= 0 && hasPerpendicularBorder) || hasOverlappingValue) {
						if (startColumn < 0) {
							continue;
						}
						var endOffset = 0;
						var vertBorderWidth = 0;
						if (hasPerpendicularBorder) {
							vertBorderWidth = Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r + 1, c)._leftBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r + 2, c)._leftBorderStyle));
							if (vertBorderWidth > 1) {
								endOffset = -twoPixelSize;
							} else {
								endOffset = -pixelSize;
							}
						} else if (hasAdjacentCellFill || hasAdjacentBorder) {
							endOffset = -pixelSize;
						}
						g.drawLine2(pen, penDpi, dpi.snapUp(columnOffsets[startColumn] + startOffset + renderRect.x()) - xFactor, y, dpi.snapUp(columnOffsets[c - 1] + endOffset + renderRect.x()) - xFactor, y);
						if (hasPerpendicularBorder && !hasAdjacentBorder && !hasOverlappingValue && !hasAdjacentCellFill) {
							startColumn = c - 1;
							startOffset = vertBorderWidth > 2 ? 1 : 0;
						} else {
							startColumn = -1;
							startOffset = 0;
						}
					} else if (startColumn < 0) {
						startColumn = c - 1;
						startOffset = hasPerpendicularBorder && Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r + 1, c)._leftBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r + 2, c)._leftBorderStyle)) > 2 ? 1 : 0;
					}
				}
				if (startColumn >= 0) {
					g.drawLine2(pen, penDpi, dpi.snapUp(columnOffsets[startColumn] + startOffset + renderRect.x()) - xFactor, y, dpi.snapUp(columnOffsets[cCount] + renderRect.x()) - xFactor, y);
				}
			}
			xFactor = halfPenThickness - offsetX;
			yFactor = -offsetY;
			for (var c1 = 1; c1 <= cCount; c1++) {
				var x = dpi.snapUp(columnOffsets[c1] + renderRect.x()) - xFactor;
				var startRow = -1;
				var startOffset1 = 0;
				for (var r1 = 0; r1 < rCount; r1++) {
					var hasAdjacentCellFill1 = fillArray.item(r1 + 1, c1)._background != null || fillArray.item(r1 + 1, c1 + 1)._background != null;
					var hasAdjacentBorder1 = fillArray.item(r1 + 1, c1 + 1)._leftBorderStyle != $.ig.excel.CellBorderLineStyle.none;
					var hasPerpendicularBorder1 = fillArray.item(r1 + 1, c1)._topBorderStyle != $.ig.excel.CellBorderLineStyle.none || fillArray.item(r1 + 1, c1 + 1)._topBorderStyle != $.ig.excel.CellBorderLineStyle.none;
					var hasOverlappingValue1 = (cellValueArray.item(r1 + 1, c1) != null && cellValueArray.item(r1 + 1, c1) == cellValueArray.item(r1 + 1, c1 + 1));
					if (hasAdjacentCellFill1 || hasAdjacentBorder1 || (startRow >= 0 && hasPerpendicularBorder1) || hasOverlappingValue1) {
						if (startRow < 0) {
							continue;
						}
						var endOffset1 = 0;
						var horzBorderHeight = 0;
						if (hasPerpendicularBorder1) {
							horzBorderHeight = Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1 + 1, c1)._topBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1 + 1, c1 + 1)._topBorderStyle));
							if (horzBorderHeight > 1) {
								endOffset1 = -twoPixelSize;
							} else {
								endOffset1 = -pixelSize;
							}
						} else if (hasAdjacentCellFill1 || hasAdjacentBorder1) {
							endOffset1 = -pixelSize;
						}
						g.drawLine2(pen, penDpi, x, dpi.snapUp(rowOffsets[startRow] + startOffset1 + renderRect.y()) - yFactor, x, dpi.snapUp(rowOffsets[r1] + endOffset1 + renderRect.y()) - yFactor);
						if (hasPerpendicularBorder1 && !hasAdjacentBorder1 && !hasOverlappingValue1 && !hasAdjacentCellFill1 && fillArray.item(r1 + 1, c1 + 1)._leftBorderStyle == $.ig.excel.CellBorderLineStyle.none) {
							startRow = r1;
							startOffset1 = horzBorderHeight > 2 ? 1 : 0;
						} else {
							startRow = -1;
							startOffset1 = 0;
						}
					} else if (startRow < 0) {
						startRow = r1;
						startOffset1 = hasPerpendicularBorder1 && Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1 + 1, c1)._topBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(fillArray.item(r1 + 1, c1 + 1)._topBorderStyle)) > 2 ? 1 : 0;
					}
				}
				if (startRow >= 0) {
					g.drawLine2(pen, penDpi, x, dpi.snapUp(rowOffsets[startRow] + startOffset1 + renderRect.y()) - yFactor, x, dpi.snapUp(rowOffsets[rCount] + renderRect.y()) - yFactor);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "CellValueArray":
			case "GridlinePen":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneGridlineLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneGridlineLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer" />*/

$.ig.util.defType('SpreadsheetPaneInteractionOverlayLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	___hasVisuals: false,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.interactionOverlay());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneInteractionOverlayLayer.prototype.$type, this, $.ig.SpreadsheetPaneInteractionOverlayLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.columnScrollRegion(), this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.rowScrollRegion(), this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.foreground;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().columnScrollRegion(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().rowScrollRegion(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		var col = pane.columnScrollRegion();
		var row = pane.rowScrollRegion();
		var regionWithResize = $.ig.util.nullableNotEquals(col._itemBeingResized(), null) ? col : $.ig.util.nullableNotEquals(row._itemBeingResized(), null) ? row : null;
		this.___hasVisuals = regionWithResize != null;
		if (regionWithResize != null) {
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var xFactor = -elementDpiOffset.__x;
			var yFactor = -elementDpiOffset.__y;
			var isRow = regionWithResize._isRowHeader();
			var zoom = regionWithResize._zoomLevel();
			var offset = regionWithResize._getRelativeOffset1(regionWithResize._itemBeingResized().value(), true, true) * zoom;
			var left = renderRect.x();
			var top = renderRect.y();
			var right = renderRect.right();
			var bottom = renderRect.bottom();
			var penDpi = regionWithResize._pixelSizeX();
			left = dpi.snapUp(left) - xFactor;
			top = dpi.snapUp(top) - yFactor;
			right = dpi.snapUp(right) - xFactor;
			bottom = dpi.snapUp(bottom) - yFactor;
			var brush = isRow ? $.ig.SpreadsheetResourceId.prototype.resizeRowLine : $.ig.SpreadsheetResourceId.prototype.resizeColumnLine;
			var pen = $.ig.CellBorderPen.prototype.thin;
			var halfPenThickness = $.ig.SpreadsheetUtilities.prototype.getPenThickness(pen, penDpi) / 2;
			if (isRow) {
				top = bottom = dpi.snapUp(offset + renderRect.y()) - yFactor - halfPenThickness;
			} else {
				left = right = dpi.snapUp(offset + renderRect.x()) - xFactor - halfPenThickness;
			}
			g.drawLine(pen, brush, penDpi, left, top, right, bottom);
			var otherOffset = regionWithResize._itemBeingResizedRelativeEdge();
			if (!$.ig.util.isNaN(otherOffset)) {
				otherOffset *= zoom;
				if (isRow) {
					top = bottom = dpi.snapUp(otherOffset + renderRect.y()) - yFactor - halfPenThickness;
				} else {
					left = right = dpi.snapUp(otherOffset + renderRect.x()) - xFactor - halfPenThickness;
				}
				g.drawLine(pen, brush, penDpi, left, top, right, bottom);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (this.___hasVisuals) {
					if (sender == this._viewModel().rowScrollRegion()._scrollInfo() || sender == this._viewModel().columnScrollRegion()._scrollInfo()) {
						isDirty = true;
					}
				}
				break;
			case "ItemBeingResized":
			case "ItemBeingResizedRelativeEdge":
				if (sender == this._viewModel().rowScrollRegion() || sender == this._viewModel().columnScrollRegion()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneInteractionOverlayLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionOverlayLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer" />*/

$.ig.util.defType('SpreadsheetPaneInvalidDataLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.invalidData());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneInvalidDataLayer.prototype.$type, this, $.ig.SpreadsheetPaneInvalidDataLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.columnScrollRegion()._scrollInfo(), this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.rowScrollRegion()._scrollInfo(), this.___listener, true);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.foreground;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().columnScrollRegion()._scrollInfo(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().rowScrollRegion()._scrollInfo(), this.___listener);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		var circleArray = pane._invalidCellArray();
		var cellValueArray = pane._cellValueArray();
		var paneColumn = pane.columnScrollRegion();
		var paneRow = pane.rowScrollRegion();
		var rowOffsets = paneRow._getRelativeItemPositions(true, false);
		var columnOffsets = paneColumn._getRelativeItemPositions(true, false);
		var rCount = rowOffsets.length - 1;
		var cCount = columnOffsets.length - 1;
		var zoom = paneRow._zoomLevel();
		var adjustmentZoom = Math.max(zoom, 1);
		if (rCount > 0 && cCount > 0) {
			var penBrush = $.ig.SpreadsheetResourceId.prototype.invalidDataBorder;
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var xFactor = -elementDpiOffset.__x;
			var yFactor = -elementDpiOffset.__y;
			var penWidth = $.ig.SpreadsheetUtilities.prototype.getPenThickness($.ig.CellBorderPen.prototype.medium, paneColumn._pixelSizeX()) * zoom;
			$.ig.Debug.prototype.assert1(cellValueArray.rowCount() == rCount + 2, "Expected 1 extra row - one for after the visible");
			$.ig.Debug.prototype.assert1(cellValueArray.columnCount() == cCount + 2, "Expected 2 extra columns - one before and one after the visible");
			$.ig.Debug.prototype.assert(rCount + 2 == circleArray.rowCount() && cCount + 2 == circleArray.columnCount());
			for (var r = 1; r <= rCount; r++) {
				if (circleArray.hasRow(r) == false) {
					continue;
				}
				var hasRowValue = cellValueArray.hasRow(r);
				for (var c = 1; c <= cCount; c++) {
					if (circleArray.item(r, c)) {
						var left, right, top, bottom;
						var value = hasRowValue ? cellValueArray.item(r, c) : null;
						if (value != null && value.isMergedCell()) {
							if (r > 1 && cellValueArray.item(r - 1, c) == value) {
								continue;
							}
							if (c > 1 && cellValueArray.item(r, c - 1) == value) {
								continue;
							}
							left = paneColumn._getRelativeOffset1(value._startColumnIndex, true, true) * zoom + renderRect.x();
							right = paneColumn._getRelativeOffset1(value._endColumnIndex, false, true) * zoom + renderRect.x();
							top = paneRow._getRelativeOffset1(value._startRowIndex, true, true) * zoom + renderRect.y();
							bottom = paneRow._getRelativeOffset1(value._endRowIndex, false, true) * zoom + renderRect.y();
						} else {
							left = columnOffsets[c - 1] + renderRect.x();
							right = columnOffsets[c] + renderRect.x();
							top = rowOffsets[r - 1] + renderRect.y();
							bottom = rowOffsets[r] + renderRect.y();
						}
						left = dpi.snapUp(left - 1) - xFactor;
						top = dpi.snapUp(top - 1) - yFactor;
						right = dpi.snapUp(right) - xFactor;
						bottom = dpi.snapUp(bottom) - yFactor;
						g.drawEllipse(penWidth, penBrush, paneColumn._pixelSizeX(), left - 5, top - 2, (right - left) + 10, (bottom - top) + 4);
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this._viewModel().rowScrollRegion()._scrollInfo() || sender == this._viewModel().columnScrollRegion()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "InvalidCellArray":
				if (sender == this._viewModel()) {
					isDirty = true;
				}
				break;
			case "ResourceProvider":
				if (sender == this._viewModel().rowScrollRegion() || sender == this._viewModel().columnScrollRegion()) {
					isDirty = true;
				}
				break;
			case "ResourceVersion":
				if (sender == this._viewModel().rowScrollRegion()._resourceProvider()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneInvalidDataLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneInvalidDataLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer" />*/

$.ig.util.defType('SpreadsheetPaneSelectionLayer', 'SpreadsheetRendererElementLayer$1', {
	___listener: null,
	___selection: null,
	init: function (pane, view) {
		$.ig.SpreadsheetRendererElementLayer$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, view, $.ig.PredefinedSpreadsheetLayers.prototype.selection());
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneSelectionLayer.prototype.$type, this, $.ig.SpreadsheetPaneSelectionLayer.prototype._onSubObjectPropertyChanged, false);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane, this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.columnScrollRegion(), this.___listener, true);
		$.ig.SpreadsheetUtilities.prototype.addListener(pane.rowScrollRegion(), this.___listener, true);
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetSelection.prototype.$type, this.___selection, pane.rowScrollRegion()._activeSelection(), this.___listener, true);
		this.___selection = $ret.p0;
	},
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::AdjustRectForClip(System.Windows.Rect)" />*/
	_adjustRectForClip: function (elementRect) {
		var pixelX = this._viewModel().columnScrollRegion()._pixelSizeX();
		var pixelY = this._viewModel().rowScrollRegion()._pixelSizeY();
		elementRect.x(elementRect.x() - pixelX);
		elementRect.width(elementRect.width() + pixelX);
		elementRect.y(elementRect.y() - pixelY);
		elementRect.height(elementRect.height() + pixelY);
		return elementRect;
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::AdjustRectForClip(System.Windows.Rect)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::LayerType()" />*/
	_layerType: function () {
		return $.ig.RenderLayerType.prototype.background;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.RenderLayerType Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::LayerType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::OnUnloadedOverride()" />*/
	_onUnloadedOverride: function () {
		$.ig.SpreadsheetRendererElementLayer$1.prototype._onUnloadedOverride.call(this);
		if (this._viewModel() != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().columnScrollRegion(), this.___listener);
			$.ig.SpreadsheetUtilities.prototype.removeListener(this._viewModel().rowScrollRegion(), this.___listener);
			if (this.___selection != null) {
				$.ig.SpreadsheetUtilities.prototype.removeListener(this.___selection, this.___listener);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::OnUnloadedOverride()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::RenderCache()" />*/
	_renderCache: function () {
		return this._viewModel().__owner.renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::RenderCache()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	_render: function (g, dpi, renderRect, elementDpiOffset) {
		var pane = this._viewModel();
		var selection = pane._activeSelection() || pane.selection();
		var cellRanges = selection.cellRanges();
		var count = cellRanges.count();
		if (count > 0 && pane.columnScrollRegion()._selectionMode() != $.ig.excel.WorksheetProtectedSelectionMode.noCells) {
			var paneColumn = pane.columnScrollRegion();
			var paneRow = pane.rowScrollRegion();
			var zoom = paneRow._zoomLevel();
			var visibleRange = pane.visibleRange();
			var isSingleSelection = count == 1;
			var resourceProvider = paneColumn._resourceProvider();
			var headerSelectionBrush = $.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorderInHeader;
			var thickSelectionPen = isSingleSelection && paneColumn._sheetPaneOwner().renderCache().isTransparentResource(headerSelectionBrush);
			var outerPenType = isSingleSelection ? thickSelectionPen ? $.ig.CellBorderPen.prototype.thick : $.ig.CellBorderPen.prototype.medium : $.ig.CellBorderPen.prototype.thin;
			var outerPen = isSingleSelection ? $.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorder : $.ig.SpreadsheetResourceId.prototype.cellSelectionOuterBorder;
			var innerPen = $.ig.SpreadsheetResourceId.prototype.cellSelectionInnerBorder;
			var fill = $.ig.SpreadsheetResourceId.prototype.cellSelectionFill;
			var halfOuterPenThickness = $.ig.SpreadsheetUtilities.prototype.getPenThickness(outerPenType, paneColumn._pixelSizeX()) / 2;
			var pixelSize = dpi.logicalToDevicePixelFactor();
			var halfPixel = pixelSize / 2;
			var twoPixelSize = pixelSize * 2;
			var threePixelSize = pixelSize * 3;
			var onePlusHalfPixel = pixelSize + halfPixel;
			var xFactor = -elementDpiOffset.__x;
			var yFactor = -elementDpiOffset.__y;
			var OutOfViewExtent = 10;
			visibleRange = new $.ig.spreadsheet.SpreadsheetCellRange(Math.min(visibleRange.firstRow(), paneRow._getItemFromRelativeOffset(-OutOfViewExtent / zoom)._index()), Math.min(visibleRange.firstColumn(), paneColumn._getItemFromRelativeOffset(-OutOfViewExtent / zoom)._index()), Math.max(visibleRange.lastRow(), paneRow._getItemFromRelativeOffset((renderRect.height() + OutOfViewExtent) / zoom)._index()), Math.max(visibleRange.lastColumn(), paneColumn._getItemFromRelativeOffset((renderRect.width() + OutOfViewExtent) / zoom)._index()));
			var outerBorderAdjustment;
			if (thickSelectionPen) {
				outerBorderAdjustment = halfOuterPenThickness / 3;
			} else if (isSingleSelection) {
				outerBorderAdjustment = 0;
			} else {
				outerBorderAdjustment = halfOuterPenThickness;
			}
			for (var i = 0; i < count; i++) {
				var cellRange = cellRanges.item(i);
				cellRange = cellRange.intersect(visibleRange);
				if (cellRange.isEmpty()) {
					continue;
				}
				var left = paneColumn._getRelativeOffset1(cellRange.firstColumn(), true, true) * zoom + renderRect.x();
				var right = paneColumn._getRelativeOffset1(cellRange.lastColumn(), false, true) * zoom + renderRect.x();
				var top = paneRow._getRelativeOffset1(cellRange.firstRow(), true, true) * zoom + renderRect.y();
				var bottom = paneRow._getRelativeOffset1(cellRange.lastRow(), false, true) * zoom + renderRect.y();
				if (thickSelectionPen == false && i == selection.activeCellRangeIndex() && paneColumn._areHeadersVisible() == false) {
					if (cellRange.firstRow() == paneRow.startIndex()) {
						top += pixelSize;
					}
					if (cellRange.firstColumn() == paneColumn.startIndex()) {
						left += pixelSize;
					}
				}
				left = dpi.snapUp(left) - xFactor;
				right = dpi.snapUp(right) - xFactor;
				top = dpi.snapUp(top) - yFactor;
				bottom = dpi.snapUp(bottom) - yFactor;
				left -= pixelSize;
				top -= pixelSize;
				var width = right - left;
				var height = bottom - top;
				if (width > twoPixelSize && height > twoPixelSize) {
					var fillRect = new $.ig.Rect(0, left + twoPixelSize, top + twoPixelSize, Math.max(width - twoPixelSize * 2, 0), Math.max(height - twoPixelSize * 2, 0));
					if (i == selection.activeCellRangeIndex()) {
						var activeCellRange = selection._activeCellAsRange();
						var intersection = cellRange.intersect(activeCellRange);
						if (!intersection.isEmpty()) {
							var activeLeft = paneColumn._getRelativeOffset1(intersection.firstColumn(), true, true) * zoom + renderRect.x();
							var activeRight = paneColumn._getRelativeOffset1(intersection.lastColumn(), false, true) * zoom + renderRect.x();
							var activeTop = paneRow._getRelativeOffset1(intersection.firstRow(), true, true) * zoom + renderRect.y();
							var activeBottom = paneRow._getRelativeOffset1(intersection.lastRow(), false, true) * zoom + renderRect.y();
							activeBottom -= pixelSize;
							activeRight -= pixelSize;
							activeLeft = dpi.snapUp(activeLeft) - xFactor;
							activeRight = dpi.snapUp(activeRight) - xFactor;
							activeTop = dpi.snapUp(activeTop) - yFactor;
							activeBottom = dpi.snapUp(activeBottom) - yFactor;
							if (thickSelectionPen == false && i == selection.activeCellRangeIndex() && paneColumn._areHeadersVisible() == false) {
								if (intersection.firstRow() == paneRow.startIndex()) {
									activeTop += pixelSize;
								}
								if (intersection.firstColumn() == paneColumn.startIndex()) {
									activeLeft += pixelSize;
								}
							}
							var cellRect = new $.ig.Rect(0, activeLeft, activeTop, Math.max(activeRight - activeLeft, 0), Math.max(activeBottom - activeTop, 0));
							cellRect.intersect(fillRect);
							if (cellRect.isEmpty()) {
								g.fillRectangle1(fill, fillRect.x(), fillRect.y(), fillRect.width(), fillRect.height());
							} else {
								g.fillRectangle2(fill, fillRect.x(), fillRect.y(), fillRect.width(), fillRect.height(), cellRect.x(), cellRect.y(), cellRect.width(), cellRect.height());
							}
							if (!isSingleSelection) {
								g.drawRectangle($.ig.CellBorderPen.prototype.thin, $.ig.SpreadsheetResourceId.prototype.multiSelectActiveCellBorder, paneColumn._pixelSizeX(), activeLeft + onePlusHalfPixel, activeTop + onePlusHalfPixel, Math.max((activeRight - activeLeft) - threePixelSize, 0), Math.max((activeBottom - activeTop) - threePixelSize, 0));
							}
							fillRect = $.ig.Rect.prototype.empty();
						}
					}
					if (!fillRect.isEmpty()) {
						g.fillRectangle1(fill, fillRect.x(), fillRect.y(), fillRect.width(), fillRect.height());
					}
					g.drawRectangle($.ig.CellBorderPen.prototype.thin, innerPen, paneColumn._pixelSizeX(), left + onePlusHalfPixel, top + onePlusHalfPixel, Math.max(width - threePixelSize, 0), Math.max(height - threePixelSize, 0));
				}
				g.drawRectangle(outerPenType, outerPen, paneColumn._pixelSizeX(), left + outerBorderAdjustment, top + outerBorderAdjustment, Math.max(width - outerBorderAdjustment * 2, 0), Math.max(height - outerBorderAdjustment * 2, 0));
				if (isSingleSelection) {
					var selectionPen = $.ig.SpreadsheetResourceId.prototype.cellSelectionHandleBorder;
					var glyphRect;
					if (cellRanges.item(0).firstColumn() == 0 && cellRanges.item(0).lastColumn() == paneColumn._maxItemIndex()) {
						glyphRect = new $.ig.Rect(0, left, bottom - threePixelSize, 5 * pixelSize, 5 * pixelSize);
						g.drawLine($.ig.CellBorderPen.prototype.thin, selectionPen, paneColumn._pixelSizeX(), glyphRect.right() + halfPixel, glyphRect.y() - pixelSize, glyphRect.right() + halfPixel, glyphRect.bottom());
						g.drawLine($.ig.CellBorderPen.prototype.thin, selectionPen, paneColumn._pixelSizeX(), glyphRect.x() - pixelSize, glyphRect.y() - halfPixel, glyphRect.right(), glyphRect.y() - halfPixel);
					} else if (cellRanges.item(0).firstRow() == 0 && cellRanges.item(0).lastRow() == paneRow._maxItemIndex()) {
						glyphRect = new $.ig.Rect(0, right - threePixelSize, top, 5 * pixelSize, 5 * pixelSize);
						g.drawLine($.ig.CellBorderPen.prototype.thin, selectionPen, paneColumn._pixelSizeX(), glyphRect.x() - halfPixel, glyphRect.y() - pixelSize, glyphRect.x() - halfPixel, glyphRect.bottom());
						g.drawLine($.ig.CellBorderPen.prototype.thin, selectionPen, paneColumn._pixelSizeX(), glyphRect.x() - pixelSize, glyphRect.bottom() + halfPixel, glyphRect.right(), glyphRect.bottom() + halfPixel);
					} else {
						glyphRect = new $.ig.Rect(0, right - threePixelSize, bottom - threePixelSize, 5 * pixelSize, 5 * pixelSize);
						g.drawLine($.ig.CellBorderPen.prototype.thin, selectionPen, paneColumn._pixelSizeX(), glyphRect.x() - pixelSize, glyphRect.y() - halfPixel, glyphRect.right(), glyphRect.y() - halfPixel);
						g.drawLine($.ig.CellBorderPen.prototype.thin, selectionPen, paneColumn._pixelSizeX(), glyphRect.x() - halfPixel, glyphRect.y() - pixelSize, glyphRect.x() - halfPixel, glyphRect.bottom());
					}
					var handleBrush = $.ig.SpreadsheetResourceId.prototype.cellSelectionHandleFill;
					g.fillRectangle1(handleBrush, glyphRect.x(), glyphRect.y(), glyphRect.width(), glyphRect.height());
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::Render(Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		var isDirty = false;
		switch (property != null ? property : "") {
			case "":
			case "Offset":
				if (sender == this._viewModel().rowScrollRegion()._scrollInfo() || sender == this._viewModel().columnScrollRegion()._scrollInfo()) {
					isDirty = true;
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (this._viewModel().rowScrollRegion()._activeSelection() != null && this._viewModel().rowScrollRegion()._activeSelection()._isSelectedCellRangesSource(sender)) {
					isDirty = true;
				} else if (sender.getType() == $.ig.SpreadsheetUtilities.prototype.oCE_WorkItemPos) {
					isDirty = true;
				}
				break;
			case "ActiveSelection":
				if (this._viewModel().rowScrollRegion() == sender) {
					var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.spreadsheet.SpreadsheetSelection.prototype.$type, this.___selection, this._viewModel().rowScrollRegion()._activeSelection(), this.___listener, true);
					this.___selection = $ret.p0;
					isDirty = true;
				}
				break;
			case "SelectionMode":
			case "ResourceProvider":
				if (this._viewModel().rowScrollRegion() == sender) {
					isDirty = true;
				}
				break;
			case "ActiveCellAsRange":
				if (sender == this._viewModel().rowScrollRegion()._activeSelection()) {
					isDirty = true;
				}
				break;
			case "ResourceVersion":
				if (sender == this._viewModel().rowScrollRegion()._resourceProvider()) {
					isDirty = true;
				}
				break;
		}
		if (isDirty) {
			this._invalidateRender();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer, System.Object, System.String, System.Object)" />*/
	_onSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel._onSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer::OnSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer, System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneSelectionLayer', $.ig.SpreadsheetRendererElementLayer$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneSelectionLayer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderUtilities" />*/

$.ig.util.defType('SpreadsheetRenderUtilities', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderUtilities::DrawHeaderBackground(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	drawHeaderBackground: function (rowOrColumn, g, dpi, rect, elementDpiOffset) {
		var offsets = rowOrColumn._getRelativeItemPositions(true, true);
		var count = offsets.length - 1;
		var zoom = rowOrColumn._zoomLevel();
		var resourceProvider = rowOrColumn._resourceProvider();
		var brush, selectedBrush, fullySelectedBrush, hotTrackBrush;
		if (rowOrColumn._isRowHeader()) {
			brush = $.ig.SpreadsheetResourceId.prototype.rowHeaderBackground;
			selectedBrush = $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsBackground;
			fullySelectedBrush = $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedBackground;
			hotTrackBrush = $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackBackground;
		} else {
			brush = $.ig.SpreadsheetResourceId.prototype.columnHeaderBackground;
			selectedBrush = $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsBackground;
			fullySelectedBrush = $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedBackground;
			hotTrackBrush = $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackBackground;
		}
		var pixelSize = dpi.logicalToDevicePixelFactor();
		var xFactor = -elementDpiOffset.__x;
		var yFactor = -elementDpiOffset.__y;
		var isVertical = rowOrColumn._isRowHeader();
		var left = rect.left();
		var top = rect.top();
		var right = rect.right() - pixelSize / 2;
		var bottom = rect.bottom() - pixelSize / 2;
		var hasVisibleSelection = rowOrColumn._hasAnyVisibleSelection();
		var itemPositions = rowOrColumn._actualItemPositions();
		var hotTrackedIndex = rowOrColumn._hotTrackedIndex();
		var extra = $.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment;
		if (isVertical) {
			top += extra;
		} else {
			left += extra;
		}
		left = dpi.snapUp(left) - xFactor;
		right = dpi.snapUp(right) - xFactor;
		top = dpi.snapUp(top) - yFactor;
		bottom = dpi.snapUp(bottom) - yFactor;
		for (var i = 0; i < count; i++) {
			var start = offsets[i];
			var end = offsets[i + 1] - pixelSize;
			if (isVertical) {
				start += rect.y() + extra;
				end += rect.y() + extra;
				top = dpi.snapUp(start) - yFactor;
				bottom = dpi.snapUp(end) - yFactor;
			} else {
				start += rect.x() + extra;
				end += rect.x() + extra;
				left = dpi.snapUp(start) - xFactor;
				right = dpi.snapUp(end) - xFactor;
			}
			var brushToUse = brush;
			if (hasVisibleSelection || $.ig.util.nullableNotEquals(hotTrackedIndex, null)) {
				switch (rowOrColumn._getHeaderState(itemPositions.__inner[i]._index())) {
					case $.ig.SpreadsheetHeaderState.prototype.isHotTracked:
					case $.ig.SpreadsheetHeaderState.prototype.isHotTrackedSelected:
						brushToUse = hotTrackBrush;
						break;
					case $.ig.SpreadsheetHeaderState.prototype.hasCellsWithSelection:
						brushToUse = selectedBrush;
						break;
					case $.ig.SpreadsheetHeaderState.prototype.isSelected:
						brushToUse = fullySelectedBrush;
						break;
				}
			}
			var width = Math.max(right - left, 0);
			var height = Math.max(bottom - top, 0);
			g.fillRectangle1(brushToUse, left, top, width, height);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderUtilities::DrawHeaderBackground(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Grids.Core.ISpreadsheetGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	$type: new $.ig.Type('SpreadsheetRenderUtilities', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderUtilities" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation" />*/

$.ig.util.defType('SpreadsheetMouseOperation', 'PropertyChangeNotifierExtended', {
	init: function () {
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
	},
	___currentState: 0,
	___tooltip: null,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.MouseOperationState Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::CurrentState()" />*/
	_currentState: function (value) {
		if (arguments.length === 1) {
			if (this.___currentState != value) {
				var old = this.___currentState;
				this.___currentState = value;
				this._onCurrentStateChanged(old, value);
				this.onPropertyChanged("CurrentState");
			}
			return value;
		} else {
			return this.___currentState;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.MouseOperationState Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::CurrentState()" />*/
	,
	__executeInTransaction: null,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::ExecuteInTransaction()" />*/
	_executeInTransaction: function (value) {
		if (arguments.length === 1) {
			this.__executeInTransaction = value;
			return value;
		} else {
			return this.__executeInTransaction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::ExecuteInTransaction()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::ToolTip()" />*/
	_toolTip: function (value) {
		if (arguments.length === 1) {
			if (this.___tooltip != value) {
				this.___tooltip = value;
				this.onPropertyChanged("ToolTip");
			}
			return value;
		} else {
			return this.___tooltip;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::ToolTip()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnCaptureLost()" />*/
	_onCaptureLost: function () {
		if (this._currentState() == $.ig.MouseOperationState.prototype.started || this._currentState() == $.ig.MouseOperationState.prototype.starting) {
			this._currentState($.ig.MouseOperationState.prototype.cancelling);
			this._currentState($.ig.MouseOperationState.prototype.notStarted);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnCaptureLost()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDown: function (input) {
		if (input.hasCapture()) {
			input.endCapture();
		}
		$.ig.Debug.prototype.assert(this._currentState() == $.ig.MouseOperationState.prototype.notStarted);
		this._currentState($.ig.MouseOperationState.prototype.starting);
		if (this._onMouseDownOverride(input) && input.isInputContactPressed() && this._currentState() == $.ig.MouseOperationState.prototype.starting) {
			this._currentState($.ig.MouseOperationState.prototype.started);
			if (!input.hasCapture()) {
				input.startCapture();
			}
		} else if (this._currentState() == $.ig.MouseOperationState.prototype.starting) {
			this._currentState($.ig.MouseOperationState.prototype.notStarted);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseEnter: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseLeave: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMove: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUp: function (input) {
		if (this._currentState() == $.ig.MouseOperationState.prototype.started) {
			this._currentState($.ig.MouseOperationState.prototype.ending);
			if (input.hasCapture()) {
				input.endCapture();
			}
			this._onMouseUpOverride(input);
			$.ig.Debug.prototype.assert(this._currentState() == $.ig.MouseOperationState.prototype.ending);
			this._currentState($.ig.MouseOperationState.prototype.notStarted);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	_onPreMouseDown: function (proxy) {
		return $.ig.MouseDownInProgressResult.prototype.cancelOperationAndContinue;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	_onCurrentStateChanged: function (oldState, newState) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetMouseOperation', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1" />*/

$.ig.util.defType('SpreadsheetMouseOperation$1', 'SpreadsheetMouseOperation', {
	$t: null,
	init: function ($t) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.SpreadsheetMouseOperation.prototype.init.call(this);
	},
	___view: null,
	___bounds: null,
	___controlBounds: null,
	___lastMoveProxy: null,
	___rowScrollTimer: null,
	___colScrollTimer: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	_onCurrentStateChanged: function (oldState, newState) {
		switch (newState) {
			case $.ig.MouseOperationState.prototype.ending:
			case $.ig.MouseOperationState.prototype.cancelling:
			case $.ig.MouseOperationState.prototype.notStarted:
				this._stopTimers();
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMove: function (input) {
		if (input.hasCapture()) {
			var pos = input.getRelativePoint();
			var $ret = this._updateScrollTimer(this.___colScrollTimer, this._columnScrollRegion(), pos.__x, this.___bounds.left(), this.___bounds.right(), this._allowScrollColumns());
			this.___colScrollTimer = $ret.p0;
			var $ret1 = this._updateScrollTimer(this.___rowScrollTimer, this._rowScrollRegion(), pos.__y, this.___bounds.top(), this.___bounds.bottom(), this._allowScrollRows());
			this.___rowScrollTimer = $ret1.p0;
			if ((this.___rowScrollTimer != null && this.___rowScrollTimer.isEnabled()) || (this.___colScrollTimer != null && this.___colScrollTimer.isEnabled())) {
				this.___lastMoveProxy = input;
			} else {
				this.___lastMoveProxy = null;
			}
		} else {
			this.___lastMoveProxy = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::AllowScrollRows()" />*/
	_allowScrollRows: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::ColumnScrollRegion()" />*/
	_columnScrollRegion: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::ColumnScrollRegion()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::ControlBounds()" />*/
	_controlBounds: function () {
		return this.___controlBounds;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::ControlBounds()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::Cursor()" />*/
	_cursor: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::Cursor()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::RowScrollRegion()" />*/
	_rowScrollRegion: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::RowScrollRegion()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::View()" />*/
	_view: function () {
		return this.___view;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::View()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T, System.Windows.Rect, System.Windows.Rect)" />*/
	_initialize: function (view, layerBounds, controlBoundsRelativeToLayer) {
		$.ig.Debug.prototype.assert(view == null || this.___view == null);
		var oldView = this.___view;
		this.___view = view;
		this.___controlBounds = controlBoundsRelativeToLayer;
		this.___bounds = layerBounds;
		if (this.___view == null) {
			this._onReleased(oldView);
		} else {
			this._onAttached(view);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::Initialize(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T, System.Windows.Rect, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::ActivatePane()" />*/
	_activatePane: function () {
		var row = this._rowScrollRegion();
		var col = this._columnScrollRegion();
		if (row == null) {
			if (col == null) {
				return false;
			}
			row = $.ig.util.cast($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, col._adjacentRowColumn());
			$.ig.Debug.prototype.assert(row != null);
		} else if (col == null) {
			col = $.ig.util.cast($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, row._adjacentRowColumn());
			$.ig.Debug.prototype.assert(col != null);
		}
		var owner = row._sheetPaneOwner();
		var pane = owner.getPane(row, col);
		if (pane == null) {
			return false;
		}
		if (!owner.canActivatePane(pane)) {
			return owner.activePane() != null && (row.isFrozen() || col.isFrozen());
		}
		return owner.activatePane(pane);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::ActivatePane()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T)" />*/
	_onAttached: function (newView) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T)" />*/
	_onReleased: function (oldView) {
		this._stopTimers();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation.T)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::CalculateTimerInterval(System.Double)" />*/
	_calculateTimerInterval: function (offset) {
		var MaxOffset = 118;
		offset = Math.min(MaxOffset - 2, Math.abs(offset));
		return Math.pow((MaxOffset - offset) / MaxOffset, 3) * 500;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::CalculateTimerInterval(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnScrollTimerTick()" />*/
	_onScrollTimerTick: function () {
		var scrollRegion = this._columnScrollRegion() || this._rowScrollRegion();
		if (scrollRegion != null) {
			scrollRegion._sheetPaneOwner().verifyScrollPositions();
		}
		if (this.___lastMoveProxy != null) {
			this._onMouseMove(this.___lastMoveProxy);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::OnScrollTimerTick()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::StopTimer(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer)" />*/
	_stopTimer: function (timer) {
		if (timer != null) {
			timer.stopTimer();
		}
		timer = null;
		return {
			p0: timer
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::StopTimer(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::StopTimers()" />*/
	_stopTimers: function () {
		this.___lastMoveProxy = null;
		var $ret = this._stopTimer(this.___rowScrollTimer);
		this.___rowScrollTimer = $ret.p0;
		var $ret1 = this._stopTimer(this.___colScrollTimer);
		this.___colScrollTimer = $ret1.p0;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::StopTimers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::UpdateScrollTimer(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double, System.Double, System.Double, System.Boolean)" />*/
	_updateScrollTimer: function (timer, scrollRegion, mousePos, boundsStart, boundsEnd, allowScroll) {
		if (scrollRegion == null || !allowScroll) {
			var $ret = this._stopTimer(timer);
			timer = $ret.p0;
		} else {
			if (timer == null) {
				timer = new $.ig.SpreadsheetMouseOperation_ScrollTimer$1(this.$t, this._onScrollTimerTick.runOn(this));
			}
			var isIncrease = mousePos >= boundsEnd;
			if (!isIncrease && mousePos >= boundsStart) {
				timer.stopTimer();
			} else {
				var delta = isIncrease ? mousePos - boundsEnd : boundsStart - mousePos;
				var interval = this._calculateTimerInterval(delta);
				timer.startTimer(scrollRegion, isIncrease, $.ig.truncate(Math.abs(interval)));
			}
		}
		return {
			p0: timer
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1::UpdateScrollTimer(Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double, System.Double, System.Double, System.Boolean)" />*/
	,
	$type: new $.ig.Type('SpreadsheetMouseOperation$1', $.ig.SpreadsheetMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneMouseOperation" />*/

$.ig.util.defType('SpreadsheetPaneMouseOperation', 'SpreadsheetMouseOperation$1', {
	init: function () {
		$.ig.SpreadsheetMouseOperation$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPaneMouseOperation::ColumnScrollRegion()" />*/
	_columnScrollRegion: function () {
		return this._view().columnScrollRegion();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPaneMouseOperation::ColumnScrollRegion()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPaneMouseOperation::RowScrollRegion()" />*/
	_rowScrollRegion: function () {
		return this._view().rowScrollRegion();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetPaneMouseOperation::RowScrollRegion()" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneMouseOperation', $.ig.SpreadsheetMouseOperation$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneMouseOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation" />*/

$.ig.util.defType('SpreadsheetCellContextMenuOperation', 'SpreadsheetPaneMouseOperation', {
	init: function () {
		$.ig.SpreadsheetPaneMouseOperation.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::AllowScrollRows()" />*/
	_allowScrollRows: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::Cursor()" />*/
	_cursor: function () {
		return $.ig.SpreadsheetCursor.prototype.selectMode;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::Cursor()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
		var selection = this._view()._activeSelection();
		var ctrl = selection._spreadsheet();
		if (ctrl != null && selection != null) {
			var relativePoint = input.getRelativePoint();
			if (ctrl._tryExitEditMode(true)) {
				var pane = this._view();
				var zoom = pane.rowScrollRegion()._zoomLevel();
				var rowItem = pane.rowScrollRegion()._getItemFromRelativeOffset(relativePoint.__y / zoom);
				var colItem = pane.columnScrollRegion()._getItemFromRelativeOffset(relativePoint.__x / zoom);
				var cellUnderMouse = new $.ig.spreadsheet.SpreadsheetCell(rowItem._index(), colItem._index());
				if (!selection._contains(cellUnderMouse)) {
					if (!selection._resetSelection1(cellUnderMouse)) {
						return false;
					}
				}
				var area = $.ig.SpreadsheetUtilities.prototype.getCellContextMenuArea(selection);
				ctrl._viewResolved().ShowPaneContextMenu(this._view(), area, relativePoint);
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellContextMenuOperation', $.ig.SpreadsheetPaneMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellContextMenuOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation" />*/

$.ig.util.defType('SpreadsheetHeaderMouseOperation', 'SpreadsheetMouseOperation$1', {
	init: function () {
		$.ig.SpreadsheetMouseOperation$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation::ColumnScrollRegion()" />*/
	_columnScrollRegion: function () {
		return $.ig.util.cast($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, this._view());
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation::ColumnScrollRegion()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation::RowScrollRegion()" />*/
	_rowScrollRegion: function () {
		return $.ig.util.cast($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, this._view());
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation::RowScrollRegion()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation::IsRowHeader()" />*/
	_isRowHeader: function () {
		return this._view() != null && this._view()._isRowHeader();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation::IsRowHeader()" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderMouseOperation', $.ig.SpreadsheetMouseOperation$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderMouseOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation" />*/

$.ig.util.defType('SpreadsheetHeaderContextMenuOperation', 'SpreadsheetHeaderMouseOperation', {
	init: function () {
		$.ig.SpreadsheetHeaderMouseOperation.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::AllowScrollRows()" />*/
	_allowScrollRows: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::Cursor()" />*/
	_cursor: function () {
		return $.ig.SpreadsheetCursor.prototype.selectMode;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::Cursor()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
		var selection = this._view()._activeSelection();
		var ctrl = selection._spreadsheet();
		if (ctrl != null) {
			var relativePoint = input.getRelativePoint();
			if (ctrl._tryExitEditMode(true)) {
				var scrollRegion = this._view();
				var isRowHeader = $.ig.util.cast($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, scrollRegion) !== null;
				var otherRegion = scrollRegion._adjacentRowColumn();
				var zoom = scrollRegion._zoomLevel();
				var offset = isRowHeader ? relativePoint.__y : relativePoint.__x;
				var headerItem = scrollRegion._getItemFromRelativeOffset(offset / zoom);
				var selectedItems = isRowHeader ? selection._selectedRows() : selection._selectedColumns();
				if ($.ig.SpreadsheetUtilities.prototype.contains$1($.ig.Number.prototype.$type, selectedItems, headerItem._index()) == false) {
					var range = isRowHeader ? new $.ig.spreadsheet.SpreadsheetCellRange(headerItem._index(), selection._availableColumnRange().__start, headerItem._index(), selection._availableColumnRange().__end) : new $.ig.spreadsheet.SpreadsheetCellRange(selection._availableRowRange().__start, headerItem._index(), selection._availableRowRange().__end, headerItem._index());
					var activeCell = isRowHeader ? new $.ig.spreadsheet.SpreadsheetCell(headerItem._index(), otherRegion.startIndex()) : new $.ig.spreadsheet.SpreadsheetCell(otherRegion.startIndex(), headerItem._index());
					if (false == selection._resetSelection2(range, activeCell, false)) {
						return false;
					}
				}
				ctrl._viewResolved().ShowHeaderContextMenu(this._view(), relativePoint);
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderContextMenuOperation', $.ig.SpreadsheetHeaderMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderContextMenuOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation" />*/

$.ig.util.defType('SpreadsheetEnterEditModeOperation', 'SpreadsheetPaneMouseOperation', {
	init: function () {
		$.ig.SpreadsheetPaneMouseOperation.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::AllowScrollRows()" />*/
	_allowScrollRows: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::Cursor()" />*/
	_cursor: function () {
		return $.ig.SpreadsheetCursor.prototype.selectMode;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::Cursor()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
		var ctrl = this._view().rowScrollRegion()._activeSelection()._spreadsheet();
		if (ctrl != null) {
			ctrl._enterEditModeForDoubleClick(input.getRelativePoint(), this._view());
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetEnterEditModeOperation', $.ig.SpreadsheetPaneMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetEnterEditModeOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation" />*/

$.ig.util.defType('SpreadsheetHeaderResizeOperation', 'SpreadsheetHeaderMouseOperation', {
	___operation: 0,
	___initialAdjustment: 0,
	___initialOffset: 0,
	___maxNearAdjustment: 0,
	___maxFarAdjustment: 0,
	___lastOffset: 0,
	___itemPositionIndex: 0,
	___nextVisibleItems: null,
	___isAutoSizeOperation: false,
	___isUnhideOperation: false,
	___forceNoOp: false,
	init: function (operation) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype.init.call(this);
		this.___operation = operation;
		this.___isUnhideOperation = operation == $.ig.SpreadsheetHeaderResizeType.prototype.unhide;
		this.___isAutoSizeOperation = operation == $.ig.SpreadsheetHeaderResizeType.prototype.autoSize;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::AllowScrollRows()" />*/
	_allowScrollRows: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::Cursor()" />*/
	_cursor: function () {
		return this._isRowHeader() ? this.___isUnhideOperation ? $.ig.SpreadsheetCursor.prototype.unhideRow : $.ig.SpreadsheetCursor.prototype.resizeRow : this.___isUnhideOperation ? $.ig.SpreadsheetCursor.prototype.unhideColumn : $.ig.SpreadsheetCursor.prototype.resizeColumn;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::Cursor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	_onAttached: function (newView) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onAttached.call(this, newView);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	_onCurrentStateChanged: function (oldState, newState) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onCurrentStateChanged.call(this, oldState, newState);
		switch (newState) {
			case $.ig.MouseOperationState.prototype.cancelling:
			case $.ig.MouseOperationState.prototype.notStarted:
				this._view()._itemBeingResized($.ig.util.toNullable($.ig.Number.prototype.$type, null));
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
		this.___forceNoOp = false;
		if (this.___isAutoSizeOperation) {
			this._performAutoSize();
			return false;
		}
		this._view()._itemBeingResized($.ig.util.toNullable($.ig.Number.prototype.$type, this._indexToResize()));
		var pt = input.getRelativePoint();
		var view = this._view();
		var offset = (this._isRowHeader() ? pt.__y : pt.__x) / view._zoomLevel();
		var item = view._getItemPosition()(this._indexToResize());
		var itemPos = view._getRelativeOffset(item, false, true);
		this.___nextVisibleItems = null;
		this.___itemPositionIndex = view._getItemPositionIndexFromActualIndex(this._indexToResize() + (this.___isUnhideOperation ? 1 : 0));
		$.ig.Debug.prototype.assert(this.___itemPositionIndex >= 0 || ($.ig.util.nullableEquals(view._previousVisibleItemIndex(), null) && this.___isUnhideOperation) || ($.ig.util.nullableEquals(view._nextVisibleItemIndex(), null) && this.___isUnhideOperation));
		this.___initialAdjustment = offset - itemPos;
		this.___initialOffset = offset;
		this.___lastOffset = offset - this.___initialOffset;
		view._itemBeingResizedRelativeEdge(offset - this.___initialAdjustment);
		this.___maxNearAdjustment = Math.min(this.___initialAdjustment - offset, 0);
		this.___maxFarAdjustment = view._convertItemUnitsToPixels()($.ig.truncate(Math.max(view._maxItemExtent() - item._extent() + this.___initialAdjustment, 0)));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMove: function (input) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onMouseMove.call(this, input);
		if (this._currentState() == $.ig.MouseOperationState.prototype.started) {
			this._onMouseMoveImpl(input);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseMoveImpl(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMoveImpl: function (input) {
		var pt = input.getRelativePoint();
		var view = this._view();
		var offset = (this._isRowHeader() ? pt.__y : pt.__x) / view._zoomLevel();
		var newOffset = offset - this.___initialOffset;
		newOffset = Math.max(Math.min(newOffset, this.___maxFarAdjustment), this.___maxNearAdjustment);
		if (newOffset != this.___lastOffset) {
			this.___lastOffset = newOffset;
			var itemPositions = view._itemPositions();
			var actualPositions = view._actualItemPositions();
			var ctrlBounds = this._controlBounds();
			if (this._isRowHeader() && (pt.__y < ctrlBounds.y() || pt.__y >= ctrlBounds.bottom())) {
				this.___forceNoOp = true;
			} else if (!this._isRowHeader() && (pt.__x < ctrlBounds.x() || pt.__x >= ctrlBounds.right())) {
				this.___forceNoOp = true;
			} else {
				this.___forceNoOp = false;
			}
			view._itemBeingResizedRelativeEdge((this.___forceNoOp ? this.___initialOffset : offset) - this.___initialAdjustment);
			$.ig.Debug.prototype.assert(itemPositions != actualPositions);
			actualPositions.beginUpdate();
			actualPositions.clear();
			if (this.___forceNoOp || $.ig.CoreUtilities.prototype.areClose(newOffset, 0) || (newOffset < 0 && this.___itemPositionIndex < 0)) {
				actualPositions._reInitialize(itemPositions);
			} else if (this.___itemPositionIndex < 0) {
				actualPositions._reInitialize(itemPositions);
				var startingOffset = itemPositions.count() == 0 ? 0 : $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, itemPositions)._end();
				var newExtent = view._convertPixelsToItemUnits()(Math.max(newOffset + view._startIndexOutOfViewExtent() - this.___initialAdjustment, 0));
				actualPositions.add(new $.ig.WorksheetItemPosition(1, view._maxItemIndex(), startingOffset, newExtent));
			} else if (newOffset < 0) {
				if (this.___nextVisibleItems == null) {
					this.___nextVisibleItems = view._getItemsThatWouldFit(this._indexToResize() + 1);
				}
				var itemUnitsLeft = view._convertPixelsToItemUnits()(Math.max(offset + view._startIndexOutOfViewExtent() - this.___initialAdjustment, 0));
				for (var i = 0; i <= this.___itemPositionIndex; i++) {
					if (itemUnitsLeft <= 0) {
						break;
					}
					var itemPos = itemPositions.__inner[i];
					var itemExtent = Math.min(itemPos._extent(), itemUnitsLeft);
					itemUnitsLeft -= itemExtent;
					actualPositions.add(new $.ig.WorksheetItemPosition(1, itemPos._index(), itemPos._offset(), itemExtent));
				}
				var nextOffset = actualPositions.count() == 0 ? itemPositions.__inner[0]._offset() : actualPositions.__inner[actualPositions.count() - 1]._end();
				for (var i1 = 0; i1 < this.___nextVisibleItems.count(); i1++) {
					var oldItem = this.___nextVisibleItems.item(i1);
					actualPositions.add(new $.ig.WorksheetItemPosition(1, oldItem._index(), nextOffset, oldItem._extent()));
					nextOffset += oldItem._extent();
				}
			} else {
				for (var i2 = 0; i2 < this.___itemPositionIndex; i2++) {
					actualPositions.add(itemPositions.__inner[i2]);
				}
				var item = this.___isUnhideOperation ? new $.ig.WorksheetItemPosition(1, this._indexToResize(), itemPositions.__inner[this.___itemPositionIndex]._offset(), 0) : itemPositions.__inner[this.___itemPositionIndex];
				var newExtent1 = view._convertPixelsToItemUnits()(newOffset) + item._extent();
				actualPositions.add(new $.ig.WorksheetItemPosition(1, item._index(), item._offset(), newExtent1));
				var nextOffset1 = actualPositions.__inner[actualPositions.count() - 1]._end();
				var start = this.___isUnhideOperation ? this.___itemPositionIndex : this.___itemPositionIndex + 1;
				for (var i3 = start; i3 < itemPositions.count(); i3++) {
					var oldItem1 = itemPositions.__inner[i3];
					actualPositions.add(new $.ig.WorksheetItemPosition(1, oldItem1._index(), nextOffset1, oldItem1._extent()));
					nextOffset1 += oldItem1._extent();
				}
			}
			actualPositions.endUpdate();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseMoveImpl(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
		if (!this.___forceNoOp && !$.ig.CoreUtilities.prototype.areClose(this.___lastOffset, 0)) {
			if (this._executeInTransaction() != null) {
				var isRow = this._isRowHeader();
				var operation = isRow ? $.ig.SpreadsheetTransactionOperation.prototype.resizeRow : $.ig.SpreadsheetTransactionOperation.prototype.resizeColumn;
				var keepSelection = $.ig.SpreadsheetHeaderResizeOperation.prototype._shouldUpdateSelection(this._view()._activeSelection(), isRow, this._indexToResize());
				this._executeInTransaction()(operation, keepSelection, this._updateItems.runOn(this));
			} else {
				this._updateItems();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	_onPreMouseDown: function (proxy) {
		return $.ig.MouseDownInProgressResult.prototype.ignoreMouseDown;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	_onReleased: function (oldView) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onReleased.call(this, oldView);
		oldView._itemBeingResized($.ig.util.toNullable($.ig.Number.prototype.$type, null));
		this.___forceNoOp = false;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	__indexToResize: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::IndexToResize()" />*/
	_indexToResize: function (value) {
		if (arguments.length === 1) {
			this.__indexToResize = value;
			return value;
		} else {
			return this.__indexToResize;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::IndexToResize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::PerformAutoSize()" />*/
	_performAutoSize: function () {
		if (this._executeInTransaction() != null) {
			var isRow = this._isRowHeader();
			var operation = isRow ? $.ig.SpreadsheetTransactionOperation.prototype.resizeRow : $.ig.SpreadsheetTransactionOperation.prototype.resizeColumn;
			var keepSelection = $.ig.SpreadsheetHeaderResizeOperation.prototype._shouldUpdateSelection(this._view()._activeSelection(), isRow, this._indexToResize());
			this._executeInTransaction()(operation, keepSelection, this._performAutoSizeImpl.runOn(this));
		} else {
			this._performAutoSizeImpl();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::PerformAutoSize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::PerformAutoSizeImpl()" />*/
	_performAutoSizeImpl: function () {
		if ($.ig.SpreadsheetHeaderResizeOperation.prototype._shouldUpdateSelection(this._view()._activeSelection(), this._isRowHeader(), this._indexToResize())) {
			$.ig.SpreadsheetHeaderResizeOperation.prototype._updateSelection(this._view()._activeSelection(), this._isRowHeader(), this._view(), -1);
		} else {
			this._view()._setItemExtent()(-1, this._indexToResize());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::PerformAutoSizeImpl()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::ShouldUpdateSelection(Infragistics.Controls.Grids.Core.SpreadsheetSelection, System.Boolean, System.Int32)" />*/
	_shouldUpdateSelection: function (selection, isRow, indexToResize) {
		var useSelection = false;
		var en = selection.cellRanges().getEnumerator();
		while (en.moveNext()) {
			var range = en.current();
			if (isRow && range.firstRow() <= indexToResize && indexToResize <= range.lastRow()) {
				useSelection = true;
				break;
			} else if (!isRow && range.firstColumn() <= indexToResize && indexToResize <= range.lastColumn()) {
				useSelection = true;
				break;
			}
		}
		if (useSelection) {
			var en1 = selection.cellRanges().getEnumerator();
			while (en1.moveNext()) {
				var range1 = en1.current();
				if (isRow && !selection._isRowSelection(range1)) {
					useSelection = false;
					break;
				} else if (!isRow && !selection._isColumnSelection(range1)) {
					useSelection = false;
					break;
				}
			}
		}
		return useSelection;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::ShouldUpdateSelection(Infragistics.Controls.Grids.Core.SpreadsheetSelection, System.Boolean, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::UpdateItems()" />*/
	_updateItems: function () {
		var selection = this._view()._activeSelection();
		var isRow = this._isRowHeader();
		var useSelection = $.ig.SpreadsheetHeaderResizeOperation.prototype._shouldUpdateSelection(selection, isRow, this._indexToResize());
		var view = this._view();
		if (this.___lastOffset > 0) {
			var extent = this.___isUnhideOperation ? 0 : view._itemPositions().__inner[this.___itemPositionIndex]._extent();
			var newExtent = (extent + view._convertPixelsToItemUnits()(this.___lastOffset));
			if (useSelection) {
				$.ig.SpreadsheetHeaderResizeOperation.prototype._updateSelection(selection, isRow, view, newExtent);
			} else {
				view._setItemExtent()(newExtent, this._indexToResize());
			}
		} else {
			var oldItems = view._itemPositions();
			var newItems = view._actualItemPositions();
			$.ig.Debug.prototype.assert(oldItems != newItems);
			var endIndex = this.___isUnhideOperation ? this.___itemPositionIndex : this.___itemPositionIndex + 1;
			if (useSelection) {
				var newItemExtent = 0;
				for (var i = 0; i < newItems.count(); i++) {
					if (newItems.__inner[i]._index() == this._indexToResize()) {
						newItemExtent = newItems.__inner[i]._extent();
						break;
					}
				}
				$.ig.SpreadsheetHeaderResizeOperation.prototype._updateSelection(selection, isRow, view, newItemExtent);
			} else {
				var idx = 0;
				for (; idx < endIndex; idx++) {
					var oldItem = oldItems.__inner[idx];
					var newItem = newItems.__inner[idx];
					if (oldItem._index() != newItem._index()) {
						break;
					}
					if (oldItem._extent() != newItem._extent()) {
						view._setItemExtent()(newItem._extent(), newItem._index());
					}
				}
				for (; idx < endIndex; idx++) {
					var oldItem1 = oldItems.__inner[idx];
					view._setItemExtent()(0, oldItem1._index());
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::UpdateItems()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::UpdateSelection(Infragistics.Controls.Grids.Core.SpreadsheetSelection, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Int32)" />*/
	_updateSelection: function (selection, isRow, view, newExtent) {
		var collection = isRow ? selection._allRows() : selection._allColumns();
		var areAllItemsSelected = isRow ? selection._areAllRowsSelected() : selection._areAllColumnsSelected();
		if (areAllItemsSelected) {
			view._setItemExtentForAll()(newExtent);
		} else {
			view._setItemExtentForMany()(newExtent, $.ig.Enumerable.prototype.toArray$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), collection));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation::UpdateSelection(Infragistics.Controls.Grids.Core.SpreadsheetSelection, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Int32)" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderResizeOperation', $.ig.SpreadsheetHeaderMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderResizeOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1" />*/

$.ig.util.defType('SpreadsheetInteractionManager$1', 'Object', {
	$t: null,
	__view: null,
	__currentOperation: null,
	__currentOperationType: 0,
	__controlForCapture: null,
	__cursor: 0,
	_owner: null,
	init: function ($t, view, owner) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(view);
		this._owner = owner;
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1(this.$t, this.__view, view, this, true);
		this.__view = $ret.p0;
		this.initializeCursor();
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::Control()" />*/
	control: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::Control()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::ControlForCapture()" />*/
	controlForCapture: function (value) {
		if (arguments.length === 1) {
			if (value != this.__controlForCapture) {
				if (this.__controlForCapture != null) {
					this.__controlForCapture._mouseOperationWithCapture(null);
				}
				this.__controlForCapture = value;
				if (this.__controlForCapture != null) {
					this.__controlForCapture._mouseOperationWithCapture(this.__currentOperation);
				}
			}
			return value;
		} else {
			return this.__controlForCapture;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::ControlForCapture()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::Cursor()" />*/
	cursor: function (value) {
		if (arguments.length === 1) {
			if (value != this.__cursor) {
				this.__cursor = value;
				this._owner.onCursorChanged(value);
			}
			return value;
		} else {
			return this.__cursor;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::Cursor()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager.T Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::View()" />*/
	view: function () {
		return this.__view;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager.T Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::View()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::ExecuteInTransaction(Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation, System.Boolean, System.Action)" />*/
	executeInTransaction: function (operation, keepSelection, action) {
		var ctrl = this.control();
		if (ctrl != null) {
			var pane = ctrl.activePane();
			$.ig.Debug.prototype.assert($.ig.util.cast($.ig.SpreadsheetPaneManager.prototype.$type, pane.__owner) !== null);
			var sheetManager = $.ig.util.cast($.ig.SpreadsheetPaneManager.prototype.$type, pane.__owner);
			if (sheetManager != null) {
				ctrl._executeActionWithUndo(operation, action, null, false, null, keepSelection, false);
				return;
			}
		}
		action();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::ExecuteInTransaction(Infragistics.Controls.Grids.Core.SpreadsheetTransactionOperation, System.Boolean, System.Action)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::GetMouseOperation(Infragistics.Controls.Core.InputProxy)" />*/
	getMouseOperation: function (proxy) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::GetMouseOperation(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::InitializeCursor()" />*/
	initializeCursor: function () {
		var cursor = this.__currentOperation != null ? this.__currentOperation._cursor() : $.ig.SpreadsheetCursor.prototype.arrow;
		this.cursor(cursor);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::InitializeCursor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnGotMouseCapture()" />*/
	onGotMouseCapture: function () {
		var ctrl = this.control();
		$.ig.Debug.prototype.assert(ctrl != null && this.__currentOperation != null);
		this.controlForCapture(ctrl);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnGotMouseCapture()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnLostMouseCapture()" />*/
	onLostMouseCapture: function () {
		this.controlForCapture(null);
		if (this.__currentOperation != null) {
			this.__currentOperation._onCaptureLost();
		}
		this.releaseOperationIfEnded();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnLostMouseCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (proxy) {
		var handled = false;
		var ctrl = this.control();
		if (ctrl != null) {
			handled = true;
			if (!ctrl._tryExitEditMode(true)) {
				return handled;
			}
			this._owner.focusControlIfNeeded();
		}
		if (!proxy.isInputContactPressed()) {
			return handled;
		}
		if (this.__currentOperation != null && this.__currentOperation._currentState() != $.ig.MouseOperationState.prototype.notStarted) {
			handled = true;
			var existingDownAction = this.__currentOperation._onPreMouseDown(proxy);
			if (existingDownAction == $.ig.MouseDownInProgressResult.prototype.ignoreMouseDown) {
				return handled;
			}
			proxy.endCapture();
			$.ig.Debug.prototype.assert(this.__currentOperation == null || this.__currentOperation._currentState() == $.ig.MouseOperationState.prototype.notStarted);
			if (existingDownAction == $.ig.MouseDownInProgressResult.prototype.cancelOperationAndSkip) {
				return handled;
			}
		}
		this.verifyCurrentOperation(proxy);
		if (this.__currentOperation != null) {
			this.__currentOperationType = proxy.getChangeType();
			this.__currentOperation._onMouseDown(proxy);
			handled = true;
			this.verifyCurrentOperation(proxy);
		}
		return handled;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseEnter: function (proxy) {
		this.verifyCurrentOperation(proxy);
		if (this.__currentOperation != null) {
			this.__currentOperation._onMouseEnter(proxy);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseLeave: function (proxy) {
		if (this.__currentOperation != null) {
			this.__currentOperation._onMouseLeave(proxy);
			this.releaseOperationIfEnded();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (proxy) {
		this.verifyCurrentOperation(proxy);
		if (this.__currentOperation != null) {
			this.__currentOperation._onMouseMove(proxy);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (proxy) {
		if (this.__currentOperation != null) {
			if (proxy.getChangeType() == this.__currentOperationType || this.__currentOperationType == $.ig.InputContactChangeType.prototype.none) {
				this.controlForCapture(null);
				this.__currentOperation._onMouseUp(proxy);
			}
			this.verifyCurrentOperation(proxy);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		if (sender == this.__currentOperation) {
			switch (property) {
				case "Cursor":
					this.initializeCursor();
					break;
				case "ToolTip":
					this.verifyToolTip();
					break;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::ReleaseOperationIfEnded()" />*/
	releaseOperationIfEnded: function () {
		if (this.__currentOperation != null && this.__currentOperation._currentState() == $.ig.MouseOperationState.prototype.notStarted) {
			this.controlForCapture(null);
			this.__currentOperation._executeInTransaction(null);
			this.__currentOperation._initialize(null, $.ig.Rect.prototype.empty(), $.ig.Rect.prototype.empty());
			this.__currentOperation = null;
			this.initializeCursor();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::ReleaseOperationIfEnded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::VerifyCurrentOperation(Infragistics.Controls.Core.InputProxy)" />*/
	verifyCurrentOperation: function (proxy) {
		if (this.__currentOperation == null || this.__currentOperation._currentState() == $.ig.MouseOperationState.prototype.notStarted) {
			var newOperation = this.getMouseOperation(proxy);
			if (newOperation != this.__currentOperation) {
				var oldOperation = this.__currentOperation;
				this.__currentOperation = newOperation;
				if (oldOperation != null) {
					oldOperation._initialize(null, $.ig.Rect.prototype.empty(), $.ig.Rect.prototype.empty());
					oldOperation._executeInTransaction(null);
					$.ig.SpreadsheetUtilities.prototype.removeListener(oldOperation, this);
				}
				if (newOperation != null) {
					$.ig.SpreadsheetUtilities.prototype.addListener(newOperation, this, false);
				}
				this.__currentOperationType = $.ig.InputContactChangeType.prototype.none;
				var ctrlForCapture = this.controlForCapture();
				if (ctrlForCapture != null) {
					this.controlForCapture(null);
					if (newOperation != null) {
						this.controlForCapture(ctrlForCapture);
					}
				}
				if (newOperation != null) {
					var ctrl = this.control();
					var ctrlBounds = this._owner._getRelativeSpreadsheetControlBounds$i();
					var thisBounds = this._owner._getLayerContainerSize$i();
					newOperation._executeInTransaction(this.executeInTransaction.runOn(this));
					newOperation._initialize(this.view(), new $.ig.Rect(0, 0, 0, thisBounds.width(), thisBounds.height()), ctrlBounds);
				}
				this.initializeCursor();
				this.verifyToolTip();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::VerifyCurrentOperation(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::VerifyToolTip()" />*/
	verifyToolTip: function () {
		var ctrl = this.control();
		var canDisplayToolTip = this._owner.isToolTipAllowed();
		if (this.__currentOperation == null || this.__currentOperation._toolTip() == null || canDisplayToolTip == false) {
			this._owner.hideToolTip();
		}
		if (canDisplayToolTip && this.__currentOperation != null && this.__currentOperation._toolTip() != null) {
			this._owner.showToolTip(this.__currentOperation._toolTip());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::VerifyToolTip()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnPropertyValueChanged(System.Object, System.String, System.Object)" />*/
	onPropertyValueChanged: function (dataItem, property, extraInfo) {
		this.onSubObjectPropertyChanged(dataItem, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1::OnPropertyValueChanged(System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('SpreadsheetInteractionManager$1', $.ig.Object.prototype.$type, [$.ig.IPropertyChangeListener.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetInteractionManager`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1" />*/

$.ig.util.defType('SpreadsheetMouseOperation_ScrollTimer$1', 'Object', {
	$t: null,
	__scrollRegion: null,
	__timer: null,
	__increase: false,
	__afterScrollAction: null,
	init: function ($t, afterScrollAction) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		this.__afterScrollAction = afterScrollAction;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::IsEnabled()" />*/
	isEnabled: function () {
		return this.__timer != null && this.__timer.isEnabled();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::IsEnabled()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::StartTimer(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Boolean, System.Int32)" />*/
	startTimer: function (scrollRegion, increase, intervalInMs) {
		this.__increase = increase;
		this.__scrollRegion = scrollRegion;
		if (this.__timer == null) {
			this.__timer = new $.ig.PlatformTimer();
			var $t = this.__timer;
			$t.tick = $.ig.Delegate.prototype.combine($t.tick, this.onTimerTick.runOn(this));
		}
		if (!this.__timer.isEnabled()) {
			this.__timer.interval(intervalInMs);
			this.__timer.start();
		} else {
			this.__timer.interval(intervalInMs);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::StartTimer(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Boolean, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::StopTimer()" />*/
	stopTimer: function () {
		if (this.__timer != null) {
			this.__timer.stop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::StopTimer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::OnTimerTick(System.Object, System.EventArgs)" />*/
	onTimerTick: function (sender, e) {
		this.__scrollRegion._scrollInfo()._scroll(this.__increase ? $.ig.ScrollInfoAmount.prototype.smallIncrement : $.ig.ScrollInfoAmount.prototype.smallDecrement);
		this.__afterScrollAction();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1::OnTimerTick(System.Object, System.EventArgs)" />*/
	,
	$type: new $.ig.Type('SpreadsheetMouseOperation_ScrollTimer$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation_ScrollTimer`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionManager" />*/

$.ig.util.defType('SpreadsheetPaneInteractionManager', 'SpreadsheetInteractionManager$1', {
	__editModeOperation: null,
	__selectionOperation: null,
	__contextMenuOperation: null,
	init: function (pane, owner) {
		$.ig.SpreadsheetInteractionManager$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetPane.prototype.$type, pane, owner);
		this.__editModeOperation = new $.ig.SpreadsheetEnterEditModeOperation();
		this.__selectionOperation = new $.ig.SpreadsheetCellSelectionOperation();
		this.__contextMenuOperation = new $.ig.SpreadsheetCellContextMenuOperation();
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionManager::Control()" />*/
	control: function () {
		return this.view().selection()._spreadsheet();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionManager::Control()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionManager::GetMouseOperation(Infragistics.Controls.Core.InputProxy)" />*/
	getMouseOperation: function (proxy) {
		var isInEdit = this.control() != null && this.control().isInEditMode();
		if (isInEdit == false && proxy.isInputContactPressed() && proxy.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton && proxy.getModifierKeys() == 0 && proxy.getInputClickCount() == 2) {
			return this.__editModeOperation;
		}
		if (proxy.isInputContactPressed() && proxy.getChangeType() == $.ig.InputContactChangeType.prototype.mouseRightButton) {
			return this.__contextMenuOperation;
		}
		var pt = proxy.getRelativePoint();
		var view = this.view();
		var row = view.rowScrollRegion();
		if (row._itemPositions().count() > 0) {
			var col = view.columnScrollRegion();
			if (col._itemPositions().count() > 0) {
				if ((pt.__x <= col._getRelativeOffset($.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, col._itemPositions()), false, true) * col._zoomLevel()) && (pt.__y <= row._getRelativeOffset($.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, row._itemPositions()), false, true) * row._zoomLevel())) {
					return this.__selectionOperation;
				}
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionManager::GetMouseOperation(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneInteractionManager', $.ig.SpreadsheetInteractionManager$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneInteractionManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionInteractionManager" />*/

$.ig.util.defType('SpreadsheetScrollRegionInteractionManager', 'SpreadsheetInteractionManager$1', {
	__selectionOperation: null,
	__resizeOperation: null,
	__unhideOperation: null,
	__autoSizeOperation: null,
	__contextMenuOperation: null,
	init: function (scrollRegion, owner) {
		$.ig.SpreadsheetInteractionManager$1.prototype.init.call(this, $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, scrollRegion, owner);
		this.__selectionOperation = new $.ig.SpreadsheetHeaderSelectionOperation();
		this.__resizeOperation = new $.ig.SpreadsheetHeaderResizeOperation($.ig.SpreadsheetHeaderResizeType.prototype.resize);
		this.__unhideOperation = new $.ig.SpreadsheetHeaderResizeOperation($.ig.SpreadsheetHeaderResizeType.prototype.unhide);
		this.__autoSizeOperation = new $.ig.SpreadsheetHeaderResizeOperation($.ig.SpreadsheetHeaderResizeType.prototype.autoSize);
		this.__contextMenuOperation = new $.ig.SpreadsheetHeaderContextMenuOperation();
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionInteractionManager::Control()" />*/
	control: function () {
		return this.view()._activeSelection()._spreadsheet();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionInteractionManager::Control()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionInteractionManager::GetMouseOperation(Infragistics.Controls.Core.InputProxy)" />*/
	getMouseOperation: function (proxy) {
		var NearResizeOffset = 8;
		var FarResizeOffset = 7;
		var pt = proxy.getRelativePoint();
		var view = this.view();
		var isRow = $.ig.util.cast($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, view) !== null;
		var offset = isRow ? pt.__y : pt.__x;
		var itemPositions = view._getRelativeItemPositions(true, false);
		var nearOffset = NearResizeOffset;
		var farOffset = FarResizeOffset;
		var ctrl = this.control();
		var isInEdit = ctrl != null && ctrl.isInEditMode();
		var canResize = ctrl._canResizeHeader(isRow);
		var unhideOperation = this.__unhideOperation;
		var resizeOperation = this.__resizeOperation;
		if (isInEdit == false && proxy.isInputContactPressed() && proxy.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton && proxy.getInputClickCount() == 2) {
			resizeOperation = this.__autoSizeOperation;
			unhideOperation = this.__autoSizeOperation;
		}
		if (proxy.isInputContactPressed() && proxy.getChangeType() == $.ig.InputContactChangeType.prototype.mouseRightButton) {
			return this.__contextMenuOperation;
		}
		if (itemPositions.length == 0 && $.ig.util.nullableEquals(view._previousVisibleItemIndex(), null)) {
			if (canResize && offset < farOffset) {
				unhideOperation._indexToResize(view._maxItemIndex());
				return unhideOperation;
			}
		} else {
			for (var i = 1; i < itemPositions.length; i++) {
				if (offset < itemPositions[i]) {
					var deltaFar = itemPositions[i] - offset;
					var deltaNear = offset - itemPositions[i - 1];
					var itemExtent = itemPositions[i] - itemPositions[i - 1];
					if ((FarResizeOffset + NearResizeOffset) * 2 > itemExtent) {
						nearOffset = Math.max(itemExtent * 0.25, 1);
						farOffset = Math.max(itemExtent * 0.25, 1);
					}
					if (canResize && isInEdit == false) {
						if (deltaNear < nearOffset) {
							if (view._isPreviousItemHidden(i - 1, false)) {
								unhideOperation._indexToResize(view._itemPositions().__inner[i - 1]._index() - 1);
								return unhideOperation;
							}
							if (i != 1) {
								resizeOperation._indexToResize(view._itemPositions().__inner[i - 2]._index());
								return resizeOperation;
							}
						} else if (deltaFar < farOffset) {
							resizeOperation._indexToResize(view._itemPositions().__inner[i - 1]._index());
							return resizeOperation;
						}
					}
					if (this._owner.isMouseOver()) {
						this.__selectionOperation._hotTrackedItemIndex($.ig.util.toNullable($.ig.Number.prototype.$type, view._itemPositions().__inner[i - 1]._index()));
					} else {
						this.__selectionOperation._hotTrackedItemIndex($.ig.util.toNullable($.ig.Number.prototype.$type, null));
					}
					return this.__selectionOperation;
				}
			}
			if (canResize && isInEdit == false && $.ig.util.nullableEquals(view._nextVisibleItemIndex(), null) && $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, view._itemPositions())._index() < view._maxItemIndex()) {
				unhideOperation._indexToResize(view._maxItemIndex());
				return unhideOperation;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetMouseOperation Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionInteractionManager::GetMouseOperation(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetScrollRegionInteractionManager', $.ig.SpreadsheetInteractionManager$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegionInteractionManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation" />*/

$.ig.util.defType('SpreadsheetCellSelectionOperation', 'SpreadsheetPaneMouseOperation', {
	___hyperlinkUnderMouse: null,
	___modifiersDisallowHyperlinks: false,
	___ignoreHyperlink: false,
	___lastInputProxy: null,
	___cursorResolved: 0,
	___ownerState: null,
	___listener: null,
	___hyperlinkTimeoutOperation: null,
	___lastMouseDownPoint: null,
	___cachedCellTextLayoutVersion: 0,
	___cachedTextLocations: null,
	___toolTipCell: $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null),
	___toolTipDelay: null,
	init: function () {
		this.___cursorResolved = $.ig.SpreadsheetCursor.prototype.selectMode;
		$.ig.SpreadsheetPaneMouseOperation.prototype.init.call(this);
		this.___listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetCellSelectionOperation.prototype.$type, this, $.ig.SpreadsheetCellSelectionOperation.prototype._onPrivateSubObjectPropertyChanged, false);
		this.___cachedTextLocations = new $.ig.Dictionary$2($.ig.spreadsheet.SpreadsheetCell.prototype.$type, $.ig.Rect.prototype.$type, 0);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
		return this._view().columnScrollRegion() == this._view().columnScrollRegion()._sheetPaneOwner().activePane().columnScrollRegion();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::AllowScrollRows()" />*/
	_allowScrollRows: function () {
		return this._view().rowScrollRegion() == this._view().rowScrollRegion()._sheetPaneOwner().activePane().rowScrollRegion();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::Cursor()" />*/
	_cursor: function () {
		return this.___cursorResolved;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::Cursor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_onAttached: function (newView) {
		this._spreadsheetOwnerState(newView.__owner.spreadsheetOwnerState());
		$.ig.SpreadsheetPaneMouseOperation.prototype._onAttached.call(this, newView);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	_onCurrentStateChanged: function (oldState, newState) {
		if (newState == $.ig.MouseOperationState.prototype.notStarted) {
			this._cancelHyperlinkTimeoutDelay();
			this.___ignoreHyperlink = false;
		}
		this._verifyModifyKeyTracker();
		$.ig.SpreadsheetPaneMouseOperation.prototype._onCurrentStateChanged.call(this, oldState, newState);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnCurrentStateChanged(Infragistics.Controls.Grids.Core.MouseOperationState, Infragistics.Controls.Grids.Core.MouseOperationState)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
		var $self = this;
		this._updateLastInputProxyCache(input);
		var pos = input.getRelativePoint();
		var zoom = this._view().rowScrollRegion()._zoomLevel();
		var col = this._view().columnScrollRegion()._getItemFromRelativeOffset(pos.__x / zoom);
		var row = this._view().rowScrollRegion()._getItemFromRelativeOffset(pos.__y / zoom);
		var selection = this._view().rowScrollRegion()._activeSelection();
		this.___lastMouseDownPoint = pos;
		if (!selection._onBeforeSelectionMouseDown()) {
			return false;
		}
		var modifiers = input.getModifierKeys();
		var newActiveCell = new $.ig.spreadsheet.SpreadsheetCell(row._index(), col._index());
		var newRange = this._view().__owner.getCellRange(newActiveCell);
		var mode = selection._cellSelectionMode();
		var canSelect = this._view().__owner.canSelect(newActiveCell);
		var shift = ((modifiers & $.ig.ModifierKeys.prototype.shift) != 0) || mode == $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection;
		var ctrl = ((modifiers & $.ig.ModifierKeys.prototype.control) != 0) || mode == $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection;
		var wasStarted = false;
		var hyperlinkUnderMouse = null;
		if (ctrl == shift) {
			if (!this._activatePane()) {
				return false;
			}
			if (ctrl == false) {
				hyperlinkUnderMouse = (function () { var $ret = $self._getHyperlink(pos, col, row); col = $ret.p1; row = $ret.p2; return $ret.ret; }());
			}
			selection = this._view().rowScrollRegion()._activeSelection();
			$.ig.Debug.prototype.assert(selection != null && mode == selection._cellSelectionMode());
			if (canSelect) {
				wasStarted = selection._resetSelection1(newRange._upperLeft());
			}
		} else if (!canSelect) {
		} else if (ctrl) {
			wasStarted = selection._addActiveCellRange(newActiveCell);
		} else if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(newActiveCell, selection.activeCell())) {
			wasStarted = selection._extendActiveCellRange(newActiveCell, true);
		}
		this._hyperlinkUnderMouse(hyperlinkUnderMouse);
		this._updateResolvedCursor();
		if (this._hyperlinkUnderMouse() != null) {
			this._startHyperlinkTimeoutDelay();
		}
		return wasStarted;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMove: function (input) {
		var $self = this;
		this._updateLastInputProxyCache(input);
		var pos = input.getRelativePoint();
		var view = this._view();
		var zoom = view.rowScrollRegion()._zoomLevel();
		var col = view.columnScrollRegion()._getItemFromRelativeOffset(pos.__x / zoom);
		var row = view.rowScrollRegion()._getItemFromRelativeOffset(pos.__y / zoom);
		var selection = view.rowScrollRegion()._activeSelection();
		if (this._currentState() == $.ig.MouseOperationState.prototype.notStarted) {
			var relativeRow, relativeCol;
			this._hyperlinkUnderMouse((function () { var $ret = $self._getHyperlink1(pos, col, row, relativeRow, relativeCol); col = $ret.p1; row = $ret.p2; relativeRow = $ret.p3; relativeCol = $ret.p4; return $ret.ret; }()));
			var cellValue = view._cellValueArray() != null ? view._cellValueArray().item(relativeRow + 1, relativeCol + 1) : null;
			var cell = cellValue != null && cellValue.isMergedCell() ? new $.ig.spreadsheet.SpreadsheetCell(cellValue._startRowIndex, cellValue._startColumnIndex) : new $.ig.spreadsheet.SpreadsheetCell(row._index(), col._index());
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted($.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cell), this.___toolTipCell)) {
				this._hideToolTip();
				this.___toolTipCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cell);
				var toolTipType;
				if ((function () { var $ret = $self._getToolTip(relativeRow, relativeCol, toolTipType); toolTipType = $ret.p2; return $ret.ret; }()) != null) {
					if ($.ig.SpreadsheetUtilities.prototype.isHyperlinkToolTip(toolTipType) == false || this._hyperlinkUnderMouse() != null) {
						this._startToolTipTimer();
					}
				}
			}
		}
		if (this._currentState() == $.ig.MouseOperationState.prototype.started) {
			var newSelectedCell = new $.ig.spreadsheet.SpreadsheetCell(row._index(), col._index());
			if (view.__owner.canSelect(newSelectedCell)) {
				selection._extendActiveCellRange(newSelectedCell, true);
			}
		}
		this._updateResolvedCursor();
		$.ig.SpreadsheetPaneMouseOperation.prototype._onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
		var $self = this;
		this._updateLastInputProxyCache(input);
		this._hideToolTip();
		var pos = input.getRelativePoint();
		var zoom = this._view().rowScrollRegion()._zoomLevel();
		var col = this._view().columnScrollRegion()._getItemFromRelativeOffset(pos.__x / zoom);
		var row = this._view().rowScrollRegion()._getItemFromRelativeOffset(pos.__y / zoom);
		var hyperlink = (function () { var $ret = $self._getHyperlink(pos, col, row); col = $ret.p1; row = $ret.p2; return $ret.ret; }());
		if (this.___ownerState != null && this._hyperlinkUnderMouse() != null && this.___ignoreHyperlink == false && hyperlink == this._hyperlinkUnderMouse()) {
			if (this.___ownerState._visitHyperlinkAction() != null) {
				this.___ownerState._visitHyperlinkAction()(hyperlink);
			}
		} else {
			this._hyperlinkUnderMouse(hyperlink);
		}
		this._cancelHyperlinkTimeoutDelay();
		this.___ignoreHyperlink = false;
		this._updateModifierKey();
		this._updateResolvedCursor();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	_onPreMouseDown: function (proxy) {
		this._updateLastInputProxyCache(proxy);
		return $.ig.MouseDownInProgressResult.prototype.cancelOperationAndSkip;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_onReleased: function (oldView) {
		this._updateLastInputProxyCache(null);
		this._hyperlinkUnderMouse(null);
		this._updateResolvedCursor();
		this._spreadsheetOwnerState(null);
		this._hideToolTip();
		$.ig.SpreadsheetPaneMouseOperation.prototype._onReleased.call(this, oldView);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::HyperlinkUnderMouse()" />*/
	_hyperlinkUnderMouse: function (value) {
		if (arguments.length === 1) {
			if (value != this.___hyperlinkUnderMouse) {
				this.___ignoreHyperlink = false;
				this.___hyperlinkUnderMouse = value;
				this._verifyModifyKeyTracker();
				this._hideToolTip();
			}
			return value;
		} else {
			return this.___hyperlinkUnderMouse;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::HyperlinkUnderMouse()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetOwnerState Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::SpreadsheetOwnerState()" />*/
	_spreadsheetOwnerState: function (value) {
		if (arguments.length === 1) {
			var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetOwnerState.prototype.$type, this.___ownerState, value, this.___listener, true);
			this.___ownerState = $ret.p0;
			return value;
		} else {
			return this.___ownerState;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetOwnerState Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::SpreadsheetOwnerState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::CancelHyperlinkTimeoutDelay()" />*/
	_cancelHyperlinkTimeoutDelay: function () {
		var timeout = this.___hyperlinkTimeoutOperation;
		this.___hyperlinkTimeoutOperation = null;
		if (timeout != null) {
			timeout.cancel();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::CancelHyperlinkTimeoutDelay()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::DisableModifierKeyTracker()" />*/
	_disableModifierKeyTracker: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::DisableModifierKeyTracker()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::EnableModifierKeyTracker()" />*/
	_enableModifierKeyTracker: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::EnableModifierKeyTracker()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::GetHyperlink(System.Windows.Point, Infragistics.Documents.Excel.WorksheetItemPosition, Infragistics.Documents.Excel.WorksheetItemPosition)" />*/
	_getHyperlink: function (relativeMousePosition, col, row) {
		var $self = this;
		var relativeRow, relativeCol;
		return {
			ret: (function () { var $ret = $self._getHyperlink1(relativeMousePosition, col, row, relativeRow, relativeCol); col = $ret.p1; row = $ret.p2; relativeRow = $ret.p3; relativeCol = $ret.p4; return $ret.ret; }()),
			p1: col,
			p2: row
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::GetHyperlink(System.Windows.Point, Infragistics.Documents.Excel.WorksheetItemPosition, Infragistics.Documents.Excel.WorksheetItemPosition)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::GetHyperlink(System.Windows.Point, Infragistics.Documents.Excel.WorksheetItemPosition, Infragistics.Documents.Excel.WorksheetItemPosition, System.Int32, System.Int32)" />*/
	_getHyperlink1: function (relativeMousePosition, col, row, relativeRow, relativeCol) {
		var $self = this;
		this._verifyCachedTextLocations();
		relativeRow = this._view().rowScrollRegion()._getItemPositionIndexFromActualIndex(row._index());
		relativeCol = this._view().columnScrollRegion()._getItemPositionIndexFromActualIndex(col._index());
		if (relativeCol < 0 || relativeRow < 0) {
			return {
				ret: null,
				p1: col,
				p2: row,
				p3: relativeRow,
				p4: relativeCol
			};
		}
		if (this._view()._hyperlinkArray() == null) {
			return {
				ret: null,
				p1: col,
				p2: row,
				p3: relativeRow,
				p4: relativeCol
			};
		}
		var hyperlink = this._view()._hyperlinkArray().item(relativeRow + 1, relativeCol + 1);
		var cellValue = this._view()._cellValueArray().item(relativeRow + 1, relativeCol + 1);
		if (cellValue != null) {
			var actualRow = row._index();
			var actualCol = col._index();
			if (cellValue != null && cellValue.isMergedCell()) {
				actualRow = cellValue._startRowIndex;
				actualCol = cellValue._startColumnIndex;
			}
			var cellValueRect;
			if (this.___cachedTextLocations.count() > 0 && (function () { var $ret = $self.___cachedTextLocations.tryGetValue(new $.ig.spreadsheet.SpreadsheetCell(actualRow, actualCol), cellValueRect); cellValueRect = $ret.p1; return $ret.ret; }())) {
				if (cellValueRect.containsPoint(relativeMousePosition) == false) {
					return {
						ret: null,
						p1: col,
						p2: row,
						p3: relativeRow,
						p4: relativeCol
					};
				}
			}
		}
		return {
			ret: hyperlink,
			p1: col,
			p2: row,
			p3: relativeRow,
			p4: relativeCol
		};
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetHyperlink Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::GetHyperlink(System.Windows.Point, Infragistics.Documents.Excel.WorksheetItemPosition, Infragistics.Documents.Excel.WorksheetItemPosition, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::GetToolTip(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.SpreadsheetToolTipType)" />*/
	_getToolTip: function (relativeRow, relativeColumn, type) {
		var pane = this._view();
		if (pane != null && pane._hyperlinkArray() != null) {
			var hyperlink = pane._hyperlinkArray().item(relativeRow + 1, relativeColumn + 1);
			if (hyperlink != null) {
				if (String.isNullOrEmpty(hyperlink.toolTip()) == false) {
					type = $.ig.SpreadsheetToolTipType.prototype.hyperlink;
					return {
						ret: hyperlink.toolTip(),
						p2: type
					};
				}
				var address = hyperlink.targetAddress();
				if (!String.isNullOrEmpty(address)) {
					type = $.ig.SpreadsheetToolTipType.prototype.hyperlinkDefault;
					return {
						ret: $.ig.spreadsheet.locale.getString("DefaultHyperlinkToolTip", [ address ]),
						p2: type
					};
				}
			}
			var valueInfo = pane._cellValueArray().item(relativeRow + 1, relativeColumn + 1);
			if (valueInfo != null && valueInfo.displaysHashes() && this.___ownerState != null) {
				if (valueInfo.isInvalidDateTime()) {
					type = $.ig.SpreadsheetToolTipType.prototype.invalidDateTime;
					return {
						ret: $.ig.spreadsheet.locale.getString("InvalidDateTimeToolTip", []),
						p2: type
					};
				}
				var actualCell = new $.ig.spreadsheet.SpreadsheetCell(pane.rowScrollRegion()._itemPositions().__inner[relativeRow]._index(), pane.columnScrollRegion()._itemPositions().__inner[relativeColumn]._index());
				type = $.ig.SpreadsheetToolTipType.prototype.clippedValue;
				return {
					ret: this.___ownerState._getCellText()(actualCell),
					p2: type
				};
			}
		}
		type = $.ig.SpreadsheetToolTipType.prototype.clippedValue;
		return {
			ret: null,
			p2: type
		};
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::GetToolTip(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.SpreadsheetToolTipType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::HideToolTip()" />*/
	_hideToolTip: function () {
		if (this.___toolTipDelay != null) {
			this.___toolTipDelay.cancel();
			this.___toolTipDelay = null;
		}
		this.___toolTipCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
		this._toolTip(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::HideToolTip()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onPrivateSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		if (sender == this.___ownerState) {
			switch (property) {
				case "IsInEditMode":
					this._updateResolvedCursor();
					break;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation, System.Object, System.String, System.Object)" />*/
	_onPrivateSubObjectPropertyChanged: function (owner, sender, property, extraInfo) {
		owner._onPrivateSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation, System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::StartHyperlinkTimeoutDelay()" />*/
	_startHyperlinkTimeoutDelay: function () {
		var $self = this;
		if (this.___hyperlinkTimeoutOperation == null) {
			this.___hyperlinkTimeoutOperation = new $.ig.TimedOperation(function () {
				$self.___ignoreHyperlink = true;
				$self._cancelHyperlinkTimeoutDelay();
				$self._updateResolvedCursor();
			}, $.ig.SpreadsheetCellSelectionOperation.prototype.__hYPERLINK_TIMEOUT_DELAY);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::StartHyperlinkTimeoutDelay()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::StartToolTipTimer()" />*/
	_startToolTipTimer: function () {
		var $self = this;
		if (this.___toolTipDelay != null) {
			this.___toolTipDelay.cancel();
		}
		this.___toolTipDelay = new $.ig.TimedOperation(function () {
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted($self.___toolTipCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && $self._view() != null && $self.___lastInputProxy != null && $self._currentState() == $.ig.MouseOperationState.prototype.notStarted) {
				var pos = $self.___lastInputProxy.getRelativePoint();
				var zoom = $self._view().rowScrollRegion()._zoomLevel();
				var col = $self._view().columnScrollRegion()._getItemFromRelativeOffset(pos.__x / zoom);
				var row = $self._view().rowScrollRegion()._getItemFromRelativeOffset(pos.__y / zoom);
				var selection = $self._view().rowScrollRegion()._activeSelection();
				var relativeRow = $self._view().rowScrollRegion()._getItemPositionIndexFromActualIndex(row._index());
				var relativeCol = $self._view().columnScrollRegion()._getItemPositionIndexFromActualIndex(col._index());
				var toolTipType;
				var tooltip = (function () { var $ret = $self._getToolTip(relativeRow, relativeCol, toolTipType); toolTipType = $ret.p2; return $ret.ret; }());
				if (tooltip == null) {
					$self._hideToolTip();
				} else {
					if ($.ig.SpreadsheetUtilities.prototype.isHyperlinkToolTip(toolTipType)) {
						var ExtraBottomPadding = 4;
						var cellValue = $self._view()._cellValueArray().item(relativeRow + 1, relativeCol + 1);
						var isMerged = cellValue != null && cellValue.isMergedCell();
						var bottom = $self._view().rowScrollRegion()._getRelativeOffset1(isMerged ? cellValue._endRowIndex : row._index(), false, true) * zoom;
						var left = $self._view().columnScrollRegion()._getRelativeOffset1(isMerged ? cellValue._startColumnIndex : col._index(), true, true) * zoom;
						var right = $self._view().columnScrollRegion()._getRelativeOffset1(isMerged ? cellValue._endColumnIndex : col._index(), false, true) * zoom;
						if ($self._controlBounds().isEmpty() == false) {
							if (bottom > $self._controlBounds().bottom()) {
								bottom = $self._controlBounds().bottom();
							}
							if (left < $self._controlBounds().left()) {
								left = $self._controlBounds().left();
							}
							if (right > $self._controlBounds().right()) {
								right = $self._controlBounds().right();
							}
						}
						pos = $.ig.SpreadsheetUtilities.prototype.createPoint((left + (right - left) / 2), bottom + ExtraBottomPadding);
					} else {
						pos = { __x: pos.__x, __y: pos.__y + 10, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
					}
					$self._toolTip((function () {
						var $ret = new $.ig.SpreadsheetToolTipContext();
						$ret.position(pos);
						$ret.toolTip(tooltip);
						$ret.toolTipType(toolTipType);
						return $ret;
					}()));
				}
			}
		}, 250);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::StartToolTipTimer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::UpdateLastInputProxyCache(Infragistics.Controls.Core.InputProxy)" />*/
	_updateLastInputProxyCache: function (proxy) {
		if (this._view() != null) {
			var shouldUpdateModifierKey = this.___lastInputProxy == null;
			this.___lastInputProxy = proxy;
			if (this.___lastInputProxy == null) {
				this._updateModifierKey();
			}
		} else {
			this.___lastInputProxy = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::UpdateLastInputProxyCache(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::UpdateModifierKey()" />*/
	_updateModifierKey: function () {
		if (this.___lastInputProxy == null || this._view() == null) {
			this.___modifiersDisallowHyperlinks = false;
		} else {
			var modifiers = this.___lastInputProxy.getModifierKeys();
			this.___modifiersDisallowHyperlinks = ((modifiers & $.ig.ModifierKeys.prototype.shift) != 0) || ((modifiers & $.ig.ModifierKeys.prototype.control) != 0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::UpdateModifierKey()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::UpdateResolvedCursor()" />*/
	_updateResolvedCursor: function () {
		var isInEditMode = this.___ownerState != null && this.___ownerState._isInEditMode();
		var newCursor = this.___hyperlinkUnderMouse != null && this.___modifiersDisallowHyperlinks == false && isInEditMode == false && this.___ignoreHyperlink == false ? $.ig.SpreadsheetCursor.prototype.hyperlink : $.ig.SpreadsheetCursor.prototype.selectMode;
		if (newCursor != this.___cursorResolved) {
			this.___cursorResolved = newCursor;
			this.onPropertyChanged("Cursor");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::UpdateResolvedCursor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::VerifyCachedTextLocations()" />*/
	_verifyCachedTextLocations: function () {
		if (this._view() == null) {
			this.___cachedTextLocations.clear();
		} else if (this.___cachedCellTextLayoutVersion != this._view()._cellTextArrangeVersion()) {
			this.___cachedCellTextLayoutVersion = this._view()._cellTextArrangeVersion();
			this.___cachedTextLocations.clear();
			var panel = this._view()._panel();
			if (panel != null && this._view()._hyperlinkArray() != null && this._view()._hyperlinkArray().hasData() && this._view()._cellValuesInternal().count() > 0) {
				this._view().selection()._spreadsheet()._viewResolved().addCellTextLocations(this.___cachedTextLocations, this._view());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::VerifyCachedTextLocations()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::VerifyModifyKeyTracker()" />*/
	_verifyModifyKeyTracker: function () {
		if (this._hyperlinkUnderMouse() != null && this._currentState() == $.ig.MouseOperationState.prototype.notStarted) {
			$.ig.Debug.prototype.assert(this._view() != null);
			this._enableModifierKeyTracker();
		} else {
			this._disableModifierKeyTracker();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation::VerifyModifyKeyTracker()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellSelectionOperation', $.ig.SpreadsheetPaneMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation" />*/

$.ig.util.defType('SpreadsheetHeaderSelectionOperation', 'SpreadsheetHeaderMouseOperation', {
	init: function () {
		$.ig.SpreadsheetHeaderMouseOperation.prototype.init.call(this);
	},
	___hotTrackedItemIndex: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::AllowScrollColumns()" />*/
	_allowScrollColumns: function () {
		return this._columnScrollRegion() != null && this._view() == this._view()._sheetPaneOwner().activePane().columnScrollRegion();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::AllowScrollColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::AllowScrollRows()" />*/
	_allowScrollRows: function () {
		return this._rowScrollRegion() != null && this._view() == this._view()._sheetPaneOwner().activePane().rowScrollRegion();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::AllowScrollRows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::Cursor()" />*/
	_cursor: function () {
		return this._isRowHeader() ? $.ig.SpreadsheetCursor.prototype.selectRow : $.ig.SpreadsheetCursor.prototype.selectColumn;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCursor Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::Cursor()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	_onAttached: function (newView) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onAttached.call(this, newView);
		newView._hotTrackedIndex(this.___hotTrackedItemIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnAttached(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseDownOverride: function (input) {
		var pos = input.getRelativePoint();
		var zoom = this._view()._zoomLevel();
		var isRow = this._isRowHeader();
		var offset = isRow ? pos.__y : pos.__x;
		var item = this._view()._getItemFromRelativeOffset(offset / zoom);
		var selection = this._view()._activeSelection();
		if (!selection._onBeforeSelectionMouseDown()) {
			return false;
		}
		var modifiers = input.getModifierKeys();
		var activeCellOther = this._view()._adjacentRowColumn().startIndex();
		var newActiveCell = isRow ? new $.ig.spreadsheet.SpreadsheetCell(item._index(), activeCellOther) : new $.ig.spreadsheet.SpreadsheetCell(activeCellOther, item._index());
		var newRange = isRow ? new $.ig.spreadsheet.SpreadsheetCellRange(item._index(), selection._availableColumnRange().__start, item._index(), selection._availableColumnRange().__end) : new $.ig.spreadsheet.SpreadsheetCellRange(selection._availableRowRange().__start, item._index(), selection._availableRowRange().__end, item._index());
		var mode = selection._cellSelectionMode();
		var canSelect = this._view()._sheetPaneOwner().canSelect1(newRange);
		var shift = ((modifiers & $.ig.ModifierKeys.prototype.shift) != 0) || mode == $.ig.SpreadsheetCellSelectionMode.prototype.extendSelection;
		var ctrl = ((modifiers & $.ig.ModifierKeys.prototype.control) != 0) || mode == $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection;
		var wasStarted = false;
		if (ctrl == shift) {
			if (!this._activatePane()) {
				return false;
			}
			selection = this._view()._activeSelection();
			$.ig.Debug.prototype.assert(selection != null && mode == selection._cellSelectionMode());
			if (canSelect) {
				wasStarted = selection._resetSelection2(newRange, newActiveCell, $.ig.SpreadsheetHeaderSelectionOperation.prototype.__allowExtendRangeForMergedCells);
			}
		} else if (!canSelect) {
		} else if (ctrl) {
			wasStarted = selection._addActiveCellRange1(newRange, newActiveCell, $.ig.SpreadsheetHeaderSelectionOperation.prototype.__allowExtendRangeForMergedCells);
		} else if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality(newActiveCell, selection.activeCell())) {
			wasStarted = selection._extendActiveCellRange1(newRange, $.ig.SpreadsheetHeaderSelectionOperation.prototype.__allowExtendRangeForMergedCells);
		}
		return wasStarted;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseDownOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseEnter: function (input) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onMouseEnter.call(this, input);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseEnter(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseLeave: function (input) {
		this._view()._hotTrackedIndex($.ig.util.toNullable($.ig.Number.prototype.$type, null));
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onMouseLeave.call(this, input);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseLeave(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMove: function (input) {
		if (this._currentState() == $.ig.MouseOperationState.prototype.started) {
			this._onMouseMoveImpl(input);
		}
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseMoveImpl(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseMoveImpl: function (input) {
		var pos = input.getRelativePoint();
		var zoom = this._view()._zoomLevel();
		var isRow = this._isRowHeader();
		var offset = isRow ? pos.__y : pos.__x;
		var item = this._view()._getItemFromRelativeOffset(offset / zoom);
		var selection = this._view()._activeSelection();
		var newRange = isRow ? new $.ig.spreadsheet.SpreadsheetCellRange(item._index(), selection._availableColumnRange().__start, item._index(), selection._availableColumnRange().__end) : new $.ig.spreadsheet.SpreadsheetCellRange(selection._availableRowRange().__start, item._index(), selection._availableRowRange().__end, item._index());
		if (this._view()._sheetPaneOwner().canSelect1(newRange)) {
			selection._extendActiveCellRange1(newRange, $.ig.SpreadsheetHeaderSelectionOperation.prototype.__allowExtendRangeForMergedCells);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseMoveImpl(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	_onMouseUpOverride: function (input) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnMouseUpOverride(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	_onPreMouseDown: function (proxy) {
		return $.ig.MouseDownInProgressResult.prototype.cancelOperationAndSkip;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.MouseDownInProgressResult Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnPreMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	_onReleased: function (oldView) {
		$.ig.SpreadsheetHeaderMouseOperation.prototype._onReleased.call(this, oldView);
		oldView._hotTrackedIndex($.ig.util.toNullable($.ig.Number.prototype.$type, null));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::OnReleased(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion)" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::HotTrackedItemIndex()" />*/
	_hotTrackedItemIndex: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(this.___hotTrackedItemIndex, value)) {
				this.___hotTrackedItemIndex = value;
				if (this._view() != null) {
					this._view()._hotTrackedIndex(value);
				}
			}
			return value;
		} else {
			return this.___hotTrackedItemIndex;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation::HotTrackedItemIndex()" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderSelectionOperation', $.ig.SpreadsheetHeaderMouseOperation.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHitTestResult" />*/

$.ig.util.defType('SpreadsheetHitTestResult', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	$type: new $.ig.Type('SpreadsheetHitTestResult', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHitTestResult" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellHitTestResult" />*/

$.ig.util.defType('SpreadsheetCellHitTestResult', 'SpreadsheetHitTestResult', {
	__cell: null,
	__pane: null,
	init: function (cell, pane) {
		this.__cell = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.SpreadsheetHitTestResult.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(pane, "pane");
		this.__cell = cell;
		this.__pane = pane;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellHitTestResult::Cell()" />*/
	cell: function () {
		return this.__cell;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetCellHitTestResult::Cell()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetCellHitTestResult::Pane()" />*/
	pane: function () {
		return this.__pane;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetCellHitTestResult::Pane()" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellHitTestResult', $.ig.SpreadsheetHitTestResult.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellHitTestResult" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderHitTestResult" />*/

$.ig.util.defType('SpreadsheetHeaderHitTestResult', 'SpreadsheetHitTestResult', {
	__index: 0,
	__scrollRegion: null,
	init: function (index, scrollRegion) {
		$.ig.SpreadsheetHitTestResult.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(scrollRegion, "scrollRegion");
		this.__index = index;
		this.__scrollRegion = scrollRegion;
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetHeaderHitTestResult::Index()" />*/
	index: function () {
		return this.__index;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetHeaderHitTestResult::Index()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetHeaderHitTestResult::ScrollRegion()" />*/
	scrollRegion: function () {
		return this.__scrollRegion;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetHeaderHitTestResult::ScrollRegion()" />*/
	,
	$type: new $.ig.Type('SpreadsheetHeaderHitTestResult', $.ig.SpreadsheetHitTestResult.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderHitTestResult" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext" />*/

$.ig.util.defType('SpreadsheetToolTipContext', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_position: null,
	/*<BeginProperty Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext::Position()" />*/
	position: function (value) {
		if (arguments.length === 1) {
			this._position = value;
			return value;
		} else {
			return this._position;
		}
	}
	/*<EndProperty Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext::Position()" />*/
	,
	_toolTip: null,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext::ToolTip()" />*/
	toolTip: function (value) {
		if (arguments.length === 1) {
			this._toolTip = value;
			return value;
		} else {
			return this._toolTip;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext::ToolTip()" />*/
	,
	_toolTipType: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipType Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext::ToolTipType()" />*/
	toolTipType: function (value) {
		if (arguments.length === 1) {
			this._toolTipType = value;
			return value;
		} else {
			return this._toolTipType;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipType Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext::ToolTipType()" />*/
	,
	$type: new $.ig.Type('SpreadsheetToolTipContext', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetToolTipContext" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner" />*/

$.ig.util.defType('ISpreadsheetPaneOwner', 'Object', {
	$type: new $.ig.Type('ISpreadsheetPaneOwner', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager" />*/

$.ig.util.defType('SpreadsheetPaneManager', 'PropertyChangeNotifierExtended', {
	___flags: 0,
	___isLayoutDirty: false,
	___panesSource: null,
	___panes: null,
	___columnsSource: null,
	___columns: null,
	___rowsSource: null,
	___rows: null,
	___columnItems: null,
	___rowItems: null,
	___activePane: null,
	___worksheet: null,
	___inViewPaneInfo: null,
	___availableSize: null,
	___scrollRange: null,
	___usedRangeSize: null,
	___scrollRangeSize: null,
	___maxRangeSize: null,
	___splitterWidth: 0,
	___splitterHeight: 0,
	___selectionFactory: null,
	___onActivePaneChanging: null,
	___onPrompt: null,
	___activeCellPane: null,
	___tabManager: null,
	___normalStyleFont: null,
	___scrollRangeAddress: null,
	___usedRangeAddress: null,
	___actualUsedRangeAddress: null,
	___maxRangeAddress: null,
	___firstUnfrozenColumnIndex: 0,
	___firstUnfrozenRowIndex: 0,
	___zoomLevel: 0,
	___deferredOperation: null,
	___resourceProvider: null,
	___pendingChangeActions: 0,
	___showFormulasInCells: false,
	___activeCellInputMessage: null,
	___activeCellInputMessagePosition: null,
	___dpiX: 0,
	___dpiY: 0,
	___pixelSizeX: 0,
	___pixelSizeY: 0,
	__ownerState: null,
	___privateListener: null,
	init: function (worksheet, selectionFactory, onActivePaneChanging, onPrompt, tabManager, ownerState) {
		this.___flags = $.ig.SpreadsheetPaneManager_InternalFlags.prototype.initialFlags;
		this.___isLayoutDirty = true;
		this.___availableSize = $.ig.Size.prototype.empty();
		this.___usedRangeSize = new $.ig.Size();
		this.___scrollRangeSize = new $.ig.Size();
		this.___maxRangeSize = new $.ig.Size();
		this.___scrollRangeAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		this.___usedRangeAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		this.___actualUsedRangeAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		this.___maxRangeAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		this.___firstUnfrozenColumnIndex = 0;
		this.___firstUnfrozenRowIndex = 0;
		this.___zoomLevel = 1;
		this.___pendingChangeActions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none;
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(worksheet, "worksheet");
		$.ig.CoreUtilities.prototype.validateNotNull1(selectionFactory, "selectionFactory");
		$.ig.CoreUtilities.prototype.validateNotNull1(onPrompt, "onPrompt");
		$.ig.CoreUtilities.prototype.validateNotNull1(tabManager, "tabManager");
		$.ig.CoreUtilities.prototype.validateNotNull1(ownerState, "ownerState");
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetPane.prototype.$type), this.___panesSource, new $.ig.ObservableCollectionExtended$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, 2, false, true), this, false);
		this.___panesSource = $ret.p0;
		this.___panes = new $.ig.ReadOnlyNotifyCollection$1($.ig.spreadsheet.SpreadsheetPane.prototype.$type, this.___panesSource);
		var $ret1 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type), this.___columnsSource, new $.ig.ObservableCollectionExtended$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, 2, false, true), this, false);
		this.___columnsSource = $ret1.p0;
		this.___columns = new $.ig.ReadOnlyNotifyCollection$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, this.___columnsSource);
		var $ret2 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type), this.___rowsSource, new $.ig.ObservableCollectionExtended$1($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, 2, false, true), this, false);
		this.___rowsSource = $ret2.p0;
		this.___rows = new $.ig.ReadOnlyNotifyCollection$1($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, this.___rowsSource);
		this.___rowItems = $.ig.CoreUtilities.prototype.createObservableTypedList$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, this.___rowsSource);
		this.___columnItems = $.ig.CoreUtilities.prototype.createObservableTypedList$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, this.___columnsSource);
		this.___privateListener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetPaneManager.prototype.$type, this, function (m, s, p, e) { m._onPrivateObjectPropertyChanged(s, p, e); }, false);
		this.___worksheet = worksheet;
		this.___selectionFactory = selectionFactory;
		this.___onActivePaneChanging = onActivePaneChanging;
		this.___onPrompt = onPrompt;
		this.___deferredOperation = new $.ig.DeferredOperation(this._verifyState.runOn(this));
		this.___inViewPaneInfo = new $.ig.InViewPaneInfo(this);
		this.___tabManager = tabManager;
		this.___normalStyleFont = new $.ig.WorkbookFontSnapshot(this.___worksheet.workbook().styles().normalStyle()._styleFormatInternal());
		$.ig.SpreadsheetUtilities.prototype.addListener(this.___tabManager._selectedTabs(), this.___privateListener, true);
		this.__ownerState = ownerState;
		this._initializeMaxRangeAddress();
		this._initializeDpi();
		this._updateCachedProperties();
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "Offset":
				if (!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isInitializingScrollInfo) && $.ig.util.cast($.ig.SpreadsheetScrollInfo.prototype.$type, sender) !== null) {
					var si = sender;
					var owner = si._owner();
					var offset = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(si._offset()));
					var pos = !owner._isRowHeader() ? this._getColumnPositionFromOffset(offset) : this.___worksheet._getRowPositionFromOffset(offset);
					var itemUnitsToPixels = !owner._isRowHeader() ? this._getPixelsFromColumnItemPosUnits.runOn(this) : this._getPixelsFromRowItemPosUnits.runOn(this);
					owner.startIndex(pos._index());
					owner._startIndexOutOfViewExtent(itemUnitsToPixels((offset - pos._offset())));
					this._isLayoutDirty(true);
				}
				break;
			case "StartIndex":
				if ($.ig.util.cast($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, sender) !== null) {
					this._isLayoutDirty(true);
				}
				break;
			case "ActivePane":
				if (sender == this) {
					this._verifyActiveSelection();
					this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasSelectionChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasActiveCellChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellInputMessage | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellPane);
					if (this.___tabManager._selectedTabs().count() > 1) {
						this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate);
					}
					var location = this._getPaneLocation(this.activePane());
					if ($.ig.util.nullableNotEquals(location, null)) {
						this.___worksheet.displayOptions()._activePane(location.value());
					}
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				var senderType = sender.getType();
				if (senderType == $.ig.SpreadsheetUtilities.prototype.oCE_CellRange || senderType == $.ig.SpreadsheetUtilities.prototype.aRS_CellRange_Int) {
					this.___pendingChangeActions &= ~$.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell;
					this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasSelectionChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate);
				}
				break;
			case "ActiveCell":
				if (this.activePane() != null && sender == this.activePane().selection()) {
					this.___pendingChangeActions &= ~$.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell;
					this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasActiveCellChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellPane);
				}
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate);
				break;
			case "ResourceVersion":
				if (sender == this._resourceProvider()) {
					this.___inViewPaneInfo.dirtyGridLinePen();
					this._isLayoutDirty(true);
				}
				break;
			case "AvailableColumnRange":
			case "AvailableRowRange":
			case "CellSelectionMode":
			case "ActiveCellRangeIndex":
			case "ActiveCellAsRange":
				if (this.activePane() != null && sender == this.activePane().selection()) {
					this.___pendingChangeActions &= ~$.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell;
				}
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate);
				break;
		}
		if (this.activePane() != null && sender == this.activePane().selection()) {
			this.___pendingChangeActions &= ~$.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell;
		}
		$.ig.PropertyChangeNotifierExtended.prototype.onSubObjectPropertyChanged.call(this, sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActiveCellPane()" />*/
	_activeCellPane: function (value) {
		if (arguments.length === 1) {
			if (this.___activeCellPane != value) {
				this.___activeCellPane = value;
				this.onPropertyChanged("ActiveCellPane");
			}
			return value;
		} else {
			return this.___activeCellPane;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActiveCellPane()" />*/
	,
	/*<BeginProperty Name="System.Tuple Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActiveCellInputMessage()" />*/
	_activeCellInputMessage: function (value) {
		if (arguments.length === 1) {
			if (this.___activeCellInputMessage != value) {
				this.___activeCellInputMessage = value;
				this.onPropertyChanged("ActiveCellInputMessage");
			}
			return value;
		} else {
			return this.___activeCellInputMessage;
		}
	}
	/*<EndProperty Name="System.Tuple Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActiveCellInputMessage()" />*/
	,
	/*<BeginProperty Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActiveCellInputMessagePosition()" />*/
	_activeCellInputMessagePosition: function (value) {
		if (arguments.length === 1) {
			if ($.ig.Point.prototype.l_op_Inequality(this.___activeCellInputMessagePosition, value)) {
				this.___activeCellInputMessagePosition = value;
				this.onPropertyChanged("ActiveCellInputMessagePosition");
			}
			return value;
		} else {
			return this.___activeCellInputMessagePosition;
		}
	}
	/*<EndProperty Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActiveCellInputMessagePosition()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivePane()" />*/
	activePane: function (value) {
		if (arguments.length === 1) {
			if (this.___activePane != value) {
				this.___activePane = value;
				this.onPropertyChanged("ActivePane");
			}
			return value;
		} else {
			return this.___activePane;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivePane()" />*/
	,
	__columnHeaderAreaExtent: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ColumnHeaderAreaExtent()" />*/
	_columnHeaderAreaExtent: function (value) {
		if (arguments.length === 1) {
			this.__columnHeaderAreaExtent = value;
			return value;
		} else {
			return this.__columnHeaderAreaExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ColumnHeaderAreaExtent()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ColumnItems()" />*/
	_columnItems: function () {
		return this.___columnItems;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ColumnItems()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Columns()" />*/
	_columns: function () {
		return this.___columns;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Columns()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ColumnsSource()" />*/
	_columnsSource: function () {
		return this.___columnsSource;
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ColumnsSource()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasFrozenPanes()" />*/
	_hasFrozenPanes: function () {
		return this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasFrozenPanes);
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasFrozenPanes()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasHorizontalScrollBar()" />*/
	_hasHorizontalScrollBar: function (value) {
		if (arguments.length === 1) {
			if (this._setNotificationFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHorizontalScrollBar, value)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasScrollBarChanged, true);
			}
			return value;
		} else {
			return this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHorizontalScrollBar);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasHorizontalScrollBar()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasSingleSelectionWithAllRowsAndColumns()" />*/
	_hasSingleSelectionWithAllRowsAndColumns: function (value) {
		if (arguments.length === 1) {
			this._setNotificationFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasSingleSelectionWithAllRowsAndColumns, value);
			return value;
		} else {
			return this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasSingleSelectionWithAllRowsAndColumns);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasSingleSelectionWithAllRowsAndColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasVerticalScrollBar()" />*/
	_hasVerticalScrollBar: function (value) {
		if (arguments.length === 1) {
			if (this._setNotificationFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasVerticalScrollBar, value)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasScrollBarChanged, true);
			}
			return value;
		} else {
			return this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasVerticalScrollBar);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasVerticalScrollBar()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasPendingZoomToSelection()" />*/
	_hasPendingZoomToSelection: function () {
		return $.ig.WorksheetRegionAddress.prototype._l_op_Inequality_Lifted(this.___worksheet.___pendingZoomToSelectionRegion, $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null));
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HasPendingZoomToSelection()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsLayoutDirty()" />*/
	_isLayoutDirty: function (value) {
		if (arguments.length === 1) {
			if (this.___isLayoutDirty != value) {
				this.___isLayoutDirty = value;
				this.onPropertyChanged("IsLayoutDirty");
			}
			return value;
		} else {
			return this.___isLayoutDirty;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsLayoutDirty()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Panes()" />*/
	_panes: function () {
		return this.___panes;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Panes()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PanesSource()" />*/
	_panesSource: function () {
		return this.___panesSource;
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PanesSource()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PixelSizeX()" />*/
	_pixelSizeX: function () {
		return this.___pixelSizeX;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PixelSizeX()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PixelSizeY()" />*/
	_pixelSizeY: function () {
		return this.___pixelSizeY;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PixelSizeY()" />*/
	,
	/*<BeginProperty Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PreviousAvailableSize()" />*/
	_previousAvailableSize: function () {
		return this.___availableSize;
	}
	/*<EndProperty Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PreviousAvailableSize()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResourceProvider()" />*/
	_resourceProvider: function (value) {
		if (arguments.length === 1) {
			if (this.___resourceProvider != value) {
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ISpreadsheetResourceProvider.prototype.$type, this.___resourceProvider, value, this, true);
				this.___resourceProvider = $ret.p0;
				this.___inViewPaneInfo.dirtyGridLinePen();
				this.onPropertyChanged("ResourceProvider");
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasResourceProviderChanged);
			}
			return value;
		} else {
			return this.___resourceProvider;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.ISpreadsheetResourceProvider Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResourceProvider()" />*/
	,
	__rowHeaderAreaExtent: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RowHeaderAreaExtent()" />*/
	_rowHeaderAreaExtent: function (value) {
		if (arguments.length === 1) {
			this.__rowHeaderAreaExtent = value;
			return value;
		} else {
			return this.__rowHeaderAreaExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RowHeaderAreaExtent()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RowItems()" />*/
	_rowItems: function () {
		return this.___rowItems;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RowItems()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Rows()" />*/
	_rows: function () {
		return this.___rows;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Rows()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RowsSource()" />*/
	_rowsSource: function () {
		return this.___rowsSource;
	}
	/*<EndProperty Name="Infragistics.Collections.ObservableCollectionExtended Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RowsSource()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollRange()" />*/
	_scrollRange: function (value) {
		if (arguments.length === 1) {
			if (value != this.___scrollRange) {
				var scrollRegion = String.isNullOrEmpty(value) ? null : this.___worksheet._getRegion1(value, $.ig.excel.CellReferenceMode.a1);
				this.___scrollRangeAddress = scrollRegion == null ? $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty : new $.ig.spreadsheet.SpreadsheetCellRange(scrollRegion.firstRow(), scrollRegion.firstColumn(), scrollRegion.lastRow(), scrollRegion.lastColumn());
				this.___scrollRange = value;
				this.onPropertyChanged("ScrollRange");
			}
			return value;
		} else {
			return this.___scrollRange;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollRange()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SplitterHeight()" />*/
	_splitterHeight: function (value) {
		if (arguments.length === 1) {
			if (this.___splitterHeight != value) {
				this.___splitterHeight = value;
				this.onPropertyChanged("SplitterHeight");
			}
			return value;
		} else {
			return this.___splitterHeight;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SplitterHeight()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SplitterWidth()" />*/
	_splitterWidth: function (value) {
		if (arguments.length === 1) {
			if (this.___splitterWidth != value) {
				this.___splitterWidth = value;
				this.onPropertyChanged("SplitterWidth");
			}
			return value;
		} else {
			return this.___splitterWidth;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SplitterWidth()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::TabManager()" />*/
	_tabManager: function () {
		return this.___tabManager;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::TabManager()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Worksheet()" />*/
	_worksheet: function () {
		return this.___worksheet;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Worksheet()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ZoomLevel()" />*/
	_zoomLevel: function (value) {
		if (arguments.length === 1) {
			if (value != this.___zoomLevel) {
				this.___zoomLevel = value;
				if (this.__ownerState._renderCache()._shouldRemeasureAfterZoomLevelChanged) {
					this._releaseResources();
				}
				this.onPropertyChanged("ZoomLevel");
			}
			return value;
		} else {
			return this.___zoomLevel;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ZoomLevel()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivatePreviousPane()" />*/
	_activatePreviousPane: function () {
		this._activateNextOrPreviousPane(false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivatePreviousPane()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivateNextPane()" />*/
	_activateNextPane: function () {
		this._activateNextOrPreviousPane(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivateNextPane()" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AreSelectedTabsProtected()" />*/
	_areSelectedTabsProtected: function () {
		this._assertIsTabSelected();
		var thisState = this.___worksheet.isProtected();
		if (this.___tabManager._selectedTabs().count() > 0) {
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				var ws = tab._worksheet();
				var temp = ws.isProtected();
				if (temp != thisState) {
					return $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
				}
			}
		}
		return $.ig.util.toNullable($.ig.Boolean.prototype.$type, thisState);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AreSelectedTabsProtected()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AutoSizeRowsOrColumns(System.Boolean)" />*/
	_autoSizeRowsOrColumns: function (rows) {
		var selection = this.activePane().selection();
		if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState(rows ? $.ig.WorksheetProtectionType.prototype.formatRows : $.ig.WorksheetProtectionType.prototype.formatColumns), true)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		if (rows) {
			if (selection._areAllRowsSelected()) {
				this._resizeAllRows(-1);
			} else {
				this._resizeRows(-1, $.ig.Enumerable.prototype.toArray$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), selection._allRows()));
			}
		} else {
			if (selection._areAllColumnsSelected()) {
				this._resizeAllColumns(-1);
			} else {
				this._autoSizeColumns($.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges()), true);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AutoSizeRowsOrColumns(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringDirectionInView(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_bringDirectionInView: function (direction, range, pane) {
		if (pane == null) {
			pane = this.activePane();
		}
		var indexToVerify;
		var scrollRegion;
		var getItemPos;
		var getItemFromOffset;
		switch (direction) {
			default:
			case $.ig.Direction.prototype.up:
				getItemFromOffset = this.___worksheet._getRowPositionFromOffset.runOn(this.___worksheet);
				getItemPos = this.___worksheet._getRowPosition.runOn(this.___worksheet);
				indexToVerify = range.firstRow();
				scrollRegion = pane.rowScrollRegion();
				if (this._hasFrozenPanes() && this._rows().count() > 0 && this._rows().item(0).isFrozen() && indexToVerify <= this._rows().item(0).endIndex()) {
					return;
				}
				break;
			case $.ig.Direction.prototype.down:
				getItemFromOffset = this.___worksheet._getRowPositionFromOffset.runOn(this.___worksheet);
				getItemPos = this.___worksheet._getRowPosition.runOn(this.___worksheet);
				indexToVerify = range.lastRow();
				scrollRegion = pane.rowScrollRegion();
				break;
			case $.ig.Direction.prototype.left:
				getItemFromOffset = this._getColumnPositionFromOffset.runOn(this);
				getItemPos = this.___worksheet._getColumnPosition.runOn(this.___worksheet);
				indexToVerify = range.firstColumn();
				scrollRegion = pane.columnScrollRegion();
				if (this._hasFrozenPanes() && this._columns().count() > 0 && this._columns().item(0).isFrozen() && indexToVerify <= this._columns().item(0).endIndex()) {
					return;
				}
				break;
			case $.ig.Direction.prototype.right:
				getItemFromOffset = this._getColumnPositionFromOffset.runOn(this);
				getItemPos = this.___worksheet._getColumnPosition.runOn(this.___worksheet);
				indexToVerify = range.lastColumn();
				scrollRegion = pane.columnScrollRegion();
				break;
		}
		var visibleRange = scrollRegion._getItemRange(true);
		if (indexToVerify < visibleRange.__start) {
			scrollRegion.startIndex(indexToVerify);
			scrollRegion._startIndexOutOfViewExtent(0);
		} else if (indexToVerify > visibleRange.__end) {
			var itemPos = getItemPos(indexToVerify);
			var itemArea = scrollRegion._scrollInfo()._viewport();
			var startingItemOffset = itemPos._offset() + itemPos._extent() - itemArea;
			var itemPosFromOffset = getItemFromOffset($.ig.truncate(startingItemOffset));
			var newItemStart = itemPosFromOffset._index();
			if (itemPosFromOffset._offset() + itemArea < itemPos._end()) {
				newItemStart++;
			}
			scrollRegion.startIndex(newItemStart);
			scrollRegion._startIndexOutOfViewExtent(0);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringDirectionInView(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, )" />*/
	_bringIntoView1: function (pane, ranges) {
		var union = ranges[0];
		for (var i = 1; i < ranges.length; i++) {
			union = union.union(ranges[i]);
		}
		this._bringIntoView3(pane, union);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_bringIntoView3: function (pane, range) {
		if (pane == null) {
			pane = this.activePane();
		}
		var changed = false;
		var firstRow = $.ig.util.toNullable($.ig.Number.prototype.$type, range.firstRow());
		var lastRow = $.ig.util.toNullable($.ig.Number.prototype.$type, range.lastRow());
		var firstCol = $.ig.util.toNullable($.ig.Number.prototype.$type, range.firstColumn());
		var lastCol = $.ig.util.toNullable($.ig.Number.prototype.$type, range.lastColumn());
		if (this._hasFrozenPanes()) {
			var upperLeftPane = this._getPaneForCell(range._upperLeft());
			var lowerRightPane = this._getPaneForCell(range._lowerRight());
			if (lowerRightPane.rowScrollRegion().isFrozen()) {
				lastRow = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			if (upperLeftPane.rowScrollRegion().isFrozen()) {
				firstRow = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			if (lowerRightPane.columnScrollRegion().isFrozen()) {
				lastCol = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			if (upperLeftPane.columnScrollRegion().isFrozen()) {
				firstCol = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
			}
			pane = lowerRightPane;
		}
		$.ig.Debug.prototype.assert(pane != null);
		if (pane == null) {
			return;
		}
		changed = $.ig.SpreadsheetPaneManager.prototype._bringIntoView(pane.columnScrollRegion(), firstCol, lastCol);
		changed = $.ig.SpreadsheetPaneManager.prototype._bringIntoView(pane.rowScrollRegion(), firstRow, lastRow) || changed;
		if (changed) {
			this._isLayoutDirty(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Nullable, System.Nullable)" />*/
	_bringIntoView: function (scrollRegion, rangeStartObj, rangeEndObj) {
		var rangeStart, rangeEnd;
		if ($.ig.util.nullableEquals(rangeStartObj, null)) {
			if ($.ig.util.nullableEquals(rangeEndObj, null)) {
				return false;
			}
			rangeStart = rangeEnd = rangeEndObj.value();
		} else {
			rangeStart = rangeStartObj.value();
			rangeEnd = $.ig.util.nullableEquals(rangeEndObj, null) ? rangeStart : rangeEndObj.value();
		}
		var currentEndIndex = scrollRegion.endIndex();
		if (currentEndIndex > scrollRegion.startIndex() && scrollRegion._endIndexOutOfViewExtent() != 0) {
			currentEndIndex--;
		}
		if (rangeStart < scrollRegion.startIndex() || rangeEnd > currentEndIndex) {
			var firstColPos = scrollRegion._getItemPosition()(rangeStart);
			var lastColPos = scrollRegion._getItemPosition()(rangeEnd);
			var scrollRegionExtent = scrollRegion.actualExtent() / scrollRegion._zoomLevel();
			var regionExtent = scrollRegion._convertItemUnitsToPixels()(lastColPos._end() - firstColPos._offset());
			scrollRegion._startIndexOutOfViewExtent(0);
			if (regionExtent > scrollRegionExtent || rangeStart < scrollRegion.startIndex()) {
				scrollRegion.startIndex(rangeStart);
			} else {
				var extentInUnits = scrollRegion._convertPixelsToItemUnits()(scrollRegionExtent);
				var firstItemPos = scrollRegion._getItemPositionFromOffset()(lastColPos._end() - extentInUnits);
				scrollRegion.startIndex(lastColPos._end() - extentInUnits > firstItemPos._offset() ? scrollRegion._getItemPositionFromOffset()(firstItemPos._end())._index() : firstItemPos._index());
			}
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Nullable, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Single, System.Single, System.Single, System.Single)" />*/
	_bringIntoView2: function (pane, cell, columnPosition, horizontalPosInCell, rowPosition, verticalPosInCell) {
		if (pane == null) {
			pane = this.activePane();
			if (pane == null) {
				return;
			}
		}
		var colScrollRegion = pane.columnScrollRegion();
		var columnPos = this.___worksheet._getColumnPosition(cell.column());
		var columnArea = colScrollRegion._scrollInfo()._viewport();
		var startingColOffset = columnPos._offset() + (columnPos._extent() * horizontalPosInCell) - (columnArea * columnPosition);
		if (startingColOffset < 0) {
			startingColOffset = 0;
		}
		var getItemPos = this._getColumnPositionFromOffset($.ig.truncate(startingColOffset));
		var newColStart = getItemPos._index();
		if (newColStart < cell.column() && getItemPos._offset() + columnArea < columnPos._end()) {
			newColStart++;
		}
		var rowScrollRegion = pane.rowScrollRegion();
		var rowPos = this.___worksheet._getRowPosition(cell.row());
		var rowArea = rowScrollRegion._scrollInfo()._viewport();
		var startingRowOffset = rowPos._offset();
		if (verticalPosInCell != 0) {
			startingRowOffset += (rowPos._extent() * verticalPosInCell);
		}
		if (rowPosition != 0) {
			startingRowOffset -= (rowArea * rowPosition);
		}
		if (startingRowOffset < 0) {
			startingRowOffset = 0;
		}
		getItemPos = this.___worksheet._getRowPositionFromOffset($.ig.truncate(startingRowOffset));
		var newRowStart = getItemPos._index();
		if (newRowStart < cell.row() && getItemPos._offset() + rowArea < rowPos._end()) {
			newRowStart++;
		}
		colScrollRegion.startIndex(newColStart);
		colScrollRegion._startIndexOutOfViewExtent(0);
		rowScrollRegion.startIndex(newRowStart);
		rowScrollRegion._startIndexOutOfViewExtent(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::BringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Single, System.Single, System.Single, System.Single)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanCreateArrayFormula(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_canCreateArrayFormula: function (range) {
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var resolvedLocked = $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
			var result = $.ig.SpreadsheetPaneManager.prototype._enumerateFormats(tab._worksheet(), range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn(), function (f) {
				var isLocked = $.ig.util.nullableEquals(f._lockedResolved(), true);
				if ($.ig.util.nullableEquals(resolvedLocked, null)) {
					resolvedLocked = $.ig.util.toNullable($.ig.Boolean.prototype.$type, isLocked);
					return true;
				} else {
					return isLocked == resolvedLocked.value();
				}
			});
			if (result == false) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidArrayFormulaLockedState, null, null, null, false));
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanCreateArrayFormula(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_canEnterEditMode: function (cell) {
		if (this.___worksheet.isProtected()) {
			var worksheets = [ this.___worksheet ];
			var ranges = [ new $.ig.WorksheetRegionAddress(1, cell.row(), cell.row(), cell.column(), cell.column()) ];
			var result = this._canPerformProtectedAction2(worksheets, ranges, false, true, true);
			if (result == $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.reverifyProtection) {
				result = this._canPerformProtectedAction2(worksheets, ranges, false, true, false);
			}
			if (result != $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanEnterEditMode(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanInsertOrDeleteCells(System.Boolean)" />*/
	_canInsertOrDeleteCells: function (isInsert) {
		if (this.___worksheet.isProtected()) {
			var pane = this.activePane();
			if (pane == null) {
				return false;
			}
			var selection = pane._activeSelection();
			if (selection._selectedColumns().count() == 0 && selection._selectedRows().count() == 0) {
				return false;
			}
			if (selection._hasMixedCellSelection()) {
				return false;
			}
			if (selection._hasOverlappingRanges()) {
				return false;
			}
			var protection = this.___worksheet.protection();
			if (selection._selectedColumns().count() > 0) {
				var protectionFlag = isInsert ? protection.allowInsertingColumns() : protection.allowDeletingColumns();
				if (protectionFlag == false) {
					return false;
				}
			} else {
				var protectionFlag1 = isInsert ? protection.allowInsertingRows() : protection.allowDeletingRows();
				if (protectionFlag1 == false) {
					return false;
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanInsertOrDeleteCells(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformMerge()" />*/
	_canPerformMerge: function () {
		var pane = this.activePane();
		if (pane != null) {
			this._assertIsTabSelected();
			var en = pane.selection().cellRanges().getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
				var en1 = this.___tabManager._selectedTabs().getEnumerator();
				while (en1.moveNext()) {
					var tab = en1.current();
					var en2 = tab._worksheet().tables().getEnumerator();
					while (en2.moveNext()) {
						var table = en2.current();
						if (excelRange._intersectsWith(table._wholeTableAddress())) {
							return false;
						}
					}
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformMerge()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanRemoveHyperlinks(System.Boolean, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	_canRemoveHyperlinks: function (removeHyperlinkStyle, lockedRangeInfo) {
		var $self = this;
		var hasHyperlinks;
		return (function () { var $ret = $self._removeHyperlinks(removeHyperlinkStyle, true, hasHyperlinks, lockedRangeInfo, false); hasHyperlinks = $ret.p2; return $ret.ret; }());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanRemoveHyperlinks(System.Boolean, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_canSelect: function (cell) {
		if (this.___worksheet.isProtected()) {
			switch (this.___worksheet.protection().selectionMode()) {
				case $.ig.excel.WorksheetProtectedSelectionMode.noCells: return false;
				case $.ig.excel.WorksheetProtectedSelectionMode.unlockedCells:
					if (!this._isUnlocked3(cell.row(), cell.column())) {
						return false;
					}
					break;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_canSelect1: function (range) {
		if (this.___worksheet.isProtected()) {
			switch (this.___worksheet.protection().selectionMode()) {
				case $.ig.excel.WorksheetProtectedSelectionMode.noCells: return false;
				case $.ig.excel.WorksheetProtectedSelectionMode.unlockedCells:
					if (!$.ig.SpreadsheetPaneManager.prototype._isUnlocked1(this.___worksheet, range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn(), null)) {
						return false;
					}
					break;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CellInNextSelectionRange(System.Boolean)" />*/
	_cellInNextSelectionRange: function (next) {
		var pane = this.activePane();
		if (pane != null) {
			var selection = pane.selection();
			var offset = next ? 1 : -1;
			var count = selection.cellRanges().count();
			var newIdx = (selection.activeCellRangeIndex() + offset + count) % count;
			var newRange = selection.cellRanges().item(newIdx);
			if (this._canSelect(newRange._upperLeft())) {
				selection._setActiveCell(newRange._upperLeft(), $.ig.util.toNullable($.ig.Number.prototype.$type, newIdx));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CellInNextSelectionRange(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ChangeIndent(System.Boolean)" />*/
	_changeIndent: function (increase) {
		if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.formatCells), true)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		$.ig.SpreadsheetPaneManager_IndentHelper.prototype.changeIndent1(this, increase);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ChangeIndent(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CircleInvalidData()" />*/
	_circleInvalidData: function () {
		var beforeCount = this.___worksheet._cellsWithInvalidValueCircles().count();
		this.___worksheet._circleCellsWithInvalidData();
		if (beforeCount != 0 || this.___worksheet._cellsWithInvalidValueCircles().count() != 0) {
			this._isLayoutDirty(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CircleInvalidData()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ClearCellContents(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger, System.Boolean, , Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	_clearCellContents: function (promptTrigger, canCancel, ranges, lockedRangeInfoForActiveWorksheet) {
		if (ranges == null) {
			var pane = this.activePane();
			if (pane != null) {
				if (ranges == null) {
					ranges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, pane.selection().cellRanges());
				}
			}
		}
		this._assertIsTabSelected();
		if (ranges != null) {
			if (this._doesSelectionIntersectMergedCells(true, true, null)) {
				return $.ig.SpreadsheetOperationResult.prototype.cancelled;
			}
			var regionList = new $.ig.List$1($.ig.excel.WorksheetRegion.prototype.$type, 0);
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				regionList.addRange($.ig.SpreadsheetUtilities.prototype.getWorksheetRegions(tab._worksheet(), ranges));
			}
			var regions = regionList.toArray();
			var blockingValuesToClear = new $.ig.HashSet$1($.ig.IRegionBlockingValue.prototype.$type, 0);
			try {
				$.ig.ExcelUtils.prototype.verifyBlockedRegions(regions, blockingValuesToClear);
			}
			catch (ex) {
				if (this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo(promptTrigger, null, ex, null, canCancel))) {
					return $.ig.SpreadsheetOperationResult.prototype.cancelled;
				}
				return $.ig.SpreadsheetOperationResult.prototype.error;
			}
			var hasTriedToModifyLockedCell = false;
			var en1 = blockingValuesToClear.getEnumerator();
			while (en1.moveNext()) {
				var blockingValue = en1.current();
				if (lockedRangeInfoForActiveWorksheet != null) {
					var blockingRegionWorksheet = blockingValue.blockedRegion().worksheet();
					if (blockingRegionWorksheet.isProtected() && blockingRegionWorksheet == this.___worksheet) {
						var blockInfoForWs = lockedRangeInfoForActiveWorksheet.getWorksheetInfo(blockingRegionWorksheet);
						var blockedAddress = blockingValue.blockedRegion()._address();
						if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(blockingRegionWorksheet, blockedAddress._firstRowIndex(), blockedAddress._firstColumnIndex(), blockedAddress._lastRowIndex(), blockedAddress._lastColumnIndex(), blockInfoForWs) == false) {
							hasTriedToModifyLockedCell = true;
							continue;
						}
					}
				}
				blockingValue.removeFromRegion();
			}
			var excelRanges = new Array(ranges.length);
			for (var i = 0; i < excelRanges.length; i++) {
				excelRanges[i] = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(ranges[i]);
			}
			var skipIntersectingTables = this.___tabManager._selectedTabs().count() > 1 && promptTrigger != $.ig.spreadsheet.SpreadsheetUserPromptTrigger.editError;
			var en2 = this.___tabManager._selectedTabs().getEnumerator();
			while (en2.moveNext()) {
				var tab1 = en2.current();
				var ws = tab1._worksheet();
				if (skipIntersectingTables) {
					if ($.ig.SpreadsheetPaneManager.prototype._intersectsTable(ws, excelRanges)) {
						this.___onPrompt((function (t1, t2, t3) { return new $.ig.SpreadsheetUserPromptInfo(t1, null, null, t3, t2); }($.ig.spreadsheet.SpreadsheetUserPromptTrigger.tableChangeWithMultipleSelectedSheets, canCancel, ws)));
						continue;
					}
				}
				var lockedRangeInfoForTab = ws.isProtected() && ws == this.___worksheet && lockedRangeInfoForActiveWorksheet != null ? lockedRangeInfoForActiveWorksheet.getWorksheetInfo(ws) : null;
				var tables = ws.tables();
				for (var t = tables.count() - 1; t >= 0; t--) {
					var table = tables._item(t);
					var tableAddress = table._wholeTableAddress();
					for (var i1 = 0; i1 < regions.length; i1++) {
						if (regions[i1]._address()._contains1(tableAddress)) {
							tables.removeAt(i1, false);
							break;
						}
					}
				}
				var oldPreventState = ws._preventImplicitSetCellValueChanges();
				ws._preventImplicitSetCellValueChanges(true);
				try {
					var rows = ws.rows();
					for (var i2 = 0; i2 < ranges.length; i2++) {
						var range = ranges[i2];
						var lockedRangeInfoForRange = lockedRangeInfoForTab != null ? $.ig.LockedEditRangeInfoForCellRange.prototype.create(lockedRangeInfoForTab, range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn()) : null;
						var en3 = ws.rows()._getItemsInRange(range.firstRow(), range.lastRow()).getEnumerator();
						while (en3.moveNext()) {
							var row = en3.current();
							var r = row.index();
							for (var c = range.firstColumn(); c <= range.lastColumn(); c++) {
								var mergedCell = $.ig.SpreadsheetPaneManager.prototype._getCellRange2(r, c, ws);
								var cellStart = mergedCell._upperLeft();
								if (!mergedCell.isSingleCell()) {
									var firstVis = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleCell1(mergedCell, ws);
									if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstVis, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
										cellStart = firstVis.value();
									}
								}
								if (cellStart.row() == r && cellStart.column() >= c) {
									if (lockedRangeInfoForRange != null) {
										var format = ws._getCellFormatElementReadOnly(row, cellStart.column());
										if ($.ig.util.nullableEquals(format._lockedResolved(), true) && lockedRangeInfoForRange.isUnlocked(r, cellStart.column()) == false) {
											hasTriedToModifyLockedCell = true;
											continue;
										}
									}
									row.setCellValue(cellStart.column(), null);
								} else {
									c = mergedCell.lastColumn();
								}
							}
						}
					}
				}
				finally {
					ws._preventImplicitSetCellValueChanges(oldPreventState);
				}
				var hasHyperlinks;
				var $ret = $.ig.SpreadsheetPaneManager.prototype._removeHyperlinks2(false, false, hasHyperlinks, ws, ranges);
				hasHyperlinks = $ret.p2;
			}
			if (hasTriedToModifyLockedCell) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			}
		}
		return $.ig.SpreadsheetOperationResult.prototype.success;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetOperationResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ClearCellContents(Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger, System.Boolean, , Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ClearFormats(System.Boolean, System.Boolean, System.Boolean)" />*/
	_clearFormats: function (verifyNotIntersectingMergedCells, verifyCanClearFormats, canPromptForPassword) {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		var regionsToRemove = new $.ig.HashSet$1($.ig.excel.WorksheetMergedCellsRegion.prototype.$type, 0);
		if (this._doesSelectionIntersectMergedCells(true, verifyNotIntersectingMergedCells, regionsToRemove)) {
			return;
		}
		var en = regionsToRemove.getEnumerator();
		while (en.moveNext()) {
			var region = en.current();
			region.worksheet().mergedCellsRegions().remove(region);
		}
		this._assertIsTabSelected();
		var selection = pane.selection();
		if (verifyCanClearFormats && $.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.formatCells), true)) {
			var protectedActionResult = this._canPerformProtectedAction1(selection, false, true, canPromptForPassword);
			switch (protectedActionResult) {
				case $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation: return;
				case $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.reverifyProtection:
					this._clearFormats(verifyNotIntersectingMergedCells, true, false);
					return;
				case $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation: break;
			}
		}
		var normalStyle = this.___worksheet.workbook().styles()._getBuiltInStyle($.ig.BuiltInStyleType.prototype.normal);
		var normalStyleFormat = normalStyle._styleFormatInternal();
		var en1 = this.___tabManager._selectedTabs().getEnumerator();
		while (en1.moveNext()) {
			var tab = en1.current();
			var ws = tab._worksheet();
			var en2 = selection.cellRanges().getEnumerator();
			while (en2.moveNext()) {
				var range = en2.current();
				var isRowSelection = selection._isRowSelection(range);
				var isColSelection = selection._isColumnSelection(range);
				var hasFormattedColumnBlocks = false;
				var expectedRow = range.firstRow();
				if (isColSelection == false) {
					for (var ii = range.firstColumn(); ii <= range.lastColumn(); ii++) {
						var tempBlock = ws._getColumnBlock(ii);
						if (!$.ig.Object.prototype.referenceEquals(tempBlock.cellFormat(), normalStyleFormat)) {
							hasFormattedColumnBlocks = true;
							for (var jj = range.firstRow(); jj <= range.lastRow(); jj++) {
								var tempRow = ws.rows().item(jj);
							}
							break;
						}
					}
				}
				var en3 = ws.rows()._getItemsInRange(range.firstRow(), range.lastRow()).getEnumerator();
				while (en3.moveNext()) {
					var row = en3.current();
					var rowIndex = row.index();
					if (isRowSelection == false && row._hasCellFormat() && !$.ig.Object.prototype.referenceEquals(row._cellFormatInternal().element(), normalStyleFormat)) {
						for (var i = range.firstColumn(); i <= range.lastColumn(); i++) {
							row._getCellFormatInternal1(i).formatOptions($.ig.excel.WorksheetCellFormatOptions.none);
							row._getCellFormatInternal1(i).style(normalStyle);
						}
					} else {
						var columnBlock = null;
						var expectedCol = range.firstColumn();
						var en4 = row._getCellsWithData(range.firstColumn(), range.lastColumn()).getEnumerator();
						while (en4.moveNext()) {
							var item = en4.current();
							if (hasFormattedColumnBlocks && isColSelection == false && expectedCol != item.columnIndex()) {
								for (; expectedCol < item.columnIndex(); expectedCol++) {
									if (columnBlock == null || expectedCol > columnBlock.lastColumnIndex()) {
										columnBlock = ws._getColumnBlock(expectedCol);
										if ($.ig.Object.prototype.referenceEquals(columnBlock.cellFormat(), normalStyleFormat)) {
											expectedCol = columnBlock.lastColumnIndex();
											continue;
										}
									}
									row._getCellFormatInternal1(expectedCol).formatOptions($.ig.excel.WorksheetCellFormatOptions.none);
									row._getCellFormatInternal1(expectedCol).style(normalStyle);
								}
							}
							if (item.hasFormat() && !$.ig.Object.prototype.referenceEquals(item.cellFormatData(), normalStyleFormat)) {
								row._getCellFormatInternal1(item.columnIndex()).formatOptions($.ig.excel.WorksheetCellFormatOptions.none);
								row._getCellFormatInternal1(item.columnIndex()).style(normalStyle);
							}
							expectedCol = item.columnIndex() + 1;
						}
						if (hasFormattedColumnBlocks && isColSelection == false) {
							for (; expectedCol <= range.lastColumn(); expectedCol++) {
								if (columnBlock == null || expectedCol > columnBlock.lastColumnIndex()) {
									columnBlock = ws._getColumnBlock(expectedCol);
									if ($.ig.Object.prototype.referenceEquals(columnBlock.cellFormat(), normalStyleFormat)) {
										expectedCol = columnBlock.lastColumnIndex();
										continue;
									}
								}
								row._getCellFormatInternal1(expectedCol).style(normalStyle);
								row._getCellFormatInternal1(expectedCol).formatOptions($.ig.excel.WorksheetCellFormatOptions.none);
							}
						}
					}
				}
			}
			var emptyFormat = new $.ig.WorksheetCellFormatData(ws.workbook(), $.ig.WorksheetCellFormatType.prototype.cellFormat);
			var en5 = selection._selectedRows().getEnumerator();
			while (en5.moveNext()) {
				var rowRange = en5.current();
				var en6 = ws.rows()._getItemsInRange(rowRange.__start, rowRange.__end).getEnumerator();
				while (en6.moveNext()) {
					var row1 = en6.current();
					if (row1._hasCellFormat()) {
						row1._cellFormatInternal()._setFormatting1(emptyFormat, $.ig.CellFormatValueChangedOptions.prototype.preventAllSyncronization);
					}
				}
			}
			var defaultFormat = ws.workbook()._cellFormats()._defaultElement();
			var en7 = selection._selectedColumns().getEnumerator();
			while (en7.moveNext()) {
				var colRange = en7.current();
				for (var i1 = colRange.__start; i1 <= colRange.__end; i1++) {
					var block = ws._getColumnBlock(i1);
					if (block.cellFormat() != null && defaultFormat._equalsInternal(block.cellFormat()) == false) {
						var end = Math.min(colRange.__end, block.lastColumnIndex());
						for (var j = i1; j <= end; j++) {
							ws.columns().item(j)._cellFormatInternal()._setFormatting1(emptyFormat, $.ig.CellFormatValueChangedOptions.prototype.preventOwnerToCellSynchronization);
						}
					}
					i1 = block.lastColumnIndex();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ClearFormats(System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ClearValidationCircles()" />*/
	_clearValidationCircles: function () {
		if (this.___worksheet._cellsWithInvalidValueCircles().count() > 0) {
			this.___worksheet._cellsWithInvalidValueCircles().clear();
			this._isLayoutDirty(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ClearValidationCircles()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditInfo Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CreateCellEditInfo(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_createCellEditInfo: function (cell) {
		var valueInfo;
		var format;
		var region = this.___worksheet._getCellAssociatedMergedCellsRegion(cell.row(), cell.column());
		if (region == null) {
			var row = this.___worksheet.rows().item(cell.row());
			format = this._getCellFormatElementReadOnly(row, cell.row(), cell.column());
			valueInfo = $.ig.SpreadsheetUtilities.prototype.createCellInfo1(row, cell.column());
		} else {
			format = this._getCellFormatElementReadOnly(this.___worksheet.rows()._getIfCreated(region.firstRow()), region.firstRow(), region._firstColumnInternal());
			valueInfo = $.ig.SpreadsheetUtilities.prototype.createCellInfo(region);
		}
		var worksheetCollectionHyperlink = this.___worksheet._getCellHyperlink(valueInfo._rowWithValue, valueInfo._startRowIndex, valueInfo._startColumnIndex);
		var isVisitedHyperlink = this._getHasVisitedHyperlink(worksheetCollectionHyperlink);
		this._initializeFormatter(valueInfo, isVisitedHyperlink, format, false);
		return new $.ig.SpreadsheetCellEditInfo(valueInfo, format, $.ig.util.nullableEquals(isVisitedHyperlink, true));
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellEditInfo Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CreateCellEditInfo(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesCellHaveValue(System.Int32, System.Int32)" />*/
	_doesCellHaveValue1: function (row, column) {
		var rowObj = this.___worksheet.rows()._getIfCreated(row);
		if (rowObj != null) {
			var cellBlock = rowObj._tryGetCellBlock(column);
			if (cellBlock != null && cellBlock.doesCellHaveValue(column)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesCellHaveValue(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesCellHaveValue(Infragistics.Documents.Excel.WorksheetMergedCellsRegion)" />*/
	_doesCellHaveValue: function (region) {
		var address = region._address();
		return this._doesCellHaveValue1(address._firstRowIndex(), address._firstColumnIndex());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesCellHaveValue(Infragistics.Documents.Excel.WorksheetMergedCellsRegion)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DeleteCells(System.Nullable)" />*/
	_deleteCells: function (shiftLeft) {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		var selection = pane.selection();
		if (selection._hasMixedCellSelection()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.deleteRows), false));
		} else if (selection._hasOverlappingRanges()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.deleteRows), false));
		} else if ($.ig.util.nullableEquals(shiftLeft, true) && selection._selectedRows().count() > 0) {
			$.ig.Debug.prototype.fail("Shouldn't be trying to shift left when we have rows selected.");
			return;
		} else if ($.ig.util.nullableEquals(shiftLeft, false) && selection._selectedColumns().count() > 0) {
			$.ig.Debug.prototype.fail("Shouldn't be trying to shift up when we have columns selected.");
			return;
		} else {
			if ($.ig.util.nullableEquals(shiftLeft, null)) {
				if (selection._selectedRows().count() > 0) {
					this._deleteRows();
					if (selection._selectedColumns().count() > 0) {
						this._deleteColumns();
					}
					return;
				} else if (selection._selectedColumns().count() > 0) {
					this._deleteColumns();
					return;
				} else {
					var firstRange = selection.cellRanges().item(0);
					if (firstRange._height() > firstRange._width()) {
						shiftLeft = $.ig.util.toNullable($.ig.Boolean.prototype.$type, true);
					} else if (firstRange._width() > firstRange._height()) {
						shiftLeft = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
					} else {
						for (var c = firstRange.firstColumn(); c <= firstRange.lastColumn(); c++) {
							if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted($.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null), this._getCellWithDataInDirection(firstRange.lastRow(), c, $.ig.Direction.prototype.down, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null), false, true))) {
								shiftLeft = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
								break;
							}
						}
						if ($.ig.util.nullableEquals(shiftLeft, null)) {
							shiftLeft = $.ig.util.toNullable($.ig.Boolean.prototype.$type, true);
						}
					}
				}
			}
			this._assertIsTabSelected();
			if ($.ig.util.nullableNotEquals(this._areSelectedTabsProtected(), false)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			}
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				for (var i = 0; i < ranges.length; i++) {
					var range = ranges[i];
					tab._worksheet()._deleteCells1($.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range), $.ig.util.nullableEquals(shiftLeft, true));
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DeleteCells(System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DeleteColumns()" />*/
	_deleteColumns: function () {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		this._assertIsTabSelected();
		var selection = pane.selection();
		if (selection._hasMixedCellSelection()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.deleteColumns), false));
		} else if (selection._hasOverlappingRanges()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.deleteColumns), false));
		} else {
			if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.deleteColumns), true)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			}
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.Enumerable.prototype.reverse$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), selection._allColumns()));
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked(tab._worksheet(), selection, null) == false) {
					this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.deletingLockedColumnCells, null, null, null, false));
					return;
				}
			}
			var en1 = this.___tabManager._selectedTabs().getEnumerator();
			while (en1.moveNext()) {
				var tab1 = en1.current();
				for (var i = 0; i < ranges.length; i++) {
					var range = ranges[i];
					tab1._worksheet().columns().remove(range.__start, (range.__end - range.__start) + 1);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DeleteColumns()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DeleteRows()" />*/
	_deleteRows: function () {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		this._assertIsTabSelected();
		var selection = pane.selection();
		if (selection._hasMixedCellSelection()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.deleteRows), false));
		} else if (selection._hasOverlappingRanges()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.deleteRows), false));
		} else {
			if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.deleteRows), true)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			}
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.Enumerable.prototype.reverse$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), selection._allRows()));
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked(tab._worksheet(), selection, null) == false) {
					this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.deletingLockedRowCells, null, null, null, false));
					return;
				}
			}
			var en1 = this.___tabManager._selectedTabs().getEnumerator();
			while (en1.moveNext()) {
				var tab1 = en1.current();
				for (var i = 0; i < ranges.length; i++) {
					var range = ranges[i];
					tab1._worksheet().rows().remove(range.__start, (range.__end - range.__start) + 1);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DeleteRows()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Dispose()" />*/
	_dispose: function () {
		this.___deferredOperation.cancelPendingOperation();
		this.___pendingChangeActions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none;
		$.ig.SpreadsheetUtilities.prototype.removeListener(this.___tabManager._selectedTabs(), this.___privateListener);
		if (this.___resourceProvider != null) {
			$.ig.SpreadsheetUtilities.prototype.removeListener(this.___resourceProvider, this);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesSelectionIntersectMergedCells(System.Boolean, System.Boolean, System.Collections.Generic.HashSet)" />*/
	_doesSelectionIntersectMergedCells: function (updateSelectionIfExtended, prompt, intersectingRegions) {
		this._assertIsTabSelected();
		var pane = this.activePane();
		if (pane != null) {
			var selection = pane.selection();
			var ranges = new Array(selection.cellRanges().count());
			for (var i = 0; i < selection.cellRanges().count(); i++) {
				ranges[i] = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(selection.cellRanges().item(i));
			}
			var hasChangedSelection = false;
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				var ws = tab._worksheet();
				for (var i1 = 0; i1 < ranges.length; i1++) {
					var originalExcelRange = ranges[i1];
					var $ret = ws._extendRegionForMergedCells(ranges[i1], intersectingRegions);
					ranges[i1] = $ret.p0;
					if ($.ig.WorksheetRegionAddress.prototype._l_op_Inequality(ranges[i1], originalExcelRange)) {
						hasChangedSelection = true;
						if (updateSelectionIfExtended == false) {
							break;
						}
					}
				}
				if (hasChangedSelection && updateSelectionIfExtended == false) {
					break;
				}
			}
			if (hasChangedSelection) {
				if (updateSelectionIfExtended) {
					selection._resetSelection($.ig.SpreadsheetUtilities.prototype.toSheetCellRange(ranges), selection.activeCell(), selection.activeCellRangeIndex(), false);
					this._updateExcelSelectionFromPanes();
				}
				if (prompt) {
					this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.intersectsMergedCells, null, null, null, false));
				}
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesSelectionIntersectMergedCells(System.Boolean, System.Boolean, System.Collections.Generic.HashSet)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	_ensureIsInView: function (pane, cell, ignorePartiallyVisibleItems) {
		return this._ensureIsInView1(pane, new $.ig.spreadsheet.SpreadsheetCellRange(cell.row(), cell.column()), ignorePartiallyVisibleItems);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Boolean)" />*/
	_ensureIsInView1: function (pane, newCellRange, ignorePartiallyVisibleItems) {
		return this._ensureIsInView2(pane, $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, newCellRange.firstRow(), newCellRange.lastRow())), $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, newCellRange.firstColumn(), newCellRange.lastColumn())), ignorePartiallyVisibleItems);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetPane, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Nullable, System.Nullable, System.Boolean)" />*/
	_ensureIsInView2: function (pane, rowRange, colRange, ignorePartiallyVisibleItems) {
		if (pane == null) {
			pane = this.activePane();
			if (pane == null) {
				return false;
			}
		}
		if ($.ig.util.nullableNotEquals(rowRange, null)) {
			rowRange = $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), rowRange.value()._min(this.___worksheet.rows().maxCount() - 1)._max(0));
		}
		if ($.ig.util.nullableNotEquals(colRange, null)) {
			colRange = $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), colRange.value()._min(this.___worksheet.columns().maxCount() - 1)._max(0));
		}
		var newFirstColumn = $.ig.util.nullableNotEquals(colRange, null) ? colRange.value().__start : pane.visibleRange().firstColumn();
		var newLastColumn = $.ig.util.nullableNotEquals(colRange, null) ? colRange.value().__end : pane.visibleRange().lastColumn();
		var newFirstRow = $.ig.util.nullableNotEquals(rowRange, null) ? rowRange.value().__start : pane.visibleRange().firstRow();
		var newLastRow = $.ig.util.nullableNotEquals(rowRange, null) ? rowRange.value().__end : pane.visibleRange().lastRow();
		var inViewRangeCols = $.ig.util.nullableNotEquals(colRange, null) ? this._getInViewItemRange(pane.columnScrollRegion(), colRange.value(), ignorePartiallyVisibleItems) : $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), null);
		var inViewRangeRows = $.ig.util.nullableNotEquals(rowRange, null) ? this._getInViewItemRange(pane.rowScrollRegion(), rowRange.value(), ignorePartiallyVisibleItems) : $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), null);
		var hasChanged = ($.ig.util.nullableNotEquals(colRange, null) && ($.ig.util.nullableEquals(inViewRangeCols, null) || !colRange.value().equals(inViewRangeCols.value()))) || ($.ig.util.nullableNotEquals(rowRange, null) && ($.ig.util.nullableEquals(inViewRangeRows, null) || !rowRange.value().equals(inViewRangeRows.value())));
		if (!hasChanged) {
			return true;
		}
		var colPos, rowPos, horzPosInCell, vertPosInCell;
		colPos = rowPos = horzPosInCell = vertPosInCell = 0;
		var row, col;
		var visibleRange = pane.visibleRange();
		if (($.ig.util.nullableEquals(inViewRangeCols, null) && newLastColumn <= visibleRange.firstColumn()) || ($.ig.util.nullableNotEquals(inViewRangeCols, null) && newFirstColumn < inViewRangeCols.value().__start)) {
			col = newFirstColumn;
			colPos = 0;
			horzPosInCell = 0;
		} else if (($.ig.util.nullableEquals(inViewRangeCols, null) && newFirstColumn >= visibleRange.lastColumn()) || ($.ig.util.nullableNotEquals(inViewRangeCols, null) && newLastColumn > inViewRangeCols.value().__end)) {
			var extent = this.___worksheet._getColumnWidthInPixels2(newFirstColumn, newLastColumn, false);
			var unitExtent = this._getItemPosUnitFromColumnPixels(extent);
			if (unitExtent > pane.columnScrollRegion()._scrollInfo()._viewport()) {
				col = newFirstColumn;
				colPos = 0;
				horzPosInCell = 0;
			} else {
				col = newLastColumn;
				colPos = horzPosInCell = 1;
			}
		} else {
			$.ig.Debug.prototype.assert($.ig.util.nullableNotEquals(inViewRangeCols, null) || $.ig.util.nullableEquals(colRange, null));
			col = visibleRange.firstColumn();
			colPos = horzPosInCell = 0;
		}
		if (($.ig.util.nullableEquals(inViewRangeRows, null) && newLastRow <= visibleRange.firstRow()) || ($.ig.util.nullableNotEquals(inViewRangeRows, null) && newFirstRow < inViewRangeRows.value().__start)) {
			row = newFirstRow;
			rowPos = 0;
			vertPosInCell = 0;
		} else if (($.ig.util.nullableEquals(inViewRangeRows, null) && newFirstRow >= visibleRange.lastRow()) || ($.ig.util.nullableNotEquals(inViewRangeRows, null) && newLastRow > inViewRangeRows.value().__end)) {
			var extent1 = this.___worksheet._getRowHeightInPixels1(newFirstRow, newLastRow, false);
			var unitExtent1 = this._getItemPosUnitFromRowPixels(extent1);
			if (unitExtent1 > pane.rowScrollRegion()._scrollInfo()._viewport()) {
				row = newFirstRow;
				rowPos = 0;
				vertPosInCell = 0;
			} else {
				row = newLastRow;
				rowPos = vertPosInCell = 1;
			}
		} else {
			$.ig.Debug.prototype.assert($.ig.util.nullableNotEquals(inViewRangeRows, null) || $.ig.util.nullableEquals(rowRange, null));
			row = visibleRange.firstRow();
			rowPos = vertPosInCell = 0;
		}
		if (this._hasFrozenPanes()) {
			if (pane.rowScrollRegion().isFrozen() || (this._rows().count() > 1 && this._rows().item(0).isFrozen() && this._rows().item(0).endIndex() >= row)) {
				row = visibleRange.firstRow();
				rowPos = vertPosInCell = 0;
			}
			if (pane.columnScrollRegion().isFrozen() || (this._columns().count() > 1 && this._columns().item(0).isFrozen() && this._columns().item(0).endIndex() >= col)) {
				col = visibleRange.firstColumn();
				colPos = horzPosInCell = 0;
			}
			if (row == visibleRange.firstRow() && col == visibleRange.firstColumn()) {
				return true;
			}
		}
		this._bringIntoView2(pane, new $.ig.spreadsheet.SpreadsheetCell(row, col), colPos, horzPosInCell, rowPos, vertPosInCell);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnsureIsInView(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Nullable, System.Nullable, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ExtendRangeForMergedCells(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	extendRangeForMergedCells: function (range) {
		return $.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(this.___worksheet, range, null);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ExtendRangeForMergedCells(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Freeze(System.Int32, System.Int32)" />*/
	_freeze: function (rows, columns) {
		if (this._prepareForSplitChange() == false) {
			return;
		}
		var options = this.___worksheet.displayOptions();
		var fSettings = options.frozenPaneSettings();
		fSettings.frozenColumns(columns);
		fSettings.frozenRows(rows);
		fSettings.firstColumnInRightPane(this._columns().item(0).startIndex() + columns);
		fSettings.firstRowInBottomPane(this._rows().item(0).startIndex() + rows);
		options.panesAreFrozen(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Freeze(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentCellsWithData(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getAdjacentCellsWithData: function (range) {
		var firstRow = range.firstRow();
		var firstCol = range.firstColumn();
		var lastRow = range.lastRow();
		var lastCol = range.lastColumn();
		var rows = this.___worksheet.rows();
		do {
			var rowIndexBefore = this._getPreviousVisibleRow(firstRow);
			var colIndexBefore = this._getPreviousVisibleColumn(firstCol);
			var rowIndexAfter = this._getNextVisibleRow(lastRow);
			var colIndexAfter = this._getNextVisibleColumn(lastCol);
			if ($.ig.util.nullableNotEquals(rowIndexBefore, null)) {
				var $ret = this._checkCellsWithDataForRow(rowIndexBefore.value(), firstRow, firstCol, lastCol, rows, colIndexBefore, colIndexAfter);
				firstRow = $ret.p1;
				firstCol = $ret.p2;
				lastCol = $ret.p3;
			}
			if ($.ig.util.nullableNotEquals(rowIndexAfter, null)) {
				var $ret1 = this._checkCellsWithDataForRow(rowIndexAfter.value(), lastRow, firstCol, lastCol, rows, colIndexBefore, colIndexAfter);
				lastRow = $ret1.p1;
				firstCol = $ret1.p2;
				lastCol = $ret1.p3;
			}
			if (colIndexBefore.hasValue() && $.ig.util.nullableNotEquals(colIndexBefore, firstCol)) {
				var $ret2 = this._checkCellsWithDataForCol(colIndexBefore.value(), firstCol, firstRow, lastRow);
				firstCol = $ret2.p1;
			}
			if (colIndexAfter.hasValue() && $.ig.util.nullableNotEquals(colIndexAfter, lastCol)) {
				var $ret3 = this._checkCellsWithDataForCol(colIndexAfter.value(), lastCol, firstRow, lastRow);
				lastCol = $ret3.p1;
			}
			var $ret4 = this._checkCellsWithDataForMergedCells(firstRow, firstCol, lastRow, lastCol, rowIndexBefore, colIndexBefore, rowIndexAfter, colIndexAfter);
			firstRow = $ret4.p0;
			firstCol = $ret4.p1;
			lastRow = $ret4.p2;
			lastCol = $ret4.p3;
			if ($.ig.util.nullableNotEquals(firstRow, rowIndexBefore) && $.ig.util.nullableNotEquals(lastRow, rowIndexAfter) && $.ig.util.nullableNotEquals(firstCol, colIndexBefore) && $.ig.util.nullableNotEquals(lastCol, colIndexAfter)) {
				break;
			}
		} while (true);
		return new $.ig.spreadsheet.SpreadsheetCellRange(firstRow, firstCol, lastRow, lastCol);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentCellsWithData(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAllCells(Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.IEnumerable, System.Action)" />*/
	_getAllCells: function (ws, ranges, rangeInitializer) {
		var d__ = new $.ig.SpreadsheetPaneManager___GetAllCells__IteratorClass(-2);
		d__.___3__ws = ws;
		d__.___3__ranges = ranges;
		d__.___3__rangeInitializer = rangeInitializer;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAllCells(Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.IEnumerable, System.Action)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAvailableRange()" />*/
	_getAvailableRange: function () {
		return this.___maxRangeAddress;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAvailableRange()" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellAboveInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	_getCellAboveInRange: function (range, startingCell) {
		var row, column;
		$.ig.Debug.prototype.assert($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) || range._contains(startingCell.value()));
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && range._contains(startingCell.value())) {
			column = startingCell.value().column();
			row = this._getCellRange1(startingCell.value().row(), column).firstRow() - 1;
		} else {
			row = range.lastRow();
			column = range.lastColumn();
		}
		do {
			if (column < range.firstColumn()) {
				break;
			}
			if (row < range.firstRow()) {
				if (column <= range.firstColumn()) {
					break;
				}
				column--;
				row = range.lastRow();
			} else if (this.___worksheet._isRowHidden1(row)) {
				row--;
			} else {
				var block = this.___worksheet._getColumnBlock(column);
				if (block.hidden()) {
					column = block.firstColumnIndex() - 1;
				} else {
					var mergedCell = this._getCellRange1(row, column);
					var cellStart = mergedCell._upperLeft();
					if (!mergedCell.isSingleCell()) {
						var firstVis = this._getFirstVisibleCell(mergedCell);
						if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstVis, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
							cellStart = firstVis.value();
						}
					}
					if (cellStart.column() == column && cellStart.row() == row) {
						return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cellStart);
					} else if (cellStart.column() == column) {
						row = cellStart.row();
					} else {
						row = mergedCell.firstRow() - 1;
					}
				}
			}
		} while (true);
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellAboveInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellBackground(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_getCellBackground: function (cell) {
		var fillFormat = this._getCellFormatElementReadOnly(this.___worksheet.rows()._getIfCreated(cell.row()), cell.row(), cell.column());
		var fill = fillFormat._fillResolved();
		return $.ig.SpreadsheetUtilities.prototype.isEmptyFill(fill) ? null : fill;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.CellFill Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellBackground(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellBelowInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	_getCellBelowInRange: function (range, startingCell) {
		var row, column;
		$.ig.Debug.prototype.assert($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) || range._contains(startingCell.value()));
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && range._contains(startingCell.value())) {
			column = startingCell.value().column();
			row = this._getCellRange1(startingCell.value().row(), column).lastRow() + 1;
		} else {
			row = range.firstRow();
			column = range.firstColumn();
		}
		do {
			if (column > range.lastColumn()) {
				break;
			}
			if (row > range.lastRow()) {
				if (column >= range.lastColumn()) {
					break;
				}
				column++;
				row = range.firstRow();
			} else if (this.___worksheet._isRowHidden1(row)) {
				row++;
			} else {
				var block = this.___worksheet._getColumnBlock(column);
				if (block.hidden()) {
					column = block.lastColumnIndex() + 1;
				} else {
					var mergedCell = this._getCellRange1(row, column);
					var cellStart = mergedCell._upperLeft();
					if (!mergedCell.isSingleCell()) {
						var firstVis = this._getFirstVisibleCell(mergedCell);
						if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstVis, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
							cellStart = firstVis.value();
						}
					}
					if (cellStart.row() >= row && cellStart.column() >= column) {
						return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cellStart);
					} else {
						row = mergedCell.lastRow() + 1;
					}
				}
			}
		} while (true);
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellBelowInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellInDirection(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.Direction, System.Nullable, System.Boolean, System.Boolean)" />*/
	_getCellInDirection: function (row, column, direction, maxRange, skipStartingMergeCellCheck, unlockedOnly) {
		var maxRangeResolved = this.___maxRangeAddress;
		if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality_Lifted(maxRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
			maxRangeResolved = maxRangeResolved.intersect(maxRange.value());
		}
		var mergedCell = skipStartingMergeCellCheck ? new $.ig.spreadsheet.SpreadsheetCellRange(row, column) : this._getCellRange1(row, column);
		switch (direction) {
			case $.ig.Direction.prototype.left:
				{
					do {
						column--;
						if (column < maxRangeResolved.firstColumn()) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						var block = this.___worksheet._getColumnBlock(column);
						if (block.hidden()) {
							column = block.firstColumnIndex();
						} else if (!mergedCell._contains2(row, column)) {
							if (unlockedOnly == false || this._isUnlocked3(row, column)) {
								break;
							}
						}
					} while (true);
					break;
				}
			case $.ig.Direction.prototype.right:
				{
					do {
						column++;
						if (column > maxRangeResolved.lastColumn()) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						var block1 = this.___worksheet._getColumnBlock(column);
						if (block1.hidden()) {
							column = block1.lastColumnIndex();
						} else if (!mergedCell._contains2(row, column)) {
							if (unlockedOnly == false || this._isUnlocked3(row, column)) {
								break;
							}
						}
					} while (true);
					break;
				}
			case $.ig.Direction.prototype.up:
				{
					do {
						row--;
						if (row < maxRangeResolved.firstRow()) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						if (!this.___worksheet._isRowHidden1(row) && !mergedCell._contains2(row, column)) {
							if (unlockedOnly == false || this._isUnlocked3(row, column)) {
								break;
							}
						}
					} while (true);
					break;
				}
			case $.ig.Direction.prototype.down:
				{
					do {
						row++;
						if (row > maxRangeResolved.lastRow()) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						if (!this.___worksheet._isRowHidden1(row) && !mergedCell._contains2(row, column)) {
							if (unlockedOnly == false || this._isUnlocked3(row, column)) {
								break;
							}
						}
					} while (true);
					break;
				}
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, new $.ig.spreadsheet.SpreadsheetCell(row, column));
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellInDirection(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.Direction, System.Nullable, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	getCellRange: function (cell) {
		return this._getCellRange1(cell.row(), cell.column());
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellRange(System.Int32, System.Int32)" />*/
	_getCellRange1: function (row, column) {
		return $.ig.SpreadsheetPaneManager.prototype._getCellRange2(row, column, this.___worksheet);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellRange(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellRange(System.Int32, System.Int32, Infragistics.Documents.Excel.Worksheet)" />*/
	_getCellRange2: function (row, column, worksheet) {
		var mergedCell = worksheet._getCellAssociatedMergedCellsRegion(row, column);
		if (mergedCell == null) {
			return new $.ig.spreadsheet.SpreadsheetCellRange(row, column);
		} else {
			var a = mergedCell._address();
			return new $.ig.spreadsheet.SpreadsheetCellRange(a._firstRowIndex(), a._firstColumnIndex(), a._lastRowIndex(), a._lastColumnIndex());
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellRange(System.Int32, System.Int32, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellValue(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_getCellValue: function (cell) {
		var row = this.___worksheet.rows()._getIfCreated(cell.row());
		var value = null;
		if (row != null) {
			value = row.getCellFormula(cell.column());
			if (value == null) {
				value = row._getCellValue1(cell.column());
			}
		}
		return value;
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellValue(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellWithDataInDirection(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.Direction, System.Nullable, System.Boolean, System.Boolean)" />*/
	_getCellWithDataInDirection: function (row, column, direction, maxRange, unlockedOnly, fallbackToLastVisible) {
		var maxRangeResolved = this.___maxRangeAddress;
		if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality_Lifted(maxRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
			maxRangeResolved = maxRangeResolved.intersect(maxRange.value());
		}
		switch (direction) {
			case $.ig.Direction.prototype.left:
			case $.ig.Direction.prototype.right:
				var left = direction == $.ig.Direction.prototype.left;
				var rowObj = this.___worksheet.rows()._getIfCreated(row);
				var visibleColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
				if (rowObj != null) {
					do {
						var colWithValue = rowObj._getNextOrPreviousCellWithValue(column, !left);
						if ($.ig.util.nullableEquals(colWithValue, null)) {
							break;
						}
						if (left && $.ig.util.nullableLessThan(colWithValue, maxRangeResolved.firstColumn())) {
							break;
						}
						if (!left && $.ig.util.nullableGreaterThan(colWithValue, maxRangeResolved.lastColumn())) {
							break;
						}
						if (this.___worksheet._getColumnBlock(colWithValue.value()).hidden() || (unlockedOnly && this._isUnlocked2(rowObj, colWithValue.value()) == false)) {
							column = colWithValue.value();
						} else {
							visibleColWithValue = colWithValue;
						}
					} while ($.ig.util.nullableEquals(visibleColWithValue, null));
				}
				if ($.ig.util.nullableEquals(visibleColWithValue, null) || Math.abs(visibleColWithValue.value() - column) > 1) {
					var rangeForTable = $.ig.util.nullableEquals(visibleColWithValue, null) ? maxRangeResolved : new $.ig.spreadsheet.SpreadsheetCellRange(maxRangeResolved.firstRow(), left ? Math.max(visibleColWithValue.value() - 1, maxRangeResolved.firstColumn()) : maxRangeResolved.firstColumn(), maxRangeResolved.lastRow(), !left ? Math.min(visibleColWithValue.value() - 1, maxRangeResolved.lastColumn()) : maxRangeResolved.lastColumn());
					var nearestTableRange = this._getNextTableRangeInDirection(row, column, direction, rangeForTable);
					if ($.ig.util.nullableNotEquals(nearestTableRange, null)) {
						$.ig.Debug.prototype.assert1(unlockedOnly == false, "This section needs to be updated to deal with unlocked only.");
						if (nearestTableRange.value()._containsInclusive(column)) {
							visibleColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, left ? column - 1 : column + 1);
						} else if ($.ig.util.nullableNotEquals(visibleColWithValue, null)) {
							visibleColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, left ? Math.max(nearestTableRange.value().__end, visibleColWithValue.value()) : Math.min(nearestTableRange.value().__start, visibleColWithValue.value()));
						} else {
							visibleColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, left ? nearestTableRange.value().__end : nearestTableRange.value().__start);
						}
					}
				}
				if ($.ig.util.nullableEquals(visibleColWithValue, null)) {
					if (!fallbackToLastVisible) {
						return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
					}
					if (left) {
						var newCol = maxRangeResolved.firstColumn();
						do {
							var block = this.___worksheet._getColumnBlock(newCol);
							if (block.hidden()) {
								newCol = block.lastColumnIndex() + 1;
							} else if (unlockedOnly && this._isUnlocked3(row, newCol) == false) {
								newCol++;
							} else {
								break;
							}
							if (newCol > maxRangeResolved.lastColumn()) {
								return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
							}
						} while (true);
						visibleColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, newCol);
					} else {
						var newCol1 = maxRangeResolved.lastColumn();
						do {
							var block1 = this.___worksheet._getColumnBlock(newCol1);
							if (block1.hidden()) {
								newCol1 = block1.firstColumnIndex() - 1;
							} else if (unlockedOnly && this._isUnlocked3(row, newCol1) == false) {
								newCol1--;
							} else {
								break;
							}
							if (newCol1 < maxRangeResolved.firstColumn()) {
								return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
							}
						} while (true);
						visibleColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, newCol1);
					}
				}
				column = visibleColWithValue.value();
				break;
			case $.ig.Direction.prototype.up:
			case $.ig.Direction.prototype.down:
				var up = direction == $.ig.Direction.prototype.up;
				var visibleRowWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
				do {
					var rowWithValue = this.___worksheet.rows()._getNextOrPreviousCellWithValue(row, column, !up);
					if ($.ig.util.nullableEquals(rowWithValue, null)) {
						break;
					}
					if (up && $.ig.util.nullableLessThan(rowWithValue, maxRangeResolved.firstRow())) {
						break;
					}
					if (!up && $.ig.util.nullableGreaterThan(rowWithValue, maxRangeResolved.lastRow())) {
						break;
					}
					if (this.___worksheet._isRowHidden1(rowWithValue.value()) || (unlockedOnly && this._isUnlocked3(rowWithValue.value(), column) == false)) {
						row = rowWithValue.value();
					} else {
						visibleRowWithValue = rowWithValue;
					}
				} while ($.ig.util.nullableEquals(visibleRowWithValue, null));
				if ($.ig.util.nullableEquals(visibleRowWithValue, null) || Math.abs(visibleRowWithValue.value() - row) > 1) {
					var rangeForTable1 = $.ig.util.nullableEquals(visibleRowWithValue, null) ? maxRangeResolved : new $.ig.spreadsheet.SpreadsheetCellRange(up ? Math.max(visibleRowWithValue.value() - 1, maxRangeResolved.firstRow()) : maxRangeResolved.firstRow(), maxRangeResolved.firstColumn(), !up ? Math.min(visibleRowWithValue.value() - 1, maxRangeResolved.lastRow()) : maxRangeResolved.lastRow(), maxRangeResolved.lastColumn());
					var nearestTableRange1 = this._getNextTableRangeInDirection(row, column, direction, rangeForTable1);
					if ($.ig.util.nullableNotEquals(nearestTableRange1, null)) {
						$.ig.Debug.prototype.assert1(unlockedOnly == false, "This section needs to be updated to deal with unlocked only.");
						if (nearestTableRange1.value()._containsInclusive(row)) {
							visibleRowWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, up ? row - 1 : row + 1);
						} else if ($.ig.util.nullableNotEquals(visibleRowWithValue, null)) {
							visibleRowWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, up ? Math.max(nearestTableRange1.value().__end, visibleRowWithValue.value()) : Math.min(nearestTableRange1.value().__start, visibleRowWithValue.value()));
						} else {
							visibleRowWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, up ? nearestTableRange1.value().__end : nearestTableRange1.value().__start);
						}
					}
				}
				if ($.ig.util.nullableEquals(visibleRowWithValue, null)) {
					if (!fallbackToLastVisible) {
						return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
					}
					if (up) {
						var newRow = maxRangeResolved.firstRow();
						do {
							if (!this.___worksheet._isRowHidden1(newRow) && (unlockedOnly == false || this._isUnlocked3(newRow, column))) {
								break;
							}
							newRow++;
							if (newRow > maxRangeResolved.lastRow()) {
								return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
							}
						} while (true);
						visibleRowWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, newRow);
					} else {
						var newRow1 = maxRangeResolved.lastRow();
						do {
							if (!this.___worksheet._isRowHidden1(newRow1) && (unlockedOnly == false || this._isUnlocked3(newRow1, column))) {
								break;
							}
							newRow1--;
							if (newRow1 < maxRangeResolved.firstRow()) {
								return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
							}
						} while (true);
						visibleRowWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, newRow1);
					}
				}
				row = visibleRowWithValue.value();
				break;
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, new $.ig.spreadsheet.SpreadsheetCell(row, column));
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellWithDataInDirection(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.Direction, System.Nullable, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleCell(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getFirstVisibleCell: function (range) {
		return $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleCell1(range, this.___worksheet);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleCell(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleCell(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Documents.Excel.Worksheet)" />*/
	_getFirstVisibleCell1: function (range, worksheet) {
		var col = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleColumn(range.firstColumn(), range.lastColumn(), worksheet);
		if ($.ig.util.nullableEquals(col, null)) {
			return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
		}
		var row = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(range.firstRow(), range.lastRow(), worksheet);
		if ($.ig.util.nullableEquals(row, null)) {
			return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, new $.ig.spreadsheet.SpreadsheetCell(row.value(), col.value()));
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleCell(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleColumn(System.Int32, System.Int32, Infragistics.Documents.Excel.Worksheet)" />*/
	_getFirstVisibleColumn: function (firstColumn, lastColumn, worksheet) {
		var col = firstColumn;
		while (col <= lastColumn) {
			var block = worksheet._getColumnBlock(col);
			if (!block.hidden()) {
				return $.ig.util.toNullable($.ig.Number.prototype.$type, col);
			}
			col = block.lastColumnIndex() + 1;
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleColumn(System.Int32, System.Int32, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleRow(System.Int32, System.Int32, Infragistics.Documents.Excel.Worksheet)" />*/
	_getFirstVisibleRow: function (firstRow, lastRow, worksheet) {
		if (firstRow <= lastRow) {
			for (var r = firstRow; r <= lastRow; r++) {
				if (!worksheet._isRowHidden1(r)) {
					return $.ig.util.toNullable($.ig.Number.prototype.$type, r);
				}
			}
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstVisibleRow(System.Int32, System.Int32, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetInViewItemRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Range, System.Boolean)" />*/
	_getInViewItemRange: function (scrollRegion, itemRange, ignorePartiallyVisibleItems) {
		var visibleRange = scrollRegion._getItemRange(ignorePartiallyVisibleItems);
		return visibleRange._getInclusiveIntersection(itemRange);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetInViewItemRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Range, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetLastVisibleColumn(System.Int32, System.Int32)" />*/
	_getLastVisibleColumn: function (firstColumn, lastColumn) {
		var col = lastColumn;
		while (col >= firstColumn) {
			var block = this.___worksheet._getColumnBlock(col);
			if (!block.hidden()) {
				return $.ig.util.toNullable($.ig.Number.prototype.$type, col);
			}
			col = block.firstColumnIndex() - 1;
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetLastVisibleColumn(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetLastVisibleCell(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getLastVisibleCell: function (range) {
		var col = this._getLastVisibleColumn(range.firstColumn(), range.lastColumn());
		if ($.ig.util.nullableEquals(col, null)) {
			return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
		}
		var row = this._getLastVisibleRow(range.firstRow(), range.lastRow());
		if ($.ig.util.nullableEquals(row, null)) {
			return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, new $.ig.spreadsheet.SpreadsheetCell(row.value(), col.value()));
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetLastVisibleCell(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetLastVisibleRow(System.Int32, System.Int32)" />*/
	_getLastVisibleRow: function (firstRow, lastRow) {
		for (var r = lastRow; r >= firstRow; r--) {
			if (!this.___worksheet._isRowHidden1(r)) {
				return $.ig.util.toNullable($.ig.Number.prototype.$type, r);
			}
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetLastVisibleRow(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextCellInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	_getNextCellInRange: function (range, startingCell) {
		var row, column;
		$.ig.Debug.prototype.assert($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) || range._contains(startingCell.value()));
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && range._contains(startingCell.value())) {
			row = startingCell.value().row();
			column = this._getCellRange1(row, startingCell.value().column()).lastColumn() + 1;
		} else {
			row = range.firstRow();
			column = range.firstColumn();
		}
		do {
			if (row > range.lastRow()) {
				break;
			}
			if (column > range.lastColumn()) {
				if (row >= range.lastRow()) {
					break;
				}
				row++;
				column = range.firstColumn();
			} else if (this.___worksheet._isRowHidden1(row)) {
				row++;
			} else {
				var block = this.___worksheet._getColumnBlock(column);
				if (block.hidden()) {
					column = block.lastColumnIndex() + 1;
				} else {
					var mergedCell = this._getCellRange1(row, column);
					var cellStart = mergedCell._upperLeft();
					if (!mergedCell.isSingleCell()) {
						var firstVis = this._getFirstVisibleCell(mergedCell);
						if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstVis, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
							cellStart = firstVis.value();
						}
					}
					if (cellStart.row() == row && cellStart.column() >= column) {
						return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cellStart);
					} else {
						column = mergedCell.lastColumn() + 1;
					}
				}
			}
		} while (true);
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextCellInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextVisibleColumn(System.Int32)" />*/
	_getNextVisibleColumn: function (startingCol) {
		var max = this.___worksheet.columns().maxCount() - 1;
		return this._getNextVisibleColumn1(startingCol, max);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextVisibleColumn(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextVisibleColumn(System.Int32, System.Int32)" />*/
	_getNextVisibleColumn1: function (startingCol, lastCol) {
		$.ig.Debug.prototype.assert1(lastCol <= this.___worksheet.columns().maxCount() - 1, "This should be within the maximum range for the worksheet columns");
		var col = startingCol + 1;
		while (col <= lastCol) {
			var block = this.___worksheet._getColumnBlock(col);
			if (!block.hidden()) {
				return $.ig.util.toNullable($.ig.Number.prototype.$type, col);
			}
			col = block.lastColumnIndex() + 1;
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextVisibleColumn(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextVisibleRow(System.Int32)" />*/
	_getNextVisibleRow: function (startingRow) {
		var maxRow = this.___worksheet.rows().maxCount();
		if (this.___worksheet._defaultRowHidden() && startingRow + 1 < maxRow) {
			var en = this.___worksheet.rows()._getItemsInRange(startingRow + 1, maxRow).getEnumerator();
			while (en.moveNext()) {
				var row = en.current();
				if (!row.hidden()) {
					return $.ig.util.toNullable($.ig.Number.prototype.$type, row.index());
				}
			}
		} else {
			for (var i = startingRow + 1; i < maxRow; i++) {
				if (!this.___worksheet._isRowHidden1(i)) {
					return $.ig.util.toNullable($.ig.Number.prototype.$type, i);
				}
			}
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextVisibleRow(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneExtentForSplitterDrop(System.Boolean, System.Double, System.Double, System.Double)" />*/
	_getPaneExtentForSplitterDrop: function (isRow, relativeOffset, maxAvailableExtent, headerExtent) {
		if (relativeOffset <= 0 || relativeOffset >= maxAvailableExtent) {
			return 0;
		}
		var items = isRow ? this._rowItems() : this._columnItems();
		$.ig.Debug.prototype.assert(items.count() > 0);
		if (items.count() < 2) {
			return 0;
		}
		relativeOffset /= this._zoomLevel();
		var item = items.item(0);
		var pos = item._getItemFromRelativeOffset(relativeOffset);
		var near = item._getRelativeOffset(pos, true, true);
		var far = item._getRelativeOffset(pos, false, true);
		var newOffset = relativeOffset > near + (far - near) / 2 ? far : near;
		if (newOffset < 1 || newOffset >= maxAvailableExtent) {
			return 0;
		} else {
			return this._convertPixelsToTwips(newOffset * this._zoomLevel() + headerExtent);
		}
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneExtentForSplitterDrop(System.Boolean, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPane(System.Int32, System.Int32)" />*/
	_getPane2: function (row, column) {
		var idx = row * this._columns().count() + column;
		if (idx < 0 || idx >= this._panes().count()) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		return this._panes().item(idx);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPane(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneForCell(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_getPaneForCell: function (cell) {
		var pane = this.activePane();
		if (pane != null && this._hasFrozenPanes()) {
			var paneIndex = this._rows().count() * this._columns().count() - 1;
			if (this._rows().count() > 1 && this._rows().item(0).isFrozen() && this._rows().item(0).endIndex() >= cell.row()) {
				paneIndex -= this._columns().count();
			}
			if (this._columns().count() > 1 && this._columns().item(0).isFrozen() && this._columns().item(0).endIndex() >= cell.column()) {
				paneIndex -= 1;
			}
			pane = this._panes().item(paneIndex);
		}
		return pane;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneForCell(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousCellInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	_getPreviousCellInRange: function (range, startingCell) {
		var row, column;
		$.ig.Debug.prototype.assert($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) || range._contains(startingCell.value()));
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(startingCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && range._contains(startingCell.value())) {
			row = startingCell.value().row();
			column = this._getCellRange1(row, startingCell.value().column()).firstColumn() - 1;
		} else {
			row = range.lastRow();
			column = range.lastColumn();
		}
		do {
			if (row < range.firstRow()) {
				break;
			}
			if (column < range.firstColumn()) {
				if (row <= range.firstRow()) {
					break;
				}
				row--;
				column = range.lastColumn();
			} else if (this.___worksheet._isRowHidden1(row)) {
				row--;
			} else {
				var block = this.___worksheet._getColumnBlock(column);
				if (block.hidden()) {
					column = block.firstColumnIndex() - 1;
				} else {
					var mergedCell = this._getCellRange1(row, column);
					var cellStart = mergedCell._upperLeft();
					if (!mergedCell.isSingleCell()) {
						var firstVis = this._getFirstVisibleCell(mergedCell);
						if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstVis, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
							cellStart = firstVis.value();
						}
					}
					if (cellStart.column() == column && cellStart.row() == row) {
						return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cellStart);
					} else if (cellStart.row() == row) {
						column = cellStart.column();
					} else {
						column = mergedCell.firstColumn() - 1;
					}
				}
			}
		} while (true);
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousCellInRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousVisibleColumn(System.Int32)" />*/
	_getPreviousVisibleColumn: function (startingCol) {
		var col = startingCol - 1;
		while (col >= 0) {
			var block = this.___worksheet._getColumnBlock(col);
			if (!block.hidden()) {
				return $.ig.util.toNullable($.ig.Number.prototype.$type, col);
			}
			col = block.firstColumnIndex() - 1;
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousVisibleColumn(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousVisibleRow(System.Int32)" />*/
	_getPreviousVisibleRow: function (startingRow) {
		if (this.___worksheet._defaultRowHidden() && startingRow > 0) {
			var en = this.___worksheet.rows()._getItemsInRange1(0, startingRow - 1, false).getEnumerator();
			while (en.moveNext()) {
				var row = en.current();
				if (!row.hidden()) {
					return $.ig.util.toNullable($.ig.Number.prototype.$type, row.index());
				}
			}
		} else {
			for (var i = startingRow - 1; i >= 0; i--) {
				if (!this.___worksheet._isRowHidden1(i)) {
					return $.ig.util.toNullable($.ig.Number.prototype.$type, i);
				}
			}
		}
		return $.ig.util.toNullable($.ig.Number.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousVisibleRow(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetSelectedTabProtectionState(Infragistics.Documents.Excel.WorksheetProtectionType)" />*/
	_getSelectedTabProtectionState: function (protectionProperty) {
		this._assertIsTabSelected();
		var thisState = this.___worksheet.isProtected() == false || (this.___worksheet.protection()._allowedFeatures() & protectionProperty) == protectionProperty;
		if (this.___tabManager._selectedTabs().count() > 1) {
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				var ws = tab._worksheet();
				var temp = ws.isProtected() == false || (ws.protection()._allowedFeatures() & protectionProperty) == protectionProperty;
				if (temp != thisState) {
					return $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
				}
			}
		}
		return $.ig.util.toNullable($.ig.Boolean.prototype.$type, thisState);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetSelectedTabProtectionState(Infragistics.Documents.Excel.WorksheetProtectionType)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetUsedRange(System.Boolean, System.Int32, System.Int32)" />*/
	_getUsedRange: function (includeShapes, minRows, minColumns) {
		var used = this.___worksheet._getUsedRange(this.___maxRangeAddress.firstRow(), this.___maxRangeAddress.lastRow(), this.___maxRangeAddress.firstColumn(), this.___maxRangeAddress.lastColumn(), includeShapes);
		if (minRows < 1) {
			minRows = 1;
		}
		if (minColumns < 1) {
			minColumns = 1;
		}
		return new $.ig.spreadsheet.SpreadsheetCellRange(used._firstRowIndex(), used._firstColumnIndex(), Math.max(used._lastRowIndex(), used._firstRowIndex() + minRows - 1), Math.max(used._lastColumnIndex(), used._firstColumnIndex() + minColumns - 1));
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetUsedRange(System.Boolean, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IntersectsTable(Infragistics.Documents.Excel.Worksheet, )" />*/
	_intersectsTable: function (worksheet, regions) {
		var en = worksheet.tables().getEnumerator();
		while (en.moveNext()) {
			var table = en.current();
			for (var i = 0; i < regions.length; i++) {
				var region = regions[i];
				if (table._wholeTableAddress()._intersectsWith(region)) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IntersectsTable(Infragistics.Documents.Excel.Worksheet, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HideRowsOrColumns(System.Boolean, System.Boolean)" />*/
	_hideRowsOrColumns: function (hide, rows) {
		if (rows) {
			this._hideRows(hide);
		} else {
			this._hideColumns(hide);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HideRowsOrColumns(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializePaneSelectionFromWorksheet()" />*/
	_initializePaneSelectionFromWorksheet: function () {
		var displayOptions = this.___worksheet.displayOptions();
		displayOptions._verifySelectionInfo();
		var en = this._panes().getEnumerator();
		while (en.moveNext()) {
			var pane = en.current();
			var location = this._getPaneLocation(pane);
			var excelSelection = displayOptions._selection().getSelection(location.value());
			if (excelSelection == null) {
				excelSelection = new $.ig.WorksheetPaneSelection();
				excelSelection.location(location.value());
				excelSelection.activeCellRangesId(0);
				var cellRow = pane.rowScrollRegion().startIndex();
				var cellCol = pane.columnScrollRegion().startIndex();
				excelSelection.activeCell(new $.ig.WorksheetCellAddress(1, cellRow, cellCol));
				var region = new $.ig.WorksheetRegionAddress(1, cellRow, cellRow, cellCol, cellCol);
				var $ret = this.___worksheet._extendRegionForMergedCells(region, null);
				region = $ret.p0;
				excelSelection.ranges().add(region);
				displayOptions._selection().paneSelections().add(excelSelection);
			}
			var selection = pane.selection();
			if (selection._resetSelection($.ig.SpreadsheetUtilities.prototype.toSheetCellRange(excelSelection.ranges()), $.ig.SpreadsheetUtilities.prototype.toSheetCell(excelSelection.activeCell()), excelSelection.activeCellRangesId(), false)) {
				selection._verifyActiveCellResolved();
			}
			pane._suppressSelectionChanged(false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializePaneSelectionFromWorksheet()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InsertCells(System.Nullable)" />*/
	_insertCells: function (shiftRight) {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		var selection = pane.selection();
		if (selection._hasMixedCellSelection()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.insertColumns), false));
		} else if (selection._hasOverlappingRanges()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.insertColumns), false));
		} else if ($.ig.util.nullableEquals(shiftRight, true) && selection._selectedRows().count() > 0) {
			$.ig.Debug.prototype.fail("Shouldn't be trying to shift right when we have rows selected.");
			return;
		} else if ($.ig.util.nullableEquals(shiftRight, false) && selection._selectedColumns().count() > 0) {
			$.ig.Debug.prototype.fail("Shouldn't be trying to shift down when we have columns selected.");
			return;
		} else {
			if ($.ig.util.nullableEquals(shiftRight, null)) {
				if (selection._selectedRows().count() > 0) {
					this._insertRows();
					return;
				} else if (selection._selectedColumns().count() > 0) {
					this._insertColumns();
					return;
				} else {
					var firstRange = selection.cellRanges().item(0);
					if (firstRange._height() > firstRange._width()) {
						shiftRight = $.ig.util.toNullable($.ig.Boolean.prototype.$type, true);
					} else if (firstRange._width() > firstRange._height()) {
						shiftRight = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
					} else {
						for (var c = firstRange.firstColumn(); c <= firstRange.lastColumn(); c++) {
							if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted($.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null), this._getCellWithDataInDirection(firstRange.lastRow(), c, $.ig.Direction.prototype.down, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null), false, true))) {
								shiftRight = $.ig.util.toNullable($.ig.Boolean.prototype.$type, false);
								break;
							}
						}
						if ($.ig.util.nullableEquals(shiftRight, null)) {
							shiftRight = $.ig.util.toNullable($.ig.Boolean.prototype.$type, true);
						}
					}
				}
			}
			this._assertIsTabSelected();
			if ($.ig.util.nullableNotEquals(this._areSelectedTabsProtected(), false)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			}
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				for (var i = 0; i < ranges.length; i++) {
					var range = ranges[i];
					tab._worksheet()._insertCells1($.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range), $.ig.util.nullableEquals(shiftRight, true));
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InsertCells(System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InsertColumns()" />*/
	_insertColumns: function () {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		this._assertIsTabSelected();
		var selection = pane.selection();
		if (selection._hasMixedCellSelection()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.insertColumns), false));
		} else if (selection._hasOverlappingRanges()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.insertColumns), false));
		} else {
			if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.insertColumns), true)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			}
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.Enumerable.prototype.reverse$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), selection._allColumns()));
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				for (var i = 0; i < ranges.length; i++) {
					var range = ranges[i];
					tab._worksheet().columns().insert(range.__start, (range.__end - range.__start) + 1);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InsertColumns()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InsertRows()" />*/
	_insertRows: function () {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		this._assertIsTabSelected();
		var selection = pane.selection();
		if (selection._hasMixedCellSelection()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.insertRows), false));
		} else if (selection._hasOverlappingRanges()) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections, null, null, $.ig.spreadsheet.SpreadsheetAction.prototype.getBox($.ig.spreadsheet.SpreadsheetAction.insertRows), false));
		} else {
			if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.insertRows), true)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			}
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.Enumerable.prototype.reverse$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), selection._allRows()));
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				for (var i = 0; i < ranges.length; i++) {
					var range = ranges[i];
					tab._worksheet().rows().insert(range.__start, (range.__end - range.__start) + 1);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InsertRows()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Invalidate()" />*/
	_invalidate: function () {
		this._isLayoutDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Invalidate()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsPanesSource(System.Object)" />*/
	_isPanesSource: function (sender) {
		return sender == this.___panes || sender == this.___panesSource;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsPanesSource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsRowOrColumnsSource(System.Object)" />*/
	_isRowOrColumnsSource: function (sender) {
		return sender == this.___rowsSource || sender == this.___columnsSource || sender == this.___rows || sender == this.___columns;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsRowOrColumnsSource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Measure(System.Windows.Size)" />*/
	_measure: function (availableSize) {
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("ExcelSheetPaneManager_MeasureStart");
		this._verifyRangeSizes();
		if (availableSize.isEmpty()) {
			availableSize = new $.ig.Size(0);
		}
		if (Number.isInfinity(availableSize.height())) {
			availableSize.height(this._getPixelsFromRowItemPosUnits($.ig.truncate(this.___usedRangeSize.height())));
		}
		if (Number.isInfinity(availableSize.width())) {
			availableSize.width(this._getPixelsFromColumnItemPosUnits($.ig.truncate(this.___usedRangeSize.width())));
		}
		var didLayout = false;
		if ($.ig.Size.prototype.l_op_Inequality(availableSize, this.___availableSize) || this._isLayoutDirty()) {
			didLayout = true;
			{
				var t1 = $.ig.excel.Workbook.prototype._cacheMetricsProvider(this.___worksheet.workbook());
				try {
					if (availableSize.width() != this.___availableSize.width()) {
						this._invalidateScrollCache(this._columns());
					}
					if (availableSize.height() != this.___availableSize.height()) {
						this._invalidateScrollCache(this._rows());
					}
					this._verifyBeforeMeasure();
					this._verifyHasCellValueChanged();
					this._isLayoutDirty(false);
					this.___availableSize = availableSize;
					this._measureItems(this._columns(), availableSize.width(), this._splitterWidth(), this.___worksheet.workbook().maxColumnCount() - 1, false, this._getColumnPositions.runOn(this), this._getPixelsFromColumnItemPosUnits.runOn(this), this._getItemPosUnitFromColumnPixels.runOn(this), this._getPreviousVisibleColumn.runOn(this), this._getNextVisibleColumn.runOn(this));
					this._measureItems(this._rows(), availableSize.height(), this._splitterHeight(), this.___worksheet.workbook().maxRowCount() - 1, false, this.___worksheet._getRowPositions.runOn(this.___worksheet), this._getPixelsFromRowItemPosUnits.runOn(this), this._getItemPosUnitFromRowPixels.runOn(this), this._getPreviousVisibleRow.runOn(this), this._getNextVisibleRow.runOn(this));
					this._verifyScrollExtents();
					this._verifyPaneInfo();
					var en = this._columns().getEnumerator();
					while (en.moveNext()) {
						var col = en.current();
						col._adjacentRowColumn(this._rows().item(0));
					}
					var en1 = this._rows().getEnumerator();
					while (en1.moveNext()) {
						var row = en1.current();
						row._adjacentRowColumn(this._columns().item(0));
					}
					this._verifyActivePane(true);
					this._updateExcelScrollOffsets();
				}
				finally {
					if (t1 != null) {
						t1.dispose();
					}
				}
			}
		}
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("ExcelSheetPaneManager_MeasureEnd");
		$.ig.SpreadsheetUtilities.prototype.measurePerf($.ig.util.stringFormat("ExcelSheetPaneManager_Measure_r{0}c{1}", this.activePane() == null ? -1 : this.activePane().rowScrollRegion().startIndex(), this.activePane() == null ? -1 : this.activePane().columnScrollRegion().startIndex()), "ExcelSheetPaneManager_MeasureStart", "ExcelSheetPaneManager_MeasureEnd");
		if (didLayout) {
			if (this.__ownerState._afterPaneManagerLayout() != null) {
				this.__ownerState._afterPaneManagerLayout()();
			}
		}
		return availableSize;
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Measure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MergeCells(Infragistics.Controls.Grids.Core.SpreadsheetCellMergeOperation)" />*/
	_mergeCells: function (operation) {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		this._assertIsTabSelected();
		var selection = pane.selection();
		switch (operation) {
			case $.ig.SpreadsheetCellMergeOperation.prototype.merge:
			case $.ig.SpreadsheetCellMergeOperation.prototype.mergeAcross:
				if (selection._hasOverlappingRanges()) {
					return;
				}
				break;
		}
		if ($.ig.util.nullableNotEquals(this._areSelectedTabsProtected(), false)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		var operationInfos = new Array(this.___tabManager._selectedTabs().count());
		var originalSelectionRanges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
		var newRanges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
		var hasUpdatedSelection = false;
		var hasOverlappingRanges = false;
		for (var i = 0; i < operationInfos.length; i++) {
			operationInfos[i] = new $.ig.SpreadsheetPaneManager_MergedCellOperationInfo(this.___tabManager._selectedTabs().item(i)._worksheet(), originalSelectionRanges);
			if (operationInfos[i]._hasUpdatedSelection) {
				hasUpdatedSelection = true;
				for (var j = 0; j < newRanges.length; j++) {
					newRanges[j] = newRanges[j].union(operationInfos[i]._rangesToProcess[j]);
				}
				hasOverlappingRanges = hasOverlappingRanges | operationInfos[i]._hasOverlappingRanges;
			}
		}
		if (hasUpdatedSelection) {
			selection._resetSelection(newRanges, selection.activeCell(), selection.activeCellRangeIndex(), false);
			switch (operation) {
				case $.ig.SpreadsheetCellMergeOperation.prototype.merge:
				case $.ig.SpreadsheetCellMergeOperation.prototype.mergeAcross:
				case $.ig.SpreadsheetCellMergeOperation.prototype.mergeAndCenter:
					if (!this._canPerformMerge()) {
						return;
					}
					break;
			}
		}
		for (var i1 = 0; i1 < operationInfos.length; i1++) {
			var operationInfo = operationInfos[i1];
			switch (operation) {
				case $.ig.SpreadsheetCellMergeOperation.prototype.merge:
				case $.ig.SpreadsheetCellMergeOperation.prototype.mergeAcross:
					if (operationInfo._hasOverlappingRanges) {
						continue;
					}
					break;
			}
		}
		for (var i2 = 0; i2 < operationInfos.length; i2++) {
			var operationInfo1 = operationInfos[i2];
			var ws = operationInfo1._worksheet;
			var excelMergedCellRegions = ws.mergedCellsRegions();
			var en = operationInfo1._selectedMergedCellRegions.getEnumerator();
			while (en.moveNext()) {
				var region = en.current();
				excelMergedCellRegions.remove(region);
			}
			if (operation != $.ig.SpreadsheetCellMergeOperation.prototype.unmerge) {
				var ranges = $.ig.Enumerable.prototype.reverse$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, operationInfo1._rangesToProcess);
				switch (operation) {
					case $.ig.SpreadsheetCellMergeOperation.prototype.mergeAndCenter:
						if (operationInfo1._selectedMergedCellRegions.count() > 0) {
							return;
						}
						var en1 = ranges.getEnumerator();
						while (en1.moveNext()) {
							var range = en1.current();
							if (range.isSingleCell()) {
								ws.rows().item(range.firstRow()).getCellFormat(range.firstColumn()).alignment($.ig.excel.HorizontalCellAlignment.center);
							} else {
								var region1 = excelMergedCellRegions._add(range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn());
								region1.cellFormat().alignment($.ig.excel.HorizontalCellAlignment.center);
							}
						}
						break;
					case $.ig.SpreadsheetCellMergeOperation.prototype.merge:
						var en2 = ranges.getEnumerator();
						while (en2.moveNext()) {
							var range1 = en2.current();
							if (!range1.isSingleCell()) {
								excelMergedCellRegions._add(range1.firstRow(), range1.firstColumn(), range1.lastRow(), range1.lastColumn());
							}
						}
						break;
					case $.ig.SpreadsheetCellMergeOperation.prototype.mergeAcross:
						var en3 = ranges.getEnumerator();
						while (en3.moveNext()) {
							var range2 = en3.current();
							if (range2.firstColumn() == range2.lastColumn()) {
								continue;
							}
							for (var r = range2.firstRow(); r <= range2.lastRow(); r++) {
								excelMergedCellRegions._add(r, range2.firstColumn(), r, range2.lastColumn());
							}
						}
						break;
				}
			}
		}
		if (hasUpdatedSelection) {
			var activeCell = selection.activeCell();
			for (var i3 = 0; i3 < operationInfos.length; i3++) {
				var operationInfo2 = operationInfos[i3];
				activeCell = $.ig.SpreadsheetPaneManager.prototype._getCellRange2(activeCell.row(), activeCell.column(), operationInfo2._worksheet)._upperLeft();
			}
			$.ig.Debug.prototype.assert(selection.cellRanges().item(selection.activeCellRangeIndex())._contains(activeCell));
			selection._setActiveCell(activeCell, $.ig.util.toNullable($.ig.Number.prototype.$type, null));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MergeCells(Infragistics.Controls.Grids.Core.SpreadsheetCellMergeOperation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToAdjacentCell(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Boolean)" />*/
	_moveToAdjacentCell: function (direction, navigationType, isSelection) {
		var pane = this.activePane();
		var selection = pane != null ? pane.selection() : null;
		if (selection != null) {
			var activeCell = selection.activeCell();
			var startingCell = activeCell;
			var activeCellRange = this._getCellRange1(activeCell.row(), activeCell.column());
			var selectedRange = selection._getActiveCellRange();
			var unlockedOnly = isSelection == false && this.___worksheet.isProtected() && this.___worksheet.protection().selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.unlockedCells && navigationType != $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData;
			if (isSelection) {
				if (direction == $.ig.Direction.prototype.left || direction == $.ig.Direction.prototype.right) {
					activeCellRange = new $.ig.spreadsheet.SpreadsheetCellRange(selectedRange.firstRow(), activeCellRange.firstColumn(), selectedRange.lastRow(), activeCellRange.lastColumn());
				} else {
					activeCellRange = new $.ig.spreadsheet.SpreadsheetCellRange(activeCellRange.firstRow(), selectedRange.firstColumn(), activeCellRange.lastRow(), selectedRange.lastColumn());
				}
				activeCellRange = this.extendRangeForMergedCells(activeCellRange);
				var isNavigatingCellsWithData = navigationType == $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData || navigationType == $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData;
				var startingCellRow = isNavigatingCellsWithData ? activeCell.row() : selectedRange.firstRow() < activeCell.row() ? selectedRange.firstRow() : selectedRange.lastRow();
				var startingCellColumn = isNavigatingCellsWithData ? activeCell.column() : selectedRange.firstColumn() < activeCell.column() ? selectedRange.firstColumn() : selectedRange.lastColumn();
				switch (direction) {
					case $.ig.Direction.prototype.right:
						if (activeCellRange.firstColumn() <= selectedRange.firstColumn()) {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(startingCellRow, selectedRange.lastColumn());
						} else {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(startingCellRow, selectedRange.firstColumn());
						}
						break;
					case $.ig.Direction.prototype.left:
						if (activeCellRange.lastColumn() >= selectedRange.lastColumn()) {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(startingCellRow, selectedRange.firstColumn());
						} else {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(startingCellRow, selectedRange.lastColumn());
						}
						break;
					case $.ig.Direction.prototype.down:
						if (activeCellRange.firstRow() <= selectedRange.firstRow()) {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(selectedRange.lastRow(), startingCellColumn);
						} else {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(selectedRange.firstRow(), startingCellColumn);
						}
						break;
					case $.ig.Direction.prototype.up:
						if (activeCellRange.lastRow() >= selectedRange.lastRow()) {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(selectedRange.firstRow(), startingCellColumn);
						} else {
							startingCell = new $.ig.spreadsheet.SpreadsheetCell(selectedRange.lastRow(), startingCellColumn);
						}
						break;
					default:
						$.ig.Debug.prototype.fail("Unexpected direction:" + $.ig.Direction.prototype.getBox(direction));
						return;
				}
			}
			var newCell = this._getAdjacentCell(startingCell, direction, navigationType, unlockedOnly, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null), false);
			var endCell = !$.ig.util.nullableIsNull(newCell) ? newCell.value() : startingCell;
			if (isSelection == false) {
				this._setActiveCellAndSelection(endCell, true);
			} else {
				this._replaceActiveSelectionRangeInDirection(direction, activeCell, selectedRange, endCell);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToAdjacentCell(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToAdjacentPage(Infragistics.Controls.Grids.Core.Direction, System.Boolean)" />*/
	_moveToAdjacentPage: function (direction, isSelection) {
		if (!this.___availableSize.isEmpty()) {
			this._measure(this.___availableSize);
		}
		var activePane = this.activePane();
		if (activePane != null) {
			var selection = activePane.selection();
			var activeCell = selection.activeCell();
			var lastMeasureSize = this._previousAvailableSize();
			if (!lastMeasureSize.isEmpty()) {
				var selectedRange = selection._getActiveCellRange();
				var region;
				var originalIndex;
				switch (direction) {
					default:
						region = activePane.rowScrollRegion();
						originalIndex = activeCell.row();
						break;
					case $.ig.Direction.prototype.left:
					case $.ig.Direction.prototype.right:
						region = activePane.columnScrollRegion();
						originalIndex = activeCell.column();
						break;
				}
				if (isSelection) {
					var activeCellRange = this._getCellRange1(activeCell.row(), activeCell.column());
					switch (direction) {
						case $.ig.Direction.prototype.up:
							originalIndex = selectedRange.lastRow();
							break;
						case $.ig.Direction.prototype.left:
							originalIndex = selectedRange.lastColumn();
							break;
						case $.ig.Direction.prototype.down:
							originalIndex = Math.max(selectedRange.lastRow(), activeCellRange.lastRow());
							break;
						case $.ig.Direction.prototype.right:
							originalIndex = Math.max(selectedRange.lastColumn(), activeCellRange.lastColumn());
							break;
					}
				}
				var originalOffset = originalIndex - region.startIndex();
				this._scrollPage(direction);
				this._measure(lastMeasureSize);
				var newOffset = region.startIndex() + originalOffset;
				if (newOffset < region.startIndex()) {
					newOffset = region.startIndex();
				} else if (newOffset > region.endIndex()) {
					newOffset = region.endIndex();
				}
				var newActiveCell = new $.ig.spreadsheet.SpreadsheetCell();
				switch (direction) {
					default:
					case $.ig.Direction.prototype.up:
					case $.ig.Direction.prototype.down:
						newActiveCell = new $.ig.spreadsheet.SpreadsheetCell(newOffset, activeCell.column());
						break;
					case $.ig.Direction.prototype.left:
					case $.ig.Direction.prototype.right:
						newActiveCell = new $.ig.spreadsheet.SpreadsheetCell(activeCell.row(), newOffset);
						break;
				}
				if (!isSelection) {
					this._setActiveCellAndSelection(newActiveCell, true);
				} else {
					this._replaceActiveSelectionRangeInDirection(direction, activeCell, selectedRange, newActiveCell);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToAdjacentPage(Infragistics.Controls.Grids.Core.Direction, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToCellInView(System.Boolean, System.Boolean)" />*/
	_moveToCellInView: function (first, isSelection) {
		var pane = this.activePane();
		if (pane != null) {
			var cols = pane.columnScrollRegion()._getItemRange(true);
			var rows = pane.rowScrollRegion()._getItemRange(true);
			var visibleRange = new $.ig.spreadsheet.SpreadsheetCellRange(rows.__start, cols.__start, rows.__end, cols.__end);
			var cell = first ? this._getFirstVisibleCell(visibleRange) : this._getLastVisibleCell(visibleRange);
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
				if (!isSelection) {
					this._setActiveCellAndSelection(cell.value(), true);
				} else {
					this._mergeWithActiveSelectionRange(cell.value());
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToCellInView(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstCellInRow(System.Boolean, System.Boolean)" />*/
	_moveToFirstCellInRow: function (isSelection, scrollableOnly) {
		var minColumn = 0;
		if (scrollableOnly && this._hasFrozenPanes()) {
			var column = $.ig.Enumerable.prototype.firstOrDefault$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, this._columns());
			if (column != null && column.isFrozen()) {
				minColumn = column.endIndex() + 1;
			}
		}
		var firstCol = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleColumn(minColumn, this._worksheet().columns().maxCount() - 1, this.___worksheet);
		if ($.ig.util.nullableNotEquals(firstCol, null)) {
			var targetCell = new $.ig.spreadsheet.SpreadsheetCell(this.activePane().selection().activeCell().row(), firstCol.value());
			if (!isSelection) {
				this._setActiveCellAndSelection(targetCell, true);
			} else {
				this._replaceActiveSelectionRangeInDirection($.ig.Direction.prototype.left, this.activePane().selection().activeCell(), this.activePane().selection()._getActiveCellRange(), targetCell);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstCellInRow(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstCellInWorksheet(System.Boolean, System.Boolean)" />*/
	_moveToFirstCellInWorksheet: function (isSelection, scrollableOnly) {
		var availableRange = this._getAvailableRange();
		if (scrollableOnly && this._hasFrozenPanes()) {
			var minColumn = 0;
			var minRow = 0;
			var column = $.ig.Enumerable.prototype.firstOrDefault$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, this._columns());
			var row = $.ig.Enumerable.prototype.firstOrDefault$1($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, this._rows());
			if (column != null && column.isFrozen()) {
				minColumn = column.endIndex() + 1;
			}
			if (row != null && row.isFrozen()) {
				minRow = row.endIndex() + 1;
			}
			availableRange = new $.ig.spreadsheet.SpreadsheetCellRange(Math.max(Math.min(minRow, availableRange.lastRow()), availableRange.firstRow()), Math.max(Math.min(minColumn, availableRange.lastColumn()), availableRange.firstColumn()), availableRange.lastRow(), availableRange.lastColumn());
		}
		var firstCell = this._getFirstVisibleCell(availableRange);
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
			if (!isSelection) {
				this._setActiveCellAndSelection(firstCell.value(), true);
			} else {
				if (this._mergeWithActiveSelectionRange(firstCell.value())) {
					this._ensureIsInView(null, firstCell.value(), true);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstCellInWorksheet(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstLastUnlockedCell(System.Boolean)" />*/
	_moveToFirstLastUnlockedCell: function (first) {
		this._verifyUsedRange();
		var maxRange = new $.ig.spreadsheet.SpreadsheetCellRange(this.___actualUsedRangeAddress.firstRow(), this.___actualUsedRangeAddress.firstColumn(), this.___actualUsedRangeAddress.lastRow() + 1, this.___actualUsedRangeAddress.lastColumn() + 1);
		var cell = first ? this._getFirstVisibleCell(maxRange) : this._getLastVisibleCell(maxRange);
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
			while ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && this._isUnlocked3(cell.value().row(), cell.value().column()) == false) {
				cell = first ? this._getNextCellInRange(maxRange, cell) : this._getPreviousCellInRange(maxRange, cell);
			}
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
				this._setActiveCellAndSelection(cell.value(), true);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstLastUnlockedCell(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstLastVisibleCellInSelection(System.Boolean)" />*/
	_moveToFirstLastVisibleCellInSelection: function (first) {
		var inViewRange = this.activePane().visibleRange();
		var selection = this.activePane().selection();
		var range = selection._getActiveCellRange();
		range = inViewRange.intersect(range);
		if (!range.isEmpty()) {
			var cellToActivate = first ? this._getFirstVisibleCell(range) : this._getLastVisibleCell(range);
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(cellToActivate, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && this._canSelect(cellToActivate.value())) {
				selection._setActiveCell(cellToActivate.value(), $.ig.util.toNullable($.ig.Number.prototype.$type, selection.activeCellRangeIndex()));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToFirstLastVisibleCellInSelection(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToLastUsedCell(System.Boolean)" />*/
	_moveToLastUsedCell: function (isSelection) {
		var usedRange = this._getUsedRange(false, 1, 1);
		var lastCell = this._getLastVisibleCell(usedRange);
		if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(lastCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
			var mergedRange = this._getCellRange1(lastCell.value().row(), lastCell.value().column());
			lastCell = this._getFirstVisibleCell(mergedRange);
			$.ig.Debug.prototype.assert($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(lastCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)));
			if (!isSelection) {
				this._setActiveCellAndSelection(lastCell.value(), true);
			} else {
				if (this._mergeWithActiveSelectionRange(lastCell.value())) {
					this._ensureIsInView(null, lastCell.value(), true);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToLastUsedCell(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToLastUsedCellInRow(System.Boolean)" />*/
	_moveToLastUsedCellInRow: function (isSelection) {
		var usedRange = this._getUsedRange(false, 1, 1);
		var lastCol = this._getLastVisibleColumn(usedRange.firstColumn(), usedRange.lastColumn());
		var pane = this.activePane();
		if ($.ig.util.nullableNotEquals(lastCol, null) && pane != null) {
			var selection = pane.selection();
			var activeCell = selection.activeCell();
			var mergedRange = this._getCellRange1(activeCell.row(), lastCol.value());
			var row = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(mergedRange.firstRow(), mergedRange.lastRow(), this.___worksheet);
			var targetCell = new $.ig.spreadsheet.SpreadsheetCell(!$.ig.util.nullableIsNull(row) ? row.value() : activeCell.row(), lastCol.value());
			if (!isSelection) {
				this._setActiveCellAndSelection(targetCell, true);
			} else {
				this._replaceActiveSelectionRangeInDirection($.ig.Direction.prototype.right, activeCell, selection._getActiveCellRange(), targetCell);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MoveToLastUsedCellInRow(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::NeedsSnapSplit(System.Boolean)" />*/
	_needsSnapSplit: function (rowSplit) {
		if (!this._hasFrozenPanes()) {
			var uSettings = this.___worksheet.displayOptions().unfrozenPaneSettings();
			var areaExtent = rowSplit ? uSettings.topPaneHeight() : uSettings.leftPaneWidth();
			var items = rowSplit ? this._rowItems() : this._columnItems();
			if (areaExtent > 0 && items.count() > 1) {
				var item = items.item(0);
				var outOfView = item._endIndexOutOfViewExtent();
				if (outOfView < 0.5 || item._itemPositions().count() == 0) {
					return false;
				}
				var pos = $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, item._itemPositions());
				var itemExtent = rowSplit ? this._getPixelsFromRowItemPosUnits(pos._extent()) : this._getPixelsFromColumnItemPosUnits(pos._extent());
				if (Math.abs(itemExtent - outOfView) < 0.5) {
					return false;
				}
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::NeedsSnapSplit(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::NextCellWithinSelection(Infragistics.Controls.Grids.Core.Direction, System.Nullable)" />*/
	_nextCellWithinSelection: function (direction, unlockedOnly) {
		var selection = this.activePane().selection();
		if (selection != null) {
			var cellRanges = selection.cellRanges();
			selection._verify();
			var activeCell = selection.activeCell();
			var activeCellRange = this._getCellRange1(activeCell.row(), activeCell.column());
			var newActiveCell = activeCell;
			var newActiveCellRangeIndex = selection.activeCellRangeIndex();
			var unlockedOnlyResolved = !$.ig.util.nullableIsNull(unlockedOnly) ? unlockedOnly.value() : this.___worksheet.isProtected();
			if (cellRanges.count() == 1 && activeCellRange._contains1(cellRanges.item(0))) {
				if (unlockedOnlyResolved) {
					var tempAdjacent = this._getAdjacentCell(activeCell, direction, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, true, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null), false);
					newActiveCell = !$.ig.util.nullableIsNull(tempAdjacent) ? tempAdjacent.value() : activeCell;
				} else {
					var startingRow = activeCell.row();
					var startingCol = activeCell.column();
					switch (direction) {
						case $.ig.Direction.prototype.right:
							startingCol = activeCellRange.lastColumn();
							break;
						case $.ig.Direction.prototype.left:
							startingCol = activeCellRange.firstColumn();
							break;
						case $.ig.Direction.prototype.down:
							startingRow = activeCellRange.lastRow();
							break;
						case $.ig.Direction.prototype.up:
							startingRow = activeCellRange.firstRow();
							break;
					}
					var cellInDirection = this._getCellInDirection(startingRow, startingCol, direction, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null), false, false);
					newActiveCell = !$.ig.util.nullableIsNull(cellInDirection) ? cellInDirection.value() : activeCell;
				}
				this._setActiveCellAndSelection1(newActiveCell, false, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, new $.ig.spreadsheet.SpreadsheetCellRange(newActiveCell.row(), newActiveCell.column())));
			} else {
				var offset = selection.activeCellRangeIndex();
				var count = cellRanges.count();
				var multiple = direction == $.ig.Direction.prototype.left || direction == $.ig.Direction.prototype.up ? -1 : 1;
				for (var i = 0; i <= count; i++) {
					var idx = (i * multiple + offset + count) % count;
					var range = cellRanges.item(idx);
					var startingCell = i == 0 ? $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, activeCell) : $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
					var nextCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
					if (unlockedOnlyResolved) {
						if (i != 0) {
							switch (direction) {
								case $.ig.Direction.prototype.up:
								case $.ig.Direction.prototype.left:
									startingCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, range._lowerRight());
									break;
								case $.ig.Direction.prototype.down:
								case $.ig.Direction.prototype.right:
									startingCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, range._upperLeft());
									break;
							}
						}
						nextCell = this._getAdjacentCell(startingCell.value(), direction, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, true, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, range), i != 0);
					} else {
						switch (direction) {
							case $.ig.Direction.prototype.up:
								nextCell = this._getCellAboveInRange(range, startingCell);
								break;
							case $.ig.Direction.prototype.down:
								nextCell = this._getCellBelowInRange(range, startingCell);
								break;
							case $.ig.Direction.prototype.left:
								nextCell = this._getPreviousCellInRange(range, startingCell);
								break;
							case $.ig.Direction.prototype.right:
								nextCell = this._getNextCellInRange(range, startingCell);
								break;
						}
					}
					if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(nextCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
						newActiveCell = nextCell.value();
						newActiveCellRangeIndex = idx;
						break;
					}
				}
				if (this._canSelect(newActiveCell) && selection._setActiveCell(newActiveCell, $.ig.util.toNullable($.ig.Number.prototype.$type, newActiveCellRangeIndex))) {
					this._ensureIsInView1(null, new $.ig.spreadsheet.SpreadsheetCellRange(newActiveCell.row(), newActiveCell.column()), true);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::NextCellWithinSelection(Infragistics.Controls.Grids.Core.Direction, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::NotifySheetChange`2(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager.TContext, Infragistics.Documents.Excel.ChangeInfo)" />*/
	_notifySheetChange$2: function ($tContext, $tValue, context, change) {
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isUpdatingExcelScrollOffsets) && $.ig.SpreadsheetPaneManager.prototype._isExcelOffsetChanged(change)) {
			return;
		}
		$.ig.Debug.prototype.assert(!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.processingPendingChanges));
		var actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none;
		switch (change._changeType) {
			case $.ig.ExcelChangeAction.prototype.cellFormat:
			case $.ig.ExcelChangeAction.prototype.rowFormat:
			case $.ig.ExcelChangeAction.prototype.tableAreaFormat:
			case $.ig.ExcelChangeAction.prototype.columnFormat:
				switch (change._name) {
					case "Alignment":
					case "FontBold":
					case "FontColorInfo":
					case "FontHeight":
					case "FontItalic":
					case "FontName":
					case "FontStrikeout":
					case "FontSuperscriptSubscriptStyle":
					case "FontUnderlineStyle":
					case "FormatString":
					case "Indent":
					case "Rotation":
					case "ShrinkToFit":
					case "Style":
					case "VerticalAlignment":
					case "WrapText":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
						break;
					case "FormatOptions":
					case "SetFormatting":
						break;
					case "Locked":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
						break;
					case "BottomBorderColorInfo":
					case "BottomBorderStyle":
					case "DiagonalBorderColorInfo":
					case "DiagonalBorders":
					case "DiagonalBorderStyle":
					case "Fill":
					case "LeftBorderColorInfo":
					case "LeftBorderStyle":
					case "RightBorderColorInfo":
					case "RightBorderStyle":
					case "TopBorderColorInfo":
					case "TopBorderStyle":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
						break;
					default:
						$.ig.Debug.prototype.fail("Unrecognized property:" + change._name);
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.hyperlink:
				switch (change._name) {
					case "OnVisited":
					case "DisplayText":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.hyperlinkAdd:
			case $.ig.ExcelChangeAction.prototype.hyperlinkRemove:
			case $.ig.ExcelChangeAction.prototype.clearHyperlinks:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
				break;
			case $.ig.ExcelChangeAction.prototype.cellValue:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
				break;
			case $.ig.ExcelChangeAction.prototype.column:
				switch (change._name) {
					case "Width":
					case "Hidden":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyRangeSizes;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.row:
				switch (change._name) {
					case "Height":
					case "Hidden":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyRangeSizes;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.worksheet:
				switch (change._name) {
					case "DefaultColumnWidth":
					case "DefaultRowHeight":
					case "DefaultRowHidden":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyRangeSizes;
						break;
					case "ImageBackground":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout;
						break;
					case "IsProtected":
						actions = this._getUnlockedCellSelectionModePendingAction() | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.headerSettings;
						break;
					case "ValidationInputMessagePosition":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.updateCachedProperties;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.displayOptions:
				switch (change._name) {
					case "Reset":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyPaneSettings | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.headerSettings | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.updateCachedProperties;
						break;
					case "ShowGridlines":
					case "GridlineColor":
						this.___inViewPaneInfo.dirtyGridLinePen();
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout;
						break;
					case "ShowRowAndColumnHeaders":
					case "MagnificationInNormalView":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.headerSettings;
						break;
					case "ShowZeroValues":
					case "ShowFormulasInCells":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.updateCachedProperties;
						break;
					case "FirstColumnInRightPane":
					case "FirstRowInBottomPane":
					case "FirstColumnInLeftPane":
					case "FirstRowInTopPane":
					case "FrozenColumns":
					case "FrozenRows":
					case "LeftPaneWidth":
					case "TopPaneHeight":
					case "PanesAreFrozen":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyPaneSettings;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.windowOptions:
				switch (change._name) {
					case "ScrollBars":
					case "ObjectDisplayStyle":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout;
						break;
					case "Reset":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.zoom:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.zoomChanged;
				break;
			case $.ig.ExcelChangeAction.prototype.workbookStyleCellFormat:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.styleChanged;
				break;
			case $.ig.ExcelChangeAction.prototype.workbook:
				switch (change._name) {
					case "CellReferenceMode":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyPaneSettings;
						break;
					case "Culture":
					case "DateSystem":
					case "Precision":
						actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.worksheetCellAdd:
			case $.ig.ExcelChangeAction.prototype.worksheetCellRemove:
			case $.ig.ExcelChangeAction.prototype.worksheetColumnAdd:
			case $.ig.ExcelChangeAction.prototype.worksheetColumnRemove:
			case $.ig.ExcelChangeAction.prototype.worksheetRowAdd:
			case $.ig.ExcelChangeAction.prototype.worksheetRowRemove:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
				break;
			case $.ig.ExcelChangeAction.prototype.mergedRegionAdd:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyActiveCell | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyPaneSettings;
				break;
			case $.ig.ExcelChangeAction.prototype.clearMergedRegions:
			case $.ig.ExcelChangeAction.prototype.mergedRegionRemove:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyActiveCell;
				break;
			case $.ig.ExcelChangeAction.prototype.shape:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.redrawShapes;
				break;
			case $.ig.ExcelChangeAction.prototype.clearShapes:
			case $.ig.ExcelChangeAction.prototype.shapeAdd:
			case $.ig.ExcelChangeAction.prototype.shapeRemove:
			case $.ig.ExcelChangeAction.prototype.clearWorksheetTables:
			case $.ig.ExcelChangeAction.prototype.tableAdd:
			case $.ig.ExcelChangeAction.prototype.tableColumnInsert:
			case $.ig.ExcelChangeAction.prototype.tableColumnRemove:
			case $.ig.ExcelChangeAction.prototype.tableRowInsert:
			case $.ig.ExcelChangeAction.prototype.tableRowRemove:
			case $.ig.ExcelChangeAction.prototype.tableRemove:
			case $.ig.ExcelChangeAction.prototype.tableResize:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange;
				break;
			case $.ig.ExcelChangeAction.prototype.table:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos;
				break;
			case $.ig.ExcelChangeAction.prototype.worksheetProtection:
				switch (change._name) {
					case "SelectionMode":
						actions = this._getUnlockedCellSelectionModePendingAction() | $.ig.SpreadsheetPaneManager_ChangeActions.prototype.headerSettings;
						break;
				}
				break;
			case $.ig.ExcelChangeAction.prototype.clearDataValidationRules:
			case $.ig.ExcelChangeAction.prototype.dataValidationRule:
			case $.ig.ExcelChangeAction.prototype.dataValidationRuleAdd:
			case $.ig.ExcelChangeAction.prototype.dataValidationRuleRemove:
				actions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.validationRulesChanged;
				break;
			case $.ig.ExcelChangeAction.prototype.cellComment:
			case $.ig.ExcelChangeAction.prototype.workbookFont:
			case $.ig.ExcelChangeAction.prototype.worksheetAdd:
			case $.ig.ExcelChangeAction.prototype.worksheetRemove:
			case $.ig.ExcelChangeAction.prototype.clearNamedReferences:
			case $.ig.ExcelChangeAction.prototype.namedReferenceAdd:
			case $.ig.ExcelChangeAction.prototype.namedReferenceRemove:
			case $.ig.ExcelChangeAction.prototype.clearDataTables:
			case $.ig.ExcelChangeAction.prototype.dataTableAdd:
			case $.ig.ExcelChangeAction.prototype.dataTableRemove:
			case $.ig.ExcelChangeAction.prototype.clearDisplayValues:
			case $.ig.ExcelChangeAction.prototype.displayValueAdd:
			case $.ig.ExcelChangeAction.prototype.displayValueRemove:
			case $.ig.ExcelChangeAction.prototype.clearArrayFormula:
			case $.ig.ExcelChangeAction.prototype.applyArrayFormula:
			case $.ig.ExcelChangeAction.prototype.filter:
			case $.ig.ExcelChangeAction.prototype.printOptions:
			case $.ig.ExcelChangeAction.prototype.clearFixedDateGroups:
			case $.ig.ExcelChangeAction.prototype.fixedDateGroupAdd:
			case $.ig.ExcelChangeAction.prototype.fixedDateGroupRemove:
			case $.ig.ExcelChangeAction.prototype.clearPageBreaks:
			case $.ig.ExcelChangeAction.prototype.pageBreakAdd:
			case $.ig.ExcelChangeAction.prototype.pageBreakRemove:
			case $.ig.ExcelChangeAction.prototype.clearPrintAreas:
			case $.ig.ExcelChangeAction.prototype.printAreaAdd:
			case $.ig.ExcelChangeAction.prototype.printAreaRemove:
			case $.ig.ExcelChangeAction.prototype.clearTableStyles:
			case $.ig.ExcelChangeAction.prototype.tableStyle:
			case $.ig.ExcelChangeAction.prototype.tableStyleAdd:
			case $.ig.ExcelChangeAction.prototype.tableStyleRemove:
			case $.ig.ExcelChangeAction.prototype.formattedString:
			case $.ig.ExcelChangeAction.prototype.formattedText:
			case $.ig.ExcelChangeAction.prototype.formattedTextParagraph:
			case $.ig.ExcelChangeAction.prototype.formattedTextParagraphAdd:
			case $.ig.ExcelChangeAction.prototype.formattedTextParagraphRemove:
			case $.ig.ExcelChangeAction.prototype.clearFormattedTextParagraphs:
			case $.ig.ExcelChangeAction.prototype.clearTableFilters:
			case $.ig.ExcelChangeAction.prototype.clearSortConditions:
			case $.ig.ExcelChangeAction.prototype.documentProperties:
			case $.ig.ExcelChangeAction.prototype.formulaTokensChanged:
			case $.ig.ExcelChangeAction.prototype.namedReference:
			case $.ig.ExcelChangeAction.prototype.tableSort:
			case $.ig.ExcelChangeAction.prototype.tableColumn:
				break;
			default:
				$.ig.Debug.prototype.fail("Unrecognized change:" + $.ig.ExcelChangeAction.prototype.getBox(change._changeType));
				break;
		}
		this.___pendingChangeActions |= actions;
		this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPendingChangeNotifications);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::NotifySheetChange`2(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager.TContext, Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnCellValueChanged(System.Int32, System.Int32)" />*/
	_onCellValueChanged: function (row, column) {
		if (!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyPaneInfo)) {
			if (row >= 0 && column >= 0) {
				this.___inViewPaneInfo.onCellValueChanged(row, column);
			}
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hadCellValueChanged, true);
			this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasUsedRangeChanged);
			this._isLayoutDirty(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnCellValueChanged(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnCurrentFormatChanged()" />*/
	_onCurrentFormatChanged: function () {
		this._initializeMaxRangeAddress();
		this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasRangeSizesChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPaneSettingsChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.hadCellValueChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasActiveCellChanged | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasUsedRangeChanged);
		this._isLayoutDirty(true);
		this._measure(this._previousAvailableSize());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnCurrentFormatChanged()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnMouseWheel(System.Double, System.Boolean)" />*/
	_onMouseWheel: function (delta, zoom) {
		if (zoom) {
			var currentMagnification = this.___worksheet.displayOptions().magnificationInNormalView();
			var newMagnification = Math.max(10, Math.min(400, $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(currentMagnification - delta * 5))));
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				tab._worksheet().displayOptions().magnificationInNormalView(newMagnification);
			}
		} else {
			var row = this.activePane() != null ? this.activePane().rowScrollRegion() : null;
			if (row != null) {
				return this._scrollItemsImpl(row, $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(row.startIndex() + delta)), this.___firstUnfrozenRowIndex, this.___worksheet.workbook().maxRowCount(), this.___maxRangeSize.height(), this.___worksheet._getRowPositionFromOffset.runOn(this.___worksheet), this.___worksheet._getRowPosition.runOn(this.___worksheet));
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnMouseWheel(System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PerformEnterKeyNavigation(Infragistics.Controls.Grids.Core.Direction)" />*/
	_performEnterKeyNavigation: function (direction) {
		if (this.___worksheet.isProtected() && this.___worksheet.protection().selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.unlockedCells) {
			this._moveToAdjacentCell(direction, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, false);
		} else {
			this._nextCellWithinSelection(direction, $.ig.util.toNullable($.ig.Boolean.prototype.$type, false));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PerformEnterKeyNavigation(Infragistics.Controls.Grids.Core.Direction)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingZoomToSelection()" />*/
	_processPendingZoomToSelection: function () {
		if (this._hasPendingZoomToSelection()) {
			this._zoomToSelection(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingZoomToSelection()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReduceRangeForIntersectingMergedCells(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_reduceRangeForIntersectingMergedCells: function (range) {
		var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
		var $ret = this.___worksheet._reduceRangeForIntersectingMergedCells(excelRange);
		excelRange = $ret.p0;
		if (!excelRange._isValid()) {
			return range;
		}
		return $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(excelRange);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReduceRangeForIntersectingMergedCells(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReleaseResources()" />*/
	_releaseResources: function () {
		this.___inViewPaneInfo.clearCellInfos();
		this.__ownerState._renderCache().clear();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReleaseResources()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveHyperlinks(System.Boolean, System.Boolean)" />*/
	_removeHyperlinks1: function (removeHyperlinkStyle, canPromptForPassword) {
		if (removeHyperlinkStyle == false && this._doesSelectionIntersectMergedCells(true, true, null)) {
			return;
		}
		if ($.ig.util.nullableNotEquals(this._areSelectedTabsProtected(), false)) {
			var allowInsertingHyperlinks = this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.insertHyperlinks);
			if ($.ig.util.nullableNotEquals(allowInsertingHyperlinks, true)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
				return;
			} else {
				var lockedRangeInfo = new $.ig.LockedEditRangeInfoForOperation();
				var hasHyperlinks;
				var $ret = this._removeHyperlinks(removeHyperlinkStyle, true, hasHyperlinks, lockedRangeInfo, true);
				hasHyperlinks = $ret.p2;
				var protectedActionResult = this._canPerformProtectedAction(lockedRangeInfo, hasHyperlinks, canPromptForPassword);
				switch (protectedActionResult) {
					case $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation: return;
					case $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation: break;
					case $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.reverifyProtection:
						this._removeHyperlinks1(removeHyperlinkStyle, false);
						return;
				}
			}
		}
		var removedHyperlinks;
		var $ret1 = this._removeHyperlinks(removeHyperlinkStyle, false, removedHyperlinks, null, false);
		removedHyperlinks = $ret1.p2;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveHyperlinks(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveSplit(System.Boolean, System.Boolean)" />*/
	_removeSplit: function (removeRowSplit, removeColumnSplit) {
		var options = this.___worksheet.displayOptions();
		if (options.panesAreFrozen()) {
			if (removeRowSplit) {
				options.frozenPaneSettings().frozenRows(0);
			}
			if (removeColumnSplit) {
				options.frozenPaneSettings().frozenColumns(0);
			}
		} else {
			if (removeRowSplit) {
				options.unfrozenPaneSettings().topPaneHeight(0);
			}
			if (removeColumnSplit) {
				options.unfrozenPaneSettings().leftPaneWidth(0);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveSplit(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResetColumnWidths(System.Boolean)" />*/
	_resetColumnWidths: function (onlySelectedRows) {
		var activePane = this.activePane();
		var selection = activePane != null ? activePane.selection() : null;
		if (selection != null) {
			var collection = onlySelectedRows ? selection._selectedColumns() : selection._allColumns();
			if (collection.count() > 0) {
				var en = this.___tabManager._selectedTabs().getEnumerator();
				while (en.moveNext()) {
					var tab = en.current();
					var ws = tab._worksheet();
					var newWidth = ws.defaultColumnWidth();
					var columns = ws.columns();
					var en1 = collection.getEnumerator();
					while (en1.moveNext()) {
						var colRange = en1.current();
						for (var i = colRange.__start; i <= colRange.__end; i++) {
							columns.item(i).width(newWidth);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResetColumnWidths(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResetRowHeights(System.Boolean)" />*/
	_resetRowHeights: function (onlySelectedRows) {
		var activePane = this.activePane();
		var selection = activePane != null ? activePane.selection() : null;
		if (selection != null) {
			var collection = onlySelectedRows ? selection._selectedRows() : selection._allRows();
			if (collection.count() > 0) {
				var en = this.___tabManager._selectedTabs().getEnumerator();
				while (en.moveNext()) {
					var tab = en.current();
					var ws = tab._worksheet();
					var newHeight = ws._hasCustomDefaultRowHeight() ? ws.defaultRowHeight() : -1;
					var en1 = collection.getEnumerator();
					while (en1.moveNext()) {
						var rowRange = en1.current();
						var en2 = ws.rows()._getItemsInRange(rowRange.__start, rowRange.__end).getEnumerator();
						while (en2.moveNext()) {
							var row = en2.current();
							row.height(newHeight);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResetRowHeights(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollItem(Infragistics.Controls.Grids.Core.Direction)" />*/
	_scrollItem: function (direction) {
		var pane = this.activePane();
		if (null != pane) {
			switch (direction) {
				case $.ig.Direction.prototype.up:
					this._scrollRows(pane.rowScrollRegion(), $.ig.ScrollInfoAmount.prototype.smallDecrement, pane.rowScrollRegion()._scrollInfo()._offset());
					break;
				case $.ig.Direction.prototype.down:
					this._scrollRows(pane.rowScrollRegion(), $.ig.ScrollInfoAmount.prototype.smallIncrement, pane.rowScrollRegion()._scrollInfo()._offset());
					break;
				case $.ig.Direction.prototype.left:
					this._scrollColumns(pane.columnScrollRegion(), $.ig.ScrollInfoAmount.prototype.smallDecrement, pane.columnScrollRegion()._scrollInfo()._offset());
					break;
				case $.ig.Direction.prototype.right:
					this._scrollColumns(pane.columnScrollRegion(), $.ig.ScrollInfoAmount.prototype.smallIncrement, pane.columnScrollRegion()._scrollInfo()._offset());
					break;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollItem(Infragistics.Controls.Grids.Core.Direction)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollPage(Infragistics.Controls.Grids.Core.Direction)" />*/
	_scrollPage: function (direction) {
		var pane = this.activePane();
		if (null != pane) {
			switch (direction) {
				case $.ig.Direction.prototype.up:
					this._scrollRows(pane.rowScrollRegion(), $.ig.ScrollInfoAmount.prototype.largeDecrement, pane.rowScrollRegion()._scrollInfo()._offset());
					break;
				case $.ig.Direction.prototype.down:
					this._scrollRows(pane.rowScrollRegion(), $.ig.ScrollInfoAmount.prototype.largeIncrement, pane.rowScrollRegion()._scrollInfo()._offset());
					break;
				case $.ig.Direction.prototype.left:
					this._scrollColumns(pane.columnScrollRegion(), $.ig.ScrollInfoAmount.prototype.largeDecrement, pane.columnScrollRegion()._scrollInfo()._offset());
					break;
				case $.ig.Direction.prototype.right:
					this._scrollColumns(pane.columnScrollRegion(), $.ig.ScrollInfoAmount.prototype.largeIncrement, pane.columnScrollRegion()._scrollInfo()._offset());
					break;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollPage(Infragistics.Controls.Grids.Core.Direction)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectActiveCellOnly()" />*/
	_selectActiveCellOnly: function () {
		var pane = this.activePane();
		if (pane != null) {
			var selection = pane.selection();
			if (this._canSelect(selection.activeCell())) {
				selection.clearCellRanges();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectActiveCellOnly()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectAllCells()" />*/
	_selectAllCells: function () {
		this._replaceActiveSelectionRange(this._getAvailableRange());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectAllCells()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectCurrentArray()" />*/
	_selectCurrentArray: function () {
		var pane = this.activePane();
		if (pane == null) {
			return false;
		}
		var selection = pane.selection();
		var cell = selection.activeCell();
		var row = this.___worksheet.rows()._getIfCreated(cell.row());
		if (row != null) {
			var formula = $.ig.util.cast($.ig.excel.ArrayFormula.prototype.$type, row.getCellFormula(cell.column()));
			if (formula != null) {
				var blockingRegion = (formula).blockedRegion();
				var newRange = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(blockingRegion._address());
				if (this._canSelect1(newRange)) {
					selection._resetSelection2(newRange, cell, false);
				}
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectCurrentArray()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectCurrentRegion()" />*/
	_selectCurrentRegion: function () {
		var pane = this.activePane();
		if (pane == null) {
			return;
		}
		var selection = pane.selection();
		var activeCell = selection.activeCell();
		var activeCellRange = this._getCellRange1(activeCell.row(), activeCell.column());
		var selectionRange = selection._getActiveCellRange();
		var useAvailableRange = false;
		var selectionAddress = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(selectionRange);
		var usedRange = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		var table = this._getFirstIntersectingTable(selectionAddress);
		if (table != null) {
			var tableAddress = table._wholeTableAddress();
			if ($.ig.WorksheetRegionAddress.prototype._l_op_Equality(tableAddress, selectionAddress) || !tableAddress._contains1(selectionAddress)) {
				useAvailableRange = true;
			} else {
				var dataRegion = table.dataAreaRegion();
				if (dataRegion == null) {
					useAvailableRange = true;
				} else {
					var dataAddress = dataRegion._address();
					if (dataAddress._contains1(selectionAddress) && $.ig.WorksheetRegionAddress.prototype._l_op_Inequality(dataAddress, selectionAddress)) {
						usedRange = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(dataAddress);
					} else {
						usedRange = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(tableAddress);
					}
				}
			}
		}
		if (useAvailableRange) {
			usedRange = this._getAvailableRange();
		} else if (usedRange.isEmpty()) {
			usedRange = this._getAdjacentCellsWithData(activeCellRange);
			if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(activeCellRange, usedRange) || !usedRange._contains1(selectionRange) || $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality(selectionRange, usedRange)) {
				usedRange = this._getAvailableRange();
			}
		}
		if (this._canSelect1(usedRange)) {
			selection._replaceActiveCellRange1(usedRange, activeCell, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectCurrentRegion()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectRowsOrColumns(System.Boolean)" />*/
	_selectRowsOrColumns: function (rows) {
		var selection = this.activePane().selection();
		var selectedRange = selection._getActiveCellRange();
		var availableRange = this._getAvailableRange();
		var selectionAddress = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(selectedRange);
		var table = this._getFirstIntersectingTable(selectionAddress);
		if (table != null) {
			var tableAddress = table._wholeTableAddress();
			if (tableAddress._contains1(selectionAddress)) {
				var tableRange = new $.ig.Range$1($.ig.Number.prototype.$type), selectionRange = new $.ig.Range$1($.ig.Number.prototype.$type), dataRange = new $.ig.Range$1($.ig.Number.prototype.$type);
				if (rows == false) {
					tableRange = new $.ig.Range$1($.ig.Number.prototype.$type, 1, tableAddress._firstRowIndex(), tableAddress._lastRowIndex());
					selectionRange = new $.ig.Range$1($.ig.Number.prototype.$type, 1, selectionAddress._firstRowIndex(), selectionAddress._lastRowIndex());
				} else {
					tableRange = new $.ig.Range$1($.ig.Number.prototype.$type, 1, tableAddress._firstColumnIndex(), tableAddress._lastColumnIndex());
					selectionRange = new $.ig.Range$1($.ig.Number.prototype.$type, 1, selectionAddress._firstColumnIndex(), selectionAddress._lastColumnIndex());
				}
				if (!tableRange.equals(selectionRange)) {
					var dataRegion = table.dataAreaRegion();
					if (dataRegion != null) {
						var dataAddress = dataRegion._address();
						dataRange = rows == false ? new $.ig.Range$1($.ig.Number.prototype.$type, 1, dataAddress._firstRowIndex(), dataAddress._lastRowIndex()) : new $.ig.Range$1($.ig.Number.prototype.$type, 1, dataAddress._firstColumnIndex(), dataAddress._lastColumnIndex());
						var rangeToUse = new $.ig.Range$1($.ig.Number.prototype.$type);
						if (selectionRange.__start < dataRange.__start || selectionRange.__end > dataRange.__end || selectionRange.equals(dataRange)) {
							rangeToUse = tableRange;
						} else {
							rangeToUse = dataRange;
						}
						if (rows == false) {
							availableRange = new $.ig.spreadsheet.SpreadsheetCellRange(rangeToUse.__start, availableRange.firstColumn(), rangeToUse.__end, availableRange.lastColumn());
						} else {
							availableRange = new $.ig.spreadsheet.SpreadsheetCellRange(availableRange.firstRow(), rangeToUse.__start, availableRange.lastRow(), rangeToUse.__end);
						}
					}
				}
			}
		}
		if (rows) {
			selectedRange = new $.ig.spreadsheet.SpreadsheetCellRange(selectedRange.firstRow(), availableRange.firstColumn(), selectedRange.lastRow(), availableRange.lastColumn());
		} else {
			selectedRange = new $.ig.spreadsheet.SpreadsheetCellRange(availableRange.firstRow(), selectedRange.firstColumn(), availableRange.lastRow(), selectedRange.lastColumn());
		}
		selectedRange = this.extendRangeForMergedCells(selectedRange);
		if (this._canSelect1(selectedRange)) {
			selection._replaceActiveCellRange1(selectedRange, selection.activeCell(), true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectRowsOrColumns(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectVisibleCellsOnly()" />*/
	_selectVisibleCellsOnly: function () {
		var pane = this.activePane();
		if (pane != null) {
			var selection = pane.selection();
			var ranges = $.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, selection.cellRanges());
			var newRanges = new $.ig.List$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, 0);
			var columns = new $.ig.List$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), 0);
			var activeRangeIndex = selection.activeCellRangeIndex();
			var activeCell = selection.activeCell();
			var newActiveRangeIndex = -1;
			for (var r = 0; r < ranges.length; r++) {
				var range = ranges[r];
				var startCol, endCol;
				startCol = endCol = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
				columns.clear();
				for (var i = range.firstColumn(); i <= range.lastColumn(); i++) {
					var block = this.___worksheet._getColumnBlock(i);
					if (block.hidden()) {
						if ($.ig.util.nullableNotEquals(startCol, null)) {
							columns.add(new $.ig.Range$1($.ig.Number.prototype.$type, 1, startCol.value(), endCol.value()));
							startCol = endCol = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
						}
						i = block.lastColumnIndex();
					} else {
						if ($.ig.util.nullableEquals(startCol, null)) {
							startCol = $.ig.util.toNullable($.ig.Number.prototype.$type, Math.max(block.firstColumnIndex(), range.firstColumn()));
						}
						endCol = $.ig.util.toNullable($.ig.Number.prototype.$type, Math.min(block.lastColumnIndex(), range.lastColumn()));
					}
				}
				if ($.ig.util.nullableNotEquals(startCol, null)) {
					columns.add(new $.ig.Range$1($.ig.Number.prototype.$type, 1, startCol.value(), endCol.value()));
				}
				if (columns.count() == 0) {
					continue;
				}
				var firstRow = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(range.firstRow(), range.lastRow(), this.___worksheet);
				var areRowsHiddenByDefault = this.___worksheet._defaultRowHidden();
				var lastRow;
				var rows = this.___worksheet.rows();
				while ($.ig.util.nullableNotEquals(firstRow, null)) {
					lastRow = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
					var first = firstRow.value() + 1;
					if (first > range.lastRow()) {
						break;
					}
					var en = rows._getItemsInRange(firstRow.value() + 1, range.lastRow()).getEnumerator();
					while (en.moveNext()) {
						var row = en.current();
						if (row.hidden()) {
							if (areRowsHiddenByDefault == false) {
								lastRow = $.ig.util.toNullable($.ig.Number.prototype.$type, row.index() - 1);
							}
							break;
						} else {
							if (areRowsHiddenByDefault == false) {
								lastRow = $.ig.util.toNullable($.ig.Number.prototype.$type, row.index());
							} else if ($.ig.util.nullableNotEquals(lastRow, row.index() - 1)) {
								break;
							}
						}
					}
					if ($.ig.util.nullableEquals(lastRow, null)) {
						if (areRowsHiddenByDefault) {
							lastRow = firstRow;
						} else {
							lastRow = $.ig.util.toNullable($.ig.Number.prototype.$type, range.lastRow());
						}
					}
					for (var c = 0; c < columns.count(); c++) {
						newRanges.add(new $.ig.spreadsheet.SpreadsheetCellRange(firstRow.value(), columns.__inner[c].__start, lastRow.value(), columns.__inner[c].__end));
						if (r == activeRangeIndex && newRanges.__inner[newRanges.count() - 1]._contains(activeCell)) {
							newActiveRangeIndex = newRanges.count() - 1;
						}
					}
					firstRow = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(lastRow.value() + 2, range.lastRow(), this.___worksheet);
				}
			}
			if (newRanges.count() > 0) {
				if (newActiveRangeIndex < 0) {
					newActiveRangeIndex = 0;
					activeCell = newRanges.__inner[0]._upperLeft();
				}
				selection._resetSelection(newRanges.toArray(), activeCell, newActiveRangeIndex, true);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SelectVisibleCellsOnly()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetBorders(System.Collections.Generic.IEnumerable, Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	_setBorders: function (ranges, borders, borderColor, borderStyle) {
		if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.formatCells), true)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		var availableRange = this._getAvailableRange();
		var helper = new $.ig.SpreadsheetPaneManager_SetBorderHelper(borders, borderColor, borderStyle);
		var hasDiagonal = (borders & ($.ig.spreadsheet.SpreadsheetCellRangeBorders.diagonalDown | $.ig.spreadsheet.SpreadsheetCellRangeBorders.diagonalUp)) != 0;
		var isNoneBorder = borderStyle == $.ig.excel.CellBorderLineStyle.none;
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			var tempRangeArray = new Array(1);
			var en1 = ranges.getEnumerator();
			while (en1.moveNext()) {
				var range = en1.current();
				tempRangeArray[0] = range;
				var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
				var isColSelection = range.firstRow() <= availableRange.firstRow() && range.lastRow() >= availableRange.lastRow();
				if (isColSelection) {
					var columns = ws.columns();
					if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) {
						for (var c = range.firstColumn(); c <= range.lastColumn(); c++) {
							helper.setTopAndBottom(columns.item(c).cellFormat());
						}
					}
					if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) {
						for (var c1 = range.firstColumn() + 1; c1 <= range.lastColumn(); c1++) {
							helper.setLeft(columns.item(c1).cellFormat());
						}
					}
					if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.leftBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.leftBorder) {
						helper.setLeft(columns.item(range.firstColumn()).cellFormat());
					}
					if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.rightBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.rightBorder) {
						helper.setRight(columns.item(range.lastColumn()).cellFormat());
					}
					var en2 = ws.mergedCellsRegions().getEnumerator();
					while (en2.moveNext()) {
						var mergedCell = en2.current();
						if (mergedCell._width() > 1 && excelRange._contains1(mergedCell._address())) {
							helper.setMergedCellBorders(mergedCell, excelRange, false, true);
						}
					}
					if (hasDiagonal) {
						for (var c2 = range.firstColumn(); c2 <= range.lastColumn(); c2++) {
							helper.setDiagonal(columns.item(c2)._cellFormatInternal());
						}
						var startCol = range.firstColumn();
						var endCol = range.lastColumn();
						var en3 = ws.rows().getEnumerator();
						while (en3.moveNext()) {
							var row = en3.current();
							if (row._hasCellFormat() && (isNoneBorder == false || row._cellFormatInternal().element()._diagonalBordersResolved() != $.ig.excel.DiagonalBorders.none)) {
								for (var c3 = range.firstColumn(); c3 <= range.lastColumn(); c3++) {
									helper.setDiagonal(row._getCellFormatInternal1(c3));
								}
							} else {
								row._getCellFormatForCellsInRange(startCol, endCol, helper.setDiagonalOnRowCell.runOn(helper));
							}
						}
					}
				} else {
					var isRowSelection = range.firstColumn() <= availableRange.firstColumn() && range.lastColumn() >= availableRange.lastColumn();
					var rows = ws.rows();
					if (isRowSelection) {
						if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) {
							for (var r = range.firstRow() + 1; r <= range.lastRow(); r++) {
								helper.setTop(rows.item(r).cellFormat());
							}
						}
						if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) {
							for (var r1 = range.firstRow(); r1 <= range.lastRow(); r1++) {
								helper.setLeftAndRight(rows.item(r1).cellFormat());
							}
						}
						if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.topBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.topBorder) {
							helper.setTop(rows.item(range.firstRow()).cellFormat());
						}
						if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.bottomBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.bottomBorder) {
							helper.setBottom(rows.item(range.lastRow()).cellFormat());
						}
						var en4 = ws.mergedCellsRegions().getEnumerator();
						while (en4.moveNext()) {
							var mergedCell1 = en4.current();
							if (mergedCell1._height() > 1 && excelRange._contains1(mergedCell1._address())) {
								helper.setMergedCellBorders(mergedCell1, excelRange, true, false);
							}
						}
						if (hasDiagonal) {
							var endCol1 = ws.columns().maxCount();
							for (var r2 = range.firstRow(); r2 <= range.lastRow(); r2++) {
								var row1 = rows.item(r2);
								helper.setDiagonal(row1._cellFormatInternal());
								row1._getCellFormatForCellsInRange(0, endCol1, helper.setDiagonalOnRowCell.runOn(helper));
							}
						}
					} else {
						for (var r3 = range.firstRow(); r3 <= range.lastRow(); r3++) {
							var row2 = rows.item(r3);
							for (var c4 = range.firstColumn(); c4 <= range.lastColumn(); c4++) {
								var mergedCell2 = row2.getCellAssociatedMergedCellsRegion(c4);
								if (mergedCell2 == null) {
									var fmt = row2._getCellFormatInternal1(c4);
									if (r3 == range.firstRow()) {
										if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.topBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.topBorder) {
											helper.setTop(fmt);
										}
									} else if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) {
										helper.setTop(fmt);
									}
									if (range.lastRow() == r3) {
										if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.bottomBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.bottomBorder) {
											helper.setBottom(fmt);
										}
									} else if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) {
										helper.setBottom(fmt);
									}
									if (c4 == range.firstColumn()) {
										if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.leftBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.leftBorder) {
											helper.setLeft(fmt);
										}
									} else if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) {
										helper.setLeft(fmt);
									}
									if (range.lastColumn() == c4) {
										if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.rightBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.rightBorder) {
											helper.setRight(fmt);
										}
									} else if ((borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) {
										helper.setRight(fmt);
									}
									if (hasDiagonal) {
										helper.setDiagonal(fmt);
									}
								} else if (excelRange._contains1(mergedCell2._address()) && r3 == mergedCell2.firstRow()) {
									helper.setMergedCellBorders(mergedCell2, excelRange, true, true);
									if (hasDiagonal) {
										helper.setDiagonal(mergedCell2._cellFormatInternal());
									}
									c4 = mergedCell2.lastColumn();
								}
							}
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetBorders(System.Collections.Generic.IEnumerable, Infragistics.Controls.Grids.Core.SpreadsheetCellRangeBorders, Infragistics.Documents.Excel.WorkbookColorInfo, Infragistics.Documents.Excel.CellBorderLineStyle)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetCellFormatting`1(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager.T, System.Action, System.Collections.Generic.IEnumerable, Infragistics.Documents.Excel.CellFormatValue, System.Boolean)" />*/
	_setCellFormatting$1: function ($t, newValue, setter, ranges, property, ensureProcessCellsOnlyOnce) {
		var availableRange = this._getAvailableRange();
		if ((property & $.ig.CellFormatValue.prototype.locked) == $.ig.CellFormatValue.prototype.locked) {
			var lockTrigger = this._getChangeSelectionLockedStateTrigger();
			if ($.ig.util.nullableNotEquals(null, lockTrigger)) {
				this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo(lockTrigger.value(), null, null, null, false));
				return;
			}
		}
		if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.formatCells), true)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			var cellAddresses = ensureProcessCellsOnlyOnce ? new $.ig.HashSet$1($.ig.Number.prototype.$type, 0) : null;
			var en1 = ranges.getEnumerator();
			while (en1.moveNext()) {
				var range = en1.current();
				var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
				var isColSelection = range.firstRow() <= availableRange.firstRow() && range.lastRow() >= availableRange.lastRow();
				if (isColSelection) {
					var columns = ws.columns();
					for (var c = range.firstColumn(); c <= range.lastColumn(); c++) {
						setter(columns.item(c)._cellFormatInternal(), newValue);
					}
					var en2 = ws.mergedCellsRegions().getEnumerator();
					while (en2.moveNext()) {
						var mergedCell = en2.current();
						if (mergedCell._width() > 1) {
							if (excelRange._contains1(mergedCell._address())) {
								setter(mergedCell._cellFormatInternal(), newValue);
							}
						}
					}
				} else {
					var isRowSelection = range.firstColumn() <= availableRange.firstColumn() && range.lastColumn() >= availableRange.lastColumn();
					var rows = ws.rows();
					if (isRowSelection) {
						for (var r = range.firstRow(); r <= range.lastRow(); r++) {
							setter(rows.item(r)._cellFormatInternal(), newValue);
						}
						var en3 = ws.mergedCellsRegions().getEnumerator();
						while (en3.moveNext()) {
							var mergedCell1 = en3.current();
							if (mergedCell1._height() > 1) {
								if (excelRange._contains1(mergedCell1._address())) {
									setter(mergedCell1._cellFormatInternal(), newValue);
								}
							}
						}
					} else {
						for (var r1 = range.firstRow(); r1 <= range.lastRow(); r1++) {
							var row = rows.item(r1);
							for (var c1 = range.firstColumn(); c1 <= range.lastColumn(); c1++) {
								if (cellAddresses == null || cellAddresses.add((row.index() << 32) + c1)) {
									var merged = row.getCellAssociatedMergedCellsRegion(c1);
									if (merged != null && !excelRange._contains1(merged._address())) {
										continue;
									}
									setter(row._getCellFormatInternal1(c1), newValue);
								}
							}
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetCellFormatting`1(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager.T, System.Action, System.Collections.Generic.IEnumerable, Infragistics.Documents.Excel.CellFormatValue, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetZoom(System.Int32)" />*/
	_setZoom: function (zoomLevel) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			tab._worksheet().displayOptions().magnificationInNormalView(zoomLevel);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetZoom(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetShowGridlines(System.Boolean)" />*/
	_setShowGridlines: function (showGridlines) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			tab._worksheet().displayOptions().showGridlines(showGridlines);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetShowGridlines(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetShowHeaders(System.Boolean)" />*/
	_setShowHeaders: function (showHeaders) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			tab._worksheet().displayOptions().showRowAndColumnHeaders(showHeaders);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetShowHeaders(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SnapSplit(System.Boolean, System.Boolean)" />*/
	_snapSplit: function (snapRowSplit, snapColumnSplit) {
		if (!this._hasFrozenPanes()) {
			var uSettings = this.___worksheet.displayOptions().unfrozenPaneSettings();
			if (this._prepareForSplitChange()) {
				this._measure(this.___availableSize);
				if (snapRowSplit && uSettings.topPaneHeight() > 0) {
					var outOfView = this._rows().item(0)._endIndexOutOfViewExtent();
					if ($.ig.CoreUtilities.prototype.areClose(outOfView, 0) == false) {
						var item = $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, this._rows().item(0)._itemPositions());
						var itemHeight = this._getPixelsFromRowItemPosUnits(item._extent());
						var delta = outOfView < itemHeight / 2 ? outOfView : outOfView - itemHeight;
						uSettings.topPaneHeight(uSettings.topPaneHeight() + (this._convertPixelsToTwips(delta)));
					}
				}
				if (snapColumnSplit && uSettings.leftPaneWidth() > 0) {
					var outOfView1 = this._columns().item(0)._endIndexOutOfViewExtent();
					if ($.ig.CoreUtilities.prototype.areClose(outOfView1, 0) == false) {
						var item1 = $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, this._columns().item(0)._itemPositions());
						var itemHeight1 = this._getPixelsFromColumnItemPosUnits(item1._extent());
						var delta1 = outOfView1 < itemHeight1 / 2 ? outOfView1 : outOfView1 - itemHeight1;
						uSettings.leftPaneWidth(uSettings.leftPaneWidth() + (this._convertPixelsToTwips(delta1)));
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SnapSplit(System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ToggleShowFormulaInCells()" />*/
	_toggleShowFormulaInCells: function () {
		this._assertIsTabSelected();
		var newState = !this.___worksheet.displayOptions().showFormulasInCells();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			tab._worksheet().displayOptions().showFormulasInCells(newState);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ToggleShowFormulaInCells()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ToggleSplit(System.Boolean)" />*/
	_toggleSplit: function (freeze) {
		if (this._prepareForSplitChange() == false) {
			return;
		}
		var options = this.___worksheet.displayOptions();
		var fSettings = options.frozenPaneSettings();
		var uSettings = options.unfrozenPaneSettings();
		var hasMultipleRows = this._rows().count() > 1;
		var hasMultipleCols = this._columns().count() > 1;
		var hasMultipleRowsOrCols = hasMultipleCols || hasMultipleRows;
		var isFrozen = options.panesAreFrozen() && hasMultipleRowsOrCols;
		var isSplit = !isFrozen && hasMultipleRowsOrCols;
		var hasRemovedSplits = false;
		if (freeze) {
			uSettings.firstColumnInLeftPane(this._columns().item(0).startIndex());
			uSettings.firstRowInTopPane(this._rows().item(0).startIndex());
			if (isFrozen) {
				if (fSettings._keepSplitIfRemoveFreeze()) {
					fSettings._keepSplitIfRemoveFreeze(false);
					if (hasMultipleRows) {
						uSettings.topPaneHeight(this._convertPixelsToTwips(this._columnHeaderAreaExtent() + this._rows().item(0).actualExtent()));
						uSettings.firstRowInBottomPane(this._rows().item(1).startIndex());
					} else {
						uSettings.topPaneHeight(0);
					}
					if (hasMultipleCols) {
						uSettings.leftPaneWidth(this._convertPixelsToTwips(this._rowHeaderAreaExtent() + this._columns().item(0).actualExtent()));
						uSettings.firstColumnInRightPane(this._columns().item(1).startIndex());
					} else {
						uSettings.leftPaneWidth(0);
					}
				} else {
					uSettings.leftPaneWidth(0);
					uSettings.topPaneHeight(0);
					hasRemovedSplits = true;
				}
				options.panesAreFrozen(false);
			} else if (isSplit) {
				if (hasMultipleCols) {
					var cols = this._columns().item(0).endIndex() - this._columns().item(0).startIndex();
					if (cols == 0 || this._columns().item(0)._endIndexOutOfViewExtent() < this._getPixelsFromColumnItemPosUnits($.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, this._columns().item(0)._itemPositions())._extent()) / 2) {
						cols++;
					}
					fSettings.frozenColumns(cols);
					fSettings.firstColumnInRightPane(this._columns().item(1).startIndex());
				} else {
					fSettings.frozenColumns(0);
				}
				if (hasMultipleRows) {
					var rows = this._rows().item(0).endIndex() - this._rows().item(0).startIndex();
					if (rows == 0 || this._rows().item(0)._endIndexOutOfViewExtent() < this._getPixelsFromRowItemPosUnits($.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, this._rows().item(0)._itemPositions())._extent()) / 2) {
						rows++;
					}
					fSettings.frozenRows(rows);
					fSettings.firstRowInBottomPane(this._rows().item(1).startIndex());
				} else {
					fSettings.frozenRows(0);
				}
				fSettings._keepSplitIfRemoveFreeze(true);
				options.panesAreFrozen(true);
			} else {
				var cellForSplit = this._getCellForActiveCellSplit();
				var frozenColumns = Math.max(cellForSplit.column() - this._columns().item(0).startIndex(), 0);
				var frozenRows = Math.max(cellForSplit.row() - this._rows().item(0).startIndex(), 0);
				if (frozenColumns > 0 || frozenRows > 0) {
					fSettings.frozenRows(frozenRows);
					fSettings.frozenColumns(frozenColumns);
					fSettings.firstRowInBottomPane(cellForSplit.row());
					fSettings.firstColumnInRightPane(cellForSplit.column());
					options.panesAreFrozen(true);
				}
			}
		} else {
			if (isFrozen) {
				fSettings._keepSplitIfRemoveFreeze(true);
				this._toggleSplit(true);
			} else if (isSplit) {
				uSettings.firstColumnInLeftPane(this._columns().item(0).startIndex());
				uSettings.firstRowInTopPane(this._rows().item(0).startIndex());
				uSettings.leftPaneWidth(0);
				uSettings.topPaneHeight(0);
				hasRemovedSplits = true;
			} else {
				var cellForSplit1 = this._getCellForActiveCellSplit();
				var height = this.___worksheet._getRowPosition(cellForSplit1.row())._offset() - this.___worksheet._getRowPosition(this._rows().item(0).startIndex())._offset();
				var width = this.___worksheet._getColumnPosition(cellForSplit1.column())._offset() - this.___worksheet._getColumnPosition(this._columns().item(0).startIndex())._offset();
				uSettings.firstColumnInLeftPane(this._columns().item(0).startIndex());
				uSettings.firstRowInTopPane(this._rows().item(0).startIndex());
				if (height > 0) {
					uSettings.firstRowInBottomPane(cellForSplit1.row());
				}
				if (width > 0) {
					uSettings.firstColumnInRightPane(cellForSplit1.column());
				}
				var zoom = this._zoomLevel();
				uSettings.leftPaneWidth(width > 0 ? $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(this.___worksheet._convertFromCharacter256thsIntHorizontal(width, $.ig.excel.WorksheetColumnWidthUnit.twip, true) * zoom)) + this._convertPixelsToTwips(this._rowHeaderAreaExtent()) : 0);
				uSettings.topPaneHeight(height > 0 ? $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(height * zoom)) + this._convertPixelsToTwips(this._columnHeaderAreaExtent()) : 0);
			}
		}
		if (hasRemovedSplits && options._activePane() != $.ig.PaneLocation.prototype.topLeft) {
			var activeSelection = options._selection().getSelection(options._activePane());
			if (activeSelection != null) {
				var newSelection = options._selection().getSelection($.ig.PaneLocation.prototype.topLeft);
				if (newSelection != null) {
					options._selection().paneSelections().remove(newSelection);
				}
				activeSelection.location($.ig.PaneLocation.prototype.topLeft);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ToggleSplit(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyActivePane(System.Boolean)" />*/
	_verifyActivePane: function (verifySelection) {
		var hasPanes = this._panes().count() > 0;
		if (!hasPanes) {
			this.activePane(null);
		} else {
			this.activePane(this._getPaneToActivate($.ig.util.toNullable($.ig.Boolean.prototype.$type, null)));
		}
		if (verifySelection && this.activePane() != null) {
			this.activePane().selection()._verify();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyActivePane(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyBeforeMeasure()" />*/
	_verifyBeforeMeasure: function () {
		this._verifyState();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyBeforeMeasure()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyCanEditInactiveSelectedTabs(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Collections.Generic.IList, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetOperationResult)" />*/
	_verifyCanEditInactiveSelectedTabs: function (lockedOperationInfo, ranges, canCancel, result) {
		if (lockedOperationInfo != null && this.___tabManager._selectedTabs().count() > 1) {
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				if (tab._worksheet() == this.___worksheet || tab._worksheet().isProtected() == false) {
					continue;
				}
				var blockInfoForWs = lockedOperationInfo.getWorksheetInfo(tab._worksheet());
				var en1 = ranges.getEnumerator();
				while (en1.moveNext()) {
					var range = en1.current();
					if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(tab._worksheet(), range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn(), blockInfoForWs) == false) {
						if (this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, canCancel))) {
							result = $.ig.SpreadsheetOperationResult.prototype.cancelled;
						} else {
							result = $.ig.SpreadsheetOperationResult.prototype.error;
						}
						return {
							ret: false,
							p3: result
						};
					}
				}
			}
		}
		result = $.ig.SpreadsheetOperationResult.prototype.success;
		return {
			ret: true,
			p3: result
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyCanEditInactiveSelectedTabs(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Collections.Generic.IList, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetOperationResult)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyCanPaste(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean)" />*/
	_verifyCanPaste: function (targetWorksheets, targetRanges, canPromptForPassword) {
		if ($.ig.util.nullableNotEquals(this._areSelectedTabsProtected(), false)) {
			var result = this._canPerformProtectedAction2(targetWorksheets, targetRanges, false, true, canPromptForPassword);
			if (result == $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.reverifyProtection) {
				result = this._canPerformProtectedAction2(targetWorksheets, targetRanges, false, true, false);
			}
			return result == $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyCanPaste(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyClearContentsOfSelectionIsAllowed()" />*/
	_verifyClearContentsOfSelectionIsAllowed: function () {
		if ($.ig.util.nullableEquals(this._areSelectedTabsProtected(), false)) {
			return true;
		}
		var pane = this.activePane();
		if (pane == null) {
			return false;
		}
		var selection = pane._activeSelection();
		var result = this._canPerformProtectedAction1(selection, false, true, true);
		if (result == $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.reverifyProtection) {
			result = this._canPerformProtectedAction1(selection, false, true, false);
		}
		return result == $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyClearContentsOfSelectionIsAllowed()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyCutIsAllowed()" />*/
	_verifyCutIsAllowed: function () {
		if ($.ig.util.nullableEquals(this._areSelectedTabsProtected(), false)) {
			return true;
		}
		var pane = this.activePane();
		if (pane == null) {
			return false;
		}
		var selection = pane._activeSelection();
		return this._canPerformProtectedAction1(selection, true, true, true) != $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyCutIsAllowed()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Zoom(Infragistics.Controls.Grids.Core.SpreadsheetZoomOperation)" />*/
	_zoom: function (zoom) {
		this._assertIsTabSelected();
		switch (zoom) {
			case $.ig.SpreadsheetZoomOperation.prototype.zoomIn:
				{
					var zoomLevel = this.___worksheet.displayOptions().magnificationInNormalView() + 10;
					zoomLevel = Math.min(zoomLevel - (zoomLevel % 10), 400);
					var en = this.___tabManager._selectedTabs().getEnumerator();
					while (en.moveNext()) {
						var tab = en.current();
						tab._worksheet().displayOptions().magnificationInNormalView(zoomLevel);
					}
				}
				break;
			case $.ig.SpreadsheetZoomOperation.prototype.zoomOut:
				{
					var zoomLevel1 = this.___worksheet.displayOptions().magnificationInNormalView() - 1;
					zoomLevel1 = Math.max(zoomLevel1 - (zoomLevel1 % 10), 10);
					var en1 = this.___tabManager._selectedTabs().getEnumerator();
					while (en1.moveNext()) {
						var tab1 = en1.current();
						tab1._worksheet().displayOptions().magnificationInNormalView(zoomLevel1);
					}
				}
				break;
			case $.ig.SpreadsheetZoomOperation.prototype.zoomTo100:
				{
					this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isSelectionZoom, true);
					var en2 = this.___tabManager._selectedTabs().getEnumerator();
					while (en2.moveNext()) {
						var tab2 = en2.current();
						tab2._worksheet().displayOptions().magnificationInNormalView(100);
					}
				}
				break;
			case $.ig.SpreadsheetZoomOperation.prototype.zoomToSelection:
				this._zoomToSelection(false);
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Zoom(Infragistics.Controls.Grids.Core.SpreadsheetZoomOperation)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivateNextOrPreviousPane(System.Boolean)" />*/
	_activateNextOrPreviousPane: function (next) {
		this.activePane(this._getPaneToActivate($.ig.util.toNullable($.ig.Boolean.prototype.$type, next)));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ActivateNextOrPreviousPane(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AssertIsTabSelected()" />*/
	_assertIsTabSelected: function () {
		$.ig.Debug.prototype.assert1(this.___worksheet.displayOptions()._isTabSelected(), "Action applies to selected worksheets");
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AssertIsTabSelected()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AutoSizeColumns(, System.Boolean)" />*/
	_autoSizeColumns: function (ranges, mayHaveOverlappingRanges) {
		this._assertIsTabSelected();
		{
			var metricsProvider = this._createDisplayTextMetricsProvider();
			try {
				var context = new $.ig.CellSizeMeasurementContext(this.___worksheet.workbook(), metricsProvider);
				var en = this.___tabManager._selectedTabs().getEnumerator();
				while (en.moveNext()) {
					var tab = en.current();
					var ws = tab._worksheet();
					var colWidths = new $.ig.Dictionary$2($.ig.Number.prototype.$type, $.ig.Number.prototype.$type, 0);
					if (ranges.length <= 1) {
						mayHaveOverlappingRanges = false;
					}
					for (var i = 0; i < ranges.length; i++) {
						var range = ranges[i];
						for (var c = range.firstColumn(); c <= range.lastColumn(); c++) {
							var column = ws.columns().item(c);
							var autoFitWidth = column._calculateAutoFitWidth1(range.firstRow(), range.lastRow(), context);
							if (autoFitWidth.hasValue()) {
								var tempWidth = autoFitWidth.value();
								if (mayHaveOverlappingRanges) {
									var savedWidth;
									if ((function () { var $ret = colWidths.tryGetValue(c, savedWidth); savedWidth = $ret.p1; return $ret.ret; }())) {
										tempWidth = Math.max(savedWidth, tempWidth);
									}
									colWidths.item(c, tempWidth);
								} else {
									column.hidden(false);
									column.width(tempWidth);
								}
							}
						}
					}
					if (mayHaveOverlappingRanges) {
						var en1 = colWidths.getEnumerator();
						while (en1.moveNext()) {
							var pair = en1.current();
							var column1 = ws.columns().item(pair.key());
							column1.hidden(false);
							column1.width(pair.value());
						}
					}
				}
			}
			finally {
				if (metricsProvider != null) {
					metricsProvider.dispose();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::AutoSizeColumns(, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CalculateUsedRange()" />*/
	_calculateUsedRange: function () {
		return this._getUsedRange(true, 1, 1);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CalculateUsedRange()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformProtectedAction(Infragistics.Controls.Grids.Core.SpreadsheetSelection, System.Boolean, System.Boolean, System.Boolean)" />*/
	_canPerformProtectedAction1: function (selection, useUnlockedCellsOnly, hasChangesToPerform, canPromptForPassword) {
		var lockedRangeInfo = useUnlockedCellsOnly ? null : new $.ig.LockedEditRangeInfoForOperation();
		var canChange = true;
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			if (false == (canChange = $.ig.SpreadsheetPaneManager.prototype._isUnlocked(tab._worksheet(), selection, lockedRangeInfo))) {
				break;
			}
		}
		if (useUnlockedCellsOnly) {
			if (canChange) {
				return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation;
			}
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, lockedRangeInfo, false));
			return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation;
		}
		return this._canPerformProtectedAction(lockedRangeInfo, hasChangesToPerform, canPromptForPassword);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformProtectedAction(Infragistics.Controls.Grids.Core.SpreadsheetSelection, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformProtectedAction(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean, System.Boolean, System.Boolean)" />*/
	_canPerformProtectedAction2: function (worksheets, ranges, useUnlockedCellsOnly, hasChangesToPerform, canPromptForPassword) {
		var lockedRangeInfo = useUnlockedCellsOnly ? null : new $.ig.LockedEditRangeInfoForOperation();
		var canChange = true;
		var en = worksheets.getEnumerator();
		while (en.moveNext()) {
			var ws = en.current();
			var wslockedRangeInfo = lockedRangeInfo != null ? lockedRangeInfo.getWorksheetInfo(ws) : null;
			var en1 = ranges.getEnumerator();
			while (en1.moveNext()) {
				var range = en1.current();
				if (false == (canChange = $.ig.SpreadsheetPaneManager.prototype._isUnlocked1(ws, range._firstRowIndex(), range._firstColumnIndex(), range._lastRowIndex(), range._lastColumnIndex(), wslockedRangeInfo))) {
					break;
				}
			}
			if (canChange == false) {
				break;
			}
		}
		if (useUnlockedCellsOnly) {
			if (canChange) {
				return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation;
			}
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, lockedRangeInfo, false));
			return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation;
		}
		return this._canPerformProtectedAction(lockedRangeInfo, hasChangesToPerform, canPromptForPassword);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformProtectedAction(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformProtectedAction(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Boolean, System.Boolean)" />*/
	_canPerformProtectedAction: function (lockedRangeInfo, hasChangesToPerform, canPromptForPassword) {
		var canPerform = lockedRangeInfo.canPerformOperation();
		var errorTrigger;
		if (!canPerform) {
			if (lockedRangeInfo.getRangesToUnlock(false).count() > 0) {
				errorTrigger = $.ig.spreadsheet.SpreadsheetUserPromptTrigger.noSingleAllowedEditRange;
			} else {
				errorTrigger = $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange;
			}
		} else if (hasChangesToPerform == false && lockedRangeInfo.getRangesToUnlock(false).count() == 0) {
			return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation;
		} else {
			var rangesToUnlock = lockedRangeInfo.getRangesToUnlock(true);
			if (rangesToUnlock.count() == 0) {
				return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation;
			}
			var action = this.__ownerState._passwordNeededAction();
			if (canPromptForPassword && action != null) {
				var result = action(lockedRangeInfo);
				if (result == false) {
					return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation;
				}
				var newRangesToUnlock = lockedRangeInfo.getRangesToUnlock(true);
				if (rangesToUnlock.count() == newRangesToUnlock.count()) {
					errorTrigger = $.ig.spreadsheet.SpreadsheetUserPromptTrigger.noSingleAllowedEditRange;
				} else if (newRangesToUnlock.count() == 0) {
					return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.continueWithoutValidation;
				} else {
					return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.reverifyProtection;
				}
			} else {
				errorTrigger = $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange;
			}
		}
		this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo(errorTrigger, null, null, lockedRangeInfo, false));
		return $.ig.SpreadsheetPaneManager_ProtectedActionResult.prototype.skipOperation;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ProtectedActionResult Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CanPerformProtectedAction(Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CheckCellsWithDataForCol(System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	_checkCellsWithDataForCol: function (colToCheck, column, firstRow, lastRow) {
		for (var i = firstRow; i <= lastRow; i++) {
			if (this._doesCellHaveValue1(i, colToCheck)) {
				column = colToCheck;
				return {
					p1: column
				};
			}
		}
		return {
			p1: column
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CheckCellsWithDataForCol(System.Int32, System.Int32, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CheckCellsWithDataForMergedCells(System.Int32, System.Int32, System.Int32, System.Int32, System.Nullable, System.Nullable, System.Nullable, System.Nullable)" />*/
	_checkCellsWithDataForMergedCells: function (firstRow, firstCol, lastRow, lastCol, rowIndexBefore, colIndexBefore, rowIndexAfter, colIndexAfter) {
		var mergedCells = this.___worksheet._cellOwnedAssociatedMergedCellsRegions();
		var region;
		if ($.ig.util.nullableGreaterThan(firstCol, colIndexBefore)) {
			if ($.ig.util.nullableNotEquals(rowIndexBefore, null)) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, rowIndexBefore.value(), colIndexBefore.value()), region); region = $ret.p1; return $ret.ret; }()) && this._doesCellHaveValue(region)) {
					firstRow = rowIndexBefore.value();
					firstCol = colIndexBefore.value();
				}
			}
			if ($.ig.util.nullableNotEquals(rowIndexAfter, null)) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, rowIndexAfter.value(), colIndexBefore.value()), region); region = $ret.p1; return $ret.ret; }()) && this._doesCellHaveValue(region)) {
					lastRow = rowIndexAfter.value();
					firstCol = colIndexBefore.value();
				}
			}
		}
		if ($.ig.util.nullableLessThan(lastCol, colIndexAfter)) {
			if ($.ig.util.nullableNotEquals(rowIndexBefore, null)) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, rowIndexBefore.value(), colIndexAfter.value()), region); region = $ret.p1; return $ret.ret; }()) && this._doesCellHaveValue(region)) {
					firstRow = rowIndexBefore.value();
					lastCol = colIndexAfter.value();
				}
			}
			if ($.ig.util.nullableNotEquals(rowIndexAfter, null)) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, rowIndexAfter.value(), colIndexAfter.value()), region); region = $ret.p1; return $ret.ret; }()) && this._doesCellHaveValue(region)) {
					lastRow = rowIndexAfter.value();
					lastCol = colIndexAfter.value();
				}
			}
		}
		var newFirstRow = firstRow;
		var newFirstCol = firstCol;
		var newLastRow = lastRow;
		var newLastCol = lastCol;
		if ($.ig.util.nullableEquals(firstRow, rowIndexBefore)) {
			for (var i = firstCol; i < lastCol; i++) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, firstRow, i), region); region = $ret.p1; return $ret.ret; }())) {
					var mergedAddress = region._address();
					if (this._doesCellHaveValue(region)) {
						if (mergedAddress._firstColumnIndex() < firstCol) {
							newFirstCol = mergedAddress._firstColumnIndex();
						}
						if (mergedAddress._lastColumnIndex() > lastCol) {
							newLastCol = mergedAddress._lastColumnIndex();
						}
						if (mergedAddress._firstRowIndex() < firstRow) {
							newFirstRow = mergedAddress._firstRowIndex();
						}
					}
					i = mergedAddress._lastColumnIndex();
				}
			}
		}
		if ($.ig.util.nullableEquals(lastRow, rowIndexAfter)) {
			for (var i1 = firstCol; i1 < lastCol; i1++) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, lastRow, i1), region); region = $ret.p1; return $ret.ret; }())) {
					var mergedAddress1 = region._address();
					if (this._doesCellHaveValue(region)) {
						if (mergedAddress1._firstColumnIndex() < firstCol) {
							newFirstCol = mergedAddress1._firstColumnIndex();
						}
						if (mergedAddress1._lastColumnIndex() > lastCol) {
							newLastCol = mergedAddress1._lastColumnIndex();
						}
						if (mergedAddress1._lastRowIndex() > lastRow) {
							newLastRow = mergedAddress1._lastRowIndex();
						}
					}
					i1 = mergedAddress1._lastColumnIndex();
				}
			}
		}
		if ($.ig.util.nullableEquals(firstCol, colIndexBefore)) {
			for (var i2 = firstRow; i2 < lastRow; i2++) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, i2, firstCol), region); region = $ret.p1; return $ret.ret; }())) {
					var mergedAddress2 = region._address();
					if (this._doesCellHaveValue(region)) {
						if (mergedAddress2._firstRowIndex() < firstRow) {
							newFirstRow = mergedAddress2._firstRowIndex();
						}
						if (mergedAddress2._lastRowIndex() > lastRow) {
							newLastRow = mergedAddress2._lastRowIndex();
						}
						if (mergedAddress2._firstColumnIndex() < firstCol) {
							newFirstCol = mergedAddress2._firstColumnIndex();
						}
					}
					i2 = mergedAddress2._lastRowIndex();
				}
			}
		}
		if ($.ig.util.nullableEquals(lastCol, colIndexAfter)) {
			for (var i3 = firstRow; i3 < lastRow; i3++) {
				if ((function () { var $ret = mergedCells.tryGetValue(new $.ig.WorksheetCellAddress(1, i3, lastCol), region); region = $ret.p1; return $ret.ret; }())) {
					var mergedAddress3 = region._address();
					if (this._doesCellHaveValue(region)) {
						if (mergedAddress3._firstRowIndex() < firstRow) {
							newFirstRow = mergedAddress3._firstRowIndex();
						}
						if (mergedAddress3._lastRowIndex() > lastRow) {
							newLastRow = mergedAddress3._lastRowIndex();
						}
						if (mergedAddress3._lastColumnIndex() > lastCol) {
							newLastCol = mergedAddress3._lastColumnIndex();
						}
					}
					i3 = mergedAddress3._lastRowIndex();
				}
			}
		}
		if ($.ig.util.nullableLessThanOrEqual(newFirstRow, rowIndexBefore) || $.ig.util.nullableGreaterThanOrEqual(newLastRow, rowIndexAfter) || $.ig.util.nullableLessThanOrEqual(newFirstCol, colIndexBefore) || $.ig.util.nullableGreaterThanOrEqual(newLastCol, colIndexAfter)) {
			var excelRange = new $.ig.WorksheetRegionAddress(1, newFirstRow, newLastRow, newFirstCol, newLastCol);
			var $ret = this.___worksheet._extendRegionForMergedCells(excelRange, null);
			excelRange = $ret.p0;
			newFirstRow = excelRange._firstRowIndex();
			newFirstCol = excelRange._firstColumnIndex();
			newLastRow = excelRange._lastRowIndex();
			newLastCol = excelRange._lastColumnIndex();
		}
		firstRow = newFirstRow;
		firstCol = newFirstCol;
		lastRow = newLastRow;
		lastCol = newLastCol;
		return {
			p0: firstRow,
			p1: firstCol,
			p2: lastRow,
			p3: lastCol
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CheckCellsWithDataForMergedCells(System.Int32, System.Int32, System.Int32, System.Int32, System.Nullable, System.Nullable, System.Nullable, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CheckCellsWithDataForRow(System.Int32, System.Int32, System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRowCollection, System.Nullable, System.Nullable)" />*/
	_checkCellsWithDataForRow: function (rowToCheck, row, firstCol, lastCol, rows, colBefore, colAfter) {
		if (rows._getIfCreated(rowToCheck) != null) {
			if ($.ig.util.nullableNotEquals(colBefore, null) && this._doesCellHaveValue1(rowToCheck, colBefore.value())) {
				row = rowToCheck;
				firstCol = colBefore.value();
			}
			if ($.ig.util.nullableNotEquals(colAfter, null) && this._doesCellHaveValue1(rowToCheck, colAfter.value())) {
				row = rowToCheck;
				lastCol = colAfter.value();
			}
			if (row != rowToCheck) {
				for (var i = firstCol; i <= lastCol; i++) {
					if (this._doesCellHaveValue1(rowToCheck, i)) {
						row = rowToCheck;
						break;
					}
				}
			}
		}
		return {
			p1: row,
			p2: firstCol,
			p3: lastCol
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CheckCellsWithDataForRow(System.Int32, System.Int32, System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRowCollection, System.Nullable, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ConvertPixelsToTwips(System.Double)" />*/
	_convertPixelsToTwips: function (pixels) {
		if (this.__ownerState._usesLogicalPixels()) {
			return $.ig.SpreadsheetUtilities.prototype.convertLogicalPixelsToTwips(pixels);
		}
		return $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero($.ig.excel.Workbook.prototype._convertPixelsToTwips(this.___worksheet.workbook(), pixels, false)));
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ConvertPixelsToTwips(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ConvertTwipsToPixels(System.Double, System.Boolean)" />*/
	_convertTwipsToPixels: function (twips, vertical) {
		if (this.__ownerState._usesLogicalPixels()) {
			return $.ig.SpreadsheetUtilities.prototype.convertTwipsToLogicalPixels(twips);
		}
		return $.ig.excel.Workbook.prototype._convertTwipsToPixels(this.___worksheet.workbook(), twips, vertical, false);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ConvertTwipsToPixels(System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CreateDisplayTextMetricsProvider()" />*/
	_createDisplayTextMetricsProvider: function () {
		if (this.__ownerState._renderCache() != null) {
			return this.__ownerState._renderCache().createDisplayTextMetricsProvider();
		}
		return $.ig.excel.Workbook.prototype._createDefaultTextMetricsProvider(this.___worksheet.workbook());
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.TextMetricsProviderBase Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CreateDisplayTextMetricsProvider()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CreateInternalFlagNamesMap()" />*/
	_createInternalFlagNamesMap: function () {
		var flagNames = new $.ig.Dictionary$2($.ig.SpreadsheetPaneManager_InternalFlags.prototype.$type, String, 0);
		var en = $.ig.CoreUtilities.prototype.getEnumValues$1($.ig.SpreadsheetPaneManager_InternalFlags.prototype.$type).getEnumerator();
		while (en.moveNext()) {
			var value = en.current();
			flagNames.item(value, $.ig.SpreadsheetPaneManager_InternalFlags.prototype.$getName(value));
		}
		return flagNames;
	}
	/*<EndMethod Name="System.Collections.Generic.Dictionary Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::CreateInternalFlagNamesMap()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesAdjacentCellMatchCriteria(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_doesAdjacentCellMatchCriteria: function (cell, isHorizontalNavigation, navigationType, unlockedOnly, maxRange) {
		if (!maxRange._contains(cell)) {
			return false;
		}
		if (unlockedOnly && !this._isUnlocked3(cell.row(), cell.column())) {
			return false;
		}
		if (isHorizontalNavigation) {
			if ($.ig.util.nullableEquals($.ig.SpreadsheetPaneManager.prototype._getFirstVisibleColumn(cell.column(), cell.column(), this.___worksheet), null)) {
				return false;
			}
		} else {
			if ($.ig.util.nullableEquals($.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(cell.row(), cell.row(), this.___worksheet), null)) {
				return false;
			}
		}
		switch (navigationType) {
			case $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData: return this._doesCellHaveValue1(cell.row(), cell.column());
			case $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData:
				$.ig.Debug.prototype.fail("Not sure this is how we're expecting it to work as we don't currently have a use case for this scenario.");
				return this._doesCellHaveValue1(cell.row(), cell.column()) || this._getContainingTable(cell.row(), cell.column()) != null;
			case $.ig.SpreadsheetCellNavigationType.prototype.visibleCells: return true;
			default:
				$.ig.Debug.prototype.fail("Unrecognized navigation type:" + $.ig.SpreadsheetCellNavigationType.prototype.getBox(navigationType));
				return true;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::DoesAdjacentCellMatchCriteria(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnforceUnlockedCellSelectionMode()" />*/
	_enforceUnlockedCellSelectionMode: function () {
		if (this._getUnlockedCellSelectionModePendingAction() == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell) {
			var pane = this.activePane();
			var selection = pane != null ? pane.selection() : null;
			if (selection != null) {
				this._moveToAdjacentCell($.ig.Direction.prototype.right, $.ig.SpreadsheetCellNavigationType.prototype.visibleCells, false);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnforceUnlockedCellSelectionMode()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnumerateFormats(Infragistics.Documents.Excel.Worksheet, System.Int32, System.Int32, System.Int32, System.Int32, System.Func)" />*/
	_enumerateFormats: function (ws, startRow, startColumn, endRow, endColumn, formatCallback) {
		var expectedRowIndex = startRow;
		var hasRowGaps = false;
		var en = ws.rows()._getItemsInRange(startRow, endRow).getEnumerator();
		while (en.moveNext()) {
			var row = en.current();
			var rowIndex = row.index();
			if (expectedRowIndex != rowIndex) {
				hasRowGaps = true;
			} else {
				expectedRowIndex++;
			}
			var columnBlock;
			var expectedColIndex = startColumn;
			var hasRowFormat = row._hasCellFormat();
			var needsProcessRowFormat = false;
			var en1 = row._getCellsWithData(startColumn, endColumn).getEnumerator();
			while (en1.moveNext()) {
				var fm = en1.current();
				if (fm.hasFormat() == false) {
					continue;
				}
				if (expectedColIndex != fm.columnIndex()) {
					if (hasRowFormat) {
						needsProcessRowFormat = true;
					} else {
						for (var i = expectedColIndex, end = fm.columnIndex(); i < end; i++) {
							columnBlock = ws._getColumnBlock(i);
							if (!formatCallback(columnBlock.cellFormat())) {
								return false;
							}
							i = columnBlock.lastColumnIndex();
						}
					}
				}
				if (!formatCallback(fm.cellFormatData())) {
					return false;
				}
				expectedColIndex = fm.columnIndex() + 1;
			}
			if (expectedColIndex <= endColumn) {
				if (hasRowFormat) {
					needsProcessRowFormat = true;
				} else {
					for (var i1 = expectedColIndex; i1 <= endColumn; i1++) {
						columnBlock = ws._getColumnBlock(i1);
						if (!formatCallback(columnBlock.cellFormat())) {
							return false;
						}
						i1 = columnBlock.lastColumnIndex();
					}
				}
			}
			if (needsProcessRowFormat && !formatCallback(row._cellFormatInternal().element())) {
				return false;
			}
		}
		if (expectedRowIndex != endRow + 1) {
			hasRowGaps = true;
		}
		if (hasRowGaps) {
			var columnBlockIndex = ws._getColumnBlockIndex(startColumn);
			var columnBlocks = ws._columnBlocks();
			var columnBlock1 = columnBlocks.__inner[columnBlockIndex];
			for (var i2 = columnBlockIndex; i2 < columnBlocks.count(); i2++) {
				columnBlock1 = columnBlocks.__inner[i2];
				if (!formatCallback(columnBlock1.cellFormat())) {
					return false;
				}
				if (columnBlock1.lastColumnIndex() >= endColumn) {
					break;
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::EnumerateFormats(Infragistics.Documents.Excel.Worksheet, System.Int32, System.Int32, System.Int32, System.Int32, System.Func)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ExtendRangeForMergedCells(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Collections.Generic.HashSet)" />*/
	_extendRangeForMergedCells1: function (worksheet, range, intersectingRegions) {
		var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
		var $ret = worksheet._extendRegionForMergedCells(excelRange, intersectingRegions);
		excelRange = $ret.p0;
		return $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(excelRange);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ExtendRangeForMergedCells(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, System.Collections.Generic.HashSet)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentCell(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Boolean, System.Nullable, System.Boolean)" />*/
	_getAdjacentCell: function (startingCell, direction, navigationType, unlockedOnly, navigationRange, considerStartingCell) {
		var maxRange = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null);
		$.ig.Debug.prototype.assert1($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality_Lifted(navigationRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null)) || navigationRange.value()._contains(startingCell), "The specified range used for navigation should contain the cell we're starting with.");
		if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality_Lifted(navigationRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
			maxRange = navigationRange;
		} else if (unlockedOnly) {
			this._verifyUsedRange();
			var keepTopLeft = this.___worksheet.protection().selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.allCells;
			maxRange = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, new $.ig.spreadsheet.SpreadsheetCellRange(keepTopLeft ? 0 : this.___actualUsedRangeAddress.firstRow(), keepTopLeft ? 0 : this.___actualUsedRangeAddress.firstColumn(), this.___actualUsedRangeAddress.lastRow() + (keepTopLeft ? 0 : 1), this.___actualUsedRangeAddress.lastColumn() + (keepTopLeft ? 0 : 1)));
		}
		var range = !$.ig.util.nullableIsNull(maxRange) ? maxRange.value() : new $.ig.spreadsheet.SpreadsheetCellRange(startingCell.row(), startingCell.column());
		var isHorizontal = direction == $.ig.Direction.prototype.left || direction == $.ig.Direction.prototype.right;
		var newCell;
		if (considerStartingCell && this._doesAdjacentCellMatchCriteria(startingCell, isHorizontal, navigationType, unlockedOnly, range)) {
			return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, startingCell);
		}
		do {
			newCell = this._getAdjacentCellImpl(startingCell, direction, navigationType, maxRange, unlockedOnly);
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(newCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) && unlockedOnly && !range._contains(newCell.value())) {
				newCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
			}
			if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(newCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null)) || unlockedOnly == false) {
				break;
			}
			switch (direction) {
				case $.ig.Direction.prototype.right:
					{
						var row = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(startingCell.row() + 1, range.lastRow(), this.___worksheet);
						if ($.ig.util.nullableEquals(row, null) && $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality_Lifted(navigationRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
							row = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(range.firstRow(), startingCell.row(), this.___worksheet);
						}
						if ($.ig.util.nullableEquals(row, null) || ($.ig.util.nullableEquals(row, startingCell.row()) && startingCell.column() <= range.firstColumn())) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						startingCell = new $.ig.spreadsheet.SpreadsheetCell(row.value(), range.firstColumn());
						break;
					}
				case $.ig.Direction.prototype.left:
					{
						var row1 = this._getLastVisibleRow(range.firstRow(), startingCell.row() - 1);
						if ($.ig.util.nullableEquals(row1, null) && $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality_Lifted(navigationRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
							row1 = this._getLastVisibleRow(startingCell.row(), range.lastRow());
						}
						if ($.ig.util.nullableEquals(row1, null) || ($.ig.util.nullableEquals(row1, startingCell.row()) && startingCell.column() >= range.lastColumn())) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						startingCell = new $.ig.spreadsheet.SpreadsheetCell(row1.value(), range.lastColumn());
						break;
					}
				case $.ig.Direction.prototype.down:
					{
						var col = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleColumn(startingCell.column() + 1, range.lastColumn(), this.___worksheet);
						if ($.ig.util.nullableEquals(col, null) && $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality_Lifted(navigationRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
							col = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleColumn(range.firstColumn(), startingCell.column(), this.___worksheet);
						}
						if ($.ig.util.nullableEquals(col, null) || ($.ig.util.nullableEquals(col, startingCell.column()) && startingCell.row() <= range.firstRow())) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						startingCell = new $.ig.spreadsheet.SpreadsheetCell(range.firstRow(), col.value());
						break;
					}
				case $.ig.Direction.prototype.up:
					{
						var col1 = this._getLastVisibleColumn(range.firstColumn(), startingCell.column() - 1);
						if ($.ig.util.nullableEquals(col1, null) && $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Equality_Lifted(navigationRange, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
							col1 = this._getLastVisibleColumn(startingCell.column(), range.lastColumn());
						}
						if ($.ig.util.nullableEquals(col1, null) || ($.ig.util.nullableEquals(col1, startingCell.column()) && startingCell.row() >= range.lastRow())) {
							return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						}
						startingCell = new $.ig.spreadsheet.SpreadsheetCell(range.lastRow(), col1.value());
						break;
					}
			}
			if (this._doesAdjacentCellMatchCriteria(startingCell, isHorizontal, navigationType, true, range)) {
				return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, startingCell);
			}
		} while (unlockedOnly);
		return newCell;
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentCell(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Boolean, System.Nullable, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentCellImpl(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Nullable, System.Boolean)" />*/
	_getAdjacentCellImpl: function (startingCell, direction, navigationType, maxRange, unlockedOnly) {
		var newCell;
		switch (navigationType) {
			default:
			case $.ig.SpreadsheetCellNavigationType.prototype.visibleCells:
				newCell = this._getCellInDirection(startingCell.row(), startingCell.column(), direction, maxRange, false, unlockedOnly);
				break;
			case $.ig.SpreadsheetCellNavigationType.prototype.visibleCellsWithData:
				newCell = this._getCellWithDataInDirection(startingCell.row(), startingCell.column(), direction, maxRange, unlockedOnly, !unlockedOnly);
				break;
			case $.ig.SpreadsheetCellNavigationType.prototype.edgeVisibleCellsWithData:
				{
					var startingTable = this._getContainingTable(startingCell.row(), startingCell.column());
					if (!this._doesCellHaveValue1(startingCell.row(), startingCell.column()) && startingTable == null) {
						newCell = this._getCellWithDataInDirection(startingCell.row(), startingCell.column(), direction, maxRange, unlockedOnly, true);
					} else {
						var adjacentCell = this._getCellInDirection(startingCell.row(), startingCell.column(), direction, maxRange, true, unlockedOnly);
						if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(adjacentCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
							newCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null);
						} else {
							var row = adjacentCell.value().row();
							var col = adjacentCell.value().column();
							var nextTable = this._getContainingTable(row, col);
							if (!this._doesCellHaveValue1(row, col) && (startingTable != nextTable || startingTable == null)) {
								if (nextTable != null) {
									newCell = adjacentCell;
								} else {
									newCell = this._getCellWithDataInDirection(row, col, direction, maxRange, unlockedOnly, true);
								}
							} else {
								var nextCellHasData = false;
								do {
									newCell = this._getCellInDirection(row, col, direction, maxRange, true, unlockedOnly);
									if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Equality_Lifted(newCell, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
										break;
									}
									nextTable = this._getContainingTable(newCell.value().row(), newCell.value().column());
									if (startingTable != nextTable) {
										break;
									}
									nextCellHasData = this._doesCellHaveValue1(newCell.value().row(), newCell.value().column());
									if (!nextCellHasData && (startingTable != nextTable || startingTable == null)) {
										break;
									}
									row = newCell.value().row();
									col = newCell.value().column();
									if (nextCellHasData && startingTable != null) {
										break;
									}
								} while (true);
								newCell = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, new $.ig.spreadsheet.SpreadsheetCell(row, col));
							}
						}
					}
					break;
				}
		}
		return newCell;
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentCellImpl(Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellNavigationType, System.Nullable, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentVisibleColumn(System.Int32, System.Boolean)" />*/
	_getAdjacentVisibleColumn: function (startIndex, next) {
		return next ? this._getNextVisibleColumn(startIndex) : this._getPreviousVisibleColumn(startIndex);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentVisibleColumn(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentVisibleRow(System.Int32, System.Boolean)" />*/
	_getAdjacentVisibleRow: function (startIndex, next) {
		return next ? this._getNextVisibleRow(startIndex) : this._getPreviousVisibleRow(startIndex);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetAdjacentVisibleRow(System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellForActiveCellSplit()" />*/
	_getCellForActiveCellSplit: function () {
		var activeCell = this.activePane().selection().activeCell();
		var column = activeCell.column();
		var row = activeCell.row();
		var forceUseMiddle = column == this._columns().item(0).startIndex() && row == this._rows().item(0).startIndex();
		var isColumnOutOfView = column < this._columns().item(0).startIndex() || column > this._columns().item(0).endIndex();
		var isRowOutOfView = row < this._rows().item(0).startIndex() || row > this._rows().item(0).endIndex();
		if (forceUseMiddle || isColumnOutOfView || isRowOutOfView) {
			if (isColumnOutOfView || forceUseMiddle || (isRowOutOfView && column != this._columns().item(0).startIndex())) {
				var colOffset = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(this._columns().item(0)._scrollInfo()._offset() + this._columns().item(0)._scrollInfo()._viewport() / 2));
				var colPos = this._getColumnPositionFromOffset(colOffset);
				if (colOffset > (colPos._offset() + $.ig.intDivide(colPos._extent(), 2))) {
					colPos = this._getColumnPositionFromOffset(colPos._end() + 1);
				}
				column = colPos._index();
			}
			if (isRowOutOfView || forceUseMiddle || (isColumnOutOfView && row != this._rows().item(0).startIndex())) {
				var rowOffset = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(this._rows().item(0)._scrollInfo()._offset() + this._rows().item(0)._scrollInfo()._viewport() / 2));
				var rowPos = this.___worksheet._getRowPositionFromOffset(rowOffset);
				if (rowOffset > (rowPos._offset() + $.ig.intDivide(rowPos._extent(), 2))) {
					rowPos = this.___worksheet._getRowPositionFromOffset(rowPos._end() + 1);
				}
				row = rowPos._index();
			}
		}
		return new $.ig.spreadsheet.SpreadsheetCell(row, column);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellForActiveCellSplit()" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellFormatElementReadOnly(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	_getCellFormatElementReadOnly: function (row, rowIndex, column) {
		var format;
		format = this.___worksheet._getCellFormatElementReadOnly(row, column);
		format = this.___worksheet._getTableCellFormatElementReadOnly(format, rowIndex, column) || format;
		return format;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetCellFormatElementReadOnly(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger()" />*/
	_getChangeSelectionLockedStateTrigger: function () {
		var pane = this.activePane();
		var selection = pane != null ? pane.selection() : null;
		var trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
		if (selection != null) {
			this._assertIsTabSelected();
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				var ws = tab._worksheet();
				var en1 = selection.cellRanges().getEnumerator();
				while (en1.moveNext()) {
					var range = en1.current();
					var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
					if ($.ig.util.nullableNotEquals(null, (trigger = this._getChangeSelectionLockedStateTrigger1(ws, range.firstRow(), excelRange)))) {
						return trigger;
					}
					if (range._height() > 1 && $.ig.util.nullableNotEquals(null, (trigger = this._getChangeSelectionLockedStateTrigger1(ws, range.lastRow(), excelRange)))) {
						return trigger;
					}
					var checkLastColumn = range._width() > 1;
					var en2 = ws.rows()._getItemsInRange(range.firstRow(), range.lastRow()).getEnumerator();
					while (en2.moveNext()) {
						var row = en2.current();
						if ($.ig.util.nullableNotEquals(null, (trigger = this._getChangeSelectionLockedStateTrigger3(row, range.firstColumn(), excelRange)))) {
							return trigger;
						}
						if (checkLastColumn && $.ig.util.nullableNotEquals(null, (trigger = this._getChangeSelectionLockedStateTrigger3(row, range.lastColumn(), excelRange)))) {
							return trigger;
						}
					}
				}
			}
		}
		return trigger;
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger()" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(Infragistics.Documents.Excel.Worksheet, System.Int32, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	_getChangeSelectionLockedStateTrigger1: function (ws, rowIndex, range) {
		var row = ws.rows()._getIfCreated(rowIndex);
		if (row != null) {
			var trigger;
			var en = row._getCellsWithData(range._firstColumnIndex(), range._lastColumnIndex()).getEnumerator();
			while (en.moveNext()) {
				var cdc = en.current();
				if ($.ig.util.nullableNotEquals(null, (trigger = this._getChangeSelectionLockedStateTrigger2(row, cdc, range)))) {
					return trigger;
				}
			}
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(Infragistics.Documents.Excel.Worksheet, System.Int32, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(Infragistics.Documents.Excel.WorksheetRow, System.Int32, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	_getChangeSelectionLockedStateTrigger3: function (row, columnIndex, range) {
		var cv = row._getCellValueRaw(columnIndex);
		return this._getChangeSelectionLockedStateTrigger4(cv, range);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(Infragistics.Documents.Excel.WorksheetRow, System.Int32, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(System.Object, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	_getChangeSelectionLockedStateTrigger4: function (cellValueRaw, range) {
		var af = $.ig.util.cast($.ig.ArrayInteriorFormula.prototype.$type, cellValueRaw);
		if (af != null) {
			if (!range._contains1(af._arrayFormula().cellRange()._address())) {
				return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidArrayFormulaLockedState);
			}
		} else {
			var dt = $.ig.util.cast($.ig.DataTableInteriorFormula.prototype.$type, cellValueRaw);
			if (dt != null) {
				if (!range._contains1(dt._dataTable()._interiorCells()._address())) {
					return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, $.ig.spreadsheet.SpreadsheetUserPromptTrigger.changePartOfDataTable);
				}
			}
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(System.Object, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.CellDataContext, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	_getChangeSelectionLockedStateTrigger2: function (row, cdc, range) {
		var trigger = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
		if (cdc.hasValue() && cdc.cellBlock().doesCellUseCalculations(cdc.dataType(), cdc.cellValue())) {
			var cv = cdc.cellBlock().getCellValueRaw1(row, cdc.columnIndex(), null, cdc.dataType(), cdc.cellValue());
			if ($.ig.util.nullableNotEquals(null, (trigger = this._getChangeSelectionLockedStateTrigger4(cv, range)))) {
				return trigger;
			}
		}
		return $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetUserPromptTrigger.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetChangeSelectionLockedStateTrigger(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.CellDataContext, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnHeaderTextA1(System.Int32)" />*/
	_getColumnHeaderTextA1: function (index) {
		return $.ig.CellAddress.prototype.getColumnString1(index, true, $.ig.excel.Workbook.prototype.maxExcel2007ColumnCount, -1, false, $.ig.excel.CellReferenceMode.a1);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnHeaderTextA1(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnHeaderTextR1C1(System.Int32)" />*/
	_getColumnHeaderTextR1C1: function (index) {
		return (index + 1).toString();
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnHeaderTextR1C1(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetItemPosition Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnPositionFromOffset(System.Int64)" />*/
	_getColumnPositionFromOffset: function (offset) {
		var colOffset = Math.max(Math.min(offset, 0x7FFFFFFF), 0);
		return this.___worksheet._getColumnPositionFromOffset(colOffset);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetItemPosition Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnPositionFromOffset(System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnPositions(System.Int32, System.Int64, System.Int32)" />*/
	_getColumnPositions: function (startIndex, availableExtent, maxIndex) {
		$.ig.Debug.prototype.assert(availableExtent <= 0x7FFFFFFF);
		return this.___worksheet._getColumnPositions(startIndex, Math.min(availableExtent, 0x7FFFFFFF), maxIndex);
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetColumnPositions(System.Int32, System.Int64, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetTable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetContainingTable(System.Int32, System.Int32)" />*/
	_getContainingTable: function (row, column) {
		return this.___worksheet._getCellAssociatedTableInternal(row, column);
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetTable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetContainingTable(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetItemPosUnitFromColumnPixels(System.Double)" />*/
	_getItemPosUnitFromColumnPixels: function (pixels) {
		$.ig.Debug.prototype.assert(pixels >= 0);
		pixels *= 1 / this.___pixelSizeX;
		var value = this.___worksheet._convertToCharacter256thsIntHorizontal(pixels, $.ig.excel.WorksheetColumnWidthUnit.pixel, false);
		return value;
	}
	/*<EndMethod Name="System.Int64 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetItemPosUnitFromColumnPixels(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetItemPosUnitFromRowPixels(System.Double)" />*/
	_getItemPosUnitFromRowPixels: function (pixels) {
		$.ig.Debug.prototype.assert(pixels >= 0);
		pixels *= 1 / this.___pixelSizeY;
		var twips = $.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero($.ig.excel.Workbook.prototype._convertPixelsToTwips(this.___worksheet.workbook(), pixels, true)));
		return twips;
	}
	/*<EndMethod Name="System.Int64 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetItemPosUnitFromRowPixels(System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetTable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstIntersectingTable(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	_getFirstIntersectingTable: function (range) {
		var en = this.___worksheet.tables().getEnumerator();
		while (en.moveNext()) {
			var table = en.current();
			var tableAddress = table._wholeTableAddress();
			if (tableAddress._intersectsWith(range)) {
				return table;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetTable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFirstIntersectingTable(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFlag(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags)" />*/
	_getFlag: function (flag) {
		return (this.___flags & flag) != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFlag(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFormattedText(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Double, Infragistics.Controls.IGTextAlignment, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, Infragistics.Documents.Excel.FontUnderlineStyle, System.Boolean)" />*/
	_getFormattedText: function (info, availableWidth, textAlignment, format, canUseFormatForegroundBrush, underlineStyle, isVisitedHyperlink) {
		var renderCache = this.__ownerState._renderCache();
		var availableWidthUsed = info.computedWrapText() || info._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.fill ? availableWidth : 0;
		var includeUnderline = $.ig.TextMetricsProviderBase.prototype._shouldAddUnderlineHeight(underlineStyle);
		if (includeUnderline) {
			var underlineHeight = $.ig.truncate(renderCache.getUnderlineHeight(format, 1 / this.___pixelSizeY));
			info._underlineInfo = $.ig.AccountingUnderlineInfo.prototype.create(underlineHeight, underlineStyle == $.ig.excel.FontUnderlineStyle.singleAccounting, this.___worksheet, info._value, format);
			{
				var metricsProvider = renderCache.getOrCreateDisplayTextMetricsProvider();
				try {
					info._valueHeightForUnderline = metricsProvider._measureText(format, "Wj", $.ig.util.toNullable($.ig.Size.prototype.$type, null), true, true).height() - underlineHeight;
				}
				finally {
					if (metricsProvider != null) {
						metricsProvider.dispose();
					}
				}
			}
		} else {
			info._underlineInfo = null;
		}
		var spreadsheetText;
		var foreground = $.ig.ExcelUtils.prototype.colorEmpty;
		if ($.ig.util.cast($.ig.excel.FormattedString.prototype.$type, info._value) !== null) {
			info.displaysHashes(false);
			info.isInvalidDateTime(false);
			if (isVisitedHyperlink) {
				foreground = $.ig.SpreadsheetUtilities.prototype.getFollowedHyperlinkColor(this.___worksheet.workbook());
			}
			var fs = $.ig.util.cast($.ig.excel.FormattedString.prototype.$type, info._value);
			spreadsheetText = renderCache.createSpreadsheetText(fs, format, availableWidthUsed, textAlignment, info.computedWrapText(), isVisitedHyperlink, this._zoomLevel(), foreground);
			if ($.ig.ExcelUtils.prototype.colorIsEmpty(foreground)) {
				foreground = $.ig.ExcelUtils.prototype.toNative(new $.ig.FormattedStringFontResolved(fs._getFont(0), format).colorInfo()._getResolvedColorInternal(this.___worksheet.workbook(), true, true));
			}
		} else {
			var textParams = new $.ig.GetCellTextParameters(info._columnIndexForValue);
			textParams._textFormatMode = $.ig.excel.TextFormatMode.asDisplayed;
			textParams._preventTextFormattingTypes = $.ig.PreventTextFormattingTypes.prototype.none;
			textParams._metricsProviderFactory = renderCache.getOrCreateDisplayTextMetricsProvider.runOn(renderCache);
			var displayTextResult = info._rowWithValue._getCellTextInternal(textParams);
			var displayText = displayTextResult._text;
			info.isInvalidDateTime($.ig.util.isNaN(displayTextResult._numericValue) == false && displayTextResult.isFormattedAsDate() && $.ig.util.nullableEquals($.ig.excel.ExcelCalcValue.prototype._excelDateToDateTime2(this.___worksheet.workbook(), displayTextResult._numericValue, true, false), null));
			if (!info.computedWrapText()) {
				displayText = $.ig.SpreadsheetUtilities.prototype.stripCarriageReturns(displayText);
			}
			info.displaysHashes($.ig.SpreadsheetUtilities.prototype.areAllHashes(displayText));
			if (displayTextResult._color != null && canUseFormatForegroundBrush) {
				foreground = $.ig.SpreadsheetUtilities.prototype.getFormatColor(displayTextResult._color, this.___worksheet.workbook().palette());
			} else if (isVisitedHyperlink && this._isHyperlinkForeground(format)) {
				foreground = $.ig.SpreadsheetUtilities.prototype.getFollowedHyperlinkColor(this.___worksheet.workbook());
			}
			spreadsheetText = renderCache.createSpreadsheetText1(displayText, format, availableWidthUsed, textAlignment, info.computedWrapText(), isVisitedHyperlink, this._zoomLevel(), foreground);
			if ($.ig.ExcelUtils.prototype.colorIsEmpty(foreground)) {
				foreground = $.ig.ExcelUtils.prototype.toNative(format._fontColorInfoResolved()._getResolvedColorInternal(this.___worksheet.workbook(), true, true));
			}
		}
		info._foreground = foreground;
		return spreadsheetText;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetText Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetFormattedText(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Double, Infragistics.Controls.IGTextAlignment, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean, Infragistics.Documents.Excel.FontUnderlineStyle, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetHasVisitedHyperlink(Infragistics.Documents.Excel.WorksheetHyperlink)" />*/
	_getHasVisitedHyperlink: function (hyperlink) {
		if (hyperlink == null) {
			return $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		} else {
			return $.ig.util.toNullable($.ig.Boolean.prototype.$type, hyperlink._getIsVisitedResolved());
		}
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetHasVisitedHyperlink(Infragistics.Documents.Excel.WorksheetHyperlink)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNewSelectionRange(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.Direction)" />*/
	_getNewSelectionRange: function (direction, activeCell, selectedRange, targetCell, directionToBringIntoView) {
		var activeCellRange = this._getCellRange1(activeCell.row(), activeCell.column());
		var endRange = this._getCellRange1(targetCell.row(), targetCell.column());
		var newSelectionRange = new $.ig.spreadsheet.SpreadsheetCellRange();
		var isReducingSelectionRange;
		directionToBringIntoView = direction;
		switch (direction) {
			default:
			case $.ig.Direction.prototype.right:
				newSelectionRange = new $.ig.spreadsheet.SpreadsheetCellRange(selectedRange.firstRow(), Math.min(activeCellRange.firstColumn(), endRange.firstColumn()), selectedRange.lastRow(), Math.max(selectedRange.lastColumn(), endRange.lastColumn()));
				isReducingSelectionRange = newSelectionRange.lastColumn() <= selectedRange.lastColumn();
				break;
			case $.ig.Direction.prototype.left:
				newSelectionRange = new $.ig.spreadsheet.SpreadsheetCellRange(selectedRange.firstRow(), Math.min(selectedRange.firstColumn(), endRange.firstColumn()), selectedRange.lastRow(), Math.max(activeCellRange.lastColumn(), endRange.lastColumn()));
				isReducingSelectionRange = newSelectionRange.firstColumn() >= selectedRange.firstColumn();
				break;
			case $.ig.Direction.prototype.down:
				newSelectionRange = new $.ig.spreadsheet.SpreadsheetCellRange(Math.min(activeCellRange.firstRow(), endRange.firstRow()), selectedRange.firstColumn(), Math.max(selectedRange.lastRow(), endRange.lastRow()), selectedRange.lastColumn());
				isReducingSelectionRange = newSelectionRange.lastRow() <= selectedRange.lastRow();
				break;
			case $.ig.Direction.prototype.up:
				newSelectionRange = new $.ig.spreadsheet.SpreadsheetCellRange(Math.min(selectedRange.firstRow(), endRange.firstRow()), selectedRange.firstColumn(), Math.max(activeCellRange.lastRow(), endRange.lastRow()), selectedRange.lastColumn());
				isReducingSelectionRange = newSelectionRange.firstRow() >= selectedRange.firstRow();
				break;
		}
		if (isReducingSelectionRange) {
			newSelectionRange = this._reduceRangeForIntersectingMergedCells(newSelectionRange);
			newSelectionRange = newSelectionRange.union(this._getCellRange1(activeCell.row(), activeCell.column()));
			directionToBringIntoView = $.ig.SpreadsheetUtilities.prototype.flipDirection(direction);
		} else {
			newSelectionRange = this.extendRangeForMergedCells(newSelectionRange);
		}
		return {
			ret: newSelectionRange,
			p4: directionToBringIntoView
		};
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNewSelectionRange(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.Direction)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPane(Infragistics.Documents.Excel.PaneLocation)" />*/
	_getPane1: function (location) {
		if (this._panes().count() == 0) {
			return null;
		}
		switch (location) {
			default:
			case $.ig.PaneLocation.prototype.topLeft:
				return this._getPane2(0, 0);
			case $.ig.PaneLocation.prototype.topRight: return this._getPane2(0, this._columns().count() - 1);
			case $.ig.PaneLocation.prototype.bottomLeft: return this._getPane2(this._rows().count() - 1, 0);
			case $.ig.PaneLocation.prototype.bottomRight: return this._getPane2(this._rows().count() - 1, this._columns().count() - 1);
		}
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPane(Infragistics.Documents.Excel.PaneLocation)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneLocation(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	_getPaneLocation: function (pane) {
		if (pane == null) {
			return $.ig.util.toNullable($.ig.PaneLocation.prototype.$type, null);
		}
		var rowIndex = this._rows().indexOf(pane.rowScrollRegion());
		var colIndex = this._columns().indexOf(pane.columnScrollRegion());
		if (rowIndex == 1) {
			return $.ig.util.toNullable($.ig.PaneLocation.prototype.$type, colIndex == 1 ? $.ig.PaneLocation.prototype.bottomRight : $.ig.PaneLocation.prototype.bottomLeft);
		} else if (colIndex == 1) {
			return $.ig.util.toNullable($.ig.PaneLocation.prototype.$type, $.ig.PaneLocation.prototype.topRight);
		} else {
			return $.ig.util.toNullable($.ig.PaneLocation.prototype.$type, $.ig.PaneLocation.prototype.topLeft);
		}
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneLocation(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneToActivate(System.Nullable)" />*/
	_getPaneToActivate: function (next) {
		var paneCount = this._panes().count();
		if (paneCount == 0) {
			return null;
		}
		this.___worksheet.displayOptions()._verifySelectionInfo();
		var worksheetPane = this._getPane1(this.___worksheet.displayOptions()._activePane());
		if (worksheetPane != null && worksheetPane != this.activePane()) {
			return worksheetPane;
		}
		var idx = this._panes().indexOf(this.activePane());
		if (this.___worksheet.displayOptions().panesAreFrozen()) {
			idx = paneCount - 1;
		} else if (idx < 0 || paneCount == 1) {
			idx = 0;
		} else if ($.ig.util.nullableEquals(next, null)) {
		} else if (paneCount == 2) {
			idx = idx == 0 ? 1 : 0;
		} else {
			var target = next.value() ? [ 1, 3, 0, 2 ] : [ 2, 0, 3, 1 ];
			idx = target[idx];
		}
		return this._panes().item(idx);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPaneToActivate(System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPixelsFromColumnItemPosUnits(System.Int64)" />*/
	_getPixelsFromColumnItemPosUnits: function (units) {
		$.ig.Debug.prototype.assert(units <= 0x7FFFFFFF);
		var negate = units < 0;
		var pixels = this.___worksheet._convertFromCharacter256thsIntHorizontal(Math.abs(units), $.ig.excel.WorksheetColumnWidthUnit.pixel, false);
		pixels *= this.___pixelSizeX;
		if (negate) {
			pixels = -pixels;
		}
		return pixels;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPixelsFromColumnItemPosUnits(System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPixelsFromRowItemPosUnits(System.Int64)" />*/
	_getPixelsFromRowItemPosUnits: function (units) {
		var negate = units < 0;
		var wb = this.___worksheet.workbook();
		var pixels = this._convertTwipsToPixels(Math.abs(units), true);
		if (negate) {
			pixels = -pixels;
		}
		return pixels;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPixelsFromRowItemPosUnits(System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Int16 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousClippingColumn(System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Nullable)" />*/
	_getPreviousClippingColumn: function (edgeIndex, row, minIndex, alignmentToMatch) {
		var nextColWithValue = $.ig.util.toNullable($.ig.Number.prototype.$type, edgeIndex);
		do {
			nextColWithValue = row._getNextOrPreviousCellWithValue(nextColWithValue.value(), false);
			if ($.ig.util.nullableEquals(nextColWithValue, null) || $.ig.util.nullableLessThan(nextColWithValue, minIndex)) {
				break;
			}
		} while (this.___worksheet._getColumnBlock(nextColWithValue.value()).hidden());
		var endColumnIndex;
		if ($.ig.util.nullableNotEquals(nextColWithValue, null)) {
			endColumnIndex = Math.max(nextColWithValue.value() + 1, minIndex);
		} else {
			endColumnIndex = minIndex;
		}
		for (var i = (edgeIndex - 1), last = endColumnIndex; i >= last; i--) {
			if (this.___worksheet._getCellAssociatedMergedCellsRegion(row.index(), i) != null) {
				endColumnIndex = i + 1;
				break;
			}
			var columnBlock = this.___worksheet._getColumnBlock(i);
			if (columnBlock.hidden()) {
				i = columnBlock.firstColumnIndex();
			} else if ($.ig.util.nullableNotEquals(alignmentToMatch, null)) {
				var format = row._getCellFormatInternal1(i);
				if ($.ig.util.nullableNotEquals(format.alignment(), alignmentToMatch)) {
					endColumnIndex = i + 1;
					break;
				}
			}
		}
		return endColumnIndex;
	}
	/*<EndMethod Name="System.Int16 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPreviousClippingColumn(System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetRangeSize(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getRangeSize: function (range) {
		if (range.isEmpty()) {
			return $.ig.Size.prototype.empty();
		}
		var firstCol = this.___worksheet._getColumnPosition(range.firstColumn());
		var lastCol = this.___worksheet._getColumnPosition(range.lastColumn());
		var width = (lastCol._end()) + firstCol._offset();
		var firstRow = this.___worksheet._getRowPosition(range.firstRow());
		var lastRow = this.___worksheet._getRowPosition(range.lastRow());
		var height = (lastRow._end()) + firstRow._offset();
		return new $.ig.Size(1, width, height);
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetRangeSize(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetProtectedSelectionMode Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetResolvedCellSelectionMode()" />*/
	_getResolvedCellSelectionMode: function () {
		if (this.___worksheet.isProtected()) {
			return this.___worksheet.protection().selectionMode();
		}
		return $.ig.excel.WorksheetProtectedSelectionMode.allCells;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetProtectedSelectionMode Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetResolvedCellSelectionMode()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetRowHeaderTextA1(System.Int32)" />*/
	_getRowHeaderTextA1: function (index) {
		return $.ig.CellAddress.prototype.getRowString1(index, true, $.ig.excel.Workbook.prototype.maxExcel2007RowCount, -1, false, $.ig.excel.CellReferenceMode.a1);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetRowHeaderTextA1(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetRowHeaderTextR1C1(System.Int32)" />*/
	_getRowHeaderTextR1C1: function (index) {
		return (index + 1).toString();
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetRowHeaderTextR1C1(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextTableRangeInDirection(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_getNextTableRangeInDirection: function (row, column, direction, maxRange) {
		var horz = direction == $.ig.Direction.prototype.left || direction == $.ig.Direction.prototype.right;
		var near = direction == $.ig.Direction.prototype.left || direction == $.ig.Direction.prototype.up;
		var nearestRange = $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), null);
		var delta = 0x7FFFFFFF;
		var en = this.___worksheet.tables().getEnumerator();
		while (en.moveNext()) {
			var table = en.current();
			var tableAddress = table._wholeTableAddress();
			if (horz) {
				if (tableAddress._firstRowIndex() > row || tableAddress._lastRowIndex() < row) {
					continue;
				}
				if (near && tableAddress._firstColumnIndex() >= column) {
					continue;
				} else if (!near && tableAddress._lastColumnIndex() <= column) {
					continue;
				}
				if (near && tableAddress._lastColumnIndex() < maxRange.firstColumn()) {
					continue;
				} else if (!near && tableAddress._firstColumnIndex() > maxRange.lastColumn()) {
					continue;
				}
				var firstVisible = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleColumn(tableAddress._firstColumnIndex(), tableAddress._lastColumnIndex(), this.___worksheet);
				if ($.ig.util.nullableEquals(firstVisible, null)) {
					continue;
				}
				if (near && $.ig.util.nullableGreaterThanOrEqual(firstVisible, column)) {
					continue;
				}
				var tempDelta = (near ? column - tableAddress._lastColumnIndex() : tableAddress._firstColumnIndex() - column);
				if (tempDelta < delta) {
					var lastVisible = this._getLastVisibleColumn(firstVisible.value(), tableAddress._lastColumnIndex());
					if (!near && $.ig.util.nullableLessThanOrEqual(lastVisible, column)) {
						continue;
					}
					delta = tempDelta;
					nearestRange = $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, firstVisible.value(), lastVisible.value()));
				}
			} else {
				if (tableAddress._firstColumnIndex() > column || tableAddress._lastColumnIndex() < column) {
					continue;
				}
				if (near && tableAddress._firstRowIndex() >= row) {
					continue;
				} else if (!near && tableAddress._lastRowIndex() <= row) {
					continue;
				}
				if (near && tableAddress._lastRowIndex() < maxRange.firstRow()) {
					continue;
				} else if (!near && tableAddress._firstRowIndex() > maxRange.lastRow()) {
					continue;
				}
				var firstVisible1 = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleRow(tableAddress._firstRowIndex(), tableAddress._lastRowIndex(), this.___worksheet);
				if ($.ig.util.nullableEquals(firstVisible1, null)) {
					continue;
				}
				if (near && $.ig.util.nullableGreaterThanOrEqual(firstVisible1, row)) {
					continue;
				}
				var tempDelta1 = (near ? row - tableAddress._lastRowIndex() : tableAddress._firstRowIndex() - row);
				if (tempDelta1 < delta) {
					var lastVisible1 = this._getLastVisibleRow(firstVisible1.value(), tableAddress._lastRowIndex());
					if (!near && $.ig.util.nullableLessThanOrEqual(lastVisible1, row)) {
						continue;
					}
					delta = tempDelta1;
					nearestRange = $.ig.util.toNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), new $.ig.Range$1($.ig.Number.prototype.$type, 1, firstVisible1.value(), lastVisible1.value()));
				}
			}
		}
		return nearestRange;
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetNextTableRangeInDirection(System.Int32, System.Int32, Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ChangeActions Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetUnlockedCellSelectionModePendingAction()" />*/
	_getUnlockedCellSelectionModePendingAction: function () {
		if (this.___worksheet.isProtected() && this.___worksheet.protection().selectionMode() == $.ig.excel.WorksheetProtectedSelectionMode.unlockedCells) {
			var activePane = this.activePane();
			var selection = activePane != null ? activePane.selection() : null;
			if (selection != null && !this._canSelect(selection.activeCell())) {
				return $.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell;
			}
		}
		return $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_ChangeActions Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetUnlockedCellSelectionModePendingAction()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetVisibleColumns(System.Int32, System.Int64)" />*/
	_getVisibleColumns: function (startIndex, extent) {
		return this.___worksheet._getColumnPositions(startIndex, extent, 0x7FFFFFFF);
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetVisibleColumns(System.Int32, System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetVisibleRows(System.Int32, System.Int64)" />*/
	_getVisibleRows: function (startIndex, extent) {
		return this.___worksheet._getRowPositions(startIndex, extent, 0x7FFFFFFF);
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetVisibleRows(System.Int32, System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HideColumns(System.Boolean)" />*/
	_hideColumns: function (hide) {
		var pane = this.activePane();
		var selection = pane.selection();
		var collection = selection._allColumns();
		this._assertIsTabSelected();
		if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.formatColumns), true)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			var en1 = collection.getEnumerator();
			while (en1.moveNext()) {
				var range = en1.current();
				var count = (range.__end - range.__start) + 1;
				if (hide) {
					ws.hideColumns($.ig.util.toNullable($.ig.Number.prototype.$type, range.__start), $.ig.util.toNullable($.ig.Number.prototype.$type, count));
				} else {
					ws.unhideColumns($.ig.util.toNullable($.ig.Number.prototype.$type, range.__start), $.ig.util.toNullable($.ig.Number.prototype.$type, count));
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HideColumns(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HideRows(System.Boolean)" />*/
	_hideRows: function (hide) {
		var pane = this.activePane();
		var selection = pane.selection();
		this._assertIsTabSelected();
		if ($.ig.util.nullableNotEquals(this._getSelectedTabProtectionState($.ig.WorksheetProtectionType.prototype.formatRows), true)) {
			this.___onPrompt(new $.ig.SpreadsheetUserPromptInfo($.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange, null, null, null, false));
			return;
		}
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			var en1 = selection._allRows().getEnumerator();
			while (en1.moveNext()) {
				var range = en1.current();
				var count = (range.__end - range.__start) + 1;
				if (hide) {
					ws.hideRows($.ig.util.toNullable($.ig.Number.prototype.$type, range.__start), $.ig.util.toNullable($.ig.Number.prototype.$type, count));
				} else {
					ws.unhideRows($.ig.util.toNullable($.ig.Number.prototype.$type, range.__start), $.ig.util.toNullable($.ig.Number.prototype.$type, count));
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::HideRows(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeDpi()" />*/
	_initializeDpi: function () {
		this.___dpiX = $.ig.excel.Workbook.prototype._getScreenDpi(this.___worksheet.workbook(), false);
		this.___dpiY = $.ig.excel.Workbook.prototype._getScreenDpi(this.___worksheet.workbook(), true);
		if (this.__ownerState._usesLogicalPixels()) {
			this.___pixelSizeX = $.ig.SpreadsheetUtilities.prototype.logicalPixelSize / this.___dpiX;
			this.___pixelSizeY = $.ig.SpreadsheetUtilities.prototype.logicalPixelSize / this.___dpiY;
		} else {
			this.___pixelSizeY = this.___pixelSizeX = 1;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeDpi()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeFormatter(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Nullable, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	_initializeFormatter: function (info, hasVisitedHyperlink, format, canUseFormatForegroundBrush) {
		var alignment = format._alignmentResolved();
		if (alignment == $.ig.excel.HorizontalCellAlignment.general) {
			alignment = $.ig.SpreadsheetUtilities.prototype.getGeneralAlignment(info._value, format, this.___worksheet.workbook());
		}
		info._horizontalAlignment = alignment;
		info._bottomIndent = format._computedBottomIndent();
		info._leftIndent = format._computedLeftIndent();
		info._rightIndent = format._computedRightIndent();
		info._topIndent = format._computedTopIndent();
		info._rotation = format._computedRotation();
		info.shrinkToFit(format._computedShrinkToFit());
		info._verticalAlignment = format._computedVerticalAlignment();
		info.computedWrapText(format._computedWrapText());
		info.wrapText($.ig.util.nullableEquals(format._wrapTextResolved(), true));
		if (this.___showFormulasInCells) {
			info._value = info._rowWithValue.getCellFormula(info._columnIndexForValue) || info._rowWithValue._getCellValue1(info._columnIndexForValue);
		} else {
			info._value = info._rowWithValue._getCellValue1(info._columnIndexForValue);
		}
		if (alignment == $.ig.excel.HorizontalCellAlignment.fill && $.ig.util.cast($.ig.excel.FormattedString.prototype.$type, info._value) !== null) {
			info._value = (info._value).unformattedString();
		}
		info._valueStartColumnIndex = info._startColumnIndex;
		info._valueEndColumnIndex = info._endColumnIndex;
		info.hasHyperlink(hasVisitedHyperlink.hasValue());
		if (this.___showFormulasInCells) {
			if (info._value != null && typeof info._value === 'string' == false) {
				alignment = $.ig.excel.HorizontalCellAlignment.left;
			} else {
				if (alignment == $.ig.excel.HorizontalCellAlignment.fill) {
					alignment = $.ig.excel.HorizontalCellAlignment.left;
				}
			}
			info._horizontalAlignment = alignment;
		}
		if (!info.isMergedCell()) {
			switch (info._horizontalAlignment) {
				case $.ig.excel.HorizontalCellAlignment.fill:
				case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
					info._endColumnIndex = info._rowWithValue._getNextClippingColumn(info._columnIndexForValue, this.___maxRangeAddress.lastColumn(), $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, info._horizontalAlignment));
					info._valueEndColumnIndex = info._endColumnIndex;
					break;
			}
		}
		var availableWidth;
		var startPos = this.___worksheet._getColumnPosition(info._valueStartColumnIndex);
		var endPos = startPos;
		var indentWidth = this.___worksheet._indentWidth();
		info._leftIndent *= indentWidth;
		info._rightIndent *= indentWidth;
		var leftIndentBefore = info._leftIndent;
		var rightIndentBefore = info._rightIndent;
		var columnPadding = this.___worksheet._getColumnWidthPadding();
		var leftPadding = $.ig.intDivide(columnPadding, 2);
		if (info.computedWrapText()) {
			info._leftIndent += leftPadding;
			info._rightIndent += (columnPadding - leftPadding);
		} else {
			switch (alignment) {
				case $.ig.excel.HorizontalCellAlignment.left:
				case $.ig.excel.HorizontalCellAlignment.fill:
					info._leftIndent += leftPadding;
					break;
				case $.ig.excel.HorizontalCellAlignment.right:
					info._rightIndent += (columnPadding - leftPadding);
					break;
				case $.ig.excel.HorizontalCellAlignment.distributed:
				case $.ig.excel.HorizontalCellAlignment.justify:
					info._leftIndent += leftPadding;
					info._rightIndent += (columnPadding - leftPadding);
					break;
				case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
				case $.ig.excel.HorizontalCellAlignment.center:
					break;
			}
		}
		if (info._valueEndColumnIndex == info._valueStartColumnIndex) {
			availableWidth = this._getPixelsFromColumnItemPosUnits(startPos._extent()) - (info._leftIndent + info._rightIndent);
		} else {
			endPos = this.___worksheet._getColumnPosition(info._valueEndColumnIndex);
			var delta = endPos._end() - startPos._offset();
			availableWidth = this._getPixelsFromColumnItemPosUnits(delta) - (info._leftIndent + info._rightIndent);
		}
		availableWidth -= this.___pixelSizeX;
		var originalAvailableWidth = availableWidth;
		if (availableWidth < 1) {
			availableWidth = 1;
		}
		var textAlignment = $.ig.SpreadsheetUtilities.prototype.toIGTextAlignment(info._horizontalAlignment);
		var igt = this._getFormattedText(info, availableWidth, textAlignment, format, canUseFormatForegroundBrush, format._fontUnderlineStyleResolved(), $.ig.util.nullableEquals(hasVisitedHyperlink, true));
		info._formattedText = igt;
		if (info.computedWrapText() && info._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.distributed && availableWidth < igt.width()) {
			var width = (originalAvailableWidth + (leftIndentBefore + rightIndentBefore)) - igt.width();
			var newLeftIndent = $.ig.truncate((width / 2));
			var newRightIndent = $.ig.truncate((width - newLeftIndent));
			info._leftIndent -= Math.max(leftIndentBefore - newLeftIndent, 0);
			info._rightIndent -= Math.max(rightIndentBefore - newRightIndent, 0);
		}
		info._clipStartColumnIndex = info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
		if (this.___showFormulasInCells) {
			info._clipStartColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._valueStartColumnIndex);
			info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._valueEndColumnIndex);
		} else if (!info.computedWrapText() && !info.shrinkToFit()) {
			switch (info._horizontalAlignment) {
				case $.ig.excel.HorizontalCellAlignment.fill:
					if (availableWidth < igt.width()) {
						info._clipStartColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._valueStartColumnIndex);
						info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._valueEndColumnIndex);
					}
					break;
				case $.ig.excel.HorizontalCellAlignment.left:
					if (availableWidth < igt.width()) {
						var units = this._getItemPosUnitFromColumnPixels(igt.width());
						info._valueEndColumnIndex = this._getColumnPositionFromOffset(startPos._offset() + this._getItemPosUnitFromColumnPixels(info._leftIndent) + units)._index();
						if (info.isMergedCell()) {
							if (info._valueEndColumnIndex > info._endColumnIndex) {
								info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._endColumnIndex);
							}
						} else {
							var rightEdgeClipIndex = info._rowWithValue._getNextClippingColumn(info._endColumnIndex, info._valueEndColumnIndex, $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, null));
							if (rightEdgeClipIndex < info._valueEndColumnIndex) {
								info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, rightEdgeClipIndex);
							}
						}
					}
					break;
				case $.ig.excel.HorizontalCellAlignment.right:
					if (availableWidth < igt.width()) {
						var units1 = this._getItemPosUnitFromColumnPixels(igt.width());
						var farEdge = endPos._end() - this._getItemPosUnitFromColumnPixels(info._rightIndent);
						info._valueStartColumnIndex = this._getColumnPositionFromOffset(Math.max(farEdge - units1, 0))._index();
						if (info.isMergedCell()) {
							if (info._valueStartColumnIndex < info._startColumnIndex) {
								info._clipStartColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._startColumnIndex);
							}
						} else {
							var leftEdgeClipIndex = this._getPreviousClippingColumn(info._startColumnIndex, info._rowWithValue, info._valueStartColumnIndex, $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, null));
							if (leftEdgeClipIndex > info._valueStartColumnIndex) {
								info._clipStartColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, leftEdgeClipIndex);
							}
						}
					}
					break;
				case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
				case $.ig.excel.HorizontalCellAlignment.center:
					if (availableWidth < igt.width()) {
						var units2 = this._getItemPosUnitFromColumnPixels(igt.width());
						var farEdge1 = endPos._end() - this._getItemPosUnitFromColumnPixels(info._rightIndent);
						var nearEdge = startPos._offset() + this._getItemPosUnitFromColumnPixels(info._leftIndent);
						var middle = nearEdge + $.ig.intDivide((farEdge1 - nearEdge), 2);
						info._valueStartColumnIndex = this._getColumnPositionFromOffset(Math.max(middle - $.ig.intDivide(units2, 2), 0))._index();
						info._valueEndColumnIndex = this._getColumnPositionFromOffset(middle + $.ig.intDivide(units2, 2))._index();
						if (info.isMergedCell()) {
							if (info._valueEndColumnIndex > info._endColumnIndex) {
								info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._endColumnIndex);
							}
							if (info._valueStartColumnIndex < info._startColumnIndex) {
								info._clipStartColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, info._startColumnIndex);
							}
						} else {
							var rightEdgeClipIndex1 = info._rowWithValue._getNextClippingColumn(info._endColumnIndex, info._valueEndColumnIndex, $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, null));
							if (rightEdgeClipIndex1 < info._valueEndColumnIndex) {
								info._clipEndColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, rightEdgeClipIndex1);
							}
							var leftEdgeClipIndex1 = this._getPreviousClippingColumn(info._startColumnIndex, info._rowWithValue, info._valueStartColumnIndex, $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, null));
							if (leftEdgeClipIndex1 > info._valueStartColumnIndex) {
								info._clipStartColumnIndex = $.ig.util.toNullable($.ig.Number.prototype.$type, leftEdgeClipIndex1);
							}
						}
					}
					break;
			}
		}
		var startRow = this.___worksheet._getRowPosition(info._startRowIndex);
		var endRow = info._startRowIndex != info._endRowIndex ? this.___worksheet._getRowPosition(info._endRowIndex) : startRow;
		var heightRaw = endRow._end() - startRow._offset();
		var pixelHeight = Math.max(this._getPixelsFromRowItemPosUnits(heightRaw) - (info._topIndent + info._bottomIndent), 0);
		info.clipRows(pixelHeight < igt.height());
		return info;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeFormatter(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Nullable, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeHeaderProperties()" />*/
	_initializeHeaderProperties: function () {
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHeaderPropertiesChanged, false);
		var areHeadersVisible = this.___worksheet.displayOptions().showRowAndColumnHeaders();
		this._zoomLevel(this.___worksheet.displayOptions().magnificationInNormalView() / 100);
		var wb = this.___worksheet.workbook();
		var headerFont = this.___normalStyleFont = this.___normalStyleFont._create(wb.styles().normalStyle()._styleFormatInternal());
		var selectionMode = this._getResolvedCellSelectionMode();
		for (var i = 0; i < 2; i++) {
			var items = i == 0 ? this._rowItems() : this._columnItems();
			var en = items.getEnumerator();
			while (en.moveNext()) {
				var item = en.current();
				item._areHeadersVisible(areHeadersVisible);
				item._headerFont(headerFont);
				item._zoomLevel(this._zoomLevel());
				item._selectionMode(selectionMode);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeHeaderProperties()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializePositions(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double, System.Double, System.Func, System.Func, System.Func, System.Func, System.Int32, System.Boolean)" />*/
	_initializePositions: function (item, maximumAvailableExtent, extraExtent, getMethod, getItemPosUnits, getPreviousVisibleItem, getNextVisibleItem, maxItemIndex, isMeasureOnly) {
		var availableExtent;
		var maxIndex;
		if (item.isFrozen()) {
			$.ig.Debug.prototype.assert1(extraExtent == 0, "How should we be using this?");
			availableExtent = 1.7976931348623157E+308;
			maxIndex = item.endIndex();
		} else {
			availableExtent = item._preferredExtentResolved() + extraExtent;
			maxIndex = maxItemIndex;
		}
		if (availableExtent > maximumAvailableExtent) {
			availableExtent = maximumAvailableExtent;
		}
		if (availableExtent != 1.7976931348623157E+308) {
			availableExtent += item._startIndexOutOfViewExtent() * this.___zoomLevel;
			availableExtent /= this.___zoomLevel;
		}
		var itemPosUnitExtent = getItemPosUnits(availableExtent);
		var positions = getMethod(item.startIndex(), itemPosUnitExtent, maxIndex);
		if (!isMeasureOnly) {
			var previousVisible = positions == null || positions.count() == 0 || positions.item(0)._index() == 0 ? $.ig.util.toNullable($.ig.Number.prototype.$type, null) : getPreviousVisibleItem(positions.item(0)._index());
			item._previousVisibleItemIndex(previousVisible);
			var nextVisible = positions == null || positions.count() == 0 || positions.item(positions.count() - 1)._index() == maxItemIndex ? $.ig.util.toNullable($.ig.Number.prototype.$type, null) : getNextVisibleItem(positions.item(positions.count() - 1)._index());
			item._nextVisibleItemIndex(nextVisible);
			if (!$.ig.CoreUtilities.prototype.areEqual$1($.ig.WorksheetItemPosition.prototype.$type, item._itemPositions(), positions, null)) {
				item._itemPositions()._reInitialize(positions);
			}
		}
		return positions == null || positions.count() == 0 ? 0 : positions.item(positions.count() - 1)._index();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializePositions(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double, System.Double, System.Func, System.Func, System.Func, System.Func, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeRowsAndColumns()" />*/
	_initializeRowsAndColumns: function () {
		this._verifyRangeSizes();
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPaneSettingsChanged, false);
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHeaderPropertiesChanged, false);
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellPane, true);
		var ws = this.___worksheet;
		var wb = ws.workbook();
		var displayOptions = this.___worksheet.displayOptions();
		var isFrozen = displayOptions.panesAreFrozen();
		var frozenSettings = displayOptions.frozenPaneSettings();
		var unfrozenSettings = displayOptions.unfrozenPaneSettings();
		var paneSettings = isFrozen ? frozenSettings : unfrozenSettings;
		var rowCount = paneSettings._hasHorizontalSplit() ? 2 : 1;
		var colCount = paneSettings._hasVerticalSplit() ? 2 : 1;
		var activePane = this.activePane();
		var showHeaders = displayOptions.showRowAndColumnHeaders();
		var maxRow = this.___worksheet.rows().maxCount() - 1;
		var maxCol = this.___worksheet.columns().maxCount() - 1;
		var rows = this._rowsSource();
		var columns = this._columnsSource();
		var panes = this._panesSource();
		rows.beginUpdate();
		columns.beginUpdate();
		panes.beginUpdate();
		this._zoomLevel(displayOptions.magnificationInNormalView() / 100);
		var isA1Mode = wb.cellReferenceMode() == $.ig.excel.CellReferenceMode.a1;
		var headerFont = this.___normalStyleFont = this.___normalStyleFont._create(wb.styles().normalStyle()._styleFormatInternal());
		var selectionMode = this._getResolvedCellSelectionMode();
		try {
			var rowQueue = new $.ig.Queue$1($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type);
			var en = rows.getEnumerator();
			while (en.moveNext()) {
				var row = en.current();
				rowQueue.enqueue(row);
			}
			rows.clear();
			for (var i = 0; i < rowCount; i++) {
				var item = rowQueue.count() > 0 ? rowQueue.dequeue() : new $.ig.spreadsheet.SpreadsheetRowScrollRegion();
				item._scrollInfo().__scrollCallback = this._scrollRows.runOn(this);
				item._scrollInfo().__verifyRangeCallback = this._verifyRowScrollRange.runOn(this);
				item._convertItemUnitsToPixels(this._getPixelsFromRowItemPosUnits.runOn(this));
				item._convertPixelsToItemUnits(this._getItemPosUnitFromRowPixels.runOn(this));
				item._getItemPosition(ws._getRowPosition.runOn(ws));
				item._getItemPositionFromOffset(ws._getRowPositionFromOffset.runOn(ws));
				item._getVisibleItemPositions(this._getVisibleRows.runOn(this));
				item._setItemExtent(this._resizeRow.runOn(this));
				item._setItemExtentForMany(this._resizeRows.runOn(this));
				item._setItemExtentForAll(this._resizeAllRows.runOn(this));
				item._getHeaderText(isA1Mode ? this._getRowHeaderTextA1.runOn(this) : this._getRowHeaderTextR1C1.runOn(this));
				item._zoomLevel(this._zoomLevel());
				item._dpiY(this.___dpiY);
				item._dpiX(this.___dpiX);
				item._pixelSizeX(this.___pixelSizeX);
				item._pixelSizeY(this.___pixelSizeY);
				item._resourceProvider(this._resourceProvider());
				item._maxItemIndex(maxRow);
				item._maxItemExtent($.ig.excel.WorksheetRow.prototype._maxRowHeight);
				item._maxScrollRangeExtent(this.___maxRangeSize.height());
				item._headerFont(headerFont);
				item._sheetPaneOwner(this);
				item._areHeadersVisible(showHeaders);
				item._selectionMode(selectionMode);
				rows.add(item);
			}
			if (rowCount > 1) {
				var firstRow = rows.__inner[0];
				firstRow._sizingMode(isFrozen ? $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToItems : $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToExtent);
				firstRow.isFrozen(isFrozen);
				firstRow.startIndex(Math.min(unfrozenSettings.firstRowInTopPane(), maxRow));
				if (isFrozen) {
					firstRow.endIndex(Math.min(firstRow.startIndex() + frozenSettings.frozenRows() - 1, maxRow));
				} else {
					firstRow._preferredExtent(this._convertTwipsToPixels(unfrozenSettings.topPaneHeight(), true));
				}
			}
			var lastRow = $.ig.Enumerable.prototype.last$1($.ig.spreadsheet.SpreadsheetRowScrollRegion.prototype.$type, rows);
			lastRow._sizingMode($.ig.SpreadsheetPaneRowColumnSizingMode.prototype.fill);
			lastRow.isFrozen(false);
			lastRow.startIndex(Math.min(rowCount == 1 ? unfrozenSettings.firstRowInTopPane() : paneSettings.firstRowInBottomPane(), maxRow));
			if (rowCount > 1 && isFrozen && lastRow.startIndex() <= rows.__inner[0].endIndex()) {
				lastRow.startIndex(rows.__inner[0].endIndex() + 1);
			}
			var colQueue = new $.ig.Queue$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type);
			var en1 = columns.getEnumerator();
			while (en1.moveNext()) {
				var col = en1.current();
				colQueue.enqueue(col);
			}
			columns.clear();
			for (var i1 = 0; i1 < colCount; i1++) {
				var item1 = colQueue.count() > 0 ? colQueue.dequeue() : new $.ig.spreadsheet.SpreadsheetColumnScrollRegion();
				item1._scrollInfo().__scrollCallback = this._scrollColumns.runOn(this);
				item1._scrollInfo().__verifyRangeCallback = this._verifyColumnScrollRange.runOn(this);
				item1._convertItemUnitsToPixels(this._getPixelsFromColumnItemPosUnits.runOn(this));
				item1._convertPixelsToItemUnits(this._getItemPosUnitFromColumnPixels.runOn(this));
				item1._getItemPosition(ws._getColumnPosition.runOn(ws));
				item1._getItemPositionFromOffset(this._getColumnPositionFromOffset.runOn(this));
				item1._getVisibleItemPositions(this._getVisibleColumns.runOn(this));
				item1._setItemExtent(this._resizeColumn.runOn(this));
				item1._setItemExtentForMany(this._resizeColumns.runOn(this));
				item1._setItemExtentForAll(this._resizeAllColumns.runOn(this));
				item1._getHeaderText(isA1Mode ? $.ig.SpreadsheetPaneManager.prototype._getColumnHeaderTextA1 : $.ig.SpreadsheetPaneManager.prototype._getColumnHeaderTextR1C1);
				item1._zoomLevel(this._zoomLevel());
				item1._dpiY(this.___dpiY);
				item1._dpiX(this.___dpiX);
				item1._pixelSizeX(this.___pixelSizeX);
				item1._pixelSizeY(this.___pixelSizeY);
				item1._resourceProvider(this._resourceProvider());
				item1._maxItemIndex(maxCol);
				item1._maxItemExtent(65535);
				item1._maxScrollRangeExtent(this.___maxRangeSize.width());
				item1._headerFont(headerFont);
				item1._sheetPaneOwner(this);
				item1._areHeadersVisible(showHeaders);
				item1._selectionMode(selectionMode);
				columns.add(item1);
			}
			if (colCount > 1) {
				var firstColumn = columns.__inner[0];
				firstColumn._sizingMode(isFrozen ? $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToItems : $.ig.SpreadsheetPaneRowColumnSizingMode.prototype.sizeToExtent);
				firstColumn.isFrozen(isFrozen);
				firstColumn.startIndex(Math.min(unfrozenSettings.firstColumnInLeftPane(), maxCol));
				if (isFrozen) {
					firstColumn.endIndex(Math.min(firstColumn.startIndex() + frozenSettings.frozenColumns() - 1, maxCol));
				} else {
					firstColumn._preferredExtent(this._convertTwipsToPixels(unfrozenSettings.leftPaneWidth(), false));
				}
			}
			var lastColumn = $.ig.Enumerable.prototype.last$1($.ig.spreadsheet.SpreadsheetColumnScrollRegion.prototype.$type, columns);
			lastColumn._sizingMode($.ig.SpreadsheetPaneRowColumnSizingMode.prototype.fill);
			lastColumn.isFrozen(false);
			lastColumn.startIndex(Math.min(colCount == 1 ? unfrozenSettings.firstColumnInLeftPane() : paneSettings.firstColumnInRightPane(), maxCol));
			if (colCount > 1 && isFrozen && lastColumn.startIndex() <= columns.__inner[0].endIndex()) {
				lastColumn.startIndex(columns.__inner[0].endIndex() + 1);
			}
			var oldPanes = panes.toArray();
			panes.clear();
			for (var r = 0; r < rows.count(); r++) {
				var row1 = rows.__inner[r];
				for (var c = 0; c < columns.count(); c++) {
					var col1 = columns.__inner[c];
					var pane = null;
					for (var i2 = 0; i2 < oldPanes.length; i2++) {
						var oldPane = oldPanes[i2];
						if (oldPane.rowScrollRegion() == row1 && oldPane.columnScrollRegion() == col1) {
							pane = oldPane;
							break;
						}
					}
					if (pane == null) {
						pane = new $.ig.spreadsheet.SpreadsheetPane(row1, columns.__inner[c], this.___selectionFactory, this);
					}
					var selection = pane.selection();
					selection._availableColumnRange(new $.ig.Range$1($.ig.Number.prototype.$type, 1, this.___maxRangeAddress.firstColumn(), this.___maxRangeAddress.lastColumn()));
					selection._availableRowRange(new $.ig.Range$1($.ig.Number.prototype.$type, 1, this.___maxRangeAddress.firstRow(), this.___maxRangeAddress.lastRow()));
					panes.add(pane);
				}
			}
			this._initializePaneSelectionFromWorksheet();
			if (activePane != null) {
				var newActive = this._getPaneToActivate($.ig.util.toNullable($.ig.Boolean.prototype.$type, null));
				if (newActive != activePane) {
					var oldSelection = activePane.selection();
					newActive.selection()._resetSelection($.ig.Enumerable.prototype.toArray$1($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, oldSelection.cellRanges()), oldSelection.activeCell(), oldSelection.activeCellRangeIndex(), false);
				}
			}
		}
		finally {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasScrollBarChanged, true);
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasResourceProviderChanged, true);
			this._verifyActiveSelection();
			rows.endUpdate();
			columns.endUpdate();
			panes.endUpdate();
			this._setNotificationFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasFrozenPanes, isFrozen);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeRowsAndColumns()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeScrollInfo(System.Collections.Generic.IEnumerable, System.Double, System.Double, System.Func, System.Func, System.Func, System.Int32, System.Double, System.Int32)" />*/
	_initializeScrollInfo: function (items, usedRangeExtent, defaultItemExtent, getItemPosFromIndex, getItemPosFromOffset, getItemPosUnitsFromPixels, maxItemIndex, availableExtentPlusHeader, firstUnfrozenIndex) {
		var maxFrozenOffset = 0;
		firstUnfrozenIndex = 0;
		var en = items.getEnumerator();
		while (en.moveNext()) {
			var item = en.current();
			var scrollInfo = item._scrollInfo();
			var isInThumbDrag = scrollInfo._isRangeChangeSuspended();
			if (isInThumbDrag) {
				continue;
			}
			var offset = scrollInfo._offset();
			var originalOffset = offset;
			var originalViewport = scrollInfo._viewport();
			var itemMeasureExtent = getItemPosUnitsFromPixels(item.actualExtent() / this.___zoomLevel);
			var minExtent = itemMeasureExtent;
			if (scrollInfo._usePixelLevelScrolling()) {
				var offsetItem = getItemPosFromIndex(item.startIndex());
				offset = offsetItem._offset() + getItemPosUnitsFromPixels(item._startIndexOutOfViewExtent());
			} else if (!isInThumbDrag) {
				var offsetItem1 = getItemPosFromIndex(item.startIndex());
				offset = offsetItem1._offset();
				if (!item.isFrozen()) {
					var lastItem = getItemPosFromOffset($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(maxFrozenOffset + itemMeasureExtent)));
					var lastItemEnd = lastItem._end();
					if (lastItem._index() < maxItemIndex - 1 && $.ig.CoreUtilities.prototype.areClose(lastItemEnd, itemMeasureExtent)) {
						lastItem = getItemPosFromOffset(lastItem._index() + 1);
					}
					minExtent = lastItemEnd - maxFrozenOffset;
				}
			}
			var extent = Math.max(minExtent, Math.max(usedRangeExtent, offset + itemMeasureExtent) - maxFrozenOffset);
			if (item.isFrozen()) {
				var last = $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, item._itemPositions());
				firstUnfrozenIndex = last._index() + 1;
				maxFrozenOffset = last._end();
			} else {
				if (offset > maxFrozenOffset && extent + maxFrozenOffset > usedRangeExtent) {
				} else {
					var cache = item._currentScrollPageCache();
					var endMaxScroll = extent + maxFrozenOffset - itemMeasureExtent;
					if (cache != null && cache._calculatedExtent == endMaxScroll && cache._viewport == itemMeasureExtent) {
						extent = cache._lastPageStart;
					} else {
						var lastPossibleFirstItemInView = getItemPosFromOffset($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(endMaxScroll)));
						var index = lastPossibleFirstItemInView._index();
						if (endMaxScroll > lastPossibleFirstItemInView._offset()) {
							index++;
						}
						var newExtent = extent + lastPossibleFirstItemInView._end() - endMaxScroll;
						item._currentScrollPageCache(new $.ig.PageStartScrollCache(itemMeasureExtent, endMaxScroll, newExtent, index));
						extent = newExtent;
					}
				}
				scrollInfo._minimum(maxFrozenOffset);
				scrollInfo._smallChange(defaultItemExtent);
			}
			scrollInfo._initialize(itemMeasureExtent, extent, offset);
			if (!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.skipNextScrollSnapshot)) {
				if (!$.ig.CoreUtilities.prototype.areClose(originalOffset, scrollInfo._offset()) || !$.ig.CoreUtilities.prototype.areClose(availableExtentPlusHeader, item._cachedScrollMidpointExtent())) {
					item._cachedScrollMidpoint(scrollInfo._offset() + scrollInfo._viewport() / 2);
					item._cachedScrollMidpointExtent(availableExtentPlusHeader);
				}
			}
		}
		return {
			p8: firstUnfrozenIndex
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeScrollInfo(System.Collections.Generic.IEnumerable, System.Double, System.Double, System.Func, System.Func, System.Func, System.Int32, System.Double, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeMaxRangeAddress()" />*/
	_initializeMaxRangeAddress: function () {
		var wb = this.___worksheet.workbook();
		this.___maxRangeAddress = new $.ig.spreadsheet.SpreadsheetCellRange(0, 0, wb.maxRowCount() - 1, wb.maxColumnCount() - 1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InitializeMaxRangeAddress()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InvalidateScrollCache(System.Collections.Generic.IEnumerable)" />*/
	_invalidateScrollCache: function (items) {
		var en = items.getEnumerator();
		while (en.moveNext()) {
			var item = en.current();
			item._currentScrollPageCache(item._maxScrollPageCache(null));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::InvalidateScrollCache(System.Collections.Generic.IEnumerable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsExcelOffsetChanged(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_isExcelOffsetChanged: function (change) {
		switch (change._changeType) {
			case $.ig.ExcelChangeAction.prototype.displayOptions:
				switch (change._name) {
					case "FirstColumnInLeftPane":
					case "FirstRowInTopPane":
					case "FirstColumnInRightPane":
					case "FirstRowInBottomPane":
						return true;
				}
				break;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsExcelOffsetChanged(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsHyperlinkForeground(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_isHyperlinkForeground: function (format) {
		var style = $.ig.util.cast($.ig.WorkbookBuiltInStyle.prototype.$type, format._styleResolved());
		if (style != null && style._type() == $.ig.BuiltInStyleType.prototype.hyperlink) {
			var formatForeground = format._fontColorInfoResolved();
			var styleForeground = style._styleFormatInternal()._fontColorInfoResolved();
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(formatForeground, styleForeground)) {
				return true;
			} else {
				var wb = this.___worksheet.workbook();
				if ($.ig.Color.prototype.l_op_Equality(formatForeground._getResolvedColorInternal(wb, true, true), styleForeground._getResolvedColorInternal(wb, true, true))) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsHyperlinkForeground(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsScrollBarVisible(Infragistics.Documents.Excel.ScrollBars, System.Boolean)" />*/
	_isScrollBarVisible: function (sb, isVertical) {
		switch (sb) {
			case $.ig.excel.ScrollBars.none: return false;
			default:
			case $.ig.excel.ScrollBars.both:
				return true;
			case $.ig.excel.ScrollBars.horizontal: return !isVertical;
			case $.ig.excel.ScrollBars.vertical: return isVertical;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsScrollBarVisible(Infragistics.Documents.Excel.ScrollBars, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(System.Int32, System.Int32)" />*/
	_isUnlocked3: function (rowIndex, columnIndex) {
		var row = this.___worksheet.rows()._getIfCreated(rowIndex);
		var format = this.___worksheet._getCellFormatElementReadOnly(row, columnIndex);
		return $.ig.util.nullableEquals(format._lockedResolved(), false);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	_isUnlocked2: function (row, columnIndex) {
		var format = this.___worksheet._getCellFormatElementReadOnly(row, columnIndex);
		return $.ig.util.nullableEquals(format._lockedResolved(), false);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetSelection, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	_isUnlocked: function (ws, selection, lockedRangeInfo) {
		if (ws.isProtected()) {
			var minColumn = 0;
			var maxColumn = ws.columns().maxCount();
			var worksheetLockedInfo = lockedRangeInfo != null ? lockedRangeInfo.getWorksheetInfo(ws) : null;
			var en = selection._selectedRows().getEnumerator();
			while (en.moveNext()) {
				var selectedRowBlock = en.current();
				if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(ws, selectedRowBlock.__start, minColumn, selectedRowBlock.__end, maxColumn, worksheetLockedInfo) == false) {
					return false;
				}
			}
			if (selection._areAllColumnsSelected() == false || selection._areAllRowsSelected() == false) {
				if (selection._selectedColumns().count() > 0) {
					var startRow = 0;
					var endRow = ws.rows().maxCount() - 1;
					var en1 = selection._selectedColumns().getEnumerator();
					while (en1.moveNext()) {
						var selectedColumnBlock = en1.current();
						if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(ws, startRow, selectedColumnBlock.__start, endRow, selectedColumnBlock.__end, worksheetLockedInfo) == false) {
							return false;
						}
					}
				}
				if ((selection._selectedColumns().count() == 0 && selection._selectedRows().count() == 0) || selection._hasMixedCellSelection()) {
					var en2 = selection.cellRanges().getEnumerator();
					while (en2.moveNext()) {
						var range = en2.current();
						if (selection._isColumnSelection(range) == false && selection._isRowSelection(range) == false) {
							if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked1(ws, range.firstRow(), range.firstColumn(), range.lastRow(), range.lastColumn(), worksheetLockedInfo) == false) {
								return false;
							}
						}
					}
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(Infragistics.Documents.Excel.Worksheet, Infragistics.Controls.Grids.Core.SpreadsheetSelection, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(Infragistics.Documents.Excel.Worksheet, System.Int32, System.Int32, System.Int32, System.Int32, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet)" />*/
	_isUnlocked1: function (ws, startRow, startColumn, endRow, endColumn, lockedRangeInfo) {
		if (ws.isProtected() == false) {
			return true;
		}
		var expectedRowIndex = startRow;
		var hasRowGaps = false;
		var editRangeInfo = $.ig.LockedEditRangeInfoForCellRange.prototype.create(lockedRangeInfo, startRow, startColumn, endRow, endColumn);
		var en = ws.rows()._getItemsInRange(startRow, endRow).getEnumerator();
		while (en.moveNext()) {
			var row = en.current();
			var rowIndex = row.index();
			if (expectedRowIndex != rowIndex) {
				if (editRangeInfo != null) {
					editRangeInfo.addUnallocatedRowBlock(expectedRowIndex, rowIndex - 1);
				}
				hasRowGaps = true;
			} else {
				expectedRowIndex++;
			}
			var columnBlock;
			var expectedColIndex = startColumn;
			var hasRowFormat = row._hasCellFormat();
			var isRowFormatLocked = hasRowFormat && $.ig.util.nullableEquals(row._cellFormatInternal().element()._lockedResolved(), true);
			var en1 = row._getCellsWithData(startColumn, endColumn).getEnumerator();
			while (en1.moveNext()) {
				var fm = en1.current();
				if (fm.hasFormat() == false) {
					continue;
				}
				if (expectedColIndex != fm.columnIndex()) {
					if (hasRowFormat) {
						if (isRowFormatLocked) {
							if (editRangeInfo == null || editRangeInfo.canUnlock(row, expectedColIndex, fm.columnIndex() - 1) == false) {
								return false;
							}
						}
					} else {
						for (var i = expectedColIndex, end = fm.columnIndex(); i < end; i++) {
							columnBlock = ws._getColumnBlock(i);
							if ($.ig.util.nullableEquals(columnBlock.cellFormat()._lockedResolved(), true)) {
								if (editRangeInfo == null || editRangeInfo.canUnlock(row, Math.max(i, columnBlock.firstColumnIndex()), Math.min(fm.columnIndex() - 1, columnBlock.lastColumnIndex())) == false) {
									return false;
								}
							}
							i = columnBlock.lastColumnIndex();
						}
					}
				}
				if ($.ig.util.nullableEquals(fm.cellFormatData()._lockedResolved(), true)) {
					if (editRangeInfo == null || editRangeInfo.canUnlockCell(rowIndex, fm.columnIndex()) == false) {
						return false;
					}
				}
				expectedColIndex = fm.columnIndex() + 1;
			}
			if (expectedColIndex <= endColumn) {
				if (hasRowFormat) {
					if (isRowFormatLocked) {
						if (editRangeInfo == null || editRangeInfo.canUnlock(row, expectedColIndex, endColumn) == false) {
							return false;
						}
					}
				} else {
					for (var i1 = expectedColIndex; i1 <= endColumn; i1++) {
						columnBlock = ws._getColumnBlock(i1);
						if ($.ig.util.nullableEquals(columnBlock.cellFormat()._lockedResolved(), true)) {
							if (editRangeInfo == null || editRangeInfo.canUnlock(row, Math.max(expectedColIndex, columnBlock.firstColumnIndex()), Math.min(endColumn, columnBlock.lastColumnIndex())) == false) {
								return false;
							}
						}
						i1 = columnBlock.lastColumnIndex();
					}
				}
			}
		}
		if (expectedRowIndex != endRow + 1) {
			if (editRangeInfo != null) {
				editRangeInfo.addUnallocatedRowBlock(expectedRowIndex, endRow);
			}
			hasRowGaps = true;
		}
		if (hasRowGaps) {
			var columnBlockIndex = ws._getColumnBlockIndex(startColumn);
			var columnBlocks = ws._columnBlocks();
			var columnBlock1 = columnBlocks.__inner[columnBlockIndex];
			for (var i2 = columnBlockIndex; i2 < columnBlocks.count(); i2++) {
				columnBlock1 = columnBlocks.__inner[i2];
				if ($.ig.util.nullableEquals(columnBlock1.cellFormat()._lockedResolved(), true)) {
					if (editRangeInfo == null || editRangeInfo.canUnlockColumnBlock(Math.max(startColumn, columnBlock1.firstColumnIndex()), Math.min(endColumn, columnBlock1.lastColumnIndex())) == false) {
						return false;
					}
				}
				if (columnBlock1.lastColumnIndex() >= endColumn) {
					break;
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::IsUnlocked(Infragistics.Documents.Excel.Worksheet, System.Int32, System.Int32, System.Int32, System.Int32, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForWorksheet)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetMaxRowIndexInView(System.Double)" />*/
	_getMaxRowIndexInView: function (availableHeight) {
		return this._measureItems(this._rows(), availableHeight, this._splitterHeight(), this.___worksheet.workbook().maxRowCount() - 1, true, this.___worksheet._getRowPositions.runOn(this.___worksheet), this._getPixelsFromRowItemPosUnits.runOn(this), this._getItemPosUnitFromRowPixels.runOn(this), this._getPreviousVisibleRow.runOn(this), this._getNextVisibleRow.runOn(this));
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetMaxRowIndexInView(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MeasureItems(System.Collections.Generic.IEnumerable, System.Double, System.Double, System.Int32, System.Boolean, System.Func, System.Func, System.Func, System.Func, System.Func)" />*/
	_measureItems: function (items, availableExtent, splitterExtent, maxItemIndex, measureOnly, getMethod, getPixelsFromItemPosValue, getItemPosUnitsFromPixels, getPreviousVisibleItem, getNextVisibleItem) {
		var first = $.ig.Enumerable.prototype.first$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, items);
		var last = $.ig.Enumerable.prototype.last$1($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type, items);
		var lastIndexForFirstRegion = 0;
		var lastIndexForLastRegion = 0;
		if (first != last) {
			var extraForFirst = 0;
			if (splitterExtent > 0 && !first.isFrozen()) {
				var preferredExtent = first._preferredExtentResolved();
				if (availableExtent > preferredExtent && availableExtent - preferredExtent < splitterExtent) {
					extraForFirst = availableExtent - preferredExtent;
				}
			}
			lastIndexForFirstRegion = this._initializePositions(first, availableExtent, extraForFirst, getMethod, getItemPosUnitsFromPixels, getPreviousVisibleItem, getNextVisibleItem, maxItemIndex, measureOnly);
			if (!measureOnly && first.isFrozen()) {
				first._preferredExtent((getPixelsFromItemPosValue($.ig.truncate($.ig.Enumerable.prototype.sum$1($.ig.WorksheetItemPosition.prototype.$type, first._itemPositions(), function (p) { return p._extent(); }))) - first._startIndexOutOfViewExtent()) * this.___zoomLevel);
			}
			var firstActualExtent = Math.min(first._preferredExtentResolved() + extraForFirst, availableExtent);
			availableExtent -= firstActualExtent;
			if (!measureOnly) {
				first.actualExtent(firstActualExtent);
				this._updateEndIndexOutOfViewExtent(first, getPixelsFromItemPosValue);
			}
			if (!first.isFrozen()) {
				first.endIndex(first._itemPositions().count() == 0 ? first.startIndex() : $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, first._itemPositions())._index());
			} else {
				first._endIndexOutOfViewExtent(0);
			}
			availableExtent -= splitterExtent;
			if (!measureOnly) {
			}
		}
		if (availableExtent < 0) {
			availableExtent = 0;
		}
		if (!measureOnly) {
			last._preferredExtent(availableExtent);
		}
		lastIndexForLastRegion = this._initializePositions(last, availableExtent, 0, getMethod, getItemPosUnitsFromPixels, getPreviousVisibleItem, getNextVisibleItem, maxItemIndex, measureOnly);
		if (!measureOnly) {
			last.actualExtent(availableExtent);
			last.endIndex(last._itemPositions().count() == 0 ? last.startIndex() : $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, last._itemPositions())._index());
			this._updateEndIndexOutOfViewExtent(last, getPixelsFromItemPosValue);
		}
		return Math.max(lastIndexForFirstRegion, lastIndexForLastRegion);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MeasureItems(System.Collections.Generic.IEnumerable, System.Double, System.Double, System.Int32, System.Boolean, System.Func, System.Func, System.Func, System.Func, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MergeWithActiveSelectionRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_mergeWithActiveSelectionRange: function (targetCell) {
		var selection = this.activePane().selection();
		var selectedRange = selection._getActiveCellRange();
		var cellRange = this._getCellRange1(targetCell.row(), targetCell.column());
		selectedRange = selectedRange.union(cellRange);
		selectedRange = this.extendRangeForMergedCells(selectedRange);
		return this._replaceActiveSelectionRange(selectedRange);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::MergeWithActiveSelectionRange(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnPrivateObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	_onPrivateObjectPropertyChanged: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (this.___tabManager._isSelectedTabsSource(sender)) {
					if (this.___tabManager._selectedTabs().count() > 1) {
						this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate);
					}
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OnPrivateObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OutputLayout(System.String, )" />*/
	_outputLayout: function (message, args) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::OutputLayout(System.String, )" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PrepareForSplitChange()" />*/
	_prepareForSplitChange: function () {
		this._processPendingChanges(false);
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPaneSettingsChanged)) {
			this._initializeRowsAndColumns();
		}
		$.ig.Debug.prototype.assert(this._rows().count() > 0 && this._columns().count() > 0);
		if (this._rows().count() == 0 || this._columns().count() == 0) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::PrepareForSplitChange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingChanges(System.Boolean)" />*/
	_processPendingChanges: function (verifyIfZoomChanges) {
		var wasProcessing = this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.processingPendingChanges);
		if (wasProcessing) {
			return;
		}
		try {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.processingPendingChanges, true);
			this._processPendingChangesImpl();
		}
		finally {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.processingPendingChanges, false);
		}
		if (this._processPendingZoomChange() && verifyIfZoomChanges) {
			this._processPendingChanges(false);
		}
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPendingChangeNotifications, this.___pendingChangeActions != $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingChanges(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingChangesImpl()" />*/
	_processPendingChangesImpl: function () {
		var actions = this.___pendingChangeActions;
		this.___pendingChangeActions = $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none;
		if (actions != $.ig.SpreadsheetPaneManager_ChangeActions.prototype.none) {
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.clearCellInfos) {
				this.___inViewPaneInfo.clearCellInfos();
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyUsedRange) {
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasUsedRangeChanged);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyActiveCell) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyActiveCell) {
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasActiveCellChanged);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.headerSettings) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.headerSettings) {
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHeaderPropertiesChanged);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyRangeSizes) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyRangeSizes) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasRangeSizesChanged, true);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyPaneSettings) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyPaneSettings) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPaneSettingsChanged, true);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.zoomChanged) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.zoomChanged) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasZoomChanged, true);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.styleChanged) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.styleChanged) {
				this._queueInvalidation($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHeaderPropertiesChanged);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.redrawShapes) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.redrawShapes) {
				this.___inViewPaneInfo.dirtyShapeInfo();
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.validationRulesChanged) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.validationRulesChanged) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellInputMessage | $.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasValidationRulesChanged, true);
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.updateCachedProperties) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.updateCachedProperties) {
				this._updateCachedProperties();
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.selectUnlockedCell) {
				this._enforceUnlockedCellSelectionMode();
			}
			if ((actions & $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout) == $.ig.SpreadsheetPaneManager_ChangeActions.prototype.dirtyLayout) {
				this._isLayoutDirty(true);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingChangesImpl()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingZoomChange()" />*/
	_processPendingZoomChange: function () {
		var hasZoomChange = this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasZoomChanged);
		if (hasZoomChange) {
			this._processPendingZoomChangeImpl();
		}
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isSelectionZoom, false);
		return hasZoomChange;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingZoomChange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingZoomChangeImpl()" />*/
	_processPendingZoomChangeImpl: function () {
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasZoomChanged, false);
		var availableHeight = this.___availableSize.height();
		var availableWidth = this.___availableSize.width();
		var displayOptions = this.___worksheet.displayOptions();
		var zoom = this.___worksheet.displayOptions().magnificationInNormalView() / 100;
		var zoomFactorChange = zoom - this._zoomLevel();
		availableHeight -= this._columnHeaderAreaExtent() * zoomFactorChange;
		availableWidth -= this._rowHeaderAreaExtent() * zoomFactorChange;
		var en = this._rows().getEnumerator();
		while (en.moveNext()) {
			var row = en.current();
			$.ig.Debug.prototype.assert(row._activeSelection() != null);
			if (row.isFrozen() == false && row._activeSelection() != null) {
				var selection = row._activeSelection();
				var selectionRange = selection._getCellRangeUnion(true);
				var cell = selection.activeCell();
				var wasActiveCellInView = row.startIndex() <= cell.row() && cell.row() <= row.endIndex() && selectionRange._contains(cell);
				var availableExtent = Math.max(Math.min(availableHeight, row.actualExtent()) / (displayOptions.magnificationInNormalView() / 100), 0);
				var topRow = new $.ig.WorksheetItemPosition();
				if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isSelectionZoom)) {
					if (wasActiveCellInView) {
						topRow = this.___worksheet._getRowPosition(row.startIndex());
					} else {
						topRow = this.___worksheet._getRowPosition(selectionRange.firstRow());
					}
				} else {
					var topPixel = Math.max($.ig.truncate(row._cachedScrollMidpoint()) - this._getItemPosUnitFromRowPixels(availableExtent / 2), 0);
					topRow = this.___worksheet._getRowPositionFromOffset(topPixel);
					if (topPixel > topRow._offset() + $.ig.intDivide(topRow._extent(), 2) && topRow._index() < this.___maxRangeAddress.lastRow()) {
						topRow = this.___worksheet._getRowPositionFromOffset(topRow._end() + 1);
					}
				}
				var topRowIndex = topRow._index();
				if (wasActiveCellInView) {
					if (selectionRange.firstRow() < topRowIndex) {
						topRowIndex = selectionRange.firstRow();
						topRow = this.___worksheet._getRowPosition(topRowIndex);
					} else if (selectionRange.firstRow() > topRowIndex) {
						var endUnit = topRow._offset() + this._getItemPosUnitFromRowPixels(availableExtent);
						var bottomRow = this.___worksheet._getRowPositionFromOffset(endUnit);
						if (endUnit < bottomRow._end() && bottomRow._index() > topRowIndex) {
							bottomRow = this.___worksheet._getRowPositionFromOffset(bottomRow._offset() - 1);
						}
						if (selectionRange.lastRow() > bottomRow._index()) {
							bottomRow = this.___worksheet._getRowPosition(selectionRange.lastRow());
							var startUnit = Math.max(bottomRow._end() - this._getItemPosUnitFromRowPixels(availableExtent), 0);
							topRow = this.___worksheet._getRowPositionFromOffset(startUnit);
							if (topRow._offset() < startUnit) {
								topRow = this.___worksheet._getRowPositionFromOffset(topRow._end() + 1);
							}
							topRowIndex = topRow._index();
						}
					}
					if (cell.row() < topRowIndex) {
						topRowIndex = cell.row();
					} else if (cell.row() > topRowIndex) {
						var endUnit1 = topRow._offset() + this._getItemPosUnitFromRowPixels(availableExtent);
						var bottomRow1 = this.___worksheet._getRowPositionFromOffset(endUnit1);
						if (bottomRow1._end() < endUnit1 && bottomRow1._index() > topRow._index()) {
							bottomRow1 = this.___worksheet._getRowPositionFromOffset(bottomRow1._offset() - 1);
						}
						if (cell.row() > bottomRow1._index()) {
							var startUnit1 = Math.max(bottomRow1._end() - this._getItemPosUnitFromRowPixels(availableExtent), 0);
							topRow = this.___worksheet._getRowPositionFromOffset(startUnit1);
							if (topRow._offset() < startUnit1) {
								topRow = this.___worksheet._getRowPositionFromOffset(topRow._end() + 1);
							}
							topRowIndex = topRow._index();
						}
					}
				}
				if (row == this._rows().item(0)) {
					displayOptions.unfrozenPaneSettings().firstRowInTopPane(topRowIndex);
				} else if (this._rows().item(0).isFrozen()) {
					displayOptions.frozenPaneSettings().firstRowInBottomPane(topRowIndex);
				} else {
					displayOptions.unfrozenPaneSettings().firstRowInBottomPane(topRowIndex);
				}
			}
			availableHeight -= row.actualExtent();
			if (row.isFrozen()) {
				availableHeight -= row.actualExtent() * zoomFactorChange;
			}
		}
		var en1 = this._columns().getEnumerator();
		while (en1.moveNext()) {
			var col = en1.current();
			$.ig.Debug.prototype.assert(col._activeSelection() != null);
			if (col.isFrozen() == false && col._activeSelection() != null) {
				var selection1 = col._activeSelection();
				var selectionRange1 = selection1._getCellRangeUnion(true);
				var cell1 = selection1.activeCell();
				var wasActiveCellInView1 = col.startIndex() <= cell1.column() && cell1.column() <= col.endIndex() && selectionRange1._contains(cell1);
				var availableExtent1 = Math.max(Math.min(availableWidth, col.actualExtent()) / (displayOptions.magnificationInNormalView() / 100), 0);
				var topColumn = new $.ig.WorksheetItemPosition();
				if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isSelectionZoom)) {
					if (wasActiveCellInView1) {
						topColumn = this.___worksheet._getColumnPosition(col.startIndex());
					} else {
						topColumn = this.___worksheet._getColumnPosition(selectionRange1.firstColumn());
					}
				} else {
					var topPixel1 = Math.max($.ig.truncate(col._cachedScrollMidpoint()) - this._getItemPosUnitFromColumnPixels(availableExtent1 / 2), 0);
					topColumn = this.___worksheet._getColumnPositionFromOffset(topPixel1);
					if (topPixel1 > topColumn._offset() + $.ig.intDivide(topColumn._extent(), 2) && topColumn._index() < this.___maxRangeAddress.lastColumn()) {
						topColumn = this.___worksheet._getColumnPositionFromOffset(topColumn._end() + 1);
					}
				}
				var topColumnIndex = topColumn._index();
				if (wasActiveCellInView1) {
					if (selectionRange1.firstColumn() < topColumnIndex) {
						topColumnIndex = selectionRange1.firstColumn();
						topColumn = this.___worksheet._getColumnPosition(topColumnIndex);
					} else if (selectionRange1.firstColumn() > topColumnIndex) {
						var endUnit2 = topColumn._offset() + this._getItemPosUnitFromColumnPixels(availableExtent1);
						var bottomColumn = this.___worksheet._getColumnPositionFromOffset(endUnit2);
						if (endUnit2 < bottomColumn._end() && bottomColumn._index() > topColumnIndex) {
							bottomColumn = this.___worksheet._getColumnPositionFromOffset(bottomColumn._offset() - 1);
						}
						if (selectionRange1.lastColumn() > bottomColumn._index()) {
							bottomColumn = this.___worksheet._getColumnPosition(selectionRange1.lastColumn());
							var startUnit2 = Math.max(bottomColumn._end() - this._getItemPosUnitFromColumnPixels(availableExtent1), 0);
							topColumn = this.___worksheet._getColumnPositionFromOffset(startUnit2);
							if (topColumn._offset() < startUnit2) {
								topColumn = this.___worksheet._getColumnPositionFromOffset(topColumn._end() + 1);
							}
							topColumnIndex = topColumn._index();
						}
					}
					if (cell1.column() < topColumnIndex) {
						topColumnIndex = cell1.column();
					} else if (cell1.column() > topColumnIndex) {
						var endUnit3 = topColumn._offset() + this._getItemPosUnitFromColumnPixels(availableExtent1);
						var bottomColumn1 = this.___worksheet._getColumnPositionFromOffset(endUnit3);
						if (bottomColumn1._end() < endUnit3 && bottomColumn1._index() > topColumn._index()) {
							bottomColumn1 = this.___worksheet._getColumnPositionFromOffset(bottomColumn1._offset() - 1);
						}
						if (cell1.column() > bottomColumn1._index()) {
							var startUnit3 = Math.max(bottomColumn1._end() - this._getItemPosUnitFromColumnPixels(availableExtent1), 0);
							topColumn = this.___worksheet._getColumnPositionFromOffset(startUnit3);
							if (topColumn._offset() < startUnit3) {
								topColumn = this.___worksheet._getColumnPositionFromOffset(topColumn._end() + 1);
							}
							topColumnIndex = topColumn._index();
						}
					}
				}
				if (col == this._columns().item(0)) {
					displayOptions.unfrozenPaneSettings().firstColumnInLeftPane(topColumnIndex);
				} else if (this._columns().item(0).isFrozen()) {
					displayOptions.frozenPaneSettings().firstColumnInRightPane(topColumnIndex);
				} else {
					displayOptions.unfrozenPaneSettings().firstColumnInRightPane(topColumnIndex);
				}
			}
			availableWidth -= col.actualExtent();
			if (col.isFrozen()) {
				availableWidth -= col.actualExtent() * zoomFactorChange;
			}
		}
		if (!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isSelectionZoom)) {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.skipNextScrollSnapshot, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ProcessPendingZoomChangeImpl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::QueueAsyncVerification()" />*/
	_queueAsyncVerification: function () {
		if (!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyingState)) {
			this.___deferredOperation.startAsyncOperation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::QueueAsyncVerification()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::QueueInvalidation(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags)" />*/
	_queueInvalidation: function (flag) {
		if ((this.___flags & flag) != flag) {
			this._setFlag(flag, true);
			this._queueAsyncVerification();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::QueueInvalidation(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveHyperlinks(System.Boolean, System.Boolean, System.Boolean, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Boolean)" />*/
	_removeHyperlinks: function (removeHyperlinkStyle, testOnly, hasHyperlinks, lockedRangeInfo, testUnlockedEvenIfNoHyperlinks) {
		this._assertIsTabSelected();
		var activePane = this.activePane();
		var selection = activePane != null ? activePane.selection() : null;
		hasHyperlinks = false;
		if (selection != null) {
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				var ws = tab._worksheet();
				if (testOnly && ws.isProtected() && ws.protection().allowInsertingHyperlinks() == false) {
					continue;
				}
				var $ret = $.ig.SpreadsheetPaneManager.prototype._removeHyperlinks2(removeHyperlinkStyle, testOnly, hasHyperlinks, ws, selection.cellRanges());
				hasHyperlinks = $ret.p2;
				if (testOnly && (hasHyperlinks || testUnlockedEvenIfNoHyperlinks)) {
					if ($.ig.SpreadsheetPaneManager.prototype._isUnlocked(ws, selection, lockedRangeInfo) == false) {
						return {
							ret: false,
							p2: hasHyperlinks
						};
					} else {
						return {
							ret: true,
							p2: hasHyperlinks
						};
					}
				}
			}
		}
		return {
			ret: hasHyperlinks,
			p2: hasHyperlinks
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveHyperlinks(System.Boolean, System.Boolean, System.Boolean, Infragistics.Controls.Grids.Core.LockedEditRangeInfoForOperation, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveHyperlinks(System.Boolean, System.Boolean, System.Boolean, Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.IList)" />*/
	_removeHyperlinks2: function (removeHyperlinkStyle, testOnly, hasHyperlinks, ws, ranges) {
		hasHyperlinks = false;
		if (ws._hasHyperlinks()) {
			var en = ranges.getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
				for (var i = ws.hyperlinks().count() - 1; i >= 0; i--) {
					var hyperlink = ws.hyperlinks().item(i);
					var address = hyperlink.sourceRegion()._address();
					if (excelRange._contains1(address) || address._contains1(excelRange)) {
						hasHyperlinks = true;
						if (testOnly) {
							return {
								p2: hasHyperlinks
							};
						}
						ws.hyperlinks()._removeAtHelper(i, removeHyperlinkStyle);
					}
				}
			}
		}
		return {
			p2: hasHyperlinks
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::RemoveHyperlinks(System.Boolean, System.Boolean, System.Boolean, Infragistics.Documents.Excel.Worksheet, System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReplaceActiveSelectionRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	_replaceActiveSelectionRange: function (range) {
		var selection = this.activePane().selection();
		if (selection != null && this._canSelect1(range) && selection._replaceActiveCellRange1(range, selection.activeCell(), true)) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReplaceActiveSelectionRange(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReplaceActiveSelectionRangeInDirection(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	_replaceActiveSelectionRangeInDirection: function (direction, activeCell, selectedRange, targetCell) {
		var $self = this;
		var directionToBringIntoView;
		var newSelectionRange = (function () { var $ret = $self._getNewSelectionRange(direction, activeCell, selectedRange, targetCell, directionToBringIntoView); directionToBringIntoView = $ret.p4; return $ret.ret; }());
		this._replaceActiveSelectionRange(newSelectionRange);
		this._bringDirectionInView(directionToBringIntoView, newSelectionRange, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ReplaceActiveSelectionRangeInDirection(Infragistics.Controls.Grids.Core.Direction, Infragistics.Controls.Grids.Core.SpreadsheetCell, Infragistics.Controls.Grids.Core.SpreadsheetCellRange, Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResetUsedRange()" />*/
	_resetUsedRange: function () {
		this.___actualUsedRangeAddress = this.___usedRangeAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResetUsedRange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeAllColumns(System.Int32)" />*/
	_resizeAllColumns: function (newExtent) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			var columns = ws.columns();
			if (newExtent == 0) {
				for (var i = 0, count = columns.maxCount(); i < count; i++) {
					columns.item(i).hidden(true);
				}
			} else if (newExtent < 0) {
				{
					var metricsProvider = this._createDisplayTextMetricsProvider();
					try {
						var context = new $.ig.CellSizeMeasurementContext(ws.workbook(), metricsProvider);
						var maxRange = this.___maxRangeAddress;
						var usedRange = ws._getUsedRange(maxRange.firstRow(), maxRange.lastRow(), maxRange.firstColumn(), maxRange.lastColumn(), false);
						var hasCellValues = false;
						for (var i1 = usedRange._firstColumnIndex(); i1 < usedRange._lastColumnIndex(); i1++) {
							var column = columns.item(i1);
							var autoFitWidth = column._calculateAutoFitWidth1(usedRange._firstRowIndex(), usedRange._lastRowIndex(), context);
							column.width(!$.ig.util.nullableIsNull(autoFitWidth) ? autoFitWidth.value() : column.width());
							if (hasCellValues) {
								column.hidden(false);
							}
						}
					}
					finally {
						if (metricsProvider != null) {
							metricsProvider.dispose();
						}
					}
				}
			} else {
				ws.defaultColumnWidth(newExtent);
				var en1 = columns._getAllItemsEnumerator().getEnumerator();
				while (en1.moveNext()) {
					var column1 = en1.current();
					column1.hidden(false);
					column1.width(-1);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeAllColumns(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeAllRows(System.Int32)" />*/
	_resizeAllRows: function (newExtent) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			if (newExtent == 0) {
				ws._defaultRowHidden(true);
				var en1 = ws.rows().getEnumerator();
				while (en1.moveNext()) {
					var row = en1.current();
					row.hidden(true);
				}
			} else {
				ws._defaultRowHidden(false);
				ws.defaultRowHeight(newExtent);
				var en2 = ws.rows().getEnumerator();
				while (en2.moveNext()) {
					var row1 = en2.current();
					row1.hidden(false);
					row1.height(newExtent);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeAllRows(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeColumn(System.Int32, System.Int32)" />*/
	_resizeColumn: function (newExtent, index) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var actualExtent = newExtent;
			var ws = tab._worksheet();
			var column = ws.columns().item(index);
			if (actualExtent == 0) {
				column.hidden(true);
			} else {
				if (actualExtent < 0) {
					var autoFitWidth;
					{
						var metricsProvider = this._createDisplayTextMetricsProvider();
						try {
							autoFitWidth = column._calculateAutoFitWidth1(0, ws.rows().maxCount(), new $.ig.CellSizeMeasurementContext(ws.workbook(), metricsProvider));
						}
						finally {
							if (metricsProvider != null) {
								metricsProvider.dispose();
							}
						}
					}
					if (!autoFitWidth.hasValue()) {
						continue;
					}
					actualExtent = autoFitWidth.value();
				}
				column.hidden(false);
				column.width(actualExtent);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeColumn(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeColumns(System.Int32, )" />*/
	_resizeColumns: function (newExtent, ranges) {
		if (newExtent < 0) {
			var cellRanges = new Array(ranges.length);
			for (var i = 0; i < ranges.length; i++) {
				cellRanges[i] = new $.ig.spreadsheet.SpreadsheetCellRange(this.___maxRangeAddress.firstRow(), ranges[i].__start, this.___maxRangeAddress.lastRow(), ranges[i].__end);
			}
			this._autoSizeColumns(cellRanges, false);
		} else {
			for (var i1 = 0; i1 < ranges.length; i1++) {
				var range = ranges[i1];
				for (var i2 = range.__start; i2 <= range.__end; i2++) {
					this._resizeColumn(newExtent, i2);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeColumns(System.Int32, )" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeRow(System.Int32, System.Int32)" />*/
	_resizeRow: function (newExtent, index) {
		this._assertIsTabSelected();
		var en = this.___tabManager._selectedTabs().getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			var ws = tab._worksheet();
			var row = ws.rows().item(index);
			if (newExtent == 0) {
				row.hidden(true);
			} else {
				row.hidden(false);
				row.height(newExtent);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeRow(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeRows(System.Int32, )" />*/
	_resizeRows: function (newExtent, ranges) {
		for (var i = 0; i < ranges.length; i++) {
			var range = ranges[i];
			for (var i1 = range.__start; i1 <= range.__end; i1++) {
				this._resizeRow(newExtent, i1);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ResizeRows(System.Int32, )" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollItems(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double, System.Int32, System.Int32, System.Double, System.Func, System.Func, System.Func)" />*/
	_scrollItems: function (item, scrollAmount, currentOffset, firstUnfrozenIndex, maxItemCount, maxRangeExtent, getAdjacentVisibleItem, getItemPosFromOffset, getItemPosFromIndex) {
		$.ig.Debug.prototype.assert1(!item.isFrozen(), "If a frozen item is scrolled should we be updating the end index?");
		var newIndex = item.startIndex();
		var tempAdjacent;
		switch (scrollAmount) {
			case $.ig.ScrollInfoAmount.prototype.smallIncrement:
				tempAdjacent = getAdjacentVisibleItem(item.startIndex(), true);
				newIndex = !$.ig.util.nullableIsNull(tempAdjacent) ? tempAdjacent.value() : item.startIndex();
				break;
			case $.ig.ScrollInfoAmount.prototype.smallDecrement:
				tempAdjacent = getAdjacentVisibleItem(item.startIndex(), false);
				newIndex = !$.ig.util.nullableIsNull(tempAdjacent) ? tempAdjacent.value() : item.startIndex();
				break;
			case $.ig.ScrollInfoAmount.prototype.largeIncrement:
				var cnt = (item.endIndex() - item.startIndex()) + 1;
				if (!$.ig.CoreUtilities.prototype.areClose(item._endIndexOutOfViewExtent(), 0) && item.endIndex() != item.startIndex()) {
					cnt -= 1;
				}
				tempAdjacent = getAdjacentVisibleItem(item.startIndex() + cnt - 1, true);
				newIndex = !$.ig.util.nullableIsNull(tempAdjacent) ? tempAdjacent.value() : item.startIndex() + cnt;
				break;
			case $.ig.ScrollInfoAmount.prototype.largeDecrement:
				var lastPos = getItemPosFromIndex(item.startIndex());
				if ($.ig.CoreUtilities.prototype.areClose(item._scrollInfo()._offset(), lastPos._offset()) && $.ig.CoreUtilities.prototype.greaterThan(item._scrollInfo()._offset(), item._scrollInfo()._minimum())) {
					lastPos = getItemPosFromIndex(item.startIndex() - 1);
				}
				var prevPageStart = Math.max(lastPos._end() - item._scrollInfo()._viewport(), item._scrollInfo()._minimum());
				var prevPagePos = getItemPosFromOffset($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(prevPageStart)));
				if ($.ig.CoreUtilities.prototype.greaterThan(prevPageStart, prevPagePos._offset())) {
					prevPagePos = getItemPosFromIndex(Math.min(prevPagePos._index() + 1, item.startIndex() - 1));
				}
				$.ig.Debug.prototype.assert(prevPagePos._index() < item.startIndex() || $.ig.CoreUtilities.prototype.areClose(lastPos._offset(), item._scrollInfo()._minimum()));
				newIndex = prevPagePos._index();
				break;
			default: return false;
		}
		return this._scrollItemsImpl(item, newIndex, firstUnfrozenIndex, maxItemCount, maxRangeExtent, getItemPosFromOffset, getItemPosFromIndex);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollItems(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double, System.Int32, System.Int32, System.Double, System.Func, System.Func, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollItemsImpl(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Int32, System.Int32, System.Int32, System.Double, System.Func, System.Func)" />*/
	_scrollItemsImpl: function (item, newIndex, firstUnfrozenIndex, maxItemCount, maxRangeExtent, getItemPosFromOffset, getItemPosFromIndex) {
		item._startIndexOutOfViewExtent(0);
		if (newIndex < 0) {
			newIndex = firstUnfrozenIndex;
		} else {
			newIndex = Math.max(Math.min(newIndex, maxItemCount - 1), firstUnfrozenIndex);
			if (newIndex != item.startIndex()) {
				var cache = item._maxScrollPageCache();
				var si = item._scrollInfo();
				if (cache == null || cache._viewport != si._viewport() || cache._calculatedExtent != maxRangeExtent) {
					var newIndexPos = getItemPosFromIndex(newIndex);
					if (newIndexPos._offset() >= maxRangeExtent - si._viewport()) {
						var pageOffset = maxRangeExtent - si._viewport();
						var pos = getItemPosFromOffset($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(pageOffset)));
						var idx = pos._index();
						if (pos._offset() < pageOffset) {
							idx++;
							pageOffset = pos._end();
						}
						item._maxScrollPageCache(cache = new $.ig.PageStartScrollCache(si._viewport(), maxRangeExtent, pageOffset, idx));
					} else {
						item._maxScrollPageCache(cache = null);
					}
				}
				if (cache != null && newIndex > cache._itemIndex) {
					newIndex = cache._itemIndex;
				}
			}
		}
		item.startIndex(newIndex);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollItemsImpl(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Int32, System.Int32, System.Int32, System.Double, System.Func, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollColumns(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	_scrollColumns: function (item, scrollAmount, currentOffset) {
		return this._scrollItems(item, scrollAmount, currentOffset, this.___firstUnfrozenColumnIndex, this.___worksheet.workbook().maxColumnCount(), this.___maxRangeSize.width(), this._getAdjacentVisibleColumn.runOn(this), this._getColumnPositionFromOffset.runOn(this), this.___worksheet._getColumnPosition.runOn(this.___worksheet));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollColumns(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollRows(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	_scrollRows: function (item, scrollAmount, currentOffset) {
		return this._scrollItems(item, scrollAmount, currentOffset, this.___firstUnfrozenRowIndex, this.___worksheet.workbook().maxRowCount(), this.___maxRangeSize.height(), this._getAdjacentVisibleRow.runOn(this), this.___worksheet._getRowPositionFromOffset.runOn(this.___worksheet), this.___worksheet._getRowPosition.runOn(this.___worksheet));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ScrollRows(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetActiveCellAndSelection(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	_setActiveCellAndSelection: function (newActiveCell, honorAddToSelection) {
		var range = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, this._getCellRange1(newActiveCell.row(), newActiveCell.column()));
		this._setActiveCellAndSelection1(newActiveCell, honorAddToSelection, range);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetActiveCellAndSelection(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetActiveCellAndSelection(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean, System.Nullable)" />*/
	_setActiveCellAndSelection1: function (newActiveCell, honorAddToSelection, rangeToBringIntoView) {
		var pane = this.activePane();
		var selection = pane != null ? pane.selection() : null;
		if (selection != null && this._canSelect(newActiveCell)) {
			var isAddToSelection = selection._cellSelectionMode() == $.ig.SpreadsheetCellSelectionMode.prototype.addToSelection;
			var wasChanged = true;
			if (isAddToSelection) {
				if (honorAddToSelection && !selection._hasCreatedRangeForAddToSelection()) {
					selection._hasCreatedRangeForAddToSelection(true);
					wasChanged = selection._addActiveCellRange(newActiveCell);
				} else {
					wasChanged = selection._replaceActiveCellRange(newActiveCell);
				}
			} else {
				wasChanged = selection._resetSelection1(newActiveCell);
			}
			if (wasChanged && $.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality_Lifted(rangeToBringIntoView, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, null))) {
				this._ensureIsInView1(null, rangeToBringIntoView.value(), true);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetActiveCellAndSelection(Infragistics.Controls.Grids.Core.SpreadsheetCell, System.Boolean, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetNotificationFlag(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags, System.Boolean)" />*/
	_setNotificationFlag: function (flag, set) {
		var newValue = this.___flags;
		if (set) {
			newValue |= flag;
		} else {
			newValue &= ~flag;
		}
		if (newValue == this.___flags) {
			return false;
		}
		this.___flags = newValue;
		this.onPropertyChanged($.ig.SpreadsheetPaneManager.prototype.___internalFlagNames.item(flag));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetNotificationFlag(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetFlag(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags, System.Boolean)" />*/
	_setFlag: function (flag, set) {
		if (set) {
			this.___flags |= flag;
		} else {
			this.___flags &= ~flag;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::SetFlag(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_InternalFlags, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateCachedProperties()" />*/
	_updateCachedProperties: function () {
		this.___showFormulasInCells = this.___worksheet.displayOptions().showFormulasInCells();
		this._activeCellInputMessagePosition(this.___worksheet._validationInputMessagePosition());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateCachedProperties()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateEndIndexOutOfViewExtent(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Func)" />*/
	_updateEndIndexOutOfViewExtent: function (item, getItemPosPixels) {
		if (item.isFrozen() || item._itemPositions().count() == 0) {
			item._endIndexOutOfViewExtent(0);
		} else {
			var lastItem = $.ig.Enumerable.prototype.last$1($.ig.WorksheetItemPosition.prototype.$type, item._itemPositions());
			var clipped = getItemPosPixels(lastItem._end()) - (item._startIndexOutOfViewExtent() + getItemPosPixels(item._itemPositions().__inner[0]._offset()) + item.actualExtent() / this.___zoomLevel);
			item._endIndexOutOfViewExtent(Math.max(clipped, 0));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateEndIndexOutOfViewExtent(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateExcelScrollOffsets()" />*/
	_updateExcelScrollOffsets: function () {
		var options = this.___worksheet.displayOptions();
		var uSettings = options.unfrozenPaneSettings();
		var fSettings = options.frozenPaneSettings();
		var settings = options.panesAreFrozen() ? fSettings : uSettings;
		var wasUpdating = this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isUpdatingExcelScrollOffsets);
		try {
			$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("UpdateExcelScrollOffsetsStart");
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isUpdatingExcelScrollOffsets, true);
			if (this._columns().count() > 0) {
				uSettings.firstColumnInLeftPane(this._columns().item(0).startIndex());
				if (this._columns().count() > 1) {
					settings.firstColumnInRightPane(this._columns().item(1).startIndex());
				}
			}
			if (this._rows().count() > 0) {
				uSettings.firstRowInTopPane(this._rows().item(0).startIndex());
				if (this._rows().count() > 1) {
					settings.firstRowInBottomPane(this._rows().item(1).startIndex());
				}
			}
		}
		finally {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isUpdatingExcelScrollOffsets, wasUpdating);
			$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("UpdateExcelScrollOffsetsEnd");
			$.ig.SpreadsheetUtilities.prototype.measurePerf("UpdateExcelScrollOffsets", "UpdateExcelScrollOffsetsStart", "UpdateExcelScrollOffsetsEnd");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateExcelScrollOffsets()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateExcelSelectionFromPanes()" />*/
	_updateExcelSelectionFromPanes: function () {
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate)) {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.needsExcelSelectionUpdate, false);
			var options = this.___worksheet.displayOptions();
			var location = this._getPaneLocation(this.activePane());
			if ($.ig.util.nullableNotEquals(location, null)) {
				options._activePane(location.value());
			}
			var excelSelections = options._selection().paneSelections();
			if (excelSelections.count() != this._panes().count()) {
				while (excelSelections.count() > this._panes().count()) {
					excelSelections.removeAt(excelSelections.count() - 1);
				}
				while (excelSelections.count() < this._panes().count()) {
					excelSelections.add(new $.ig.WorksheetPaneSelection());
				}
			}
			var activePaneSelection = null;
			for (var i = 0; i < this._panes().count(); i++) {
				var pane = this._panes().item(i);
				var selection = pane.selection();
				var excelSelection = excelSelections.item(i);
				if (pane == this.activePane()) {
					activePaneSelection = excelSelection;
				}
				excelSelection.location(this._getPaneLocation(pane).value());
				excelSelection.activeCell($.ig.SpreadsheetUtilities.prototype.toWorksheetCellAddress(selection.activeCell()));
				excelSelection.activeCellRangesId(selection.activeCellRangeIndex());
				var ranges = selection.cellRanges();
				var excelRanges = excelSelection.ranges();
				excelRanges.clear();
				var en = ranges.getEnumerator();
				while (en.moveNext()) {
					var range = en.current();
					excelRanges.add($.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range));
				}
			}
			if (activePaneSelection != null) {
				var en1 = this.___tabManager._selectedTabs().getEnumerator();
				while (en1.moveNext()) {
					var tab = en1.current();
					if (tab._worksheet() != this.___worksheet) {
						var otherOptions = tab._worksheet().displayOptions();
						var otherSelection = otherOptions._selection();
						otherOptions._verifySelectionInfo();
						var en2 = otherSelection.paneSelections().getEnumerator();
						while (en2.moveNext()) {
							var otherPaneSelection = en2.current();
							otherPaneSelection.initializeFrom(activePaneSelection);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::UpdateExcelSelectionFromPanes()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyActiveSelection()" />*/
	_verifyActiveSelection: function () {
		var activeSelection = this.activePane() != null ? this.activePane().selection() : null;
		var en = this._columns().getEnumerator();
		while (en.moveNext()) {
			var col = en.current();
			col._activeSelection(activeSelection);
		}
		var en1 = this._rows().getEnumerator();
		while (en1.moveNext()) {
			var row = en1.current();
			row._activeSelection(activeSelection);
		}
		if (activeSelection != null) {
			activeSelection._verify();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyActiveSelection()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyHasCellValueChanged()" />*/
	_verifyHasCellValueChanged: function () {
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hadCellValueChanged)) {
			this.___inViewPaneInfo.getValuesForCalculatedCells();
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hadCellValueChanged, false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyHasCellValueChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyPaneInfo()" />*/
	_verifyPaneInfo: function () {
		var wasVerifying = this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyPaneInfo);
		var renderCache = this.__ownerState._renderCache();
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyPaneInfo, true);
		$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoStart");
		renderCache.beginMeasure();
		try {
			this.___inViewPaneInfo.verify();
		}
		finally {
			renderCache.endMeasure();
			$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoEnd");
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyPaneInfo, wasVerifying);
		}
		$.ig.SpreadsheetUtilities.prototype.measurePerf("VerifyPaneInfo", "VerifyPaneInfoStart", "VerifyPaneInfoEnd");
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyPaneInfo()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyRangeSizes()" />*/
	_verifyRangeSizes: function () {
		this._verifyUsedRange();
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasRangeSizesChanged)) {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasRangeSizesChanged, false);
			this.___usedRangeSize = this._getRangeSize(this.___usedRangeAddress);
			this.___scrollRangeSize = this._getRangeSize(this.___scrollRangeAddress);
			this.___maxRangeSize = this._getRangeSize(this.___maxRangeAddress);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyRangeSizes()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyScrollExtents()" />*/
	_verifyScrollExtents: function () {
		this._verifyRangeSizes();
		var wasInitializing = this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isInitializingScrollInfo);
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isInitializingScrollInfo, true);
		try {
			var $ret = this._initializeScrollInfo(this._columns(), this.___usedRangeSize.width(), this.___worksheet.defaultColumnWidth(), this.___worksheet._getColumnPosition.runOn(this.___worksheet), this._getColumnPositionFromOffset.runOn(this), this._getItemPosUnitFromColumnPixels.runOn(this), this.___worksheet.workbook().maxColumnCount(), this.___availableSize.width() + this._rowHeaderAreaExtent(), this.___firstUnfrozenColumnIndex);
			this.___firstUnfrozenColumnIndex = $ret.p8;
			var $ret1 = this._initializeScrollInfo(this._rows(), this.___usedRangeSize.height(), this.___worksheet.defaultRowHeight(), this.___worksheet._getRowPosition.runOn(this.___worksheet), this.___worksheet._getRowPositionFromOffset.runOn(this.___worksheet), this._getItemPosUnitFromRowPixels.runOn(this), this.___worksheet.workbook().maxRowCount(), this.___availableSize.height() + this._columnHeaderAreaExtent(), this.___firstUnfrozenRowIndex);
			this.___firstUnfrozenRowIndex = $ret1.p8;
		}
		finally {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isInitializingScrollInfo, wasInitializing);
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.skipNextScrollSnapshot, false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyScrollExtents()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyScrollBarVisibility()" />*/
	_verifyScrollBarVisibility: function () {
		var wb = this.___worksheet.workbook();
		if (wb == null) {
			return;
		}
		var sbState = wb.windowOptions().scrollBars();
		this._hasHorizontalScrollBar($.ig.SpreadsheetPaneManager.prototype._isScrollBarVisible(sbState, false));
		this._hasVerticalScrollBar($.ig.SpreadsheetPaneManager.prototype._isScrollBarVisible(sbState, true));
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasScrollBarChanged)) {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasScrollBarChanged, false);
			var sbHorz = this._hasHorizontalScrollBar() ? $.ig.ScrollInfoBarVisibility.prototype.visible : $.ig.ScrollInfoBarVisibility.prototype.hidden;
			var sbVert = this._hasVerticalScrollBar() ? $.ig.ScrollInfoBarVisibility.prototype.visible : $.ig.ScrollInfoBarVisibility.prototype.hidden;
			var en = this._columns().getEnumerator();
			while (en.moveNext()) {
				var c = en.current();
				c._scrollInfo()._scrollBarVisibility(sbHorz);
			}
			var en1 = this._rows().getEnumerator();
			while (en1.moveNext()) {
				var r = en1.current();
				r._scrollInfo()._scrollBarVisibility(sbVert);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyScrollBarVisibility()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyScrollRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double, System.Int32, System.Func)" />*/
	_verifyScrollRange: function (item, newOffset, maxIndex, getPosition) {
		if (newOffset < 0) {
			newOffset = 0;
		}
		var pos = getPosition($.ig.truncate($.ig.MathUtilities.prototype.midpointRoundingAwayFromZero(newOffset)));
		var newIndex;
		var newIndexOutOfView;
		if (item._scrollInfo()._usePixelLevelScrolling()) {
			newIndex = pos._index();
			newIndexOutOfView = item._convertItemUnitsToPixels()($.ig.truncate(newOffset) - pos._offset());
		} else {
			newIndex = Math.min(newOffset < (pos._offset() + $.ig.intDivide(pos._extent(), 2)) ? pos._index() : pos._index() + 1, maxIndex - 1);
			newIndexOutOfView = 0;
		}
		item.startIndex(newIndex);
		item._startIndexOutOfViewExtent(newIndexOutOfView);
		this._isLayoutDirty(true);
		return newOffset;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyScrollRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double, System.Int32, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyColumnScrollRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double)" />*/
	_verifyColumnScrollRange: function (item, newOffset) {
		return this._verifyScrollRange(item, newOffset, this.___worksheet.workbook().maxColumnCount(), this._getColumnPositionFromOffset.runOn(this));
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyColumnScrollRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyRowScrollRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double)" />*/
	_verifyRowScrollRange: function (item, newOffset) {
		return this._verifyScrollRange(item, newOffset, this.___worksheet.workbook().maxRowCount(), this.___worksheet._getRowPositionFromOffset.runOn(this.___worksheet));
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyRowScrollRange(Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyState()" />*/
	_verifyState: function () {
		var wasVerifying = this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyingState);
		if (wasVerifying) {
			return;
		}
		this.___deferredOperation.cancelPendingOperation();
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyingState, true);
		try {
			this._updateExcelSelectionFromPanes();
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPendingChangeNotifications)) {
				this._processPendingChanges(true);
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasPaneSettingsChanged)) {
				this._initializeRowsAndColumns();
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasHeaderPropertiesChanged)) {
				this._initializeHeaderProperties();
			}
			this._verifyScrollBarVisibility();
			this._updateExcelSelectionFromPanes();
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasResourceProviderChanged)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasResourceProviderChanged, false);
				var en = this._rows().getEnumerator();
				while (en.moveNext()) {
					var r = en.current();
					r._resourceProvider(this._resourceProvider());
				}
				var en1 = this._columns().getEnumerator();
				while (en1.moveNext()) {
					var c = en1.current();
					c._resourceProvider(this._resourceProvider());
				}
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasActiveCellChanged)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasActiveCellChanged, false);
				var pane = this.activePane();
				if (pane != null) {
					pane.selection()._verifyActiveCellResolved();
				}
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasSelectionChanged)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasSelectionChanged, false);
				var pane1 = this.activePane();
				var selection = pane1 != null ? pane1.selection() : null;
				this._hasSingleSelectionWithAllRowsAndColumns(selection != null && selection._selectedColumns().count() == 1 && selection._selectedColumns().item(0).__start <= this.___maxRangeAddress.firstColumn() && selection._selectedColumns().item(0).__end >= this.___maxRangeAddress.lastColumn() && selection._selectedRows().count() == 1 && selection._selectedRows().item(0).__start <= this.___maxRangeAddress.firstRow() && selection._selectedRows().item(0).__end >= this.___maxRangeAddress.firstColumn());
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellPane)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellPane, false);
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellInputMessage, true);
				var pane2 = this.activePane();
				var selection1 = pane2 != null ? pane2.selection() : null;
				this._activeCellPane(selection1 != null ? this._getPaneForCell(selection1.activeCell()) : null);
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellInputMessage)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.verifyActiveCellInputMessage, false);
				var pane3 = this.activePane();
				var selection2 = pane3 != null ? pane3.selection() : null;
				var rule = selection2 == null || this.___worksheet._hasDataValidationRules() == false ? null : this.___worksheet.dataValidationRules()._findRule1($.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress(selection2.activeCell()));
				this._activeCellInputMessage(rule == null || rule.showInputMessage() == false || String.isNullOrEmpty(rule.inputMessageDescription()) ? null : $.ig.Tuple.prototype.create$2(String, String, rule.inputMessageTitle(), rule.inputMessageDescription()));
			}
			if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasValidationRulesChanged)) {
				this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasValidationRulesChanged, false);
				var invalidCircles = this.___worksheet._cellsWithInvalidValueCircles();
				var oldCount = invalidCircles.count();
				for (var i = oldCount - 1; i >= 0; i--) {
					if (invalidCircles.__inner[i].dataValidationRule() == null) {
						invalidCircles.removeAt(i);
					}
				}
				if (oldCount != invalidCircles.count()) {
					this._isLayoutDirty(true);
				}
			}
		}
		finally {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isVerifyingState, wasVerifying);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyUsedRange()" />*/
	_verifyUsedRange: function () {
		if (this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasUsedRangeChanged)) {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasUsedRangeChanged, false);
			this.___actualUsedRangeAddress = this._calculateUsedRange();
			var MinRows = 20;
			var MinCols = 8;
			this.___usedRangeAddress = new $.ig.spreadsheet.SpreadsheetCellRange(this.___actualUsedRangeAddress.firstRow(), this.___actualUsedRangeAddress.firstColumn(), Math.max(this.___actualUsedRangeAddress.lastRow(), Math.min(this.___maxRangeAddress.lastRow(), this.___actualUsedRangeAddress.firstRow() + MinRows)), Math.max(this.___actualUsedRangeAddress.lastColumn(), Math.min(this.___maxRangeAddress.lastColumn(), this.___actualUsedRangeAddress.firstColumn() + MinCols)));
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasRangeSizesChanged, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::VerifyUsedRange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ZoomToSelection(System.Boolean)" />*/
	_zoomToSelection: function (onlyProcessPendingZoom) {
		var wb = this.___worksheet.workbook();
		if (wb == null) {
			return;
		}
		var range = this.activePane().selection()._getCellRangeUnion(true);
		if (onlyProcessPendingZoom) {
			if ($.ig.WorksheetRegionAddress.prototype._l_op_Equality_Lifted(this.___worksheet.___pendingZoomToSelectionRegion, $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null))) {
				return;
			}
			range = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(this.___worksheet.___pendingZoomToSelectionRegion.value());
		} else {
			var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(range);
			var en = this.___tabManager._selectedTabs().getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				tab._worksheet().___pendingZoomToSelectionRegion = $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, excelRange);
			}
		}
		this.___worksheet.___pendingZoomToSelectionRegion = $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null);
		var top = this._getPixelsFromRowItemPosUnits(this.___worksheet._getRowPosition(range.firstRow())._offset());
		var bottom = this._getPixelsFromRowItemPosUnits(this.___worksheet._getRowPosition(range.lastRow())._end());
		var left = this._getPixelsFromColumnItemPosUnits(this.___worksheet._getColumnPosition(range.firstColumn())._offset());
		var right = this._getPixelsFromColumnItemPosUnits(this.___worksheet._getColumnPosition(range.lastColumn())._end());
		var unzoomedWidth = right - left;
		var unzoomedHeight = bottom - top;
		if (this._rows().item(0).isFrozen() && this._rows().item(0).startIndex() < range.firstRow()) {
			var frozenTop = this._getPixelsFromRowItemPosUnits(this.___worksheet._getRowPosition(this._rows().item(0).startIndex())._offset());
			var frozenBottom = this._getPixelsFromRowItemPosUnits(this.___worksheet._getRowPosition(Math.min(this._rows().item(0).endIndex(), range.firstRow() - 1))._end());
			unzoomedHeight += frozenBottom - frozenTop;
		}
		if (this._columns().item(0).isFrozen() && this._columns().item(0).startIndex() < range.firstColumn()) {
			var frozenLeft = this._getPixelsFromColumnItemPosUnits(this.___worksheet._getColumnPosition(this._columns().item(0).startIndex())._offset());
			var frozenRight = this._getPixelsFromColumnItemPosUnits(this.___worksheet._getColumnPosition(Math.min(this._columns().item(0).endIndex(), range.firstColumn() - 1))._end());
			unzoomedWidth += frozenRight - frozenLeft;
		}
		var areHeadersVisible = this.___worksheet.displayOptions().showRowAndColumnHeaders();
		var availableSize = this.___availableSize;
		if (areHeadersVisible) {
			var lastRow = Math.max(range.lastRow(), $.ig.SpreadsheetUtilities.prototype.minHeaderIndexForMeasure);
			var lastRowHeader;
			if (wb.cellReferenceMode() == $.ig.excel.CellReferenceMode.a1) {
				lastRowHeader = this._getRowHeaderTextA1(lastRow);
			} else {
				lastRowHeader = this._getRowHeaderTextR1C1(lastRow);
			}
			var rowHeaderWidth = this.__ownerState._renderCache().calculateHeaderTextWidth(this._rows().item(0), lastRowHeader);
			var unzoomedColumnAreaHeight = this.__ownerState._renderCache().calculateColumnHeaderHeight(wb, 100, 0);
			var maxRowHeaderWidth = rowHeaderWidth;
			unzoomedHeight += unzoomedColumnAreaHeight;
			unzoomedWidth += maxRowHeaderWidth;
			availableSize.height(availableSize.height() + (Math.max(0, this._columnHeaderAreaExtent() - ($.ig.SpreadsheetUtilities.prototype.extraHeaderPadding * this.___pixelSizeY + this.___pixelSizeY))));
			availableSize.width(availableSize.width() + (Math.max(0, this._rowHeaderAreaExtent() - ($.ig.SpreadsheetUtilities.prototype.extraHeaderPadding * this.___pixelSizeX + this.___pixelSizeX))));
		}
		var zoomHorz = Math.floor(availableSize.width() / unzoomedWidth * 100);
		var zoomVert = Math.floor(availableSize.height() / unzoomedHeight * 100);
		this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.isSelectionZoom, true);
		var newZoom = $.ig.truncate($.ig.CoreUtilities.prototype.clamp(Math.min(zoomHorz, zoomVert), 10, 400));
		if (newZoom != this.___worksheet.displayOptions().magnificationInNormalView()) {
			this.___worksheet.displayOptions().magnificationInNormalView(newZoom);
		} else if (!this._getFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasZoomChanged)) {
			this._setFlag($.ig.SpreadsheetPaneManager_InternalFlags.prototype.hasZoomChanged, true);
			this._processPendingZoomChange();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::ZoomToSelection(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.ActivatePane(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	activatePane: function (pane) {
		if (!(this).canActivatePane(pane)) {
			return false;
		}
		$.ig.Debug.prototype.assert(this._panes().contains(pane));
		if (this.activePane() != pane) {
			if (this.___onActivePaneChanging != null && !this.___onActivePaneChanging(pane)) {
				return false;
			}
		}
		this.activePane(pane);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.ActivatePane(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.ScrollRangeIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Nullable, System.Nullable)" />*/
	scrollRangeIntoView: function (pane, rowRange, columnRange) {
		rowRange = $.ig.util.wrapNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), rowRange);
		columnRange = $.ig.util.wrapNullable($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), columnRange);
		this._ensureIsInView2(pane, rowRange, columnRange, true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.ScrollRangeIntoView(Infragistics.Controls.Grids.Core.SpreadsheetPane, System.Nullable, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.CanActivatePane(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	canActivatePane: function (pane) {
		return !pane.rowScrollRegion().isFrozen() && !pane.columnScrollRegion().isFrozen();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.CanActivatePane(Infragistics.Controls.Grids.Core.SpreadsheetPane)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	canSelect: function (cell) {
		return this._canSelect(cell);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCell)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	canSelect1: function (range) {
		return this._canSelect1(range);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.CanSelect(Infragistics.Controls.Grids.Core.SpreadsheetCellRange)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPane(Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion)" />*/
	getPane: function (rowScrollRegion, columnScrollRegion) {
		var en = this._panes().getEnumerator();
		while (en.moveNext()) {
			var pane = en.current();
			if (pane.rowScrollRegion() == rowScrollRegion && pane.columnScrollRegion() == columnScrollRegion) {
				return pane;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetPane Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::GetPane(Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion, Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.RenderCache()" />*/
	renderCache: function () {
		return this.__ownerState._renderCache();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.RenderCache()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetOwnerState Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.SpreadsheetOwnerState()" />*/
	spreadsheetOwnerState: function () {
		return this.__ownerState;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetOwnerState Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.SpreadsheetOwnerState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.VerifyScrollPositions()" />*/
	verifyScrollPositions: function () {
		if (!this.___availableSize.isEmpty()) {
			this._measure(this.___availableSize);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager::Infragistics.Controls.Grids.Core.ISpreadsheetPaneOwner.VerifyScrollPositions()" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneManager', $.ig.PropertyChangeNotifierExtended.prototype.$type, [$.ig.ISpreadsheetPaneOwner.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper" />*/

$.ig.util.defType('SpreadsheetPaneManager_IndentHelper', 'Object', {
	__worksheets: null,
	__currentWorksheet: null,
	__minIndent: 0,
	__maxIndent: 0,
	__datasRead: null,
	__horzAlignment: $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, null),
	__nextColumn: 0,
	__adjustment: 0,
	__cellsUpdated: null,
	__increase: false,
	__activePane: null,
	__availableRange: null,
	init: function (manager, increase) {
		this.__minIndent = 0x7FFFFFFF;
		this.__maxIndent = 0;
		this.__nextColumn = -1;
		this.__availableRange = new $.ig.spreadsheet.SpreadsheetCellRange();
		$.ig.Object.prototype.init.call(this);
		this.__activePane = manager.activePane();
		this.__availableRange = manager._getAvailableRange();
		this.__adjustment = increase ? 1 : -1;
		this.__increase = increase;
		this.__worksheets = $.ig.Enumerable.prototype.toArray$1($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.excel.Worksheet.prototype.$type, manager._tabManager()._selectedTabs(), function (t) { return t._worksheet(); }));
		this.__datasRead = new $.ig.HashSet$1($.ig.WorksheetCellFormatData.prototype.$type, 0);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ChangeIndent()" />*/
	changeIndent: function () {
		var pane = this.__activePane;
		if (pane == null) {
			return;
		}
		var availableRange = this.__availableRange;
		var $t = this.__worksheets;
		for (var i = 0; i < $t.length; i++) {
			var ws = $t[i];
			this.__currentWorksheet = ws;
			var searchCells = this.searchCells.runOn(this);
			var en = pane.selection().cellRanges().getEnumerator();
			while (en.moveNext()) {
				var range = en.current();
				this.__datasRead.clear();
				var isColSelection = range.firstRow() <= availableRange.firstRow() && range.lastRow() >= availableRange.lastRow();
				var isRowSelection = range.firstColumn() <= availableRange.firstColumn() && range.lastColumn() >= availableRange.lastColumn();
				var colStart = Math.max(range.firstColumn(), availableRange.firstColumn());
				var colEnd = Math.min(range.lastColumn(), availableRange.lastColumn());
				var rowStart = Math.max(range.firstRow(), availableRange.firstRow());
				var rowEnd = Math.min(range.lastRow(), availableRange.lastRow());
				var rowsProcessed = 0;
				var en1 = ws.rows()._getItemsInRange(rowStart, rowEnd).getEnumerator();
				while (en1.moveNext()) {
					var row = en1.current();
					rowsProcessed++;
					this.__nextColumn = colStart;
					row._getCellFormatForCellsInRange(colStart, colEnd, searchCells);
					this.readColumnBlockIndent(row, (colEnd + 1));
				}
				if (rowsProcessed < (rowEnd + 1 - rowStart)) {
					this.__nextColumn = colStart;
					this.readColumnBlockIndent(null, (colEnd + 1));
				}
				if (this.__minIndent == 0 && this.__increase == false) {
					return;
				} else if (this.__maxIndent == $.ig.WorksheetCellFormatData.prototype._maxIndent2007 && this.__increase) {
					return;
				}
			}
			this.__cellsUpdated = null;
			if (pane.selection()._hasOverlappingRanges()) {
				this.__cellsUpdated = new $.ig.HashSet$1($.ig.spreadsheet.SpreadsheetCell.prototype.$type, 0);
			}
			var setRowCellIndent = this.setRowCellIndent.runOn(this);
			var en2 = pane.selection().cellRanges().getEnumerator();
			while (en2.moveNext()) {
				var range1 = en2.current();
				var isColSelection1 = range1.firstRow() <= availableRange.firstRow() && range1.lastRow() >= availableRange.lastRow();
				var colStart1 = Math.max(range1.firstColumn(), availableRange.firstColumn());
				var colEnd1 = Math.min(range1.lastColumn(), availableRange.lastColumn());
				var rowStart1 = Math.max(range1.firstRow(), availableRange.firstRow());
				var rowEnd1 = Math.min(range1.lastRow(), availableRange.lastRow());
				if (isColSelection1) {
					for (var col = colStart1; col <= colEnd1; col++) {
						this.setIndent(ws.columns().item(col)._cellFormatInternal(), true);
					}
					var en3 = ws.rows()._getItemsInRange(rowStart1, rowEnd1).getEnumerator();
					while (en3.moveNext()) {
						var row1 = en3.current();
						row1._getCellFormatForCellsInRange(colStart1, colEnd1, setRowCellIndent);
					}
				} else {
					var isRowSelection1 = range1.firstColumn() <= availableRange.firstColumn() && range1.lastColumn() >= availableRange.lastColumn();
					if (isRowSelection1) {
						for (var rowIdx = range1.firstRow(); rowIdx <= range1.lastRow(); rowIdx++) {
							var row2 = ws.rows().item(rowIdx);
							this.setIndent(row2._cellFormatInternal(), true);
							row2._getCellFormatForCellsInRange(colStart1, colEnd1, setRowCellIndent);
						}
					} else {
						for (var rowIdx1 = range1.firstRow(); rowIdx1 <= range1.lastRow(); rowIdx1++) {
							var row3 = ws.rows().item(rowIdx1);
							for (var colIdx = range1.firstColumn(); colIdx <= range1.lastColumn(); colIdx++) {
								this.setCellIndent(row3, colIdx);
							}
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ChangeIndent()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::GetIndent(Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	getIndent: function (data, alignment) {
		var indent = data._indentResolved();
		if (indent != 0) {
			var rotation = data._computedRotation();
			if (rotation == 0) {
				switch (alignment) {
					case $.ig.excel.HorizontalCellAlignment.left:
					case $.ig.excel.HorizontalCellAlignment.right:
					case $.ig.excel.HorizontalCellAlignment.distributed:
						break;
					default:
						indent = 0;
						break;
				}
			} else if (rotation == 255) {
				switch (data._computedVerticalAlignment()) {
					case $.ig.excel.VerticalCellAlignment.top:
					case $.ig.excel.VerticalCellAlignment.bottom:
					case $.ig.excel.VerticalCellAlignment.distributed:
						break;
					default:
						indent = 0;
						break;
				}
			} else {
				indent = 0;
			}
		}
		return indent;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::GetIndent(Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.HorizontalCellAlignment)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ReadColumnBlockIndent(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	readColumnBlockIndent: function (currentRow, colIndex) {
		while (colIndex > this.__nextColumn) {
			var block = this.__currentWorksheet._getColumnBlock(this.__nextColumn);
			if (currentRow != null && currentRow._hasCellFormat()) {
				this.readIndentData(currentRow._cellFormatInternal().element());
			} else if (block.cellFormat() != null) {
				this.readIndentData(block.cellFormat());
			} else {
				this.readIndentData(this.__currentWorksheet.workbook()._cellFormats()._defaultElement());
			}
			this.__nextColumn = (block.lastColumnIndex() + 1);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ReadColumnBlockIndent(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ReadIndentData(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	readIndentData: function (data) {
		if (this.__datasRead.add(data)) {
			var alignment = data._alignmentResolved();
			if (this.__datasRead.count() == 1) {
				this.__horzAlignment = $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, alignment);
			} else if ($.ig.util.nullableNotEquals(alignment, this.__horzAlignment)) {
				this.__horzAlignment = $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, null);
			}
			var indent = $.ig.SpreadsheetPaneManager_IndentHelper.prototype.getIndent(data, alignment);
			if (indent < this.__minIndent) {
				this.__minIndent = indent;
			}
			if (indent > this.__maxIndent) {
				this.__maxIndent = indent;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ReadIndentData(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SearchCells(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Int16)" />*/
	searchCells: function (currentRow, data, colIndex) {
		this.readColumnBlockIndent(currentRow, colIndex);
		this.readIndentData(data);
		this.__nextColumn = (colIndex + 1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SearchCells(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SetCellIndent(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	setCellIndent: function (currentRow, colIndex) {
		var cell = new $.ig.spreadsheet.SpreadsheetCell(currentRow.index(), colIndex);
		if (this.__cellsUpdated == null || this.__cellsUpdated.add(cell)) {
			var ws = currentRow.worksheet();
			var range = $.ig.SpreadsheetPaneManager.prototype._getCellRange2(cell.row(), cell.column(), ws);
			if (range.isSingleCell() == false) {
				if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted($.ig.SpreadsheetPaneManager.prototype._getFirstVisibleCell1(range, ws), $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, cell))) {
					return;
				}
			}
			var fmt = currentRow._getCellFormatInternal1(colIndex);
			this.setIndent(fmt, false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SetCellIndent(Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SetIndent(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Boolean)" />*/
	setIndent: function (fmt, skipMerge) {
		var data = fmt.element();
		var rotation = data._rotationResolved();
		var setHorzAlignment = $.ig.util.nullableEquals(this.__horzAlignment, null);
		var indent = data._indentResolved();
		var setOptions = skipMerge ? $.ig.CellFormatValueChangedOptions.prototype.preventOwnerToCellSynchronization : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior;
		if (rotation == 0) {
			switch (data._alignmentResolved()) {
				case $.ig.excel.HorizontalCellAlignment.left:
				case $.ig.excel.HorizontalCellAlignment.right:
				case $.ig.excel.HorizontalCellAlignment.distributed:
					break;
				default:
					indent = 0;
					setHorzAlignment = true;
					break;
			}
		} else if (rotation == 255) {
			switch (data._computedVerticalAlignment()) {
				case $.ig.excel.VerticalCellAlignment.top:
				case $.ig.excel.VerticalCellAlignment.bottom:
				case $.ig.excel.VerticalCellAlignment.distributed:
					break;
				default:
					indent = 0;
					fmt._setVerticalAlignment($.ig.excel.VerticalCellAlignment.bottom, true, setOptions);
					break;
			}
		} else {
			data.rotation(0);
			indent = 0;
		}
		if (setHorzAlignment) {
			fmt._setAlignment(rotation == 255 ? $.ig.excel.HorizontalCellAlignment.general : $.ig.excel.HorizontalCellAlignment.left, true, setOptions);
		}
		fmt._setIndent(indent + this.__adjustment, true, setOptions);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SetIndent(Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SetRowCellIndent(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Int16)" />*/
	setRowCellIndent: function (currentRow, data, colIndex) {
		this.setCellIndent(currentRow, colIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::SetRowCellIndent(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ChangeIndent(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, System.Boolean)" />*/
	changeIndent1: function (manager, increase) {
		var helper = new $.ig.SpreadsheetPaneManager_IndentHelper(manager, increase);
		helper.changeIndent();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper::ChangeIndent(Infragistics.Controls.Grids.Core.SpreadsheetPaneManager, System.Boolean)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneManager_IndentHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_IndentHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_MergedCellOperationInfo" />*/

$.ig.util.defType('SpreadsheetPaneManager_MergedCellOperationInfo', 'Object', {
	_selectedMergedCellRegions: null,
	_hasUpdatedSelection: false,
	_rangesToProcess: null,
	_worksheet: null,
	_hasOverlappingRanges: false,
	init: function (worksheet, selectionRanges) {
		this._selectedMergedCellRegions = new $.ig.HashSet$1($.ig.excel.WorksheetMergedCellsRegion.prototype.$type, 0);
		$.ig.Object.prototype.init.call(this);
		var selectedMergedRegions = new $.ig.HashSet$1($.ig.excel.WorksheetMergedCellsRegion.prototype.$type, 0);
		var updatedSelection = false;
		var ranges = new Array(selectionRanges.length);
		$.ig.util.arrayCopyTo(selectionRanges, ranges, 0);
		if (worksheet._hasMergedCellRegions()) {
			for (var i = ranges.length - 1; i >= 0; i--) {
				var range = ranges[i];
				var isContainedRegion = false;
				for (var j = i + 1; j < ranges.length; j++) {
					if (range._contains1(ranges[j])) {
						isContainedRegion = true;
						break;
					}
				}
				if (isContainedRegion) {
					continue;
				}
				var extendedRange = $.ig.SpreadsheetPaneManager.prototype._extendRangeForMergedCells1(worksheet, range, selectedMergedRegions);
				if ($.ig.spreadsheet.SpreadsheetCellRange.prototype.l_op_Inequality(extendedRange, range)) {
					ranges[i] = extendedRange;
					updatedSelection = true;
				}
			}
		}
		this._hasUpdatedSelection = updatedSelection;
		this._rangesToProcess = ranges;
		this._hasOverlappingRanges = $.ig.spreadsheet.SpreadsheetCellRange.prototype._hasAnyOverlappingRanges(ranges);
		this._selectedMergedCellRegions = selectedMergedRegions;
		this._worksheet = worksheet;
	},
	$type: new $.ig.Type('SpreadsheetPaneManager_MergedCellOperationInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_MergedCellOperationInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper" />*/

$.ig.util.defType('SpreadsheetPaneManager_SetBorderHelper', 'Object', {
	__color: null,
	__style: 0,
	__borders: 0,
	__isNoneBorder: false,
	__hasDiagonalDown: false,
	__hasDiagonalUp: false,
	init: function (borders, color, style) {
		$.ig.Object.prototype.init.call(this);
		this.__color = color;
		this.__style = style;
		this.__borders = borders;
		this.__isNoneBorder = style == $.ig.excel.CellBorderLineStyle.none;
		this.__hasDiagonalDown = (this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.diagonalDown) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.diagonalDown;
		this.__hasDiagonalUp = (this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.diagonalUp) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.diagonalUp;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetBottom(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setBottom: function (format) {
		format.bottomBorderStyle(this.__style);
		format.bottomBorderColorInfo(this.__color);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetBottom(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetDiagonal(Infragistics.Documents.Excel.WorksheetCellFormatProxy)" />*/
	setDiagonal: function (data) {
		var border = data.diagonalBorders();
		var options = $.ig.util.cast($.ig.excel.RowColumnBase.prototype.$type, data._owner()) !== null ? $.ig.CellFormatValueChangedOptions.prototype.preventOwnerToCellSynchronization : $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior;
		if (this.__isNoneBorder) {
			if (border != $.ig.excel.DiagonalBorders.none) {
				if (this.__hasDiagonalUp) {
					if (this.__hasDiagonalDown || border == $.ig.excel.DiagonalBorders.diagonalUp) {
						data._setDiagonalBorders($.ig.excel.DiagonalBorders.none, true, options);
						data._setDiagonalBorderColorInfo(null, true, options);
						data._setDiagonalBorderStyle($.ig.excel.CellBorderLineStyle.none, true, options);
					} else if (border != $.ig.excel.DiagonalBorders.$default) {
						data._setDiagonalBorders($.ig.excel.DiagonalBorders.diagonalDown, true, options);
					}
				} else if (border == $.ig.excel.DiagonalBorders.all) {
					data._setDiagonalBorders($.ig.excel.DiagonalBorders.diagonalUp, true, options);
				} else if (border == $.ig.excel.DiagonalBorders.diagonalDown) {
					data._setDiagonalBorders($.ig.excel.DiagonalBorders.none, true, options);
					data._setDiagonalBorderColorInfo(null, true, options);
					data._setDiagonalBorderStyle($.ig.excel.CellBorderLineStyle.none, true, options);
				}
			}
		} else {
			if (border == $.ig.excel.DiagonalBorders.none) {
				border = $.ig.excel.DiagonalBorders.$default;
			}
			if (this.__hasDiagonalUp) {
				border |= $.ig.excel.DiagonalBorders.diagonalUp;
			}
			if (this.__hasDiagonalDown) {
				border |= $.ig.excel.DiagonalBorders.diagonalDown;
			}
			data._setDiagonalBorders(border, true, options);
			data._setDiagonalBorderColorInfo(this.__color, true, options);
			data._setDiagonalBorderStyle(this.__style, true, options);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetDiagonal(Infragistics.Documents.Excel.WorksheetCellFormatProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetDiagonalOnRowCell(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Int16)" />*/
	setDiagonalOnRowCell: function (row, data, colIndex) {
		this.setDiagonal(row._getCellFormatInternal1(colIndex));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetDiagonalOnRowCell(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetCellFormatData, System.Int16)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetLeft(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setLeft: function (format) {
		format.leftBorderStyle(this.__style);
		format.leftBorderColorInfo(this.__color);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetLeft(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetLeftAndRight(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setLeftAndRight: function (format) {
		format.leftBorderStyle(this.__style);
		format.leftBorderColorInfo(this.__color);
		format.rightBorderStyle(this.__style);
		format.rightBorderColorInfo(this.__color);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetLeftAndRight(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetMergedCellBorders(Infragistics.Documents.Excel.WorksheetMergedCellsRegion, Infragistics.Documents.Excel.WorksheetRegionAddress, System.Boolean, System.Boolean)" />*/
	setMergedCellBorders: function (mergedCell, selectionRange, horizontalBorders, verticalBorders) {
		if (horizontalBorders) {
			if (mergedCell.firstRow() == selectionRange._firstRowIndex()) {
				if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.topBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.topBorder) {
					this.setTop(mergedCell.cellFormat());
				}
			} else if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) {
				this.setTop(mergedCell.cellFormat());
			}
			if (mergedCell.lastRow() == selectionRange._lastRowIndex()) {
				if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.bottomBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.bottomBorder) {
					this.setBottom(mergedCell.cellFormat());
				}
			} else if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideHorizontal) {
				this.setBottom(mergedCell.cellFormat());
			}
		}
		if (verticalBorders) {
			if (mergedCell.firstColumn() == selectionRange._firstColumnIndex()) {
				if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.leftBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.leftBorder) {
					this.setLeft(mergedCell.cellFormat());
				}
			} else if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.insideVertical) {
				this.setLeft(mergedCell.cellFormat());
			}
			if (mergedCell.lastColumn() == selectionRange._lastColumnIndex()) {
				if ((this.__borders & $.ig.spreadsheet.SpreadsheetCellRangeBorders.rightBorder) == $.ig.spreadsheet.SpreadsheetCellRangeBorders.rightBorder) {
					this.setRight(mergedCell.cellFormat());
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetMergedCellBorders(Infragistics.Documents.Excel.WorksheetMergedCellsRegion, Infragistics.Documents.Excel.WorksheetRegionAddress, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetRight(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setRight: function (format) {
		format.rightBorderStyle(this.__style);
		format.rightBorderColorInfo(this.__color);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetRight(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetTop(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setTop: function (format) {
		format.topBorderStyle(this.__style);
		format.topBorderColorInfo(this.__color);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetTop(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetTopAndBottom(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	setTopAndBottom: function (format) {
		format.topBorderStyle(this.__style);
		format.topBorderColorInfo(this.__color);
		format.bottomBorderStyle(this.__style);
		format.bottomBorderColorInfo(this.__color);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper::SetTopAndBottom(Infragistics.Documents.Excel.IWorksheetCellFormat)" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneManager_SetBorderHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager_SetBorderHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.InViewPaneInfo" />*/

$.ig.util.defType('InViewPaneInfo', 'Object', {
	__cellValueChangedVersion: 0,
	__cellsInViewWithCalculations: null,
	__gridlinePen: null,
	__backgroundBrush: null,
	__originalImageBackground: null,
	__worksheet: null,
	__manager: null,
	__redrawShapes: false,
	__rotationHelper: null,
	__cachedCellInfos: null,
	__cachedMergedInfos: null,
	__maxRangeAddress: null,
	__cachedFormats: null,
	init: function (manager) {
		this.__cellValueChangedVersion = 1;
		this.__maxRangeAddress = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
		$.ig.Object.prototype.init.call(this);
		this.__manager = manager;
		this.__worksheet = manager._worksheet();
		this.__rotationHelper = new $.ig.RotationHelper();
		this.__cachedCellInfos = new $.ig.Dictionary$2($.ig.spreadsheet.SpreadsheetCell.prototype.$type, $.ig.SpreadsheetCellValueInfo.prototype.$type, 0);
		this.__cachedMergedInfos = new $.ig.WeakDictionary$2($.ig.excel.WorksheetMergedCellsRegion.prototype.$type, $.ig.SpreadsheetCellValueInfo.prototype.$type, 0, true, false);
		this.__cellsInViewWithCalculations = new $.ig.HashSet$1($.ig.spreadsheet.SpreadsheetCell.prototype.$type, 0);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::AdjustBorderForLeftRight(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32)" />*/
	adjustBorderForLeftRight: function (left, renderInfo, r, c) {
		var vertThickness = Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r - 1, c)._leftBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r, c)._leftBorderStyle));
		var horzThickness = Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r, c - 1)._topBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r, c)._topBorderStyle));
		if (left) {
			if (vertThickness == 3) {
				renderInfo.item(r, c - 1)._rightOffset = -1;
				renderInfo.item(r, c)._leftOffset = 1;
			}
		} else {
			var leftValue = vertThickness <= 1 ? -1 : -2;
			renderInfo.item(r, c)._leftOffset = leftValue;
			renderInfo.item(r, c - 1)._rightOffset = -leftValue;
		}
		renderInfo.item(r - 1, c)._bottomOffset = horzThickness == 1 ? 1 : 2;
		if (horzThickness == 3) {
			renderInfo.item(r, c)._topOffset = 1;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::AdjustBorderForLeftRight(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::AdjustBorderForTopBottom(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32)" />*/
	adjustBorderForTopBottom: function (top, renderInfo, r, c) {
		var vertThickness = Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r - 1, c)._leftBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r, c)._leftBorderStyle));
		var horzThickness = Math.max($.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r, c - 1)._topBorderStyle), $.ig.SpreadsheetUtilities.prototype.getBorderThickness(renderInfo.item(r, c)._topBorderStyle));
		if (top) {
			if (horzThickness == 3) {
				renderInfo.item(r - 1, c)._bottomOffset = -1;
				renderInfo.item(r, c)._topOffset = 1;
			}
		} else {
			var bottom = horzThickness <= 1 ? -1 : -2;
			renderInfo.item(r, c)._topOffset = bottom;
			renderInfo.item(r - 1, c)._bottomOffset = -bottom;
		}
		renderInfo.item(r, c - 1)._rightOffset = vertThickness == 1 ? 1 : 2;
		if (vertThickness == 3) {
			renderInfo.item(r, c)._leftOffset = 1;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::AdjustBorderForTopBottom(System.Boolean, Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::ClearCellInfos()" />*/
	clearCellInfos: function () {
		this.__cachedCellInfos.clear();
		this.__cachedMergedInfos.clear();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::ClearCellInfos()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::DirtyGridLinePen()" />*/
	dirtyGridLinePen: function () {
		this.__gridlinePen = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::DirtyGridLinePen()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::DirtyShapeInfo()" />*/
	dirtyShapeInfo: function () {
		this.__redrawShapes = true;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::DirtyShapeInfo()" />*/
	,
	__cachedCellFormatsKey: null,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.InViewPaneInfo::GetCellFormatElementReadOnly(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	getCellFormatElementReadOnly: function (row, rowIndex, column) {
		var $self = this;
		var format;
		if (this.__cachedFormats != null) {
			var cell = this.__cachedCellFormatsKey;
			if (cell == null) {
				this.__cachedCellFormatsKey = cell = new $.ig.SpreadsheetCellClass();
			}
			cell.__row = rowIndex;
			cell.__column = column;
			if (!(function () { var $ret = $self.__cachedFormats.tryGetValue(cell, format); format = $ret.p1; return $ret.ret; }())) {
				format = this.__worksheet._getCellFormatElementReadOnly(row, column);
				var tableFormat = this.__worksheet._getTableCellFormatElementReadOnly(format, rowIndex, column);
				if (tableFormat != null) {
					this.__cachedFormats.item(cell, format = tableFormat);
					this.__cachedCellFormatsKey = null;
				}
			}
		} else {
			format = this.__worksheet._getCellFormatElementReadOnly(row, column);
			format = this.__worksheet._getTableCellFormatElementReadOnly(format, rowIndex, column) || format;
		}
		return format;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.InViewPaneInfo::GetCellFormatElementReadOnly(Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::GetCellInfo(Infragistics.Documents.Excel.WorksheetRow, System.Int16, System.Boolean, System.Boolean)" />*/
	getCellInfo: function (row, columnIndex, createIfNull, verifyFormatter) {
		var $self = this;
		var info = null;
		var key = new $.ig.spreadsheet.SpreadsheetCell(row.index(), columnIndex);
		if (!(function () { var $ret = $self.__cachedCellInfos.tryGetValue(key, info); info = $ret.p1; return $ret.ret; }()) && createIfNull) {
			this.__cachedCellInfos.item(key, info = $.ig.SpreadsheetUtilities.prototype.createCellInfo1(row, columnIndex));
			info._cellValueVersion = this.__cellValueChangedVersion;
		} else if (info != null && (info._cellValueVersion < this.__cellValueChangedVersion || info._value != info._rowWithValue._getCellValueInternal(info._startColumnIndex))) {
			info._cellValueVersion = this.__cellValueChangedVersion;
			if (info._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.fill || info._horizontalAlignment == $.ig.excel.HorizontalCellAlignment.centerAcrossSelection) {
				if (info._endColumnIndex != info._rowWithValue._getNextClippingColumn(info._columnIndexForValue, this.__maxRangeAddress.lastColumn(), $.ig.util.toNullable($.ig.excel.HorizontalCellAlignment.prototype.$type, info._horizontalAlignment))) {
					this.__cachedCellInfos.item(key, info = $.ig.SpreadsheetUtilities.prototype.createCellInfo1(row, columnIndex));
					info._cellValueVersion = this.__cellValueChangedVersion;
				}
			}
		}
		if (info != null && verifyFormatter) {
			this.verifyFormatterInfo(info);
		}
		return info;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::GetCellInfo(Infragistics.Documents.Excel.WorksheetRow, System.Int16, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::GetLeadingOrTrailingValueInfo(System.Boolean, Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	getLeadingOrTrailingValueInfo: function (leading, row, indexOfEdgeColumn) {
		var outOfViewIndex = indexOfEdgeColumn;
		do {
			var outOfViewIndexValue = row._getNextOrPreviousCellWithValue(outOfViewIndex, !leading);
			if ($.ig.util.nullableEquals(outOfViewIndexValue, null)) {
				return null;
			}
			outOfViewIndex = outOfViewIndexValue.value();
		} while (this.__worksheet._getColumnBlock(outOfViewIndex).hidden());
		if (leading && outOfViewIndex < this.__maxRangeAddress.firstColumn()) {
			return null;
		}
		if (!leading && outOfViewIndex > this.__maxRangeAddress.lastColumn()) {
			return null;
		}
		var info = this.getCellInfo(row, outOfViewIndex, false, true);
		if (info == null) {
			if (this.__worksheet._getCellAssociatedMergedCellsRegion(row.index(), outOfViewIndex) != null) {
				return null;
			}
			var format = this.getCellFormatElementReadOnly(row, row.index(), outOfViewIndex);
			if (format._computedWrapText()) {
				return null;
			}
			var alignment = format._alignmentResolved();
			if (format._computedShrinkToFit()) {
				return null;
			}
			if (alignment == $.ig.excel.HorizontalCellAlignment.general) {
				alignment = $.ig.SpreadsheetUtilities.prototype.getGeneralAlignment(row._getCellValue1(outOfViewIndex), format, this.__worksheet.workbook());
			}
			switch (alignment) {
				case $.ig.excel.HorizontalCellAlignment.justify:
				case $.ig.excel.HorizontalCellAlignment.distributed:
					return null;
				case $.ig.excel.HorizontalCellAlignment.fill:
					if (!leading) {
						return null;
					}
					break;
				case $.ig.excel.HorizontalCellAlignment.center:
				case $.ig.excel.HorizontalCellAlignment.centerAcrossSelection:
					break;
				case $.ig.excel.HorizontalCellAlignment.right:
					if (leading) {
						return null;
					}
					break;
				case $.ig.excel.HorizontalCellAlignment.left:
					if (!leading) {
						return null;
					}
					break;
				default:
					$.ig.Debug.prototype.fail("Unexpected horizontal cell alignment:" + $.ig.excel.HorizontalCellAlignment.prototype.getBox(alignment));
					break;
			}
			info = this.getCellInfo(row, outOfViewIndex, true, true);
		}
		if ((leading && info._valueEndColumnIndex < indexOfEdgeColumn) || (!leading && info._valueStartColumnIndex > indexOfEdgeColumn)) {
			return null;
		}
		return info;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::GetLeadingOrTrailingValueInfo(System.Boolean, Infragistics.Documents.Excel.WorksheetRow, System.Int16)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::GetMergedCellInfo(System.Int32, System.Int16)" />*/
	getMergedCellInfo: function (rowIndex, columnIndex) {
		var $self = this;
		var region = this.__worksheet._getCellAssociatedMergedCellsRegion(rowIndex, columnIndex);
		if (region != null) {
			var info;
			if (!(function () { var $ret = $self.__cachedMergedInfos.tryGetValue(region, info); info = $ret.p1; return $ret.ret; }())) {
				this.__cachedMergedInfos.item(region, info = $.ig.SpreadsheetUtilities.prototype.createCellInfo(region));
			} else if (info._cellValueVersion != this.__cellValueChangedVersion) {
				info._cellValueVersion = this.__cellValueChangedVersion;
				if (info._value != info._rowWithValue._getCellValueInternal(info._columnIndexForValue)) {
					this.__cachedMergedInfos.item(region, info = $.ig.SpreadsheetUtilities.prototype.createCellInfo(region));
				}
			}
			return info;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::GetMergedCellInfo(System.Int32, System.Int16)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetResolvedRenderFormat Infragistics.Controls.Grids.Core.InViewPaneInfo::GetResolvedRenderFormat(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Collections.Generic.Dictionary)" />*/
	getResolvedRenderFormat: function (format, cache) {
		var info;
		if ((function () { var $ret = cache.tryGetValue(format, info); info = $ret.p1; return $ret.ret; }()) == false) {
			info = new $.ig.SpreadsheetResolvedRenderFormat();
			info._background = format._fillResolved();
			if ($.ig.SpreadsheetUtilities.prototype.isEmptyFill(info._background)) {
				info._background = null;
			} else {
				info._background = info._background._toResolvedColorFill(this.__worksheet.workbook());
			}
			info._diagonalBorders = $.ig.SpreadsheetUtilities.prototype.toCellDiagonalBorder($.ig.util.getEnumValue(format._getResolvedValue1($.ig.CellFormatValue.prototype.diagonalBorders, null)));
			if (info._diagonalBorders != $.ig.CellDiagonalBorder.prototype.none) {
				info._diagonalBorderStyle = $.ig.util.getEnumValue(format._getResolvedValue1($.ig.CellFormatValue.prototype.diagonalBorderStyle, null));
				info._diagonalBorderColor = (format._getResolvedValue1($.ig.CellFormatValue.prototype.diagonalBorderColorInfo, null))._getResolvedColor1(this.__worksheet.workbook());
			} else {
				info._diagonalBorderColor = $.ig.ExcelUtils.prototype.colorEmpty;
			}
			info._leftBorderStyle = $.ig.util.getEnumValue(format._getResolvedValue1($.ig.CellFormatValue.prototype.leftBorderStyle, null));
			info._leftBorderColor = info._leftBorderStyle == $.ig.excel.CellBorderLineStyle.none ? $.ig.ExcelUtils.prototype.colorEmpty : (format._getResolvedValue1($.ig.CellFormatValue.prototype.leftBorderColorInfo, null))._getResolvedColor1(this.__worksheet.workbook());
			info._topBorderStyle = $.ig.util.getEnumValue(format._getResolvedValue1($.ig.CellFormatValue.prototype.topBorderStyle, null));
			info._topBorderColor = info._topBorderStyle == $.ig.excel.CellBorderLineStyle.none ? $.ig.ExcelUtils.prototype.colorEmpty : (format._getResolvedValue1($.ig.CellFormatValue.prototype.topBorderColorInfo, null))._getResolvedColor1(this.__worksheet.workbook());
			info._rightBorderStyle = $.ig.util.getEnumValue(format._getResolvedValue1($.ig.CellFormatValue.prototype.rightBorderStyle, null));
			info._rightBorderColor = info._rightBorderStyle == $.ig.excel.CellBorderLineStyle.none ? $.ig.ExcelUtils.prototype.colorEmpty : (format._getResolvedValue1($.ig.CellFormatValue.prototype.rightBorderColorInfo, null))._getResolvedColor1(this.__worksheet.workbook());
			info._bottomBorderStyle = $.ig.util.getEnumValue(format._getResolvedValue1($.ig.CellFormatValue.prototype.bottomBorderStyle, null));
			info._bottomBorderColor = info._bottomBorderStyle == $.ig.excel.CellBorderLineStyle.none ? $.ig.ExcelUtils.prototype.colorEmpty : (format._getResolvedValue1($.ig.CellFormatValue.prototype.bottomBorderColorInfo, null))._getResolvedColor1(this.__worksheet.workbook());
			cache.item(format, info);
		}
		return info;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetResolvedRenderFormat Infragistics.Controls.Grids.Core.InViewPaneInfo::GetResolvedRenderFormat(Infragistics.Documents.Excel.WorksheetCellFormatData, System.Collections.Generic.Dictionary)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.InViewPaneInfo::GetShapeColumnPosition(System.Int16, System.Double)" />*/
	getShapeColumnPosition: function (index, offsetInCell) {
		var pos = this.__worksheet._getColumnPosition(index);
		var colOffset;
		if (offsetInCell <= 0) {
			colOffset = pos._offset();
		} else if (offsetInCell >= 100) {
			colOffset = pos._end();
		} else {
			colOffset = $.ig.truncate((pos._offset() + pos._extent() * offsetInCell / 100));
		}
		return this.__worksheet._convertFromCharacter256thsIntHorizontal(colOffset, $.ig.excel.WorksheetColumnWidthUnit.twip, false);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.InViewPaneInfo::GetShapeColumnPosition(System.Int16, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.InViewPaneInfo::GetShapeRowPosition(System.Int32, System.Double)" />*/
	getShapeRowPosition: function (index, offsetInCell) {
		var pos = this.__worksheet._getRowPosition(index);
		if (offsetInCell <= 0) {
			return pos._offset();
		} else if (offsetInCell >= 100) {
			return pos._end();
		} else {
			return pos._offset() + pos._extent() * offsetInCell / 100;
		}
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.InViewPaneInfo::GetShapeRowPosition(System.Int32, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::GetValuesForCalculatedCells()" />*/
	getValuesForCalculatedCells: function () {
		var en = this.__cellsInViewWithCalculations.getEnumerator();
		while (en.moveNext()) {
			var cell = en.current();
			this.__worksheet.rows().item(cell.row())._getCellValue1(cell.column());
		}
		this.__cellValueChangedVersion++;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::GetValuesForCalculatedCells()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::InitializeFormatter(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Nullable)" />*/
	initializeFormatter: function (info, hasVisitedHyperlink) {
		$.ig.Debug.prototype.assert(info._rowWithValue == this.__worksheet.rows()._getIfCreated(info._startRowIndex));
		var format = this.getCellFormatElementReadOnly(info._rowWithValue, info._startRowIndex, info._startColumnIndex);
		return this.__manager._initializeFormatter(info, hasVisitedHyperlink, format, true);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo Infragistics.Controls.Grids.Core.InViewPaneInfo::InitializeFormatter(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::OnCellValueChanged(System.Int32, System.Int32)" />*/
	onCellValueChanged: function (row, column) {
		this.__cachedCellInfos.remove(new $.ig.spreadsheet.SpreadsheetCell(row, column));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::OnCellValueChanged(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::UpdateLeftBorder(Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, System.Collections.Generic.Dictionary)" />*/
	updateLeftBorder: function (renderInfo, targetRow, targetCol, rowBefore, rowForColumnBefore, colIndexBefore, row, rowIndex, colIndex, resolvedFormatCache) {
		var formatLeft = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(row, rowIndex, colIndex), resolvedFormatCache);
		var leftBorder = formatLeft._leftBorderStyle;
		var penColor = formatLeft._leftBorderColor;
		if (colIndexBefore >= 0) {
			var formatRight = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(rowBefore, rowForColumnBefore, colIndexBefore), resolvedFormatCache);
			var rightBorder = formatRight._rightBorderStyle;
			if ($.ig.SpreadsheetUtilities.prototype.shouldUseOtherBorderLineStyle(leftBorder, rightBorder)) {
				leftBorder = rightBorder;
				penColor = formatRight._rightBorderColor;
			}
		}
		renderInfo.setLeftBorder(targetRow, targetCol, leftBorder, penColor);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::UpdateLeftBorder(Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, System.Collections.Generic.Dictionary)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::UpdateTopBorder(Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, System.Collections.Generic.Dictionary)" />*/
	updateTopBorder: function (renderInfo, targetRow, targetCol, row, rowIndex, colIndex, rowBefore, rowBeforeIndex, colIndexAbove, resolvedFormatCache) {
		var formatTop = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(row, rowIndex, colIndex), resolvedFormatCache);
		var topBorder = formatTop._topBorderStyle;
		var penColor = formatTop._topBorderColor;
		if (rowBeforeIndex >= 0) {
			var formatBottom = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(rowBefore, rowBeforeIndex, colIndexAbove), resolvedFormatCache);
			var bottomBorder = formatBottom._bottomBorderStyle;
			if ($.ig.SpreadsheetUtilities.prototype.shouldUseOtherBorderLineStyle(topBorder, bottomBorder)) {
				topBorder = bottomBorder;
				penColor = formatBottom._bottomBorderColor;
			}
		}
		renderInfo.setTopBorder(targetRow, targetCol, topBorder, penColor);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::UpdateTopBorder(Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray, System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, Infragistics.Documents.Excel.WorksheetRow, System.Int32, System.Int16, System.Collections.Generic.Dictionary)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::Verify()" />*/
	verify: function () {
		$.ig.Debug.prototype.assert(this.__cachedFormats == null);
		this.__cachedFormats = new $.ig.Dictionary$2($.ig.SpreadsheetCellClass.prototype.$type, $.ig.WorksheetCellFormatData.prototype.$type, 0);
		try {
			this.verifyImpl();
		}
		finally {
			this.__cachedFormats = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::Verify()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyImpl()" />*/
	verifyImpl: function () {
		this.verifyGridlinePen();
		this.verifyBackgroundBrush();
		this.__cellsInViewWithCalculations.clear();
		var wb = this.__worksheet.workbook();
		var hideShapes = wb != null && wb.windowOptions().objectDisplayStyle() == $.ig.excel.ObjectDisplayStyle.hideAll;
		var redrawShapes = !hideShapes && this.__redrawShapes;
		this.__redrawShapes = false;
		this.__maxRangeAddress = this.__manager._getAvailableRange();
		var en = this.__manager._panes().getEnumerator();
		while (en.moveNext()) {
			var sheetPane = en.current();
			var cellValues = sheetPane._cellValuesInternal();
			cellValues.beginUpdate();
			cellValues.clear();
			var colPositions = sheetPane.columnScrollRegion()._itemPositions();
			var rowPositions = sheetPane.rowScrollRegion()._itemPositions();
			var rCount = rowPositions.count();
			var cCount = colPositions.count();
			var cellArrayColCount = cCount + 2;
			var cellArrayRowCount = rCount + 2;
			var cellValueArray = sheetPane._cellValueArray();
			if (cellValueArray == null) {
				cellValueArray = new $.ig.MDList$1($.ig.SpreadsheetCellValueInfo.prototype.$type, cellArrayRowCount, cellArrayColCount);
			} else {
				cellValueArray.initialize(cellArrayRowCount, cellArrayColCount);
			}
			var hyperlinkArray = sheetPane._hyperlinkArray();
			if (hyperlinkArray == null) {
				hyperlinkArray = new $.ig.MDList$1($.ig.excel.WorksheetHyperlink.prototype.$type, cellArrayRowCount, cellArrayColCount);
			} else {
				hyperlinkArray.initialize(cellArrayRowCount, cellArrayColCount);
			}
			var invalidCellArray = sheetPane._invalidCellArray();
			if (invalidCellArray == null) {
				invalidCellArray = new $.ig.MDBitArray(cellArrayRowCount, cellArrayColCount);
			} else {
				invalidCellArray.initialize(cellArrayRowCount, cellArrayColCount);
			}
			if (cCount > 0 && rCount > 0) {
				var cellBlock = null;
				var firstColPos = colPositions.__inner[0];
				var lastColPos = colPositions.__inner[cCount - 1];
				var colPosBeforeFirst, colPosAfterLast;
				if (firstColPos._offset() > 0) {
					colPosBeforeFirst = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, this.__manager._getColumnPositionFromOffset(firstColPos._offset() - 1));
				} else {
					colPosBeforeFirst = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null);
				}
				if (lastColPos._index() < this.__maxRangeAddress.lastColumn()) {
					colPosAfterLast = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, this.__manager._getColumnPositionFromOffset(lastColPos._end()));
				} else {
					colPosAfterLast = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null);
				}
				var firstRowPos = rowPositions.__inner[0];
				var lastRowPos = rowPositions.__inner[rCount - 1];
				var rowBeforeFirst, rowAfterLast;
				if (firstRowPos._offset() > 0) {
					rowBeforeFirst = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, this.__worksheet._getRowPositionFromOffset(firstRowPos._offset() - 1));
				} else {
					rowBeforeFirst = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null);
				}
				if (lastRowPos._index() < this.__maxRangeAddress.lastRow()) {
					rowAfterLast = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, this.__worksheet._getRowPositionFromOffset(lastRowPos._end()));
				} else {
					rowAfterLast = $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null);
				}
				var colIndexes = new Array(cellArrayColCount);
				if ($.ig.WorksheetItemPosition.prototype._l_op_Inequality_Lifted(colPosBeforeFirst, $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null))) {
					colIndexes[0] = colPosBeforeFirst.value()._index();
				} else {
					colIndexes[0] = -1;
				}
				for (var i = 0; i < cCount; i++) {
					colIndexes[i + 1] = colPositions.__inner[i]._index();
				}
				if ($.ig.WorksheetItemPosition.prototype._l_op_Inequality_Lifted(colPosAfterLast, $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null))) {
					colIndexes[cCount + 1] = colPosAfterLast.value()._index();
				} else {
					colIndexes[cCount + 1] = -1;
				}
				var rowIndexes = new Array(cellArrayRowCount);
				if ($.ig.WorksheetItemPosition.prototype._l_op_Inequality_Lifted(rowBeforeFirst, $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null))) {
					rowIndexes[0] = rowBeforeFirst.value()._index();
				} else {
					rowIndexes[0] = -1;
				}
				for (var i1 = 0; i1 < rCount; i1++) {
					rowIndexes[i1 + 1] = rowPositions.__inner[i1]._index();
				}
				if ($.ig.WorksheetItemPosition.prototype._l_op_Inequality_Lifted(rowAfterLast, $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null))) {
					rowIndexes[rCount + 1] = rowAfterLast.value()._index();
				} else {
					rowIndexes[rCount + 1] = -1;
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_HyperlinksStart");
				var worksheetHyperLinks = this.__worksheet.hyperlinks();
				var excelRange = $.ig.SpreadsheetUtilities.prototype.toWorksheetRegionAddress1(new $.ig.spreadsheet.SpreadsheetCellRange(firstRowPos._index(), firstColPos._index(), lastRowPos._index(), lastColPos._index()));
				for (var i2 = worksheetHyperLinks.count() - 1; i2 >= 0; i2--) {
					var hyperlink = worksheetHyperLinks.item(i2);
					var hyperlinkAddress = hyperlink.sourceRegion()._address();
					if (hyperlinkAddress._intersectsWith(excelRange)) {
						var startRow = sheetPane.rowScrollRegion()._getStartingItemPositionIndexFromActualIndex(hyperlinkAddress._firstRowIndex(), hyperlinkAddress._lastRowIndex());
						if (startRow >= 0) {
							var startCol = sheetPane.columnScrollRegion()._getStartingItemPositionIndexFromActualIndex(hyperlinkAddress._firstColumnIndex(), hyperlinkAddress._lastColumnIndex());
							if (startCol >= 0) {
								for (var r = startRow + 1; r < cellArrayRowCount - 1; r++) {
									if (rowIndexes[r] > hyperlinkAddress._lastRowIndex()) {
										break;
									}
									for (var c = startCol + 1; c < cellArrayColCount - 1; c++) {
										if (colIndexes[c] > hyperlinkAddress._lastColumnIndex()) {
											break;
										}
										if (hyperlinkArray.item(r, c) == null) {
											hyperlinkArray.item(r, c, hyperlink);
										}
									}
								}
							}
						}
					}
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_HyperlinksEnd");
				$.ig.SpreadsheetUtilities.prototype.measurePerf("Hyperlinks", "VerifyPaneInfoImpl_HyperlinksStart", "VerifyPaneInfoImpl_HyperlinksEnd");
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_InvalidCellsStart");
				var invalidCells = this.__worksheet._cellsWithInvalidValueCircles();
				for (var i3 = 0, count = invalidCells.count(); i3 < count; i3++) {
					var cell = invalidCells.__inner[i3];
					if (excelRange._contains2(cell.rowIndex(), cell._columnIndexInternal())) {
						var r1 = sheetPane.rowScrollRegion()._getItemPositionIndexFromActualIndex(cell.rowIndex());
						var c1 = sheetPane.columnScrollRegion()._getItemPositionIndexFromActualIndex(cell.columnIndex());
						invalidCellArray.item(r1 + 1, c1 + 1, true);
					}
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_InvalidCellsEnd");
				$.ig.SpreadsheetUtilities.prototype.measurePerf("InvalidCells", "VerifyPaneInfoImpl_InvalidCellsStart", "VerifyPaneInfoImpl_InvalidCellsEnd");
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_CellValuesStart");
				for (var r2 = 0; r2 < cellArrayRowCount; r2++) {
					var rowIndex = rowIndexes[r2];
					if (rowIndex < 0) {
						continue;
					}
					var row = this.__worksheet.rows()._getIfCreated(rowIndex);
					if (row == null && !this.__worksheet._hasCellOwnedAssociatedMergedCellsRegions()) {
						continue;
					}
					for (var c2 = 0; c2 < cellArrayColCount; c2++) {
						var cIdx = colIndexes[c2];
						if (cIdx >= 0 && cellValueArray.item(r2, c2) == null) {
							var info = this.getMergedCellInfo(rowIndex, cIdx);
							if (info != null) {
								var formulaHyperlink = hyperlinkArray.item(r2, c2);
								cellBlock = info._rowWithValue._tryGetCellBlock(cIdx);
								if (cellBlock != null && cellBlock.doesCellUseCalculations1(cIdx)) {
									this.__cellsInViewWithCalculations.add(new $.ig.spreadsheet.SpreadsheetCell(info._startRowIndex, cIdx));
									if (formulaHyperlink == null) {
										formulaHyperlink = info._rowWithValue._getCellFormulaHyperlink(cIdx);
									}
								}
								this.verifyFormatterInfo1(info, this.__manager._getHasVisitedHyperlink(formulaHyperlink));
								var endIndexX = c2 + 1;
								while (endIndexX < cellArrayColCount && colIndexes[endIndexX] <= info._endColumnIndex && colIndexes[endIndexX] >= 0) {
									endIndexX++;
								}
								var endIndexY = r2 + 1;
								while (endIndexY < cellArrayRowCount && rowIndexes[endIndexY] <= info._endRowIndex && rowIndexes[endIndexY] >= 0) {
									endIndexY++;
								}
								for (var r21 = r2; r21 < endIndexY; r21++) {
									for (var c21 = c2; c21 < endIndexX; c21++) {
										cellValueArray.item(r21, c21, info);
									}
								}
								if (formulaHyperlink != null) {
									for (var r22 = r2; r22 < endIndexY; r22++) {
										for (var c22 = c2; c22 < endIndexX; c22++) {
											if (hyperlinkArray.item(r22, c22) == null) {
												hyperlinkArray.item(r22, c22, formulaHyperlink);
											}
										}
									}
								}
								if (endIndexX < cellArrayColCount) {
									c2 = endIndexX - 1;
								} else if (c2 == 0) {
									r2 = endIndexY - 1;
									c2 = cellArrayColCount;
								} else {
									c2 = cellArrayColCount;
								}
							} else if (row != null && r2 > 0 && r2 <= rCount) {
								cellBlock = row._tryGetCellBlock(cIdx);
								if (cellBlock != null && cellBlock.doesCellHaveValue(cIdx)) {
									var formulaHyperlink1 = null;
									if (cellBlock.doesCellUseCalculations1(cIdx)) {
										this.__cellsInViewWithCalculations.add(new $.ig.spreadsheet.SpreadsheetCell(rowIndex, cIdx));
										if (hyperlinkArray.item(r2, c2) == null) {
											formulaHyperlink1 = row._getCellFormulaHyperlink(cIdx);
										}
									}
									cellValueArray.item(r2, c2, info = this.getCellInfo(row, cIdx, true, false));
									this.verifyFormatterInfo1(info, this.__manager._getHasVisitedHyperlink(hyperlinkArray.item(r2, c2) || formulaHyperlink1));
									if (formulaHyperlink1 != null) {
										hyperlinkArray.item(r2, c2, formulaHyperlink1);
									}
								}
							}
						}
					}
				}
				for (var r3 = 1; r3 <= rCount; r3++) {
					var row1 = this.__worksheet.rows()._getIfCreated(rowIndexes[r3]);
					if (row1 != null) {
						if (cellValueArray.item(r3, 1) == null) {
							cellValueArray.item(r3, 0, this.getLeadingOrTrailingValueInfo(true, row1, firstColPos._index()));
						}
						if (cellValueArray.item(r3, cCount) == null && $.ig.WorksheetItemPosition.prototype._l_op_Inequality_Lifted(colPosAfterLast, $.ig.util.toNullable($.ig.WorksheetItemPosition.prototype.$type, null))) {
							cellValueArray.item(r3, cCount + 1, this.getLeadingOrTrailingValueInfo(false, row1, lastColPos._index()));
						}
					}
				}
				for (var r4 = 1; r4 <= rCount; r4++) {
					for (var c3 = 0; c3 < cellArrayColCount; c3++) {
						var tempInfo = cellValueArray.item(r4, c3);
						if (tempInfo != null) {
							if (c3 > 0 && cellValueArray.item(r4, c3 - 1) == tempInfo) {
								continue;
							}
							if (r4 > 1 && cellValueArray.item(r4 - 1, c3) == tempInfo) {
								continue;
							}
							cellValues.add(tempInfo);
						}
					}
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_CellValuesEnd");
				$.ig.SpreadsheetUtilities.prototype.measurePerf("CellValues", "VerifyPaneInfoImpl_CellValuesStart", "VerifyPaneInfoImpl_CellValuesEnd");
				for (var r5 = 1; r5 < cellArrayRowCount; r5++) {
					for (var c4 = 0; c4 < cellArrayColCount; c4++) {
						var value = cellValueArray.item(r5, c4);
						if (value != null) {
							if (c4 == 0) {
								var endIndex = !$.ig.util.nullableIsNull(value._clipEndColumnIndex) ? value._clipEndColumnIndex.value() : value._valueEndColumnIndex;
								for (var cStart = 1; cStart <= cCount; cStart++) {
									if (colPositions.__inner[cStart - 1]._index() > endIndex || cellValueArray.item(r5, cStart) != null) {
										break;
									}
									cellValueArray.item(r5, cStart, value);
								}
							} else if (c4 == cCount + 1) {
								var startIndex = !$.ig.util.nullableIsNull(value._clipStartColumnIndex) ? value._clipStartColumnIndex.value() : value._valueStartColumnIndex;
								for (var cStart1 = c4 - 1; cStart1 > 0; cStart1--) {
									if (colPositions.__inner[cStart1 - 1]._index() < startIndex || cellValueArray.item(r5, cStart1) != null) {
										break;
									}
									cellValueArray.item(r5, cStart1, value);
								}
							} else if (value._value != null) {
								var startIndex1 = !$.ig.util.nullableIsNull(value._clipStartColumnIndex) ? value._clipStartColumnIndex.value() : value._valueStartColumnIndex;
								for (var cStart2 = c4 - 1; cStart2 > 0; cStart2--) {
									if (colPositions.__inner[cStart2 - 1]._index() < startIndex1 || cellValueArray.item(r5, cStart2) != null) {
										break;
									}
									cellValueArray.item(r5, cStart2, value);
								}
								var endIndex1 = !$.ig.util.nullableIsNull(value._clipEndColumnIndex) ? value._clipEndColumnIndex.value() : value._valueEndColumnIndex;
								for (var cEnd = c4 + 1; cEnd <= cCount; cEnd++) {
									if (colPositions.__inner[cEnd - 1]._index() > endIndex1 || cellValueArray.item(r5, cEnd) != null) {
										break;
									}
									cellValueArray.item(r5, cEnd, value);
								}
							}
						}
					}
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_CellFillStart");
				var fillArray = sheetPane._cellFillArray();
				if (fillArray == null) {
					fillArray = new $.ig.SpreadsheetCellRenderInfoArray(cellArrayRowCount, cellArrayColCount);
				} else {
					fillArray.initialize(cellArrayRowCount, cellArrayColCount);
				}
				sheetPane._cellFillArray(fillArray);
				var rowAbove = null;
				var renderInfoCache = new $.ig.Dictionary$2($.ig.WorksheetCellFormatData.prototype.$type, $.ig.SpreadsheetResolvedRenderFormat.prototype.$type, 2, $.ig.WorksheetCellFormatDataEqualityComparer.prototype._instance);
				for (var r6 = 0; r6 < cellArrayRowCount; r6++) {
					var rowIndex1 = rowIndexes[r6];
					var row2 = rowIndex1 >= 0 ? this.__worksheet.rows()._getIfCreated(rowIndex1) : null;
					for (var c5 = 0; c5 < cellArrayColCount; c5++) {
						var skipFill = false;
						var cellValue = cellValueArray.item(r6, c5);
						var isMergedCell = cellValue != null && cellValue.isMergedCell();
						var colIndex = colIndexes[c5];
						var cellRenderInfo = null;
						if (rowIndex1 >= 0) {
							if (isMergedCell) {
								var cellValueTemp = cellValueArray.item(r6, c5);
								if (r6 > 0 && cellValueTemp == cellValueArray.item(r6 - 1, c5)) {
									fillArray.copyFill(r6 - 1, c5, r6, c5);
									skipFill = true;
								} else if (c5 > 0 && cellValueTemp == cellValueArray.item(r6, c5 - 1)) {
									fillArray.copyFill(r6, c5 - 1, r6, c5);
									skipFill = true;
								} else {
									var topMergedCellRow = cellValueTemp._startRowIndex;
									var leftMergedCellCol = cellValueTemp._columnIndexForValue;
									var mergedCellRow = topMergedCellRow == rowIndex1 ? row2 : this.__worksheet.rows()._getIfCreated(topMergedCellRow);
									cellRenderInfo = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(mergedCellRow, topMergedCellRow, leftMergedCellCol), renderInfoCache);
								}
							}
							if (!skipFill && colIndex >= 0) {
								if (cellRenderInfo == null) {
									cellRenderInfo = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(row2, rowIndex1, colIndex), renderInfoCache);
								}
								fillArray.setBackground(r6, c5, cellRenderInfo._background);
								var diagonalBorders = cellRenderInfo._diagonalBorders;
								if (diagonalBorders != $.ig.CellDiagonalBorder.prototype.none) {
									fillArray.setDiagonalBorders(r6, c5, diagonalBorders, cellRenderInfo._diagonalBorderStyle, cellRenderInfo._diagonalBorderColor);
								}
							}
							if (c5 > 0) {
								if (colIndex < 0) {
									var formatRight = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(row2, rowIndex1, colIndexes[c5 - 1]), renderInfoCache);
									fillArray.setLeftBorder(r6, c5, formatRight._rightBorderStyle, formatRight._rightBorderColor);
								} else if (isMergedCell == false || colIndex == cellValue._startColumnIndex) {
									if (cellValue == null || cellValue != cellValueArray.item(r6, c5 - 1)) {
										this.updateLeftBorder(fillArray, r6, c5, row2, rowIndex1, colIndexes[c5 - 1], row2, rowIndex1, colIndex, renderInfoCache);
									}
								}
							}
							if (r6 > 0) {
								if (isMergedCell == false || rowIndex1 == cellValue._startRowIndex) {
									if (colIndexes[c5] >= 0) {
										this.updateTopBorder(fillArray, r6, c5, row2, rowIndex1, colIndexes[c5], rowAbove, rowIndexes[r6 - 1], colIndexes[c5], renderInfoCache);
									}
								}
							}
						} else if (r6 > 0 && colIndex >= 0) {
							var formatBottom = this.getResolvedRenderFormat(this.getCellFormatElementReadOnly(rowAbove, rowIndexes[r6 - 1], colIndex), renderInfoCache);
							fillArray.setTopBorder(r6, c5, formatBottom._bottomBorderStyle, formatBottom._bottomBorderColor);
						}
					}
					rowAbove = row2;
				}
				$.ig.SpreadsheetUtilities.prototype.setMeasureMarker("VerifyPaneInfoImpl_CellFillEnd");
				$.ig.SpreadsheetUtilities.prototype.measurePerf("CellAppearance", "VerifyPaneInfoImpl_CellFillStart", "VerifyPaneInfoImpl_CellFillEnd");
				for (var r7 = 1; r7 < cellArrayRowCount; r7++) {
					if (rowIndexes[r7] == 0) {
						continue;
					}
					for (var c6 = 1; c6 < cellArrayColCount; c6++) {
						if (colIndexes[c6] == 0) {
							continue;
						}
						var leftRight, near;
						var bottomVert = fillArray.item(r7, c6)._leftBorderStyle;
						var topVert = fillArray.item(r7 - 1, c6)._leftBorderStyle;
						var leftHorz = fillArray.item(r7, c6 - 1)._topBorderStyle;
						var rightHorz = fillArray.item(r7, c6)._topBorderStyle;
						if (bottomVert == topVert && leftHorz == rightHorz && topVert == leftHorz) {
							if (bottomVert == $.ig.excel.CellBorderLineStyle.none) {
								continue;
							} else {
								near = leftRight = true;
							}
						} else {
							var doubleCount = 0;
							if (bottomVert == $.ig.excel.CellBorderLineStyle.double1) {
								doubleCount++;
							}
							if (leftHorz == $.ig.excel.CellBorderLineStyle.double1) {
								doubleCount++;
							}
							if (rightHorz == $.ig.excel.CellBorderLineStyle.double1) {
								doubleCount++;
							}
							if (topVert == $.ig.excel.CellBorderLineStyle.double1) {
								doubleCount++;
							}
							if (doubleCount > 1) {
								if (leftHorz == $.ig.excel.CellBorderLineStyle.double1) {
									near = leftRight = true;
								} else if (topVert == $.ig.excel.CellBorderLineStyle.double1) {
									near = true;
									leftRight = false;
								} else if (bottomVert == $.ig.excel.CellBorderLineStyle.double1) {
									near = leftRight = false;
								} else {
									near = false;
									leftRight = true;
								}
							} else if (doubleCount == 1) {
								if (bottomVert == $.ig.excel.CellBorderLineStyle.double1 || topVert == $.ig.excel.CellBorderLineStyle.double1) {
									if (leftHorz == $.ig.excel.CellBorderLineStyle.none && rightHorz == $.ig.excel.CellBorderLineStyle.none) {
										leftRight = false;
										near = bottomVert == $.ig.excel.CellBorderLineStyle.none || topVert != $.ig.excel.CellBorderLineStyle.none;
									} else {
										var nearWeight = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(leftHorz);
										var farWeight = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(rightHorz);
										leftRight = true;
										near = nearWeight >= farWeight;
									}
								} else {
									if (bottomVert == $.ig.excel.CellBorderLineStyle.none && topVert == $.ig.excel.CellBorderLineStyle.none) {
										leftRight = true;
										near = rightHorz == $.ig.excel.CellBorderLineStyle.none || leftHorz != $.ig.excel.CellBorderLineStyle.none;
									} else {
										var nearWeight1 = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(topVert);
										var farWeight1 = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(bottomVert);
										leftRight = false;
										near = nearWeight1 >= farWeight1;
									}
								}
							} else {
								var leftWeight = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(leftHorz);
								var rightWeight = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(rightHorz);
								var topWeight = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(topVert);
								var bottomWeight = $.ig.SpreadsheetUtilities.prototype.getBorderWeight(bottomVert);
								var horzNear = leftWeight >= rightWeight;
								var vertNear = topWeight >= bottomWeight;
								leftRight = (horzNear ? leftWeight : rightWeight) >= (vertNear ? topWeight : bottomWeight);
								near = leftRight ? horzNear : vertNear;
							}
						}
						if (leftRight) {
							$.ig.InViewPaneInfo.prototype.adjustBorderForLeftRight(near, fillArray, r7, c6);
						} else {
							$.ig.InViewPaneInfo.prototype.adjustBorderForTopBottom(near, fillArray, r7, c6);
						}
					}
				}
				var shapes = sheetPane._shapesInternal();
				var oldShapes = new $.ig.Dictionary$2($.ig.excel.WorksheetShape.prototype.$type, $.ig.SpreadsheetShape.prototype.$type, 0);
				shapes.beginUpdate();
				var en1 = shapes.getEnumerator();
				while (en1.moveNext()) {
					var oldShape = en1.current();
					oldShapes.item(oldShape._shape, oldShape);
					if (redrawShapes) {
						(function ($obj) { var $value = $obj.drawVersion(); $obj.drawVersion($value + 1); return $value; }(oldShape));
					}
				}
				shapes.clear();
				if (hideShapes == false && this.__worksheet.shapes().count() > 0) {
					var ExtraTwipPadding = 30;
					var firstRowStartTwips = rowPositions.__inner[0]._offset() - ExtraTwipPadding;
					var lastRowEndTwips = lastRowPos._end() + ExtraTwipPadding;
					var firstColStartTwips = this.__worksheet._convertFromCharacter256thsIntHorizontal(colPositions.__inner[0]._offset(), $.ig.excel.WorksheetColumnWidthUnit.twip, false) - ExtraTwipPadding;
					var lastColEndTwips = this.__worksheet._convertFromCharacter256thsIntHorizontal(lastColPos._end(), $.ig.excel.WorksheetColumnWidthUnit.twip, false) + ExtraTwipPadding;
					var en2 = this.__worksheet.shapes().getEnumerator();
					while (en2.moveNext()) {
						var shape = en2.current();
						if (!$.ig.SpreadsheetUtilities.prototype.canRenderShape(shape)) {
							continue;
						}
						var outlineWidth = $.ig.SpreadsheetUtilities.prototype.getShapeOutlineOverflowInTwips(shape);
						var left = this.getShapeColumnPosition(shape._topLeftCornerCellInternal().columnIndex(), shape._topLeftCornerPosition$i().__x) - outlineWidth;
						var right = this.getShapeColumnPosition(shape._bottomRightCornerCellInternal().columnIndex(), shape._bottomRightCornerPosition$i().__x) + outlineWidth;
						var top = this.getShapeRowPosition(shape._topLeftCornerCellInternal().rowIndex(), shape._topLeftCornerPosition$i().__y) - outlineWidth;
						var bottom = this.getShapeRowPosition(shape._bottomRightCornerCellInternal().rowIndex(), shape._bottomRightCornerPosition$i().__y) + outlineWidth;
						if (shape._rotation() % 90 != 0) {
							var needsAdjustment = $.ig.ExcelUtils.prototype.isRotatedShapeAngle(shape._rotation());
							this.__rotationHelper.initialize(left, top, right, bottom, shape._rotation(), needsAdjustment);
							if (this.__rotationHelper.isOutOfView(firstColStartTwips, firstRowStartTwips, lastColEndTwips, lastRowEndTwips)) {
								continue;
							}
						} else {
							if (right < firstColStartTwips || left > lastColEndTwips) {
								continue;
							}
							if (bottom < firstRowStartTwips || top > lastRowEndTwips) {
								continue;
							}
						}
						var excelShape;
						if (!(function () { var $ret = oldShapes.tryGetValue(shape, excelShape); excelShape = $ret.p1; return $ret.ret; }())) {
							excelShape = new $.ig.SpreadsheetShape(shape);
						}
						shapes.add(excelShape);
					}
				}
				shapes.endUpdate();
			}
			sheetPane._cellValueArray(cellValueArray);
			sheetPane._hyperlinkArray(hyperlinkArray);
			sheetPane._invalidCellArray(invalidCellArray);
			cellValues.endUpdate();
			sheetPane._gridlinePen(this.__gridlinePen);
			sheetPane._background(this.__backgroundBrush);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyImpl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyBackgroundBrush()" />*/
	verifyBackgroundBrush: function () {
		var worksheetImage = this.__worksheet._imageBackground();
		var currentWorksheetImage = $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.__originalImageBackground);
		if (currentWorksheetImage != worksheetImage) {
			this.__originalImageBackground = worksheetImage == null ? null : new $.ig.WeakReference(worksheetImage);
			this.__backgroundBrush = new $.ig.SpreadsheetImageBackground(worksheetImage, this.__worksheet._preferredImageBackgroundFormat());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyBackgroundBrush()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyFormatterInfo(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	verifyFormatterInfo: function (info) {
		if (info != null && info._value != null && info._formattedText == null) {
			var hyperlink = this.__worksheet._getCellHyperlink(info._rowWithValue, info._startRowIndex, info._startColumnIndex);
			this.initializeFormatter(info, this.__manager._getHasVisitedHyperlink(hyperlink));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyFormatterInfo(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyFormatterInfo(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Nullable)" />*/
	verifyFormatterInfo1: function (info, hasVisitedWorksheetHyperlink) {
		if (info != null && info._value != null && info._formattedText == null) {
			this.initializeFormatter(info, hasVisitedWorksheetHyperlink);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyFormatterInfo(Infragistics.Controls.Grids.Core.SpreadsheetCellValueInfo, System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyGridlinePen()" />*/
	verifyGridlinePen: function () {
		var options = this.__worksheet.displayOptions();
		if (!options.showGridlines()) {
			this.__gridlinePen = null;
		} else if (this.__gridlinePen == null) {
			var color = options._useAutomaticGridlineColor() ? $.ig.util.toNullable($.ig.Color.prototype.$type, null) : $.ig.util.toNullable($.ig.Color.prototype.$type, options._gridlineColor$i());
			this.__gridlinePen = new $.ig.SpreadsheetGridLinePen(color);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.InViewPaneInfo::VerifyGridlinePen()" />*/
	,
	$type: new $.ig.Type('InViewPaneInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.InViewPaneInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion" />*/

$.ig.spreadsheet.SpreadsheetColumnScrollRegion = $.ig.util.defType('spreadsheet.SpreadsheetColumnScrollRegion', 'spreadsheet.SpreadsheetScrollRegion', {
	init: function () {
		$.ig.spreadsheet.SpreadsheetScrollRegion.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion::GetFullySelectedItems()" />*/
	_getFullySelectedItems: function () {
		return this._activeSelection() != null ? this._activeSelection()._selectedColumns() : null;
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion::GetFullySelectedItems()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion::GetItemsWithSelection()" />*/
	_getItemsWithSelection: function () {
		return this._activeSelection() != null ? this._activeSelection()._allColumns() : null;
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion::GetItemsWithSelection()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion::IsRowHeader()" />*/
	_isRowHeader: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion::IsRowHeader()" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetColumnScrollRegion', $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetColumnScrollRegion" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion" />*/

$.ig.spreadsheet.SpreadsheetRowScrollRegion = $.ig.util.defType('spreadsheet.SpreadsheetRowScrollRegion', 'spreadsheet.SpreadsheetScrollRegion', {
	init: function () {
		$.ig.spreadsheet.SpreadsheetScrollRegion.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion::GetFullySelectedItems()" />*/
	_getFullySelectedItems: function () {
		return this._activeSelection() != null ? this._activeSelection()._selectedRows() : null;
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion::GetFullySelectedItems()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion::GetItemsWithSelection()" />*/
	_getItemsWithSelection: function () {
		return this._activeSelection() != null ? this._activeSelection()._allRows() : null;
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion::GetItemsWithSelection()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion::IsRowHeader()" />*/
	_isRowHeader: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion::IsRowHeader()" />*/
	,
	$type: new $.ig.Type('spreadsheet.SpreadsheetRowScrollRegion', $.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetRowScrollRegion" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollInfo" />*/

$.ig.util.defType('ScrollInfo', 'Object', {
	___suspendPropertyChanges: false,
	___suspendedPropertyChanges: null,
	___propChangeListeners: null,
	init: function () {
		this.___computedScrollBarIsEnabled = true;
		this.___computedScrollBarVisibility = false;
		this.___extent = 0;
		this.___largeChange = $.ig.util.toNullable(Number, null);
		this.___maximum = 0;
		this.___minimum = 0;
		this.___offset = 0;
		this.___scrollBarVisibility = $.ig.ScrollInfoBarVisibility.prototype.auto;
		this.___scrollableExtent = 0;
		this.___smallChange = 1;
		this.___viewport = 0;
		$.ig.Object.prototype.init.call(this);
		this.___propChangeListeners = new $.ig.PropertyChangeListenerList();
	},
	___computedScrollBarIsEnabled: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::ComputedScrollBarIsEnabled()" />*/
	_computedScrollBarIsEnabled: function (value) {
		if (arguments.length === 1) {
			if (value != this.___computedScrollBarIsEnabled) {
				this.___computedScrollBarIsEnabled = value;
				this._raisePropertyChangedEvent("ComputedScrollBarIsEnabled");
			}
			return value;
		} else {
			return this.___computedScrollBarIsEnabled;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::ComputedScrollBarIsEnabled()" />*/
	,
	___computedScrollBarVisibility: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::ComputedScrollBarVisibility()" />*/
	_computedScrollBarVisibility: function (value) {
		if (arguments.length === 1) {
			if (value != this.___computedScrollBarVisibility) {
				this.___computedScrollBarVisibility = value;
				this._raisePropertyChangedEvent("ComputedScrollBarVisibility");
			}
			return value;
		} else {
			return this.___computedScrollBarVisibility;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::ComputedScrollBarVisibility()" />*/
	,
	___extent: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Extent()" />*/
	_extent: function (value) {
		if (arguments.length === 1) {
			if (value != this.___extent) {
				this.___extent = value;
				this._raisePropertyChangedEvent("Extent");
			}
			return value;
		} else {
			return this.___extent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Extent()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::IsInUse()" />*/
	_isInUse: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::IsInUse()" />*/
	,
	___largeChange: $.ig.util.toNullable(Number, null),
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Primitives.ScrollInfo::LargeChange()" />*/
	_largeChange: function (value) {
		if (arguments.length === 1) {
			if ($.ig.util.nullableNotEquals(value, this.___largeChange)) {
				$.ig.Debug.prototype.assert($.ig.util.nullableEquals(value, null) || (!$.ig.util.isNaN(value.value()) && !Number.isInfinity(value.value())));
				this.___largeChange = value;
				this._raisePropertyChangedEvent("LargeChange");
				this._raisePropertyChangedEvent("LargeChangeResolved");
			}
			return value;
		} else {
			return this.___largeChange;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Primitives.ScrollInfo::LargeChange()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::LargeChangeResolved()" />*/
	_largeChangeResolved: function () {
		return !$.ig.util.nullableIsNull(this.___largeChange) ? this.___largeChange.value() : this._viewport();
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::LargeChangeResolved()" />*/
	,
	___maximum: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Maximum()" />*/
	_maximum: function () {
		return this.___maximum;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Maximum()" />*/
	,
	___minimum: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Minimum()" />*/
	_minimum: function (value) {
		if (arguments.length === 1) {
			if (value != this.___minimum) {
				$.ig.Debug.prototype.assert(!$.ig.util.isNaN(value) && !Number.isInfinity(value));
				this.___minimum = value;
				this._raisePropertyChangedEvent("Minimum");
				this._calculateMaximum();
			}
			return value;
		} else {
			return this.___minimum;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Minimum()" />*/
	,
	___offset: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Offset()" />*/
	_offset: function (value) {
		if (arguments.length === 1) {
			if (value != this.___offset) {
				value = Math.max(Math.min(this._maximum(), value), this._minimum());
				if (value != this.___offset) {
					this.___offset = value;
					this._raisePropertyChangedEvent("Offset");
				}
			}
			return value;
		} else {
			return this.___offset;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Offset()" />*/
	,
	___scrollBarVisibility: 0,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ScrollInfoBarVisibility Infragistics.Controls.Primitives.ScrollInfo::ScrollBarVisibility()" />*/
	_scrollBarVisibility: function (value) {
		if (arguments.length === 1) {
			if (value != this.___scrollBarVisibility) {
				this.___scrollBarVisibility = value;
				this._raisePropertyChangedEvent("ScrollBarVisibility");
				this._verifyComputedVisibility();
			}
			return value;
		} else {
			return this.___scrollBarVisibility;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ScrollInfoBarVisibility Infragistics.Controls.Primitives.ScrollInfo::ScrollBarVisibility()" />*/
	,
	___scrollableExtent: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::ScrollableExtent()" />*/
	_scrollableExtent: function (value) {
		if (arguments.length === 1) {
			if (value != this.___scrollableExtent) {
				$.ig.Debug.prototype.assert(!$.ig.util.isNaN(value) && !Number.isInfinity(value));
				this.___scrollableExtent = value;
				this._raisePropertyChangedEvent("ScrollableExtent");
				this._calculateMaximum();
			}
			return value;
		} else {
			return this.___scrollableExtent;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::ScrollableExtent()" />*/
	,
	___smallChange: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::SmallChange()" />*/
	_smallChange: function (value) {
		if (arguments.length === 1) {
			if (value != this.___smallChange) {
				$.ig.Debug.prototype.assert(!$.ig.util.isNaN(value) && !Number.isInfinity(value));
				this.___smallChange = value;
				this._raisePropertyChangedEvent("SmallChange");
			}
			return value;
		} else {
			return this.___smallChange;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::SmallChange()" />*/
	,
	___viewport: 0,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Viewport()" />*/
	_viewport: function (value) {
		if (arguments.length === 1) {
			if (value != this.___viewport) {
				this.___viewport = value;
				this._raisePropertyChangedEvent("Viewport");
				if ($.ig.util.nullableEquals(this.___largeChange, null)) {
					this._raisePropertyChangedEvent("LargeChangeResolved");
				}
			}
			return value;
		} else {
			return this.___viewport;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::Viewport()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::CalculateMaximum()" />*/
	_calculateMaximum: function () {
		try {
			var max = (this.___scrollableExtent + this.___minimum);
			if (max != this.___maximum) {
				this.___maximum = max;
				this._raisePropertyChangedEvent("Maximum");
			}
		}
		catch (e) {
			this.___maximum = this.___scrollableExtent + this.___minimum;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::CalculateMaximum()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::CalculateNewOffset(Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	_calculateNewOffset: function (scrollAmount) {
		var newOffset = this._offset() + this._getScrollAdjustment(scrollAmount);
		return Math.max(this._minimum(), Math.min(this._maximum(), newOffset));
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::CalculateNewOffset(Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetPercent()" />*/
	_getPercent: function () {
		return $.ig.ScrollInfo.prototype._getPercent1(this.___offset, this.___minimum, this.___extent, this.___viewport);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetPercent()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetPercent(System.Double, System.Double, System.Double, System.Double)" />*/
	_getPercent1: function (value, minimum, extent, viewPort) {
		if ($.ig.CoreUtilities.prototype.greaterThan(extent, viewPort)) {
			return ((value - minimum) / (extent - viewPort)) * 100;
		}
		return -1;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetPercent(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetScrollAdjustment(Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	_getScrollAdjustment: function (scrollAmount) {
		var offset = 0;
		switch (scrollAmount) {
			case $.ig.ScrollInfoAmount.prototype.smallDecrement:
				{
					offset = -this._smallChange();
					break;
				}
			case $.ig.ScrollInfoAmount.prototype.smallIncrement:
				{
					offset = this._smallChange();
					break;
				}
			case $.ig.ScrollInfoAmount.prototype.largeDecrement:
				{
					offset = -this._largeChangeResolved();
					break;
				}
			case $.ig.ScrollInfoAmount.prototype.largeIncrement:
				{
					offset = this._largeChangeResolved();
					break;
				}
		}
		return offset;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetScrollAdjustment(Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetViewSize()" />*/
	_getViewSize: function () {
		return $.ig.ScrollInfo.prototype._getViewSize1(this.___extent, this.___viewport);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetViewSize()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetViewSize(System.Double, System.Double)" />*/
	_getViewSize1: function (extent, viewPort) {
		if ($.ig.CoreUtilities.prototype.lessThan(viewPort, extent)) {
			return (viewPort / extent) * 100;
		}
		return 100;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ScrollInfo::GetViewSize(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Initialize(System.Double, System.Double, System.Double)" />*/
	_initialize: function (viewport, extent, offset) {
		var suspended = this._suspendChangeNotifications();
		try {
			this._extent(Math.max(extent, 0));
			this._viewport(Math.max(viewport, 0));
			this._scrollableExtent(Math.max(this._extent() - this._viewport(), 0));
			this._offset(Math.max(Math.min(this._maximum(), offset), this._minimum()));
			this._computedScrollBarIsEnabled($.ig.CoreUtilities.prototype.lessThan(this._viewport(), this._extent()));
			this._verifyComputedVisibility();
		}
		finally {
			if (suspended) {
				this._resumeChangeNotifications();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Initialize(System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::OnPropertyChanged(System.String)" />*/
	_onPropertyChanged: function (propertyName) {
		var handler = this.propertyChanged;
		if (null != handler) {
			handler(this, new $.ig.PropertyChangedEventArgs(propertyName));
		}
		this.___propChangeListeners.onPropertyValueChanged(this, propertyName, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::OnPropertyChanged(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::RaisePropertyChangedEvent(System.String)" />*/
	_raisePropertyChangedEvent: function (propertyName) {
		if (this.___suspendPropertyChanges) {
			if (this.___suspendedPropertyChanges == null) {
				this.___suspendedPropertyChanges = new $.ig.List$1(String, 0);
			}
			this.___suspendedPropertyChanges.add(propertyName);
			return;
		}
		this._onPropertyChanged(propertyName);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::RaisePropertyChangedEvent(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::ResumeChangeNotifications()" />*/
	_resumeChangeNotifications: function () {
		$.ig.Debug.prototype.assert(this.___suspendPropertyChanges);
		this.___suspendPropertyChanges = false;
		var changedProps = this.___suspendedPropertyChanges;
		this.___suspendedPropertyChanges = null;
		var changeCount = changedProps == null ? 0 : changedProps.count();
		if (changeCount == 1) {
			this._raisePropertyChangedEvent(changedProps.__inner[0]);
		} else if (changeCount > 1) {
			this._raisePropertyChangedEvent(String.empty());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::ResumeChangeNotifications()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Scroll(System.Double)" />*/
	_scroll2: function (offset) {
		this._scrollTo(this.___offset + offset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Scroll(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Scroll(Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	_scroll: function (scrollAmount) {
		this._scroll1(scrollAmount, this._offset());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Scroll(Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Scroll(Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	_scroll1: function (scrollAmount, currentOffset) {
		this._scrollTo(currentOffset + this._getScrollAdjustment(scrollAmount));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Scroll(Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::ScrollTo(System.Double)" />*/
	_scrollTo: function (newOffset) {
		this._offset(Math.max(this._minimum(), Math.min(this._maximum(), newOffset)));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::ScrollTo(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::ScrollToPercent(System.Double)" />*/
	_scrollToPercent: function (percent) {
		if (percent < 0 || percent > 100) {
			throw new $.ig.ArgumentOutOfRangeException(0);
		}
		if ($.ig.CoreUtilities.prototype.greaterThan(this.___extent, this.___viewport)) {
			this._scrollTo((this.___extent - this.___viewport) * percent / 100 + this.___minimum);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::ScrollToPercent(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::SuspendChangeNotifications()" />*/
	_suspendChangeNotifications: function () {
		if (this.___suspendPropertyChanges) {
			return false;
		}
		this.___suspendPropertyChanges = true;
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Primitives.ScrollInfo::SuspendChangeNotifications()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::VerifyComputedVisibility()" />*/
	_verifyComputedVisibility: function () {
		var vis = false;
		switch (this.___scrollBarVisibility) {
			case $.ig.ScrollInfoBarVisibility.prototype.hidden:
			case $.ig.ScrollInfoBarVisibility.prototype.disabled:
				break;
			case $.ig.ScrollInfoBarVisibility.prototype.auto:
				if ($.ig.CoreUtilities.prototype.lessThan(this._viewport(), this._extent())) {
					vis = true;
				}
				break;
			case $.ig.ScrollInfoBarVisibility.prototype.visible:
				vis = true;
				break;
		}
		this._computedScrollBarVisibility(vis);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::VerifyComputedVisibility()" />*/
	,
	propertyChanged: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.AddListener(Infragistics.ITypedPropertyChangeListener, System.Boolean)" />*/
	addListener: function (listener, useWeakReference) {
		this.___propChangeListeners.add(listener, useWeakReference);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.AddListener(Infragistics.ITypedPropertyChangeListener, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.RemoveListener(Infragistics.ITypedPropertyChangeListener)" />*/
	removeListener: function (listener) {
		this.___propChangeListeners.remove(listener);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollInfo::Infragistics.ITypedSupportPropertyChangeNotifications<System.Object,System.String>.RemoveListener(Infragistics.ITypedPropertyChangeListener)" />*/
	,
	$type: new $.ig.Type('ScrollInfo', $.ig.Object.prototype.$type, [$.ig.INotifyPropertyChanged.prototype.$type, $.ig.ISupportPropertyChangeNotifications.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ScrollInfo" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ExtendedRangeScrollInfo" />*/

$.ig.util.defType('ExtendedRangeScrollInfo', 'ScrollInfo', {
	init: function () {
		$.ig.ScrollInfo.prototype.init.call(this);
	},
	___suspendRangeChangeCount: 0,
	___suspendRangeOffset: $.ig.util.toNullable(Number, null),
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::ScrollTo(System.Double)" />*/
	_scrollTo: function (newOffset) {
		if (!this._isRangeChangeSuspended()) {
			newOffset = this._verifyRange(newOffset);
		}
		$.ig.ScrollInfo.prototype._scrollTo.call(this, newOffset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::ScrollTo(System.Double)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::IsRangeChangeSuspended()" />*/
	_isRangeChangeSuspended: function () {
		return this.___suspendRangeChangeCount > 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::IsRangeChangeSuspended()" />*/
	,
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::SuspendRangeOffset()" />*/
	_suspendRangeOffset: function () {
		return this.___suspendRangeOffset;
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::SuspendRangeOffset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::ResumeRangeChange()" />*/
	_resumeRangeChange: function () {
		this.___suspendRangeChangeCount--;
		if (this.___suspendRangeChangeCount == 0) {
			this.___suspendRangeOffset = $.ig.util.toNullable(Number, null);
			this._onPropertyChanged("IsRangeChangeSuspended");
			this._verifyRange(this._offset());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::ResumeRangeChange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::SetTouchScrollOffet(System.Double)" />*/
	_setTouchScrollOffet: function (newOffset) {
		this._offset(newOffset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::SetTouchScrollOffet(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::SuspendRangeChange(System.Nullable)" />*/
	_suspendRangeChange: function (preScrollValue) {
		this.___suspendRangeChangeCount++;
		if (this.___suspendRangeChangeCount == 1) {
			this.___suspendRangeOffset = $.ig.util.toNullable(Number, !$.ig.util.nullableIsNull(preScrollValue) ? preScrollValue.value() : this._offset());
			this._onPropertyChanged("IsRangeChangeSuspended");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::SuspendRangeChange(System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::VerifyRange(System.Double)" />*/
	_verifyRange: function (newOffset) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.ExtendedRangeScrollInfo::VerifyRange(System.Double)" />*/
	,
	$type: new $.ig.Type('ExtendedRangeScrollInfo', $.ig.ScrollInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ExtendedRangeScrollInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo" />*/

$.ig.util.defType('SpreadsheetScrollInfo', 'ExtendedRangeScrollInfo', {
	___owner: null,
	__scrollCallback: null,
	__verifyRangeCallback: null,
	___pixelLevelScrollingCount: 0,
	init: function (owner) {
		$.ig.ExtendedRangeScrollInfo.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(owner, "owner");
		this.___owner = owner;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::Scroll(Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	_scroll1: function (scrollAmount, currentOffset) {
		if (this.__scrollCallback != null && this.__scrollCallback(this.___owner, scrollAmount, currentOffset)) {
			return;
		}
		$.ig.ExtendedRangeScrollInfo.prototype._scroll1.call(this, scrollAmount, currentOffset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::Scroll(Infragistics.Controls.Primitives.ScrollInfoAmount, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::SetTouchScrollOffet(System.Double)" />*/
	_setTouchScrollOffet: function (newOffset) {
		this._verifyRange(newOffset);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::SetTouchScrollOffet(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::VerifyRange(System.Double)" />*/
	_verifyRange: function (newOffset) {
		if (this.__verifyRangeCallback != null) {
			return this.__verifyRangeCallback(this.___owner, newOffset);
		}
		return newOffset;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::VerifyRange(System.Double)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::Owner()" />*/
	_owner: function () {
		return this.___owner;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollRegion Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::Owner()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::UsePixelLevelScrolling()" />*/
	_usePixelLevelScrolling: function () {
		return this.___pixelLevelScrollingCount > 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::UsePixelLevelScrolling()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::EnterPixelLevelScrolling()" />*/
	_enterPixelLevelScrolling: function () {
		this.___pixelLevelScrollingCount++;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::EnterPixelLevelScrolling()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::ExitPixelLevelScrolling()" />*/
	_exitPixelLevelScrolling: function () {
		this.___pixelLevelScrollingCount--;
		if (this.___pixelLevelScrollingCount == 0) {
			this._offset(this._verifyRange(this._offset()));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo::ExitPixelLevelScrolling()" />*/
	,
	$type: new $.ig.Type('SpreadsheetScrollInfo', $.ig.ExtendedRangeScrollInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetScrollInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PageStartScrollCache" />*/

$.ig.util.defType('PageStartScrollCache', 'Object', {
	_viewport: 0,
	_calculatedExtent: 0,
	_lastPageStart: 0,
	_itemIndex: 0,
	init: function (viewport, calculatedExtent, lastPageStart, itemIndex) {
		$.ig.Object.prototype.init.call(this);
		this._viewport = viewport;
		this._calculatedExtent = calculatedExtent;
		this._lastPageStart = lastPageStart;
		this._itemIndex = itemIndex;
	},
	$type: new $.ig.Type('PageStartScrollCache', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PageStartScrollCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetOwnerState" />*/

$.ig.util.defType('SpreadsheetOwnerState', 'PropertyChangeNotifierExtended', {
	init: function () {
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
	},
	___isInEditMode: false,
	___visitHyperlinkAction: null,
	___getCellText: null,
	___passwordNeededAction: null,
	___renderCache: null,
	___usesLogicalPixels: false,
	___afterPaneManagerLayout: null,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::GetCellText()" />*/
	_getCellText: function (value) {
		if (arguments.length === 1) {
			if (this.___getCellText != value) {
				this.___getCellText = value;
				this.onPropertyChanged("GetCellText");
			}
			return value;
		} else {
			return this.___getCellText;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::GetCellText()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::IsInEditMode()" />*/
	_isInEditMode: function (value) {
		if (arguments.length === 1) {
			if (this.___isInEditMode != value) {
				this.___isInEditMode = value;
				this.onPropertyChanged("IsInEditMode");
			}
			return value;
		} else {
			return this.___isInEditMode;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::IsInEditMode()" />*/
	,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::AfterPaneManagerLayout()" />*/
	_afterPaneManagerLayout: function (value) {
		if (arguments.length === 1) {
			if (this.___afterPaneManagerLayout != value) {
				this.___afterPaneManagerLayout = value;
				this.onPropertyChanged("AfterPaneManagerLayout");
			}
			return value;
		} else {
			return this.___afterPaneManagerLayout;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::AfterPaneManagerLayout()" />*/
	,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::PasswordNeededAction()" />*/
	_passwordNeededAction: function (value) {
		if (arguments.length === 1) {
			if (this.___passwordNeededAction != value) {
				this.___passwordNeededAction = value;
				this.onPropertyChanged("PasswordNeededAction");
			}
			return value;
		} else {
			return this.___passwordNeededAction;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::PasswordNeededAction()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::RenderCache()" />*/
	_renderCache: function (value) {
		if (arguments.length === 1) {
			if (this.___renderCache != value) {
				this.___renderCache = value;
				this.onPropertyChanged("RenderCache");
			}
			return value;
		} else {
			return this.___renderCache;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::RenderCache()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::UsesLogicalPixels()" />*/
	_usesLogicalPixels: function (value) {
		if (arguments.length === 1) {
			if (this.___usesLogicalPixels != value) {
				this.___usesLogicalPixels = value;
				this.onPropertyChanged("UsesLogicalPixels");
			}
			return value;
		} else {
			return this.___usesLogicalPixels;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::UsesLogicalPixels()" />*/
	,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::VisitHyperlinkAction()" />*/
	_visitHyperlinkAction: function (value) {
		if (arguments.length === 1) {
			if (this.___visitHyperlinkAction != value) {
				this.___visitHyperlinkAction = value;
				this.onPropertyChanged("VisitHyperlinkAction");
			}
			return value;
		} else {
			return this.___visitHyperlinkAction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Grids.Core.SpreadsheetOwnerState::VisitHyperlinkAction()" />*/
	,
	$type: new $.ig.Type('SpreadsheetOwnerState', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetOwnerState" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen" />*/

$.ig.util.defType('SpreadsheetGridLinePen', 'Object', {
	__color: $.ig.util.toNullable($.ig.Color.prototype.$type, null),
	init: function (gridLineColor) {
		$.ig.Object.prototype.init.call(this);
		this.__color = gridLineColor;
	},
	/*<BeginProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen::Color()" />*/
	color: function () {
		return this.__color;
	}
	/*<EndProperty Name="System.Nullable Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen::Color()" />*/
	,
	$type: new $.ig.Type('SpreadsheetGridLinePen', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetGridLinePen" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetImageBackground" />*/

$.ig.util.defType('SpreadsheetImageBackground', 'Object', {
	__bitmap: null,
	__preferredFormat: null,
	init: function (bitmap, preferredFormat) {
		$.ig.Object.prototype.init.call(this);
		this.__bitmap = bitmap;
		this.__preferredFormat = preferredFormat;
	},
	/*<BeginProperty Name="System.Windows.Media.Imaging.WriteableBitmap Infragistics.Controls.Grids.Core.SpreadsheetImageBackground::Bitmap()" />*/
	bitmap: function () {
		return this.__bitmap;
	}
	/*<EndProperty Name="System.Windows.Media.Imaging.WriteableBitmap Infragistics.Controls.Grids.Core.SpreadsheetImageBackground::Bitmap()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetImageBackground::PixelWidth()" />*/
	pixelWidth: function () {
		return this.__bitmap._pixelWidth();
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetImageBackground::PixelWidth()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetImageBackground::PixelHeight()" />*/
	pixelHeight: function () {
		return this.__bitmap._pixelHeight();
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetImageBackground::PixelHeight()" />*/
	,
	$type: new $.ig.Type('SpreadsheetImageBackground', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetImageBackground" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_DisposableCache" />*/

$.ig.util.defType('SpreadsheetRenderCache_DisposableCache', 'Object', {
	___cache: null,
	init: function (cache) {
		$.ig.Object.prototype.init.call(this);
		this.___cache = cache;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_DisposableCache::Dispose()" />*/
	dispose: function () {
		this.___cache.releaseShortTermResources();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_DisposableCache::Dispose()" />*/
	,
	$type: new $.ig.Type('SpreadsheetRenderCache_DisposableCache', $.ig.Object.prototype.$type, [$.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_DisposableCache" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider" />*/

$.ig.util.defType('SpreadsheetRenderCache_MeasureTextMetricsProvider', 'TextMetricsProviderBase', {
	__innerProvider: null,
	init: function (innerProvider, workbook) {
		$.ig.TextMetricsProviderBase.prototype.init.call(this, workbook);
		this.__innerProvider = innerProvider;
	},
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::GetDefaultRowHeight(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_getDefaultRowHeight: function (format) {
		return this.__innerProvider._getDefaultRowHeight(format);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::GetDefaultRowHeight(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::MeasureText(Infragistics.Documents.Excel.WorksheetCellFormatData, System.String, System.Nullable, System.Boolean, System.Boolean)" />*/
	_measureText: function (format, text, proposedSize, scaleForDpi, forceSingleLine) {
		return this.__innerProvider._measureText(format, text, proposedSize, scaleForDpi, forceSingleLine);
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::MeasureText(Infragistics.Documents.Excel.WorksheetCellFormatData, System.String, System.Nullable, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	_getUnderlineHeight: function (format) {
		return this.__innerProvider._getUnderlineHeight(format);
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::GetUnderlineHeight(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::IsDisplayProvider()" />*/
	_isDisplayProvider: function () {
		return this.__innerProvider._isDisplayProvider();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::IsDisplayProvider()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::ToString()" />*/
	toString: function () {
		return this.__innerProvider.toString();
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::ToString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::Dispose()" />*/
	dispose: function () {
		$.ig.TextMetricsProviderBase.prototype.dispose.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider::Dispose()" />*/
	,
	$type: new $.ig.Type('SpreadsheetRenderCache_MeasureTextMetricsProvider', $.ig.TextMetricsProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetRenderCache_MeasureTextMetricsProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CellRegionMapBase" />*/

$.ig.util.defType('CellRegionMapBase', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.CellRegionMapBase::DoesSourceContain(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	doesSourceContain: function (address) {
		var regions = this.sourceRegions();
		for (var i = 0; i < regions.length; i++) {
			if (regions[i]._contains1(address)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.CellRegionMapBase::DoesSourceContain(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.CellRegionMapBase Infragistics.Controls.Grids.Core.CellRegionMapBase::ToUnion()" />*/
	toUnion: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.CellRegionMapBase Infragistics.Controls.Grids.Core.CellRegionMapBase::ToUnion()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::GetColumn(System.Int32)" />*/
	getColumn: function (relativeColumn) {
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::GetColumn(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::GetRow(System.Int32)" />*/
	getRow: function (relativeRow) {
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::GetRow(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.CellRegionMapBase::GetSourceRegion(System.Int32, System.Int16)" />*/
	getSourceRegion: function (srcRowIndex, srcColIndex) {
		var regions = this.sourceRegions();
		for (var i = 0; i < regions.length; i++) {
			if (regions[i]._contains2(srcRowIndex, srcColIndex)) {
				return regions[i];
			}
		}
		return $.ig.WorksheetRegionAddress.prototype._invalidReference;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.CellRegionMapBase::GetSourceRegion(System.Int32, System.Int16)" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceColumns()" />*/
	sourceColumns: function () {
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceColumns()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceRows()" />*/
	sourceRows: function () {
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceRows()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceRegions()" />*/
	sourceRegions: function () {
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceRegions()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceWidth()" />*/
	sourceWidth: function () {
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceWidth()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceHeight()" />*/
	sourceHeight: function () {
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapBase::SourceHeight()" />*/
	,
	$type: new $.ig.Type('CellRegionMapBase', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.CellRegionMapBase" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CellRegionMapSingle" />*/

$.ig.util.defType('CellRegionMapSingle', 'CellRegionMapBase', {
	__source: null,
	__sourceWidth: 0,
	__sourceHeight: 0,
	__sourceRows: null,
	__sourceColumns: null,
	__sources: null,
	init: function (source) {
		this.__source = new $.ig.WorksheetRegionAddress();
		$.ig.CellRegionMapBase.prototype.init.call(this);
		this.__source = source;
		this.__sourceWidth = source._width();
		this.__sourceHeight = source._height();
		this.__sourceRows = [ new $.ig.Range$1($.ig.Number.prototype.$type, 1, source._firstRowIndex(), source._lastRowIndex()) ];
		this.__sourceColumns = [ new $.ig.Range$1($.ig.Number.prototype.$type, 1, source._firstColumnIndex(), source._lastColumnIndex()) ];
		this.__sources = [ source ];
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.CellRegionMapSingle::DoesSourceContain(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	doesSourceContain: function (address) {
		return this.__source._contains1(address);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.CellRegionMapSingle::DoesSourceContain(Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::GetColumn(System.Int32)" />*/
	getColumn: function (relativeColumn) {
		return this.__source._firstColumnIndex() + (relativeColumn % this.__sourceWidth);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::GetColumn(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::GetRow(System.Int32)" />*/
	getRow: function (relativeRow) {
		return this.__source._firstRowIndex() + (relativeRow % this.__sourceHeight);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::GetRow(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.CellRegionMapSingle::GetSourceRegion(System.Int32, System.Int16)" />*/
	getSourceRegion: function (srcRowIndex, srcColIndex) {
		return this.__source._contains2(srcRowIndex, srcColIndex) ? this.__source : $.ig.WorksheetRegionAddress.prototype._invalidReference;
	}
	/*<EndMethod Name="Infragistics.Documents.Excel.WorksheetRegionAddress Infragistics.Controls.Grids.Core.CellRegionMapSingle::GetSourceRegion(System.Int32, System.Int16)" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceColumns()" />*/
	sourceColumns: function () {
		return this.__sourceColumns;
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceColumns()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceRows()" />*/
	sourceRows: function () {
		return this.__sourceRows;
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceRows()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceRegions()" />*/
	sourceRegions: function () {
		return this.__sources;
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceRegions()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceWidth()" />*/
	sourceWidth: function () {
		return this.__sourceWidth;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceWidth()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceHeight()" />*/
	sourceHeight: function () {
		return this.__sourceHeight;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapSingle::SourceHeight()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.CellRegionMapBase Infragistics.Controls.Grids.Core.CellRegionMapSingle::ToUnion()" />*/
	toUnion: function () {
		return this;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.CellRegionMapBase Infragistics.Controls.Grids.Core.CellRegionMapSingle::ToUnion()" />*/
	,
	$type: new $.ig.Type('CellRegionMapSingle', $.ig.CellRegionMapBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.CellRegionMapSingle" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CellRegionMapMany" />*/

$.ig.util.defType('CellRegionMapMany', 'CellRegionMapBase', {
	___sources: null,
	___columnWidths: null,
	___rowHeights: null,
	___unionWidth: 0,
	___unionHeight: 0,
	___sourceRows: null,
	___sourceColumns: null,
	init: function (sources) {
		$.ig.CellRegionMapBase.prototype.init.call(this);
		if (sources == null) {
			throw new $.ig.ArgumentNullException(1);
		}
		if (sources.length < 2) {
			throw new $.ig.ArgumentException(0);
		}
		var sourcesList = new $.ig.List$1($.ig.WorksheetRegionAddress.prototype.$type, 1, sources);
		sourcesList.sort1(this);
		this.___sources = sourcesList.toArray();
		var columnCount = 0;
		var row = this.___sources[0]._firstRowIndex();
		for (var i = 0; i < this.___sources.length; i++) {
			if (this.___sources[i]._firstRowIndex() == row) {
				columnCount++;
			} else {
				break;
			}
		}
		if (this.___sources.length % columnCount != 0) {
			throw new $.ig.InvalidMultipleRangeSelection();
		}
		for (var i1 = 0; i1 < sources.length; i1++) {
			var aboveCol = i1 % columnCount;
			if (i1 != aboveCol) {
				if (this.___sources[i1]._firstColumnIndex() != this.___sources[aboveCol]._firstColumnIndex() || this.___sources[i1]._lastColumnIndex() != this.___sources[aboveCol]._lastColumnIndex()) {
					throw new $.ig.InvalidMultipleRangeSelection();
				}
			} else if (i1 > 0 && this.___sources[i1]._firstColumnIndex() <= this.___sources[i1 - 1]._lastColumnIndex()) {
				throw new $.ig.InvalidMultipleRangeSelection();
			}
			if (i1 % columnCount != 0) {
				if (this.___sources[i1]._firstRowIndex() != this.___sources[i1 - 1]._firstRowIndex() || this.___sources[i1]._lastRowIndex() != this.___sources[i1 - 1]._lastRowIndex()) {
					throw new $.ig.InvalidMultipleRangeSelection();
				}
			} else if (i1 > 0 && this.___sources[i1]._firstRowIndex() <= this.___sources[i1 - 1]._lastRowIndex()) {
				throw new $.ig.InvalidMultipleRangeSelection();
			}
		}
		var rowCount = $.ig.intDivide(this.___sources.length, columnCount);
		this.___columnWidths = new Array(columnCount);
		this.___sourceColumns = new Array(columnCount);
		for (var i2 = 0; i2 < columnCount; i2++) {
			var source = this.___sources[i2];
			this.___columnWidths[i2] = source._width();
			this.___sourceColumns[i2] = new $.ig.Range$1($.ig.Number.prototype.$type, 1, source._firstColumnIndex(), source._lastColumnIndex());
		}
		this.___rowHeights = new Array(rowCount);
		this.___sourceRows = new Array(rowCount);
		for (var i3 = 0; i3 < rowCount; i3++) {
			var source1 = this.___sources[i3 * columnCount];
			this.___rowHeights[i3] = source1._height();
			this.___sourceRows[i3] = new $.ig.Range$1($.ig.Number.prototype.$type, 1, source1._firstRowIndex(), source1._lastRowIndex());
		}
		this.___unionWidth = $.ig.CellRegionMapMany.prototype._sum(this.___columnWidths);
		this.___unionHeight = $.ig.CellRegionMapMany.prototype._sum(this.___rowHeights);
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::GetColumn(System.Int32)" />*/
	getColumn: function (relativeColumn) {
		var $self = this;
		var col = relativeColumn % this.___unionWidth;
		var offsetInSource;
		var idx = (function () { var $ret = $.ig.CellRegionMapMany.prototype._getIndex($self.___columnWidths, col, offsetInSource); offsetInSource = $ret.p2; return $ret.ret; }());
		return this.___sources[idx]._firstColumnIndex() + offsetInSource;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::GetColumn(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::GetRow(System.Int32)" />*/
	getRow: function (relativeRow) {
		var $self = this;
		var row = relativeRow % this.___unionHeight;
		var offsetInSource;
		var idx = (function () { var $ret = $.ig.CellRegionMapMany.prototype._getIndex($self.___rowHeights, row, offsetInSource); offsetInSource = $ret.p2; return $ret.ret; }()) * this.___columnWidths.length;
		return this.___sources[idx]._firstRowIndex() + offsetInSource;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::GetRow(System.Int32)" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceColumns()" />*/
	sourceColumns: function () {
		return this.___sourceColumns;
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceColumns()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceRows()" />*/
	sourceRows: function () {
		return this.___sourceRows;
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceRows()" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceRegions()" />*/
	sourceRegions: function () {
		return this.___sources;
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceRegions()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceWidth()" />*/
	sourceWidth: function () {
		return this.___unionWidth;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceWidth()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceHeight()" />*/
	sourceHeight: function () {
		return this.___unionHeight;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::SourceHeight()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.CellRegionMapBase Infragistics.Controls.Grids.Core.CellRegionMapMany::ToUnion()" />*/
	toUnion: function () {
		var address = new $.ig.WorksheetRegionAddress(1, this.___sourceRows[0].__start, $.ig.Enumerable.prototype.last$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), this.___sourceRows).__end, this.___sourceColumns[0].__start, $.ig.Enumerable.prototype.last$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), this.___sourceColumns).__end);
		return new $.ig.CellRegionMapSingle(address);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.CellRegionMapBase Infragistics.Controls.Grids.Core.CellRegionMapMany::ToUnion()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::GetIndex(, System.Int32, System.Int32)" />*/
	_getIndex: function (extents, extent, offsetInSource) {
		for (var i = 0; i < extents.length; i++) {
			if (extent < extents[i]) {
				offsetInSource = extent;
				return {
					ret: i,
					p2: offsetInSource
				};
			}
			extent -= extents[i];
		}
		$.ig.Debug.prototype.fail("Should have found something");
		offsetInSource = 0;
		return {
			ret: 0,
			p2: offsetInSource
		};
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::GetIndex(, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::Sum()" />*/
	_sum: function (extents) {
		var sum = 0;
		for (var i = 0; i < extents.length; i++) {
			sum += extents[i];
		}
		return sum;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::Sum()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::System.Collections.Generic.IComparer<Infragistics.Documents.Excel.WorksheetRegionAddress>.Compare(Infragistics.Documents.Excel.WorksheetRegionAddress, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	compare: function (x, y) {
		var result = $.ig.util.compareSimple(x._firstRowIndex(), y._firstRowIndex());
		if (result == 0) {
			result = $.ig.util.compareSimple(x._firstColumnIndex(), y._firstColumnIndex());
		}
		return result;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.CellRegionMapMany::System.Collections.Generic.IComparer<Infragistics.Documents.Excel.WorksheetRegionAddress>.Compare(Infragistics.Documents.Excel.WorksheetRegionAddress, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	$type: new $.ig.Type('CellRegionMapMany', $.ig.CellRegionMapBase.prototype.$type, [$.ig.IComparer$1.prototype.$type.specialize($.ig.WorksheetRegionAddress.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.CellRegionMapMany" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.InvalidMultipleRangeSelection" />*/

$.ig.util.defType('InvalidMultipleRangeSelection', 'Error', {
	init: function () {
		$.ig.Error.prototype.init.call(this, 0);
	},
	$type: new $.ig.Type('InvalidMultipleRangeSelection', $.ig.Error.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.InvalidMultipleRangeSelection" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase" />*/

$.ig.util.defType('WorkbookSerializationProviderBase', 'Object', {
	init: function (initNumber, supportedFormats) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.WorkbookSerializationProviderBase.prototype.init1.call(this, 1, supportedFormats, supportedFormats);
	},
	init1: function (initNumber, supportedLoadFormats, supportedSaveFormats) {
		$.ig.Object.prototype.init.call(this);
		this.supportedLoadFormats(new $.ig.ReadOnlyCollection$1(String, 1, supportedLoadFormats || $.ig.WorkbookSerializationProviderBase.prototype._emptyFormats));
		this.supportedSaveFormats(new $.ig.ReadOnlyCollection$1(String, 1, supportedSaveFormats || $.ig.WorkbookSerializationProviderBase.prototype._emptyFormats));
	},
	_supportedLoadFormats: null,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::SupportedLoadFormats()" />*/
	supportedLoadFormats: function (value) {
		if (arguments.length === 1) {
			this._supportedLoadFormats = value;
			return value;
		} else {
			return this._supportedLoadFormats;
		}
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::SupportedLoadFormats()" />*/
	,
	_supportedSaveFormats: null,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::SupportedSaveFormats()" />*/
	supportedSaveFormats: function (value) {
		if (arguments.length === 1) {
			this._supportedSaveFormats = value;
			return value;
		} else {
			return this._supportedSaveFormats;
		}
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::SupportedSaveFormats()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	load: function (context) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::GetPreferredLoadFormat(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	getPreferredLoadFormat: function (context) {
		var en = this.supportedLoadFormats().getEnumerator();
		while (en.moveNext()) {
			var format = en.current();
			if (context.getDataPresent(format)) {
				return format;
			}
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::GetPreferredLoadFormat(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	save: function (context) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::UpdateSheetSelection(, )" />*/
	updateSheetSelection: function (sheetsTarget, cellRangesTarget) {
		var intersectedMergedCellRange = $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null);
		for (var i = 0; i < sheetsTarget.length; i++) {
			var sheet = sheetsTarget[i];
			var selection = sheet.displayOptions()._selection();
			var paneSelection = selection.getSelection(sheet.displayOptions()._activePane());
			if (paneSelection == null) {
				paneSelection = $.ig.WorksheetPaneSelection.prototype.createDefault(sheet.displayOptions()._activePane());
				selection.paneSelections().add(paneSelection);
			}
			if (paneSelection.activeCellRangesId() >= cellRangesTarget.length || false == cellRangesTarget[paneSelection.activeCellRangesId()]._contains(paneSelection.activeCell()) || false == cellRangesTarget[paneSelection.activeCellRangesId()].equals(paneSelection.ranges().item(paneSelection.activeCellRangesId()))) {
				var idx = paneSelection.activeCellRangesId(Math.min(paneSelection.activeCellRangesId(), cellRangesTarget.length - 1));
				paneSelection.activeCell(new $.ig.WorksheetCellAddress(1, cellRangesTarget[idx]._firstRowIndex(), cellRangesTarget[idx]._firstColumnIndex()));
			}
			paneSelection.ranges().clear();
			for (var i1 = 0; i1 < cellRangesTarget.length; i1++) {
				var targetRegion = cellRangesTarget[i1];
				var $ret = sheet._extendRegionForMergedCells(targetRegion, null);
				targetRegion = $ret.p0;
				if ($.ig.WorksheetRegionAddress.prototype._l_op_Equality_Lifted(intersectedMergedCellRange, $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null)) && $.ig.WorksheetRegionAddress.prototype._l_op_Inequality(targetRegion, cellRangesTarget[i1])) {
					intersectedMergedCellRange = $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, cellRangesTarget[i1]);
				}
				paneSelection.ranges().add(targetRegion);
			}
		}
		return intersectedMergedCellRange;
	}
	/*<EndMethod Name="System.Nullable Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase::UpdateSheetSelection(, )" />*/
	,
	$type: new $.ig.Type('WorkbookSerializationProviderBase', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider', 'WorkbookSerializationProviderBase', {
	init: function (initNumber, supportedFormats) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.WorkbookSerializationProviderBase.prototype.init.call(this, 0, supportedFormats);
	},
	init1: function (initNumber, supportedLoadFormats, supportedSaveFormats) {
		$.ig.WorkbookSerializationProviderBase.prototype.init1.call(this, 1, supportedLoadFormats, supportedSaveFormats);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyFont(System.Collections.Generic.Dictionary, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.CellFormatValueChangedOptions)" />*/
	copyFont: function (fontMap, srcFormat, targetFormat, formatOptions) {
		var srcFont = srcFormat._fontInternal();
		var targetFont;
		if (srcFont.element()._isEmpty()) {
			targetFormat.formatOptions(targetFormat.formatOptions() & (~$.ig.excel.WorksheetCellFormatOptions.applyFontFormatting));
		} else {
			var $ret = fontMap.tryGetValue(srcFont.element(), targetFont);
			targetFont = $ret.p1;
			targetFormat._fontInternal()._setFontFormatting1(targetFont || srcFont, false, formatOptions);
			if (targetFont == null) {
				fontMap.add(srcFont.element(), targetFormat.element()._fontInternal().element());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyFont(System.Collections.Generic.Dictionary, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.CellFormatValueChangedOptions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyFormatProperties(Infragistics.Documents.Excel.Workbook, System.Boolean, Infragistics.Documents.Excel.CellFormatValue, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.CellFormatValueChangedOptions)" />*/
	copyFormatProperties: function (wbSource, copySourceStyleFormatting, formatPropertiesToCopyForWs, srcFormat, targetFormat, formatOptions) {
		var actualProperties = formatPropertiesToCopyForWs;
		for (var value = 1; value != $.ig.CellFormatValue.prototype._endValue; value = (value << 1)) {
			if ((actualProperties & value) == 0) {
				continue;
			}
			var formatValue = srcFormat._getValue(value);
			if (copySourceStyleFormatting && formatValue != null) {
				if ((value & $.ig.CellFormatValue.prototype.themeProperties) != 0) {
					switch (value) {
						case $.ig.CellFormatValue.prototype.fill:
							{
								var srcCellFill = formatValue;
								formatValue = srcCellFill._toResolvedColorFill(wbSource);
								break;
							}
						case $.ig.CellFormatValue.prototype.bottomBorderColorInfo:
						case $.ig.CellFormatValue.prototype.rightBorderColorInfo:
						case $.ig.CellFormatValue.prototype.leftBorderColorInfo:
						case $.ig.CellFormatValue.prototype.topBorderColorInfo:
						case $.ig.CellFormatValue.prototype.diagonalBorderColorInfo:
						case $.ig.CellFormatValue.prototype.fontColorInfo:
							{
								var srcColorInfo = formatValue;
								if ($.ig.util.nullableNotEquals(srcColorInfo._themeColorType$i(), null)) {
									formatValue = srcColorInfo._toResolved(wbSource, true);
								}
								break;
							}
					}
				}
			}
			targetFormat._setValue1(value, formatValue, false, formatOptions);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyFormatProperties(Infragistics.Documents.Excel.Workbook, System.Boolean, Infragistics.Documents.Excel.CellFormatValue, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.CellFormatValueChangedOptions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyFormatting(Infragistics.Documents.Excel.Workbook, Infragistics.Documents.Excel.Workbook, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.Dictionary, System.Collections.Generic.Dictionary, System.Collections.Generic.List, Infragistics.Documents.Excel.CellFormatValue, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Boolean)" />*/
	copyFormatting: function (wbSource, wbTarget, copyFont, copyStyle, copySourceStyleFormatting, fontMap, styleMap, originalTargetStyles, formatPropertiesToCopyForWs, srcFormat, targetFormat, isCellFormat) {
		var formatCollection = targetFormat.beforeSet1(true);
		if (copyFont) {
			$.ig.ExcelWorkbookSerializationProvider.prototype.copyFont(fontMap, srcFormat, targetFormat, isCellFormat ? $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior : $.ig.CellFormatValueChangedOptions.prototype.preventAllSyncronization);
		}
		if (copyStyle) {
			$.ig.ExcelWorkbookSerializationProvider.prototype.copyStyle(wbTarget, styleMap, originalTargetStyles, srcFormat, targetFormat, isCellFormat ? $.ig.CellFormatValueChangedOptions.prototype.defaultBehavior : $.ig.CellFormatValueChangedOptions.prototype.preventAllSyncronization);
		}
		$.ig.ExcelWorkbookSerializationProvider.prototype.copyFormatProperties(wbSource, copySourceStyleFormatting, formatPropertiesToCopyForWs, srcFormat, targetFormat, isCellFormat ? $.ig.CellFormatValueChangedOptions.prototype.preventAdjacentBorderSyncronization : $.ig.CellFormatValueChangedOptions.prototype.preventAllSyncronization);
		targetFormat.afterSet(formatCollection);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyFormatting(Infragistics.Documents.Excel.Workbook, Infragistics.Documents.Excel.Workbook, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.Dictionary, System.Collections.Generic.Dictionary, System.Collections.Generic.List, Infragistics.Documents.Excel.CellFormatValue, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyHyperlinks(, Infragistics.Controls.Grids.Core.CellRegionMapBase, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.Worksheet)" />*/
	copyHyperlinks: function (cellRangesTarget, regionMap, wsSource, wsTarget) {
		if (wsSource._hasHyperlinks()) {
			var wbTarget = wsTarget.workbook();
			var targetReferenceMode = wbTarget.cellReferenceMode();
			var $t = regionMap.sourceRegions();
			for (var i = 0; i < $t.length; i++) {
				var region = $t[i];
				var en = wsSource.hyperlinks().getEnumerator();
				while (en.moveNext()) {
					var srcHyperlink = en.current();
					var srcHyperlinkAddress = srcHyperlink.sourceRegion()._address();
					if (srcHyperlinkAddress._intersectsWith(region)) {
						var intersection = new $.ig.WorksheetRegionAddress(1, Math.max(region._firstRowIndex(), srcHyperlinkAddress._firstRowIndex()), Math.min(region._lastRowIndex(), srcHyperlinkAddress._lastRowIndex()), Math.max(region._firstColumnIndex(), srcHyperlinkAddress._firstColumnIndex()), Math.min(region._lastColumnIndex(), srcHyperlinkAddress._lastColumnIndex()));
						var colOffset = intersection._firstColumnIndex() - region._firstColumnIndex();
						var rowOffset = intersection._firstRowIndex() - region._firstRowIndex();
						var intersectionWidth = intersection._width();
						var intersectionHeight = intersection._height();
						var srcWidth = region._width();
						var srcHeight = region._height();
						var isInvalidTarget = false;
						var hyperlinkTarget = null;
						if (srcHyperlink.targetNamedReference() != null) {
							hyperlinkTarget = wbTarget.namedReferences()._find1(srcHyperlink.targetNamedReference().name(), wsTarget);
							if (hyperlinkTarget == null) {
								hyperlinkTarget = wbTarget.namedReferences()._find(srcHyperlink.targetNamedReference().name());
								if (hyperlinkTarget == null) {
									hyperlinkTarget = srcHyperlink.targetAddress();
									isInvalidTarget = true;
								}
							}
						} else if ($.ig.excel.WorksheetCell.prototype.l_op_Inequality(srcHyperlink.targetCell(), null)) {
							var cellAddress = srcHyperlink.targetCell()._toString1(targetReferenceMode, true);
							try {
								hyperlinkTarget = wsTarget._getCell2(cellAddress, targetReferenceMode, null);
							}
							catch (e) {
								hyperlinkTarget = cellAddress;
								isInvalidTarget = true;
							}
						} else if (srcHyperlink.targetRegion() != null) {
							var regionAddress = srcHyperlink.targetRegion()._toString1(targetReferenceMode, true);
							try {
								hyperlinkTarget = wsTarget._getRegion2(regionAddress, targetReferenceMode, null);
							}
							catch (e1) {
								hyperlinkTarget = regionAddress;
								isInvalidTarget = true;
							}
						} else {
							hyperlinkTarget = srcHyperlink.targetAddress();
						}
						for (var i1 = 0; i1 < cellRangesTarget.length; i1++) {
							var targetRange = cellRangesTarget[i1];
							var targetWidth = targetRange._width();
							var targetHeight = targetRange._height();
							for (var c = 0, cCount = $.ig.intDivide(targetWidth, region._width()); c < cCount; c++) {
								for (var r = 0, rCount = $.ig.intDivide(targetHeight, region._height()); r < rCount; r++) {
									var rowStart = targetRange._firstRowIndex() + r * srcHeight + rowOffset;
									var colStart = targetRange._firstColumnIndex() + c * srcWidth + colOffset;
									var targetHyperlinkSourceRegion = new $.ig.excel.WorksheetRegion(wsTarget, rowStart, colStart, rowStart + intersectionHeight - 1, colStart + intersectionWidth - 1);
									var targetHyperlink = new $.ig.excel.WorksheetHyperlink(targetHyperlinkSourceRegion, hyperlinkTarget, srcHyperlink.displayText(), srcHyperlink.toolTip());
									targetHyperlink._isInvalidTargetLocation(isInvalidTarget);
									wsTarget.hyperlinks().add(targetHyperlink);
								}
							}
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyHyperlinks(, Infragistics.Controls.Grids.Core.CellRegionMapBase, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyStyle(Infragistics.Documents.Excel.Workbook, System.Collections.Generic.Dictionary, System.Collections.Generic.List, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.CellFormatValueChangedOptions)" />*/
	copyStyle: function (wbTarget, styleMap, originalTargetStyles, srcFormat, targetFormat, formatOptions) {
		var srcStyle = srcFormat.style();
		var targetStyle = null;
		if (srcStyle != null && !(function () { var $ret = styleMap.tryGetValue(srcStyle, targetStyle); targetStyle = $ret.p1; return $ret.ret; }())) {
			if (srcStyle.isBuiltIn()) {
				var srcBuiltInStyle = srcStyle;
				if (srcBuiltInStyle._isCustomized() == false) {
					targetStyle = wbTarget.styles()._item1(srcStyle.name());
				}
			}
			if (targetStyle == null) {
				var srcStyleNameLen = srcStyle.name().length;
				var usedIndexes = new $.ig.List$1($.ig.Number.prototype.$type, 0);
				var en = originalTargetStyles.getEnumerator();
				while (en.moveNext()) {
					var origTargetStyle = en.current();
					if (origTargetStyle.name().startsWith1(srcStyle.name(), $.ig.StringComparison.prototype.currentCulture)) {
						if (srcStyleNameLen != origTargetStyle.name().length) {
							if (origTargetStyle.name().charAt(srcStyleNameLen) != ' ' || origTargetStyle.name().length == srcStyleNameLen + 1) {
								continue;
							}
							var restOfName = origTargetStyle.name().substr(srcStyleNameLen + 1);
							var counter;
							if ((function () { var $ret = $.ig.util.tryParseInt32_2(restOfName, $.ig.NumberStyles.prototype.none, wbTarget._cultureResolved(), counter); counter = $ret.p3; return $ret.ret; }()) == false) {
								continue;
							}
							usedIndexes.add(counter);
						}
						var differences = $.ig.WorksheetCellFormatProxy.prototype._getDifferences1(srcStyle._styleFormatInternal(), origTargetStyle._styleFormatInternal());
						if (differences == 0) {
							targetStyle = origTargetStyle;
							break;
						}
					}
				}
				if (targetStyle == null) {
					var newName = srcStyle.name();
					if (wbTarget.styles()._item1(srcStyle.name()) != null) {
						usedIndexes.sort();
						var counterToUse = 1;
						var en1 = usedIndexes.getEnumerator();
						while (en1.moveNext()) {
							var usedIndex = en1.current();
							if (usedIndex != counterToUse) {
								break;
							}
							counterToUse++;
						}
						newName += " " + $.ig.util.numberToString(counterToUse, wbTarget._cultureResolved());
					}
					targetStyle = wbTarget.styles()._addUserDefinedStyle(srcStyle.styleFormat(), newName);
				}
			}
			styleMap.item(srcStyle, targetStyle);
		}
		targetFormat._setStyle(targetStyle, false, formatOptions);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyStyle(Infragistics.Documents.Excel.Workbook, System.Collections.Generic.Dictionary, System.Collections.Generic.List, Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatProxy, Infragistics.Documents.Excel.CellFormatValueChangedOptions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyValidation(, Infragistics.Controls.Grids.Core.CellRegionMapBase, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.Worksheet)" />*/
	copyValidation: function (cellRangesTarget, regionMap, wsSource, wsTarget) {
		$.ig.Debug.prototype.assert(wsSource != wsTarget);
		if (wsTarget._hasDataValidationRules()) {
			for (var i = 0; i < cellRangesTarget.length; i++) {
				var targetRegion = cellRangesTarget[i];
				wsTarget.dataValidationRules()._remove4(targetRegion);
			}
		}
		if (wsSource._hasDataValidationRules()) {
			var en = wsSource.dataValidationRules().getEnumerator();
			while (en.moveNext()) {
				var rulePair = en.current();
				var targetReferences = null;
				var $t = regionMap.sourceRegions();
				for (var i1 = 0; i1 < $t.length; i1++) {
					var region = $t[i1];
					if (rulePair.value()._intersectsWith(region)) {
						var en1 = rulePair.value()._regions().getEnumerator();
						while (en1.moveNext()) {
							var ruleSrcRegion = en1.current();
							if (ruleSrcRegion._intersectsWith(region)) {
								if (targetReferences == null) {
									targetReferences = new $.ig.excel.WorksheetReferenceCollection(wsTarget);
								}
								var intersection = new $.ig.WorksheetRegionAddress(1, Math.max(region._firstRowIndex(), ruleSrcRegion._firstRowIndex()), Math.min(region._lastRowIndex(), ruleSrcRegion._lastRowIndex()), Math.max(region._firstColumnIndex(), ruleSrcRegion._firstColumnIndex()), Math.min(region._lastColumnIndex(), ruleSrcRegion._lastColumnIndex()));
								var colOffset = intersection._firstColumnIndex() - region._firstColumnIndex();
								var rowOffset = intersection._firstRowIndex() - region._firstRowIndex();
								var intersectionWidth = intersection._width();
								var intersectionHeight = intersection._height();
								var srcWidth = region._width();
								var srcHeight = region._height();
								for (var i2 = 0; i2 < cellRangesTarget.length; i2++) {
									var targetRange = cellRangesTarget[i2];
									var targetWidth = targetRange._width();
									var targetHeight = targetRange._height();
									for (var c = 0, cCount = $.ig.intDivide(targetWidth, region._width()); c < cCount; c++) {
										for (var r = 0, rCount = $.ig.intDivide(targetHeight, region._height()); r < rCount; r++) {
											var rowStart = targetRange._firstRowIndex() + r * srcHeight + rowOffset;
											var colStart = targetRange._firstColumnIndex() + c * srcWidth + colOffset;
											var targetRegion1 = new $.ig.excel.WorksheetRegion(wsTarget, rowStart, colStart, rowStart + intersectionHeight - 1, colStart + intersectionWidth - 1);
											targetReferences._add(targetRegion1);
										}
									}
								}
							}
						}
					}
				}
				if (targetReferences != null) {
					var srcRule = rulePair.key();
					var targetRule = null;
					var en2 = wsTarget.dataValidationRules().getEnumerator();
					while (en2.moveNext()) {
						var targetPair = en2.current();
						if (targetPair.key().isEquivalentTo(srcRule)) {
							targetRule = targetPair.key();
							break;
						}
					}
					if (targetRule == null) {
						targetRule = srcRule.clone();
					}
					wsTarget.dataValidationRules()._add4(targetRule, targetReferences);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::CopyValidation(, Infragistics.Controls.Grids.Core.CellRegionMapBase, Infragistics.Documents.Excel.Worksheet, Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::ExpandRangeForFill(System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	expandRangeForFill: function (srcWidth, srcHeight, target) {
		var targetWidth = target._width();
		var targetHeight = target._height();
		if (targetWidth % srcWidth != 0 || targetHeight % srcHeight != 0) {
			var newHeight = targetHeight % srcHeight != 0 || targetWidth != 1 ? srcHeight : targetHeight;
			var newWidth = targetWidth % srcWidth != 0 || targetHeight != 1 ? srcWidth : targetWidth;
			target = new $.ig.WorksheetRegionAddress(1, target._firstRowIndex(), target._firstRowIndex() + newHeight - 1, target._firstColumnIndex(), (target._firstColumnIndex() + newWidth - 1));
			return {
				ret: true,
				p2: target
			};
		}
		return {
			ret: false,
			p2: target
		};
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::ExpandRangeForFill(System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRegionAddress)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::GetAllRowsInRange(Infragistics.Documents.Excel.WorksheetRowCollection, System.Int32, System.Int32)" />*/
	getAllRowsInRange: function (rows, firstRow, lastRow) {
		var d__ = new $.ig.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass(-2);
		d__.___3__rows = rows;
		d__.___3__firstRow = firstRow;
		d__.___3__lastRow = lastRow;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::GetAllRowsInRange(Infragistics.Documents.Excel.WorksheetRowCollection, System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::LoadFromWorkbook(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext, Infragistics.Documents.Excel.Workbook, System.Boolean)" />*/
	loadFromWorkbook: function (context, wbSource, useOleSize) {
		var wbTarget = context.workbook();
		if (wbSource != wbTarget) {
			wbSource.suspendCalculations();
		}
		if (useOleSize && $.ig.WorksheetRegionAddress.prototype._l_op_Equality_Lifted(wbSource._oleSize(), $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null))) {
			useOleSize = false;
		}
		var sheetsSource = useOleSize ? [ wbSource.windowOptions().selectedWorksheet() ] : $.ig.Enumerable.prototype.toArray$1($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.where$1($.ig.excel.Worksheet.prototype.$type, wbSource.worksheets(), function (s) { return s.displayOptions()._isTabSelected(); }));
		var sheetsTarget = $.ig.SpreadsheetUtilities.prototype.getSelectedWorksheets(wbTarget);
		if (sheetsTarget.length % sheetsSource.length != 0) {
			context.onError($.ig.WorkbookSerializationLoadError.prototype.worksheetCountMismatch);
			return false;
		}
		var options = context.categoriesToLoad();
		var skipBlanksInSource = context.skipBlanks();
		var activeWsSource = wbSource.windowOptions().selectedWorksheet();
		var activeWsTarget = wbTarget.windowOptions().selectedWorksheet();
		var selectionSource;
		if (useOleSize) {
			selectionSource = new $.ig.WorksheetPaneSelection();
			selectionSource.activeCell(new $.ig.WorksheetCellAddress(1, wbSource._oleSize().value()._firstRowIndex(), wbSource._oleSize().value()._firstColumnIndex()));
			selectionSource.activeCellRangesId(0);
			selectionSource.location($.ig.PaneLocation.prototype.topLeft);
			selectionSource.ranges().add(wbSource._oleSize().value());
		} else {
			selectionSource = activeWsSource.displayOptions()._selection().getSelection(activeWsSource.displayOptions()._activePane());
		}
		var selectionTarget = activeWsTarget.displayOptions()._selection().getSelection(activeWsTarget.displayOptions()._activePane());
		if (selectionSource == null || selectionSource.ranges().count() == 0) {
			context.onError($.ig.WorkbookSerializationLoadError.prototype.missingSelectionInfo);
			return false;
		}
		var cellRangesSource = $.ig.Enumerable.prototype.toArray$1($.ig.WorksheetRegionAddress.prototype.$type, selectionSource.ranges());
		var copyTables = false;
		var tempCopyTableFormatting = (options & $.ig.WorkbookSerializationLoadCategories.prototype.tableFormatting) != 0;
		var tablesToCopy = new $.ig.HashSet$1($.ig.excel.WorksheetTable.prototype.$type, 0);
		var hasSourceTablesForFormatCopy = false;
		for (var i = 0; i < sheetsSource.length; i++) {
			var srcSheet = sheetsSource[i];
			var en = srcSheet.tables().getEnumerator();
			while (en.moveNext()) {
				var table = en.current();
				for (var i1 = 0; i1 < cellRangesSource.length; i1++) {
					var range = cellRangesSource[i1];
					var wholeTableAddress = table._wholeTableAddress();
					var enumerateTableRows = false;
					if (range._contains1(wholeTableAddress)) {
						if (tablesToCopy.add(table) && !copyTables) {
							enumerateTableRows = true;
						}
					} else if (tempCopyTableFormatting && range._intersectsWith(wholeTableAddress)) {
						enumerateTableRows = true;
					}
					if (enumerateTableRows) {
						hasSourceTablesForFormatCopy = true;
						var tableRangeStartRow = Math.max(range._firstRowIndex(), wholeTableAddress._firstRowIndex());
						var tableRangeEndRow = Math.min(range._lastRowIndex(), wholeTableAddress._lastRowIndex());
						for (var i2 = tableRangeStartRow; i2 <= tableRangeEndRow; i2++) {
							var tempTableRow = srcSheet.rows().item(i2);
						}
					}
				}
			}
			if (tablesToCopy.count() > 0 && sheetsSource.length > 1) {
				context.onError($.ig.WorkbookSerializationLoadError.prototype.tablesWithMultipleWorksheets);
				return false;
			}
		}
		if (!copyTables) {
			tablesToCopy.clear();
		}
		var isSourceColumnSelection = true;
		var isSourceRowSelection = true;
		for (var i3 = 0; i3 < cellRangesSource.length; i3++) {
			var range1 = cellRangesSource[i3];
			if (range1._firstRowIndex() > 0 || range1._lastRowIndex() < wbSource.maxRowCount() - 1) {
				isSourceColumnSelection = false;
			}
			if (range1._firstColumnIndex() > 0 || range1._lastColumnIndex() < wbSource.maxColumnCount() - 1) {
				isSourceRowSelection = false;
			}
		}
		var cellRangesTarget = $.ig.Enumerable.prototype.toArray$1($.ig.WorksheetRegionAddress.prototype.$type, selectionTarget.ranges());
		var updateSelection = false;
		var regionMap;
		if (cellRangesSource.length > 1) {
			if (cellRangesTarget.length > 1) {
				context.onError($.ig.WorkbookSerializationLoadError.prototype.multipleSourceAndTargetRanges);
				return false;
			}
			regionMap = new $.ig.CellRegionMapMany(cellRangesSource);
		} else {
			regionMap = new $.ig.CellRegionMapSingle(cellRangesSource[0]);
			if (cellRangesTarget.length > 1) {
				var srcWidth = cellRangesSource[0]._width();
				var srcHeight = cellRangesSource[0]._height();
				for (var i4 = 0; i4 < cellRangesTarget.length; i4++) {
					var targetRange = cellRangesTarget[i4];
					var targetWidth = targetRange._width();
					var targetHeight = targetRange._height();
					if ((targetWidth > 1 && targetWidth % srcWidth != 0) || (targetHeight > 1 && targetHeight % srcHeight != 0)) {
						context.onError($.ig.WorkbookSerializationLoadError.prototype.cellRangeMismatch);
						return false;
					}
					if ((targetWidth == 1 && srcWidth != 1) || (targetHeight == 1 && srcHeight != 1)) {
						updateSelection = true;
						cellRangesTarget[i4] = new $.ig.WorksheetRegionAddress(1, cellRangesTarget[i4]._firstRowIndex(), targetHeight == 1 ? cellRangesTarget[i4]._firstRowIndex() + srcHeight - 1 : cellRangesTarget[i4]._lastRowIndex(), cellRangesTarget[i4]._firstColumnIndex(), targetWidth == 1 ? (cellRangesTarget[i4]._firstColumnIndex() + srcWidth - 1) : cellRangesTarget[i4]._lastColumnIndex());
					}
				}
			}
		}
		if (isSourceColumnSelection || isSourceRowSelection) {
			for (var i5 = 0; i5 < cellRangesTarget.length; i5++) {
				var targetRange1 = cellRangesTarget[i5];
				if ((isSourceRowSelection && targetRange1._firstColumnIndex() != 0) || (isSourceColumnSelection && targetRange1._firstRowIndex() != 0)) {
					context.onError($.ig.WorkbookSerializationLoadError.prototype.cellRangeMismatch);
					return false;
				}
			}
		}
		if (cellRangesTarget.length == 1) {
			updateSelection = (function () { var $ret = $.ig.ExcelWorkbookSerializationProvider.prototype.expandRangeForFill(regionMap.sourceWidth(), regionMap.sourceHeight(), cellRangesTarget[0]); cellRangesTarget[0] = $ret.p2; return $ret.ret; }());
		}
		if (context.validateTarget(sheetsTarget, cellRangesTarget, true) == false) {
			return false;
		}
		var intersectedMergedCellRange = $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null);
		if (updateSelection) {
			intersectedMergedCellRange = $.ig.WorkbookSerializationProviderBase.prototype.updateSheetSelection(sheetsTarget, cellRangesTarget);
		}
		if ($.ig.WorksheetRegionAddress.prototype._l_op_Inequality_Lifted(intersectedMergedCellRange, $.ig.util.toNullable($.ig.WorksheetRegionAddress.prototype.$type, null))) {
			context.onError($.ig.WorkbookSerializationLoadError.prototype.intersectsMergedCell);
			return false;
		}
		var targetRegions = new Array(cellRangesTarget.length);
		var blockingValuesToClear = new $.ig.HashSet$1($.ig.IRegionBlockingValue.prototype.$type, 0);
		for (var i6 = 0; i6 < sheetsTarget.length; i6++) {
			var wsTarget = sheetsTarget[i6];
			for (var j = 0; j < cellRangesTarget.length; j++) {
				targetRegions[j] = wsTarget._getCachedRegion(cellRangesTarget[j]);
			}
			$.ig.ExcelUtils.prototype.verifyBlockedRegions(targetRegions, blockingValuesToClear);
		}
		var en1 = blockingValuesToClear.getEnumerator();
		while (en1.moveNext()) {
			var blockingValue = en1.current();
			blockingValue.removeFromRegion();
		}
		var copyValues = (options & $.ig.WorkbookSerializationLoadCategories.prototype.values) != 0;
		var copyFormulas = (options & $.ig.WorkbookSerializationLoadCategories.prototype.formulas) != 0;
		if (cellRangesSource.length > 1 && (options & $.ig.WorkbookSerializationLoadCategories.prototype.skipFormulasFromMultipleSourceRanges) != 0) {
			copyFormulas = false;
		}
		var copyBorders = (options & $.ig.WorkbookSerializationLoadCategories.prototype.borders) != 0;
		var copyFont = (options & $.ig.WorkbookSerializationLoadCategories.prototype.font) != 0;
		var copyStyle = (options & $.ig.WorkbookSerializationLoadCategories.prototype.style) != 0;
		var copyColumnWidths = (options & $.ig.WorkbookSerializationLoadCategories.prototype.columnWidths) != 0;
		var copyRowHeights = (options & $.ig.WorkbookSerializationLoadCategories.prototype.rowHeights) != 0;
		var copyTableFormatting = (options & $.ig.WorkbookSerializationLoadCategories.prototype.tableFormatting) != 0;
		var copySourceStyleFormatting = (options & $.ig.WorkbookSerializationLoadCategories.prototype.useSourceTheme) != 0;
		var copyMergedCells = (options & $.ig.WorkbookSerializationLoadCategories.prototype.mergedCells) != 0;
		var copyHyperlinks = (options & $.ig.WorkbookSerializationLoadCategories.prototype.hyperlinks) != 0;
		var copyValidation = (options & $.ig.WorkbookSerializationLoadCategories.prototype.validation) != 0;
		if (!copyColumnWidths && isSourceColumnSelection && (options & $.ig.WorkbookSerializationLoadCategories.prototype.includeColumnWidthsWithColumnSelection) != 0) {
			copyColumnWidths = true;
		}
		if (!copyRowHeights && isSourceRowSelection && (options & $.ig.WorkbookSerializationLoadCategories.prototype.includeRowHeightsWithRowSelection) != 0) {
			copyRowHeights = true;
		}
		var mergedCellsProcessed = new $.ig.HashSet$1($.ig.excel.WorksheetMergedCellsRegion.prototype.$type, 0);
		var fontMap = new $.ig.Dictionary$2($.ig.WorkbookFontData.prototype.$type, $.ig.excel.IWorkbookFont.prototype.$type, 0);
		var styleMap = new $.ig.Dictionary$2($.ig.excel.WorkbookStyle.prototype.$type, $.ig.excel.WorkbookStyle.prototype.$type, 0);
		var originalTargetStyles = $.ig.Enumerable.prototype.toList$1($.ig.excel.WorkbookStyle.prototype.$type, $.ig.Enumerable.prototype.orderBy$2($.ig.excel.WorkbookStyle.prototype.$type, String, wbTarget.styles(), function (s) { return s.name(); }));
		var igTargetRanges = $.ig.SpreadsheetUtilities.prototype.toSheetCellRange(cellRangesTarget);
		var formatPropertiesToCopy = 0;
		if ((options & $.ig.WorkbookSerializationLoadCategories.prototype.alignment) != 0) {
			formatPropertiesToCopy |= $.ig.CellFormatValue.prototype.alignmentFormattingProperties;
		}
		if ((options & $.ig.WorkbookSerializationLoadCategories.prototype.fill) != 0) {
			formatPropertiesToCopy |= $.ig.CellFormatValue.prototype.fillFormattingProperties;
		}
		if ((options & $.ig.WorkbookSerializationLoadCategories.prototype.protection) != 0) {
			formatPropertiesToCopy |= $.ig.CellFormatValue.prototype.protectionFormattingProperties;
		}
		if ((options & $.ig.WorkbookSerializationLoadCategories.prototype.numberFormat) != 0) {
			formatPropertiesToCopy |= $.ig.CellFormatValue.prototype.numberFormattingProperties;
		}
		if (copyBorders) {
			formatPropertiesToCopy |= $.ig.CellFormatValue.prototype.borderFormattingProperties;
		}
		for (var i7 = 0; i7 < sheetsTarget.length; i7++) {
			var wsSource = sheetsSource[i7 % sheetsSource.length];
			var wsTarget1 = sheetsTarget[i7];
			mergedCellsProcessed.clear();
			var wasPreventingImplicitSetCellValueChanges = wsTarget1._preventImplicitSetCellValueChanges();
			var formatPropertiesToCopyForWs = formatPropertiesToCopy;
			if (wsTarget1.isProtected()) {
				formatPropertiesToCopyForWs &= ~$.ig.CellFormatValue.prototype.locked;
			}
			var hasFormatToCopy = formatPropertiesToCopyForWs != 0 || copyFont;
			try {
				wsTarget1._preventImplicitSetCellValueChanges(true);
				if (copyHyperlinks) {
					var hasHyperlinks;
					var $ret = $.ig.SpreadsheetPaneManager.prototype._removeHyperlinks2(false, false, hasHyperlinks, wsTarget1, igTargetRanges);
					hasHyperlinks = $ret.p2;
					$.ig.ExcelWorkbookSerializationProvider.prototype.copyHyperlinks(cellRangesTarget, regionMap, wsSource, wsTarget1);
				}
				if (copyValidation) {
					this.copyValidation(cellRangesTarget, regionMap, wsSource, wsTarget1);
				}
				for (var j1 = 0; j1 < cellRangesTarget.length; j1++) {
					var targetRange2 = cellRangesTarget[j1];
					var rowOffset = targetRange2._firstRowIndex();
					var colOffset = targetRange2._firstColumnIndex();
					var targetRows = wsTarget1.rows();
					if (isSourceColumnSelection) {
						var srcRowCount = regionMap.sourceHeight();
						var targetRowCount = (targetRange2._lastRowIndex() - targetRange2._firstRowIndex()) + 1;
						var rowRepeatCount = $.ig.intDivide(targetRowCount, srcRowCount);
						$.ig.Debug.prototype.assert1((targetRowCount % regionMap.sourceHeight()) == 0, "Expected even repeat count");
						var srcRowRanges = regionMap.sourceRows();
						var srcRowRangeOffset = targetRange2._firstRowIndex();
						for (var k = 0; k < srcRowRanges.length; k++) {
							var srcRowStart = srcRowRanges[k].__start;
							var en2 = wsSource.rows()._getItemsInRange(srcRowStart, srcRowRanges[k].__end).getEnumerator();
							while (en2.moveNext()) {
								var row = en2.current();
								var srcRowIdx = row.index() - srcRowStart;
								for (var l = 0; l < rowRepeatCount; l++) {
									var temp = targetRows.item((l * srcRowCount) + srcRowRangeOffset + srcRowIdx);
								}
							}
							srcRowRangeOffset += (srcRowRanges[k].__end - srcRowStart) + 1;
						}
					}
					if (copyColumnWidths) {
						var sourceColumnBlock = null;
						var targetColumnBlock = null;
						for (var colIdx = targetRange2._firstColumnIndex(); colIdx <= targetRange2._lastColumnIndex(); colIdx++) {
							var srcColIdx = regionMap.getColumn(colIdx - colOffset);
							if (sourceColumnBlock == null || srcColIdx > sourceColumnBlock.lastColumnIndex()) {
								sourceColumnBlock = wsSource._getColumnBlock(srcColIdx);
							}
							var width = sourceColumnBlock.width();
							if (width < 0) {
								width = wsSource.defaultColumnWidth();
							}
							$.ig.Debug.prototype.assert(targetColumnBlock == null || colIdx > targetColumnBlock.lastColumnIndex() || colIdx >= targetColumnBlock.firstColumnIndex());
							if (targetColumnBlock == null || colIdx > targetColumnBlock.lastColumnIndex()) {
								targetColumnBlock = wsTarget1._getColumnBlock(colIdx);
							}
							var targetWidth1 = targetColumnBlock.width();
							if (targetWidth1 < 0) {
								targetWidth1 = wsTarget1.defaultColumnWidth();
							}
							if (width != targetWidth1 || sourceColumnBlock.hidden() != targetColumnBlock.hidden()) {
								wsTarget1.columns().item(colIdx).width(width);
								wsTarget1.columns().item(colIdx).hidden(sourceColumnBlock.hidden());
							}
						}
					}
					if (isSourceColumnSelection && hasFormatToCopy) {
						var sourceColumnBlock1 = null;
						for (var colIdx1 = targetRange2._firstColumnIndex(); colIdx1 <= targetRange2._lastColumnIndex(); colIdx1++) {
							var srcColIdx1 = regionMap.getColumn(colIdx1 - colOffset);
							if (sourceColumnBlock1 == null || !sourceColumnBlock1.containsColumn(srcColIdx1)) {
								sourceColumnBlock1 = wsSource._getColumnBlock(srcColIdx1);
							}
							var srcFormat = sourceColumnBlock1.cellFormat();
							var targetFormat = wsTarget1.columns().item(colIdx1)._cellFormatInternal();
							$.ig.ExcelWorkbookSerializationProvider.prototype.copyFormatting(wbSource, wbTarget, copyFont, copyStyle, copySourceStyleFormatting, fontMap, styleMap, originalTargetStyles, formatPropertiesToCopyForWs, srcFormat, targetFormat, false);
						}
					}
					var rowEnumerator = isSourceColumnSelection ? targetRows._getItemsInRange(targetRange2._firstRowIndex(), targetRange2._lastRowIndex()) : $.ig.ExcelWorkbookSerializationProvider.prototype.getAllRowsInRange(targetRows, targetRange2._firstRowIndex(), targetRange2._lastRowIndex());
					var columnEnumerator = new $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper($.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(targetRange2), regionMap, hasFormatToCopy, hasSourceTablesForFormatCopy);
					var en3 = rowEnumerator.getEnumerator();
					while (en3.moveNext()) {
						var targetRow = en3.current();
						var rowIdx = targetRow.index();
						var srcRowIdx1 = regionMap.getRow(rowIdx - rowOffset);
						var srcRow = wsSource.rows().item(srcRowIdx1);
						if (copyRowHeights) {
							targetRow.height(srcRow.height());
							targetRow.hidden(srcRow.hidden());
						}
						if (isSourceRowSelection && hasFormatToCopy) {
							var srcFormat1 = srcRow._hasCellFormat() ? srcRow._cellFormatInternal().element() : wsSource.workbook()._cellFormats()._defaultElement();
							var targetFormat1 = targetRow._cellFormatInternal();
							$.ig.ExcelWorkbookSerializationProvider.prototype.copyFormatting(wbSource, wbTarget, copyFont, copyStyle, copySourceStyleFormatting, fontMap, styleMap, originalTargetStyles, formatPropertiesToCopyForWs, srcFormat1, targetFormat1, false);
						}
						var columnIndexRanges = isSourceRowSelection ? $.ig.Enumerable.prototype.toList$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), columnEnumerator.getTargetColumnsForSelectedRow(srcRow, targetRow)) : columnEnumerator.getAllColumnsInRange();
						for (var colIdxRange = 0; colIdxRange < columnIndexRanges.count(); colIdxRange++) {
							for (var colIdx2 = columnIndexRanges.item(colIdxRange).__start; colIdx2 <= columnIndexRanges.item(colIdxRange).__end; colIdx2++) {
								var srcColIdx2 = regionMap.getColumn(colIdx2 - colOffset);
								var targetMergedCell = targetRow.getCellAssociatedMergedCellsRegion(colIdx2);
								if (targetMergedCell != null) {
									if (false == mergedCellsProcessed.add(targetMergedCell)) {
										continue;
									}
									if (false == targetRange2._contains1(targetMergedCell._address())) {
										continue;
									}
								}
								if (copyMergedCells) {
									var srcMergedCell = srcRow.getCellAssociatedMergedCellsRegion(srcColIdx2);
									if (srcMergedCell == null) {
										if (targetMergedCell != null) {
											if ($.ig.WorksheetRegionAddress.prototype._l_op_Equality(targetMergedCell._address(), targetRange2) && regionMap.sourceRegions().length == 1 && regionMap.sourceRegions()[0]._isSingleCell()) {
											} else {
												wsTarget1.mergedCellsRegions().remove(targetMergedCell);
											}
										}
									} else if (targetMergedCell != null && $.ig.WorksheetRegionAddress.prototype._l_op_Equality(targetMergedCell._address(), targetRange2) && regionMap.sourceRegions().length == 1 && $.ig.WorksheetRegionAddress.prototype._l_op_Equality(regionMap.sourceRegions()[0], srcMergedCell._address())) {
									} else {
										if (!regionMap.getSourceRegion(srcRowIdx1, srcColIdx2)._contains1(srcMergedCell._address())) {
											continue;
										}
										var originalMergedCell = targetMergedCell;
										if (targetMergedCell != null) {
											if (targetMergedCell._width() != srcMergedCell._width() || targetMergedCell._height() != srcMergedCell._height()) {
												wsTarget1.mergedCellsRegions().remove(targetMergedCell);
												targetMergedCell = null;
											}
										}
										if (targetMergedCell == null) {
											if (originalMergedCell == null || srcMergedCell._width() > originalMergedCell._width() || srcMergedCell._height() > originalMergedCell._height()) {
												wsTarget1._removeIntersectingMergedCellRegions(new $.ig.WorksheetRegionAddress(1, rowIdx, rowIdx + srcMergedCell._height() - 1, colIdx2, (colIdx2 + srcMergedCell._width() - 1)), mergedCellsProcessed);
											}
											targetMergedCell = wsTarget1.mergedCellsRegions()._add(rowIdx, colIdx2, rowIdx + srcMergedCell._height() - 1, colIdx2 + srcMergedCell._width() - 1);
											mergedCellsProcessed.add(targetMergedCell);
										}
									}
								}
								if (hasFormatToCopy) {
									var includeTableStyle = copyTableFormatting;
									if (includeTableStyle && tablesToCopy.count() > 0) {
										var srcTable = wsSource._getCellAssociatedTableInternal(srcRowIdx1, srcColIdx2);
										if (srcTable != null && tablesToCopy.contains(srcTable)) {
											includeTableStyle = false;
										}
									}
									var srcFormat2 = wsSource._getCellFormatElementReadOnly(srcRow, srcColIdx2);
									if (includeTableStyle) {
										srcFormat2 = wsSource._getTableCellFormatElementReadOnly(srcFormat2, srcRowIdx1, srcColIdx2) || srcFormat2;
									}
									var targetFormat2 = targetRow._getCellFormatInternal1(colIdx2);
									$.ig.ExcelWorkbookSerializationProvider.prototype.copyFormatting(wbSource, wbTarget, copyFont, copyStyle, copySourceStyleFormatting, fontMap, styleMap, originalTargetStyles, formatPropertiesToCopyForWs, srcFormat2, targetFormat2, true);
								}
								var shouldCopyValue = copyValues;
								if (copyFormulas) {
									var srcFormula = srcRow.getCellFormula(srcColIdx2);
									if (srcFormula != null) {
										shouldCopyValue = false;
										if (srcFormula._type() == $.ig.FormulaType.prototype.arrayFormula) {
											var arrayFormula = srcFormula;
											var srcRegion = regionMap.getSourceRegion(srcRowIdx1, srcColIdx2);
											var srcFormulaRegion = arrayFormula.cellRange()._address();
											if (srcRowIdx1 != Math.max(srcRegion._firstRowIndex(), srcFormulaRegion._firstRowIndex())) {
												continue;
											}
											if (srcColIdx2 != Math.max(srcRegion._firstColumnIndex(), srcFormulaRegion._firstColumnIndex())) {
												continue;
											}
											var newArrayFormula = arrayFormula._clone();
											newArrayFormula._offsetReferences(wbTarget, srcRow, srcColIdx2, { __x: colIdx2 - srcFormulaRegion._firstColumnIndex(), __y: rowIdx - srcFormulaRegion._firstRowIndex(), $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName });
											var targetRegion = wsTarget1._getCachedRegion1(rowIdx, colIdx2, rowIdx + Math.min(srcRegion._lastRowIndex(), srcFormulaRegion._lastRowIndex()) - srcRowIdx1, colIdx2 + Math.min(srcRegion._lastColumnIndex(), srcFormulaRegion._lastColumnIndex()) - srcColIdx2);
											newArrayFormula._applyTo3(targetRegion);
										} else {
											var newFormula = srcFormula._clone();
											if (newFormula._isSharedFormula()) {
												newFormula._convertToNonShared(wbTarget);
											}
											newFormula._offsetReferences(wbTarget, srcRow, srcColIdx2, { __x: colIdx2 - srcColIdx2, __y: rowIdx - srcRowIdx1, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName });
											newFormula._applyTo4(targetRow, colIdx2);
										}
									}
								}
								if (shouldCopyValue) {
									var srcValue = srcRow._getCellValue1(srcColIdx2);
									if (skipBlanksInSource == false || srcValue != null) {
										if ($.ig.util.cast($.ig.excel.FormattedString.prototype.$type, srcValue) !== null) {
											srcValue = new $.ig.excel.FormattedString(wbTarget, $.ig.util.cast($.ig.StringElement.prototype.$type, (srcValue)._element().clone(wbTarget)));
										}
										targetRow.setCellValue(colIdx2, srcValue);
									}
								}
							}
						}
					}
				}
			}
			finally {
				wsTarget1._preventImplicitSetCellValueChanges(wasPreventingImplicitSetCellValueChanges);
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider::LoadFromWorkbook(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext, Infragistics.Documents.Excel.Workbook, System.Boolean)" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider', $.ig.WorkbookSerializationProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.BIFF8SerializationProvider" />*/

$.ig.util.defType('BIFF8SerializationProvider', 'ExcelWorkbookSerializationProvider', {
	init: function () {
		$.ig.ExcelWorkbookSerializationProvider.prototype.init1.call(this, 1, [ $.ig.BIFF8SerializationProvider.prototype.format ], null);
	},
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.BIFF8SerializationProvider::GetPreferredLoadFormat(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	getPreferredLoadFormat: function (context) {
		var format = $.ig.ExcelWorkbookSerializationProvider.prototype.getPreferredLoadFormat.call(this, context);
		if (format != null) {
			var link = context.getDataAsString("Link");
			if (!String.isNullOrEmpty(link)) {
				var parseFormat = $.ig.excel.WorkbookFormat.excel2007;
				var parts = link.split('\0');
				var firstRowIndex, lastRowIndex;
				var firstColumnIndex, lastColumnIndex;
				for (var i = 0; i < parts.length; i++) {
					var part = parts[i];
					if (String.isNullOrWhiteSpace(part)) {
						continue;
					}
					var partString = part.trim([]);
					if (partString.startsWith1("R", $.ig.StringComparison.prototype.currentCultureIgnoreCase) == false && partString.startsWith1("C", $.ig.StringComparison.prototype.currentCultureIgnoreCase) == false) {
						continue;
					}
					var $ret = $.ig.ExcelUtils.prototype.parseR1C1RegionAddress(partString, parseFormat, null, 0, firstRowIndex, firstColumnIndex, lastRowIndex, lastColumnIndex);
					firstRowIndex = $ret.p4;
					firstColumnIndex = $ret.p5;
					lastRowIndex = $ret.p6;
					lastColumnIndex = $ret.p7;
					if (firstRowIndex >= 0 && firstRowIndex < $.ig.excel.Workbook.prototype.maxExcelRowCount && lastRowIndex >= 0 && lastRowIndex < $.ig.excel.Workbook.prototype.maxExcelRowCount && firstColumnIndex >= 0 && firstColumnIndex < $.ig.excel.Workbook.prototype.maxExcelColumnCount && lastColumnIndex >= 0 && lastColumnIndex < $.ig.excel.Workbook.prototype.maxExcelColumnCount) {
						return format;
					}
					if (partString.startsWith1("R", $.ig.StringComparison.prototype.currentCultureIgnoreCase)) {
						var startRow, endRow;
						startRow = endRow = 0;
						var rowNumberIsOffset = false;
						var rowMatchLength;
						if ((function () { var $ret = $.ig.FormulaParser.prototype.parseRowAddressR1C11(partString, 0, parseFormat, startRow, rowNumberIsOffset, rowMatchLength); startRow = $ret.p3; rowNumberIsOffset = $ret.p4; rowMatchLength = $ret.p5; return $ret.ret; }()) == false || rowNumberIsOffset) {
							continue;
						}
						if (partString.length == rowMatchLength) {
							endRow = startRow;
						} else if (partString.length == rowMatchLength + 1 || partString.charAt(rowMatchLength) != $.ig.FormulaParser.prototype.rangeOperator) {
							continue;
						} else if ((function () { var $ret = $.ig.FormulaParser.prototype.parseRowAddressR1C11(partString, rowMatchLength + 1, parseFormat, endRow, rowNumberIsOffset, rowMatchLength); endRow = $ret.p3; rowNumberIsOffset = $ret.p4; rowMatchLength = $ret.p5; return $ret.ret; }()) == false || rowNumberIsOffset) {
							continue;
						}
						return format;
					}
					if (partString.startsWith1("C", $.ig.StringComparison.prototype.currentCultureIgnoreCase)) {
						var startColumn, endColumn;
						startColumn = endColumn = 0;
						var rowNumberIsOffset1 = false;
						var rowMatchLength1;
						if ((function () { var $ret = $.ig.FormulaParser.prototype.parseColumnAddressR1C11(partString, 0, parseFormat, startColumn, rowNumberIsOffset1, rowMatchLength1); startColumn = $ret.p3; rowNumberIsOffset1 = $ret.p4; rowMatchLength1 = $ret.p5; return $ret.ret; }()) == false || rowNumberIsOffset1) {
							continue;
						}
						if (partString.length == rowMatchLength1) {
							endColumn = startColumn;
						} else if (partString.length == rowMatchLength1 + 1 || partString.charAt(rowMatchLength1) != $.ig.FormulaParser.prototype.rangeOperator) {
							continue;
						} else if ((function () { var $ret = $.ig.FormulaParser.prototype.parseColumnAddressR1C11(partString, rowMatchLength1 + 1, parseFormat, endColumn, rowNumberIsOffset1, rowMatchLength1); endColumn = $ret.p3; rowNumberIsOffset1 = $ret.p4; rowMatchLength1 = $ret.p5; return $ret.ret; }()) == false || rowNumberIsOffset1) {
							continue;
						}
						return format;
					}
				}
				return null;
			}
		}
		return format;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.BIFF8SerializationProvider::GetPreferredLoadFormat(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.BIFF8SerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	load: function (context) {
		if (context.getDataPresent($.ig.BIFF8SerializationProvider.prototype.format)) {
			var data = $.ig.util.cast($.ig.Stream.prototype.$type, context.getData($.ig.BIFF8SerializationProvider.prototype.format));
			if (data != null) {
				var wbSource = $.ig.excel.Workbook.prototype._load(data, null);
				return this.loadFromWorkbook(context, wbSource, true);
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.BIFF8SerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.BIFF8SerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	save: function (context) {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.BIFF8SerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	,
	$type: new $.ig.Type('BIFF8SerializationProvider', $.ig.ExcelWorkbookSerializationProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.BIFF8SerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider" />*/

$.ig.util.defType('PlainTextWorkbookSerializationProvider', 'WorkbookSerializationProviderBase', {
	init: function (supportedFormats) {
		$.ig.WorkbookSerializationProviderBase.prototype.init.call(this, 0, supportedFormats);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	load: function (context) {
		var format = context.format();
		var actualData = context.getDataPresent(format) ? context.getData(format) : null;
		if (actualData == null) {
			return false;
		}
		var dataString = $.ig.util.cast(String, actualData);
		if (dataString != null) {
			{
				var stringReader = new $.ig.StringReader(dataString);
				try {
					return this.load1(context, stringReader, this.loadDelimiters(), $.ig.util.toNullable($.ig.String.prototype.$type, "\""));
				}
				finally {
					if (stringReader != null) {
						stringReader.dispose();
					}
				}
			}
		}
		var dataStream = $.ig.util.cast($.ig.Stream.prototype.$type, actualData);
		if (null == dataStream) {
			return false;
		}
		{
			var sr = new $.ig.StreamReader(dataStream);
			try {
				return this.load1(context, sr, this.loadDelimiters(), $.ig.util.toNullable($.ig.String.prototype.$type, "\""));
			}
			finally {
				if (sr != null) {
					sr.dispose();
				}
			}
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::LoadDelimiters()" />*/
	loadDelimiters: function () {
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::LoadDelimiters()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::GetWidth(System.Collections.Generic.List, System.Int32)" />*/
	getWidth: function (results, height) {
		var width = 0;
		for (var i = 0; i < height; i++) {
			width = Math.max(results.__inner[i].length, width);
		}
		return width;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::GetWidth(System.Collections.Generic.List, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext, System.IO.TextReader, , System.Nullable)" />*/
	load1: function (context, sr, delimiters, textQualifier) {
		var wbTarget = context.workbook();
		var sheetsTarget = $.ig.SpreadsheetUtilities.prototype.getSelectedWorksheets(wbTarget);
		var activeWsTarget = wbTarget.windowOptions().selectedWorksheet();
		var selectionTarget = activeWsTarget.displayOptions()._selection().getSelection(activeWsTarget.displayOptions()._activePane());
		var cellRangesTarget = $.ig.Enumerable.prototype.toArray$1($.ig.WorksheetRegionAddress.prototype.$type, selectionTarget.ranges());
		if (cellRangesTarget.length > 1) {
			context.onError($.ig.WorkbookSerializationLoadError.prototype.multipleTargetRanges);
			return false;
		}
		var targetRange = cellRangesTarget[0];
		var MaxItemLength = 32759;
		var results = $.ig.PlainTextReader.prototype.read(sr, false, textQualifier, delimiters, MaxItemLength);
		var heightToProcess = results.count();
		if (targetRange._height() > 1 && targetRange._height() < heightToProcess) {
			heightToProcess = targetRange._height();
		}
		var widthToProcess = $.ig.PlainTextWorkbookSerializationProvider.prototype.getWidth(results, heightToProcess);
		if (targetRange._width() > 1 && targetRange._width() < widthToProcess) {
			widthToProcess = targetRange._width();
		}
		if (targetRange._width() > widthToProcess || targetRange._height() > heightToProcess) {
		}
		var adjustWidth = targetRange._width() != widthToProcess;
		var adjustHeight = targetRange._height() != heightToProcess;
		if (adjustWidth || adjustHeight) {
			targetRange = new $.ig.WorksheetRegionAddress(1, targetRange._firstRowIndex(), adjustHeight ? (targetRange._firstRowIndex() + heightToProcess - 1) : targetRange._lastRowIndex(), targetRange._firstColumnIndex(), adjustWidth ? (targetRange._firstColumnIndex() + widthToProcess - 1) : targetRange._lastColumnIndex());
		}
		if (targetRange._lastRowIndex() >= wbTarget.maxRowCount() || targetRange._lastColumnIndex() >= wbTarget.maxColumnCount()) {
			targetRange = new $.ig.WorksheetRegionAddress(1, targetRange._firstRowIndex(), Math.min(targetRange._lastRowIndex(), wbTarget.maxRowCount() - 1), targetRange._firstColumnIndex(), Math.min(targetRange._lastColumnIndex(), wbTarget.maxColumnCount() - 1));
			heightToProcess = targetRange._lastRowIndex() - targetRange._firstRowIndex() + 1;
			widthToProcess = targetRange._lastColumnIndex() - targetRange._firstColumnIndex() + 1;
		}
		var originalRange = targetRange;
		var blockingValuesToClear = new $.ig.HashSet$1($.ig.IRegionBlockingValue.prototype.$type, 0);
		for (var i = 0; i < sheetsTarget.length; i++) {
			var wsTarget = sheetsTarget[i];
			var $ret = wsTarget._extendRegionForMergedCells(targetRange, null);
			targetRange = $ret.p0;
			if ($.ig.WorksheetRegionAddress.prototype._l_op_Inequality(targetRange, originalRange)) {
				context.onError($.ig.WorkbookSerializationLoadError.prototype.intersectsMergedCell);
				return false;
			}
			$.ig.ExcelUtils.prototype.verifyBlockedRegions([ new $.ig.excel.WorksheetRegion(wsTarget, targetRange._firstRowIndex(), targetRange._firstColumnIndex(), targetRange._lastRowIndex(), targetRange._lastColumnIndex(), false) ], blockingValuesToClear);
		}
		if (context.validateTarget(sheetsTarget, [ targetRange ], false) == false) {
			return false;
		}
		var en = blockingValuesToClear.getEnumerator();
		while (en.moveNext()) {
			var blockingValue = en.current();
			blockingValue.removeFromRegion();
		}
		if ($.ig.WorksheetRegionAddress.prototype._l_op_Inequality(cellRangesTarget[0], targetRange)) {
			cellRangesTarget[0] = targetRange;
			$.ig.WorkbookSerializationProviderBase.prototype.updateSheetSelection(sheetsTarget, cellRangesTarget);
		}
		var options = context.categoriesToLoad();
		var skipBlanks = context.skipBlanks();
		var copyValues = (options & $.ig.WorkbookSerializationLoadCategories.prototype.values) != 0;
		var copyFormulas = (options & $.ig.WorkbookSerializationLoadCategories.prototype.formulas) != 0;
		var copyNumberFormat = (options & $.ig.WorkbookSerializationLoadCategories.prototype.numberFormat) != 0;
		var copyMergedCells = (options & $.ig.WorkbookSerializationLoadCategories.prototype.mergedCells) != 0;
		var copyHyperlinks = (options & $.ig.WorkbookSerializationLoadCategories.prototype.hyperlinks) != 0;
		var editValue = new $.ig.PlainTextWorkbookSerializationProvider_ParseEditValue();
		var mergedCellsProcessed = new $.ig.HashSet$1($.ig.excel.WorksheetMergedCellsRegion.prototype.$type, 0);
		var igTargetRanges = [ $.ig.SpreadsheetUtilities.prototype.toSheetCellRange1(targetRange) ];
		for (var i1 = 0; i1 < sheetsTarget.length; i1++) {
			var wsTarget1 = sheetsTarget[i1];
			var startRowIdx = targetRange._firstRowIndex();
			var startColIdx = targetRange._firstColumnIndex();
			for (var i2 = 0; i2 < heightToProcess; i2++) {
				var line = results.__inner[i2];
				var end = skipBlanks ? line.length : widthToProcess;
				var targetRow = wsTarget1.rows().item(startRowIdx + i2);
				for (var j = 0; j < end; j++) {
					var value = j >= line.length ? null : line[j];
					var colIdx = startColIdx + j;
					var actualValue;
					var preferredFormatIndex = 0;
					if (String.isNullOrEmpty(value)) {
						actualValue = null;
					} else {
						editValue.text(value);
						editValue.targetCellFormat(wsTarget1._getCellFormatElementReadOnly(targetRow, colIdx));
						actualValue = (function () { var $ret = $.ig.SpreadsheetEditHelper.prototype.getNewValue(context, editValue, false, true, preferredFormatIndex); preferredFormatIndex = $ret.p4; return $ret.ret; }());
						$.ig.Debug.prototype.assert1($.ig.util.cast($.ig.SpreadsheetUserPromptInfo.prototype.$type, actualValue) !== null == false, "Not expecting an invalid value here");
						if (actualValue == editValue || (copyFormulas == false && $.ig.util.cast($.ig.excel.Formula.prototype.$type, actualValue) !== null)) {
							actualValue = value;
						}
					}
					var targetMergedCell = targetRow.getCellAssociatedMergedCellsRegion(colIdx);
					if (targetMergedCell != null) {
						if (copyMergedCells) {
							wsTarget1.mergedCellsRegions().remove(targetMergedCell);
						} else if (mergedCellsProcessed.add(targetMergedCell) == false) {
							continue;
						}
					}
					if (actualValue == null) {
						if (skipBlanks == false) {
							targetRow.setCellValue(colIdx, actualValue);
						}
					} else if ($.ig.util.cast($.ig.excel.Formula.prototype.$type, actualValue) !== null) {
						(actualValue)._applyTo4(targetRow, colIdx);
					} else if (copyNumberFormat) {
						$.ig.SpreadsheetEditHelper.prototype.updateCellValue(targetRow, colIdx, editValue.editCellFormat(), actualValue, preferredFormatIndex);
					} else {
						targetRow.setCellValue(colIdx, actualValue);
					}
				}
			}
			if (copyHyperlinks) {
				var hasHyperlinks;
				var $ret1 = $.ig.SpreadsheetPaneManager.prototype._removeHyperlinks2(false, false, hasHyperlinks, wsTarget1, igTargetRanges);
				hasHyperlinks = $ret1.p2;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext, System.IO.TextReader, , System.Nullable)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext, System.IO.TextWriter, System.Char, System.Nullable)" />*/
	save1: function (context, textWriter, delimiter, textQualifier) {
		var writer = new $.ig.PlainTextWriter(textWriter, textQualifier, delimiter);
		var src = context.workbook().windowOptions().selectedWorksheet();
		var rows = src.rows();
		var usedRegion = src._getUsedRange(0, context.workbook().maxRowCount() - 1, 0, (context.workbook().maxColumnCount() - 1), false);
		var regionMap = context._cellRegionMap;
		regionMap = regionMap.toUnion();
		var maxRow = Math.max(Math.min($.ig.Enumerable.prototype.last$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), regionMap.sourceRows()).__end, usedRegion._lastRowIndex()), regionMap.sourceRows()[0].__start);
		var maxColumn = Math.max(Math.min($.ig.Enumerable.prototype.last$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), regionMap.sourceColumns()).__end, usedRegion._lastColumnIndex()), regionMap.sourceColumns()[0].__start);
		var columnCount = (maxColumn - regionMap.sourceColumns()[0].__start) + 1;
		var $t = regionMap.sourceRows();
		for (var i = 0; i < $t.length; i++) {
			var row = $t[i];
			var next = row.__start;
			var en = rows._getItemsInRange(row.__start, Math.max(row.__end, maxRow)).getEnumerator();
			while (en.moveNext()) {
				var wsRow = en.current();
				var rowIndex = wsRow.index();
				for (; next < rowIndex; next++) {
					writer.writeEmptyValues(columnCount - 1);
					writer.endLine();
				}
				var $t1 = regionMap.sourceColumns();
				for (var i1 = 0; i1 < $t1.length; i1++) {
					var col = $t1[i1];
					for (var c = col.__start, end = Math.min(col.__end, maxColumn); c <= end; c++) {
						var text = wsRow._getCellText1(c, $.ig.excel.TextFormatMode.ignoreCellWidth);
						writer.writeValue(text);
					}
				}
				writer.endLine();
				next = rowIndex + 1;
			}
			for (; next < maxRow; next++) {
				writer.writeEmptyValues(columnCount - 1);
				writer.endLine();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext, System.IO.TextWriter, System.Char, System.Nullable)" />*/
	,
	$type: new $.ig.Type('PlainTextWorkbookSerializationProvider', $.ig.WorkbookSerializationProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.CSVWorkbookSerializationProvider" />*/

$.ig.util.defType('CSVWorkbookSerializationProvider', 'PlainTextWorkbookSerializationProvider', {
	init: function () {
		$.ig.PlainTextWorkbookSerializationProvider.prototype.init.call(this, [ $.ig.DataFormats.prototype.commaSeparatedValue ]);
	},
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.CSVWorkbookSerializationProvider::LoadDelimiters()" />*/
	loadDelimiters: function () {
		return [ ',' ];
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.CSVWorkbookSerializationProvider::LoadDelimiters()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.CSVWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	save: function (context) {
		var ms = new $.ig.MemoryStream(0);
		var sw = new $.ig.StreamWriter(1, ms, $.ig.Encoding.prototype.uTF8());
		this.save1(context, sw, ',', $.ig.util.toNullable($.ig.String.prototype.$type, "\""));
		sw.flush();
		ms.position(0);
		context.addData($.ig.DataFormats.prototype.commaSeparatedValue, ms);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.CSVWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	,
	$type: new $.ig.Type('CSVWorkbookSerializationProvider', $.ig.PlainTextWorkbookSerializationProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.CSVWorkbookSerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator', 'Object', {
	___sourceRow: null,
	___sourceRegionMap: null,
	___repeatCount: 0,
	___indexOfRepeat: 0,
	___sourceColumnRangeIndex: 0,
	___cellEnumerator: null,
	___currentIndex: 0,
	___sourceOffset: 0,
	___targetStartOffset: 0,
	init: function (sourceRow, sourceRegionMap, targetStartOffset, repeatCount) {
		$.ig.Object.prototype.init.call(this);
		this.___sourceRow = sourceRow;
		this.___sourceRegionMap = sourceRegionMap;
		this.___repeatCount = repeatCount;
		this.___targetStartOffset = targetStartOffset;
		this.reset();
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::Current()" />*/
	current: function () {
		return this.___currentIndex;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::Current()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::Dispose()" />*/
	dispose: function () {
		this.___cellEnumerator = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::MoveNext()" />*/
	moveNext: function () {
		if (this.___indexOfRepeat < this.___repeatCount) {
			if (this.___cellEnumerator.moveNext()) {
				this.___currentIndex = this.___targetStartOffset + (this.___indexOfRepeat * this.___sourceRegionMap.sourceWidth()) + this.___sourceOffset + (this.___cellEnumerator.current().columnIndex() - this.___sourceRegionMap.sourceColumns()[this.___sourceColumnRangeIndex].__start);
				return true;
			}
			this.___sourceOffset += this.___sourceRegionMap.sourceColumns()[this.___sourceColumnRangeIndex].__end - this.___sourceRegionMap.sourceColumns()[this.___sourceColumnRangeIndex].__start + 1;
			this.___sourceColumnRangeIndex++;
			if (this.___sourceColumnRangeIndex >= this.___sourceRegionMap.sourceColumns().length) {
				this.___sourceOffset = 0;
				this.___sourceColumnRangeIndex = 0;
				this.___indexOfRepeat++;
			}
			this._initCellEnumerator();
			return this.moveNext();
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::InitCellEnumerator()" />*/
	_initCellEnumerator: function () {
		this.___cellEnumerator = this.___sourceRow._getCellsWithData(this.___sourceRegionMap.sourceColumns()[this.___sourceColumnRangeIndex].__start, this.___sourceRegionMap.sourceColumns()[this.___sourceColumnRangeIndex].__end).getEnumerator();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::InitCellEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::Reset()" />*/
	reset: function () {
		this.___indexOfRepeat = 0;
		this.___sourceColumnRangeIndex = 0;
		this._initCellEnumerator();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator::Reset()" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize($.ig.Number.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator', 'Object', {
	___blocks: null,
	___repeatCount: 0,
	___sourceWidth: 0,
	___enumerator: null,
	___indexOfRepeat: 0,
	init: function (worksheet, repeatCount) {
		$.ig.Object.prototype.init.call(this);
		$.ig.Debug.prototype.assert(repeatCount > 0);
		this.___blocks = worksheet._columnBlocks();
		this.___repeatCount = repeatCount;
		this.___sourceWidth = worksheet.columns().maxCount();
		this.reset();
	},
	/*<BeginProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::Current()" />*/
	current: function () {
		var offset = this.___indexOfRepeat * this.___sourceWidth;
		return new $.ig.Range$1($.ig.Number.prototype.$type, 1, this.___enumerator.current().firstColumnIndex() + offset, this.___enumerator.current().lastColumnIndex() + offset);
	}
	/*<EndProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::Current()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::MoveNext()" />*/
	moveNext: function () {
		if (this.___indexOfRepeat < this.___repeatCount) {
			if (this.___enumerator.moveNext()) {
				return true;
			}
			this.___indexOfRepeat++;
			if (this.___indexOfRepeat < this.___repeatCount) {
				this.___enumerator = $.ig.Enumerable.prototype.where$1($.ig.WorksheetColumnBlock.prototype.$type, this.___blocks, function (b) { return !b.cellFormat()._equalsInternal(b.cellFormat().workbook()._cellFormats()._defaultElement()); }).getEnumerator();
				return this.moveNext();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::Reset()" />*/
	reset: function () {
		this.___indexOfRepeat = 0;
		this.___enumerator = $.ig.Enumerable.prototype.where$1($.ig.WorksheetColumnBlock.prototype.$type, this.___blocks, function (b) { return !b.cellFormat()._equalsInternal(b.cellFormat().workbook()._cellFormats()._defaultElement()); }).getEnumerator();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator::Reset()" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type))])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator', 'Object', {
	___blocks: null,
	___repeatCount: 0,
	___sourceWidth: 0,
	___enumerator: null,
	___indexOfRepeat: 0,
	init: function (blocks, sourceWidth, repeatCount) {
		$.ig.Object.prototype.init.call(this);
		$.ig.Debug.prototype.assert(repeatCount > 0);
		this.___blocks = blocks;
		this.___repeatCount = repeatCount;
		this.___sourceWidth = sourceWidth;
		this.reset();
	},
	/*<BeginProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::Current()" />*/
	current: function () {
		var offset = this.___indexOfRepeat * this.___sourceWidth;
		return new $.ig.Range$1($.ig.Number.prototype.$type, 1, this.___enumerator.current().__start + offset, this.___enumerator.current().__end + offset);
	}
	/*<EndProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::Current()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::MoveNext()" />*/
	moveNext: function () {
		if (this.___indexOfRepeat < this.___repeatCount) {
			if (this.___enumerator.moveNext()) {
				return true;
			}
			this.___indexOfRepeat++;
			if (this.___indexOfRepeat < this.___repeatCount) {
				this.___enumerator = this.___blocks.getEnumerator();
				return this.moveNext();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::Reset()" />*/
	reset: function () {
		this.___indexOfRepeat = 0;
		this.___enumerator = this.___blocks.getEnumerator();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator::Reset()" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator', $.ig.Object.prototype.$type, [$.ig.IEnumerator$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type))])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider_TargetColumnIndexHelper', 'Object', {
	__targetRange: null,
	__sourceRegionMap: null,
	__targetRangeBlock: null,
	__considerColumnBlockFormatting: false,
	__considerSourceTableFormatting: false,
	init: function (targetRange, sourceRegionMap, considerColumnBlockFormatting, considerSourceTableFormatting) {
		this.__targetRange = new $.ig.spreadsheet.SpreadsheetCellRange();
		$.ig.Object.prototype.init.call(this);
		this.__targetRange = targetRange;
		this.__sourceRegionMap = sourceRegionMap;
		this.__considerColumnBlockFormatting = considerColumnBlockFormatting;
		this.__considerSourceTableFormatting = considerSourceTableFormatting;
		this.__targetRangeBlock = [ new $.ig.Range$1($.ig.Number.prototype.$type, 1, targetRange.firstColumn(), targetRange.lastColumn()) ];
	},
	/*<BeginMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::CreateSourceTableBlocks(Infragistics.Documents.Excel.WorksheetRow)" />*/
	createSourceTableBlocks: function (sourceRow) {
		var tables = sourceRow.worksheet().tables();
		var blocks = new $.ig.List$1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type), 0);
		var rowIdx = sourceRow.index();
		for (var i = 0; i < tables.count(); i++) {
			var tableAddress = tables._item(i)._wholeTableAddress();
			if (tableAddress._firstRowIndex() <= rowIdx && tableAddress._lastRowIndex() >= rowIdx) {
				blocks.add(new $.ig.Range$1($.ig.Number.prototype.$type, 1, tableAddress._firstColumnIndex(), tableAddress._lastColumnIndex()));
			}
		}
		if (blocks.count() > 1) {
			blocks.sort1($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type).getStaticFields()._startComparer);
		}
		return blocks;
	}
	/*<EndMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::CreateSourceTableBlocks(Infragistics.Documents.Excel.WorksheetRow)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::GetAllColumnsInRange()" />*/
	getAllColumnsInRange: function () {
		return this.__targetRangeBlock;
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::GetAllColumnsInRange()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::GetTargetColumnsForSelectedRow(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetRow)" />*/
	getTargetColumnsForSelectedRow: function (sourceRow, targetRow) {
		var d__ = new $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass(-2);
		d__.___4__this = this;
		d__.___3__sourceRow = sourceRow;
		d__.___3__targetRow = targetRow;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::GetTargetColumnsForSelectedRow(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetRow)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::GetTargetColumnsForSelectedRowImpl(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetRow)" />*/
	getTargetColumnsForSelectedRowImpl: function (sourceRow, targetRow) {
		var d__ = new $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass(-2);
		d__.___4__this = this;
		d__.___3__sourceRow = sourceRow;
		d__.___3__targetRow = targetRow;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::GetTargetColumnsForSelectedRowImpl(Infragistics.Documents.Excel.WorksheetRow, Infragistics.Documents.Excel.WorksheetRow)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::ProcessColumnBlockEnumerator(System.Int32, System.Collections.Generic.IEnumerator, System.Int32)" />*/
	processColumnBlockEnumerator: function (current, columnsEnumerator, next) {
		while (columnsEnumerator != null) {
			if (columnsEnumerator.current()._containsInclusive((current + 1))) {
				next = current + 1;
				break;
			}
			if (columnsEnumerator.current().__start > next) {
				break;
			}
			if (columnsEnumerator.current()._containsInclusive(next)) {
				break;
			}
			if (columnsEnumerator.current().__start < next && columnsEnumerator.current().__end > current) {
				next = Math.max(current + 1, columnsEnumerator.current().__start);
				break;
			}
			if (!columnsEnumerator.moveNext()) {
				columnsEnumerator = null;
			}
		}
		return {
			p1: columnsEnumerator,
			p2: next
		};
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper::ProcessColumnBlockEnumerator(System.Int32, System.Collections.Generic.IEnumerator, System.Int32)" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider_TargetColumnIndexHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.HTMLWorkbookSerializationProvider" />*/

$.ig.util.defType('HTMLWorkbookSerializationProvider', 'WorkbookSerializationProviderBase', {
	init: function () {
		$.ig.WorkbookSerializationProviderBase.prototype.init.call(this, 0, [ $.ig.DataFormats.prototype.html ]);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.HTMLWorkbookSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	load: function (context) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.HTMLWorkbookSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.HTMLWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	save: function (context) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.HTMLWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	,
	$type: new $.ig.Type('HTMLWorkbookSerializationProvider', $.ig.WorkbookSerializationProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.HTMLWorkbookSerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider" />*/

$.ig.util.defType('IGExcelSerializationProvider', 'ExcelWorkbookSerializationProvider', {
	init: function () {
		$.ig.ExcelWorkbookSerializationProvider.prototype.init.call(this, 0, [ $.ig.IGExcelSerializationProvider.prototype.format ]);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	load: function (context) {
		if (context.getDataPresent($.ig.IGExcelSerializationProvider.prototype.format)) {
			var data = $.ig.util.cast($.ig.Stream.prototype.$type, context.getData($.ig.IGExcelSerializationProvider.prototype.format));
			if (data != null) {
				var wbSource = $.ig.excel.Workbook.prototype._load(data, null);
				return this.loadFromWorkbook(context, wbSource, false);
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider::Load(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	save: function (context) {
		var ms = new $.ig.MemoryStream(0);
		var saveOptions = new $.ig.excel.WorkbookSaveOptions();
		saveOptions._filter(new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter(context));
		context.workbook()._save2(ms, saveOptions);
		ms.position(0);
		context.addData($.ig.IGExcelSerializationProvider.prototype.format, ms);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	,
	$type: new $.ig.Type('IGExcelSerializationProvider', $.ig.ExcelWorkbookSerializationProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter" />*/

$.ig.util.defType('IGExcelSerializationProvider_SelectionWorkbookSaveFilter', 'WorkbookSaveFilter', {
	__context: null,
	init: function (saveContext) {
		$.ig.WorkbookSaveFilter.prototype.init.call(this);
		this.__context = saveContext;
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetAllocatedRowCount(Infragistics.Documents.Excel.Worksheet)" />*/
	getAllocatedRowCount: function (worksheet) {
		this.assertWorkbook1(worksheet);
		if (this.hasColumnSelection(worksheet)) {
			return $.ig.WorkbookSaveFilter.prototype.$default.getAllocatedRowCount(worksheet);
		}
		var count = 0;
		var $t = this.__context._cellRegionMap.sourceRows();
		for (var i = 0; i < $t.length; i++) {
			var row = $t[i];
			count += $.ig.Enumerable.prototype.count$1($.ig.excel.WorksheetRow.prototype.$type, worksheet.rows()._getItemsInRange(row.__start, row.__end));
		}
		return count;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetAllocatedRowCount(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetMaxRowCount(Infragistics.Documents.Excel.Worksheet)" />*/
	getMaxRowCount: function (worksheet) {
		this.assertWorkbook1(worksheet);
		if (this.hasColumnSelection(worksheet)) {
			return $.ig.WorkbookSaveFilter.prototype.$default.getMaxRowCount(worksheet);
		}
		return this.__context._cellRegionMap.sourceHeight();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetMaxRowCount(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetMergedCells(Infragistics.Documents.Excel.Worksheet)" />*/
	getMergedCells: function (worksheet) {
		var d__ = new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass(-2);
		d__.___4__this = this;
		d__.___3__worksheet = worksheet;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetMergedCells(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetRows(Infragistics.Documents.Excel.Worksheet, System.Boolean)" />*/
	getRows: function (worksheet, forceRowAllocation) {
		this.assertWorkbook1(worksheet);
		if (this.hasColumnSelection(worksheet)) {
			return $.ig.WorkbookSaveFilter.prototype.$default.getRows(worksheet, forceRowAllocation);
		}
		if (forceRowAllocation) {
			return this.getAllRows(worksheet);
		}
		return this.getAllocatedRows(worksheet);
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetRows(Infragistics.Documents.Excel.Worksheet, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetWorksheets(Infragistics.Documents.Excel.Workbook)" />*/
	getWorksheets: function (workbook) {
		this.assertWorkbook(workbook);
		return this.__context.worksheets();
	}
	/*<EndMethod Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetWorksheets(Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::AssertWorkbook(Infragistics.Documents.Excel.Workbook)" />*/
	assertWorkbook: function (wb) {
		$.ig.Debug.prototype.assert(wb == this.__context.workbook());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::AssertWorkbook(Infragistics.Documents.Excel.Workbook)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::AssertWorkbook(Infragistics.Documents.Excel.Worksheet)" />*/
	assertWorkbook1: function (ws) {
		this.assertWorkbook(ws.workbook());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::AssertWorkbook(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetAllocatedRows(Infragistics.Documents.Excel.Worksheet)" />*/
	getAllocatedRows: function (ws) {
		var d__ = new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass(-2);
		d__.___4__this = this;
		d__.___3__ws = ws;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetAllocatedRows(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetAllRows(Infragistics.Documents.Excel.Worksheet)" />*/
	getAllRows: function (ws) {
		var d__ = new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass(-2);
		d__.___4__this = this;
		d__.___3__ws = ws;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetAllRows(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetStartingRow(System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRowCollection)" />*/
	getStartingRow: function (rowIndex, lastProcessedRow, rows) {
		var startingRowIndex = rowIndex;
		if (startingRowIndex > lastProcessedRow + 1) {
			var startingRow = rows._getIfCreated(startingRowIndex);
			if (startingRow != null) {
				var en = startingRow._getCellsWithData(0, 0x7FFFFFFF).getEnumerator();
				while (en.moveNext()) {
					var cellWithData = en.current();
					if (cellWithData.hasValue() && cellWithData.isFormula()) {
						var formula = startingRow._getCellFormulaInternal(cellWithData.columnIndex());
						if (formula._type() == $.ig.FormulaType.prototype.arrayFormula) {
							var arrayFormula = formula;
							startingRowIndex = Math.min(startingRowIndex, arrayFormula.cellRange().firstRow());
						}
					}
				}
			}
			if (startingRowIndex < lastProcessedRow + 1) {
				startingRowIndex = lastProcessedRow + 1;
			}
		}
		return startingRowIndex;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::GetStartingRow(System.Int32, System.Int32, Infragistics.Documents.Excel.WorksheetRowCollection)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::HasColumnSelection(Infragistics.Documents.Excel.Worksheet)" />*/
	hasColumnSelection: function (ws) {
		return this.__context.hasSelectedColumns();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter::HasColumnSelection(Infragistics.Documents.Excel.Worksheet)" />*/
	,
	$type: new $.ig.Type('IGExcelSerializationProvider_SelectionWorkbookSaveFilter', $.ig.WorkbookSaveFilter.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PlainTextWriter" />*/

$.ig.util.defType('PlainTextWriter', 'Object', {
	__hasTextQualifier: false,
	__textQualifierValue: '\0',
	__textQualifierString: null,
	__textQualifierReplacementString: null,
	__delimiter: '\0',
	__writer: null,
	__charactersForTextDelimiter: null,
	__itemsInLine: 0,
	init: function (writer, textQualifier, delimiter) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(writer);
		this.__hasTextQualifier = $.ig.util.nullableNotEquals(textQualifier, null);
		this.__textQualifierValue = this.__hasTextQualifier ? textQualifier.value() : '\0';
		this.__delimiter = delimiter;
		this.__writer = writer;
		this.__charactersForTextDelimiter = [ '\r', '\n', delimiter ];
		this.__textQualifierString = $.ig.util.createString2(this.__textQualifierValue, 1);
		this.__textQualifierReplacementString = $.ig.util.createString2(this.__textQualifierValue, 2);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWriter::WriteEmptyValues(System.Int32)" />*/
	writeEmptyValues: function (count) {
		for (var i = 0; i < count; i++) {
			this.__writer.write3(this.__delimiter);
		}
		this.__itemsInLine += count + 1;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWriter::WriteEmptyValues(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWriter::WriteValue(System.String)" />*/
	writeValue: function (value) {
		if (++this.__itemsInLine > 1) {
			this.__writer.write3(this.__delimiter);
		}
		var needTextQualifier;
		var qualifierIndex = -1;
		if (needTextQualifier = this.__hasTextQualifier && String.isNullOrEmpty(value) == false && (qualifierIndex = value.indexOfAny(this.__charactersForTextDelimiter)) >= 0) {
			this.__writer.write3(this.__textQualifierValue);
		}
		if (needTextQualifier && qualifierIndex >= 0 && (value.charAt(qualifierIndex) == this.__textQualifierValue || (qualifierIndex = value.indexOf(this.__textQualifierValue, qualifierIndex)) >= 0)) {
			var startIdx = 0;
			do {
				for (var i = startIdx; i <= qualifierIndex; i++) {
					this.__writer.write3(value.charAt(i));
				}
				this.__writer.write3(this.__textQualifierValue);
				qualifierIndex++;
				startIdx = qualifierIndex;
			} while ((qualifierIndex = value.indexOf(this.__textQualifierValue, qualifierIndex)) >= 0);
			for (var i1 = startIdx; i1 < value.length; i1++) {
				this.__writer.write3(value.charAt(i1));
			}
		} else {
			this.__writer.write10(value);
		}
		if (needTextQualifier) {
			this.__writer.write3(this.__textQualifierValue);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWriter::WriteValue(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWriter::EndLine()" />*/
	endLine: function () {
		if (this.__itemsInLine > 0) {
			this.__writer.write10($.ig.Environment.prototype.newLine());
			this.__itemsInLine = 0;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextWriter::EndLine()" />*/
	,
	$type: new $.ig.Type('PlainTextWriter', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PlainTextWriter" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PlainTextReader" />*/

$.ig.util.defType('PlainTextReader', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.PlainTextReader::Read(System.IO.TextReader, System.Boolean, System.Nullable, , System.Int32)" />*/
	read: function (reader, treatConsecutiveDelimitersAsOne, textQualifier, delimiters, maxItemLength) {
		$.ig.CoreUtilities.prototype.validateNotNull(reader);
		$.ig.CoreUtilities.prototype.validateNotNull(delimiters);
		$.ig.Debug.prototype.assert1($.ig.util.arrayIndexOf1($.ig.String.prototype.$type, delimiters, '\r') < 0, "We shouldn't have crlf in the delimiters");
		$.ig.Debug.prototype.assert1($.ig.util.arrayIndexOf1($.ig.String.prototype.$type, delimiters, '\n') < 0, "We shouldn't have crlf in the delimiters");
		$.ig.Debug.prototype.assert1($.ig.util.nullableEquals(textQualifier, null) || $.ig.util.arrayIndexOf1($.ig.String.prototype.$type, delimiters, textQualifier.value()) < 0, "We shouldn't have the text qualifier as a delimiter as the delimiter will get precedence.");
		var charValue = 0;
		var hasTextQualifier = $.ig.util.nullableNotEquals(textQualifier, null) && $.ig.util.arrayIndexOf1($.ig.String.prototype.$type, delimiters, textQualifier.value()) < 0;
		var textQualifierValue = hasTextQualifier ? textQualifier.value() : '\0';
		var parseHelper = new $.ig.PlainTextReader_ParseHelper(textQualifierValue, treatConsecutiveDelimitersAsOne);
		while ((charValue = reader.read()) >= 0) {
			var ch = String.fromCharCode(charValue);
			var isTextQualifier = hasTextQualifier && ch == textQualifierValue;
			if (isTextQualifier) {
				parseHelper._textQualifierCount++;
			} else {
				if (parseHelper._textQualifierCount > 0) {
					parseHelper.processTextQualifiers();
				}
				if (parseHelper.currentState() == $.ig.PlainTextReader_ParseState.prototype.textWithQualifier) {
					parseHelper.append(ch);
				} else {
					var isCr = ch == '\r';
					if (isCr || ch == '\n') {
						if (isCr && reader.peek() == '\n'.charCodeAt(0)) {
							reader.read();
						}
						parseHelper.endItem(false);
						parseHelper.endLine();
					} else if ($.ig.util.arrayIndexOf1($.ig.String.prototype.$type, delimiters, ch) >= 0) {
						parseHelper.endItem(false);
					} else {
						parseHelper.append(ch);
					}
				}
			}
			if (maxItemLength > 0 && parseHelper.currentItemLength() == maxItemLength) {
				parseHelper.endItem(false);
				parseHelper.endLine();
			}
		}
		parseHelper.endFile();
		return parseHelper._rows;
	}
	/*<EndMethod Name="System.Collections.Generic.List Infragistics.Controls.Grids.Core.PlainTextReader::Read(System.IO.TextReader, System.Boolean, System.Nullable, , System.Int32)" />*/
	,
	$type: new $.ig.Type('PlainTextReader', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PlainTextReader" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper" />*/

$.ig.util.defType('PlainTextReader_ParseHelper', 'Object', {
	_rows: null,
	_textQualifierCount: 0,
	_textQualifierValue: '\0',
	__currentLine: null,
	__sb: null,
	__treatConsecutiveDelimitersAsOne: false,
	__endItemCount: 0,
	__currentState: 0,
	init: function (textQualifierValue, treatConsecutiveDelimitersAsOne) {
		$.ig.Object.prototype.init.call(this);
		this._textQualifierValue = textQualifierValue;
		this.__treatConsecutiveDelimitersAsOne = treatConsecutiveDelimitersAsOne;
		this.__sb = new $.ig.StringBuilder(0);
		this.__currentLine = new $.ig.List$1(String, 0);
		this._rows = new $.ig.List$1(Array, 0);
		this.__currentState = $.ig.PlainTextReader_ParseState.prototype.notStarted;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseState Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::CurrentState()" />*/
	currentState: function () {
		return this.__currentState;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseState Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::CurrentState()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::CurrentItemLength()" />*/
	currentItemLength: function () {
		return this.__sb.length();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::CurrentItemLength()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::Append(System.Char)" />*/
	append: function (ch) {
		if (this.__currentState == $.ig.PlainTextReader_ParseState.prototype.notStarted) {
			this.__currentState = $.ig.PlainTextReader_ParseState.prototype.textWithoutQualifier;
		}
		this.__endItemCount = 0;
		this.__sb.append1(ch);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::Append(System.Char)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::EndItem(System.Boolean)" />*/
	endItem: function (isEndOfFile) {
		if (this.__currentState != $.ig.PlainTextReader_ParseState.prototype.notStarted || (isEndOfFile == false && this.__treatConsecutiveDelimitersAsOne == false)) {
			if (this.__sb.length() == 0) {
				this.__currentLine.add(String.empty());
			} else {
				this.__currentLine.add(this.__sb.toString());
			}
		}
		if (isEndOfFile == false && this.__sb.length() == 0) {
			this.__endItemCount++;
		}
		this.__sb.clear();
		this.__currentState = $.ig.PlainTextReader_ParseState.prototype.notStarted;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::EndItem(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::EndLine()" />*/
	endLine: function () {
		if (this.__currentLine.count() > 0) {
			this._rows.add(this.__currentLine.toArray());
			this.__currentLine.clear();
		} else if (this.__currentState != $.ig.PlainTextReader_ParseState.prototype.notStarted || this.__endItemCount > 0) {
			this._rows.add($.ig.PlainTextReader_ParseHelper.prototype._emptyLine);
		}
		this.__endItemCount = 0;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::EndLine()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::EndFile()" />*/
	endFile: function () {
		this.processTextQualifiers();
		this.endItem(true);
		this.endLine();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::EndFile()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::ProcessTextQualifiers()" />*/
	processTextQualifiers: function () {
		if (this._textQualifierCount > 0) {
			switch (this.__currentState) {
				case $.ig.PlainTextReader_ParseState.prototype.notStarted:
					if (this._textQualifierCount % 2 == 1) {
						this.__currentState = $.ig.PlainTextReader_ParseState.prototype.textWithQualifier;
					} else {
						this._textQualifierCount -= 2;
						this.__currentState = $.ig.PlainTextReader_ParseState.prototype.textWithoutQualifier;
					}
					if (this._textQualifierCount > 1) {
						this.__sb.append2(this._textQualifierValue, $.ig.intDivide(this._textQualifierCount, 2));
					}
					break;
				case $.ig.PlainTextReader_ParseState.prototype.textWithQualifier:
					if (this._textQualifierCount % 2 == 1) {
						this.__currentState = $.ig.PlainTextReader_ParseState.prototype.textWithoutQualifier;
					}
					if (this._textQualifierCount > 1) {
						this.__sb.append2(this._textQualifierValue, $.ig.intDivide(this._textQualifierCount, 2));
					}
					break;
				case $.ig.PlainTextReader_ParseState.prototype.textWithoutQualifier:
					this.__sb.append2(this._textQualifierValue, this._textQualifierCount);
					break;
			}
			this._textQualifierCount = 0;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper::ProcessTextQualifiers()" />*/
	,
	$type: new $.ig.Type('PlainTextReader_ParseHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue" />*/

$.ig.util.defType('PlainTextWorkbookSerializationProvider_ParseEditValue', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_targetCellFormat: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::TargetCellFormat()" />*/
	targetCellFormat: function (value) {
		if (arguments.length === 1) {
			this._targetCellFormat = value;
			return value;
		} else {
			return this._targetCellFormat;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::TargetCellFormat()" />*/
	,
	_text: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::Text()" />*/
	text: function (value) {
		if (arguments.length === 1) {
			this._text = value;
			return value;
		} else {
			return this._text;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::Text()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::CreateDocument()" />*/
	createDocument: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.IGFormattedTextDocument Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::CreateDocument()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::UnformattedText()" />*/
	unformattedText: function () {
		return this.text();
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::UnformattedText()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::EditCellFormat()" />*/
	editCellFormat: function () {
		return this.targetCellFormat();
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetCellFormatData Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue::EditCellFormat()" />*/
	,
	$type: new $.ig.Type('PlainTextWorkbookSerializationProvider_ParseEditValue', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetEditorValue.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.PlainTextWorkbookSerializationProvider_ParseEditValue" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.TSVWorkbookSerializationProvider" />*/

$.ig.util.defType('TSVWorkbookSerializationProvider', 'PlainTextWorkbookSerializationProvider', {
	init: function () {
		$.ig.PlainTextWorkbookSerializationProvider.prototype.init.call(this, [ $.ig.DataFormats.prototype.unicodeText, $.ig.DataFormats.prototype.text, $.ig.DataFormats.prototype.stringFormat ]);
	},
	/*<BeginProperty Name=" Infragistics.Controls.Grids.Core.TSVWorkbookSerializationProvider::LoadDelimiters()" />*/
	loadDelimiters: function () {
		return [ '\t' ];
	}
	/*<EndProperty Name=" Infragistics.Controls.Grids.Core.TSVWorkbookSerializationProvider::LoadDelimiters()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.TSVWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	save: function (context) {
		var sb = new $.ig.StringBuilder(0);
		{
			var sw = new $.ig.StringWriter(2, sb);
			try {
				this.save1(context, sw, '\t', $.ig.util.toNullable($.ig.String.prototype.$type, "\""));
			}
			finally {
				if (sw != null) {
					sw.dispose();
				}
			}
		}
		var strValue = sb.toString();
		var en = this.supportedSaveFormats().getEnumerator();
		while (en.moveNext()) {
			var format = en.current();
			context.addData(format, strValue);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.TSVWorkbookSerializationProvider::Save(Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext)" />*/
	,
	$type: new $.ig.Type('TSVWorkbookSerializationProvider', $.ig.PlainTextWorkbookSerializationProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.TSVWorkbookSerializationProvider" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext" />*/

$.ig.util.defType('WorkbookDataObjectLoadContext', 'Object', {
	__dataObject: null,
	__loadOptions: null,
	init: function (workbook, dataObject, loadOptions) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(workbook, "workbook");
		this.workbook(workbook);
		this.dataObject(dataObject);
		this.__loadOptions = loadOptions;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadCategories Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::CategoriesToLoad()" />*/
	categoriesToLoad: function () {
		return this.__loadOptions != null ? this.__loadOptions.categoriesToLoad() : $.ig.WorkbookSerializationLoadCategories.prototype.allGroup;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadCategories Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::CategoriesToLoad()" />*/
	,
	/*<BeginProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::DataObject()" />*/
	dataObject: function (value) {
		if (arguments.length === 1) {
			if (this.__dataObject != value) {
				if (value == null) {
					throw new $.ig.ArgumentNullException(1);
				}
				this.__dataObject = value;
			}
			return value;
		} else {
			return this.__dataObject;
		}
	}
	/*<EndProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::DataObject()" />*/
	,
	_format: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Format()" />*/
	format: function (value) {
		if (arguments.length === 1) {
			this._format = value;
			return value;
		} else {
			return this._format;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Format()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::HasMultipleSelectedCellRanges()" />*/
	hasMultipleSelectedCellRanges: function () {
		var mainSheet = this.workbook().windowOptions().selectedWorksheet();
		var mainSheetOptions = mainSheet != null ? mainSheet.displayOptions() : null;
		if (mainSheetOptions != null && mainSheetOptions._hasSelection()) {
			var paneSelection = mainSheetOptions._selection().getSelection(mainSheetOptions._activePane());
			if (paneSelection != null && paneSelection.ranges().count() > 1) {
				return true;
			}
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::HasMultipleSelectedCellRanges()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::SkipBlanks()" />*/
	skipBlanks: function () {
		return this.__loadOptions != null && this.__loadOptions.skipBlanks();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::SkipBlanks()" />*/
	,
	_workbook: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Workbook()" />*/
	workbook: function (value) {
		if (arguments.length === 1) {
			this._workbook = value;
			return value;
		} else {
			return this._workbook;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Workbook()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::GetData(System.String)" />*/
	getData: function (dataformat) {
		return this.__dataObject.getData(dataformat);
	}
	/*<EndMethod Name="System.Object Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::GetData(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::GetDataAsString(System.String)" />*/
	getDataAsString: function (format) {
		var actualData = this.getDataPresent(format) ? this.getData(format) : null;
		if (actualData == null) {
			return null;
		}
		var dataStream = $.ig.util.cast($.ig.Stream.prototype.$type, actualData);
		var data = null;
		if (null != dataStream) {
			{
				var sr = new $.ig.StreamReader(dataStream);
				try {
					data = sr.readToEnd();
				}
				finally {
					if (sr != null) {
						sr.dispose();
					}
				}
			}
		} else {
			data = $.ig.util.cast(String, actualData);
		}
		if (String.isNullOrEmpty(data)) {
			return null;
		}
		return data;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::GetDataAsString(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::GetDataPresent(System.String)" />*/
	getDataPresent: function (dataformat) {
		return this.__dataObject.getDataPresent(dataformat);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::GetDataPresent(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::OnError(Infragistics.Controls.Grids.Core.WorkbookSerializationLoadError)" />*/
	onError: function (error) {
		throw new $.ig.WorkbookSerializationLoadException(error);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::OnError(Infragistics.Controls.Grids.Core.WorkbookSerializationLoadError)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::ValidateTarget(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean)" />*/
	validateTarget: function (targetWorksheets, targetRanges, canPromptForPassword) {
		var action = this.__loadOptions.validateTargetAction();
		if (action != null && !action(targetWorksheets, targetRanges, canPromptForPassword)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::ValidateTarget(System.Collections.Generic.IList, System.Collections.Generic.IList, System.Boolean)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.IsFixedDecimalEnabled()" />*/
	isFixedDecimalEnabled: function () {
		return this.__loadOptions != null ? this.__loadOptions.isFixedDecimalEnabled() : false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.IsFixedDecimalEnabled()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.FixedDecimalPlaceCount()" />*/
	fixedDecimalPlaceCount: function () {
		return this.__loadOptions != null ? this.__loadOptions.fixedDecimalPlaceCount() : 2;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext::Infragistics.Controls.Grids.Core.ISpreadsheetEditInfo.FixedDecimalPlaceCount()" />*/
	,
	$type: new $.ig.Type('WorkbookDataObjectLoadContext', $.ig.Object.prototype.$type, [$.ig.ISpreadsheetEditInfo.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectManager" />*/

$.ig.util.defType('WorkbookDataObjectManager', 'Object', {
	__providers: null,
	init: function (workbook) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(workbook, "workbook");
		this.workbook(workbook);
		this.__providers = new $.ig.List$1($.ig.WorkbookSerializationProviderBase.prototype.$type, 0);
		this.__providers.add(new $.ig.IGExcelSerializationProvider());
		this.__providers.add(new $.ig.BIFF8SerializationProvider());
		this.__providers.add(new $.ig.TSVWorkbookSerializationProvider());
		this.__providers.add(new $.ig.CSVWorkbookSerializationProvider());
	},
	_workbook: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::Workbook()" />*/
	workbook: function (value) {
		if (arguments.length === 1) {
			this._workbook = value;
			return value;
		} else {
			return this._workbook;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::Workbook()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::CopyToClipboard()" />*/
	copyToClipboard: function () {
		var dataObject = this.createDataObject(false);
		if (null == dataObject) {
			return false;
		}
		try {
			return $.ig.ClipboardHelper.prototype.setDataObject(dataObject, true);
		}
		catch (ex) {
			this.raiseSerializationError(false, ex);
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::CopyToClipboard()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::HasAnyPasteFormat(System.Windows.IDataObject)" />*/
	hasAnyPasteFormat: function (dataObject) {
		return dataObject != null && (dataObject.getDataPresent($.ig.DataFormats.prototype.text) || dataObject.getDataPresent($.ig.DataFormats.prototype.unicodeText) || dataObject.getDataPresent($.ig.DataFormats.prototype.stringFormat) || dataObject.getDataPresent($.ig.DataFormats.prototype.commaSeparatedValue) || dataObject.getDataPresent($.ig.IGExcelSerializationProvider.prototype.format) || dataObject.getDataPresent($.ig.BIFF8SerializationProvider.prototype.format));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::HasAnyPasteFormat(System.Windows.IDataObject)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::PerformPaste(Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions)" />*/
	performPaste: function (loadOptions) {
		var dataObject = null;
		try {
			dataObject = $.ig.ClipboardHelper.prototype.getDataObject();
		}
		catch (ex) {
			this.raiseSerializationError(true, ex);
			return false;
		}
		return this.performPaste1(loadOptions, dataObject, null);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::PerformPaste(Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::PerformPaste(Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions, System.Windows.IDataObject, Infragistics.Documents.Excel.WorksheetCell)" />*/
	performPaste1: function (loadOptions, dataObject, dragDropTargetCell) {
		var isDragDrop = $.ig.excel.WorksheetCell.prototype.l_op_Inequality(dragDropTargetCell, null);
		if (null == dataObject) {
			return false;
		}
		var context = new $.ig.WorkbookDataObjectLoadContext(this.workbook(), dataObject, loadOptions);
		var pasteFormat = this.getPreferredLoadFormat(context);
		if (String.isNullOrEmpty(pasteFormat)) {
			return false;
		}
		context.format(pasteFormat);
		var pasteHandler = this.pasting;
		if (pasteHandler != null) {
			var pastingArgs = new $.ig.WorkbookDataObjectPastingEventArgs(dataObject, pasteFormat, isDragDrop);
			pasteHandler(this, pastingArgs);
			if (pastingArgs._cancel()) {
				return false;
			}
			dataObject = pastingArgs._dataObject();
			if (dataObject == null) {
				return false;
			}
			context.dataObject(dataObject);
			pasteFormat = pastingArgs._formatToApply();
			context.format(pasteFormat);
		}
		if (String.isNullOrWhiteSpace(pasteFormat) || !context.getDataPresent(pasteFormat)) {
			return false;
		}
		var provider = this.getProvider(pasteFormat, true);
		if (provider == null) {
			return false;
		}
		try {
			return provider.load(context);
		}
		catch (ex) {
			this.raiseSerializationError(true, ex);
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::PerformPaste(Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions, System.Windows.IDataObject, Infragistics.Documents.Excel.WorksheetCell)" />*/
	,
	/*<BeginMethod Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::CreateDataObject(System.Boolean)" />*/
	createDataObject: function (isDragDrop) {
		var $self = this;
		var dataObject = $.ig.ClipboardHelper.prototype.createDataObject();
		if (null == dataObject) {
			return null;
		}
		var context;
		try {
			context = new $.ig.WorkbookDataObjectSaveContext(this.workbook(), dataObject, function (f) { return $self.shouldAddFormat(dataObject, f); });
		}
		catch (ex) {
			this.raiseSerializationError(true, ex);
			return null;
		}
		var en = this.__providers.getEnumerator();
		while (en.moveNext()) {
			var provider = en.current();
			if (provider.supportedSaveFormats().count() > 0) {
				provider.save(context);
			}
		}
		var handler = this.copying;
		if (handler != null) {
			var dataObjectCopyingArgs = new $.ig.WorkbookDataObjectCopyingEventArgs(dataObject, isDragDrop);
			handler(this, dataObjectCopyingArgs);
			if (dataObjectCopyingArgs._cancel()) {
				return null;
			}
		}
		return dataObject;
	}
	/*<EndMethod Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::CreateDataObject(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::GetPreferredLoadFormat(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	getPreferredLoadFormat: function (context) {
		var en = this.__providers.getEnumerator();
		while (en.moveNext()) {
			var provider = en.current();
			var format = provider.getPreferredLoadFormat(context);
			if (format != null) {
				return format;
			}
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::GetPreferredLoadFormat(Infragistics.Controls.Grids.Core.WorkbookDataObjectLoadContext)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::GetProvider(System.String, System.Boolean)" />*/
	getProvider: function (format, isLoading) {
		var en = this.__providers.getEnumerator();
		while (en.moveNext()) {
			var provider = en.current();
			var formats = isLoading ? provider.supportedLoadFormats() : provider.supportedSaveFormats();
			if (formats.contains(format)) {
				return provider;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::GetProvider(System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::RaiseSerializationError(System.Boolean, System.Exception)" />*/
	raiseSerializationError: function (isLoading, exception) {
		var handler = this.error;
		if (handler != null) {
			var args = new $.ig.WorkbookSerializationErrorEventArgs(isLoading, exception);
			handler(this, args);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::RaiseSerializationError(System.Boolean, System.Exception)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::ShouldAddFormat(System.Windows.IDataObject, System.String)" />*/
	shouldAddFormat: function (dataObject, clipboardFormat) {
		var handler = this.settingData;
		if (handler != null) {
			var args = new $.ig.WorkbookDataObjectSettingDataEventArgs(dataObject, clipboardFormat, false);
			handler(this, args);
			return !args._cancel();
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectManager::ShouldAddFormat(System.Windows.IDataObject, System.String)" />*/
	,
	settingData: null,
	pasting: null,
	copying: null,
	error: null,
	$type: new $.ig.Type('WorkbookDataObjectManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectEventArgs" />*/

$.ig.util.defType('WorkbookDataObjectEventArgs', 'EventArgs', {
	init: function (isDragDrop) {
		$.ig.EventArgs.prototype.init.call(this);
		this._isDragDrop(isDragDrop);
	},
	__cancel: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectEventArgs::Cancel()" />*/
	_cancel: function (value) {
		if (arguments.length === 1) {
			this.__cancel = value;
			return value;
		} else {
			return this.__cancel;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectEventArgs::Cancel()" />*/
	,
	__isDragDrop: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectEventArgs::IsDragDrop()" />*/
	_isDragDrop: function (value) {
		if (arguments.length === 1) {
			this.__isDragDrop = value;
			return value;
		} else {
			return this.__isDragDrop;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectEventArgs::IsDragDrop()" />*/
	,
	$type: new $.ig.Type('WorkbookDataObjectEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectSettingDataEventArgs" />*/

$.ig.util.defType('WorkbookDataObjectSettingDataEventArgs', 'WorkbookDataObjectEventArgs', {
	init: function (dataObject, format, isDragDrop) {
		$.ig.WorkbookDataObjectEventArgs.prototype.init.call(this, isDragDrop);
		$.ig.CoreUtilities.prototype.validateNotNull1(dataObject, "dataObject");
		$.ig.CoreUtilities.prototype.validateNotNull1(format, "format");
		this._dataObject(dataObject);
		this._format(format);
	},
	__dataObject: null,
	/*<BeginProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectSettingDataEventArgs::DataObject()" />*/
	_dataObject: function (value) {
		if (arguments.length === 1) {
			this.__dataObject = value;
			return value;
		} else {
			return this.__dataObject;
		}
	}
	/*<EndProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectSettingDataEventArgs::DataObject()" />*/
	,
	__format: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectSettingDataEventArgs::Format()" />*/
	_format: function (value) {
		if (arguments.length === 1) {
			this.__format = value;
			return value;
		} else {
			return this.__format;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectSettingDataEventArgs::Format()" />*/
	,
	$type: new $.ig.Type('WorkbookDataObjectSettingDataEventArgs', $.ig.WorkbookDataObjectEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectSettingDataEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectCopyingEventArgs" />*/

$.ig.util.defType('WorkbookDataObjectCopyingEventArgs', 'WorkbookDataObjectEventArgs', {
	init: function (dataObject, isDragDrop) {
		$.ig.WorkbookDataObjectEventArgs.prototype.init.call(this, isDragDrop);
		$.ig.CoreUtilities.prototype.validateNotNull1(dataObject, "dataObject");
		this._dataObject(dataObject);
	},
	__dataObject: null,
	/*<BeginProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectCopyingEventArgs::DataObject()" />*/
	_dataObject: function (value) {
		if (arguments.length === 1) {
			this.__dataObject = value;
			return value;
		} else {
			return this.__dataObject;
		}
	}
	/*<EndProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectCopyingEventArgs::DataObject()" />*/
	,
	$type: new $.ig.Type('WorkbookDataObjectCopyingEventArgs', $.ig.WorkbookDataObjectEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectCopyingEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs" />*/

$.ig.util.defType('WorkbookDataObjectPastingEventArgs', 'WorkbookDataObjectEventArgs', {
	___dataObject: null,
	___formatToApply: null,
	init: function (dataObject, formatToApply, isDragDrop) {
		$.ig.WorkbookDataObjectEventArgs.prototype.init.call(this, isDragDrop);
		this.___dataObject = dataObject;
		this.___formatToApply = formatToApply;
	},
	/*<BeginProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs::DataObject()" />*/
	_dataObject: function (value) {
		if (arguments.length === 1) {
			if (this.___dataObject != value) {
				if (value == null) {
					throw new $.ig.ArgumentNullException(1);
				}
				this.___dataObject = value;
			}
			return value;
		} else {
			return this.___dataObject;
		}
	}
	/*<EndProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs::DataObject()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs::FormatToApply()" />*/
	_formatToApply: function (value) {
		if (arguments.length === 1) {
			this.___formatToApply = value;
			return value;
		} else {
			return this.___formatToApply;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs::FormatToApply()" />*/
	,
	$type: new $.ig.Type('WorkbookDataObjectPastingEventArgs', $.ig.WorkbookDataObjectEventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectPastingEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationErrorEventArgs" />*/

$.ig.util.defType('WorkbookSerializationErrorEventArgs', 'EventArgs', {
	init: function (isLoading, exception) {
		$.ig.EventArgs.prototype.init.call(this);
		this._isLoading(isLoading);
		this._exception(exception);
	},
	__exception: null,
	/*<BeginProperty Name="System.Exception Infragistics.Controls.Grids.Core.WorkbookSerializationErrorEventArgs::Exception()" />*/
	_exception: function (value) {
		if (arguments.length === 1) {
			this.__exception = value;
			return value;
		} else {
			return this.__exception;
		}
	}
	/*<EndProperty Name="System.Exception Infragistics.Controls.Grids.Core.WorkbookSerializationErrorEventArgs::Exception()" />*/
	,
	__isLoading: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationErrorEventArgs::IsLoading()" />*/
	_isLoading: function (value) {
		if (arguments.length === 1) {
			this.__isLoading = value;
			return value;
		} else {
			return this.__isLoading;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationErrorEventArgs::IsLoading()" />*/
	,
	$type: new $.ig.Type('WorkbookSerializationErrorEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationErrorEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadException" />*/

$.ig.util.defType('WorkbookSerializationLoadException', 'Error', {
	init: function (error) {
		$.ig.Error.prototype.init.call(this, 0);
		this._error(error);
	},
	__error: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadError Infragistics.Controls.Grids.Core.WorkbookSerializationLoadException::Error()" />*/
	_error: function (value) {
		if (arguments.length === 1) {
			this.__error = value;
			return value;
		} else {
			return this.__error;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadError Infragistics.Controls.Grids.Core.WorkbookSerializationLoadException::Error()" />*/
	,
	$type: new $.ig.Type('WorkbookSerializationLoadException', $.ig.Error.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadException" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext" />*/

$.ig.util.defType('WorkbookDataObjectSaveContext', 'Object', {
	__dataObject: null,
	__formatResults: null,
	__shouldAddFormatCallback: null,
	__worksheetsToSave: null,
	__hasColumnSelection: false,
	__hasRowSelection: false,
	_cellRegionMap: null,
	init: function (workbook, dataObject, shouldAddFormatCallback) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(workbook, "workbook");
		this.workbook(workbook);
		this.__shouldAddFormatCallback = shouldAddFormatCallback;
		this.dataObject(dataObject);
		var sheets = new $.ig.List$1($.ig.excel.Worksheet.prototype.$type, 0);
		var en = workbook.worksheets().getEnumerator();
		while (en.moveNext()) {
			var sheet = en.current();
			if (sheet.displayOptions()._isTabSelected()) {
				sheets.add(sheet);
			}
		}
		$.ig.Debug.prototype.assert1(sheets.count() > 0, "There should be sheets to save");
		this.__worksheetsToSave = new $.ig.ReadOnlyCollection$1($.ig.excel.Worksheet.prototype.$type, 1, sheets);
		var activeSheet = workbook.windowOptions().selectedWorksheet() || $.ig.Enumerable.prototype.firstOrDefault$1($.ig.excel.Worksheet.prototype.$type, sheets);
		$.ig.Debug.prototype.assert(activeSheet == null || sheets.contains(activeSheet));
		if (activeSheet != null) {
			activeSheet.displayOptions()._verifySelectionInfo();
			var sheetSelection = activeSheet.displayOptions()._selection();
			var paneSelection = sheetSelection.getSelection(activeSheet.displayOptions()._activePane());
			$.ig.Debug.prototype.assert(paneSelection != null);
			if (paneSelection != null) {
				if (paneSelection.ranges().count() == 1) {
					this._cellRegionMap = new $.ig.CellRegionMapSingle(paneSelection.ranges().item(0));
				} else {
					this._cellRegionMap = new $.ig.CellRegionMapMany($.ig.Enumerable.prototype.toArray$1($.ig.WorksheetRegionAddress.prototype.$type, paneSelection.ranges()));
				}
				this.__hasColumnSelection = this._cellRegionMap.sourceRows().length == 1 && this._cellRegionMap.sourceRows()[0].__start == 0 && this._cellRegionMap.sourceRows()[0].__end >= activeSheet.rows().maxCount() - 1;
				this.__hasRowSelection = this._cellRegionMap.sourceColumns().length == 1 && this._cellRegionMap.sourceColumns()[0].__start == 0 && this._cellRegionMap.sourceColumns()[0].__end >= activeSheet.columns().maxCount() - 1;
			}
		}
	},
	/*<BeginProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::DataObject()" />*/
	dataObject: function (value) {
		if (arguments.length === 1) {
			if (this.__dataObject != value) {
				if (value == null) {
					throw new $.ig.ArgumentNullException(1);
				}
				this.__dataObject = value;
			}
			return value;
		} else {
			return this.__dataObject;
		}
	}
	/*<EndProperty Name="System.Windows.IDataObject Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::DataObject()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::HasSelectedColumns()" />*/
	hasSelectedColumns: function () {
		return this.__hasColumnSelection;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::HasSelectedColumns()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::HasSelectedRows()" />*/
	hasSelectedRows: function () {
		return this.__hasRowSelection;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::HasSelectedRows()" />*/
	,
	_workbook: null,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::Workbook()" />*/
	workbook: function (value) {
		if (arguments.length === 1) {
			this._workbook = value;
			return value;
		} else {
			return this._workbook;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::Workbook()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::Worksheets()" />*/
	worksheets: function () {
		return this.__worksheetsToSave;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::Worksheets()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::AddData(System.String, System.Object)" />*/
	addData: function (format, data) {
		$.ig.Debug.prototype.assert(this.shouldAddFormat(format));
		this.__dataObject.setData(format, data);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::AddData(System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::ShouldAddFormat(System.String)" />*/
	shouldAddFormat: function (format) {
		var $self = this;
		if (this.__shouldAddFormatCallback == null) {
			return true;
		}
		if (this.__formatResults == null) {
			this.__formatResults = new $.ig.Dictionary$2(String, $.ig.Boolean.prototype.$type, 0);
		}
		var result;
		if (!(function () { var $ret = $self.__formatResults.tryGetValue(format, result); result = $ret.p1; return $ret.ret; }())) {
			result = this.__formatResults.item(format, this.__shouldAddFormatCallback(format));
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext::ShouldAddFormat(System.String)" />*/
	,
	$type: new $.ig.Type('WorkbookDataObjectSaveContext', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookDataObjectSaveContext" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions" />*/

$.ig.util.defType('WorkbookSerializationLoadOptions', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.categoriesToLoad($.ig.WorkbookSerializationLoadCategories.prototype.allGroup);
		this.fixedDecimalPlaceCount(2);
	},
	_categoriesToLoad: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadCategories Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::CategoriesToLoad()" />*/
	categoriesToLoad: function (value) {
		if (arguments.length === 1) {
			this._categoriesToLoad = value;
			return value;
		} else {
			return this._categoriesToLoad;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadCategories Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::CategoriesToLoad()" />*/
	,
	_fixedDecimalPlaceCount: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::FixedDecimalPlaceCount()" />*/
	fixedDecimalPlaceCount: function (value) {
		if (arguments.length === 1) {
			this._fixedDecimalPlaceCount = value;
			return value;
		} else {
			return this._fixedDecimalPlaceCount;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::FixedDecimalPlaceCount()" />*/
	,
	_isFixedDecimalEnabled: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::IsFixedDecimalEnabled()" />*/
	isFixedDecimalEnabled: function (value) {
		if (arguments.length === 1) {
			this._isFixedDecimalEnabled = value;
			return value;
		} else {
			return this._isFixedDecimalEnabled;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::IsFixedDecimalEnabled()" />*/
	,
	_skipBlanks: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::SkipBlanks()" />*/
	skipBlanks: function (value) {
		if (arguments.length === 1) {
			this._skipBlanks = value;
			return value;
		} else {
			return this._skipBlanks;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::SkipBlanks()" />*/
	,
	_validateTargetAction: null,
	/*<BeginProperty Name="System.Func Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::ValidateTargetAction()" />*/
	validateTargetAction: function (value) {
		if (arguments.length === 1) {
			this._validateTargetAction = value;
			return value;
		} else {
			return this._validateTargetAction;
		}
	}
	/*<EndProperty Name="System.Func Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions::ValidateTargetAction()" />*/
	,
	$type: new $.ig.Type('WorkbookSerializationLoadOptions', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookSerializationLoadOptions" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetShape" />*/

$.ig.util.defType('SpreadsheetShape', 'Object', {
	_shape: null,
	init: function (shape) {
		$.ig.Object.prototype.init.call(this);
		this._shape = shape;
	},
	_drawVersion: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetShape::DrawVersion()" />*/
	drawVersion: function (value) {
		if (arguments.length === 1) {
			this._drawVersion = value;
			return value;
		} else {
			return this._drawVersion;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetShape::DrawVersion()" />*/
	,
	/*<BeginProperty Name="System.Single Infragistics.Controls.Grids.Core.SpreadsheetShape::Rotation()" />*/
	rotation: function () {
		return this._shape._rotation();
	}
	/*<EndProperty Name="System.Single Infragistics.Controls.Grids.Core.SpreadsheetShape::Rotation()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetShape::TopRowIndex()" />*/
	topRowIndex: function () {
		return this._shape._topLeftCornerCellInternal().rowIndex();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetShape::TopRowIndex()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetShape::BottomRowIndex()" />*/
	bottomRowIndex: function () {
		return this._shape._bottomRightCornerCellInternal().rowIndex();
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetShape::BottomRowIndex()" />*/
	,
	/*<BeginProperty Name="System.Int16 Infragistics.Controls.Grids.Core.SpreadsheetShape::LeftColumnIndex()" />*/
	leftColumnIndex: function () {
		return this._shape._topLeftCornerCellInternal().columnIndex();
	}
	/*<EndProperty Name="System.Int16 Infragistics.Controls.Grids.Core.SpreadsheetShape::LeftColumnIndex()" />*/
	,
	/*<BeginProperty Name="System.Int16 Infragistics.Controls.Grids.Core.SpreadsheetShape::RightColumnIndex()" />*/
	rightColumnIndex: function () {
		return this._shape._bottomRightCornerCellInternal().columnIndex();
	}
	/*<EndProperty Name="System.Int16 Infragistics.Controls.Grids.Core.SpreadsheetShape::RightColumnIndex()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::LeftColumnOffset()" />*/
	leftColumnOffset: function () {
		return this._shape._topLeftCornerPosition$i().__x;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::LeftColumnOffset()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::TopColumnOffset()" />*/
	topColumnOffset: function () {
		return this._shape._topLeftCornerPosition$i().__y;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::TopColumnOffset()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::RightColumnOffset()" />*/
	rightColumnOffset: function () {
		return this._shape._bottomRightCornerPosition$i().__x;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::RightColumnOffset()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::BottomColumnOffset()" />*/
	bottomColumnOffset: function () {
		return this._shape._bottomRightCornerPosition$i().__y;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetShape::BottomColumnOffset()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetShape::IsVisible()" />*/
	isVisible: function () {
		return this._shape.visible();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetShape::IsVisible()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetShape::FlipHorizontally()" />*/
	flipHorizontally: function () {
		return this._shape.flippedHorizontally();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetShape::FlipHorizontally()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetShape::FlipVertically()" />*/
	flipVertically: function () {
		return this._shape.flippedVertically();
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetShape::FlipVertically()" />*/
	,
	$type: new $.ig.Type('SpreadsheetShape', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetShape" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo" />*/

$.ig.util.defType('SpreadsheetAreaLayoutManager_RowColumnInfo', 'Object', {
	_headerAreaExtent: 0,
	_headerPanelExtent: 0,
	_scrollBarThickness: 0,
	_scrollCoordinator: null,
	_areRowHeaders: false,
	_items: null,
	_hasSplitter: false,
	_hasSplitterPreview: false,
	_headerLayerInfos: null,
	init: function (areRowHeaders) {
		this._headerLayerInfos = new $.ig.List$1($.ig.SpreadsheetAreaLayoutManager_SheetLayerInfo$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetScrollRegion.prototype.$type), 0);
		$.ig.Object.prototype.init.call(this);
		this._areRowHeaders = areRowHeaders;
		this._items = new Array(0);
	},
	$type: new $.ig.Type('SpreadsheetAreaLayoutManager_RowColumnInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_RowColumnInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo`1" />*/

$.ig.util.defType('SpreadsheetAreaLayoutManager_SheetLayerInfo$1', 'Object', {
	$t: null,
	_viewObject: null,
	_layerContainer: null,
	_arrangeRect: null,
	init: function ($t, viewObject, layerContainer) {
		this.$t = $t;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$t);
		}
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(viewObject, "viewObject");
		this._viewObject = viewObject;
		this._layerContainer = layerContainer;
	},
	$type: new $.ig.Type('SpreadsheetAreaLayoutManager_SheetLayerInfo$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager_SheetLayerInfo`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo" />*/

$.ig.util.defType('SpreadsheetUserPromptInfo', 'Object', {
	init: function (trigger, message, exception, context, allowCancel) {
		$.ig.Object.prototype.init.call(this);
		this.trigger(trigger);
		this.exception(exception);
		this.context(context);
		this.displayMessage(true);
		this.allowCancel(allowCancel);
		if (message == null) {
			var defaultMessageResource = null;
			switch (trigger) {
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.deletingWorksheets:
					defaultMessageResource = "DeleteWorksheets_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMixedCellSelections:
					defaultMessageResource = "InvalidCommand_MixedSelection_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForOverlappingSelections:
					defaultMessageResource = "InvalidCommand_OverlappingSelection_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidNameBoxValue:
					defaultMessageResource = "InvalidNameBoxValue_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteCellRangeSize:
					defaultMessageResource = "PasteError_CellRangeSize_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteMultipleSourceAndTargetRanges:
					defaultMessageResource = "PasteError_MultipleSourceAndTargetRanges_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteInvalidSourceRanges:
					defaultMessageResource = "PasteError_InvalidSourceRanges_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteInvalidSheetCount:
					defaultMessageResource = "PasteError_InvalidSelectedSheetCount_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.pasteIntersectsMergedCells:
					defaultMessageResource = "PasteError_IntersectsMergedCells_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.intersectsMergedCells:
					defaultMessageResource = "Error_IntersectsMergedCells_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.copyInvalidRanges:
					defaultMessageResource = "CopyError_InvalidSelection_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidCommandForMultipleSelections:
					defaultMessageResource = "InvalidCommand_MultipleSelection_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.tableChangeWithMultipleSelectedSheets:
					defaultMessageResource = "InvalidCommand_TableChangeWithMultipleSheetSelection_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkAddress:
					defaultMessageResource = "Error_InvalidHyperlinkAddress_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidHyperlinkReference:
					defaultMessageResource = "Error_InvalidHyperlinkReference_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidProtectedWorksheetChange:
					defaultMessageResource = "Error_InvalidProtectedWorksheetChange_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.noSingleAllowedEditRange:
					defaultMessageResource = "Error_NoSingleAllowedEditRange_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.invalidArrayFormulaLockedState:
					defaultMessageResource = "Error_InvalidArrayFormulaLockedState_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.changePartOfDataTable:
					defaultMessageResource = "Error_ChangePartOfDataTableError_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.deletingLockedColumnCells:
					defaultMessageResource = "Error_DeletingLockedColumnCells_Message";
					break;
				case $.ig.spreadsheet.SpreadsheetUserPromptTrigger.deletingLockedRowCells:
					defaultMessageResource = "Error_DeletingLockedRowCells_Message";
					break;
			}
			if (defaultMessageResource != null) {
				message = $.ig.spreadsheet.locale.getString(defaultMessageResource, []);
			} else if (exception != null) {
				message = exception.message();
			}
		}
		this.message(message);
	},
	_allowCancel: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::AllowCancel()" />*/
	allowCancel: function (value) {
		if (arguments.length === 1) {
			this._allowCancel = value;
			return value;
		} else {
			return this._allowCancel;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::AllowCancel()" />*/
	,
	_cancel: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Cancel()" />*/
	cancel: function (value) {
		if (arguments.length === 1) {
			this._cancel = value;
			return value;
		} else {
			return this._cancel;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Cancel()" />*/
	,
	_caption: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Caption()" />*/
	caption: function (value) {
		if (arguments.length === 1) {
			this._caption = value;
			return value;
		} else {
			return this._caption;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Caption()" />*/
	,
	_context: null,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Context()" />*/
	context: function (value) {
		if (arguments.length === 1) {
			this._context = value;
			return value;
		} else {
			return this._context;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Context()" />*/
	,
	_displayMessage: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::DisplayMessage()" />*/
	displayMessage: function (value) {
		if (arguments.length === 1) {
			this._displayMessage = value;
			return value;
		} else {
			return this._displayMessage;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::DisplayMessage()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::DisplayMessageResolved()" />*/
	displayMessageResolved: function () {
		return this.displayMessage() && !String.isNullOrEmpty(this.message());
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::DisplayMessageResolved()" />*/
	,
	_exception: null,
	/*<BeginProperty Name="System.Exception Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Exception()" />*/
	exception: function (value) {
		if (arguments.length === 1) {
			this._exception = value;
			return value;
		} else {
			return this._exception;
		}
	}
	/*<EndProperty Name="System.Exception Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Exception()" />*/
	,
	_message: null,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Message()" />*/
	message: function (value) {
		if (arguments.length === 1) {
			this._message = value;
			return value;
		} else {
			return this._message;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Message()" />*/
	,
	_trigger: 0,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Trigger()" />*/
	trigger: function (value) {
		if (arguments.length === 1) {
			this._trigger = value;
			return value;
		} else {
			return this._trigger;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptTrigger Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo::Trigger()" />*/
	,
	$type: new $.ig.Type('SpreadsheetUserPromptInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetUserPromptInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RotationHelper" />*/

$.ig.util.defType('RotationHelper', 'Object', {
	__corners: null,
	__boundingRect: null,
	__currentRect: null,
	__currentRectCenterX: 0,
	__currentRectCenterY: 0,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.__corners = new Array(8);
		this.__boundingRect = new $.ig.Rect(4);
		this.__currentRect = new $.ig.Rect(4);
	},
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.RotationHelper::CurrentRect()" />*/
	currentRect: function () {
		return this.__currentRect;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.RotationHelper::CurrentRect()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.RotationHelper::CurrentRectCenterX()" />*/
	currentRectCenterX: function () {
		return this.__currentRectCenterX;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.RotationHelper::CurrentRectCenterX()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.RotationHelper::CurrentRectCenterY()" />*/
	currentRectCenterY: function () {
		return this.__currentRectCenterY;
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.RotationHelper::CurrentRectCenterY()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.RotationHelper::BoundingRect()" />*/
	boundingRect: function () {
		return this.__boundingRect;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.RotationHelper::BoundingRect()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::Initialize(System.Double, System.Double, System.Double, System.Double, System.Double, System.Boolean)" />*/
	initialize: function (left, top, right, bottom, rotationInDegrees, adjustForAngle) {
		this.initializeImpl(left, top, right, bottom, rotationInDegrees, 0, 0, true, adjustForAngle);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::Initialize(System.Double, System.Double, System.Double, System.Double, System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::Initialize(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Boolean)" />*/
	initialize1: function (left, top, right, bottom, rotationInDegrees, centerX, centerY, adjustForAngle) {
		this.initializeImpl(left, top, right, bottom, rotationInDegrees, centerX, centerY, false, adjustForAngle);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::Initialize(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::InitializeImpl(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Boolean, System.Boolean)" />*/
	initializeImpl: function (left, top, right, bottom, rotationInDegrees, centerX, centerY, calculateCenter, adjustForAngle) {
		var width = Math.max(right - left, 0);
		var height = Math.max(bottom - top, 0);
		if (adjustForAngle) {
			left = (left + width / 2) - height / 2;
			top = (top + height / 2) - width / 2;
			var temp = height;
			height = width;
			width = temp;
		}
		right = left + width;
		bottom = top + height;
		this.__currentRect.x(left);
		this.__currentRect.y(top);
		this.__currentRect.width(width);
		this.__currentRect.height(height);
		this.__currentRectCenterX = left + width / 2;
		this.__currentRectCenterY = top + height / 2;
		var ctrX = calculateCenter ? this.__currentRectCenterX : centerX;
		var ctrY = calculateCenter ? this.__currentRectCenterY : centerY;
		var corners = this.__corners;
		corners[0] = corners[2] = left;
		corners[1] = corners[5] = top;
		corners[4] = corners[6] = right;
		corners[3] = corners[7] = bottom;
		if (rotationInDegrees != 0) {
			var rads = $.ig.SpreadsheetUtilities.prototype.toRadians(rotationInDegrees);
			var cos = Math.cos(rads);
			var sin = Math.sin(rads);
			var minX, maxX, minY, maxY;
			minX = minY = maxX = maxY = 0;
			for (var i = 0; i < 7; i += 2) {
				var newX = (cos * (corners[i] - ctrX) - sin * (corners[i + 1] - ctrY) + ctrX);
				corners[i + 1] = (sin * (corners[i] - ctrX) + cos * (corners[i + 1] - ctrY) + ctrY);
				corners[i] = newX;
				if (i == 0) {
					minX = maxX = corners[0];
					minY = maxY = corners[1];
				} else {
					if (maxX < corners[i]) {
						maxX = corners[i];
					} else if (minX > corners[i]) {
						minX = corners[i];
					}
					if (maxY < corners[i + 1]) {
						maxY = corners[i + 1];
					} else if (minY > corners[i + 1]) {
						minY = corners[i + 1];
					}
				}
			}
			this.__boundingRect.x(minX);
			this.__boundingRect.y(minY);
			this.__boundingRect.width(maxX - minX);
			this.__boundingRect.height(maxY - minY);
		} else {
			this.__boundingRect.x(left);
			this.__boundingRect.y(top);
			this.__boundingRect.width(width);
			this.__boundingRect.height(height);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::InitializeImpl(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.RotationHelper::IsOutOfView(System.Double, System.Double, System.Double, System.Double)" />*/
	isOutOfView: function (viewLeft, viewTop, viewRight, viewBottom) {
		return this.__boundingRect.left() > viewRight || this.__boundingRect.top() > viewBottom || this.__boundingRect.right() < viewLeft || this.__boundingRect.bottom() < viewTop;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.RotationHelper::IsOutOfView(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::Rotate(System.Double, System.Double, System.Double)" />*/
	rotate: function (ctrX, ctrY, rotationInDegrees) {
		if (rotationInDegrees != 0) {
			var corners = this.__corners;
			var rads = $.ig.SpreadsheetUtilities.prototype.toRadians(rotationInDegrees);
			var cos = Math.cos(rads);
			var sin = Math.sin(rads);
			var minX, maxX, minY, maxY;
			minX = minY = maxX = maxY = 0;
			for (var i = 0; i < 7; i += 2) {
				var newX = (cos * (corners[i] - ctrX) - sin * (corners[i + 1] - ctrY) + ctrX);
				corners[i + 1] = (sin * (corners[i] - ctrX) + cos * (corners[i + 1] - ctrY) + ctrY);
				corners[i] = newX;
				if (i == 0) {
					minX = maxX = corners[0];
					minY = maxY = corners[1];
				} else {
					if (maxX < corners[i]) {
						maxX = corners[i];
					} else if (minX > corners[i]) {
						minX = corners[i];
					}
					if (maxY < corners[i + 1]) {
						maxY = corners[i + 1];
					} else if (minY > corners[i + 1]) {
						minY = corners[i + 1];
					}
				}
			}
			var newCtrX = (cos * (this.__currentRectCenterX - ctrX) - sin * (this.__currentRectCenterY - ctrY) + ctrX);
			this.__currentRectCenterY = (sin * (this.__currentRectCenterX - ctrX) + cos * (this.__currentRectCenterY - ctrY) + ctrY);
			this.__currentRectCenterX = newCtrX;
			this.__boundingRect.x(minX);
			this.__boundingRect.y(minY);
			this.__boundingRect.width(maxX - minX);
			this.__boundingRect.height(maxY - minY);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RotationHelper::Rotate(System.Double, System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('RotationHelper', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RotationHelper" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer" />*/

$.ig.util.defType('WorksheetCellFormatDataEqualityComparer', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer::Equals(Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	equalsC: function (x, y) {
		return x == y || (x != null && y != null && x._equalsInternal(y));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer::Equals(Infragistics.Documents.Excel.WorksheetCellFormatData, Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer::GetHashCode(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	getHashCodeC: function (obj) {
		return obj.getHashCode();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer::GetHashCode(Infragistics.Documents.Excel.WorksheetCellFormatData)" />*/
	,
	$type: new $.ig.Type('WorksheetCellFormatDataEqualityComparer', $.ig.Object.prototype.$type, [$.ig.IEqualityComparer$1.prototype.$type.specialize($.ig.WorksheetCellFormatData.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellClass" />*/

$.ig.util.defType('SpreadsheetCellClass', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	__row: 0,
	__column: 0,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellClass::GetHashCode()" />*/
	getHashCode: function () {
		return (this.__row << 8) ^ this.__column;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetCellClass::GetHashCode()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellClass::Equals(System.Object)" />*/
	equals1: function (other) {
		return $.ig.util.cast($.ig.SpreadsheetCellClass.prototype.$type, other) !== null && this.equals(other);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellClass::Equals(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellClass::Equals(Infragistics.Controls.Grids.Core.SpreadsheetCellClass)" />*/
	equals: function (other) {
		return this.__row == other.__row && this.__column == other.__column;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetCellClass::Equals(Infragistics.Controls.Grids.Core.SpreadsheetCellClass)" />*/
	,
	$type: new $.ig.Type('SpreadsheetCellClass', $.ig.Object.prototype.$type, [$.ig.IEquatable$1.prototype.$type.specialize(-1)])
}, true);

$.ig.SpreadsheetCellClass.prototype.$type.initSelfReferences();

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetCellClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.DefaultColors" />*/

$.ig.util.defType('DefaultSpreadsheetColors', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	staticInit: function () {
		$.ig.DefaultSpreadsheetColors.prototype._defaultColors = new $.ig.Dictionary$2($.ig.SpreadsheetResourceId.prototype.$type, $.ig.Color.prototype.$type, 0);
		$.ig.DefaultSpreadsheetColors.prototype._defaultColors2 = new $.ig.Dictionary$2($.ig.SpreadsheetResourceId.prototype.$type, $.ig.Color.prototype.$type, 0);
		var spreadsheetResourceIds = $.ig.Enum.prototype.getValues($.ig.SpreadsheetResourceId.prototype.$type);
		for (var i = 0; i < spreadsheetResourceIds.length; i++) {
			var spreadsheetResourceId = spreadsheetResourceIds[i];
			switch (spreadsheetResourceId) {
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderBackground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderBackground:
				case $.ig.SpreadsheetResourceId.prototype.selectAllBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 241, 241, 241));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsBackground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 212, 212, 212));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedBackground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 211, 240, 224));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedForeground:
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsForeground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsForeground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedForeground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackSelectedForeground:
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackSelectedForeground:
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorder:
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionDragBorderInHeader:
				case $.ig.SpreadsheetResourceId.prototype.selectAllTriangleSelectedFill:
				case $.ig.SpreadsheetResourceId.prototype.multiSelectActiveCellBorder:
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionHandleFill:
				case $.ig.SpreadsheetResourceId.prototype.selectedTabHighlight:
				case $.ig.SpreadsheetResourceId.prototype.tabItemActiveForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 33, 115, 70));
					break;
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderSelectedBorder:
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderSelectedBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 198, 198, 198));
					break;
				case $.ig.SpreadsheetResourceId.prototype.resizeColumnLine:
				case $.ig.SpreadsheetResourceId.prototype.resizeRowLine:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(193, 127, 127, 127));
					break;
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackBorder:
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 160, 173, 166));
					break;
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderWithSelectedCellsBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 184, 184, 184));
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors2.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 172, 172, 172));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderWithSelectedCellsBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 184, 184, 184));
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors2.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 172, 172, 172));
					break;
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 219, 219, 219));
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors2.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 183, 183, 183));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 219, 219, 219));
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors2.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 183, 183, 183));
					break;
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionFill:
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionOuterBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(57, 0, 0, 0));
					break;
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionInnerBorder:
				case $.ig.SpreadsheetResourceId.prototype.cellSelectionHandleBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 255, 255, 255));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderForeground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderForeground:
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackForeground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 38, 38, 38));
					break;
				case $.ig.SpreadsheetResourceId.prototype.rowHeaderHotTrackBackground:
				case $.ig.SpreadsheetResourceId.prototype.columnHeaderHotTrackBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 159, 213, 183));
					break;
				case $.ig.SpreadsheetResourceId.prototype.selectAllTriangleFill:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 198, 198, 198));
					break;
				case $.ig.SpreadsheetResourceId.prototype.selectAllTriangleHotTrackFill:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 158, 158, 158));
					break;
				case $.ig.SpreadsheetResourceId.prototype.automaticGridline:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 212, 212, 212));
					break;
				case $.ig.SpreadsheetResourceId.prototype.addSheetButtonForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 119, 119, 119));
					break;
				case $.ig.SpreadsheetResourceId.prototype.addSheetButtonHotTrackForeground:
				case $.ig.SpreadsheetResourceId.prototype.tabScrollButtonHotTrackForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 67, 148, 103));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabScrollButtonForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 10, 99, 50));
					break;
				case $.ig.SpreadsheetResourceId.prototype.addSheetButtonDisabledForeground:
				case $.ig.SpreadsheetResourceId.prototype.tabScrollButtonDisabledForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 198, 198, 198));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabAreaSplitterForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 179, 179, 179));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabAreaBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 171, 171, 171));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabAreaBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 246, 246, 246));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabItemActiveBackground:
				case $.ig.SpreadsheetResourceId.prototype.tabItemSelectedBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 255, 255, 255));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabItemSelectedForeground:
				case $.ig.SpreadsheetResourceId.prototype.tabItemHotTrackForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 38, 38, 38));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabItemHotTrackBackground:
				case $.ig.SpreadsheetResourceId.prototype.tabItemBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(0, 255, 255, 255));
					break;
				case $.ig.SpreadsheetResourceId.prototype.tabItemForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 68, 68, 68));
					break;
				case $.ig.SpreadsheetResourceId.prototype.sheetPaneSplitterPreview:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(128, 134, 134, 134));
					break;
				case $.ig.SpreadsheetResourceId.prototype.sheetPaneSplitterBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 211, 211, 211));
					break;
				case $.ig.SpreadsheetResourceId.prototype.inputMessageBackground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 255, 255, 225));
					break;
				case $.ig.SpreadsheetResourceId.prototype.inputMessageBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 100, 100, 100));
					break;
				case $.ig.SpreadsheetResourceId.prototype.inputMessageForeground:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 93, 93, 93));
					break;
				case $.ig.SpreadsheetResourceId.prototype.invalidDataBorder:
					$.ig.DefaultSpreadsheetColors.prototype._defaultColors.item(spreadsheetResourceId, $.ig.Color.prototype.fromArgb(255, 255, 0, 0));
					break;
			}
		}
	},
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.DefaultColors::GetDefaultColor(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	getDefaultColor: function (spreadsheetResourceId) {
		return $.ig.DefaultSpreadsheetColors.prototype.getDefaultColor1(spreadsheetResourceId, false);
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.DefaultColors::GetDefaultColor(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	,
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.DefaultColors::GetDefaultColor2(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	getDefaultColor2: function (spreadsheetResourceId) {
		return $.ig.DefaultSpreadsheetColors.prototype.getDefaultColor1(spreadsheetResourceId, true);
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.DefaultColors::GetDefaultColor2(Infragistics.Controls.Grids.Core.SpreadsheetResourceId)" />*/
	,
	/*<BeginMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.DefaultColors::GetDefaultColor(Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Boolean)" />*/
	getDefaultColor1: function (spreadsheetResourceId, color2) {
		var colors = false == color2 ? $.ig.DefaultSpreadsheetColors.prototype._defaultColors : $.ig.DefaultSpreadsheetColors.prototype._defaultColors2;
		var color = new $.ig.Color();
		var success = (function () { var $ret = colors.tryGetValue(spreadsheetResourceId, color); color = $ret.p1; return $ret.ret; }());
		if (success) {
			return color;
		}
		$.ig.Debug.prototype.fail("Default resource not provided for:" + $.ig.SpreadsheetResourceId.prototype.getBox(spreadsheetResourceId));
		return $.ig.ExcelUtils.prototype.colorEmpty;
	}
	/*<EndMethod Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.DefaultColors::GetDefaultColor(Infragistics.Controls.Grids.Core.SpreadsheetResourceId, System.Boolean)" />*/
	,
	$type: new $.ig.Type('DefaultSpreadsheetColors', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.DefaultColors" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo" />*/

$.ig.util.defType('SpreadsheetTabInfo', 'PropertyChangeNotifierExtended', {
	___name: null,
	___worksheet: null,
	___colorInfo: null,
	___visibility: 0,
	___color: null,
	___isProtected: false,
	___isSelected: false,
	___isActive: false,
	___index: 0,
	___actualWidth: 0,
	___element: null,
	___isEditing: false,
	___reverseZIndex: false,
	___zIndex: 0,
	init: function (worksheet) {
		this.___color = $.ig.ColorsInternal.prototype.empty();
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(worksheet, "worksheet");
		this.___worksheet = worksheet;
		this._verifyState();
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		if (sender == this) {
			switch (property) {
				case "IsActive":
				case "IsSelected":
				case "ReverseZIndex":
				case "Index":
					this._initializeZIndex();
					break;
			}
		}
		$.ig.PropertyChangeNotifierExtended.prototype.onSubObjectPropertyChanged.call(this, sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ActualWidth()" />*/
	_actualWidth: function (value) {
		if (arguments.length === 1) {
			if (this.___actualWidth != value) {
				this.___actualWidth = value;
				this.onPropertyChanged("ActualWidth");
			}
			return value;
		} else {
			return this.___actualWidth;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ActualWidth()" />*/
	,
	/*<BeginProperty Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Color()" />*/
	_color: function (value) {
		if (arguments.length === 1) {
			if ($.ig.Color.prototype.l_op_Inequality(this.___color, value)) {
				this.___color = value;
				this.onPropertyChanged("Color");
			}
			return value;
		} else {
			return this.___color;
		}
	}
	/*<EndProperty Name="System.Windows.Media.Color Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Color()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ColorInfo()" />*/
	_colorInfo: function (value) {
		if (arguments.length === 1) {
			if ($.ig.excel.WorkbookColorInfo.prototype.l_op_Inequality(this.___colorInfo, value)) {
				this.___colorInfo = value;
				this._color($.ig.excel.WorkbookColorInfo.prototype.l_op_Equality(this.___colorInfo, null) ? $.ig.ColorsInternal.prototype.empty() : this.___colorInfo._getResolvedColor1(this.___worksheet.workbook()));
				this.onPropertyChanged("ColorInfo");
			}
			return value;
		} else {
			return this.___colorInfo;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorkbookColorInfo Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ColorInfo()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Element()" />*/
	_element: function (value) {
		if (arguments.length === 1) {
			this.___element = value == null ? null : new $.ig.WeakReference(value);
			return value;
		} else {
			return $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.___element);
		}
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Element()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Index()" />*/
	_index: function (value) {
		if (arguments.length === 1) {
			if (this.___index != value) {
				this.___index = value;
				this.onPropertyChanged("Index");
			}
			return value;
		} else {
			return this.___index;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Index()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsActive()" />*/
	_isActive: function (value) {
		if (arguments.length === 1) {
			if (this.___isActive != value) {
				this.___isActive = value;
				this.onPropertyChanged("IsActive");
			}
			return value;
		} else {
			return this.___isActive;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsActive()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsEditing()" />*/
	_isEditing: function (value) {
		if (arguments.length === 1) {
			if (this.___isEditing != value) {
				this.___isEditing = value;
				this.onPropertyChanged("IsEditing");
			}
			return value;
		} else {
			return this.___isEditing;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsEditing()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsProtected()" />*/
	_isProtected: function (value) {
		if (arguments.length === 1) {
			if (this.___isProtected != value) {
				this.___isProtected = value;
				this.onPropertyChanged("IsProtected");
			}
			return value;
		} else {
			return this.___isProtected;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsProtected()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsSelected()" />*/
	_isSelected: function (value) {
		if (arguments.length === 1) {
			if (this.___isSelected != value) {
				this.___isSelected = value;
				this.onPropertyChanged("IsSelected");
			}
			return value;
		} else {
			return this.___isSelected;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::IsSelected()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Name()" />*/
	_name: function (value) {
		if (arguments.length === 1) {
			if (this.___name != value) {
				this.___name = value;
				this.onPropertyChanged("Name");
			}
			return value;
		} else {
			return this.___name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Name()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ReverseZIndex()" />*/
	_reverseZIndex: function (value) {
		if (arguments.length === 1) {
			if (this.___reverseZIndex != value) {
				this.___reverseZIndex = value;
				this.onPropertyChanged("ReverseZIndex");
			}
			return value;
		} else {
			return this.___reverseZIndex;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ReverseZIndex()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetVisibility Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Visibility()" />*/
	_visibility: function (value) {
		if (arguments.length === 1) {
			if (this.___visibility != value) {
				this.___visibility = value;
				this.onPropertyChanged("Visibility");
			}
			return value;
		} else {
			return this.___visibility;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetVisibility Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Visibility()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Worksheet()" />*/
	_worksheet: function () {
		return this.___worksheet;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::Worksheet()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ZIndex()" />*/
	_zIndex: function (value) {
		if (arguments.length === 1) {
			if (this.___zIndex != value) {
				this.___zIndex = value;
				this.onPropertyChanged("ZIndex");
			}
			return value;
		} else {
			return this.___zIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::ZIndex()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::InitializeZIndex()" />*/
	_initializeZIndex: function () {
		var zIndex = this._index();
		if (this.___reverseZIndex) {
			zIndex *= -1;
		}
		if (this._isSelected()) {
			zIndex += 10000;
		}
		if (this._isActive()) {
			zIndex += 50000;
		}
		this._zIndex(zIndex);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::InitializeZIndex()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::OnMouseDown(System.Boolean, System.Boolean, System.Boolean)" />*/
	_onMouseDown: function (isCtrlKeyDown, isShiftKeyDown, isLeftButton) {
		var wb = this.___worksheet.workbook();
		if (wb != null) {
			if (isCtrlKeyDown) {
				if (wb.windowOptions().selectedWorksheet() != this.___worksheet && this._isSelected()) {
					this.___worksheet.displayOptions()._isTabSelected(false);
				} else {
					this.___worksheet.displayOptions()._isTabSelected(true);
				}
			} else if (isShiftKeyDown) {
				var thisIndex = this.___worksheet.index();
				var activeIndex = wb.windowOptions().selectedWorksheet() == null ? thisIndex : wb.windowOptions().selectedWorksheet().index();
				var first = Math.min(thisIndex, activeIndex);
				var last = first == thisIndex ? activeIndex : thisIndex;
				for (var i = 0; i < wb.worksheets().count(); i++) {
					var ws = wb.worksheets()._item(i);
					ws.displayOptions()._isTabSelected(ws.displayOptions().visibility() == $.ig.excel.WorksheetVisibility.visible && i >= first && i <= last);
				}
			} else if (isLeftButton == false && this.___worksheet.displayOptions()._isTabSelected()) {
				wb.windowOptions()._setSelectedWorksheet(this.___worksheet, false);
			} else {
				var clearSelection = wb.windowOptions().selectedWorksheet() != this.___worksheet && $.ig.SpreadsheetUtilities.prototype.areAllVisibleSheetsSelected(this.___worksheet.workbook());
				wb.windowOptions()._setSelectedWorksheet(this.___worksheet, clearSelection);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::OnMouseDown(System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::VerifyState()" />*/
	_verifyState: function () {
		this._name(this.___worksheet.name());
		this._colorInfo(this.___worksheet.displayOptions().tabColorInfo());
		this._visibility(this.___worksheet.displayOptions().visibility());
		this._isProtected(this.___worksheet.isProtected());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabInfo::VerifyState()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabInfo', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1" />*/

$.ig.util.defType('SpreadsheetTabItemLayoutManager$1', 'Object', {
	$tVisual: null,
	__tabManager: null,
	__listener: null,
	__tabs: null,
	__bringActiveIntoView: false,
	__tabBeingDragged: null,
	__newTabIndex: 0,
	__dragScrollTimer: null,
	__dragScrollPrevious: false,
	__isPositionIndicatorPending: false,
	__dragStartTimer: null,
	__mouseDownPoint: null,
	init: function ($tVisual) {
		this.$tVisual = $tVisual;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tVisual);
		}
		$.ig.Object.prototype.init.call(this);
		this.__listener = new $.ig.PropertyChangeListener$1($.ig.SpreadsheetTabItemLayoutManager$1.prototype.$type.specialize(this.$tVisual), this, this.onPrivateSubObjectPropertyChanged.runOn(this), false);
		this.__tabs = new $.ig.List$1(this.$tVisual, 0);
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::TabBeingDragged()" />*/
	tabBeingDragged: function () {
		return this.__tabBeingDragged;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::TabBeingDragged()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::TabManager()" />*/
	tabManager: function (value) {
		if (arguments.length === 1) {
			if (value != this.__tabManager) {
				var old = this.__tabManager;
				this.endDrag(true);
				var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetTabManager.prototype.$type, this.__tabManager, value, this.__listener, true);
				this.__tabManager = $ret.p0;
				this.onTabManagerChanged(old, value);
			}
			return value;
		} else {
			return this.__tabManager;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::TabManager()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::TabVisuals()" />*/
	tabVisuals: function () {
		return this.__tabs;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::TabVisuals()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	onTabManagerChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	getTab: function (visual) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetRelativePosition(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual, System.Double, System.Double)" />*/
	getRelativePosition: function (visual, x, y) {
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetRelativePosition(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CaptureMouse()" />*/
	captureMouse: function () {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CaptureMouse()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnDragStarted()" />*/
	onDragStarted: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnDragStarted()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::PositionDropIndicator()" />*/
	positionDropIndicator: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::PositionDropIndicator()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetTabItemAreaWidth()" />*/
	getTabItemAreaWidth: function () {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetTabItemAreaWidth()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CreateVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	createVisual: function (tab) {
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CreateVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	removeVisual: function (visual) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetDesiredItemWidth(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	getDesiredItemWidth: function (visual) {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetDesiredItemWidth(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetDesiredItemHeight()" />*/
	getDesiredItemHeight: function () {
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetDesiredItemHeight()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ArrangeVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual, System.Windows.Rect)" />*/
	arrangeVisual: function (visual, arrangeRect) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ArrangeVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::InvalidateArrange()" />*/
	invalidateArrange: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::InvalidateArrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnDragEnded()" />*/
	onDragEnded: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnDragEnded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::VerifyItemDesiredSizes()" />*/
	verifyItemDesiredSizes: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::VerifyItemDesiredSizes()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::Spreadsheet()" />*/
	spreadsheet: function () {
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::Spreadsheet()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ReleaseMouseCapture()" />*/
	releaseMouseCapture: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ReleaseMouseCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CaptureMouseForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	captureMouseForTab: function (tab) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CaptureMouseForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ReleaseMouseCaptureForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	releaseMouseCaptureForTab: function (tab) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ReleaseMouseCaptureForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::Arrange(System.Double, System.Double)" />*/
	arrange: function (finalWidth, finalHeight) {
		var rect = new $.ig.Rect(0, 0, 0, 0, finalHeight);
		if (this.__tabManager != null) {
			this.__tabManager._actualWidth(finalWidth);
		}
		if (this.__tabs.count() > 0) {
			if (this.__bringActiveIntoView && this.__tabManager._activeTab() != null) {
				this.__tabManager._bringIntoView(this.__tabManager._activeTab()._index());
			}
			var startingIndex = Math.min(this.__tabManager._firstVisibleTabIndex(), this.__tabs.count() - 1);
			var count = this.__tabs.count();
			var availableWidth = finalWidth;
			var tabsOutOfView = 0;
			var visibleTabs = 0;
			for (var i = startingIndex; i < count; i++) {
				if (rect.width() > 0) {
					rect.x(rect.x() + (Math.max(rect.width() + this.__tabManager._interTabSpacing(), 0)));
				}
				var tab = this.__tabs.__inner[i];
				rect.width(this.getTab(tab)._actualWidth());
				this.arrangeVisual(tab, rect);
				if (rect.width() > 0) {
					visibleTabs++;
					if (availableWidth < 0) {
						tabsOutOfView++;
					}
				}
				availableWidth -= rect.width();
			}
			var isNextOutOfView = rect.right() > finalWidth && (tabsOutOfView > 0 || visibleTabs > 1);
			this.__tabManager._isNextItemOutOfView(isNextOutOfView);
			rect.x(0);
			for (var i1 = startingIndex - 1; i1 >= 0; i1--) {
				var tab1 = this.__tabs.__inner[i1];
				rect.width(this.getTab(tab1)._actualWidth());
				rect.x(rect.x() - (Math.max(rect.width() + this.__tabManager._interTabSpacing(), 0)));
				this.arrangeVisual(tab1, rect);
			}
			this.__tabManager._isPreviousItemOutOfView(rect.x() < 0);
		}
		if (this.__isPositionIndicatorPending) {
			this.positionDropIndicatorInternal();
		}
		this.__bringActiveIntoView = false;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::Arrange(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::InvalidateLayout()" />*/
	invalidateLayout: function () {
		this.invalidateMeasure();
		this.invalidateArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::InvalidateLayout()" />*/
	,
	/*<BeginMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::Measure()" />*/
	measure: function () {
		var $self = this;
		var desired = new $.ig.Size(0);
		var oldItems = $.ig.Enumerable.prototype.toDictionary$2(this.$tVisual, $.ig.SpreadsheetTabInfo.prototype.$type, this.__tabs, function (t) { return $self.getTab(t); });
		this.__tabs.clear();
		if (this.__tabManager != null) {
			var firstVisibleIdx = this.__tabManager._firstVisibleTabIndex();
			var en = this.__tabManager._tabs().getEnumerator();
			while (en.moveNext()) {
				var tabInfo = en.current();
				var tabItem;
				if ((function () { var $ret = oldItems.tryGetValue(tabInfo, tabItem); tabItem = $ret.p1; return $ret.ret; }())) {
					oldItems.remove(tabInfo);
				} else {
					tabItem = this.createVisual(tabInfo);
					tabInfo._element($.ig.util.getBoxIfEnum(this.$tVisual, tabItem));
				}
				this.__tabs.add(tabItem);
			}
			this.verifyItemDesiredSizes();
			var en1 = this.__tabs.getEnumerator();
			while (en1.moveNext()) {
				var tabItem1 = en1.current();
				var tabInfo1 = this.getTab(tabItem1);
				var tabItemDesiredWidth = tabInfo1._visibility() == $.ig.excel.WorksheetVisibility.visible ? this.getDesiredItemWidth(tabItem1) : 0;
				tabInfo1._actualWidth(tabItemDesiredWidth);
				if (tabInfo1._index() >= firstVisibleIdx) {
					if (desired.width() > 0) {
						desired.width(desired.width() + (Math.max(tabItemDesiredWidth + this.__tabManager._interTabSpacing(), 0)));
					} else {
						desired.width(desired.width() + tabItemDesiredWidth);
					}
				}
			}
			desired.height(this.getDesiredItemHeight());
		}
		var en2 = oldItems.getEnumerator();
		while (en2.moveNext()) {
			var oldPair = en2.current();
			this.removeVisual(oldPair.value());
			if ($.ig.Object.prototype.equalsStatic($.ig.util.getBoxIfEnum(this.$tVisual, oldPair.value()), oldPair.key()._element())) {
				oldPair.key()._element(null);
			}
		}
		return desired;
	}
	/*<EndMethod Name="System.Windows.Size Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::Measure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnLostMouseCapture()" />*/
	onLostMouseCapture: function () {
		this.endDrag(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnLostMouseCapture()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnLostMouseCaptureForTab()" />*/
	onLostMouseCaptureForTab: function () {
		this.clearMouseDownTabOffset();
		this.cancelDragTimer();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnLostMouseCaptureForTab()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (mouseProxy) {
		this.endDrag(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseDownTab(Infragistics.Controls.Core.InputProxy, Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	onMouseDownTab: function (mouseProxy, tabItem) {
		var $self = this;
		this.cancelDragTimer();
		var spreadsheet = this.spreadsheet();
		var tab = this.getTab(tabItem);
		if (spreadsheet != null && tab != null) {
			switch (mouseProxy.getChangeType()) {
				case $.ig.InputContactChangeType.prototype.mouseRightButton:
					{
						if (!this.isEditingTab(tabItem) && spreadsheet != null && spreadsheet._tryExitEditMode(true) && spreadsheet._viewResolved().focus()) {
							tab._onMouseDown(false, false, false);
							spreadsheet._viewResolved().ShowTabContextMenu(tab, mouseProxy.getRelativePoint());
						}
						return true;
					}
				case $.ig.InputContactChangeType.prototype.mouseLeftButton:
					{
						this.clearMouseDownTabOffset();
						if (mouseProxy.getInputClickCount() == 2 && spreadsheet._tabEditManager().isEditingSupported() && tab._isActive()) {
							this.releaseMouseCaptureForTab(tabItem);
							spreadsheet._executeCommand1($.ig.spreadsheet.SpreadsheetAction.renameWorksheet, null, $.ig.util.getBoxIfEnum(this.$tVisual, tabItem));
						} else if (!this.isEditingTab(tabItem) && !spreadsheet._tryExitEditMode(true)) {
						} else if (!spreadsheet._viewResolved().focus()) {
						} else {
							var modifiers = mouseProxy.getModifierKeys();
							var isCtrlKeyDown = (modifiers & $.ig.ModifierKeys.prototype.control) == $.ig.ModifierKeys.prototype.control;
							var isShiftKeyDown = (modifiers & $.ig.ModifierKeys.prototype.shift) == $.ig.ModifierKeys.prototype.shift;
							if (isCtrlKeyDown == false && mouseProxy.isInputContactPressed()) {
								this.__mouseDownPoint = mouseProxy.getRelativePoint();
								if (!this.captureMouseForTab(tabItem)) {
									this.clearMouseDownTabOffset();
								} else {
									this.__dragStartTimer = new $.ig.TimedOperation(function () { $self.onStartTabDragTimeout(tabItem); }, $.ig.SpreadsheetUtilities.prototype.doubleClickTimeInMs());
								}
							}
							tab._onMouseDown(isCtrlKeyDown, isShiftKeyDown, true);
						}
						return true;
					}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseDownTab(Infragistics.Controls.Core.InputProxy, Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseLeftButtonUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseLeftButtonUp: function (mouseProxy) {
		if (this.__tabBeingDragged != null) {
			this.endDrag(false);
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseLeftButtonUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (mouseProxy) {
		if (this.__tabBeingDragged != null) {
			var pt = mouseProxy.getRelativePoint();
			this.__isPositionIndicatorPending = true;
			var originalIndex = this.__newTabIndex;
			if (pt.__x < 0) {
				this.startDragScrollTimer(true);
				this.__newTabIndex = this.__tabManager._firstVisibleTabIndex();
			} else if (pt.__x > this.getTabItemAreaWidth()) {
				this.startDragScrollTimer(false);
				this.__newTabIndex = this.__tabManager._getLastFullyVisibleTab() + 1;
			} else {
				this.stopDragScrollTimer();
				this.__newTabIndex = this.getTabFromPoint(pt.__x);
			}
			if (originalIndex != this.__newTabIndex) {
				this.positionDropIndicatorInternal();
			}
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseMoveTab(Infragistics.Controls.Core.InputProxy, Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	onMouseMoveTab: function (mouseProxy, tabItem) {
		if (this.__dragStartTimer != null && $.ig.Point.prototype.l_op_Inequality(this.__mouseDownPoint, null)) {
			var pt = mouseProxy.getRelativePoint();
			var mouseDownPoint = this.__mouseDownPoint;
			if (Math.abs(pt.__x - mouseDownPoint.__x) > 16 || Math.abs(pt.__y - mouseDownPoint.__y) > 16) {
				this.startTabDrag(tabItem);
			}
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseMoveTab(Infragistics.Controls.Core.InputProxy, Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseUpTab(Infragistics.Controls.Core.InputProxy, Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	onMouseUpTab: function (mouseProxy, tabItem) {
		if (this.__dragStartTimer != null || $.ig.Point.prototype.l_op_Inequality(this.__mouseDownPoint, null)) {
			this.cancelDragTimer();
			this.releaseMouseCaptureForTab(tabItem);
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnMouseUpTab(Infragistics.Controls.Core.InputProxy, Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CalculateDropIndicatorPosition(System.Double, System.Double)" />*/
	calculateDropIndicatorPosition: function (contentWidth, contentHeight) {
		var relativeTab;
		var x = 0;
		if (this.__newTabIndex < this.__tabManager._firstVisibleTabIndex()) {
			relativeTab = this.__tabs.__inner[this.__tabManager._firstVisibleTabIndex()];
		} else if (this.__newTabIndex >= this.__tabs.count()) {
			relativeTab = $.ig.Enumerable.prototype.last$1(this.$tVisual, this.__tabs);
			x = this.getTab(relativeTab)._actualWidth();
		} else {
			relativeTab = this.__tabs.__inner[this.__newTabIndex];
		}
		var offset = this.getRelativePosition(relativeTab, x, 0).__x;
		return new $.ig.Rect(0, offset - contentWidth / 2, -contentHeight, contentWidth, contentHeight);
	}
	/*<EndMethod Name="System.Windows.Rect Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CalculateDropIndicatorPosition(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CancelDragTimer()" />*/
	cancelDragTimer: function () {
		if (this.__dragStartTimer != null) {
			this.__dragStartTimer.cancel();
			this.__dragStartTimer = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::CancelDragTimer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ClearMouseDownTabOffset()" />*/
	clearMouseDownTabOffset: function () {
		this.__mouseDownPoint = null;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::ClearMouseDownTabOffset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::EndDrag(System.Boolean)" />*/
	endDrag: function (cancel) {
		if (this.__tabBeingDragged != null) {
			var newIndex = this.__newTabIndex;
			var tab = this.__tabBeingDragged;
			this.__newTabIndex = -1;
			this.__isPositionIndicatorPending = false;
			this.__tabBeingDragged = null;
			this.releaseMouseCapture();
			this.stopDragScrollTimer();
			this.onDragEnded();
			if (!cancel) {
				var wb = this.__tabManager._workbook();
				if (wb != null) {
					var tabsToMove = $.ig.Enumerable.prototype.toArray$1($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.Enumerable.prototype.orderByDescending$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.Number.prototype.$type, this.__tabManager._selectedTabs(), function (t) { return t._index(); }));
					var hasChanged = newIndex != tab._index() && newIndex != (tab._index() + 1);
					if (hasChanged) {
						for (var i = 0; i < tabsToMove.length; i++) {
							var tabToMove = tabsToMove[i];
							if (tabToMove._index() < newIndex) {
								newIndex--;
							}
							tabToMove._worksheet().moveToIndex(newIndex);
						}
						var activeTab = this.__tabManager._activeTab();
						if (activeTab != null) {
							if (this.__tabManager._selectedTabs().count() > 1) {
								var otherSheets = $.ig.Enumerable.prototype.toArray$1($.ig.SpreadsheetTabInfo.prototype.$type, this.__tabManager._selectedTabs());
								for (var i1 = 0; i1 < otherSheets.length; i1++) {
									var other = otherSheets[i1];
									if (other != activeTab) {
										other._worksheet().displayOptions()._isTabSelected(false);
									}
								}
							}
							this.requestBringIntoView(activeTab);
						}
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::EndDrag(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetTabFromPoint(System.Double)" />*/
	getTabFromPoint: function (pos) {
		var startingIndex = Math.min(this.__tabManager._firstVisibleTabIndex(), this.__tabs.count() - 1);
		var count = this.__tabs.count();
		var width = 0;
		var x = 0;
		for (var i = startingIndex; i < count; i++) {
			x += Math.max(width + this.__tabManager._interTabSpacing(), 0);
			var tab = this.__tabs.__inner[i];
			width = this.getTab(tab)._actualWidth();
			if (width > 0 && pos <= x + width) {
				return i;
			}
		}
		return this.__tabs.count();
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::GetTabFromPoint(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::IsEditingTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	isEditingTab: function (tabItem) {
		var tab = this.getTab(tabItem);
		return tab != null && tab == this.__tabManager._tabInEdit();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::IsEditingTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnDragScrollTimerTick(System.Object, System.EventArgs)" />*/
	onDragScrollTimerTick: function (sender, e) {
		if (this.__dragScrollPrevious && this.__tabManager._isPreviousItemOutOfView()) {
			this.spreadsheet()._executeCommand1($.ig.spreadsheet.SpreadsheetAction.scrollPreviousWorksheet, null, null);
			this.__isPositionIndicatorPending = true;
			this.__newTabIndex = this.__tabManager._firstVisibleTabIndex();
		} else if (!this.__dragScrollPrevious && this.__tabManager._isNextItemOutOfView()) {
			this.spreadsheet()._executeCommand1($.ig.spreadsheet.SpreadsheetAction.scrollNextWorksheet, null, null);
			this.__isPositionIndicatorPending = true;
			this.__newTabIndex = this.__tabManager._getLastFullyVisibleTab() + 1;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnDragScrollTimerTick(System.Object, System.EventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onPrivateSubObjectPropertyChanged1: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (this.__tabManager._isSelectedTabsSource(sender) || this.__tabManager._isTabsSource(sender)) {
					this.invalidateMeasure();
					this.invalidateArrange();
				}
				break;
			case "FirstVisibleTabIndex":
			case "InterTabSpacing":
				if (sender == this.tabManager()) {
					this.cancelDragTimer();
					this.invalidateMeasure();
					this.invalidateArrange();
				}
				break;
			case "ActiveTab":
				if (sender == this.tabManager()) {
					this.__bringActiveIntoView = true;
					this.invalidateArrange();
				}
				break;
			case "Visibility":
				if ($.ig.util.cast($.ig.SpreadsheetTabInfo.prototype.$type, sender) !== null) {
					this.invalidateMeasure();
					this.invalidateArrange();
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnPrivateSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager, System.Object, System.String, System.Object)" />*/
	onPrivateSubObjectPropertyChanged: function (panel, sender, property, extraInfo) {
		panel.onPrivateSubObjectPropertyChanged1(sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnPrivateSubObjectPropertyChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager, System.Object, System.String, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnStartTabDragTimeout(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	onStartTabDragTimeout: function (visual) {
		this.startTabDrag(visual);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::OnStartTabDragTimeout(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::PositionDropIndicatorInternal()" />*/
	positionDropIndicatorInternal: function () {
		this.__isPositionIndicatorPending = false;
		this.positionDropIndicator();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::PositionDropIndicatorInternal()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::RequestBringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	requestBringIntoView: function (tab) {
		if (tab != null) {
			if (tab._isActive()) {
				this.__bringActiveIntoView = true;
				this.invalidateArrange();
				return true;
			} else if (tab != null) {
				this.__tabManager._bringIntoView(tab._index());
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::RequestBringIntoView(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StartDrag(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual, System.Windows.Point)" />*/
	startDrag: function (sheetTabItem, pt) {
		this.endDrag(true);
		this.__tabBeingDragged = this.getTab(sheetTabItem);
		this.__newTabIndex = this.__tabBeingDragged._index();
		if (!this.captureMouse()) {
			this.__tabBeingDragged = null;
		} else if (this.__tabBeingDragged != null) {
			this.onDragStarted();
			this.positionDropIndicatorInternal();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StartDrag(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StartDragScrollTimer(System.Boolean)" />*/
	startDragScrollTimer: function (previous) {
		this.__dragScrollPrevious = previous;
		if (this.__dragScrollTimer == null) {
			this.__dragScrollTimer = new $.ig.PlatformTimer();
			this.__dragScrollTimer.interval(250);
			var $t = this.__dragScrollTimer;
			$t.tick = $.ig.Delegate.prototype.combine($t.tick, this.onDragScrollTimerTick.runOn(this));
		}
		if (this.__dragScrollTimer.isEnabled() == false) {
			this.__dragScrollTimer.start();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StartDragScrollTimer(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StartTabDrag(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	startTabDrag: function (visual) {
		var pt = this.__mouseDownPoint;
		this.cancelDragTimer();
		this.releaseMouseCaptureForTab(visual);
		var tab = this.getTab(visual);
		if (tab != null) {
			if (tab._worksheet().workbook() == null || tab._worksheet().workbook().protection().allowEditStructure() == false) {
				return;
			}
		}
		var ss = this.spreadsheet();
		if (ss != null && ss._tryExitEditMode(true)) {
			this.startDrag(visual, pt);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StartTabDrag(Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager.TVisual)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StopDragScrollTimer()" />*/
	stopDragScrollTimer: function () {
		if (this.__dragScrollTimer != null) {
			this.__dragScrollTimer.stop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1::StopDragScrollTimer()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabItemLayoutManager$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemLayoutManager`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager" />*/

$.ig.util.defType('SpreadsheetTabManager', 'PropertyChangeNotifierExtended', {
	___workbook: null,
	___deferredValidationOperation: null,
	___pendingChanges: null,
	___tabsSource: null,
	___tabs: null,
	___activeTab: null,
	___selectedSheets: null,
	___selectedTabs: null,
	___visibleTabs: null,
	___tabInEdit: null,
	___zIndexOrderedTabs: null,
	___scrollBars: 0,
	___isVisible: false,
	___width: 0,
	___firstVisibleTabIndex: 0,
	___interTabSpacing: 0,
	___actualWidth: 0,
	___extraAvailableWidth: 0,
	___flags: 0,
	init: function () {
		this.___interTabSpacing = $.ig.SpreadsheetTabManager.prototype._defaultInterTabSpacing;
		$.ig.PropertyChangeNotifierExtended.prototype.init.call(this);
		var $ret = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.SpreadsheetTabInfo.prototype.$type), this.___tabsSource, new $.ig.ObservableCollectionExtended$1($.ig.SpreadsheetTabInfo.prototype.$type, 0), this, false);
		this.___tabsSource = $ret.p0;
		this.___tabs = new $.ig.ReadOnlyNotifyCollection$1($.ig.SpreadsheetTabInfo.prototype.$type, this.___tabsSource);
		this.___deferredValidationOperation = new $.ig.DeferredOperation(this._verifyState.runOn(this));
		this.___pendingChanges = new $.ig.List$1($.ig.ChangeInfo.prototype.$type, 0);
		var $ret1 = $.ig.PropertyChangeListenerList.prototype.manageListenerHelper$1($.ig.SpreadsheetTabManager_SelectedTabsCollection.prototype.$type, this.___selectedSheets, new $.ig.SpreadsheetTabManager_SelectedTabsCollection(this), this, false);
		this.___selectedSheets = $ret1.p0;
		this.___selectedTabs = new $.ig.ReadOnlyNotifyCollection$1($.ig.SpreadsheetTabInfo.prototype.$type, this.___selectedSheets);
		this.___visibleTabs = new $.ig.SpreadsheetTabManager_VisibleTabsCollection(this.___tabs);
		this.___zIndexOrderedTabs = new $.ig.SpreadsheetTabManager_ZIndexTabsCollection(this.___tabs);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	onSubObjectPropertyChanged: function (sender, property, extraInfo) {
		switch (property != null ? property : "") {
			case "FirstVisibleTabIndex":
				if (sender == this && this.___workbook != null) {
					this.___workbook.windowOptions().firstVisibleTabIndex(this._firstVisibleTabIndex());
				}
				break;
			case "Width":
				if (sender == this && this.___workbook != null) {
					this.___workbook.windowOptions().tabBarWidth(this._width());
				}
				break;
			case "Add":
			case "Remove":
			case "Replace":
			case "Move":
			case "Reset":
				if (sender == this.___tabsSource) {
					this.___zIndexOrderedTabs._dirty();
				}
				break;
			case "ZIndex":
				if ($.ig.util.cast($.ig.SpreadsheetTabInfo.prototype.$type, sender) !== null) {
					this.___zIndexOrderedTabs._dirty();
				}
				break;
		}
		$.ig.PropertyChangeNotifierExtended.prototype.onSubObjectPropertyChanged.call(this, sender, property, extraInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::OnSubObjectPropertyChanged(System.Object, System.String, System.Object)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ActiveTab()" />*/
	_activeTab: function (value) {
		if (arguments.length === 1) {
			if (this.___activeTab != value) {
				if (this.___activeTab != null) {
					this.___activeTab._isActive(false);
				}
				this.___activeTab = value;
				if (this.___activeTab != null) {
					this.___activeTab._isActive(true);
				}
				this.onPropertyChanged("ActiveTab");
				if (this.___workbook != null) {
					$.ig.Debug.prototype.assert(value != null || this.___tabs.count() == 0);
					if (value != null) {
						this.___workbook.windowOptions()._setSelectedWorksheet(value._worksheet(), false);
					}
				}
			}
			return value;
		} else {
			return this.___activeTab;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ActiveTab()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ActualWidth()" />*/
	_actualWidth: function (value) {
		if (arguments.length === 1) {
			if (this.___actualWidth != value) {
				this.___actualWidth = value;
				this.onPropertyChanged("ActualWidth");
			}
			return value;
		} else {
			return this.___actualWidth;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ActualWidth()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ExtraAvailableWidth()" />*/
	_extraAvailableWidth: function (value) {
		if (arguments.length === 1) {
			if (this.___extraAvailableWidth != value) {
				this.___extraAvailableWidth = value;
				this.onPropertyChanged("ExtraAvailableWidth");
			}
			return value;
		} else {
			return this.___extraAvailableWidth;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ExtraAvailableWidth()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::FirstVisibleTabIndex()" />*/
	_firstVisibleTabIndex: function (value) {
		if (arguments.length === 1) {
			if (this.___firstVisibleTabIndex != value) {
				this.___firstVisibleTabIndex = value;
				this.onPropertyChanged("FirstVisibleTabIndex");
			}
			return value;
		} else {
			return this.___firstVisibleTabIndex;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::FirstVisibleTabIndex()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabManager::InterTabSpacing()" />*/
	_interTabSpacing: function (value) {
		if (arguments.length === 1) {
			if (!$.ig.util.isNaN(value)) {
				if (this.___interTabSpacing != value) {
					this.___interTabSpacing = value;
					this.onPropertyChanged("InterTabSpacing");
				}
			}
			return value;
		} else {
			return this.___interTabSpacing;
		}
	}
	/*<EndProperty Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabManager::InterTabSpacing()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsNextItemOutOfView()" />*/
	_isNextItemOutOfView: function (value) {
		if (arguments.length === 1) {
			this._setNotificationFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.isNextItemOutOfView, value);
			return value;
		} else {
			return this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.isNextItemOutOfView);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsNextItemOutOfView()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsPreviousItemOutOfView()" />*/
	_isPreviousItemOutOfView: function (value) {
		if (arguments.length === 1) {
			this._setNotificationFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.isPreviousItemOutOfView, value);
			return value;
		} else {
			return this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.isPreviousItemOutOfView);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsPreviousItemOutOfView()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsVisible()" />*/
	_isVisible: function (value) {
		if (arguments.length === 1) {
			if (this.___isVisible != value) {
				this.___isVisible = value;
				this.onPropertyChanged("IsVisible");
			}
			return value;
		} else {
			return this.___isVisible;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsVisible()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ReverseZIndex()" />*/
	_reverseZIndex: function (value) {
		if (arguments.length === 1) {
			if (this._setNotificationFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.reverseZIndex, value)) {
				this._queueInvalidation($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabItemStateChanged);
			}
			return value;
		} else {
			return this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.reverseZIndex);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ReverseZIndex()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ReadOnlyNotifyCollection Infragistics.Controls.Grids.Core.SpreadsheetTabManager::SelectedTabs()" />*/
	_selectedTabs: function () {
		return this.___selectedTabs;
	}
	/*<EndProperty Name="Infragistics.Collections.ReadOnlyNotifyCollection Infragistics.Controls.Grids.Core.SpreadsheetTabManager::SelectedTabs()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.ScrollBars Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ScrollBars()" />*/
	_scrollBars: function (value) {
		if (arguments.length === 1) {
			if (this.___scrollBars != value) {
				this.___scrollBars = value;
				this.onPropertyChanged("ScrollBars");
			}
			return value;
		} else {
			return this.___scrollBars;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.ScrollBars Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ScrollBars()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabManager::TabInEdit()" />*/
	_tabInEdit: function (value) {
		if (arguments.length === 1) {
			if (value != this.___tabInEdit) {
				var old = this.___tabInEdit;
				this.___tabInEdit = value;
				if (old != null) {
					old._isEditing(false);
				}
				if (this.___tabInEdit != null) {
					this.___tabInEdit._isEditing(true);
				}
				this.onPropertyChanged("TabInEdit");
			}
			return value;
		} else {
			return this.___tabInEdit;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabManager::TabInEdit()" />*/
	,
	/*<BeginProperty Name="Infragistics.Collections.ReadOnlyNotifyCollection Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Tabs()" />*/
	_tabs: function () {
		return this.___tabs;
	}
	/*<EndProperty Name="Infragistics.Collections.ReadOnlyNotifyCollection Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Tabs()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetTabManager::VisibleTabs()" />*/
	_visibleTabs: function () {
		return this.___visibleTabs;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetTabManager::VisibleTabs()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Width()" />*/
	_width: function (value) {
		if (arguments.length === 1) {
			if (this.___width != value) {
				this.___width = value;
				this.onPropertyChanged("Width");
			}
			return value;
		} else {
			return this.___width;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Width()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Workbook()" />*/
	_workbook: function (value) {
		if (arguments.length === 1) {
			if (value != this.___workbook) {
				this.___workbook = value;
				this._queueInvalidation($.ig.SpreadsheetTabManager_InternalFlags.prototype.workbook);
			}
			return value;
		} else {
			return this.___workbook;
		}
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Workbook Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Workbook()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ZIndexOrderedTabs()" />*/
	_zIndexOrderedTabs: function () {
		return this.___zIndexOrderedTabs;
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ZIndexOrderedTabs()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::BringIntoView(System.Int32)" />*/
	_bringIntoView: function (index) {
		if (index < this._firstVisibleTabIndex()) {
			this._firstVisibleTabIndex(index);
		} else {
			var lastVisible = this._getLastFullyVisibleTab1(this._actualWidth() + this._extraAvailableWidth());
			if (lastVisible < index) {
				this._firstVisibleTabIndex(this._getFirstVisibleTabForLastIndex(index));
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::BringIntoView(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Execute(Infragistics.Controls.Grids.Core.SheetTabAction)" />*/
	_execute: function (action) {
		if (this.___workbook == null) {
			return;
		}
		this._verifyState();
		var origIndex = this.___firstVisibleTabIndex;
		var activeIndex = this.___activeTab != null ? this.___activeTab._index() : -1;
		switch (action) {
			case $.ig.SheetTabAction.prototype.scrollNext:
				this._firstVisibleTabIndex(this._getVisibleTab(origIndex + 1, true, origIndex));
				break;
			case $.ig.SheetTabAction.prototype.scrollPrevious:
				this._firstVisibleTabIndex(this._getVisibleTab(origIndex - 1, false, origIndex));
				break;
			case $.ig.SheetTabAction.prototype.scrollFirst:
				this._firstVisibleTabIndex(this._getVisibleTab(0, true, origIndex));
				break;
			case $.ig.SheetTabAction.prototype.scrollLast:
				var newFirstIndex = this._getFirstVisibleTabForLastIndex(this._tabs().count() - 1);
				if (this._firstVisibleTabIndex() < newFirstIndex || this._firstVisibleTabIndex() >= this._tabs().count()) {
					this._firstVisibleTabIndex(newFirstIndex);
				}
				break;
			case $.ig.SheetTabAction.prototype.activateNextOutOfView:
				this._activateAdjacent(this._getLastFullyVisibleTab1(this._actualWidth()) + 1, true, false);
				break;
			case $.ig.SheetTabAction.prototype.activatePreviousOutOfView:
				this._activateAdjacent(this._firstVisibleTabIndex() - 1, false, false);
				break;
			case $.ig.SheetTabAction.prototype.activateNext:
				this._activateAdjacent(activeIndex + 1, true, false);
				break;
			case $.ig.SheetTabAction.prototype.activatePrevious:
				this._activateAdjacent(activeIndex - 1, false, false);
				break;
			case $.ig.SheetTabAction.prototype.activateAndSelectNext:
				this._activateAdjacent(activeIndex + 1, true, true);
				break;
			case $.ig.SheetTabAction.prototype.activateAndSelectPrevious:
				this._activateAdjacent(activeIndex - 1, false, true);
				break;
			case $.ig.SheetTabAction.prototype.addNewSheet:
				this._addNewSheets(1, activeIndex + 1);
				break;
			case $.ig.SheetTabAction.prototype.insertNewSheets:
				this._addNewSheets(Math.max(this.___selectedSheets.count(), 1), Math.max(activeIndex, 0));
				break;
			case $.ig.SheetTabAction.prototype.selectAllSheets:
				{
					this.___selectedSheets.beginUpdate();
					this.___selectedSheets.clear();
					var en = this.___tabs.getEnumerator();
					while (en.moveNext()) {
						var tab = en.current();
						if (tab._visibility() == $.ig.excel.WorksheetVisibility.visible) {
							this.___selectedSheets.add(tab);
						}
					}
					this.___selectedSheets.endUpdate();
					this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged, true);
				}
				break;
			case $.ig.SheetTabAction.prototype.unselectSheets:
				{
					var active = this.___activeTab;
					this.___selectedSheets.beginUpdate();
					this.___selectedSheets.clear();
					if (this.___activeTab != null) {
						this.___selectedSheets.add(this.___activeTab);
					}
					this.___selectedSheets.endUpdate();
					this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged, true);
				}
				break;
			case $.ig.SheetTabAction.prototype.deleteWorksheets:
				{
					var worksheets = this.___workbook.worksheets();
					var sheetsToDelete = $.ig.Enumerable.prototype.toArray$1($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.excel.Worksheet.prototype.$type, this.___selectedTabs, function (t) { return t._worksheet(); }));
					var oldActiveIndex = activeIndex;
					var newActiveIndex = oldActiveIndex;
					for (var i = 0; i < sheetsToDelete.length; i++) {
						var sheet = sheetsToDelete[i];
						if (sheet.index() < oldActiveIndex) {
							newActiveIndex--;
						}
					}
					for (var i1 = 0; i1 < sheetsToDelete.length; i1++) {
						var sheet1 = sheetsToDelete[i1];
						worksheets.remove(sheet1);
					}
					if (worksheets.count() > 0) {
						var newActiveSheet = $.ig.Enumerable.prototype.firstOrDefault$11($.ig.excel.Worksheet.prototype.$type, $.ig.Enumerable.prototype.skip$1($.ig.excel.Worksheet.prototype.$type, worksheets, newActiveIndex), function (w) { return w.displayOptions().visibility() == $.ig.excel.WorksheetVisibility.visible; });
						if (newActiveSheet == null) {
							for (var i2 = newActiveIndex - 1; i2 >= 0; i2--) {
								if (worksheets._item(i2).displayOptions().visibility() == $.ig.excel.WorksheetVisibility.visible) {
									newActiveSheet = worksheets._item(i2);
									break;
								}
							}
						}
						if (newActiveSheet != null) {
							this.___workbook.windowOptions().selectedWorksheet(newActiveSheet);
						}
					}
					break;
				}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::Execute(Infragistics.Controls.Grids.Core.SheetTabAction)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetLastFullyVisibleTab()" />*/
	_getLastFullyVisibleTab: function () {
		return this._getLastFullyVisibleTab1(this._actualWidth());
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetLastFullyVisibleTab()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetVisibleTab(System.Int32, System.Boolean, System.Int32)" />*/
	_getVisibleTab: function (startIndex, next, fallback) {
		if (startIndex >= 0 && startIndex < this.___tabs.count()) {
			var end = next ? this.___tabs.count() : -1;
			var offset = next ? 1 : -1;
			for (var i = startIndex; i != end; i += offset) {
				if (this.___tabs.item(i)._visibility() == $.ig.excel.WorksheetVisibility.visible) {
					return i;
				}
			}
		}
		return fallback;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetVisibleTab(System.Int32, System.Boolean, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsSelectedTabsSource(System.Object)" />*/
	_isSelectedTabsSource: function (sender) {
		return sender == this.___selectedSheets || sender == this.___selectedTabs;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsSelectedTabsSource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsTabsSource(System.Object)" />*/
	_isTabsSource: function (sender) {
		return sender == this.___tabs || sender == this.___tabsSource;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsTabsSource(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::NotifyChange(Infragistics.Documents.Excel.ChangeInfo)" />*/
	_notifyChange: function (change) {
		if ($.ig.SpreadsheetTabManager.prototype._isPotentialChange(change._changeType)) {
			this.___pendingChanges.add(change);
			this.___deferredValidationOperation.startAsyncOperation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::NotifyChange(Infragistics.Documents.Excel.ChangeInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::OnEnterEdit(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	_onEnterEdit: function (tabInEdit) {
		$.ig.Debug.prototype.assert1(tabInEdit != null, "Invalid tab in edit");
		this._tabInEdit(tabInEdit);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::OnEnterEdit(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::OnExitEdit()" />*/
	_onExitEdit: function () {
		this._tabInEdit(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::OnExitEdit()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::VerifyState()" />*/
	_verifyState: function () {
		var $self = this;
		this.___deferredValidationOperation.cancelPendingOperation();
		this._processPendingChanges();
		this.___tabsSource.beginUpdate();
		this.___selectedSheets.beginUpdate();
		if (this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabsChanged)) {
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabsChanged, false);
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.activeChanged | $.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged | $.ig.SpreadsheetTabManager_InternalFlags.prototype.tabItemStateChanged, true);
			this._verifyTabs();
		}
		if (this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.activeChanged)) {
			if (this.___workbook == null) {
				this._activeTab(null);
			} else {
				this._activeTab($.ig.Enumerable.prototype.firstOrDefault$11($.ig.SpreadsheetTabInfo.prototype.$type, this.___tabs, function (t) { return t._worksheet() == $self.___workbook.windowOptions().selectedWorksheet(); }));
			}
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged, true);
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.activeChanged, false);
		}
		if (this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged)) {
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged, false);
			var rebuildSelection = false;
			var en = this.___tabs.getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				if (tab._isSelected() != tab._worksheet().displayOptions()._isTabSelected()) {
					rebuildSelection = true;
					break;
				}
			}
			if (rebuildSelection) {
				var newSelection = $.ig.Enumerable.prototype.toArray$1($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.Enumerable.prototype.where$1($.ig.SpreadsheetTabInfo.prototype.$type, this.___tabs, function (t) { return t._worksheet().displayOptions()._isTabSelected(); }));
				this.___selectedSheets._reInitialize(newSelection);
			} else {
				var tabs = $.ig.Enumerable.prototype.toArray$1($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.Enumerable.prototype.orderBy$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.Number.prototype.$type, this.___selectedSheets, function (t) { return t._worksheet().index(); }));
				if (!$.ig.CoreUtilities.prototype.areEqual$1($.ig.SpreadsheetTabInfo.prototype.$type, tabs, this.___selectedSheets, null)) {
					this.___selectedSheets._reInitialize(tabs);
				}
			}
			if (this.___activeTab != null && !this.___selectedSheets.contains(this.___activeTab)) {
				this.___selectedSheets.clear();
				if (this.___activeTab != null) {
					this.___selectedSheets.add(this.___activeTab);
				}
			}
		}
		if (this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabItemStateChanged)) {
			for (var i = 0, count = this.___tabs.count(); i < count; i++) {
				var tab1 = this.___tabs.item(i);
				tab1._verifyState();
				tab1._index(i);
				tab1._reverseZIndex(this._reverseZIndex());
			}
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabItemStateChanged, false);
		}
		if (this._getFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabAreaChanged)) {
			this._updateFromWindowOptions();
		}
		this.___tabsSource.endUpdate();
		this.___selectedSheets.endUpdate();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::VerifyState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ActivateAdjacent(System.Int32, System.Boolean, System.Boolean)" />*/
	_activateAdjacent: function (startIndex, next, addToSelection) {
		var adjacentVisible = this._getVisibleTab(startIndex, next, -1);
		if (adjacentVisible < 0) {
			return;
		}
		$.ig.Debug.prototype.assert(this.___workbook != null);
		this.___workbook.windowOptions()._setSelectedWorksheet(this.___tabs.item(adjacentVisible)._worksheet(), false);
		if (addToSelection) {
			var tab = this.___tabs.item(adjacentVisible);
			if (!tab._isSelected()) {
				this.___selectedSheets.add(tab);
				this._queueInvalidation($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged);
			}
		}
		this._bringIntoView(adjacentVisible);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ActivateAdjacent(System.Int32, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::AddNewSheets(System.Int32, System.Int32)" />*/
	_addNewSheets: function (count, insertIndex) {
		var newId = 0;
		var worksheets = this.___workbook.worksheets();
		var en = worksheets.getEnumerator();
		while (en.moveNext()) {
			var ws = en.current();
			newId = Math.max(newId, ws._sheetId());
		}
		var startIndex = insertIndex;
		for (var i = 0; i < count; i++) {
			var name = null;
			do {
				newId++;
				name = $.ig.spreadsheet.locale.getString("NewSheetName", [ newId ]);
			} while (worksheets.exists(name));
			worksheets._insert(insertIndex, name, newId);
			insertIndex++;
		}
		this._verifyState();
		this._activateAdjacent(startIndex, true, false);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::AddNewSheets(System.Int32, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetFlag(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags)" />*/
	_getFlag: function (flag) {
		return (this.___flags & flag) != 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetFlag(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetFirstVisibleTabForLastIndex(System.Int32)" />*/
	_getFirstVisibleTabForLastIndex: function (newFirstIndex) {
		var available = this._actualWidth();
		var originalIndex = newFirstIndex;
		for (var i = newFirstIndex; i >= 0; i--) {
			var tabWidth = this._tabs().item(i)._actualWidth();
			if (originalIndex != newFirstIndex) {
				tabWidth = Math.max(tabWidth + this._interTabSpacing(), 0);
			}
			if (tabWidth > available) {
				break;
			}
			if (tabWidth > 0) {
				available -= tabWidth;
				newFirstIndex = i;
			}
		}
		return newFirstIndex;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetFirstVisibleTabForLastIndex(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetLastFullyVisibleTab(System.Double)" />*/
	_getLastFullyVisibleTab1: function (available) {
		var count = this.___tabs.count();
		var index = this._firstVisibleTabIndex();
		for (; index < count; index++) {
			var width = Math.max(this.___tabs.item(index)._actualWidth() + this._interTabSpacing(), 0);
			if (width > available) {
				return Math.max(index - 1, this._firstVisibleTabIndex());
			}
			available -= width;
		}
		return Math.min(index, count - 1);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.SpreadsheetTabManager::GetLastFullyVisibleTab(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::HasTabsCollectionChanged()" />*/
	_hasTabsCollectionChanged: function () {
		var worksheetCount = this.___workbook != null ? this.___workbook.worksheets().count() : 0;
		if (this.___tabsSource.count() != worksheetCount) {
			return true;
		}
		if (worksheetCount == 0) {
			return false;
		}
		var worksheets = this.___workbook.worksheets();
		for (var i = 0, count = this.___tabsSource.count(); i < count; i++) {
			if (this.___tabsSource.__inner[i]._worksheet() != worksheets._item(i)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::HasTabsCollectionChanged()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsPotentialChange(Infragistics.Documents.Excel.ExcelChangeAction)" />*/
	_isPotentialChange: function (changeType) {
		switch (changeType) {
			case $.ig.ExcelChangeAction.prototype.worksheetAdd:
			case $.ig.ExcelChangeAction.prototype.worksheetRemove:
			case $.ig.ExcelChangeAction.prototype.displayOptions:
			case $.ig.ExcelChangeAction.prototype.workbook:
			case $.ig.ExcelChangeAction.prototype.worksheet:
			case $.ig.ExcelChangeAction.prototype.windowOptions:
				return true;
			default: return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::IsPotentialChange(Infragistics.Documents.Excel.ExcelChangeAction)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ProcessPendingChanges()" />*/
	_processPendingChanges: function () {
		var verifyTabs = false;
		var verifyTabItemState = false;
		var verifyActiveAndSelected = false;
		var verifyAreaState = false;
		var verifyVisibleTabs = false;
		var en = this.___pendingChanges.getEnumerator();
		while (en.moveNext()) {
			var change = en.current();
			switch (change._changeType) {
				case $.ig.ExcelChangeAction.prototype.worksheetAdd:
				case $.ig.ExcelChangeAction.prototype.worksheetRemove:
					verifyVisibleTabs = verifyTabs = true;
					break;
				case $.ig.ExcelChangeAction.prototype.displayOptions:
					switch (change._name) {
						case "Reset":
						case "Visibility":
							verifyVisibleTabs = verifyTabItemState = verifyActiveAndSelected = true;
							break;
						case "TabColorInfo":
							verifyTabItemState = true;
							break;
						case "IsTabSelected":
							verifyActiveAndSelected = true;
							break;
					}
					break;
				case $.ig.ExcelChangeAction.prototype.workbook:
					if (change._name == "WorksheetMoved") {
						verifyVisibleTabs = verifyTabs = true;
					}
					break;
				case $.ig.ExcelChangeAction.prototype.worksheet:
					if (change._name == "Name" || change._name == "IsProtected") {
						verifyTabItemState = true;
					}
					break;
				case $.ig.ExcelChangeAction.prototype.windowOptions:
					switch (change._name) {
						case "Reset":
							verifyAreaState = verifyActiveAndSelected = true;
							break;
						case "SelectedWorksheet":
							verifyActiveAndSelected = true;
							this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedWorksheetChanged, true);
							break;
						case "ScrollBars":
						case "TabBarVisible":
						case "TabBarWidth":
						case "FirstVisibleTabIndex":
							verifyAreaState = true;
							break;
					}
					break;
			}
		}
		this.___pendingChanges.clear();
		if (verifyTabs) {
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabsChanged, true);
		}
		if (verifyActiveAndSelected) {
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.activeChanged | $.ig.SpreadsheetTabManager_InternalFlags.prototype.selectedChanged, true);
		}
		if (verifyTabItemState) {
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabItemStateChanged, true);
		}
		if (verifyAreaState) {
			this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabAreaChanged, true);
		}
		if (verifyVisibleTabs) {
			this.___visibleTabs._dirty();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::ProcessPendingChanges()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::QueueInvalidation(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags)" />*/
	_queueInvalidation: function (flag) {
		if ((this.___flags & flag) != flag) {
			this._setFlag(flag, true);
			this.___deferredValidationOperation.startAsyncOperation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::QueueInvalidation(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::SetFlag(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags, System.Boolean)" />*/
	_setFlag: function (flag, set) {
		if (set) {
			this.___flags |= flag;
		} else {
			this.___flags &= ~flag;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::SetFlag(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::SetNotificationFlag(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags, System.Boolean)" />*/
	_setNotificationFlag: function (flag, set) {
		var newValue = this.___flags;
		if (set) {
			newValue |= flag;
		} else {
			newValue &= ~flag;
		}
		if (newValue == this.___flags) {
			return false;
		}
		this.___flags = newValue;
		this.onPropertyChanged($.ig.SpreadsheetTabManager_InternalFlags.prototype.$getName(flag));
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager::SetNotificationFlag(Infragistics.Controls.Grids.Core.SpreadsheetTabManager_InternalFlags, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::UpdateFromWindowOptions()" />*/
	_updateFromWindowOptions: function () {
		this._setFlag($.ig.SpreadsheetTabManager_InternalFlags.prototype.tabAreaChanged, false);
		this._scrollBars(this.___workbook != null ? this.___workbook.windowOptions().scrollBars() : $.ig.excel.ScrollBars.none);
		this._isVisible(this.___workbook != null && this.___workbook.windowOptions().tabBarVisible());
		if (this.___workbook != null) {
			this._width(this.___workbook.windowOptions().tabBarWidth());
			this._firstVisibleTabIndex(this.___workbook.windowOptions().firstVisibleTabIndex());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::UpdateFromWindowOptions()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::VerifyTabs()" />*/
	_verifyTabs: function () {
		this.___tabsSource.beginUpdate();
		if (this._hasTabsCollectionChanged()) {
			var oldItems = new $.ig.Dictionary$2($.ig.excel.Worksheet.prototype.$type, $.ig.SpreadsheetTabInfo.prototype.$type, 0);
			var en = this.___tabsSource.getEnumerator();
			while (en.moveNext()) {
				var tab = en.current();
				oldItems.item(tab._worksheet(), tab);
			}
			this.___tabsSource.clear();
			if (this.___workbook != null) {
				var en1 = this.___workbook.worksheets().getEnumerator();
				while (en1.moveNext()) {
					var ws = en1.current();
					var tabInfo;
					if (!(function () { var $ret = oldItems.tryGetValue(ws, tabInfo); tabInfo = $ret.p1; return $ret.ret; }())) {
						tabInfo = new $.ig.SpreadsheetTabInfo(ws);
					}
					this.___tabsSource.add(tabInfo);
				}
			}
		}
		this.___tabsSource.endUpdate();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager::VerifyTabs()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabManager', $.ig.PropertyChangeNotifierExtended.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection" />*/

$.ig.util.defType('SpreadsheetTabManager_SelectedTabsCollection', 'ObservableCollectionExtended$1', {
	___owner: null,
	init: function (owner) {
		$.ig.ObservableCollectionExtended$1.prototype.init.call(this, $.ig.SpreadsheetTabInfo.prototype.$type, 0);
		this.___owner = owner;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection::NotifyItemsChanged()" />*/
	_notifyItemsChanged: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection::NotifyItemsChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection::OnItemAdded(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	_onItemAdded: function (itemAdded) {
		itemAdded._worksheet().displayOptions()._isTabSelected(true);
		itemAdded._isSelected(true);
		$.ig.ObservableCollectionExtended$1.prototype._onItemAdded.call(this, itemAdded);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection::OnItemAdded(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection::OnItemRemoved(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	_onItemRemoved: function (itemRemoved) {
		if (this.___owner._workbook() != null) {
			itemRemoved._worksheet().displayOptions()._isTabSelected(false);
		}
		itemRemoved._isSelected(false);
		$.ig.ObservableCollectionExtended$1.prototype._onItemRemoved.call(this, itemRemoved);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection::OnItemRemoved(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabManager_SelectedTabsCollection', $.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.SpreadsheetTabInfo.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_SelectedTabsCollection" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_VisibleTabsCollection" />*/

$.ig.util.defType('SpreadsheetTabManager_VisibleTabsCollection', 'LazyReadOnlyNotifyCollection$1', {
	___tabs: null,
	init: function (tabs) {
		$.ig.LazyReadOnlyNotifyCollection$1.prototype.init.call(this, $.ig.SpreadsheetTabInfo.prototype.$type);
		this.___tabs = tabs;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_VisibleTabsCollection::VerifyList(System.Collections.Generic.IList)" />*/
	_verifyList1: function (list) {
		list.clear();
		var en = this.___tabs.getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			if (tab._visibility() == $.ig.excel.WorksheetVisibility.visible) {
				list.add(tab);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_VisibleTabsCollection::VerifyList(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_VisibleTabsCollection::Dirty()" />*/
	_dirty: function () {
		this._dirtyCollection();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_VisibleTabsCollection::Dirty()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabManager_VisibleTabsCollection', $.ig.LazyReadOnlyNotifyCollection$1.prototype.$type.specialize($.ig.SpreadsheetTabInfo.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_VisibleTabsCollection" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_ZIndexTabsCollection" />*/

$.ig.util.defType('SpreadsheetTabManager_ZIndexTabsCollection', 'LazyReadOnlyNotifyCollection$1', {
	___tabs: null,
	init: function (tabs) {
		$.ig.LazyReadOnlyNotifyCollection$1.prototype.init.call(this, $.ig.SpreadsheetTabInfo.prototype.$type);
		this.___tabs = tabs;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_ZIndexTabsCollection::VerifyList(System.Collections.Generic.IList)" />*/
	_verifyList1: function (list) {
		list.clear();
		var en = $.ig.Enumerable.prototype.orderBy$2($.ig.SpreadsheetTabInfo.prototype.$type, $.ig.Number.prototype.$type, this.___tabs, function (t) { return t._zIndex(); }).getEnumerator();
		while (en.moveNext()) {
			var tab = en.current();
			list.add(tab);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_ZIndexTabsCollection::VerifyList(System.Collections.Generic.IList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_ZIndexTabsCollection::Dirty()" />*/
	_dirty: function () {
		this._dirtyCollection();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabManager_ZIndexTabsCollection::Dirty()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabManager_ZIndexTabsCollection', $.ig.LazyReadOnlyNotifyCollection$1.prototype.$type.specialize($.ig.SpreadsheetTabInfo.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager_ZIndexTabsCollection" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IWorksheetUndoUnit" />*/

$.ig.util.defType('IWorksheetUndoUnit', 'Object', {
	$type: new $.ig.Type('IWorksheetUndoUnit', null)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IWorksheetUndoUnit" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction" />*/

$.ig.util.defType('SpreadsheetUndoTransaction', 'UndoTransaction', {
	___spreadsheet: null,
	__affectedRanges: null,
	__worksheet: null,
	__operation: 0,
	__additionalInfo: null,
	init: function (spreadsheet, worksheet, transaction, additionalInfo, affectedRanges) {
		$.ig.UndoTransaction.prototype.init.call(this, null, null);
		$.ig.CoreUtilities.prototype.validateNotNull1(worksheet, "worksheet");
		this.___spreadsheet = spreadsheet == null ? null : new $.ig.WeakReference(spreadsheet);
		this.__additionalInfo = additionalInfo;
		this.__operation = transaction;
		this.__affectedRanges = affectedRanges;
		this.__worksheet = worksheet;
	},
	/*<BeginMethod Name="Infragistics.Undo.UndoTransaction Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)" />*/
	createExecuteTransaction: function (executeInfo) {
		return new $.ig.SpreadsheetUndoTransaction(this._spreadsheet(), this.__worksheet, this.__operation, this.__additionalInfo, this.__affectedRanges);
	}
	/*<EndMethod Name="Infragistics.Undo.UndoTransaction Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	execute: function (executeInfo) {
		var ctrl = this._spreadsheet();
		if (ctrl != null) {
			ctrl._suspendSynchronization();
		}
		try {
			var result = $.ig.UndoTransaction.prototype.execute.call(this, executeInfo);
			var wb = this.__worksheet.workbook();
			if (wb != null) {
				wb.windowOptions().selectedWorksheet(this.__worksheet);
			}
			return result;
		}
		finally {
			if (ctrl != null) {
				ctrl._resumeSynchronization(true);
			}
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::GetDescription(Infragistics.Undo.UndoHistoryItemType, System.Boolean)" />*/
	getDescription: function (itemType, detailed) {
		var resource = "Undo_" + $.ig.SpreadsheetTransactionOperation.prototype.getBox(this.__operation);
		var rangeStr = this._getRangesString(this.__affectedRanges);
		return $.ig.spreadsheet.locale.getString(resource, [ rangeStr, this.__additionalInfo ]);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::GetDescription(Infragistics.Undo.UndoHistoryItemType, System.Boolean)" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::Spreadsheet()" />*/
	_spreadsheet: function () {
		return $.ig.util.cast($.ig.Spreadsheet.prototype.$type, $.ig.CoreUtilities.prototype.getWeakReferenceTargetSafe(this.___spreadsheet));
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::Spreadsheet()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::GetRangesString()" />*/
	_getRangesString: function (ranges) {
		var wb = this.__worksheet.workbook();
		var refMode = wb != null ? wb.cellReferenceMode() : $.ig.excel.CellReferenceMode.a1;
		return $.ig.spreadsheet.SpreadsheetCellRange.prototype._toString3(ranges, refMode, ",");
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::GetRangesString()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::Infragistics.Controls.Grids.Core.IWorksheetUndoUnit.Worksheet()" />*/
	worksheet: function () {
		return this.__worksheet;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction::Infragistics.Controls.Grids.Core.IWorksheetUndoUnit.Worksheet()" />*/
	,
	$type: new $.ig.Type('SpreadsheetUndoTransaction', $.ig.UndoTransaction.prototype.$type, [$.ig.IWorksheetUndoUnit.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetUndoTransaction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionUndoTransaction" />*/

$.ig.util.defType('SpreadsheetSelectionUndoTransaction', 'SpreadsheetUndoTransaction', {
	___setSelection: null,
	___selection: null,
	init: function (spreadsheet, worksheet, transaction, additionalInfo, affectedRanges, selection, setSelection) {
		$.ig.SpreadsheetUndoTransaction.prototype.init.call(this, spreadsheet, worksheet, transaction, additionalInfo, affectedRanges);
		$.ig.Debug.prototype.assert(worksheet == selection._worksheet());
		$.ig.CoreUtilities.prototype.validateNotNull1(setSelection, "setSelection");
		this.___setSelection = setSelection;
		this.___selection = selection;
	},
	/*<BeginMethod Name="Infragistics.Undo.UndoTransaction Infragistics.Controls.Grids.Core.SpreadsheetSelectionUndoTransaction::CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)" />*/
	createExecuteTransaction: function (executeInfo) {
		return new $.ig.SpreadsheetSelectionUndoTransaction(this._spreadsheet(), this.__worksheet, this.__operation, this.__additionalInfo, this.__affectedRanges, this.___selection, this.___setSelection);
	}
	/*<EndMethod Name="Infragistics.Undo.UndoTransaction Infragistics.Controls.Grids.Core.SpreadsheetSelectionUndoTransaction::CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectionUndoTransaction::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	execute: function (executeInfo) {
		var ctrl = this._spreadsheet();
		if (ctrl != null) {
			ctrl._suspendSynchronization();
		}
		try {
			var result = $.ig.SpreadsheetUndoTransaction.prototype.execute.call(this, executeInfo);
			this.___setSelection(this.___selection, false);
			return result;
		}
		finally {
			if (ctrl != null) {
				ctrl._resumeSynchronization(true);
			}
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectionUndoTransaction::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	$type: new $.ig.Type('SpreadsheetSelectionUndoTransaction', $.ig.SpreadsheetUndoTransaction.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectionUndoTransaction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookUndoUnitBase" />*/

$.ig.util.defType('WorkbookUndoUnitBase', 'UndoUnit', {
	init: function () {
		$.ig.UndoUnit.prototype.init.call(this);
	},
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.WorkbookUndoUnitBase::Worksheet()" />*/
	worksheet: function () {
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.WorkbookUndoUnitBase::Worksheet()" />*/
	,
	$type: new $.ig.Type('WorkbookUndoUnitBase', $.ig.UndoUnit.prototype.$type, [$.ig.IWorksheetUndoUnit.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookUndoUnitBase" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2" />*/

$.ig.util.defType('WorkbookUndoUnit$2', 'WorkbookUndoUnitBase', {
	$tContext: null,
	$tValue: null,
	___context: null,
	___oldValue: null,
	___target: null,
	___changeInfo: null,
	___worksheet: null,
	init: function ($tContext, $tValue, context, oldValue, changeInfo) {
		this.$tContext = $tContext;
		this.$tValue = $tValue;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tContext, this.$tValue);
		}
		$.ig.WorkbookUndoUnitBase.prototype.init.call(this);
		this.___context = context;
		this.___oldValue = oldValue;
		this.___changeInfo = changeInfo;
		this.___target = changeInfo.getWorkbook(context);
		this.___worksheet = changeInfo.getWorksheet(context);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	execute: function (executeInfo) {
		this.___changeInfo.setValue(this.___context, this.___oldValue);
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::GetDescription(Infragistics.Undo.UndoHistoryItemType, System.Boolean)" />*/
	getDescription: function (itemType, detailed) {
		return $.ig.SpreadsheetUtilities.prototype.getChangeDescription(this.___changeInfo._changeType, this.___changeInfo._name);
	}
	/*<EndMethod Name="System.String Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::GetDescription(Infragistics.Undo.UndoHistoryItemType, System.Boolean)" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::Target()" />*/
	target: function () {
		return this.___target;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::Target()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::Worksheet()" />*/
	worksheet: function () {
		return this.___worksheet;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.Worksheet Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2::Worksheet()" />*/
	,
	$type: new $.ig.Type('WorkbookUndoUnit$2', $.ig.WorkbookUndoUnitBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorkbookUndoUnit`2" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.WorksheetUndoTransaction" />*/

$.ig.util.defType('WorksheetUndoTransaction', 'UndoTransaction', {
	init: function (description) {
		$.ig.UndoTransaction.prototype.init.call(this, description, description);
	},
	/*<BeginMethod Name="Infragistics.Undo.UndoTransaction Infragistics.Controls.Grids.Core.WorksheetUndoTransaction::CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)" />*/
	createExecuteTransaction: function (executeInfo) {
		return new $.ig.WorksheetUndoTransaction(this.description());
	}
	/*<EndMethod Name="Infragistics.Undo.UndoTransaction Infragistics.Controls.Grids.Core.WorksheetUndoTransaction::CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorksheetUndoTransaction::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	execute: function (executeInfo) {
		var result = $.ig.UndoTransaction.prototype.execute.call(this, executeInfo);
		var ws = null;
		if ($.ig.util.cast($.ig.IWorksheetUndoUnit.prototype.$type, this) !== null) {
			ws = (this).worksheet();
		} else {
			for (var i = 0; i < this.units().count(); i++) {
				var iwuu = $.ig.util.cast($.ig.IWorksheetUndoUnit.prototype.$type, this.units().item(i));
				if (iwuu != null) {
					ws = iwuu.worksheet();
					break;
				}
			}
		}
		if (ws != null) {
			var wb = ws.workbook();
			if (wb != null) {
				wb.windowOptions().selectedWorksheet(ws);
			}
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.WorksheetUndoTransaction::Execute(Infragistics.Undo.UndoExecuteContext)" />*/
	,
	$type: new $.ig.Type('WorksheetUndoTransaction', $.ig.UndoTransaction.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.WorksheetUndoTransaction" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.FormulaBarButtonAreaElement" />*/

$.ig.util.defType('FormulaBarButtonAreaElement', 'VisualElement', {
	_cancelButton: null,
	_enterButton: null,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.formulaBarButtonContainer);
		this._cancelButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.formulaBarCancelButton);
		this._enterButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.formulaBarEnterButton);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarButtonAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		var x = left;
		this._cancelButton.setPosition(x, top, this._cancelButton._width, height);
		x += this._cancelButton._width;
		this._enterButton.setPosition(x, top, this._enterButton._width, height);
		x += this._enterButton._width;
		var ss = $.ig.util.cast($.ig.SpreadsheetVisualElement.prototype.$type, this.getRoot());
		this._cancelButton.isEnabled(ss != null && ss._spreadsheet._canExecuteCommand1($.ig.spreadsheet.SpreadsheetAction.exitEditModeAndDiscardChanges, null, true));
		this._enterButton.isEnabled(ss != null && ss._spreadsheet._canExecuteCommand1($.ig.spreadsheet.SpreadsheetAction.exitEditModeAndUpdateActiveCell, null, true));
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarButtonAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('FormulaBarButtonAreaElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.FormulaBarButtonAreaElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.FormulaBarNameBoxAreaElement" />*/

$.ig.util.defType('FormulaBarNameBoxAreaElement', 'VisualElement', {
	_nameBox: null,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxContainer);
		this._nameBox = new $.ig.ComboBoxVisualElement(this, "ComboBox");
		var $t = this._nameBox;
		$t.valueChanged = $.ig.Delegate.prototype.combine($t.valueChanged, this.onNameBoxValueChanged.runOn(this));
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		this._nameBox.setPosition(left, top, width, height);
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxAreaElement::OnNameBoxValueChanged(System.Object, System.EventArgs)" />*/
	onNameBoxValueChanged: function (sender, e) {
		var ss = this.getAncestor$1($.ig.SpreadsheetVisualElement.prototype.$type);
		if (ss != null) {
			var ep = ss.eventProxy();
			if (!ss._spreadsheet._onNameBoxValueChanged(this._nameBox.value(), ep != null && (ep.currentModifiers() & $.ig.ModifierKeys.prototype.shift) != 0, ep != null && (ep.currentModifiers() & $.ig.ModifierKeys.prototype.control) != 0)) {
				this._nameBox.value(ss._spreadsheet._nameBoxValue());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxAreaElement::OnNameBoxValueChanged(System.Object, System.EventArgs)" />*/
	,
	$type: new $.ig.Type('FormulaBarNameBoxAreaElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.FormulaBarNameBoxAreaElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.AdjustableVisualElement" />*/

$.ig.util.defType('AdjustableVisualElement', 'VisualElement', {
	__isInDrag: false,
	__downPt: null,
	__offsetPt: null,
	init: function (parent, id) {
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnLostCapture()" />*/
	onLostCapture: function () {
		$.ig.VisualElement.prototype.onLostCapture.call(this);
		this.endDrag(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		if (!this.__isInDrag && input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			if (!this.canStartDrag()) {
				return false;
			}
			var relPt = input.getRelativePoint();
			if (input.startCapture()) {
				this.__isInDrag = true;
				this.__offsetPt = { __x: relPt.__x, __y: relPt.__y, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
				this.__downPt = { __x: relPt.__x + this._left, __y: relPt.__y + this._top, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
				this.onDragStarted();
				return true;
			}
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		if (this.__isInDrag) {
			var relPt = input.getRelativePoint();
			var deltaX = relPt.__x + this._left - this.__downPt.__x;
			var deltaY = relPt.__y + this._top - this.__downPt.__y;
			if (deltaX != 0 || deltaY != 0) {
				this.onDragDelta(deltaX, deltaY);
			}
		}
		return $.ig.VisualElement.prototype.onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		if (this.__isInDrag) {
			var relPt = input.getRelativePoint();
			var deltaX = relPt.__x + this._left - this.__downPt.__x;
			var deltaY = relPt.__y + this._top - this.__downPt.__y;
			this.endDrag(false);
			this.onDragComplete(deltaX, deltaY);
		}
		return $.ig.VisualElement.prototype.onMouseUp.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::IsInDrag()" />*/
	isInDrag: function () {
		return this.__isInDrag;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::IsInDrag()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::EndDrag(System.Boolean)" />*/
	endDrag: function (isCancelled) {
		if (this.__isInDrag) {
			this.__isInDrag = false;
			this.__downPt = this.__offsetPt = null;
			var root = this.getAncestor$1($.ig.RootVisualElement.prototype.$type);
			if (root != null) {
				root.releaseCapture(this);
			}
			if (isCancelled) {
				this.onDragCancelled();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::EndDrag(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::CanStartDrag()" />*/
	canStartDrag: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.AdjustableVisualElement::CanStartDrag()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragStarted()" />*/
	onDragStarted: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragStarted()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragCancelled()" />*/
	onDragCancelled: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragCancelled()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragComplete(System.Double, System.Double)" />*/
	onDragComplete: function (deltaX, deltaY) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragComplete(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragDelta(System.Double, System.Double)" />*/
	onDragDelta: function (deltaX, deltaY) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.AdjustableVisualElement::OnDragDelta(System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('AdjustableVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.AdjustableVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter" />*/

$.ig.util.defType('FormulaBarNameBoxSplitter', 'AdjustableVisualElement', {
	__preDragWidth: 0,
	__maxWidth: 0,
	init: function (parent) {
		$.ig.AdjustableVisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxSplitter);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnDragStarted()" />*/
	onDragStarted: function () {
		var fb = this.getAncestor$1($.ig.FormulaBarVisualElement.prototype.$type);
		var root = fb.getAncestor$1($.ig.SpreadsheetVisualElement.prototype.$type);
		$.ig.Debug.prototype.assert1(root != null, "Not in spreadsheet?");
		this.__preDragWidth = root._spreadsheet.nameBoxWidth();
		this.__maxWidth = Math.max(this.__preDragWidth, fb.widthForChildren() - (this._width + fb._buttonArea.outerWidth() + fb._textArea.minWidth()));
		$.ig.AdjustableVisualElement.prototype.onDragStarted.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnDragStarted()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnDragComplete(System.Double, System.Double)" />*/
	onDragComplete: function (deltaX, deltaY) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnDragComplete(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnDragDelta(System.Double, System.Double)" />*/
	onDragDelta: function (deltaX, deltaY) {
		var root = this.getAncestor$1($.ig.SpreadsheetVisualElement.prototype.$type);
		root._spreadsheet.nameBoxWidth(Math.max(Math.min(this.__preDragWidth + deltaX, this.__maxWidth), $.ig.FormulaBarNameBoxSplitter.prototype.nameBox_MinWidth));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnDragDelta(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			if (input.getInputClickCount() == 2) {
				var root = this.getAncestor$1($.ig.SpreadsheetVisualElement.prototype.$type);
				if (root != null) {
					root._spreadsheet.executeCommand($.ig.spreadsheet.SpreadsheetAction.resetNameBoxWidth);
					return true;
				}
			}
		}
		return $.ig.AdjustableVisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('FormulaBarNameBoxSplitter', $.ig.AdjustableVisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement" />*/

$.ig.util.defType('FormulaBarTextAreaElement', 'VisualElement', {
	_textBox: null,
	_expandButton: null,
	_textBoxLineHeight: 0,
	_expandedTextBoxLineCount: 0,
	init: function (parent) {
		this._expandedTextBoxLineCount = 3;
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.formulaBarTextAreaContainer);
		this._expandButton = new $.ig.ToggleButtonVisualElement(this, "ToggleButton");
		this._textBox = new $.ig.TextBoxVisualElement(this, "TextBox");
		var $t = this._expandButton;
		$t.isCheckedChanged = $.ig.Delegate.prototype.combine($t.isCheckedChanged, this.onIsExpandedChanged.runOn(this));
		this.updateTextBoxLineCount();
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		this._expandButton.setPosition(left + width - this._expandButton._width, top, this._expandButton._width, this._expandButton._height);
		this._textBox.setPosition(left, top, width - this._expandButton._width, height);
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement::OnIsExpandedChanged(System.Object, System.EventArgs)" />*/
	onIsExpandedChanged: function (sender, e) {
		if (this._expandButton.isChecked()) {
			var current = this._expandedTextBoxLineCount;
			var max = (this.__parent).getMaxLineCount();
			if (current > max) {
				this._expandedTextBoxLineCount = max;
			}
		}
		this.updateTextBoxLineCount();
		(this.__parent).updatePreferredHeight();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement::OnIsExpandedChanged(System.Object, System.EventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement::UpdateTextBoxLineCount()" />*/
	updateTextBoxLineCount: function () {
		var lineCount = this._expandButton.isChecked() ? this._expandedTextBoxLineCount : 1;
		this._textBox.lineCount(lineCount);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement::UpdateTextBoxLineCount()" />*/
	,
	$type: new $.ig.Type('FormulaBarTextAreaElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.FormulaBarTextAreaElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter" />*/

$.ig.util.defType('FormulaBarTextAreaSplitter', 'AdjustableVisualElement', {
	__preDragIsExpanded: false,
	__preDragLineCount: 0,
	__preDragExtent: 0,
	__maxLineCount: 0,
	init: function (parent) {
		$.ig.AdjustableVisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.formulaBarTextBoxSplitter);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter::OnDragStarted()" />*/
	onDragStarted: function () {
		var fb = this.__parent;
		this.__preDragIsExpanded = fb._textArea._expandButton.isChecked();
		this.__preDragLineCount = fb._textArea._expandedTextBoxLineCount;
		this.__preDragExtent = fb._textArea._height;
		this.__maxLineCount = Math.max(this.__preDragLineCount, fb.getMaxLineCount());
		$.ig.AdjustableVisualElement.prototype.onDragStarted.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter::OnDragStarted()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter::OnDragComplete(System.Double, System.Double)" />*/
	onDragComplete: function (deltaX, deltaY) {
		var fb = this.__parent;
		if (!fb._textArea._expandButton.isChecked()) {
			fb._textArea._expandedTextBoxLineCount = this.__preDragLineCount;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter::OnDragComplete(System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter::OnDragDelta(System.Double, System.Double)" />*/
	onDragDelta: function (deltaX, deltaY) {
		var fb = this.__parent;
		var newLineCount = Math.min(fb.calculateLineCount(deltaY + this.__preDragExtent), this.__maxLineCount);
		if (newLineCount <= 1) {
			fb._textArea._expandedTextBoxLineCount = this.__preDragLineCount;
			fb._textArea._expandButton.isChecked(false);
		} else {
			fb._textArea._expandedTextBoxLineCount = newLineCount;
			fb._textArea._expandButton.isChecked(true);
		}
		fb._textArea.updateTextBoxLineCount();
		fb.updatePreferredHeight();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter::OnDragDelta(System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('FormulaBarTextAreaSplitter', $.ig.AdjustableVisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.FormulaBarTextAreaSplitter" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.FormulaBarVisualElement" />*/

$.ig.util.defType('FormulaBarVisualElement', 'VisualElement', {
	_nameBoxArea: null,
	_buttonArea: null,
	_textBoxSplitter: null,
	_nameBoxSplitter: null,
	_textArea: null,
	_singleLineElementHeight: 0,
	_nameBoxWidth: 0,
	_preferredHeight: 0,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.formulaBar);
		this._nameBoxArea = new $.ig.FormulaBarNameBoxAreaElement(this);
		this._nameBoxSplitter = new $.ig.FormulaBarNameBoxSplitter(this);
		this._buttonArea = new $.ig.FormulaBarButtonAreaElement(this);
		this._textArea = new $.ig.FormulaBarTextAreaElement(this);
		this._textBoxSplitter = new $.ig.FormulaBarTextAreaSplitter(this);
		var m = parent._spreadsheet.__metricsCache;
		this._nameBoxSplitter._width = m._nameBoxSplitterSize.width();
		this._nameBoxArea._constraint = m._formulaBarNameBoxAreaConstraint;
		this._buttonArea._constraint = m._formulaBarButtonAreaConstraint;
		this._buttonArea._enterButton._width = m._formulaBarEnterButtonSize.width();
		this._buttonArea._cancelButton._width = m._formulaBarCancelButtonSize.width();
		this._textBoxSplitter._height = m._formulaBarTextAreaSplitterSize.height();
		this._textArea._textBoxLineHeight = m._formulaBarTextBox3LineHeight - m._formulaBarTextBox2LineHeight;
		this._textArea._expandButton._width = m._formulaBarExpandButtonSize.width();
		this._textArea._expandButton._height = m._formulaBarExpandButtonSize.height();
		this._constraint = m._formulaBarConstraint;
		this.updatePreferredHeight();
		this.isVisible(parent._spreadsheet.isFormulaBarVisible());
		this._nameBoxWidth = parent._spreadsheet.nameBoxWidth();
		this._nameBoxArea._nameBox.items(parent._spreadsheet._nameBoxItems());
		this._nameBoxArea._nameBox.value(parent._spreadsheet._nameBoxValue());
		var $t = parent._spreadsheet;
		$t.propertyChanged = $.ig.Delegate.prototype.combine($t.propertyChanged, this.onSpreadsheetPropertyChanged.runOn(this));
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::Dispose()" />*/
	dispose: function () {
		var p = this.__parent;
		if (p != null) {
			var $t = p._spreadsheet;
			$t.propertyChanged = $.ig.Delegate.prototype.remove($t.propertyChanged, this.onSpreadsheetPropertyChanged.runOn(this));
		}
		$.ig.VisualElement.prototype.dispose.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.FormulaBarVisualElement::GetMaxLineCount()" />*/
	getMaxLineCount: function () {
		var ss = this.getAncestor$1($.ig.SpreadsheetVisualElement.prototype.$type);
		var minHeight = ss._spreadsheet._spreadsheetAreaLayoutManager().getMinimumSpreadareaHeight();
		var availableSSHeight = ss._areaElement._height - minHeight;
		return this.calculateLineCount(this._textArea._height + availableSSHeight);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.FormulaBarVisualElement::GetMaxLineCount()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::OnSpreadsheetPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	onSpreadsheetPropertyChanged: function (sender, e) {
		switch (e.propertyName()) {
			case "IsFormulaBarVisible":
				this.isVisible((sender).isFormulaBarVisible());
				break;
			case "NameBoxWidth":
				this._nameBoxWidth = (sender).nameBoxWidth();
				this.isChildPositionDirty(true);
				break;
			case "NameBoxValue":
				this._nameBoxArea._nameBox.value((sender)._nameBoxValue());
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::OnSpreadsheetPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		var nameBoxWidth = this._nameBoxWidth;
		var x = left;
		this._nameBoxArea.setPosition(x, top, nameBoxWidth, this._singleLineElementHeight);
		x += nameBoxWidth;
		this._nameBoxSplitter.setPosition(x, top, this._nameBoxSplitter._width, this._singleLineElementHeight);
		x += this._nameBoxSplitter._width;
		var buttonAreaWidth = this._buttonArea.calculateWidth(this._buttonArea._cancelButton._width + this._buttonArea._enterButton._width);
		this._buttonArea.setPosition(x, top, buttonAreaWidth, this._singleLineElementHeight);
		x += buttonAreaWidth;
		this._textArea.setPosition(x, top, Math.max(width + left - x, 0), height - this._textBoxSplitter._height);
		this._textBoxSplitter.setPosition(left, Math.max(top, top + height - this._textBoxSplitter._height), width, this._textBoxSplitter._height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::RemoveFromParent()" />*/
	removeFromParent: function () {
		var p = this.__parent;
		var $t = p._spreadsheet;
		$t.propertyChanged = $.ig.Delegate.prototype.remove($t.propertyChanged, this.onSpreadsheetPropertyChanged.runOn(this));
		$.ig.VisualElement.prototype.removeFromParent.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::RemoveFromParent()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::UpdatePreferredHeight()" />*/
	updatePreferredHeight: function () {
		var m = (this.__parent)._spreadsheet.__metricsCache;
		var hNameBox = this._nameBoxArea.calculateHeight(0);
		var hNameBoxSplitter = m._nameBoxSplitterSize.height();
		var hButtonBox = this._buttonArea.calculateHeight(Math.max(m._formulaBarEnterButtonSize.height(), m._formulaBarCancelButtonSize.height()));
		var hText = this._textArea.calculateHeight(m._formulaBarTextBox1LineHeight);
		var h = Math.max(Math.max(hNameBox, hNameBoxSplitter), Math.max(hButtonBox, hText));
		this._singleLineElementHeight = h;
		if (this._textArea._expandButton.isChecked()) {
			h += this._textArea._textBoxLineHeight * (this._textArea._expandedTextBoxLineCount - 1);
		}
		h += this._textBoxSplitter._height;
		var old = this._preferredHeight;
		this._preferredHeight = this.calculateHeight(h);
		if (old != this._preferredHeight && this.__parent != null) {
			this.__parent.isChildPositionDirty(true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.FormulaBarVisualElement::UpdatePreferredHeight()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Grids.Core.FormulaBarVisualElement::CalculateLineCount(System.Double)" />*/
	calculateLineCount: function (preferredTextAreaHeight) {
		var minHeight = this._singleLineElementHeight;
		var delta = preferredTextAreaHeight - minHeight;
		if (delta <= 0) {
			return 1;
		} else {
			return 1 + $.ig.truncate(Math.floor(delta / this._textArea._textBoxLineHeight));
		}
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Grids.Core.FormulaBarVisualElement::CalculateLineCount(System.Double)" />*/
	,
	$type: new $.ig.Type('FormulaBarVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.FormulaBarVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.LayerVisualElement" />*/

$.ig.util.defType('LayerVisualElement', 'VisualElement', {
	init: function (parent, id) {
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LayerVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		this.arrangeLayers(new $.ig.Size(1, width, height));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LayerVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LayerVisualElement::ArrangeLayers(System.Windows.Size)" />*/
	arrangeLayers: function (arrangeSize) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LayerVisualElement::ArrangeLayers(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.LayerVisualElement::MeasureLayers(System.Windows.Size)" />*/
	measureLayers: function (measureSize) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.LayerVisualElement::MeasureLayers(System.Windows.Size)" />*/
	,
	$type: new $.ig.Type('LayerVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.LayerVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RendererVisualElement`1" />*/

$.ig.util.defType('RendererVisualElement$1', 'LayerVisualElement', {
	$tGraphics: null,
	__invalidRect: null,
	_cache: null,
	init: function ($tGraphics, parent, id) {
		this.$tGraphics = $tGraphics;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tGraphics);
		}
		$.ig.LayerVisualElement.prototype.init.call(this, parent, id);
		this.__invalidRect = new $.ig.Rect(4);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::OnRecycled()" />*/
	onRecycled: function () {
		this.invalidate();
		this.isChildPositionDirty(true);
		$.ig.LayerVisualElement.prototype.onRecycled.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::OnRecycled()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.RendererVisualElement`1::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	setPositionOverride: function (left, top, width, height) {
		var w = this._width;
		var h = this._height;
		var result = $.ig.LayerVisualElement.prototype.setPositionOverride.call(this, left, top, width, height);
		if (result && (w != this._width || h != this._height)) {
			this.invalidate();
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.RendererVisualElement`1::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.RendererVisualElement`1::HasInvalidArea()" />*/
	hasInvalidArea: function () {
		return this.__invalidRect.width() > 0 || this.__invalidRect.height() > 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.RendererVisualElement`1::HasInvalidArea()" />*/
	,
	/*<BeginProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.RendererVisualElement`1::InvalidRect()" />*/
	invalidRect: function () {
		return this.__invalidRect;
	}
	/*<EndProperty Name="System.Windows.Rect Infragistics.Controls.Grids.Core.RendererVisualElement`1::InvalidRect()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::Invalidate()" />*/
	invalidate: function () {
		if (this.__invalidRect.x() != this._left || this.__invalidRect.y() != this._top || this.__invalidRect.width() != this._width || this.__invalidRect.height() != this._height) {
			this.__invalidRect.x(this._left);
			this.__invalidRect.y(this._top);
			this.__invalidRect.width(this._width);
			this.__invalidRect.height(this._height);
			this.onChanged();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::Invalidate()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::Render(Infragistics.Controls.Grids.Core.RendererVisualElement.TGraphics, Infragistics.PixelConverter, System.Windows.Point)" />*/
	render: function (g, dpi, elementDpiOffset) {
		this.renderOverride(g, dpi, this.__invalidRect, elementDpiOffset);
		this.__invalidRect.width(0);
		this.__invalidRect.height(0);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::Render(Infragistics.Controls.Grids.Core.RendererVisualElement.TGraphics, Infragistics.PixelConverter, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::RenderOverride(Infragistics.Controls.Grids.Core.RendererVisualElement.TGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	renderOverride: function (g, dpi, renderRect, elementDpiOffset) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererVisualElement`1::RenderOverride(Infragistics.Controls.Grids.Core.RendererVisualElement.TGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	$type: new $.ig.Type('RendererVisualElement$1', $.ig.LayerVisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RendererVisualElement`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2" />*/

$.ig.util.defType('RendererLayerVisualElement$2', 'RendererVisualElement$1', {
	$tViewModel: null,
	$tGraphics: null,
	__layers: null,
	init: function ($tViewModel, $tGraphics, parent, id) {
		this.$tViewModel = $tViewModel;
		this.$tGraphics = $tGraphics;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tViewModel, this.$tGraphics);
		}
		$.ig.RendererVisualElement$1.prototype.init.call(this, this.$tGraphics, parent, id);
		this.__layers = new $.ig.List$1($.ig.RendererElementLayer$2.prototype.$type.specialize(this.$tViewModel, this.$tGraphics), 0);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::ArrangeLayers(System.Windows.Size)" />*/
	arrangeLayers: function (arrangeSize) {
		for (var i = 0, count = this.__layers.count(); i < count; i++) {
			this.__layers.__inner[i]._arrangeOverride(arrangeSize);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::ArrangeLayers(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::Dispose()" />*/
	dispose: function () {
		var layers = new $.ig.List$1($.ig.RendererElementLayer$2.prototype.$type.specialize(this.$tViewModel, this.$tGraphics), 1, this.__layers);
		var en = layers.getEnumerator();
		while (en.moveNext()) {
			var layer = en.current();
			layer.dispose();
			layer._view().detach(layer);
		}
		$.ig.RendererVisualElement$1.prototype.dispose.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::MeasureLayers(System.Windows.Size)" />*/
	measureLayers: function (measureSize) {
		for (var i = 0, count = this.__layers.count(); i < count; i++) {
			this.__layers.__inner[i]._measureOverride(measureSize);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::MeasureLayers(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::AddLayer(Infragistics.Controls.Primitives.RendererElementLayer)" />*/
	addLayer: function (layer) {
		this.__layers.add(layer);
		this.isChildPositionDirty(true);
		this.invalidate();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::AddLayer(Infragistics.Controls.Primitives.RendererElementLayer)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::GetLayers()" />*/
	getLayers: function () {
		return this.__layers;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::GetLayers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::RenderOverride(Infragistics.Controls.Grids.Core.RendererLayerVisualElement.TGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	renderOverride: function (g, dpi, renderRect, elementDpiOffset) {
		for (var i = 0, count = this.__layers.count(); i < count; i++) {
			this.__layers.__inner[i]._render(g, dpi, renderRect, elementDpiOffset);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::RenderOverride(Infragistics.Controls.Grids.Core.RendererLayerVisualElement.TGraphics, Infragistics.PixelConverter, System.Windows.Rect, System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::RemoveLayer(Infragistics.Controls.Primitives.RendererElementLayer)" />*/
	removeLayer: function (layer) {
		this.__layers.remove(layer);
		this.invalidate();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2::RemoveLayer(Infragistics.Controls.Primitives.RendererElementLayer)" />*/
	,
	$type: new $.ig.Type('RendererLayerVisualElement$2', $.ig.RendererVisualElement$1.prototype.$type.specialize(1))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RendererLayerVisualElement`2" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1" />*/

$.ig.util.defType('RendererLayerVisualElementView$1', 'ElementLayerViewSingle', {
	$tViewModel: null,
	__element: null,
	init: function ($tViewModel, element) {
		this.$tViewModel = $tViewModel;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tViewModel);
		}
		$.ig.ElementLayerViewSingle.prototype.init.call(this);
		this.__element = element;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::Infragistics.Controls.Primitives.ILayerRenderer.Arrange(System.Windows.Size)" />*/
	arrange: function (finalSize) {
		finalSize = $.ig.util.sizeFromLiteral(finalSize);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::Infragistics.Controls.Primitives.ILayerRenderer.Arrange(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.ILayerRenderer Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::CreateRenderer()" />*/
	createRenderer: function () {
		return this;
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.ILayerRenderer Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::CreateRenderer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateArrange()" />*/
	invalidateArrange: function () {
		this.__element.isChildPositionDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateArrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateLayout()" />*/
	invalidateLayout: function () {
		this.__element.hasDescendantChanged(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
		this.__element.isChildPositionDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateRender()" />*/
	invalidateRender: function () {
		this.__element.invalidate();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::InvalidateRender()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::Infragistics.Controls.Primitives.ILayerRenderer.Measure(System.Windows.Size)" />*/
	measure: function (availableSize) {
		availableSize = $.ig.util.sizeFromLiteral(availableSize);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::Infragistics.Controls.Primitives.ILayerRenderer.Measure(System.Windows.Size)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::OnUnloaded()" />*/
	onUnloaded: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::OnUnloaded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::ReleaseRenderer(Infragistics.Controls.Primitives.ILayerRenderer)" />*/
	releaseRenderer: function (renderer) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1::ReleaseRenderer(Infragistics.Controls.Primitives.ILayerRenderer)" />*/
	,
	$type: new $.ig.Type('RendererLayerVisualElementView$1', $.ig.ElementLayerViewSingle.prototype.$type, [$.ig.IRendererElementLayerView$2.prototype.$type.specialize(0, $.ig.ISpreadsheetGraphics.prototype.$type), $.ig.ILayerRenderer.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.RendererLayerVisualElementView`1" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement" />*/

$.ig.util.defType('SpreadsheetAreaVisualElement', 'VisualElement', {
	_area: null,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.spreadsheetArea);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnMouseWheel(Infragistics.Controls.Core.InputProxy, System.Double)" />*/
	onMouseWheel: function (input, delta) {
		if (this._area.spreadsheet() != null) {
			this._area.spreadsheet()._processMouseWheel(delta * -3, input.getModifierKeys() == $.ig.ModifierKeys.prototype.control);
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseWheel.call(this, input, delta);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnMouseWheel(Infragistics.Controls.Core.InputProxy, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		if (input.hasCapture()) {
			this._area.onElementDragMouseMove(input.getRelativePoint());
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		if (input.hasCapture()) {
			this._area.onElementDragMouseUp();
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseUp.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnLostCapture()" />*/
	onLostCapture: function () {
		this._area.cancelElementDrag();
		$.ig.VisualElement.prototype.onLostCapture.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::OnLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	setPositionOverride: function (left, top, width, height) {
		var result = $.ig.VisualElement.prototype.setPositionOverride.call(this, left, top, width, height);
		if (result) {
			this._area.invalidateMeasure();
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	$type: new $.ig.Type('SpreadsheetAreaVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement" />*/

$.ig.util.defType('SpreadsheetInputMessageElement', 'VisualElement', {
	_title: null,
	_message: null,
	_hasContentChanged: false,
	_preferredWidth: 0,
	_preferredHeight: 0,
	_bodyElement: null,
	_titleElement: null,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.inputMessage);
		this._titleElement = new $.ig.VisualElement(this, $.ig.SpreadsheetElementIds.prototype.inputMessageTitle);
		this._bodyElement = new $.ig.VisualElement(this, $.ig.SpreadsheetElementIds.prototype.inputMessageBody);
		this._titleElement.hasPositionChanged(false);
		this._bodyElement.hasPositionChanged(false);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement::Initialize(System.String, System.String)" />*/
	initialize: function (title, message) {
		this._hasContentChanged = this._hasContentChanged || title != this._title || message != this._message;
		this._title = title;
		this._message = message;
		if (this._hasContentChanged) {
			this.onChanged();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement::Initialize(System.String, System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			if (input.getInputClickCount() == 2) {
				(this.__parent)._area.onDoubleClickInputMessage();
				return true;
			} else {
				var pt = input.getRelativePoint();
				var ptPanel = { __x: pt.__x + this._left, __y: pt.__y + this._top, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
				(this.__parent)._area.startInputMessageDrag(pt, ptPanel);
				return true;
			}
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetInputMessageElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetInputMessageElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement" />*/

$.ig.util.defType('SpreadsheetPaneSplitterElement', 'VisualElement', {
	_splitterType: 0,
	init: function (parent, splitterType) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.paneSplitter);
		this._splitterType = splitterType;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		var relPt = input.getRelativePoint();
		var panelPt = { __x: relPt.__x + this._left, __y: relPt.__y + this._top, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		if ((this.__parent)._area.onSplitterMouseDown(this._splitterType, input, panelPt)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		if ((this.__parent)._area.onSplitterMouseMove(input)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		(this.__parent)._area.onSplitterMouseUp(input);
		return $.ig.VisualElement.prototype.onMouseUp.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnLostCapture()" />*/
	onLostCapture: function () {
		(this.__parent)._area.onSplitterLostCapture();
		$.ig.VisualElement.prototype.onLostCapture.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement::OnLostCapture()" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneSplitterElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneSplitterElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement" />*/

$.ig.util.defType('SpreadsheetSelectAllButtonElement', 'VisualElement', {
	__areAllRowsAndColumnsSelected: false,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.selectAllButton);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		var ss = (this.__parent)._area.spreadsheet();
		if (ss._onMouseDownSelectAllButton(input, this)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement::AreAllRowsAndColumnsSelected()" />*/
	areAllRowsAndColumnsSelected: function (value) {
		if (arguments.length === 1) {
			if (value != this.__areAllRowsAndColumnsSelected) {
				this.__areAllRowsAndColumnsSelected = value;
				this.isActive(value);
			}
			return value;
		} else {
			return this.__areAllRowsAndColumnsSelected;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement::AreAllRowsAndColumnsSelected()" />*/
	,
	$type: new $.ig.Type('SpreadsheetSelectAllButtonElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetSelectAllButtonElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabAreaSplitterElement" />*/

$.ig.util.defType('SpreadsheetTabAreaSplitterElement', 'VisualElement', {
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.tabAreaSplitter);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabAreaSplitterElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabAreaSplitterElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabAreaSplitterElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		var relPt = input.getRelativePoint();
		var panelPt = { __x: relPt.__x + this._left, __y: relPt.__y + this._top, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
		if ((this.__parent)._area.startTabAreaSplitterDrag(relPt, panelPt)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabAreaSplitterElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabAreaSplitterElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabAreaSplitterElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement" />*/

$.ig.util.defType('SpreadsheetTabItemAreaElement', 'VisualElement', {
	_scrollFirstButton: null,
	_scrollPreviousButton: null,
	_scrollNextButton: null,
	_scrollLastButton: null,
	_activatePreviousButton: null,
	_tabItemPanel: null,
	_activateNextButton: null,
	_addNewButton: null,
	_preferredButtonHeight: 0,
	_preferredButtonWidth: 0,
	init: function (parent, id) {
		var $self = this;
		$.ig.VisualElement.prototype.init.call(this, parent, id);
		this._scrollFirstButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.tabScrollFirst);
		this._scrollPreviousButton = new $.ig.RepeatButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.tabScrollPrev);
		this._scrollNextButton = new $.ig.RepeatButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.tabScrollNext);
		this._scrollLastButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.tabScrollLast);
		this._activatePreviousButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.tabActivatePrev);
		this._tabItemPanel = new $.ig.SpreadsheetTabItemPanel(this);
		this._activateNextButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.tabActivateNext);
		this._addNewButton = new $.ig.ButtonVisualElement(this, $.ig.SpreadsheetElementIds.prototype.addWorksheetButton);
		var $t = this._scrollFirstButton;
		$t.click = $.ig.Delegate.prototype.combine($t.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.scrollToFirstWorksheet); });
		var $t1 = this._scrollPreviousButton;
		$t1.click = $.ig.Delegate.prototype.combine($t1.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.scrollPreviousWorksheet); });
		var $t2 = this._scrollNextButton;
		$t2.click = $.ig.Delegate.prototype.combine($t2.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.scrollNextWorksheet); });
		var $t3 = this._scrollLastButton;
		$t3.click = $.ig.Delegate.prototype.combine($t3.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.scrollToLastWorksheet); });
		var $t4 = this._activatePreviousButton;
		$t4.click = $.ig.Delegate.prototype.combine($t4.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.activatePreviousOutOfViewWorksheet); });
		var $t5 = this._activateNextButton;
		$t5.click = $.ig.Delegate.prototype.combine($t5.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.activateNextOutOfViewWorksheet); });
		var $t6 = this._addNewButton;
		$t6.click = $.ig.Delegate.prototype.combine($t6.click, function (o, e) { $self.executeCommand($.ig.spreadsheet.SpreadsheetAction.addNewWorksheet); });
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		var tabLayoutMgr = this._tabItemPanel._layoutManager;
		var buttonWidth = this._preferredButtonWidth;
		if (!this._addNewButton.isVisible()) {
			buttonWidth -= this._addNewButton._width;
		}
		var tabItemAreaWidth = Math.min(width - buttonWidth, tabLayoutMgr.measure().width());
		tabLayoutMgr.arrange(tabItemAreaWidth, height);
		this._addNewButton.isEnabled(tabLayoutMgr.spreadsheet()._canExecuteCommand1($.ig.spreadsheet.SpreadsheetAction.addNewWorksheet, null, true));
		this._activateNextButton.isEnabled(tabLayoutMgr.tabManager()._isNextItemOutOfView());
		this._activatePreviousButton.isEnabled(tabLayoutMgr.tabManager()._isPreviousItemOutOfView());
		this._scrollLastButton.isEnabled(tabLayoutMgr.tabManager()._isNextItemOutOfView());
		this._scrollFirstButton.isEnabled(tabLayoutMgr.tabManager()._isPreviousItemOutOfView());
		this._scrollNextButton.isEnabled(tabLayoutMgr.tabManager()._isNextItemOutOfView());
		this._scrollPreviousButton.isEnabled(tabLayoutMgr.tabManager()._isPreviousItemOutOfView());
		var x = left;
		x = this.positionElement(x, top, height, this._scrollFirstButton);
		x = this.positionElement(x, top, height, this._scrollPreviousButton);
		x = this.positionElement(x, top, height, this._scrollNextButton);
		x = this.positionElement(x, top, height, this._scrollLastButton);
		x = this.positionElement(x, top, height, this._activatePreviousButton);
		this._tabItemPanel.setPosition(x, top, tabItemAreaWidth, height);
		x += tabItemAreaWidth;
		x = this.positionElement(x, top, height, this._activateNextButton);
		if (this._addNewButton.isVisible()) {
			x = this.positionElement(x, top, height, this._addNewButton);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	setPositionOverride: function (left, top, width, height) {
		var setPositionResult = $.ig.VisualElement.prototype.setPositionOverride.call(this, left, top, width, height);
		var tabItemAreaWidth = this._tabItemPanel._layoutManager.measure().width();
		if (tabItemAreaWidth != this._tabItemPanel._width) {
			this.isChildPositionDirty(true);
		}
		return setPositionResult;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	executeCommand: function (cmd) {
		(this.__parent)._area.spreadsheet().executeCommand(cmd);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::ExecuteCommand(Infragistics.Controls.Grids.Core.SpreadsheetCommandType)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::PositionElement(System.Double, System.Double, System.Double, Infragistics.Controls.Core.VisualElement)" />*/
	positionElement: function (x, y, height, button) {
		var w = button._width;
		button.setPosition(x, y, w, height);
		return x + w;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement::PositionElement(System.Double, System.Double, System.Double, Infragistics.Controls.Core.VisualElement)" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabItemAreaElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemAreaElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement" />*/

$.ig.util.defType('SpreadsheetTabItemElement', 'VisualElement', {
	__tabFlags: 0,
	_tab: null,
	_preferredWidth: 0,
	_textVersion: 0,
	_contentPlatformObject: null,
	init: function (parent, tab) {
		this.__tabFlags = $.ig.SpreadsheetTabItemElement.prototype._allTabChangedFlags;
		this._textVersion = $.ig.SpreadsheetTabItemElement.prototype.dirtyTextVersion;
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.sheetTabItem);
		this._tab = tab;
		tab.propertyChanged = $.ig.Delegate.prototype.combine(tab.propertyChanged, this.onTabPropertyChanged.runOn(this));
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::SetTabFlag(System.Int32, System.Boolean)" />*/
	setTabFlag: function (flag, value) {
		var newFlag = this.__tabFlags;
		if (value) {
			newFlag |= flag;
		} else {
			newFlag &= ~flag;
		}
		if (newFlag != this.__tabFlags) {
			this.__tabFlags = newFlag;
			this.onChanged();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::SetTabFlag(System.Int32, System.Boolean)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsSelectedTabChanged()" />*/
	isSelectedTabChanged: function (value) {
		if (arguments.length === 1) {
			this.setTabFlag($.ig.SpreadsheetTabItemElement.prototype._isSelectedTabChangedFlag, value);
			return value;
		} else {
			return (this.__tabFlags & $.ig.SpreadsheetTabItemElement.prototype._isSelectedTabChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsSelectedTabChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsActiveTabChanged()" />*/
	isActiveTabChanged: function (value) {
		if (arguments.length === 1) {
			this.setTabFlag($.ig.SpreadsheetTabItemElement.prototype._isActiveTabChangedFlag, value);
			return value;
		} else {
			return (this.__tabFlags & $.ig.SpreadsheetTabItemElement.prototype._isActiveTabChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsActiveTabChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsProtectedTabChanged()" />*/
	isProtectedTabChanged: function (value) {
		if (arguments.length === 1) {
			this.setTabFlag($.ig.SpreadsheetTabItemElement.prototype._isProtectedTabChangedFlag, value);
			return value;
		} else {
			return (this.__tabFlags & $.ig.SpreadsheetTabItemElement.prototype._isProtectedTabChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::IsProtectedTabChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::HasTabColorChanged()" />*/
	hasTabColorChanged: function (value) {
		if (arguments.length === 1) {
			this.setTabFlag($.ig.SpreadsheetTabItemElement.prototype._hasTabColorChangedFlag, value);
			return value;
		} else {
			return (this.__tabFlags & $.ig.SpreadsheetTabItemElement.prototype._hasTabColorChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::HasTabColorChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::HasTextChanged()" />*/
	hasTextChanged: function (value) {
		if (arguments.length === 1) {
			this.setTabFlag($.ig.SpreadsheetTabItemElement.prototype._hasTextChangedFlag, value);
			return value;
		} else {
			return (this.__tabFlags & $.ig.SpreadsheetTabItemElement.prototype._hasTextChangedFlag) != 0;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::HasTextChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::InvalidateLayout()" />*/
	invalidateLayout: function () {
		if (this.__parent != null) {
			(this.__parent)._layoutManager.invalidateLayout();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::InvalidateLayout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnTabPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	onTabPropertyChanged: function (sender, e) {
		if (String.isNullOrEmpty(e.propertyName())) {
			this._textVersion = $.ig.SpreadsheetTabItemElement.prototype.dirtyTextVersion;
			this.setTabFlag($.ig.SpreadsheetTabItemElement.prototype._allTabChangedFlags, true);
			this.invalidateLayout();
		} else {
			switch (e.propertyName()) {
				case "Name":
					this._textVersion = $.ig.SpreadsheetTabItemElement.prototype.dirtyTextVersion;
					this.hasTextChanged(true);
					this.invalidateLayout();
					break;
				case "Color":
					this.hasTabColorChanged(true);
					break;
				case "IsActive":
					this.isActiveTabChanged(true);
					break;
				case "IsSelected":
					this.isSelectedTabChanged(true);
					break;
				case "IsProtected":
					this.isProtectedTabChanged(true);
					this.invalidateLayout();
					break;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnTabPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnLostCapture()" />*/
	onLostCapture: function () {
		(this.__parent)._layoutManager.onLostMouseCaptureForTab();
		$.ig.VisualElement.prototype.onLostCapture.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		if ((this.__parent)._layoutManager.onMouseDownTab(input, this)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		if ((this.__parent)._layoutManager.onMouseMoveTab(input, this)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		return (this.__parent)._layoutManager.onMouseUpTab(input, this);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::Dispose()" />*/
	dispose: function () {
		var $t = this._tab;
		$t.propertyChanged = $.ig.Delegate.prototype.remove($t.propertyChanged, this.onTabPropertyChanged.runOn(this));
		$.ig.VisualElement.prototype.dispose.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement::Dispose()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabItemElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager" />*/

$.ig.util.defType('SpreadsheetTabItemElementLayoutManager', 'SpreadsheetTabItemLayoutManager$1', {
	_element: null,
	_preferredItemAreaWidth: 0,
	_currentTextVersion: 0,
	__dropIndicatorElement: null,
	init: function (element) {
		this._currentTextVersion = 0;
		$.ig.SpreadsheetTabItemLayoutManager$1.prototype.init.call(this, $.ig.SpreadsheetTabItemElement.prototype.$type);
		this._element = element;
	},
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::Spreadsheet()" />*/
	spreadsheet: function () {
		return (this._element.__parent.__parent)._area.spreadsheet();
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.Spreadsheet Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::Spreadsheet()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::ArrangeVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement, System.Windows.Rect)" />*/
	arrangeVisual: function (visual, arrangeRect) {
		visual.setPosition1(arrangeRect);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::ArrangeVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement, System.Windows.Rect)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::CaptureMouse()" />*/
	captureMouse: function () {
		return (this._element.getRoot()).capture(this._element);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::CaptureMouse()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::CaptureMouseForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	captureMouseForTab: function (tab) {
		return (this._element.getRoot()).capture(tab);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::CaptureMouseForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::CreateVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	createVisual: function (tab) {
		return new $.ig.SpreadsheetTabItemElement(this._element, tab);
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::CreateVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabInfo)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetDesiredItemHeight()" />*/
	getDesiredItemHeight: function () {
		return this.spreadsheet().__metricsCache._tabHeight;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetDesiredItemHeight()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetDesiredItemWidth(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	getDesiredItemWidth: function (visual) {
		return visual._preferredWidth;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetDesiredItemWidth(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetRelativePosition(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement, System.Double, System.Double)" />*/
	getRelativePosition: function (visual, x, y) {
		return { __x: visual._left + x, __y: visual._top + y, $type: $.ig.Point.prototype.$type, getType: $.ig.Object.prototype.getType, getGetHashCode: $.ig.Object.prototype.getGetHashCode, typeName: $.ig.Object.prototype.typeName };
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetRelativePosition(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	getTab: function (visual) {
		return visual._tab;
	}
	/*<EndMethod Name="Infragistics.Controls.Grids.Core.SpreadsheetTabInfo Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetTabItemAreaWidth()" />*/
	getTabItemAreaWidth: function () {
		return this._element._width;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::GetTabItemAreaWidth()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::InvalidateArrange()" />*/
	invalidateArrange: function () {
		if (this._element.__parent != null) {
			this._element.__parent.isChildPositionDirty(true);
		}
		this.spreadsheet().scheduleArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::InvalidateArrange()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::InvalidateMeasure()" />*/
	invalidateMeasure: function () {
		if (this._element.__parent != null) {
			this._element.__parent.isChildPositionDirty(true);
		}
		this.spreadsheet().scheduleArrange();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::InvalidateMeasure()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::OnDragEnded()" />*/
	onDragEnded: function () {
		var dropInd = this.__dropIndicatorElement;
		this.__dropIndicatorElement = null;
		if (dropInd != null) {
			dropInd.isRemoved(true);
		}
		this._element.cursor(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::OnDragEnded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::OnDragStarted()" />*/
	onDragStarted: function () {
		$.ig.Debug.prototype.assert(this.__dropIndicatorElement == null);
		if (this.__dropIndicatorElement == null) {
			this.__dropIndicatorElement = new $.ig.VisualElement(this._element.__parent.__parent, $.ig.SpreadsheetElementIds.prototype.tabDropIndicator);
			this.__dropIndicatorElement.isHitTestVisible(false);
			this.__dropIndicatorElement.zIndex(20000);
		}
		this._element.cursor($.ig.SpreadsheetCursorHelper.prototype.getCursorInfo($.ig.SpreadsheetCursor.prototype.dragSheet));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::OnDragStarted()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	onTabManagerChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::OnTabManagerChanged(Infragistics.Controls.Grids.Core.SpreadsheetTabManager, Infragistics.Controls.Grids.Core.SpreadsheetTabManager)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::PositionDropIndicator()" />*/
	positionDropIndicator: function () {
		var pos = this.calculateDropIndicatorPosition(0, 0);
		this.__dropIndicatorElement.setPosition(pos.x() + this._element._left + this._element.__parent._left, pos.y() + this._element._top + this._element.__parent._top, 0, 0);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::PositionDropIndicator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::ReleaseMouseCapture()" />*/
	releaseMouseCapture: function () {
		(this._element.getRoot()).releaseCapture(this._element);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::ReleaseMouseCapture()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::ReleaseMouseCaptureForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	releaseMouseCaptureForTab: function (tab) {
		(this._element.getRoot()).releaseCapture(tab);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::ReleaseMouseCaptureForTab(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	removeVisual: function (visual) {
		visual.isRemoved(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::RemoveVisual(Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::VerifyItemDesiredSizes()" />*/
	verifyItemDesiredSizes: function () {
		var itemWidth = 0;
		var tabs = this.tabManager()._tabs();
		for (var i = 0, count = tabs.count(); i < count; i++) {
			var tabElem = tabs.item(i)._element();
			if (tabElem != null && tabElem._tab._visibility() == $.ig.excel.WorksheetVisibility.visible) {
				if (tabElem._textVersion != this._currentTextVersion) {
					tabElem._preferredWidth = this.spreadsheet()._measureHelper().measureTabItem(tabElem._tab, null, false);
					tabElem._textVersion = this._currentTextVersion;
				}
				itemWidth += tabElem._preferredWidth;
			}
		}
		this._preferredItemAreaWidth = itemWidth;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager::VerifyItemDesiredSizes()" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabItemElementLayoutManager', $.ig.SpreadsheetTabItemLayoutManager$1.prototype.$type.specialize($.ig.SpreadsheetTabItemElement.prototype.$type))
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElementLayoutManager" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel" />*/

$.ig.util.defType('SpreadsheetTabItemPanel', 'VisualElement', {
	_layoutManager: null,
	init: function (parent) {
		$.ig.VisualElement.prototype.init.call(this, parent, $.ig.SpreadsheetElementIds.prototype.tabItemPanel);
		this._layoutManager = new $.ig.SpreadsheetTabItemElementLayoutManager(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnLostCapture()" />*/
	onLostCapture: function () {
		this._layoutManager.onLostMouseCapture();
		$.ig.VisualElement.prototype.onLostCapture.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		this._layoutManager.onMouseDown(input);
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		if (this._layoutManager.onMouseMove(input)) {
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			return this._layoutManager.onMouseLeftButtonUp(input);
		}
		return $.ig.VisualElement.prototype.onMouseUp.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('SpreadsheetTabItemPanel', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemPanel" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetElementIds" />*/

$.ig.util.defType('SpreadsheetElementIds', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	$type: new $.ig.Type('SpreadsheetElementIds', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetElementIds" />*/

/*<BeginType Name="Infragistics.Controls.Core.RootVisualElement" />*/

$.ig.util.defType('RootVisualElement', 'VisualElement', {
	__eventProxy: null,
	__elementWithCapture: null,
	__elementUnderMouse: null,
	_windowEventNs: null,
	__firstMouseDown: new Date(),
	__clickCount: 0,
	__mouseDownPoint: null,
	__toolTip: null,
	__elementWithToolTip: null,
	__tooltipRelativeLeft: 0,
	__toolTipRelativeTop: 0,
	init: function (id) {
		this.__firstMouseDown = $.ig.Date.prototype.minValue();
		this.__mouseDownPoint = new $.ig.Point(0);
		$.ig.VisualElement.prototype.init.call(this, null, id);
		$.ig.RootVisualElement.prototype.__visualTreeCount++;
		this._windowEventNs = "VisualElementTreeWindow" + $.ig.RootVisualElement.prototype.__visualTreeCount;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::Dispose()" />*/
	dispose: function () {
		$.ig.VisualElement.prototype.dispose.call(this);
		this.eventProxy(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	setPositionOverride: function (left, top, width, height) {
		var result = $.ig.VisualElement.prototype.setPositionOverride.call(this, left, top, width, height);
		if (result && this.__eventProxy != null) {
			this.__eventProxy.viewport().x(left);
			this.__eventProxy.viewport().y(top);
			this.__eventProxy.viewport().width(width);
			this.__eventProxy.viewport().height(height);
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::SetPositionOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	__originalShouldInteract: null,
	/*<BeginProperty Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.RootVisualElement::ElementWithToolTip()" />*/
	elementWithToolTip: function () {
		return this.__elementWithToolTip;
	}
	/*<EndProperty Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.RootVisualElement::ElementWithToolTip()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.EventProxy Infragistics.Controls.Core.RootVisualElement::EventProxy()" />*/
	eventProxy: function (value) {
		if (arguments.length === 1) {
			if (value != this.__eventProxy) {
				var old = this.__eventProxy;
				if (this.__eventProxy != null) {
					this.shouldHookWindow(false);
					var $t = this.__eventProxy;
					$t.onFlingStarted = $.ig.Delegate.prototype.remove($t.onFlingStarted, this.onFlingStarted.runOn(this));
					var $t1 = this.__eventProxy;
					$t1.onMouseDown = $.ig.Delegate.prototype.remove($t1.onMouseDown, this.onMouseDown1.runOn(this));
					var $t2 = this.__eventProxy;
					$t2.onMouseEnter = $.ig.Delegate.prototype.remove($t2.onMouseEnter, this.onMouseEnter1.runOn(this));
					var $t3 = this.__eventProxy;
					$t3.onMouseLeave = $.ig.Delegate.prototype.remove($t3.onMouseLeave, this.onMouseLeave1.runOn(this));
					var $t4 = this.__eventProxy;
					$t4.onMouseOver = $.ig.Delegate.prototype.remove($t4.onMouseOver, this.onMouseOver.runOn(this));
					var $t5 = this.__eventProxy;
					$t5.onMouseUp = $.ig.Delegate.prototype.remove($t5.onMouseUp, this.onMouseUp1.runOn(this));
					var $t6 = this.__eventProxy;
					$t6.onMouseWheel = $.ig.Delegate.prototype.remove($t6.onMouseWheel, this.onMouseWheel1.runOn(this));
					this.__eventProxy.shouldInteract(this.__originalShouldInteract);
				}
				this.__eventProxy = value;
				if (this.__elementWithCapture != null) {
					this.releaseCapture(this.__elementWithCapture);
				}
				if (value != null) {
					this.__originalShouldInteract = this.__eventProxy.shouldInteract();
					this.__eventProxy.shouldInteract(this.shouldInteract.runOn(this));
					var $t7 = this.__eventProxy;
					$t7.onFlingStarted = $.ig.Delegate.prototype.combine($t7.onFlingStarted, this.onFlingStarted.runOn(this));
					var $t8 = this.__eventProxy;
					$t8.onMouseDown = $.ig.Delegate.prototype.combine($t8.onMouseDown, this.onMouseDown1.runOn(this));
					var $t9 = this.__eventProxy;
					$t9.onMouseEnter = $.ig.Delegate.prototype.combine($t9.onMouseEnter, this.onMouseEnter1.runOn(this));
					var $t10 = this.__eventProxy;
					$t10.onMouseLeave = $.ig.Delegate.prototype.combine($t10.onMouseLeave, this.onMouseLeave1.runOn(this));
					var $t11 = this.__eventProxy;
					$t11.onMouseOver = $.ig.Delegate.prototype.combine($t11.onMouseOver, this.onMouseOver.runOn(this));
					var $t12 = this.__eventProxy;
					$t12.onMouseUp = $.ig.Delegate.prototype.combine($t12.onMouseUp, this.onMouseUp1.runOn(this));
					var $t13 = this.__eventProxy;
					$t13.onMouseWheel = $.ig.Delegate.prototype.combine($t13.onMouseWheel, this.onMouseWheel1.runOn(this));
					this.__eventProxy.viewport(new $.ig.Rect(0, this._left, this._top, this._width, this._height));
				}
				this.onEventProxyChanged(old, value);
			}
			return value;
		} else {
			return this.__eventProxy;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.EventProxy Infragistics.Controls.Core.RootVisualElement::EventProxy()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::HasCapture()" />*/
	hasCapture: function () {
		return this.__elementWithCapture != null;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::HasCapture()" />*/
	,
	__shouldHookWindow: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::ShouldHookWindow()" />*/
	shouldHookWindow: function (value) {
		if (arguments.length === 1) {
			if (value != this.__shouldHookWindow) {
				this.__shouldHookWindow = value;
			}
			return value;
		} else {
			return this.__shouldHookWindow;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::ShouldHookWindow()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::Capture(Infragistics.Controls.Core.VisualElement)" />*/
	capture: function (element) {
		$.ig.Debug.prototype.assert(element != null);
		$.ig.Debug.prototype.assert(this.__elementWithCapture == null);
		this.__elementWithCapture = element;
		this.shouldHookWindow(true);
		element.onGotCapture();
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::Capture(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElementInputProxy Infragistics.Controls.Core.RootVisualElement::CreateProxy(Infragistics.Controls.Core.VisualElement, System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType, System.Int32, System.Boolean)" />*/
	createProxy: function (elem, point, changeType, clickCount, isDown) {
		if (elem == null) {
			return null;
		}
		var x = point.__x;
		var y = point.__y;
		var temp = elem;
		while (temp != null) {
			x -= temp._left;
			y -= temp._top;
			temp = temp.__parent;
		}
		return new $.ig.VisualElementInputProxy(this, changeType, this.__eventProxy, x, y, elem, clickCount, isDown);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElementInputProxy Infragistics.Controls.Core.RootVisualElement::CreateProxy(Infragistics.Controls.Core.VisualElement, System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElementInputProxy Infragistics.Controls.Core.RootVisualElement::GetProxyFromMousePoint(System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType, System.Int32, System.Boolean)" />*/
	getProxyFromMousePoint: function (point, changeType, clickCount, isDown) {
		var elem = this.getTargetElement(point.__x, point.__y, true);
		return this.createProxy(elem, point, changeType, clickCount, isDown);
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElementInputProxy Infragistics.Controls.Core.RootVisualElement::GetProxyFromMousePoint(System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType, System.Int32, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.RootVisualElement::GetCommonAncestor(Infragistics.Controls.Core.VisualElement, Infragistics.Controls.Core.VisualElement)" />*/
	getCommonAncestor: function (elem1, elem2) {
		var depth1 = this.getNestingDepth(elem1);
		var depth2 = this.getNestingDepth(elem2);
		if (depth1 == 0 || depth2 == 0) {
			return null;
		}
		while (depth1 > depth2) {
			elem1 = elem1.__parent;
			depth1--;
		}
		while (depth2 > depth1) {
			elem2 = elem2.__parent;
			depth2--;
		}
		while (elem2 != elem1) {
			elem2 = elem2.__parent;
			elem1 = elem1.__parent;
		}
		return elem1;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.RootVisualElement::GetCommonAncestor(Infragistics.Controls.Core.VisualElement, Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Core.RootVisualElement::GetNestingDepth(Infragistics.Controls.Core.VisualElement)" />*/
	getNestingDepth: function (elem) {
		var count = 0;
		while (elem != null) {
			count++;
			elem = elem.__parent;
		}
		return count;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Core.RootVisualElement::GetNestingDepth(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnBeforeMouseAction(Infragistics.Controls.Core.VisualElementInputType)" />*/
	onBeforeMouseAction: function (inputType) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnBeforeMouseAction(Infragistics.Controls.Core.VisualElementInputType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnContextMenuRequest(System.Windows.Point)" />*/
	onContextMenuRequest: function (pt) {
		this.onMouseAction(pt, $.ig.InputContactChangeType.prototype.mouseRightButton, 1, $.ig.VisualElementInputType.prototype.mouseDown, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnContextMenuRequest(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnEventProxyChanged(Infragistics.Controls.EventProxy, Infragistics.Controls.EventProxy)" />*/
	onEventProxyChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnEventProxyChanged(Infragistics.Controls.EventProxy, Infragistics.Controls.EventProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnFlingStarted(System.Windows.Point, System.Double, System.Double)" />*/
	onFlingStarted: function (point, velocityX, velocityY) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnFlingStarted(System.Windows.Point, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnHideToolTip()" />*/
	onHideToolTip: function () {
		if (this.__elementWithToolTip != null) {
			$.ig.Debug.prototype.assert(this.__elementWithToolTip.containsToolTip() == false);
			this.__elementWithToolTip = null;
			this.__toolTip.isVisible(false);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnHideToolTip()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnMouseAction(System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType, System.Int32, Infragistics.Controls.Core.VisualElementInputType, System.Object)" />*/
	onMouseAction: function (point, changeType, clickCount, inputType, extraInfo) {
		this.onBeforeMouseAction(inputType);
		var isDown = inputType == $.ig.VisualElementInputType.prototype.mouseDown;
		if (this.__elementWithCapture != null && this != this.__elementWithCapture.getRoot()) {
			this.releaseCapture(this.__elementWithCapture);
		}
		var proxy = this.__elementWithCapture != null ? this.createProxy(this.__elementWithCapture, point, changeType, clickCount, isDown) : this.getProxyFromMousePoint(point, changeType, clickCount, isDown);
		this.raiseMouseEnterExit(point, proxy);
		if (proxy != null) {
			var relPt = proxy.getRelativePoint();
			var x = relPt.__x;
			var y = relPt.__y;
			var elem = proxy.relativeElement();
			while (elem != null) {
				switch (inputType) {
					case $.ig.VisualElementInputType.prototype.mouseOver:
						if (elem.onMouseMove(proxy)) {
							return true;
						}
						break;
					case $.ig.VisualElementInputType.prototype.mouseDown:
						if (elem.onMouseDown(proxy)) {
							return true;
						}
						break;
					case $.ig.VisualElementInputType.prototype.mouseUp:
						if (elem.onMouseUp(proxy)) {
							return true;
						}
						break;
					case $.ig.VisualElementInputType.prototype.mouseWheel:
						if (elem.onMouseWheel(proxy, extraInfo)) {
							return true;
						}
						break;
				}
				x += elem._left;
				y += elem._top;
				proxy.initialize(x, y, elem.__parent);
				elem = elem.__parent;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnMouseAction(System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType, System.Int32, Infragistics.Controls.Core.VisualElementInputType, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseDown(System.Windows.Point)" />*/
	onMouseDown1: function (point) {
		if (this.onPreMouseDown(point)) {
			return;
		}
		var now = $.ig.Date.prototype.now();
		if (Math.abs(point.__x - this.__mouseDownPoint.__x) < 8 && Math.abs(point.__y - this.__mouseDownPoint.__y) < 8 && $.ig.util.timeSpanTotalMilliseconds((now - this.__firstMouseDown)) < 500) {
			this.__clickCount++;
		} else {
			this.__clickCount = 1;
			this.__firstMouseDown = now;
			this.__mouseDownPoint.__x = point.__x;
			this.__mouseDownPoint.__y = point.__y;
		}
		var changeType = this.__eventProxy.rightButton() ? $.ig.InputContactChangeType.prototype.mouseRightButton : $.ig.InputContactChangeType.prototype.mouseLeftButton;
		this.onMouseAction(point, changeType, this.__clickCount, $.ig.VisualElementInputType.prototype.mouseDown, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseDown(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseOver(System.Windows.Point, System.Boolean, System.Boolean)" />*/
	onMouseOver: function (point, onMouseMove, isFinger) {
		this.onMouseAction(point, $.ig.InputContactChangeType.prototype.none, 0, $.ig.VisualElementInputType.prototype.mouseOver, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseOver(System.Windows.Point, System.Boolean, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseLeave(System.Windows.Point)" />*/
	onMouseLeave1: function (point) {
		if (!this.__shouldHookWindow) {
			this.raiseMouseEnterExit(point, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseLeave(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseEnter(System.Windows.Point)" />*/
	onMouseEnter1: function (point) {
		if (!this.__shouldHookWindow) {
			var proxy = this.getProxyFromMousePoint(point, $.ig.InputContactChangeType.prototype.none, 0, false);
			this.raiseMouseEnterExit(point, proxy);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseEnter(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseUp(System.Windows.Point)" />*/
	onMouseUp1: function (point) {
		var changeType = this.__eventProxy.rightButton() ? $.ig.InputContactChangeType.prototype.mouseRightButton : $.ig.InputContactChangeType.prototype.mouseLeftButton;
		this.onMouseUp2(point, changeType);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseUp(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseUp(System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType)" />*/
	onMouseUp2: function (point, changeType) {
		if (this.__elementWithCapture == null && this.eventProxy() != null && this.eventProxy().viewport().containsPoint(point) && !this.eventProxy().shouldInteract()(point)) {
			return;
		}
		this.onMouseAction(point, changeType, 1, $.ig.VisualElementInputType.prototype.mouseUp, null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnMouseUp(System.Windows.Point, Infragistics.Controls.Core.InputContactChangeType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnMouseWheel(System.Windows.Point, System.Double)" />*/
	onMouseWheel1: function (point, delta) {
		delta *= 10;
		if (this.onPreMouseWheel(point, delta)) {
			return true;
		}
		return this.onMouseAction(point, $.ig.InputContactChangeType.prototype.none, 1, $.ig.VisualElementInputType.prototype.mouseWheel, delta);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnMouseWheel(System.Windows.Point, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnPreMouseDown(System.Windows.Point)" />*/
	onPreMouseDown: function (point) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnPreMouseDown(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnPreMouseWheel(System.Windows.Point, System.Double)" />*/
	onPreMouseWheel: function (point, delta) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::OnPreMouseWheel(System.Windows.Point, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnShowToolTip(Infragistics.Controls.Core.VisualElement, System.String, System.Double, System.Double)" />*/
	onShowToolTip: function (visualElement, content, left, top) {
		$.ig.Debug.prototype.assert1(this.__elementWithToolTip == null, "We already have something with a tooltip!");
		this.__elementWithToolTip = visualElement;
		if (this.__toolTip == null) {
			this.__toolTip = new $.ig.ToolTipVisualElement(this, "ToolTip");
			this.__toolTip.zIndex(10000);
		}
		this.__tooltipRelativeLeft = left;
		this.__toolTipRelativeTop = top;
		this.__toolTip.text(content);
		var el = visualElement;
		while (el != this) {
			left += el._left;
			top += el._top;
			el = el.__parent;
		}
		this.__toolTip.setPosition(left, top, NaN, NaN);
		this.__toolTip.isVisible(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::OnShowToolTip(Infragistics.Controls.Core.VisualElement, System.String, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::RaiseMouseEnterExit(System.Windows.Point, Infragistics.Controls.Core.VisualElementInputProxy)" />*/
	raiseMouseEnterExit: function (point, mouseOverInput) {
		var oldElem = this.__elementUnderMouse;
		var input = mouseOverInput;
		var newElem = input != null ? input.relativeElement() : null;
		if (newElem == oldElem) {
			return;
		}
		var ancestor = this.getCommonAncestor(oldElem, newElem);
		var enters = new $.ig.Stack$1($.ig.VisualElement.prototype.$type);
		if (input == null) {
			input = new $.ig.VisualElementInputProxy(this, $.ig.InputContactChangeType.prototype.none, this.__eventProxy, point.__x, point.__y, this, 0, false);
		}
		var x = input.getRelativePoint().__x;
		var y = input.getRelativePoint().__y;
		var origX = x;
		var origY = y;
		var origElem = input.relativeElement();
		this.__elementUnderMouse = newElem;
		while (newElem != null && newElem != ancestor) {
			enters.push(newElem);
			x += newElem._left;
			y += newElem._top;
			newElem = newElem.__parent;
		}
		var leaveX = x;
		var leaveY = y;
		var leaveAncestor = oldElem;
		while (leaveAncestor != null && leaveAncestor != ancestor) {
			leaveX -= leaveAncestor._left;
			leaveY -= leaveAncestor._top;
			leaveAncestor = leaveAncestor.__parent;
		}
		while (oldElem != null && oldElem != ancestor) {
			input.initialize(leaveX, leaveY, oldElem);
			oldElem.onMouseLeave(input);
			oldElem.isMouseOver(false);
			leaveX += oldElem._left;
			leaveY += oldElem._top;
			oldElem = oldElem.__parent;
		}
		while (enters.count() > 0) {
			var enter = enters.pop();
			input.initialize(x, y, enter);
			enter.isMouseOver(true);
			enter.onMouseEnter(input);
			x += enter._left;
			y += enter._top;
		}
		input.initialize(origX, origY, origElem);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::RaiseMouseEnterExit(System.Windows.Point, Infragistics.Controls.Core.VisualElementInputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::ReleaseCapture(Infragistics.Controls.Core.VisualElement)" />*/
	releaseCapture: function (element) {
		$.ig.Debug.prototype.assert(element == this.__elementWithCapture);
		if (this.__elementWithCapture == element) {
			this.__elementWithCapture = null;
			this.shouldHookWindow(false);
			element.onLostCapture();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RootVisualElement::ReleaseCapture(Infragistics.Controls.Core.VisualElement)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::ShouldInteract(System.Windows.Point)" />*/
	shouldInteract: function (mousePt) {
		if (this.hasCapture()) {
			return true;
		}
		if (this.__originalShouldInteract != null && !this.__originalShouldInteract(mousePt)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RootVisualElement::ShouldInteract(System.Windows.Point)" />*/
	,
	$type: new $.ig.Type('RootVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.RootVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElement" />*/

$.ig.util.defType('SpreadsheetVisualElement', 'RootVisualElement', {
	_spreadsheet: null,
	_areaElement: null,
	_formulaBar: null,
	init: function (spreadsheet) {
		$.ig.RootVisualElement.prototype.init.call(this, $.ig.SpreadsheetElementIds.prototype.spreadsheet);
		this._spreadsheet = spreadsheet;
		this._formulaBar = new $.ig.FormulaBarVisualElement(this);
		this._formulaBar.zIndex(1000);
		this._areaElement = new $.ig.SpreadsheetAreaVisualElement(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnBeforeMouseAction(Infragistics.Controls.Core.VisualElementInputType)" />*/
	onBeforeMouseAction: function (inputType) {
		if (this._spreadsheet.activeWorksheet() == null || this._spreadsheet.activeWorksheet().workbook() == null) {
			this._spreadsheet._arrange1(false);
		}
		$.ig.RootVisualElement.prototype.onBeforeMouseAction.call(this, inputType);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnBeforeMouseAction(Infragistics.Controls.Core.VisualElementInputType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnEventProxyChanged(Infragistics.Controls.EventProxy, Infragistics.Controls.EventProxy)" />*/
	onEventProxyChanged: function (oldValue, newValue) {
		$.ig.RootVisualElement.prototype.onEventProxyChanged.call(this, oldValue, newValue);
		if (oldValue != null) {
			oldValue.onKeyDown = $.ig.Delegate.prototype.remove(oldValue.onKeyDown, this.onKeyDown.runOn(this));
		}
		if (newValue != null) {
			newValue.onKeyDown = $.ig.Delegate.prototype.combine(newValue.onKeyDown, this.onKeyDown.runOn(this));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnEventProxyChanged(Infragistics.Controls.EventProxy, Infragistics.Controls.EventProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnPreMouseDown(System.Windows.Point)" />*/
	onPreMouseDown: function (point) {
		if (this._spreadsheet._isContextMenuOpen()) {
			this._spreadsheet._closeContextMenu();
			return true;
		}
		return $.ig.RootVisualElement.prototype.onPreMouseDown.call(this, point);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnPreMouseDown(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnPreMouseWheel(System.Windows.Point, System.Double)" />*/
	onPreMouseWheel: function (point, delta) {
		if (this._spreadsheet._isContextMenuOpen()) {
			this._spreadsheet._closeContextMenu();
		}
		return $.ig.RootVisualElement.prototype.onPreMouseWheel.call(this, point, delta);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnPreMouseWheel(System.Windows.Point, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.RootVisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		var y = top;
		if (this._formulaBar.isVisible()) {
			var formulaBarHeight = this._formulaBar._preferredHeight;
			this._formulaBar.setPosition(left, y, width, formulaBarHeight);
			y += formulaBarHeight;
			height = Math.max(height - formulaBarHeight, 0);
		}
		this._areaElement.setPosition(left, y, width, height);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnKeyDown(System.Windows.Input.Key)" />*/
	onKeyDown: function (key) {
		var modifiers = this.eventProxy().currentModifiers();
		return this._spreadsheet._onSpreadsheetElementKeyDown(key, modifiers, this.eventProxy().originalEvent());
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetVisualElement::OnKeyDown(System.Windows.Input.Key)" />*/
	,
	$type: new $.ig.Type('SpreadsheetVisualElement', $.ig.RootVisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.MergedScrollInfo" />*/

$.ig.util.defType('MergedScrollInfo', 'ScrollInfo', {
	___isSynchronizing: false,
	___isDirty: false,
	___sourceScrollInfos: null,
	___dirtyAction: null,
	init: function () {
		$.ig.ScrollInfo.prototype.init.call(this);
		this.___sourceScrollInfos = new $.ig.WeakDictionary$2($.ig.ScrollInfo.prototype.$type, $.ig.Object.prototype.$type, 0, true, false);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::OnPropertyChanged(System.String)" />*/
	_onPropertyChanged: function (propertyName) {
		this._dirty();
		$.ig.ScrollInfo.prototype._onPropertyChanged.call(this, propertyName);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::OnPropertyChanged(System.String)" />*/
	,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Primitives.MergedScrollInfo::DirtyAction()" />*/
	_dirtyAction: function (value) {
		if (arguments.length === 1) {
			this.___dirtyAction = value;
			return value;
		} else {
			return this.___dirtyAction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Primitives.MergedScrollInfo::DirtyAction()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.MergedScrollInfo::IsDirty()" />*/
	_isDirty: function () {
		return this.___isDirty;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.MergedScrollInfo::IsDirty()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::Add(Infragistics.Controls.Primitives.ScrollInfo)" />*/
	_add: function (sourceScrollInfo) {
		if (!this.___sourceScrollInfos.containsKey(sourceScrollInfo)) {
			this.___sourceScrollInfos.add(sourceScrollInfo, null);
			(sourceScrollInfo).addListener(this, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::Add(Infragistics.Controls.Primitives.ScrollInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::Dirty()" />*/
	_dirty: function () {
		if (!this.___isDirty) {
			this.___isDirty = true;
			if (this.___dirtyAction != null) {
				this.___dirtyAction();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::Dirty()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Primitives.MergedScrollInfo::Remove(Infragistics.Controls.Primitives.ScrollInfo)" />*/
	_remove: function (sourceScrollInfo) {
		var result = this.___sourceScrollInfos.remove(sourceScrollInfo);
		if (result) {
			(sourceScrollInfo).removeListener(this);
		}
		return result;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Primitives.MergedScrollInfo::Remove(Infragistics.Controls.Primitives.ScrollInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::VerifyState()" />*/
	_verifyState: function () {
		if (!this.___isDirty) {
			return;
		}
		$.ig.Debug.prototype.assert(!this.___isSynchronizing);
		this.___isSynchronizing = true;
		try {
			var viewport = 0;
			var extent = 0;
			var en = this.___sourceScrollInfos.keys().getEnumerator();
			while (en.moveNext()) {
				var si = en.current();
				if (!si._isInUse()) {
					continue;
				}
				viewport = Math.max(viewport, si._viewport());
				extent = Math.max(extent, si._extent());
			}
			this._initialize(viewport, extent, this._offset());
			var en1 = this.___sourceScrollInfos.keys().getEnumerator();
			while (en1.moveNext()) {
				var si1 = en1.current();
				if (!si1._isInUse()) {
					continue;
				}
				si1._offset(this._offset());
			}
		}
		finally {
			this.___isSynchronizing = false;
			this.___isDirty = false;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::VerifyState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::Infragistics.ITypedPropertyChangeListener<System.Object,System.String>.OnPropertyValueChanged(System.Object, System.String, System.Object)" />*/
	onPropertyValueChanged: function (dataItem, property, extraInfo) {
		if (property == "Offset") {
			return;
		}
		this._dirty();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.MergedScrollInfo::Infragistics.ITypedPropertyChangeListener<System.Object,System.String>.OnPropertyValueChanged(System.Object, System.String, System.Object)" />*/
	,
	$type: new $.ig.Type('MergedScrollInfo', $.ig.ScrollInfo.prototype.$type, [$.ig.IPropertyChangeListener.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.MergedScrollInfo" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.IScrollInfoProvider" />*/

$.ig.util.defType('IScrollInfoProvider', 'Object', {
	$type: new $.ig.Type('IScrollInfoProvider', null)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.IScrollInfoProvider" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollBarInfoMediator" />*/

$.ig.util.defType('ScrollBarInfoMediator', 'Object', {
	__scrollInfo: null,
	__scrollBar: null,
	__isInitializing: false,
	__scrollBarVisibilityAction: null,
	__scrollBarIsEnabledAction: null,
	init: function (scrollInfo) {
		$.ig.Object.prototype.init.call(this);
		this.__scrollInfo = scrollInfo;
		var $t = this.__scrollInfo;
		$t.propertyChanged = $.ig.Delegate.prototype.combine($t.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollBarInfoMediator::IsInitializingScrollBar()" />*/
	isInitializingScrollBar: function () {
		return this.__isInitializing;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.ScrollBarInfoMediator::IsInitializingScrollBar()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollBar()" />*/
	scrollBar: function (value) {
		if (arguments.length === 1) {
			if (value != this.__scrollBar) {
				var old = this.__scrollBar;
				this.__scrollBar = value;
				if (old != null) {
					old.setOnValueChangeCallback(null);
				}
				if (this.__scrollBar != null) {
					this.initializeScrollBar();
					this.__scrollBar.setOnValueChangeCallback(this.onScrollBarOffsetChanged.runOn(this));
				}
				this.onScrollBarChanged(old, value);
			}
			return value;
		} else {
			return this.__scrollBar;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollBar()" />*/
	,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollBarIsEnabledAction()" />*/
	scrollBarIsEnabledAction: function (value) {
		if (arguments.length === 1) {
			this.__scrollBarIsEnabledAction = value;
			return value;
		} else {
			return this.__scrollBarIsEnabledAction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollBarIsEnabledAction()" />*/
	,
	/*<BeginProperty Name="System.Action Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollBarVisibilityAction()" />*/
	scrollBarVisibilityAction: function (value) {
		if (arguments.length === 1) {
			this.__scrollBarVisibilityAction = value;
			return value;
		} else {
			return this.__scrollBarVisibilityAction;
		}
	}
	/*<EndProperty Name="System.Action Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollBarVisibilityAction()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ScrollInfo Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollInfo()" />*/
	scrollInfo: function () {
		return this.__scrollInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ScrollInfo Infragistics.Controls.Primitives.ScrollBarInfoMediator::ScrollInfo()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::Dispose()" />*/
	dispose: function () {
		var $t = this.__scrollInfo;
		$t.propertyChanged = $.ig.Delegate.prototype.remove($t.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
		this.scrollBar(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::InitializeScrollBar()" />*/
	initializeScrollBar: function () {
		var sb = this.__scrollBar;
		if (sb == null) {
			return;
		}
		$.ig.Debug.prototype.assert(!this.__isInitializing);
		if (this.__isInitializing) {
			return;
		}
		try {
			this.__isInitializing = true;
			sb.initialize(this.__scrollInfo._minimum(), this.__scrollInfo._maximum(), Number.isInfinity(this.__scrollInfo._viewport()) ? this.__scrollInfo._maximum() : this.__scrollInfo._viewport(), this.__scrollInfo._offset(), this.__scrollInfo._largeChangeResolved(), this.__scrollInfo._smallChange());
			this.updateScrollBarIsEnabled();
			this.updateScrollBarVisibility();
		}
		finally {
			this.__isInitializing = false;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::InitializeScrollBar()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	onScrollBarChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::OnScrollBarOffsetChanged(System.Double)" />*/
	onScrollBarOffsetChanged: function (newOffset) {
		if (this.__scrollBar != null && !this.__isInitializing) {
			this.__scrollInfo._offset(newOffset);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::OnScrollBarOffsetChanged(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::OnScrollInfoPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	onScrollInfoPropertyChanged: function (sender, e) {
		if (this.__scrollBar != null) {
			if (String.isNullOrEmpty(e.propertyName())) {
				this.initializeScrollBar();
			} else {
				switch (e.propertyName()) {
					case "Minimum":
						this.__scrollBar.setMinimum(this.__scrollInfo._minimum());
						break;
					case "Maximum":
					case "ScrollableExtent":
						this.__scrollBar.setMaximum(this.__scrollInfo._maximum());
						break;
					case "Viewport":
						this.__scrollBar.setViewportSize(this.__scrollInfo._viewport());
						break;
					case "Offset":
						this.__scrollBar.setValue(this.__scrollInfo._offset());
						break;
					case "ComputedScrollBarIsEnabled":
						this.updateScrollBarIsEnabled();
						break;
					case "ComputedScrollBarVisibility":
						this.updateScrollBarVisibility();
						break;
					case "Extent":
					case "LargeChange":
						break;
					case "LargeChangeResolved":
						this.__scrollBar.setLargeChange(this.__scrollInfo._largeChangeResolved());
						break;
					case "SmallChange":
						this.__scrollBar.setSmallChange(this.__scrollInfo._smallChange());
						break;
					case "IsRangeChangeSuspended":
					case "ScrollBarVisibility":
						break;
					default:
						$.ig.Debug.prototype.assert1(false, "Unexpected property change? " + e.propertyName());
						break;
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::OnScrollInfoPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::UpdateScrollBarIsEnabled()" />*/
	updateScrollBarIsEnabled: function () {
		if (this.__scrollBarIsEnabledAction != null) {
			this.__scrollBarIsEnabledAction();
		} else if (this.__scrollBar != null) {
			this.__scrollBar.setIsEnabled(this.__scrollInfo._computedScrollBarIsEnabled());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::UpdateScrollBarIsEnabled()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::UpdateScrollBarVisibility()" />*/
	updateScrollBarVisibility: function () {
		if (this.__scrollBarVisibilityAction != null) {
			this.__scrollBarVisibilityAction();
		} else if (this.__scrollBar != null) {
			this.__scrollBar.setIsVisible(this.__scrollInfo._computedScrollBarVisibility());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarInfoMediator::UpdateScrollBarVisibility()" />*/
	,
	$type: new $.ig.Type('ScrollBarInfoMediator', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ScrollBarInfoMediator" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator" />*/

$.ig.util.defType('ScrollBarVisibilityCoordinator', 'Object', {
	__deferredOperation: null,
	__mediators: null,
	__readOnlyMediators: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.__deferredOperation = new $.ig.DeferredOperation(this.processPendingChanges.runOn(this));
		this.__mediators = new $.ig.List$1($.ig.ScrollBarInfoMediator.prototype.$type, 0);
		this.__readOnlyMediators = new $.ig.ReadOnlyCollection$1($.ig.ScrollBarInfoMediator.prototype.$type, 1, this.__mediators);
	},
	/*<BeginProperty Name="System.Collections.ObjectModel.ReadOnlyCollection Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Mediators()" />*/
	mediators: function () {
		return this.__readOnlyMediators;
	}
	/*<EndProperty Name="System.Collections.ObjectModel.ReadOnlyCollection Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Mediators()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Add(Infragistics.Controls.Primitives.ScrollBarInfoMediator)" />*/
	add: function (mediator) {
		this.__mediators.add(mediator);
		mediator.scrollBarVisibilityAction(this.requestSyncScrollBarVisibility.runOn(this));
		this.__deferredOperation.startAsyncOperation();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Add(Infragistics.Controls.Primitives.ScrollBarInfoMediator)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Contains(Infragistics.Controls.Primitives.ScrollBarInfoMediator)" />*/
	contains: function (mediator) {
		return this.__mediators.contains(mediator);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Contains(Infragistics.Controls.Primitives.ScrollBarInfoMediator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Remove(Infragistics.Controls.Primitives.ScrollBarInfoMediator)" />*/
	remove: function (mediator) {
		if (this.__mediators.remove(mediator)) {
			mediator.scrollBarVisibilityAction(null);
		}
		if (this.__mediators.count() > 0) {
			this.__deferredOperation.startAsyncOperation();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::Remove(Infragistics.Controls.Primitives.ScrollBarInfoMediator)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::StartAsyncVerification()" />*/
	startAsyncVerification: function () {
		this.__deferredOperation.startAsyncOperation();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::StartAsyncVerification()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::RequestSyncScrollBarVisibility()" />*/
	requestSyncScrollBarVisibility: function () {
		this.__deferredOperation.startAsyncOperation();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::RequestSyncScrollBarVisibility()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::ProcessPendingChanges()" />*/
	processPendingChanges: function () {
		var isVisible = false;
		var en = this.__mediators.getEnumerator();
		while (en.moveNext()) {
			var mediator = en.current();
			if (null == mediator.scrollBar()) {
				continue;
			}
			if (mediator.scrollInfo()._computedScrollBarVisibility()) {
				isVisible = true;
				break;
			}
		}
		var en1 = this.__mediators.getEnumerator();
		while (en1.moveNext()) {
			var mediator1 = en1.current();
			var sb = mediator1.scrollBar();
			if (null != sb) {
				sb.setIsVisible(isVisible);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator::ProcessPendingChanges()" />*/
	,
	$type: new $.ig.Type('ScrollBarVisibilityCoordinator', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter" />*/

$.ig.util.defType('IPlatformScrollBarAdapter', 'Object', {
	$type: new $.ig.Type('IPlatformScrollBarAdapter', null)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase" />*/

$.ig.util.defType('ExtendedScrollArrowHelperBase', 'Object', {
	__scrollBar: null,
	_scrollCallback: null,
	__scrollInfo: null,
	__isInThumbDrag: false,
	init: function (callback) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(callback);
		this._scrollCallback = callback;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::IsInThumbDrag()" />*/
	isInThumbDrag: function () {
		return this.__isInThumbDrag;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::IsInThumbDrag()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::ScrollBar()" />*/
	scrollBar: function (value) {
		if (arguments.length === 1) {
			if (value != this.__scrollBar) {
				var oldScrollBar = this.__scrollBar;
				this.__scrollBar = value;
				this.onScrollBarChanged(oldScrollBar, this.__scrollBar);
			}
			return value;
		} else {
			return this.__scrollBar;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.IPlatformScrollBarAdapter Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::ScrollBar()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ScrollInfo Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::ScrollInfo()" />*/
	scrollInfo: function (value) {
		if (arguments.length === 1) {
			if (value != this.__scrollInfo) {
				var old = this.__scrollInfo;
				this.__scrollInfo = value;
				if (this.isInThumbDrag()) {
					if ($.ig.util.cast($.ig.ExtendedRangeScrollInfo.prototype.$type, old) !== null) {
						(old)._resumeRangeChange();
					}
					if ($.ig.util.cast($.ig.ExtendedRangeScrollInfo.prototype.$type, value) !== null) {
						(value)._suspendRangeChange($.ig.util.toNullable(Number, null));
					}
				}
			}
			return value;
		} else {
			return this.__scrollInfo;
		}
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ScrollInfo Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::ScrollInfo()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	onScrollBarChanged: function (oldValue, newValue) {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::OnThumbDragEnded()" />*/
	onThumbDragEnded: function () {
		if (this.__isInThumbDrag) {
			this.__isInThumbDrag = false;
			if ($.ig.util.cast($.ig.ExtendedRangeScrollInfo.prototype.$type, this.__scrollInfo) !== null) {
				(this.__scrollInfo)._resumeRangeChange();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::OnThumbDragEnded()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::OnThumbDragStarted(System.Nullable)" />*/
	onThumbDragStarted: function (preScrollValue) {
		if (!this.__isInThumbDrag) {
			this.__isInThumbDrag = true;
			if ($.ig.util.cast($.ig.ExtendedRangeScrollInfo.prototype.$type, this.__scrollInfo) !== null) {
				(this.__scrollInfo)._suspendRangeChange(preScrollValue);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase::OnThumbDragStarted(System.Nullable)" />*/
	,
	$type: new $.ig.Type('ExtendedScrollArrowHelperBase', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ExtendedScrollArrowHelper" />*/

$.ig.util.defType('ExtendedScrollArrowHelper', 'ExtendedScrollArrowHelperBase', {
	init: function (callback) {
		$.ig.ExtendedScrollArrowHelperBase.prototype.init.call(this, callback);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelper::OnScroll(System.Object, Infragistics.Controls.Primitives.JsScrollEventArgs)" />*/
	onScroll: function (sender, e) {
		if (this.scrollInfo() != null) {
			switch (e.__scrollEventType) {
				case $.ig.JsScrollEventType.prototype.thumbTrack:
					this.onThumbDragStarted($.ig.util.toNullable(Number, e.__newValue));
					break;
				case $.ig.JsScrollEventType.prototype.endScroll:
					this.onThumbDragEnded();
					break;
				case $.ig.JsScrollEventType.prototype.smallIncrement:
					this._scrollCallback($.ig.ScrollInfoAmount.prototype.smallIncrement, e.__newValue);
					e.__newValue = this.scrollInfo()._offset();
					break;
				case $.ig.JsScrollEventType.prototype.smallDecrement:
					this._scrollCallback($.ig.ScrollInfoAmount.prototype.smallDecrement, e.__newValue);
					e.__newValue = this.scrollInfo()._offset();
					break;
				case $.ig.JsScrollEventType.prototype.largeIncrement:
					this._scrollCallback($.ig.ScrollInfoAmount.prototype.largeIncrement, e.__newValue);
					e.__newValue = this.scrollInfo()._offset();
					break;
				case $.ig.JsScrollEventType.prototype.largeDecrement:
					this._scrollCallback($.ig.ScrollInfoAmount.prototype.largeDecrement, e.__newValue);
					e.__newValue = this.scrollInfo()._offset();
					break;
				default: return;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelper::OnScroll(System.Object, Infragistics.Controls.Primitives.JsScrollEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelper::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	onScrollBarChanged: function (oldValue, newValue) {
		var oldBar = $.ig.util.cast($.ig.JsScrollBarAdapter.prototype.$type, oldValue);
		var newBar = $.ig.util.cast($.ig.JsScrollBarAdapter.prototype.$type, newValue);
		if (oldBar != null) {
			var $t = oldBar._scrollBar._element;
			$t.scroll = $.ig.Delegate.prototype.remove($t.scroll, this.onScroll.runOn(this));
		}
		if (newBar != null) {
			var $t1 = newBar._scrollBar._element;
			$t1.scroll = $.ig.Delegate.prototype.combine($t1.scroll, this.onScroll.runOn(this));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollArrowHelper::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	$type: new $.ig.Type('ExtendedScrollArrowHelper', $.ig.ExtendedScrollArrowHelperBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ExtendedScrollArrowHelper" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ExtendedScrollBarInfoMediator" />*/

$.ig.util.defType('ExtendedScrollBarInfoMediator', 'ScrollBarInfoMediator', {
	__arrowHelper: null,
	init: function (scrollInfo) {
		$.ig.ScrollBarInfoMediator.prototype.init.call(this, scrollInfo);
		this.__arrowHelper = new $.ig.ExtendedScrollArrowHelper(scrollInfo._scroll1.runOn(scrollInfo));
		this.__arrowHelper.scrollInfo(scrollInfo);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollBarInfoMediator::Dispose()" />*/
	dispose: function () {
		$.ig.ScrollBarInfoMediator.prototype.dispose.call(this);
		this.__arrowHelper.scrollInfo(null);
		this.__arrowHelper.scrollBar(null);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollBarInfoMediator::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollBarInfoMediator::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	onScrollBarChanged: function (oldValue, newValue) {
		if (this.__arrowHelper.scrollInfo() != null) {
			this.__arrowHelper.scrollBar(newValue);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ExtendedScrollBarInfoMediator::OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter, Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)" />*/
	,
	$type: new $.ig.Type('ExtendedScrollBarInfoMediator', $.ig.ScrollBarInfoMediator.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ExtendedScrollBarInfoMediator" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ScrollInfoUtilities" />*/

$.ig.util.defType('ScrollInfoUtilities', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	$type: new $.ig.Type('ScrollInfoUtilities', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ScrollInfoUtilities" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.JsScrollBarAdapter" />*/

$.ig.util.defType('JsScrollBarAdapter', 'Object', {
	_scrollBar: null,
	__offsetChangeCallback: null,
	init: function (scrollBar) {
		$.ig.Object.prototype.init.call(this);
		this._scrollBar = scrollBar;
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.ScrollInfo Infragistics.Controls.Primitives.JsScrollBarAdapter::ScrollInfo()" />*/
	scrollInfo: function () {
		return this._scrollBar._element._scrollInfo;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.ScrollInfo Infragistics.Controls.Primitives.JsScrollBarAdapter::ScrollInfo()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::Dispose()" />*/
	dispose: function () {
		this._scrollBar.dispose();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Primitives.JsScrollBarAdapter::GetValue()" />*/
	getValue: function () {
		return this.scrollInfo()._offset();
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Primitives.JsScrollBarAdapter::GetValue()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::Initialize(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	initialize: function (minimum, maximum, viewportSize, value, largeChange, smallChange) {
		var si = this.scrollInfo();
		if (this.__offsetChangeCallback != null) {
			si.propertyChanged = $.ig.Delegate.prototype.remove(si.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
		}
		si._minimum(minimum);
		si._smallChange(smallChange);
		si._largeChange($.ig.util.toNullable(Number, largeChange));
		si._initialize(viewportSize, maximum + largeChange, value);
		if (this.__offsetChangeCallback != null) {
			si.propertyChanged = $.ig.Delegate.prototype.combine(si.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::Initialize(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetMinimum(System.Double)" />*/
	setMinimum: function (value) {
		this.scrollInfo()._minimum(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetMinimum(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetMaximum(System.Double)" />*/
	setMaximum: function (value) {
		var si = this.scrollInfo();
		si._initialize(si._viewport(), value + si._largeChangeResolved(), si._offset());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetMaximum(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetViewportSize(System.Double)" />*/
	setViewportSize: function (value) {
		var si = this.scrollInfo();
		si._initialize(value, si._extent(), si._offset());
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetViewportSize(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetValue(System.Double)" />*/
	setValue: function (value) {
		this.scrollInfo()._scrollTo(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetValue(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetLargeChange(System.Double)" />*/
	setLargeChange: function (value) {
		this.scrollInfo()._largeChange($.ig.util.toNullable(Number, value));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetLargeChange(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetSmallChange(System.Double)" />*/
	setSmallChange: function (value) {
		this.scrollInfo()._smallChange(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetSmallChange(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetIsEnabled(System.Boolean)" />*/
	setIsEnabled: function (value) {
		this._scrollBar.isEnabled(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetIsEnabled(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetIsVisible(System.Boolean)" />*/
	setIsVisible: function (value) {
		this._scrollBar._element.isVisible(value);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetIsVisible(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetOnValueChangeCallback(System.Action)" />*/
	setOnValueChangeCallback: function (callback) {
		if (this.__offsetChangeCallback != null) {
			var $t = this.scrollInfo();
			$t.propertyChanged = $.ig.Delegate.prototype.remove($t.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
		}
		this.__offsetChangeCallback = callback;
		if (this.__offsetChangeCallback != null) {
			var $t1 = this.scrollInfo();
			$t1.propertyChanged = $.ig.Delegate.prototype.combine($t1.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::SetOnValueChangeCallback(System.Action)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::OnScrollInfoPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	onScrollInfoPropertyChanged: function (sender, e) {
		if (String.isNullOrEmpty(e.propertyName()) || e.propertyName() == "Offset") {
			if (this.__offsetChangeCallback != null) {
				this.__offsetChangeCallback(this.scrollInfo()._offset());
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBarAdapter::OnScrollInfoPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	$type: new $.ig.Type('JsScrollBarAdapter', $.ig.Object.prototype.$type, [$.ig.IPlatformScrollBarAdapter.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.JsScrollBarAdapter" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.JsScrollBar" />*/

$.ig.util.defType('JsScrollBar', 'Object', {
	_element: null,
	init: function (orientation, parent) {
		$.ig.Object.prototype.init.call(this);
		this._element = new $.ig.ScrollBarVisualElement(orientation, parent, "ScrollBar");
		var isVertical = this._element._isVertical;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Primitives.JsScrollBar::IsEnabled()" />*/
	isEnabled: function (value) {
		if (arguments.length === 1) {
			if (value != this._element.isEnabled()) {
				this._element.isEnabled(value);
			}
			return value;
		} else {
			return this._element.isEnabled();
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Primitives.JsScrollBar::IsEnabled()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBar::Dispose()" />*/
	dispose: function () {
		this._element.isRemoved(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsScrollBar::Dispose()" />*/
	,
	$type: new $.ig.Type('JsScrollBar', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.JsScrollBar" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.JsScrollEventArgs" />*/

$.ig.util.defType('JsScrollEventArgs', 'EventArgs', {
	__scrollEventType: 0,
	__newValue: 0,
	init: function (scrollEventType, newValue) {
		$.ig.EventArgs.prototype.init.call(this);
		this.__scrollEventType = scrollEventType;
		this.__newValue = newValue;
	},
	$type: new $.ig.Type('JsScrollEventArgs', $.ig.EventArgs.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.JsScrollEventArgs" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.JsVisualElementBuilder" />*/

$.ig.util.defType('JsVisualElementBuilder', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.JsVisualElementBuilder::InitializePlatformElement(Infragistics.Controls.Core.VisualElement, System.String, System.String, System.Boolean, System.Boolean)" />*/
	initializePlatformElement: function (element, elementType, className, absolutePosition, hideOverflow) {
		var parentRenderer = element.__parent._platformObject;
		var wrapper = parentRenderer.createElement(elementType);
		if (className != null) {
			wrapper.addClass(className);
		}
		element._platformObject = parentRenderer.getSubRenderer(wrapper);
		if (absolutePosition) {
			wrapper.setRawStyleProperty("position", "absolute");
		}
		if (hideOverflow) {
			wrapper.setRawStyleProperty("overflow", "hidden");
		}
		parentRenderer.append(wrapper);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.JsVisualElementBuilder::InitializePlatformElement(Infragistics.Controls.Core.VisualElement, System.String, System.String, System.Boolean, System.Boolean)" />*/
	,
	$type: new $.ig.Type('JsVisualElementBuilder', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.JsVisualElementBuilder" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.IElementLayerContainer`1" />*/

$.ig.util.defType('IElementLayerContainer$1', 'Object', {
	$type: new $.ig.Type('IElementLayerContainer$1', null, [$.ig.IElementLayerContainer.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.IElementLayerContainer`1" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo" />*/

$.ig.util.defType('ElementLayerInfo_ElementOrderInfo', 'Object', {
	_layer: null,
	__before: null,
	__after: null,
	init: function (layer, before, after) {
		$.ig.Object.prototype.init.call(this);
		this._layer = layer;
		this.__before = before;
		this.__after = after;
	},
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo::After()" />*/
	after: function () {
		return this.__after;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo::After()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo::Before()" />*/
	before: function () {
		return this.__before;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo::Before()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo::Key()" />*/
	key: function () {
		return this._layer.__identifier;
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo::Key()" />*/
	,
	$type: new $.ig.Type('ElementLayerInfo_ElementOrderInfo', $.ig.Object.prototype.$type, [$.ig.ISupportPositioning.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayerInfo_ElementOrderInfo" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.PositionOrderHelper`1" />*/

$.ig.util.defType('PositionOrderHelper$1', 'Object', {
	$tChild: null,
	__lastVerifiedChildren: null,
	__measureOrderChildren: null,
	__actualChildren: null,
	__getPositionForChild: null,
	init: function ($tChild, actualChildren, getPositionForChild) {
		this.$tChild = $tChild;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tChild);
		}
		$.ig.Object.prototype.init.call(this);
		this.__actualChildren = actualChildren;
		this.__getPositionForChild = getPositionForChild;
		this.__lastVerifiedChildren = new $.ig.WeakList$1(this.$tChild);
		this.__measureOrderChildren = new $.ig.WeakList$1(this.$tChild);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.PositionOrderHelper`1::BuildMeasureOrderChildren()" />*/
	buildMeasureOrderChildren: function () {
		this.__lastVerifiedChildren.clear();
		this.__measureOrderChildren.clear();
		var positionList = new $.ig.List$1($.ig.ISupportPositioning.prototype.$type, 0);
		var originalOrderList = new $.ig.List$1($.ig.ISupportPositioning.prototype.$type, 0);
		var elementPositions = new $.ig.Dictionary$2($.ig.ISupportPositioning.prototype.$type, this.$tChild, 0);
		var en = this.__actualChildren.getEnumerator();
		while (en.moveNext()) {
			var child = en.current();
			this.__lastVerifiedChildren._add(child);
			var positionInfo = this.__getPositionForChild(child) || new $.ig.PositionOrderHelper_EmptySortPosition$1(this.$tChild);
			positionList.add(positionInfo);
			originalOrderList.add(positionInfo);
			elementPositions.item(positionInfo, child);
		}
		var isValid;
		var $ret = $.ig.PositionSorter.prototype.sort1(positionList, isValid, new $.ig.PositionOrderHelper_DefaultMeasureComparer$1(this.$tChild, originalOrderList));
		isValid = $ret.p1;
		if (!isValid) {
			positionList = originalOrderList;
		}
		var en1 = positionList.getEnumerator();
		while (en1.moveNext()) {
			var item = en1.current();
			this.__measureOrderChildren._add(elementPositions.item(item));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.PositionOrderHelper`1::BuildMeasureOrderChildren()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.PositionOrderHelper`1::GetOrderedItems()" />*/
	getOrderedItems: function () {
		if (!$.ig.CoreUtilities.prototype.areEqual$1(this.$tChild, this.__lastVerifiedChildren, this.__actualChildren, null)) {
			this.buildMeasureOrderChildren();
		}
		return this.__measureOrderChildren;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.PositionOrderHelper`1::GetOrderedItems()" />*/
	,
	$type: new $.ig.Type('PositionOrderHelper$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.PositionOrderHelper`1" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.PositionOrderHelper_DefaultMeasureComparer`1" />*/

$.ig.util.defType('PositionOrderHelper_DefaultMeasureComparer$1', 'Object', {
	$tChild: null,
	___originalOrderList: null,
	init: function ($tChild, originalOrder) {
		this.$tChild = $tChild;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tChild);
		}
		$.ig.Object.prototype.init.call(this);
		this.___originalOrderList = originalOrder;
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Primitives.PositionOrderHelper_DefaultMeasureComparer`1::Compare(Infragistics.ISupportPositioning, Infragistics.ISupportPositioning)" />*/
	compare: function (x, y) {
		if (x == y) {
			return 0;
		}
		var hasCriteriaX = $.ig.CoreUtilities.prototype.hasItems(x.after()) || $.ig.CoreUtilities.prototype.hasItems(x.before());
		var hasCriteriaY = $.ig.CoreUtilities.prototype.hasItems(y.after()) || $.ig.CoreUtilities.prototype.hasItems(y.before());
		if (hasCriteriaX != hasCriteriaY) {
			return $.ig.util.boolCompare(hasCriteriaY, hasCriteriaX);
		}
		return $.ig.util.compareSimple(this.___originalOrderList.indexOf(x), this.___originalOrderList.indexOf(y));
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Primitives.PositionOrderHelper_DefaultMeasureComparer`1::Compare(Infragistics.ISupportPositioning, Infragistics.ISupportPositioning)" />*/
	,
	$type: new $.ig.Type('PositionOrderHelper_DefaultMeasureComparer$1', $.ig.Object.prototype.$type, [$.ig.IComparer$1.prototype.$type.specialize($.ig.ISupportPositioning.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.PositionOrderHelper_DefaultMeasureComparer`1" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1" />*/

$.ig.util.defType('PositionOrderHelper_EmptySortPosition$1', 'Object', {
	$tChild: null,
	init: function ($tChild) {
		this.$tChild = $tChild;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tChild);
		}
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1::After()" />*/
	after: function () {
		return null;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1::After()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1::Before()" />*/
	before: function () {
		return null;
	}
	/*<EndProperty Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1::Before()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1::Key()" />*/
	key: function () {
		return String.empty();
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1::Key()" />*/
	,
	$type: new $.ig.Type('PositionOrderHelper_EmptySortPosition$1', $.ig.Object.prototype.$type, [$.ig.ISupportPositioning.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.PositionOrderHelper_EmptySortPosition`1" />*/

/*<BeginType Name="Infragistics.Controls.Primitives.ElementLayerManager`1" />*/

$.ig.util.defType('ElementLayerManager$1', 'Object', {
	$tViewModel: null,
	__owner: null,
	__layerCreator: null,
	__layersById: null,
	__layerContainer: null,
	__layers: null,
	init: function ($tViewModel, owner, layerCreator) {
		this.$tViewModel = $tViewModel;
		if (!this.hasOwnProperty("$type")) {
			this.$type = this.$type.specialize(this.$tViewModel);
		}
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull(owner);
		$.ig.CoreUtilities.prototype.validateNotNull(layerCreator);
		this.__owner = owner;
		this.__layerCreator = layerCreator;
		this.__layersById = new $.ig.Dictionary$2(String, $.ig.ElementLayer$1.prototype.$type.specialize(this.$tViewModel), 2, $.ig.ElementLayerInfo.prototype.idComparer);
		this.__layers = new $.ig.List$1($.ig.ElementLayer$1.prototype.$type.specialize(this.$tViewModel), 0);
	},
	/*<BeginProperty Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Primitives.ElementLayerManager`1::Container()" />*/
	container: function () {
		return this.__layerContainer;
	}
	/*<EndProperty Name="Infragistics.Controls.Primitives.IElementLayerContainer Infragistics.Controls.Primitives.ElementLayerManager`1::Container()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Primitives.ElementLayer Infragistics.Controls.Primitives.ElementLayerManager`1::GetLayer(Infragistics.Controls.Primitives.ElementLayerInfo)" />*/
	getLayer: function (info) {
		var $self = this;
		$.ig.CoreUtilities.prototype.validateNotNull1(info, "info");
		var layer;
		if (!(function () { var $ret = $self.__layersById.tryGetValue(info.identifier(), layer); layer = $ret.p1; return $ret.ret; }())) {
			return null;
		}
		return layer;
	}
	/*<EndMethod Name="Infragistics.Controls.Primitives.ElementLayer Infragistics.Controls.Primitives.ElementLayerManager`1::GetLayer(Infragistics.Controls.Primitives.ElementLayerInfo)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::InvalidateMeasure(System.Func)" />*/
	invalidateMeasure: function (match) {
		var en = this.__layers.getEnumerator();
		while (en.moveNext()) {
			var pair = en.current();
			if (match == null || match(pair._layerInfo())) {
				pair._invalidateMeasure();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::InvalidateMeasure(System.Func)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::InitializeContainer(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	initializeContainer: function (layerContainer) {
		this.clearLayers();
		this.__layerContainer = layerContainer;
		this.initializeLayers();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::InitializeContainer(Infragistics.Controls.Primitives.IElementLayerContainer)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::ClearLayers()" />*/
	clearLayers: function () {
		var layers = this.__layers.toArray();
		this.__layers.clear();
		this.__layersById.clear();
		for (var i = 0; i < layers.length; i++) {
			var layer = layers[i];
			this.__layerContainer.removeChild(layer);
			layer.dispose();
			layer._view().detach(layer);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::ClearLayers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::InitializeLayers()" />*/
	initializeLayers: function () {
		this.clearLayers();
		if (this.__layerContainer == null) {
			return;
		}
		var newLayers = this.__layerCreator(this.__owner);
		var layersById = $.ig.Enumerable.prototype.toDictionary$2($.ig.ElementLayer$1.prototype.$type.specialize(this.$tViewModel), String, newLayers, function (l) { return l._layerInfo().identifier(); });
		var layerPositions = $.ig.Enumerable.prototype.toList$1($.ig.ISupportPositioning.prototype.$type, $.ig.Enumerable.prototype.cast$1($.ig.ISupportPositioning.prototype.$type, $.ig.Enumerable.prototype.select$2($.ig.ElementLayer$1.prototype.$type.specialize(this.$tViewModel), $.ig.ElementLayerInfo_ElementOrderInfo.prototype.$type, newLayers, function (l) { return l._layerInfo().zIndexPositioning(); })));
		var en = layersById.getEnumerator();
		while (en.moveNext()) {
			var pair = en.current();
			this.__layersById.item(pair.key(), pair.value());
		}
		var isValid;
		var $ret = $.ig.PositionSorter.prototype.sort1(layerPositions, isValid, null);
		isValid = $ret.p1;
		$.ig.Debug.prototype.assert1(isValid, "Invalid/ambiguous layer ordering");
		for (var i = layerPositions.count() - 1; i >= 0; i--) {
			var layerInfo = layerPositions.__inner[i];
			var layer = this.__layersById.item(layerInfo.key());
			this.__layers.add(layer);
			layer._view().attach(layer);
			this.__layerContainer.addChild(layer);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Primitives.ElementLayerManager`1::InitializeLayers()" />*/
	,
	$type: new $.ig.Type('ElementLayerManager$1', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Primitives.ElementLayerManager`1" />*/

/*<BeginType Name="Infragistics.Controls.Core.CommandMap" />*/

$.ig.util.defType('CommandMap', 'Object', {
	__commands: null,
	__minimumRequiredStates: null,
	init: function (commands, minimumRequiredStates) {
		$.ig.Object.prototype.init.call(this);
		$.ig.CoreUtilities.prototype.validateNotNull1(commands, "commands");
		this.__commands = commands;
		if (null != minimumRequiredStates) {
			for (var i = 0; i < commands.length; i++) {
				var ww = commands[i];
				var minimumRequiredState;
				if ((function () { var $ret = minimumRequiredStates.tryGetValue(ww._id, minimumRequiredState); minimumRequiredState = $ret.p1; return $ret.ret; }())) {
					ww.__minimumRequiredState = minimumRequiredState;
				}
			}
			this.__minimumRequiredStates = minimumRequiredStates;
		}
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.CommandMap::DoesMinimumStateMatch(System.Int32, Infragistics.Core.LongValue)" />*/
	doesMinimumStateMatch: function (commandId, controlState) {
		var requirement = this.getDefinition(commandId);
		return requirement == null || controlState.isMatch(requirement._disallowedState, requirement._requiredState);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.CommandMap::DoesMinimumStateMatch(System.Int32, Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Core.CommandMap::GetMatchingCommands(System.Windows.Input.Key, System.Windows.Input.ModifierKeys, Infragistics.Core.LongValue)" />*/
	getMatchingCommands: function (key, modifierKeys, controlState) {
		var commands = new $.ig.List$1($.ig.Number.prototype.$type, 0);
		for (var i = 0; i < this.__commands.length; i++) {
			var cmd = this.__commands[i];
			if (cmd.doesKeyMatch(key, modifierKeys) && cmd.doesStateMatch(controlState)) {
				commands.add(cmd._id);
			}
		}
		return commands;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerable Infragistics.Controls.Core.CommandMap::GetMatchingCommands(System.Windows.Input.Key, System.Windows.Input.ModifierKeys, Infragistics.Core.LongValue)" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.CommandMap_Requirement Infragistics.Controls.Core.CommandMap::GetDefinition(System.Int32)" />*/
	getDefinition: function (commandId) {
		var ii;
		var $ret = this.__minimumRequiredStates.tryGetValue(commandId, ii);
		ii = $ret.p1;
		return ii;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.CommandMap_Requirement Infragistics.Controls.Core.CommandMap::GetDefinition(System.Int32)" />*/
	,
	$type: new $.ig.Type('CommandMap', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.CommandMap" />*/

/*<BeginType Name="Infragistics.Controls.Core.CommandMap_Requirement" />*/

$.ig.util.defType('CommandMap_Requirement', 'Object', {
	_disallowedState: null,
	_requiredState: null,
	init: function (disallowedState, requiredState) {
		this._disallowedState = new $.ig.LongValue();
		this._requiredState = new $.ig.LongValue();
		$.ig.Object.prototype.init.call(this);
		this._disallowedState = disallowedState;
		this._requiredState = requiredState;
	},
	$type: new $.ig.Type('CommandMap_Requirement', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.CommandMap_Requirement" />*/

/*<BeginType Name="Infragistics.Controls.Core.CommandMap_KeyMapping" />*/

$.ig.util.defType('CommandMap_KeyMapping', 'Object', {
	_id: 0,
	__minimumRequiredState: null,
	_disallowedState: null,
	_requiredState: null,
	_key: 0,
	_requiredModifiers: 0,
	_disallowedModifiers: 0,
	init: function (command, disallowedState, requiredState, key, requiredModifiers, disallowedModifiers) {
		this._disallowedState = new $.ig.LongValue();
		this._requiredState = new $.ig.LongValue();
		$.ig.Object.prototype.init.call(this);
		this._id = command;
		this._disallowedState = disallowedState;
		this._requiredState = requiredState;
		this._key = key;
		this._requiredModifiers = requiredModifiers;
		this._disallowedModifiers = disallowedModifiers;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.CommandMap_KeyMapping::DoesKeyMatch(System.Windows.Input.Key, System.Windows.Input.ModifierKeys)" />*/
	doesKeyMatch: function (key, modifierKeys) {
		return this._key == key && this._requiredModifiers == (this._requiredModifiers & modifierKeys) && 0 == (this._disallowedModifiers & modifierKeys);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.CommandMap_KeyMapping::DoesKeyMatch(System.Windows.Input.Key, System.Windows.Input.ModifierKeys)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.CommandMap_KeyMapping::DoesStateMatch(Infragistics.Core.LongValue)" />*/
	doesStateMatch: function (controlState) {
		return controlState.isMatch(this._disallowedState, this._requiredState) && (null == this.__minimumRequiredState || controlState.isMatch(this.__minimumRequiredState._disallowedState, this.__minimumRequiredState._requiredState));
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.CommandMap_KeyMapping::DoesStateMatch(Infragistics.Core.LongValue)" />*/
	,
	$type: new $.ig.Type('CommandMap_KeyMapping', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.CommandMap_KeyMapping" />*/

/*<BeginType Name="Infragistics.Controls.Core.InputProxy" />*/

$.ig.util.defType('InputProxy', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.InputProxy::EndCapture()" />*/
	endCapture: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.InputProxy::EndCapture()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.InputContactChangeType Infragistics.Controls.Core.InputProxy::GetChangeType()" />*/
	getChangeType: function () {
	}
	/*<EndMethod Name="Infragistics.Controls.Core.InputContactChangeType Infragistics.Controls.Core.InputProxy::GetChangeType()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.InputProxy::IsInputContactPressed()" />*/
	isInputContactPressed: function () {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.InputProxy::IsInputContactPressed()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Core.InputProxy::GetInputClickCount()" />*/
	getInputClickCount: function () {
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Core.InputProxy::GetInputClickCount()" />*/
	,
	/*<BeginMethod Name="System.Windows.Input.ModifierKeys Infragistics.Controls.Core.InputProxy::GetModifierKeys()" />*/
	getModifierKeys: function () {
	}
	/*<EndMethod Name="System.Windows.Input.ModifierKeys Infragistics.Controls.Core.InputProxy::GetModifierKeys()" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Core.InputProxy::GetRelativePoint()" />*/
	getRelativePoint: function () {
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Core.InputProxy::GetRelativePoint()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.InputProxy::HasCapture()" />*/
	hasCapture: function () {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.InputProxy::HasCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.InputProxy::StartCapture()" />*/
	startCapture: function () {
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.InputProxy::StartCapture()" />*/
	,
	$type: new $.ig.Type('InputProxy', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.InputProxy" />*/

/*<BeginType Name="Infragistics.Controls.Core.PlatformTimer" />*/

$.ig.util.defType('PlatformTimer', 'Object', {
	__isEnabled: false,
	__interval: 0,
	__timeoutId: 0,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.interval($.ig.PlatformTimer.prototype._defaultInterval);
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Core.PlatformTimer::Interval()" />*/
	interval: function (value) {
		if (arguments.length === 1) {
			this.__interval = value;
			if (this.__timeoutId != $.ig.PlatformTimer.prototype._notRunningId && this.__isEnabled) {
				this.start();
			}
			return value;
		} else {
			return this.__interval;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Core.PlatformTimer::Interval()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.PlatformTimer::IsEnabled()" />*/
	isEnabled: function () {
		return this.__isEnabled;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.PlatformTimer::IsEnabled()" />*/
	,
	tick: null,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::OnTick()" />*/
	onTick: function () {
		var handler = this.tick;
		if (handler != null) {
			handler(this, $.ig.EventArgs.prototype.empty);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::OnTick()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::OnTickImpl()" />*/
	onTickImpl: function () {
		var oldId = this.__timeoutId;
		this.__timeoutId = $.ig.PlatformTimer.prototype._notRunningId;
		this.onTick();
		if (this.__isEnabled) {
			this.start();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::OnTickImpl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::Start()" />*/
	start: function () {
		this.stop();
		if (this.__isEnabled) {
			return;
		}
		this.__isEnabled = true;
		this.__timeoutId = window.setTimeout(this.onTickImpl.runOn(this), this.__interval);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::Start()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::Stop()" />*/
	stop: function () {
		this.__isEnabled = false;
		if (this.__timeoutId != 0) {
			var oldId = this.__timeoutId;
			this.__timeoutId = 0;
			window.clearTimeout(oldId);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.PlatformTimer::Stop()" />*/
	,
	$type: new $.ig.Type('PlatformTimer', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.PlatformTimer" />*/

/*<BeginType Name="Infragistics.Controls.Core.ButtonVisualElement" />*/

$.ig.util.defType('ButtonVisualElement', 'VisualElement', {
	init: function (parent, id) {
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ButtonVisualElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ButtonVisualElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ButtonVisualElement::OnGotCapture()" />*/
	onGotCapture: function () {
		this.isActive(true);
		$.ig.VisualElement.prototype.onGotCapture.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ButtonVisualElement::OnGotCapture()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ButtonVisualElement::OnLostCapture()" />*/
	onLostCapture: function () {
		this.isActive(false);
		$.ig.VisualElement.prototype.onLostCapture.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ButtonVisualElement::OnLostCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ButtonVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			return input.startCapture();
		}
		return $.ig.VisualElement.prototype.onMouseDown.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ButtonVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ButtonVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		if (input.hasCapture()) {
			var pt = input.getRelativePoint();
			input.endCapture();
			if (this.isOverElement(pt.__x, pt.__y)) {
				this.onClick();
			}
			return true;
		}
		return $.ig.VisualElement.prototype.onMouseUp.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ButtonVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ButtonVisualElement::OnClick()" />*/
	onClick: function () {
		var handler = this.click;
		if (handler != null) {
			handler(this, $.ig.EventArgs.prototype.empty);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ButtonVisualElement::OnClick()" />*/
	,
	click: null,
	$type: new $.ig.Type('ButtonVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.ButtonVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.ComboBoxVisualElement" />*/

$.ig.util.defType('ComboBoxVisualElement', 'VisualElement', {
	__items: null,
	__hasItemsChanged: false,
	__value: null,
	__hasValueChanged: false,
	init: function (parent, id) {
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ComboBoxVisualElement::Dispose()" />*/
	dispose: function () {
		if ($.ig.util.cast($.ig.INotifyCollectionChanged.prototype.$type, this.__items) !== null) {
			var $t = (this.__items);
			$t.collectionChanged = $.ig.Delegate.prototype.remove($t.collectionChanged, this.onItemsChanged.runOn(this));
		}
		$.ig.VisualElement.prototype.dispose.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ComboBoxVisualElement::Dispose()" />*/
	,
	/*<BeginProperty Name="System.Collections.Generic.IList Infragistics.Controls.Core.ComboBoxVisualElement::Items()" />*/
	items: function (value) {
		if (arguments.length === 1) {
			if (value != this.__items) {
				if ($.ig.util.cast($.ig.INotifyCollectionChanged.prototype.$type, this.__items) !== null) {
					var $t = (this.__items);
					$t.collectionChanged = $.ig.Delegate.prototype.remove($t.collectionChanged, this.onItemsChanged.runOn(this));
				}
				this.__items = value;
				if ($.ig.util.cast($.ig.INotifyCollectionChanged.prototype.$type, this.__items) !== null) {
					var $t1 = (this.__items);
					$t1.collectionChanged = $.ig.Delegate.prototype.combine($t1.collectionChanged, this.onItemsChanged.runOn(this));
				}
				this.hasItemsChanged(true);
			}
			return value;
		} else {
			return this.__items;
		}
	}
	/*<EndProperty Name="System.Collections.Generic.IList Infragistics.Controls.Core.ComboBoxVisualElement::Items()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ComboBoxVisualElement::HasItemsChanged()" />*/
	hasItemsChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasItemsChanged) {
				this.__hasItemsChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasItemsChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ComboBoxVisualElement::HasItemsChanged()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Core.ComboBoxVisualElement::Value()" />*/
	value: function (value) {
		if (arguments.length === 1) {
			if (value != this.__value) {
				this.__value = value;
				this.hasValueChanged(true);
			}
			return value;
		} else {
			return this.__value;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Core.ComboBoxVisualElement::Value()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ComboBoxVisualElement::HasValueChanged()" />*/
	hasValueChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasValueChanged) {
				this.__hasValueChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasValueChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ComboBoxVisualElement::HasValueChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ComboBoxVisualElement::OnItemsChanged(System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	onItemsChanged: function (sender, e) {
		this.hasItemsChanged(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ComboBoxVisualElement::OnItemsChanged(System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ComboBoxVisualElement::OnValueChanged()" />*/
	onValueChanged: function () {
		var handler = this.valueChanged;
		if (handler != null) {
			handler(this, $.ig.EventArgs.prototype.empty);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ComboBoxVisualElement::OnValueChanged()" />*/
	,
	valueChanged: null,
	$type: new $.ig.Type('ComboBoxVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.ComboBoxVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.TextBoxVisualElement" />*/

$.ig.util.defType('TextBoxVisualElement', 'VisualElement', {
	__hasTextChanged: false,
	__text: null,
	__hasLineCountChanged: false,
	__lineCount: 0,
	init: function (parent, id) {
		this.__lineCount = 1;
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.TextBoxVisualElement::HasLineCountChanged()" />*/
	hasLineCountChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasLineCountChanged) {
				this.__hasLineCountChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasLineCountChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.TextBoxVisualElement::HasLineCountChanged()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Core.TextBoxVisualElement::LineCount()" />*/
	lineCount: function (value) {
		if (arguments.length === 1) {
			if (value != this.__lineCount) {
				this.__lineCount = value;
				if (this.__parent != null) {
					this.__parent.isChildPositionDirty(true);
				}
				this.hasLineCountChanged(true);
			}
			return value;
		} else {
			return this.__lineCount;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Core.TextBoxVisualElement::LineCount()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.Controls.Core.TextBoxVisualElement::Text()" />*/
	text: function (value) {
		if (arguments.length === 1) {
			if (value != this.__text) {
				this.__text = value;
				this.hasTextChanged(true);
			}
			return value;
		} else {
			return this.__text;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Core.TextBoxVisualElement::Text()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.TextBoxVisualElement::HasTextChanged()" />*/
	hasTextChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasTextChanged) {
				this.__hasTextChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasTextChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.TextBoxVisualElement::HasTextChanged()" />*/
	,
	$type: new $.ig.Type('TextBoxVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.TextBoxVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.ToggleButtonVisualElement" />*/

$.ig.util.defType('ToggleButtonVisualElement', 'ButtonVisualElement', {
	__isChecked: false,
	__hasIsCheckedChanged: false,
	init: function (parent, id) {
		this.__hasIsCheckedChanged = true;
		$.ig.ButtonVisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ToggleButtonVisualElement::OnClick()" />*/
	onClick: function () {
		this.isChecked(!this.isChecked());
		$.ig.ButtonVisualElement.prototype.onClick.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ToggleButtonVisualElement::OnClick()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ToggleButtonVisualElement::HasIsCheckedChanged()" />*/
	hasIsCheckedChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasIsCheckedChanged) {
				this.__hasIsCheckedChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasIsCheckedChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ToggleButtonVisualElement::HasIsCheckedChanged()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ToggleButtonVisualElement::IsChecked()" />*/
	isChecked: function (value) {
		if (arguments.length === 1) {
			if (value != this.__isChecked) {
				this.__isChecked = value;
				this.hasIsCheckedChanged(true);
				var handler = this.isCheckedChanged;
				if (handler != null) {
					handler(this, $.ig.EventArgs.prototype.empty);
				}
			}
			return value;
		} else {
			return this.__isChecked;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ToggleButtonVisualElement::IsChecked()" />*/
	,
	isCheckedChanged: null,
	$type: new $.ig.Type('ToggleButtonVisualElement', $.ig.ButtonVisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.ToggleButtonVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.ToolTipVisualElement" />*/

$.ig.util.defType('ToolTipVisualElement', 'VisualElement', {
	__hasTextChanged: false,
	__text: null,
	init: function (parent, id) {
		$.ig.VisualElement.prototype.init.call(this, parent, id);
		this.isHitTestVisible(false);
	},
	/*<BeginProperty Name="System.String Infragistics.Controls.Core.ToolTipVisualElement::Text()" />*/
	text: function (value) {
		if (arguments.length === 1) {
			if (value != this.__text) {
				this.__text = value;
				this.hasTextChanged(true);
			}
			return value;
		} else {
			return this.__text;
		}
	}
	/*<EndProperty Name="System.String Infragistics.Controls.Core.ToolTipVisualElement::Text()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ToolTipVisualElement::HasTextChanged()" />*/
	hasTextChanged: function (value) {
		if (arguments.length === 1) {
			if (value != this.__hasTextChanged) {
				this.__hasTextChanged = value;
				if (value) {
					this.onChanged();
				}
			}
			return value;
		} else {
			return this.__hasTextChanged;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ToolTipVisualElement::HasTextChanged()" />*/
	,
	$type: new $.ig.Type('ToolTipVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.ToolTipVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.RepeatButtonVisualElement" />*/

$.ig.util.defType('RepeatButtonVisualElement', 'ButtonVisualElement', {
	__initialAutoRepeatInterval: 0,
	__autoRepeatInterval: 0,
	__timer: null,
	__clickCount: 0,
	__mouseX: 0,
	__mouseY: 0,
	init: function (parent, id) {
		this.__initialAutoRepeatInterval = $.ig.RepeatButtonVisualElement.prototype.defaultInitialAutoRepeatInterval;
		this.__autoRepeatInterval = $.ig.RepeatButtonVisualElement.prototype.defaultAutoRepeatInterval;
		$.ig.ButtonVisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RepeatButtonVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton) {
			this.__clickCount = 0;
			this.storeMousePosition(input.getRelativePoint());
			if (input.startCapture()) {
				this.startTimer();
			}
		} else {
			this.stopTimer();
			input.endCapture();
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RepeatButtonVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RepeatButtonVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		if (input.hasCapture()) {
			var point = input.getRelativePoint();
			var isOver = this.isOverElement(point.__x, point.__y);
			if (!isOver) {
				this.stopTimer();
			} else if (this.__timer == null || !this.__timer.isEnabled()) {
				this.startTimer();
			}
			this.storeMousePosition(point);
		}
		return $.ig.ButtonVisualElement.prototype.onMouseMove.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RepeatButtonVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.RepeatButtonVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		this.stopTimer();
		if (input.hasCapture()) {
			var point = input.getRelativePoint();
			input.endCapture();
			this.storeMousePosition(point);
			if (this.__clickCount == 0) {
				var isOver = this.isOverElement(point.__x, point.__y);
				if (isOver) {
					this.onClick();
				}
			}
		}
		return $.ig.ButtonVisualElement.prototype.onMouseUp.call(this, input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.RepeatButtonVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::OnTimerTick(System.Object, System.EventArgs)" />*/
	onTimerTick: function (sender, e) {
		var x = this.__mouseX;
		var y = this.__mouseY;
		var elem = this;
		while (elem.__parent != null) {
			x -= elem._left;
			y -= elem._top;
			elem = elem.__parent;
		}
		if (this.isOverElement(x, y)) {
			this.__clickCount++;
			this.onClick();
		}
		if (this.__timer != null) {
			this.__timer.interval(this.__autoRepeatInterval);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::OnTimerTick(System.Object, System.EventArgs)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::StartTimer()" />*/
	startTimer: function () {
		var useInitial = this.__timer == null || !this.__timer.isEnabled();
		if (this.__timer != null && !useInitial) {
			this.__timer.stop();
		} else if (this.__timer == null) {
			this.__timer = new $.ig.PlatformTimer();
			var $t = this.__timer;
			$t.tick = $.ig.Delegate.prototype.combine($t.tick, this.onTimerTick.runOn(this));
		}
		this.__timer.interval(useInitial ? this.__initialAutoRepeatInterval : this.__autoRepeatInterval);
		this.__timer.start();
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::StartTimer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::StopTimer()" />*/
	stopTimer: function () {
		if (this.__timer != null) {
			this.__timer.stop();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::StopTimer()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::StoreMousePosition(System.Windows.Point)" />*/
	storeMousePosition: function (relativePos) {
		var x = relativePos.__x;
		var y = relativePos.__y;
		var elem = this;
		while (elem.__parent != null) {
			x += elem._left;
			y += elem._top;
			elem = elem.__parent;
		}
		this.__mouseX = x;
		this.__mouseY = y;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.RepeatButtonVisualElement::StoreMousePosition(System.Windows.Point)" />*/
	,
	$type: new $.ig.Type('RepeatButtonVisualElement', $.ig.ButtonVisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.RepeatButtonVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.ScrollBarVisualElement" />*/

$.ig.util.defType('ScrollBarVisualElement', 'VisualElement', {
	_scrollInfo: null,
	_orientation: 0,
	_isVertical: false,
	_scrollNear: null,
	_scrollFar: null,
	_scrollTrackNear: null,
	_scrollTrackFar: null,
	_scrollThumb: null,
	__isInThumbDrag: false,
	__preDragValue: 0,
	__nearTrackExtent: 0,
	__thumbExtent: 0,
	__thumbDragOffset: 0,
	init: function (orientation, parent, id) {
		var $self = this;
		$.ig.VisualElement.prototype.init.call(this, parent, id);
		var isVertical = orientation == $.ig.ScrollInfoOrientation.prototype.vertical;
		this._isVertical = isVertical;
		this._orientation = orientation;
		this._scrollInfo = new $.ig.ScrollInfo();
		var $t = this._scrollInfo;
		$t.propertyChanged = $.ig.Delegate.prototype.combine($t.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
		this._scrollNear = new $.ig.RepeatButtonVisualElement(this, $.ig.ScrollBarVisualElement.prototype.defaultNearButtonId);
		var $t1 = this._scrollNear;
		$t1.click = $.ig.Delegate.prototype.combine($t1.click, function (o, e) { $self.onScroll($.ig.JsScrollEventType.prototype.smallDecrement, $.ig.ScrollInfoAmount.prototype.smallDecrement); });
		this._scrollFar = new $.ig.RepeatButtonVisualElement(this, $.ig.ScrollBarVisualElement.prototype.defaultFarButtonId);
		var $t2 = this._scrollFar;
		$t2.click = $.ig.Delegate.prototype.combine($t2.click, function (o, e) { $self.onScroll($.ig.JsScrollEventType.prototype.smallIncrement, $.ig.ScrollInfoAmount.prototype.smallIncrement); });
		this._scrollTrackNear = new $.ig.RepeatButtonVisualElement(this, $.ig.ScrollBarVisualElement.prototype.defaultNearTrackId);
		var $t3 = this._scrollTrackNear;
		$t3.click = $.ig.Delegate.prototype.combine($t3.click, function (o, e) { $self.onScroll($.ig.JsScrollEventType.prototype.largeDecrement, $.ig.ScrollInfoAmount.prototype.largeDecrement); });
		this._scrollTrackFar = new $.ig.RepeatButtonVisualElement(this, $.ig.ScrollBarVisualElement.prototype.defaultFarTrackId);
		var $t4 = this._scrollTrackFar;
		$t4.click = $.ig.Delegate.prototype.combine($t4.click, function (o, e) { $self.onScroll($.ig.JsScrollEventType.prototype.largeIncrement, $.ig.ScrollInfoAmount.prototype.largeIncrement); });
		this._scrollThumb = new $.ig.ScrollBarVisualElement_ScrollThumbVisualElement(this, $.ig.ScrollBarVisualElement.prototype.defaultThumbId);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::Dispose()" />*/
	dispose: function () {
		$.ig.VisualElement.prototype.dispose.call(this);
		var $t = this._scrollInfo;
		$t.propertyChanged = $.ig.Delegate.prototype.remove($t.propertyChanged, this.onScrollInfoPropertyChanged.runOn(this));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::Dispose()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnIsEnabledChanged()" />*/
	onIsEnabledChanged: function () {
		$.ig.VisualElement.prototype.onIsEnabledChanged.call(this);
		this._scrollNear.isEnabled(this._scrollFar.isEnabled(this.isEnabled()));
		this._scrollThumb.isVisible(this._scrollTrackFar.isVisible(this._scrollTrackNear.isVisible(this.isEnabled())));
		this.isChildPositionDirty(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnIsEnabledChanged()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	positionChildrenOverride: function (left, top, width, height) {
		$.ig.VisualElement.prototype.positionChildrenOverride.call(this, left, top, width, height);
		if (this._isVertical) {
			this._scrollNear.setPosition(left, top, width, this._scrollNear._height);
			this._scrollFar.setPosition(left, top + height - this._scrollNear._height, width, this._scrollFar._height);
		} else {
			this._scrollNear.setPosition(left, top, this._scrollNear._width, height);
			this._scrollFar.setPosition(left + width - this._scrollNear._width, top, this._scrollFar._width, height);
		}
		var nearBtnExtent = this._isVertical ? this._scrollNear._height : this._scrollNear._width;
		var farBtnExtent = this._isVertical ? this._scrollFar._height : this._scrollFar._width;
		var totalBtnExtent = nearBtnExtent + farBtnExtent;
		var totalExtent = this._isVertical ? height : width;
		var remaining = Math.max(totalExtent - totalBtnExtent, 0);
		var thumbExtent = 0;
		var nearExtent = 0;
		var minValue = this._scrollInfo._minimum();
		if (remaining > 0) {
			var largeChange = this._scrollInfo._largeChangeResolved();
			var actualMax = (this._scrollInfo._extent() + 1 - largeChange) - minValue;
			if (largeChange == 0) {
				thumbExtent = this._isVertical ? width : height;
			} else {
				var thumbPercent = largeChange / (actualMax + largeChange);
				thumbExtent = remaining * thumbPercent;
				var MinThumbExtent = 8;
				if (thumbExtent < MinThumbExtent) {
					thumbExtent = MinThumbExtent;
				}
			}
			if (thumbExtent > remaining) {
				thumbExtent = remaining;
			}
			var valuePercent = 0;
			var valueToUse = this._scrollInfo._offset();
			if (actualMax != 0) {
				valuePercent = Math.min(valueToUse - minValue, actualMax) / actualMax;
			}
			remaining -= thumbExtent;
			nearExtent = (valuePercent * remaining);
		}
		var farExtent = remaining - nearExtent;
		this.__nearTrackExtent = nearExtent;
		this.__thumbExtent = thumbExtent;
		if (this._isVertical) {
			this._scrollThumb.setPosition(left, top + nearBtnExtent + nearExtent, width, thumbExtent);
			this._scrollTrackNear.setPosition(left, top + nearBtnExtent, width, nearExtent);
			this._scrollTrackFar.setPosition(left, top + nearBtnExtent + nearExtent + thumbExtent, width, farExtent);
		} else {
			this._scrollThumb.setPosition(left + nearBtnExtent + nearExtent, top, thumbExtent, height);
			this._scrollTrackNear.setPosition(left + nearBtnExtent, top, nearExtent, height);
			this._scrollTrackFar.setPosition(left + nearBtnExtent + nearExtent + thumbExtent, top, farExtent, height);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::PositionChildrenOverride(System.Double, System.Double, System.Double, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.ScrollBarVisualElement::GetThumbMouseOverValue(System.Windows.Point)" />*/
	getThumbMouseOverValue: function (thumbPoint) {
		var width = this._width;
		var height = this._height;
		var nearBtnExtent = this._isVertical ? this._scrollNear._height : this._scrollNear._width;
		var farBtnExtent = this._isVertical ? this._scrollFar._height : this._scrollFar._width;
		var totalBtnExtent = nearBtnExtent + farBtnExtent;
		var sbX = thumbPoint.__x;
		var sbY = thumbPoint.__y;
		var trackLen, offsetInTrack;
		if (this._isVertical) {
			sbY += nearBtnExtent + this.__nearTrackExtent;
			if (sbX < -8 * width || sbX >= 9 * width || sbY < -totalBtnExtent || sbY >= height + totalBtnExtent) {
				return this.__preDragValue;
			}
			offsetInTrack = thumbPoint.__y + this.__nearTrackExtent - this.__thumbDragOffset;
			trackLen = height - totalBtnExtent - this.__thumbExtent;
		} else {
			sbX += nearBtnExtent + this.__nearTrackExtent;
			if (sbY < -8 * height || sbY >= 9 * height || sbX < -totalBtnExtent || sbX >= width + totalBtnExtent) {
				return this.__preDragValue;
			}
			offsetInTrack = thumbPoint.__x + this.__nearTrackExtent - this.__thumbDragOffset;
			trackLen = width - totalBtnExtent - this.__thumbExtent;
		}
		if (offsetInTrack < 0) {
			offsetInTrack = 0;
		} else if (offsetInTrack > trackLen) {
			offsetInTrack = trackLen;
		}
		var minValue = this._scrollInfo._minimum();
		var largeChange = this._scrollInfo._largeChangeResolved();
		var actualMax = (this._scrollInfo._extent() + 1 - largeChange) - minValue;
		var newValue = (actualMax * offsetInTrack / trackLen) + minValue;
		if (newValue < minValue) {
			newValue = minValue;
		} else if (newValue > this._scrollInfo._maximum()) {
			newValue = this._scrollInfo._maximum();
		}
		return newValue;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.ScrollBarVisualElement::GetThumbMouseOverValue(System.Windows.Point)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::EndThumbDrag()" />*/
	endThumbDrag: function () {
		if (this.__isInThumbDrag) {
			this._scrollThumb.isActive(false);
			this.__isInThumbDrag = false;
			this.onScroll1($.ig.JsScrollEventType.prototype.thumbPosition, this._scrollInfo._offset());
			this.onScroll1($.ig.JsScrollEventType.prototype.endScroll, this._scrollInfo._offset());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::EndThumbDrag()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement::OnMouseDownThumb(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDownThumb: function (input) {
		if (input.getChangeType() == $.ig.InputContactChangeType.prototype.mouseLeftButton && input.startCapture()) {
			this.__isInThumbDrag = true;
			this._scrollThumb.isActive(false);
			var point = input.getRelativePoint();
			this.__thumbDragOffset = this._isVertical ? point.__y : point.__x;
			this.__preDragValue = this._scrollInfo._offset();
			this.onScroll1($.ig.JsScrollEventType.prototype.thumbTrack, this.__preDragValue);
			return true;
		} else {
			this.endThumbDrag();
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement::OnMouseDownThumb(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement::OnMouseMoveThumb(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMoveThumb: function (input) {
		if (this.__isInThumbDrag) {
			var point = input.getRelativePoint();
			var newValue = this.getThumbMouseOverValue(point);
			if (newValue != this._scrollInfo._offset()) {
				this.onScroll1($.ig.JsScrollEventType.prototype.thumbTrack, newValue);
			}
			return true;
		} else {
			return $.ig.VisualElement.prototype.onMouseMove.call(this, input);
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement::OnMouseMoveThumb(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement::OnMouseUpThumb(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUpThumb: function (input) {
		if (this.__isInThumbDrag) {
			this.endThumbDrag();
			input.endCapture();
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement::OnMouseUpThumb(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnScroll(Infragistics.Controls.Primitives.JsScrollEventType, Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	onScroll: function (eventType, scrollAmount) {
		this.onScroll1(eventType, this._scrollInfo._calculateNewOffset(scrollAmount));
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnScroll(Infragistics.Controls.Primitives.JsScrollEventType, Infragistics.Controls.Primitives.ScrollInfoAmount)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnScroll(Infragistics.Controls.Primitives.JsScrollEventType, System.Double)" />*/
	onScroll1: function (type, newValue) {
		var handler = this.scroll;
		if (null != handler) {
			var args = new $.ig.JsScrollEventArgs(type, newValue);
			handler(this, args);
			newValue = args.__newValue;
		}
		this._scrollInfo._scrollTo(newValue);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnScroll(Infragistics.Controls.Primitives.JsScrollEventType, System.Double)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnScrollInfoPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	onScrollInfoPropertyChanged: function (sender, e) {
		switch ((function ($t) { return $t != null ? $t : ""; }(e.propertyName()))) {
			case "":
			case "Offset":
				this.isChildPositionDirty(true);
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.ScrollBarVisualElement::OnScrollInfoPropertyChanged(System.Object, System.ComponentModel.PropertyChangedEventArgs)" />*/
	,
	scroll: null,
	$type: new $.ig.Type('ScrollBarVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.ScrollBarVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement" />*/

$.ig.util.defType('ScrollBarVisualElement_ScrollThumbVisualElement', 'VisualElement', {
	init: function (parent, id) {
		$.ig.VisualElement.prototype.init.call(this, parent, id);
	},
	/*<BeginProperty Name="Infragistics.Controls.Core.ScrollBarVisualElement Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::ScrollBarElement()" />*/
	scrollBarElement: function () {
		return this.__parent;
	}
	/*<EndProperty Name="Infragistics.Controls.Core.ScrollBarVisualElement Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::ScrollBarElement()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::IsInteractiveElement()" />*/
	isInteractiveElement: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::IsInteractiveElement()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseDown: function (input) {
		return this.scrollBarElement().onMouseDownThumb(input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::OnMouseDown(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseMove: function (input) {
		return this.scrollBarElement().onMouseMoveThumb(input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::OnMouseMove(Infragistics.Controls.Core.InputProxy)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	onMouseUp: function (input) {
		return this.scrollBarElement().onMouseUpThumb(input);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement::OnMouseUp(Infragistics.Controls.Core.InputProxy)" />*/
	,
	$type: new $.ig.Type('ScrollBarVisualElement_ScrollThumbVisualElement', $.ig.VisualElement.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.ScrollBarVisualElement_ScrollThumbVisualElement" />*/

/*<BeginType Name="Infragistics.Controls.Core.VisualElementConstraint" />*/

$.ig.util.defType('VisualElementConstraint', 'Object', {
	_maxWidth: 0,
	_maxHeight: 0,
	_minWidth: 0,
	_minHeight: 0,
	_width: 0,
	_height: 0,
	_margin: null,
	_padding: null,
	_borderThickness: null,
	init: function (width, minwidth, maxwidth, height, minheight, maxheight, margin, borderThickness, padding) {
		$.ig.Object.prototype.init.call(this);
		if (minwidth > maxwidth) {
			maxwidth = minwidth;
		}
		if (width < minwidth) {
			width = minwidth;
		} else if (width > maxwidth) {
			width = maxwidth;
		}
		if (minheight > maxheight) {
			maxheight = minheight;
		}
		if (height < minheight) {
			height = minheight;
		} else if (height > maxheight) {
			height = maxheight;
		}
		this._width = width;
		this._minWidth = minwidth;
		this._maxWidth = maxwidth;
		this._maxHeight = maxheight;
		this._minHeight = minheight;
		this._height = height;
		this._margin = margin;
		this._borderThickness = borderThickness;
		this._padding = padding;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementConstraint::SetPosition(System.Double, System.Double, System.Double, System.Double, System.Func)" />*/
	setPosition: function (left, top, width, height, impl) {
		var m = this._margin;
		if (m != null) {
			left += m._left;
			top += m._top;
			width -= m._width;
			height -= m._height;
		}
		var ow = width;
		width = this.constrainWidth(width);
		if (ow != width) {
			left += (ow - width) / 2;
		}
		var oh = height;
		height = this.constrainHeight(height);
		if (oh != height) {
			top += (oh - height) / 2;
		}
		return impl(left, top, width, height);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementConstraint::SetPosition(System.Double, System.Double, System.Double, System.Double, System.Func)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::ConstrainHeight(System.Double)" />*/
	constrainHeight: function (height) {
		if (!$.ig.util.isNaN(this._height)) {
			height = this._height;
		} else if (height > this._maxHeight) {
			height = this._maxHeight;
		} else if (height < this._minHeight) {
			height = this._minHeight;
		}
		return height;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::ConstrainHeight(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::ConstrainWidth(System.Double)" />*/
	constrainWidth: function (width) {
		if (!$.ig.util.isNaN(this._width)) {
			width = this._width;
		} else if (width > this._maxWidth) {
			width = this._maxWidth;
		} else if (width < this._minWidth) {
			width = this._minWidth;
		}
		return width;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::ConstrainWidth(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::GetDesiredHeight(System.Double)" />*/
	getDesiredHeight: function (contentHeight) {
		var h = contentHeight;
		h += this._padding._height;
		h += this._borderThickness._height;
		h += this._margin._height;
		return h;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::GetDesiredHeight(System.Double)" />*/
	,
	/*<BeginMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::GetDesiredWidth(System.Double)" />*/
	getDesiredWidth: function (contentWidth) {
		var w = contentWidth;
		w += this._padding._width;
		w += this._borderThickness._width;
		w += this._margin._width;
		return w;
	}
	/*<EndMethod Name="System.Double Infragistics.Controls.Core.VisualElementConstraint::GetDesiredWidth(System.Double)" />*/
	,
	$type: new $.ig.Type('VisualElementConstraint', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.VisualElementConstraint" />*/

/*<BeginType Name="Infragistics.Controls.Core.VisualElementThickness" />*/

$.ig.util.defType('VisualElementThickness', 'Object', {
	_left: 0,
	_top: 0,
	_width: 0,
	_height: 0,
	init: function (left, top, right, bottom) {
		$.ig.Object.prototype.init.call(this);
		this._left = $.ig.util.isNaN(left) ? 0 : left;
		this._top = $.ig.util.isNaN(top) ? 0 : top;
		this._width = this._left + ($.ig.util.isNaN(right) ? 0 : right);
		this._height = this._top + ($.ig.util.isNaN(bottom) ? 0 : bottom);
	},
	$type: new $.ig.Type('VisualElementThickness', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.VisualElementThickness" />*/

/*<BeginType Name="Infragistics.Controls.Core.VisualElement_ZComparer" />*/

$.ig.util.defType('VisualElement_ZComparer', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Core.VisualElement_ZComparer::Compare(Infragistics.Controls.Core.VisualElement, Infragistics.Controls.Core.VisualElement)" />*/
	compare: function (x, y) {
		if (x == y) {
			return 0;
		}
		if (x == null) {
			return -1;
		} else if (y == null) {
			return 1;
		}
		return $.ig.util.compareSimple(x.__zIndex, y.__zIndex);
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Core.VisualElement_ZComparer::Compare(Infragistics.Controls.Core.VisualElement, Infragistics.Controls.Core.VisualElement)" />*/
	,
	$type: new $.ig.Type('VisualElement_ZComparer', $.ig.Object.prototype.$type, [$.ig.IComparer$1.prototype.$type.specialize($.ig.VisualElement.prototype.$type)])
}, true);

/*<EndType Name="Infragistics.Controls.Core.VisualElement_ZComparer" />*/

/*<BeginType Name="Infragistics.Controls.Core.VisualElementInputProxy" />*/

$.ig.util.defType('VisualElementInputProxy', 'InputProxy', {
	__root: null,
	__changeType: 0,
	__eventProxy: null,
	__relativeElement: null,
	__relativePt: null,
	__clickCount: 0,
	__isDown: false,
	init: function (root, changeType, eventProxy, offsetX, offsetY, relativeElement, clickCount, isDown) {
		$.ig.InputProxy.prototype.init.call(this);
		this.__root = root;
		this.__changeType = changeType;
		this.__eventProxy = eventProxy;
		this.__clickCount = clickCount;
		this.__isDown = isDown;
		this.__relativePt = new $.ig.Point(0);
		this.initialize(offsetX, offsetY, relativeElement);
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementInputProxy::EndCapture()" />*/
	endCapture: function () {
		this.__root.releaseCapture(this.__relativeElement);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementInputProxy::EndCapture()" />*/
	,
	/*<BeginMethod Name="Infragistics.Controls.Core.InputContactChangeType Infragistics.Controls.Core.VisualElementInputProxy::GetChangeType()" />*/
	getChangeType: function () {
		return this.__changeType;
	}
	/*<EndMethod Name="Infragistics.Controls.Core.InputContactChangeType Infragistics.Controls.Core.VisualElementInputProxy::GetChangeType()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementInputProxy::IsInputContactPressed()" />*/
	isInputContactPressed: function () {
		return this.__isDown;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementInputProxy::IsInputContactPressed()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.Controls.Core.VisualElementInputProxy::GetInputClickCount()" />*/
	getInputClickCount: function () {
		return this.__clickCount;
	}
	/*<EndMethod Name="System.Int32 Infragistics.Controls.Core.VisualElementInputProxy::GetInputClickCount()" />*/
	,
	/*<BeginMethod Name="System.Windows.Input.ModifierKeys Infragistics.Controls.Core.VisualElementInputProxy::GetModifierKeys()" />*/
	getModifierKeys: function () {
		return this.__eventProxy.currentModifiers();
	}
	/*<EndMethod Name="System.Windows.Input.ModifierKeys Infragistics.Controls.Core.VisualElementInputProxy::GetModifierKeys()" />*/
	,
	/*<BeginMethod Name="System.Windows.Point Infragistics.Controls.Core.VisualElementInputProxy::GetRelativePoint()" />*/
	getRelativePoint: function () {
		return this.__relativePt;
	}
	/*<EndMethod Name="System.Windows.Point Infragistics.Controls.Core.VisualElementInputProxy::GetRelativePoint()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementInputProxy::HasCapture()" />*/
	hasCapture: function () {
		return this.__root.hasCapture();
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementInputProxy::HasCapture()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementInputProxy::StartCapture()" />*/
	startCapture: function () {
		return this.__root.capture(this.__relativeElement);
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Core.VisualElementInputProxy::StartCapture()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElementInputProxy::RelativeElement()" />*/
	relativeElement: function () {
		return this.__relativeElement;
	}
	/*<EndProperty Name="Infragistics.Controls.Core.VisualElement Infragistics.Controls.Core.VisualElementInputProxy::RelativeElement()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Core.VisualElementInputProxy::Initialize(System.Double, System.Double, Infragistics.Controls.Core.VisualElement)" />*/
	initialize: function (offsetX, offsetY, relativeElement) {
		this.__relativePt.__x = offsetX;
		this.__relativePt.__y = offsetY;
		this.__relativeElement = relativeElement;
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Core.VisualElementInputProxy::Initialize(System.Double, System.Double, Infragistics.Controls.Core.VisualElement)" />*/
	,
	$type: new $.ig.Type('VisualElementInputProxy', $.ig.InputProxy.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Controls.Core.VisualElementInputProxy" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass" />*/

$.ig.util.defType('IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: null,
	__regionEnumerator: null,
	___region_5_0: null,
	__worksheet: null,
	___3__worksheet: null,
	___4__this: null,
	init: function (_1__state) {
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::_m_Finally0()" />*/
	__m_Finally0: function () {
		this.___1__state = -1;
		if (this.__regionEnumerator != null) {
			this.__regionEnumerator.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::_m_Finally0()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		var __hasError__ = false;
		try {
			while (this.___1__state >= 0) {
				switch (this.___1__state) {
					case 0:
						this.___1__state = 1;
						this.__regionEnumerator = (this.__worksheet.mergedCellsRegions()).getEnumerator();
						this.___1__state = 2;
						break;
					case 2:
						this.___1__state = 1;
						if (this.__regionEnumerator.moveNext()) {
							this.___region_5_0 = this.__regionEnumerator.current();
							if (this.___4__this.__context._cellRegionMap.doesSourceContain(this.___region_5_0._address())) {
								this.___2__current = this.___region_5_0;
								this.___1__state = 2;
								return true;
							}
							this.___1__state = 2;
							break;
						}
						this.__m_Finally0();
						break;
				}
			}
		}
		catch (e) {
			__hasError__ = true;
			throw e;
		}
		finally {
			if (__hasError__) {
				(this).dispose();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetMergedCellsRegion>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass(0);
			d__.___4__this = this.___4__this;
		}
		d__.__worksheet = this.___3__worksheet;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetMergedCellsRegion>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
		switch (this.___1__state) {
			case 1:
			case 2:
				this.__m_Finally0();
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetMergedCellsRegion Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetMergedCellsRegion>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetMergedCellsRegion Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetMergedCellsRegion>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.excel.WorksheetMergedCellsRegion.prototype.$type), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.excel.WorksheetMergedCellsRegion.prototype.$type), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetMergedCells__IteratorClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: null,
	___i_5_0: 0,
	__rows: null,
	___3__rows: null,
	__firstRow: 0,
	___3__firstRow: 0,
	__lastRow: 0,
	___3__lastRow: 0,
	init: function (_1__state) {
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		while (this.___1__state >= 0) {
			switch (this.___1__state) {
				case 0:
					this.___1__state = -1;
					this.___i_5_0 = this.__firstRow;
					this.___1__state = 1;
					break;
				case 1:
					this.___1__state = -1;
					if (this.___i_5_0 <= this.__lastRow) {
						this.___2__current = this.__rows.item(this.___i_5_0);
						this.___1__state = 2;
						return true;
					}
					break;
				case 2:
					this.___1__state = -1;
					this.___i_5_0++;
					this.___1__state = 1;
					break;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetRow>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass(0);
		}
		d__.__rows = this.___3__rows;
		d__.__firstRow = this.___3__firstRow;
		d__.__lastRow = this.___3__lastRow;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetRow>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetRow>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetRow>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.excel.WorksheetRow.prototype.$type), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.excel.WorksheetRow.prototype.$type), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider___GetAllRowsInRange__IteratorClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: 0,
	___current_5_0: 0,
	___sourceCellEnumerator_5_1: null,
	___targetCellEnumerator_5_2: null,
	___targetColumnsEnumerator_5_3: null,
	___sourceColumnsEnumerator_5_4: null,
	___sourceTableEnumerator_5_5: null,
	___next_5_6: 0,
	__sourceRow: null,
	___3__sourceRow: null,
	__targetRow: null,
	___3__targetRow: null,
	___4__this: null,
	init: function (_1__state) {
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		while (this.___1__state >= 0) {
			switch (this.___1__state) {
				case 0:
					{
						this.___1__state = -1;
						this.___current_5_0 = -1;
						var sourceRepeatCount = $.ig.intDivide(this.___4__this.__targetRange._width(), this.___4__this.__sourceRegionMap.sourceWidth());
						this.___sourceCellEnumerator_5_1 = new $.ig.ExcelWorkbookSerializationProvider_SourceRowColumnIndexEnumerator(this.__sourceRow, this.___4__this.__sourceRegionMap, this.___4__this.__targetRange.firstColumn(), sourceRepeatCount);
						if (!this.___sourceCellEnumerator_5_1.moveNext()) {
							this.___sourceCellEnumerator_5_1 = null;
						}
						this.___targetCellEnumerator_5_2 = this.__targetRow._getCellsWithData(this.___4__this.__targetRange.firstColumn(), this.___4__this.__targetRange.lastColumn()).getEnumerator();
						if (!this.___targetCellEnumerator_5_2.moveNext()) {
							this.___targetCellEnumerator_5_2 = null;
						}
						this.___targetColumnsEnumerator_5_3 = null;
						this.___sourceColumnsEnumerator_5_4 = null;
						if (this.___4__this.__considerColumnBlockFormatting) {
							this.___targetColumnsEnumerator_5_3 = new $.ig.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator(this.__targetRow.worksheet(), 1);
							if (!this.___targetColumnsEnumerator_5_3.moveNext()) {
								this.___targetColumnsEnumerator_5_3 = null;
							}
							this.___sourceColumnsEnumerator_5_4 = new $.ig.ExcelWorkbookSerializationProvider_RepeatingColumnBlockEnumerator(this.__sourceRow.worksheet(), sourceRepeatCount);
							if (!this.___sourceColumnsEnumerator_5_4.moveNext()) {
								this.___sourceColumnsEnumerator_5_4 = null;
							}
						}
						this.___sourceTableEnumerator_5_5 = null;
						if (this.___4__this.__considerSourceTableFormatting) {
							this.___sourceTableEnumerator_5_5 = new $.ig.ExcelWorkbookSerializationProvider_RepeatingBlockEnumerator(this.___4__this.createSourceTableBlocks(this.__sourceRow), this.___4__this.__sourceRegionMap.sourceWidth(), sourceRepeatCount);
							if (!this.___sourceTableEnumerator_5_5.moveNext()) {
								this.___sourceTableEnumerator_5_5 = null;
							}
						}
						this.___1__state = 1;
						break;
					}
				case 1:
					this.___1__state = -1;
					if (true) {
						this.___next_5_6 = 0x7FFFFFFF;
						while (this.___sourceCellEnumerator_5_1 != null) {
							if (this.___sourceCellEnumerator_5_1.current() > this.___current_5_0) {
								this.___next_5_6 = this.___sourceCellEnumerator_5_1.current();
								{
									this.___1__state = 3;
									break;
								}
							}
							if (!this.___sourceCellEnumerator_5_1.moveNext()) {
								this.___sourceCellEnumerator_5_1 = null;
							}
						}
						while (this.___targetCellEnumerator_5_2 != null) {
							if (this.___targetCellEnumerator_5_2.current().columnIndex() > this.___current_5_0) {
								if (this.___targetCellEnumerator_5_2.current().columnIndex() < this.___next_5_6) {
									this.___next_5_6 = this.___targetCellEnumerator_5_2.current().columnIndex();
								}
								{
									this.___1__state = 3;
									break;
								}
							}
							if (!this.___targetCellEnumerator_5_2.moveNext()) {
								this.___targetCellEnumerator_5_2 = null;
							}
						}
						if (this.___4__this.__considerColumnBlockFormatting) {
							var $ret = $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper.prototype.processColumnBlockEnumerator(this.___current_5_0, this.___targetColumnsEnumerator_5_3, this.___next_5_6);
							this.___targetColumnsEnumerator_5_3 = $ret.p1;
							this.___next_5_6 = $ret.p2;
							var $ret1 = $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper.prototype.processColumnBlockEnumerator(this.___current_5_0, this.___sourceColumnsEnumerator_5_4, this.___next_5_6);
							this.___sourceColumnsEnumerator_5_4 = $ret1.p1;
							this.___next_5_6 = $ret1.p2;
						}
						if (this.___sourceTableEnumerator_5_5 != null) {
							var $ret2 = $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper.prototype.processColumnBlockEnumerator(this.___current_5_0, this.___sourceTableEnumerator_5_5, this.___next_5_6);
							this.___sourceTableEnumerator_5_5 = $ret2.p1;
							this.___next_5_6 = $ret2.p2;
						}
						if (this.___next_5_6 == 0x7FFFFFFF) {
							this.___1__state = 3;
							break;
						}
						this.___2__current = this.___next_5_6;
						this.___1__state = 2;
						return true;
					}
					this.___1__state = 3;
					break;
				case 2:
					this.___1__state = -1;
					this.___current_5_0 = this.___next_5_6;
					this.___1__state = 1;
					break;
				case 3:
					this.___1__state = -1;
					break;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass(0);
			d__.___4__this = this.___4__this;
		}
		d__.__sourceRow = this.___3__sourceRow;
		d__.__targetRow = this.___3__targetRow;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.Generic.IEnumerator<System.Int32>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.Generic.IEnumerator<System.Int32>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.Number.prototype.$type), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRowImpl__IteratorClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass" />*/

$.ig.util.defType('ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: null,
	___start_5_0: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	___end_5_1: 0,
	__idxEnumerator: null,
	___idx_5_2: 0,
	__sourceRow: null,
	___3__sourceRow: null,
	__targetRow: null,
	___3__targetRow: null,
	___4__this: null,
	init: function (_1__state) {
		this.___2__current = new $.ig.Range$1($.ig.Number.prototype.$type);
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::_m_Finally0()" />*/
	__m_Finally0: function () {
		this.___1__state = -1;
		if (this.__idxEnumerator != null) {
			this.__idxEnumerator.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::_m_Finally0()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		var __hasError__ = false;
		try {
			while (this.___1__state >= 0) {
				switch (this.___1__state) {
					case 0:
						this.___1__state = -1;
						this.___start_5_0 = $.ig.util.toNullable($.ig.Number.prototype.$type, null);
						this.___end_5_1 = 0;
						this.___1__state = 1;
						this.__idxEnumerator = this.___4__this.getTargetColumnsForSelectedRowImpl(this.__sourceRow, this.__targetRow).getEnumerator();
						this.___1__state = 2;
						break;
					case 2:
						this.___1__state = 1;
						if (this.__idxEnumerator.moveNext()) {
							this.___idx_5_2 = this.__idxEnumerator.current();
							if ($.ig.util.nullableEquals(this.___start_5_0, null)) {
								this.___start_5_0 = $.ig.util.toNullable($.ig.Number.prototype.$type, this.___end_5_1 = this.___idx_5_2);
							} else if (this.___idx_5_2 == this.___end_5_1 + 1) {
								this.___end_5_1 = this.___idx_5_2;
							} else {
								this.___2__current = new $.ig.Range$1($.ig.Number.prototype.$type, 1, this.___start_5_0.value(), this.___end_5_1);
								this.___1__state = 3;
								return true;
							}
							this.___1__state = 2;
							break;
						}
						this.__m_Finally0();
						if ($.ig.util.nullableNotEquals(this.___start_5_0, null)) {
							this.___2__current = new $.ig.Range$1($.ig.Number.prototype.$type, 1, this.___start_5_0.value(), this.___end_5_1);
							this.___1__state = 4;
							return true;
						}
						break;
					case 3:
						this.___1__state = 1;
						this.___start_5_0 = $.ig.util.toNullable($.ig.Number.prototype.$type, this.___end_5_1 = this.___idx_5_2);
						this.___1__state = 2;
						break;
					case 4:
						this.___1__state = -1;
						break;
				}
			}
		}
		catch (e) {
			__hasError__ = true;
			throw e;
		}
		finally {
			if (__hasError__) {
				(this).dispose();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Range<System.Int32>>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass(0);
			d__.___4__this = this.___4__this;
		}
		d__.__sourceRow = this.___3__sourceRow;
		d__.__targetRow = this.___3__targetRow;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Range<System.Int32>>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
		switch (this.___1__state) {
			case 1:
			case 2:
			case 3:
				this.__m_Finally0();
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Range<System.Int32>>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="Infragistics.Range Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Range<System.Int32>>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type)), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.Range$1.prototype.$type.specialize($.ig.Number.prototype.$type)), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.ExcelWorkbookSerializationProvider_TargetColumnIndexHelper___GetTargetColumnsForSelectedRow__IteratorClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass" />*/

$.ig.util.defType('IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: null,
	___rows_5_0: null,
	___lastProcessedRow_5_1: 0,
	__rowEnumerator: null,
	___row_5_2: null,
	___i_5_3: 0,
	___end_5_4: 0,
	__ws: null,
	___3__ws: null,
	___4__this: null,
	init: function (_1__state) {
		this.___row_5_2 = new $.ig.Range$1($.ig.Number.prototype.$type);
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::_m_Finally0()" />*/
	__m_Finally0: function () {
		this.___1__state = -1;
		if (this.__rowEnumerator != null) {
			this.__rowEnumerator.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::_m_Finally0()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		var __hasError__ = false;
		try {
			while (this.___1__state >= 0) {
				switch (this.___1__state) {
					case 0:
						this.___1__state = -1;
						this.___rows_5_0 = this.__ws.rows();
						this.___lastProcessedRow_5_1 = -1;
						this.___1__state = 1;
						this.__rowEnumerator = (this.___4__this.__context._cellRegionMap.sourceRows()).getEnumerator();
						this.___1__state = 2;
						break;
					case 2:
						this.___1__state = 1;
						if (this.__rowEnumerator.moveNext()) {
							this.___row_5_2 = this.__rowEnumerator.current();
							var startingRowIndex = $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter.prototype.getStartingRow(this.___row_5_2.__start, this.___lastProcessedRow_5_1, this.___rows_5_0);
							this.___i_5_3 = startingRowIndex;
							this.___end_5_4 = this.___row_5_2.__end;
							this.___1__state = 3;
							break;
						}
						this.__m_Finally0();
						break;
					case 3:
						this.___1__state = 1;
						if (this.___i_5_3 <= this.___end_5_4) {
							this.___2__current = this.___rows_5_0.item(this.___i_5_3);
							this.___1__state = 4;
							return true;
						}
						this.___lastProcessedRow_5_1 = this.___row_5_2.__end;
						this.___1__state = 2;
						break;
					case 4:
						this.___1__state = 1;
						this.___i_5_3++;
						this.___1__state = 3;
						break;
				}
			}
		}
		catch (e) {
			__hasError__ = true;
			throw e;
		}
		finally {
			if (__hasError__) {
				(this).dispose();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetRow>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass(0);
			d__.___4__this = this.___4__this;
		}
		d__.__ws = this.___3__ws;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetRow>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
		switch (this.___1__state) {
			case 1:
			case 2:
			case 3:
			case 4:
				this.__m_Finally0();
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetRow>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetRow>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.excel.WorksheetRow.prototype.$type), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.excel.WorksheetRow.prototype.$type), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllRows__IteratorClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass" />*/

$.ig.util.defType('SpreadsheetPaneManager___GetAllCells__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: null,
	__rangeEnumerator: null,
	___range_5_0: null,
	___r_5_1: 0,
	___c_5_2: 0,
	___mergedCell_5_3: null,
	___cellStart_5_4: null,
	__ws: null,
	___3__ws: null,
	__ranges: null,
	___3__ranges: null,
	__rangeInitializer: null,
	___3__rangeInitializer: null,
	init: function (_1__state) {
		this.___2__current = new $.ig.spreadsheet.SpreadsheetCell();
		this.___range_5_0 = new $.ig.spreadsheet.SpreadsheetCellRange();
		this.___mergedCell_5_3 = new $.ig.spreadsheet.SpreadsheetCellRange();
		this.___cellStart_5_4 = new $.ig.spreadsheet.SpreadsheetCell();
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::_m_Finally0()" />*/
	__m_Finally0: function () {
		this.___1__state = -1;
		if (this.__rangeEnumerator != null) {
			this.__rangeEnumerator.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::_m_Finally0()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		var __hasError__ = false;
		try {
			while (this.___1__state >= 0) {
				switch (this.___1__state) {
					case 0:
						this.___1__state = 1;
						this.__rangeEnumerator = this.__ranges.getEnumerator();
						this.___1__state = 2;
						break;
					case 2:
						this.___1__state = 1;
						if (this.__rangeEnumerator.moveNext()) {
							this.___range_5_0 = this.__rangeEnumerator.current();
							if (this.__rangeInitializer != null) {
								this.__rangeInitializer(this.___range_5_0);
							}
							this.___r_5_1 = this.___range_5_0.firstRow();
							this.___1__state = 3;
							break;
						}
						this.__m_Finally0();
						break;
					case 3:
						this.___1__state = 1;
						if (this.___r_5_1 <= this.___range_5_0.lastRow()) {
							this.___c_5_2 = this.___range_5_0.firstColumn();
							this.___1__state = 4;
							break;
						}
						this.___1__state = 2;
						break;
					case 4:
						this.___1__state = 1;
						if (this.___c_5_2 <= this.___range_5_0.lastColumn()) {
							this.___mergedCell_5_3 = $.ig.SpreadsheetPaneManager.prototype._getCellRange2(this.___r_5_1, this.___c_5_2, this.__ws);
							this.___cellStart_5_4 = this.___mergedCell_5_3._upperLeft();
							if (!this.___mergedCell_5_3.isSingleCell()) {
								var firstVis = $.ig.SpreadsheetPaneManager.prototype._getFirstVisibleCell1(this.___mergedCell_5_3, this.__ws);
								if ($.ig.spreadsheet.SpreadsheetCell.prototype.l_op_Inequality_Lifted(firstVis, $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetCell.prototype.$type, null))) {
									this.___cellStart_5_4 = firstVis.value();
								}
							}
							if (this.___cellStart_5_4.row() == this.___r_5_1 && this.___cellStart_5_4.column() >= this.___c_5_2) {
								this.___2__current = this.___cellStart_5_4;
								this.___1__state = 5;
								return true;
							}
							this.___c_5_2 = this.___mergedCell_5_3.lastColumn();
							this.___1__state = 5;
							break;
						}
						this.___r_5_1++;
						this.___1__state = 3;
						break;
					case 5:
						this.___1__state = 1;
						this.___c_5_2++;
						this.___1__state = 4;
						break;
				}
			}
		}
		catch (e) {
			__hasError__ = true;
			throw e;
		}
		finally {
			if (__hasError__) {
				(this).dispose();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Controls.Grids.Core.SpreadsheetCell>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.SpreadsheetPaneManager___GetAllCells__IteratorClass(0);
		}
		d__.__ws = this.___3__ws;
		d__.__ranges = this.___3__ranges;
		d__.__rangeInitializer = this.___3__rangeInitializer;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Controls.Grids.Core.SpreadsheetCell>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
		switch (this.___1__state) {
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
				this.__m_Finally0();
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Controls.Grids.Core.SpreadsheetCell>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="Infragistics.Controls.Grids.Core.SpreadsheetCell Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Controls.Grids.Core.SpreadsheetCell>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('SpreadsheetPaneManager___GetAllCells__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCell.prototype.$type), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCell.prototype.$type), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager___GetAllCells__IteratorClass" />*/

/*<BeginType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass" />*/

$.ig.util.defType('IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass', 'Object', {
	___1__state: 0,
	___2__current: null,
	___rows_5_0: null,
	___lastProcessedRow_5_1: 0,
	__rowEnumerator: null,
	___row_5_2: null,
	__wsRowEnumerator: null,
	___wsRow_5_3: null,
	__ws: null,
	___3__ws: null,
	___4__this: null,
	init: function (_1__state) {
		this.___row_5_2 = new $.ig.Range$1($.ig.Number.prototype.$type);
		$.ig.Object.prototype.init.call(this);
		this.___1__state = _1__state;
	},
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::_m_Finally0()" />*/
	__m_Finally0: function () {
		this.___1__state = -1;
		if (this.__rowEnumerator != null) {
			this.__rowEnumerator.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::_m_Finally0()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::_m_Finally1()" />*/
	__m_Finally1: function () {
		this.___1__state = 1;
		if (this.__wsRowEnumerator != null) {
			this.__wsRowEnumerator.dispose();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::_m_Finally1()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::MoveNext()" />*/
	moveNext: function () {
		var __hasError__ = false;
		try {
			while (this.___1__state >= 0) {
				switch (this.___1__state) {
					case 0:
						this.___1__state = -1;
						this.___rows_5_0 = this.__ws.rows();
						this.___lastProcessedRow_5_1 = -1;
						this.___1__state = 1;
						this.__rowEnumerator = (this.___4__this.__context._cellRegionMap.sourceRows()).getEnumerator();
						this.___1__state = 2;
						break;
					case 2:
						this.___1__state = 1;
						if (this.__rowEnumerator.moveNext()) {
							this.___row_5_2 = this.__rowEnumerator.current();
							var startingRowIndex = $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter.prototype.getStartingRow(this.___row_5_2.__start, this.___lastProcessedRow_5_1, this.___rows_5_0);
							this.___1__state = 3;
							this.__wsRowEnumerator = this.___rows_5_0._getItemsInRange(startingRowIndex, this.___row_5_2.__end).getEnumerator();
							this.___1__state = 4;
							break;
						}
						this.__m_Finally0();
						break;
					case 4:
						this.___1__state = 3;
						if (this.__wsRowEnumerator.moveNext()) {
							this.___wsRow_5_3 = this.__wsRowEnumerator.current();
							this.___2__current = this.___wsRow_5_3;
							this.___1__state = 4;
							return true;
						}
						this.__m_Finally1();
						this.___lastProcessedRow_5_1 = this.___row_5_2.__end;
						this.___1__state = 2;
						break;
				}
			}
		}
		catch (e) {
			__hasError__ = true;
			throw e;
		}
		finally {
			if (__hasError__) {
				(this).dispose();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::MoveNext()" />*/
	,
	/*<BeginMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetRow>.GetEnumerator()" />*/
	getEnumerator: function () {
		var d__;
		if (this.___1__state == -2) {
			this.___1__state = 0;
			d__ = this;
		} else {
			d__ = new $.ig.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass(0);
			d__.___4__this = this.___4__this;
		}
		d__.__ws = this.___3__ws;
		return d__;
	}
	/*<EndMethod Name="System.Collections.Generic.IEnumerator Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.Generic.IEnumerable<Infragistics.Documents.Excel.WorksheetRow>.GetEnumerator()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	reset: function () {
		throw new $.ig.NotSupportedException(1);
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.IEnumerator.Reset()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.IDisposable.Dispose()" />*/
	dispose: function () {
		switch (this.___1__state) {
			case 1:
			case 2:
				this.__m_Finally0();
				break;
			case 3:
			case 4:
				try {
					this.__m_Finally1();
				}
				finally {
					this.__m_Finally0();
				}
				break;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.IDisposable.Dispose()" />*/
	,
	/*<BeginProperty Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetRow>.Current()" />*/
	current: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="Infragistics.Documents.Excel.WorksheetRow Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.Generic.IEnumerator<Infragistics.Documents.Excel.WorksheetRow>.Current()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	current1: function () {
		return this.___2__current;
	}
	/*<EndProperty Name="System.Object Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass::System.Collections.IEnumerator.Current()" />*/
	,
	$type: new $.ig.Type('IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass', $.ig.Object.prototype.$type, [$.ig.IEnumerable$1.prototype.$type.specialize($.ig.excel.WorksheetRow.prototype.$type), $.ig.IEnumerable.prototype.$type, $.ig.IEnumerator$1.prototype.$type.specialize($.ig.excel.WorksheetRow.prototype.$type), $.ig.IEnumerator.prototype.$type, $.ig.IDisposable.prototype.$type])
}, true);

/*<EndType Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider_SelectionWorkbookSaveFilter___GetAllocatedRows__IteratorClass" />*/

/*<BeginGlobal/>*/
	$.ig.spreadsheet = $.ig.spreadsheet || {};
	$.ig.spreadsheet.$embeddedFiles = $.ig.spreadsheet.$embeddedFiles || {};
	var $localEmbedded = $.ig.spreadsheet.$embeddedFiles;
					
	$localEmbedded.get = function(name) {
		var str = this[name];
		if (!str) return null;
		var data = $.ig.util.b64toUint8Array(str);
		return new $.ig.MemoryStream(2, data);
	}
	$localEmbedded["Infragistics.Controls.Grids.presetShapeDefinitions.xml.gz"] = ""
/*<EndGlobal/>*/

/*<BeginStatics Name="Infragistics.DeferredOperation" />*/

$.ig.DeferredOperation.prototype.__sharedOperations = null;
$.ig.DeferredOperation.prototype.__sharedOperation = null;
/*<EndStatics Name="Infragistics.DeferredOperation" />*/

/*<BeginStatics Name="Infragistics.Collections.WeakDictionary`2" />*/

$.ig.WeakDictionary$2.prototype.__dEFAULT_CAPACITY = 11;
$.ig.WeakDictionary$2.prototype.__dEFAULT_LOAD_FACTOR = 0.89999997615814209;
/*<EndStatics Name="Infragistics.Collections.WeakDictionary" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder" />*/

$.ig.JsSpreadsheetMenuBuilder.prototype._separatorText = "-";
$.ig.JsSpreadsheetMenuBuilder.prototype._useAnchorForMenus = false;
$.ig.JsSpreadsheetMenuBuilder.prototype.nullCommand = $.ig.util.toNullable($.ig.spreadsheet.SpreadsheetAction.prototype.$type, null);
$.ig.JsSpreadsheetMenuBuilder.prototype._nullElementArray = new Array(0);
if ($.ig.JsSpreadsheetMenuBuilder.prototype.staticInit && !$.ig.JsSpreadsheetMenuBuilder.prototype.jsSpreadsheetMenuBuilderStaticInitCalled) { $.ig.JsSpreadsheetMenuBuilder.prototype.staticInit(); $.ig.JsSpreadsheetMenuBuilder.prototype.jsSpreadsheetMenuBuilderStaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Controls.Grids.Core.JsSpreadsheetMenuBuilder" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager" />*/

$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_PeerCanvas = 0;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_HeaderIntersection = 100;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_Headers = 200;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabAreaBackground = 225;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabAreaBorder = 250;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_ScrollBars = 300;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabArea = 330;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_TabAreaSplitter = 370;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_Splitter = 400;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_SplitterIntersection = 500;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_SplitterPreview = 600;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_InputMessage = 800;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_InPlaceEditorBackground = 900;
$.ig.SpreadsheetAreaLayoutManager.prototype.zIndex_InPlaceEditor = 1000;
$.ig.SpreadsheetAreaLayoutManager.prototype.headerAdjustment = 1;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetAreaLayoutManager" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.VisualElement" />*/

$.ig.VisualElement.prototype._hasPositionChangedFlag = 1;
$.ig.VisualElement.prototype._isMouseOverFlag = 2;
$.ig.VisualElement.prototype._isMouseOverChangedFlag = 4;
$.ig.VisualElement.prototype._isHitTestVisibleFlag = 8;
$.ig.VisualElement.prototype._isEnabledFlag = 16;
$.ig.VisualElement.prototype._isEnabledChangedFlag = 32;
$.ig.VisualElement.prototype._hasZIndexChangedFlag = 64;
$.ig.VisualElement.prototype._hasChildZIndexChangedFlag = 128;
$.ig.VisualElement.prototype._isRemovedFlag = 256;
$.ig.VisualElement.prototype._hasDescendantChangedFlag = 512;
$.ig.VisualElement.prototype._cursorChangedFlag = 1024;
$.ig.VisualElement.prototype._isActiveFlag = 2048;
$.ig.VisualElement.prototype._isActiveChangedFlag = 4096;
$.ig.VisualElement.prototype._isVisibleFlag = 8192;
$.ig.VisualElement.prototype._isVisibleChangedFlag = 16384;
$.ig.VisualElement.prototype._hasChangedFlag = 32768;
$.ig.VisualElement.prototype._isChildPositionDirtyFlag = 65536;
$.ig.VisualElement.prototype._containsToolTipFlag = 131072;
$.ig.VisualElement.prototype._isHitTestableFlags = $.ig.VisualElement.prototype._isHitTestVisibleFlag | $.ig.VisualElement.prototype._isEnabledFlag;
/*<EndStatics Name="Infragistics.Controls.Core.VisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.Spreadsheet" />*/

$.ig.Spreadsheet.prototype.__asyncPendingActiveCellValueChangeDelay = 250;
$.ig.Spreadsheet.prototype.__defaultFixedDecimalPlaceCount = 2;
$.ig.Spreadsheet.prototype._nameBoxWidthDefault = 102;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.Spreadsheet" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy" />*/

$.ig.SpreadsheetDOMEventProxy.prototype.___proxyCount = 0;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetDOMEventProxy" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.VisualElementDomBuilder" />*/

$.ig.VisualElementDomBuilder.prototype.disabledClass = "ui-state-disabled";
$.ig.VisualElementDomBuilder.prototype.interactiveClass = "ui-state-default";
$.ig.VisualElementDomBuilder.prototype.hoverClass = "ui-state-hover";
$.ig.VisualElementDomBuilder.prototype.activeClass = "ui-state-active";
$.ig.VisualElementDomBuilder.prototype.highlightClass = "ui-state-highlight";
/*<EndStatics Name="Infragistics.Controls.Core.VisualElementDomBuilder" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder" />*/

$.ig.SpreadsheetVisualElementDomBuilder.prototype.spreadsheetRendererElementId = "SpreadsheetRenderer";
$.ig.SpreadsheetVisualElementDomBuilder.prototype.sharedPixelConverter = new $.ig.PixelConverter();
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetVisualElementDomBuilder" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache" />*/

$.ig.JsSpreadsheetRenderCache.prototype._superSubScriptFactor = 0.66;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.JsSpreadsheetRenderCache" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange" />*/

$.ig.spreadsheet.SpreadsheetCellRange.prototype.empty = new $.ig.spreadsheet.SpreadsheetCellRange();
$.ig.spreadsheet.SpreadsheetCellRange.empty = $.ig.spreadsheet.SpreadsheetCellRange.prototype.empty;
if ($.ig.spreadsheet.SpreadsheetCellRange.prototype._staticInit && !$.ig.spreadsheet.SpreadsheetCellRange.prototype.spreadsheetCellRangeStaticInitCalled) { $.ig.spreadsheet.SpreadsheetCellRange.prototype._staticInit(); $.ig.spreadsheet.SpreadsheetCellRange.prototype.spreadsheetCellRangeStaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRange" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetUtilities" />*/

$.ig.SpreadsheetUtilities.prototype.noPreferredFormatIndex = -1;
$.ig.SpreadsheetUtilities.prototype.minHeaderIndexForMeasure = 100;
$.ig.SpreadsheetUtilities.prototype.extraHeaderPadding = 3;
$.ig.SpreadsheetUtilities.prototype.logicalPixelSize = 96;
$.ig.SpreadsheetUtilities.prototype.__cellBorderOrder = $.ig.SpreadsheetUtilities.prototype.createCellBoderOrderArray();
$.ig.SpreadsheetUtilities.prototype.cellFillPatternTemplates = $.ig.SpreadsheetUtilities.prototype.createCellFillPatternTemplateTable();
$.ig.SpreadsheetUtilities.prototype.oCE_CellRange = $.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type);
$.ig.SpreadsheetUtilities.prototype.aRS_CellRange_Int = $.ig.AdapterRangeSet$2.prototype.$type.specialize($.ig.spreadsheet.SpreadsheetCellRange.prototype.$type, $.ig.Number.prototype.$type);
$.ig.SpreadsheetUtilities.prototype.oCE_WorkItemPos = $.ig.ObservableCollectionExtended$1.prototype.$type.specialize($.ig.WorksheetItemPosition.prototype.$type);
$.ig.SpreadsheetUtilities.prototype.__fontSizes = new $.ig.List$1($.ig.Number.prototype.$type, 1, [ 160, 180, 200, 220, 240, 280, 320, 360, 400, 440, 480, 520, 560, 720, 960, 1440 ]);
$.ig.SpreadsheetUtilities.prototype.__formatColors = null;
$.ig.SpreadsheetUtilities.prototype.__builtInCellFormatCategoryTable = $.ig.SpreadsheetUtilities.prototype.createBuiltInCellFormatCategoryTable();
$.ig.SpreadsheetUtilities.prototype.__shortDateFormatter = null;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetUtilities" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCell" />*/

if ($.ig.spreadsheet.SpreadsheetCell.prototype._staticInit && !$.ig.spreadsheet.SpreadsheetCell.prototype.spreadsheetCellStaticInitCalled) { $.ig.spreadsheet.SpreadsheetCell.prototype._staticInit(); $.ig.spreadsheet.SpreadsheetCell.prototype.spreadsheetCellStaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCell" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray" />*/

$.ig.SpreadsheetCellRenderInfoArray.prototype.__default = $.ig.SpreadsheetCellRenderInfo.prototype.createDefault();
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCellRenderInfoArray" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder" />*/

$.ig.SpreadsheetCommandBuilder.prototype._zero = new $.ig.LongValue(0);
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCommandBuilder" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges" />*/

$.ig.LockedEditRangeInfoForCellRange_WithoutRanges.prototype.empty = new $.ig.LockedEditRangeInfoForCellRange_WithoutRanges(null);
/*<EndStatics Name="Infragistics.Controls.Grids.Core.LockedEditRangeInfoForCellRange_WithoutRanges" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetEditHelper" />*/

$.ig.SpreadsheetEditHelper.prototype.trueBox = true;
$.ig.SpreadsheetEditHelper.prototype.falseBox = false;
$.ig.SpreadsheetEditHelper.prototype.__fractionRegex = null;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetEditHelper" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.PredefinedShapes" />*/

$.ig.PredefinedShapes.prototype.__instance = null;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.PredefinedShapes" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.ShapeGeometry" />*/

$.ig.ShapeGeometry.prototype._darkenFill = new $.ig.excel.ShapeFillSolid(new $.ig.excel.WorkbookColorInfo($.ig.Color.prototype.fromArgb(102, 0, 0, 0)));
$.ig.ShapeGeometry.prototype._darkenLessFill = new $.ig.excel.ShapeFillSolid(new $.ig.excel.WorkbookColorInfo($.ig.Color.prototype.fromArgb(51, 0, 0, 0)));
$.ig.ShapeGeometry.prototype._lightenFill = new $.ig.excel.ShapeFillSolid(new $.ig.excel.WorkbookColorInfo($.ig.Color.prototype.fromArgb(102, 255, 255, 255)));
$.ig.ShapeGeometry.prototype._lightenLessFill = new $.ig.excel.ShapeFillSolid(new $.ig.excel.WorkbookColorInfo($.ig.Color.prototype.fromArgb(51, 255, 255, 255)));
/*<EndStatics Name="Infragistics.Controls.Grids.Core.ShapeGeometry" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.ShapeGuideFormula" />*/

$.ig.ShapeGuideFormula.prototype.unitsPerDegree = 60000;
$.ig.ShapeGuideFormula.prototype.abs = function (x) { return Math.abs(x); };
$.ig.ShapeGuideFormula.prototype.sqrt = function (x) { return Math.sqrt(x); };
$.ig.ShapeGuideFormula.prototype.val = function (x) { return x; };
$.ig.ShapeGuideFormula.prototype.at2 = function (x, y) { return $.ig.ShapeGuideFormula.prototype.fromRads(Math.atan2(y, x)); };
$.ig.ShapeGuideFormula.prototype.cos = function (x, y) { return x * Math.cos($.ig.ShapeGuideFormula.prototype.toRads(y)); };
$.ig.ShapeGuideFormula.prototype.max = function (x, y) { return x > y ? x : y; };
$.ig.ShapeGuideFormula.prototype.min = function (x, y) { return x < y ? x : y; };
$.ig.ShapeGuideFormula.prototype.sin = function (x, y) { return x * Math.sin($.ig.ShapeGuideFormula.prototype.toRads(y)); };
$.ig.ShapeGuideFormula.prototype.tan = function (x, y) { return x * Math.tan($.ig.ShapeGuideFormula.prototype.toRads(y)); };
$.ig.ShapeGuideFormula.prototype.multiplyDivide = function (x, y, z) { return (x * y) / z; };
$.ig.ShapeGuideFormula.prototype.addSubtract = function (x, y, z) { return (x + y) - z; };
$.ig.ShapeGuideFormula.prototype.addDivide = function (x, y, z) { return (x + y) / z; };
$.ig.ShapeGuideFormula.prototype.ifElse = function (x, y, z) { return x > 0 ? y : z; };
$.ig.ShapeGuideFormula.prototype.cat2 = function (x, y, z) { return x * Math.cos(Math.atan2(z, y)); };
$.ig.ShapeGuideFormula.prototype.mod = function (x, y, z) { return Math.sqrt(x * x + y * y + z * z); };
$.ig.ShapeGuideFormula.prototype.pin = function (x, y, z) { return y < x ? x : (y > z ? z : y); };
$.ig.ShapeGuideFormula.prototype.sat2 = function (x, y, z) { return x * Math.sin(Math.atan2(z, y)); };
/*<EndStatics Name="Infragistics.Controls.Grids.Core.ShapeGuideFormula" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat" />*/

$.ig.RangeWorksheetCellFormatBase_EmptyFormat.prototype._instance = new $.ig.RangeWorksheetCellFormatBase_EmptyFormat();
/*<EndStatics Name="Infragistics.Controls.Grids.Core.RangeWorksheetCellFormatBase_EmptyFormat" />*/

/*<BeginStatics Name="Infragistics.Controls.Primitives.ElementLayerInfo" />*/

$.ig.ElementLayerInfo.prototype.idComparer = $.ig.StringComparer.prototype.invariantCultureIgnoreCase;
/*<EndStatics Name="Infragistics.Controls.Primitives.ElementLayerInfo" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers" />*/

$.ig.PredefinedSpreadsheetLayers.prototype.backgroundId = "Background";
$.ig.PredefinedSpreadsheetLayers.prototype.cellBackgroundsId = "CellBackgrounds";
$.ig.PredefinedSpreadsheetLayers.prototype.cellBordersId = "CellBorders";
$.ig.PredefinedSpreadsheetLayers.prototype.cellValuesId = "CellValues";
$.ig.PredefinedSpreadsheetLayers.prototype.gridlinesId = "Gridlines";
$.ig.PredefinedSpreadsheetLayers.prototype.invalidDataId = "InvalidData";
$.ig.PredefinedSpreadsheetLayers.prototype.interactionOverlayId = "InteractionOverlay";
$.ig.PredefinedSpreadsheetLayers.prototype.selectionId = "Selection";
$.ig.PredefinedSpreadsheetLayers.prototype.shapesId = "Shapes";
$.ig.PredefinedSpreadsheetLayers.prototype.__background = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.backgroundId, null, null);
$.ig.PredefinedSpreadsheetLayers.prototype.__cellValues = new $.ig.ElementLayerInfo(1, $.ig.PredefinedSpreadsheetLayers.prototype.cellValuesId, null, [ $.ig.PredefinedSpreadsheetLayers.prototype.backgroundId, $.ig.PredefinedSpreadsheetLayers.prototype.cellBackgroundsId, $.ig.PredefinedSpreadsheetLayers.prototype.gridlinesId ], null, null);
$.ig.PredefinedSpreadsheetLayers.prototype.__cellBorders = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.cellBordersId, null, [ $.ig.PredefinedSpreadsheetLayers.prototype.backgroundId, $.ig.PredefinedSpreadsheetLayers.prototype.cellBackgroundsId, $.ig.PredefinedSpreadsheetLayers.prototype.gridlinesId, $.ig.PredefinedSpreadsheetLayers.prototype.cellValuesId ]);
$.ig.PredefinedSpreadsheetLayers.prototype.__gridlines = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.gridlinesId, null, [ $.ig.PredefinedSpreadsheetLayers.prototype.backgroundId, $.ig.PredefinedSpreadsheetLayers.prototype.cellBackgroundsId ]);
$.ig.PredefinedSpreadsheetLayers.prototype.__cellBackgrounds = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.cellBackgroundsId, [ $.ig.PredefinedSpreadsheetLayers.prototype.cellValuesId, $.ig.PredefinedSpreadsheetLayers.prototype.gridlinesId, $.ig.PredefinedSpreadsheetLayers.prototype.selectionId ], [ $.ig.PredefinedSpreadsheetLayers.prototype.backgroundId ]);
$.ig.PredefinedSpreadsheetLayers.prototype.__selection = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.selectionId, null, [ $.ig.PredefinedSpreadsheetLayers.prototype.cellValuesId, $.ig.PredefinedSpreadsheetLayers.prototype.cellBordersId, $.ig.PredefinedSpreadsheetLayers.prototype.gridlinesId ]);
$.ig.PredefinedSpreadsheetLayers.prototype.__shapes = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.shapesId, null, [ $.ig.PredefinedSpreadsheetLayers.prototype.selectionId ]);
$.ig.PredefinedSpreadsheetLayers.prototype.__invalidData = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.invalidDataId, [ $.ig.PredefinedSpreadsheetLayers.prototype.interactionOverlayId ], [ $.ig.PredefinedSpreadsheetLayers.prototype.shapesId, $.ig.PredefinedSpreadsheetLayers.prototype.selectionId ]);
$.ig.PredefinedSpreadsheetLayers.prototype.__interactionOverlays = new $.ig.ElementLayerInfo(0, $.ig.PredefinedSpreadsheetLayers.prototype.interactionOverlayId, null, [ $.ig.PredefinedSpreadsheetLayers.prototype.shapesId, $.ig.PredefinedSpreadsheetLayers.prototype.selectionId ]);
/*<EndStatics Name="Infragistics.Controls.Grids.Core.PredefinedSpreadsheetLayers" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation" />*/

$.ig.SpreadsheetCellSelectionOperation.prototype.__hYPERLINK_TIMEOUT_DELAY = 1000;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetCellSelectionOperation" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation" />*/

$.ig.SpreadsheetHeaderSelectionOperation.prototype.__allowExtendRangeForMergedCells = false;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetHeaderSelectionOperation" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager" />*/

$.ig.SpreadsheetPaneManager.prototype.___internalFlagNames = $.ig.SpreadsheetPaneManager.prototype._createInternalFlagNamesMap();
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetPaneManager" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase" />*/

$.ig.WorkbookSerializationProviderBase.prototype._emptyFormats = new Array(0);
/*<EndStatics Name="Infragistics.Controls.Grids.Core.WorkbookSerializationProviderBase" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.BIFF8SerializationProvider" />*/

$.ig.BIFF8SerializationProvider.prototype.format = "BIFF8";
/*<EndStatics Name="Infragistics.Controls.Grids.Core.BIFF8SerializationProvider" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider" />*/

$.ig.IGExcelSerializationProvider.prototype.format = "IGExcel";
/*<EndStatics Name="Infragistics.Controls.Grids.Core.IGExcelSerializationProvider" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper" />*/

$.ig.PlainTextReader_ParseHelper.prototype._emptyLine = [ String.empty() ];
/*<EndStatics Name="Infragistics.Controls.Grids.Core.PlainTextReader_ParseHelper" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer" />*/

$.ig.WorksheetCellFormatDataEqualityComparer.prototype._instance = new $.ig.WorksheetCellFormatDataEqualityComparer();
/*<EndStatics Name="Infragistics.Controls.Grids.Core.WorksheetCellFormatDataEqualityComparer" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.DefaultColors" />*/

$.ig.DefaultSpreadsheetColors.prototype._defaultColors = null;
$.ig.DefaultSpreadsheetColors.prototype._defaultColors2 = null;
if ($.ig.DefaultSpreadsheetColors.prototype.staticInit && !$.ig.DefaultSpreadsheetColors.prototype.defaultSpreadsheetColorsStaticInitCalled) { $.ig.DefaultSpreadsheetColors.prototype.staticInit(); $.ig.DefaultSpreadsheetColors.prototype.defaultSpreadsheetColorsStaticInitCalled = true; }
/*<EndStatics Name="Infragistics.Controls.Grids.Core.DefaultColors" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager" />*/

$.ig.SpreadsheetTabManager.prototype._defaultInterTabSpacing = -1;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetTabManager" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter" />*/

$.ig.FormulaBarNameBoxSplitter.prototype.nameBox_MinWidth = 102;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.FormulaBarNameBoxSplitter" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.RendererVisualElement`1" />*/

$.ig.RendererVisualElement$1.prototype.defaultId = "RendererElement";
/*<EndStatics Name="Infragistics.Controls.Grids.Core.RendererVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement" />*/

$.ig.SpreadsheetTabItemElement.prototype._isSelectedTabChangedFlag = 1;
$.ig.SpreadsheetTabItemElement.prototype._isActiveTabChangedFlag = 2;
$.ig.SpreadsheetTabItemElement.prototype._isProtectedTabChangedFlag = 4;
$.ig.SpreadsheetTabItemElement.prototype._hasTabColorChangedFlag = 8;
$.ig.SpreadsheetTabItemElement.prototype._hasTextChangedFlag = 16;
$.ig.SpreadsheetTabItemElement.prototype._allTabChangedFlags = $.ig.SpreadsheetTabItemElement.prototype._isSelectedTabChangedFlag | $.ig.SpreadsheetTabItemElement.prototype._isActiveTabChangedFlag | $.ig.SpreadsheetTabItemElement.prototype._isProtectedTabChangedFlag | $.ig.SpreadsheetTabItemElement.prototype._hasTabColorChangedFlag | $.ig.SpreadsheetTabItemElement.prototype._hasTextChangedFlag;
$.ig.SpreadsheetTabItemElement.prototype.dirtyTextVersion = -1;
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetTabItemElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetElementIds" />*/

$.ig.SpreadsheetElementIds.prototype.spreadsheet = "Spreadsheet";
$.ig.SpreadsheetElementIds.prototype.spreadsheetRowHeaderContainer = "SpreadsheetRowHeaderContainer";
$.ig.SpreadsheetElementIds.prototype.spreadsheetColumnHeaderContainer = "SpreadsheetColumnHeaderContainer";
$.ig.SpreadsheetElementIds.prototype.spreadsheetPaneContainer = "SpreadsheetPaneContainer";
$.ig.SpreadsheetElementIds.prototype.tabAreaBackground = "TabAreaBackground";
$.ig.SpreadsheetElementIds.prototype.tabAreaBorder = "TabAreaBorder";
$.ig.SpreadsheetElementIds.prototype.tabDropIndicator = "TabDropIndicator";
$.ig.SpreadsheetElementIds.prototype.rowSplitterPreview = "RowSplitterPreview";
$.ig.SpreadsheetElementIds.prototype.colSplitterPreview = "ColSplitterPreview";
$.ig.SpreadsheetElementIds.prototype.paneSplitter = "PaneSplitter";
$.ig.SpreadsheetElementIds.prototype.inputMessage = "InputMessage";
$.ig.SpreadsheetElementIds.prototype.inputMessageTitle = "InputMessageTitle";
$.ig.SpreadsheetElementIds.prototype.inputMessageBody = "InputMessageBody";
$.ig.SpreadsheetElementIds.prototype.spreadsheetArea = "SpreadsheetArea";
$.ig.SpreadsheetElementIds.prototype.sheetTabItem = "SheetTabItem";
$.ig.SpreadsheetElementIds.prototype.selectAllButton = "SelectAllButton";
$.ig.SpreadsheetElementIds.prototype.tabAreaSplitter = "TabAreaSplitter";
$.ig.SpreadsheetElementIds.prototype.tabItemArea = "TabItemArea";
$.ig.SpreadsheetElementIds.prototype.tabItemPanel = "TabItemPanel";
$.ig.SpreadsheetElementIds.prototype.tabScrollFirst = "TabScrollFirst";
$.ig.SpreadsheetElementIds.prototype.tabScrollPrev = "TabScrollPrev";
$.ig.SpreadsheetElementIds.prototype.tabScrollNext = "TabScrollNext";
$.ig.SpreadsheetElementIds.prototype.tabScrollLast = "TabScrollLast";
$.ig.SpreadsheetElementIds.prototype.tabActivatePrev = "TabActivatePrev";
$.ig.SpreadsheetElementIds.prototype.tabActivateNext = "TabActivateNext";
$.ig.SpreadsheetElementIds.prototype.addWorksheetButton = "AddWorksheetButton";
$.ig.SpreadsheetElementIds.prototype.formulaBar = "FormulaBar";
$.ig.SpreadsheetElementIds.prototype.formulaBarButtonContainer = "FormulaBarButtonContainer";
$.ig.SpreadsheetElementIds.prototype.formulaBarCancelButton = "FormulaBarCancelButton";
$.ig.SpreadsheetElementIds.prototype.formulaBarEnterButton = "FormulaBarEnterButton";
$.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxContainer = "FormulaBarNameBoxContainer";
$.ig.SpreadsheetElementIds.prototype.formulaBarNameBoxSplitter = "FormulaBarNameBoxSplitter";
$.ig.SpreadsheetElementIds.prototype.formulaBarTextAreaContainer = "FormulaBarTextAreaContainer";
$.ig.SpreadsheetElementIds.prototype.formulaBarTextBoxSplitter = "FormulaBarTextBoxSplitter";
$.ig.SpreadsheetElementIds.prototype.spreadsheetRenderer = "SpreadsheetRenderer";
$.ig.SpreadsheetElementIds.prototype.cellValue = "SpreadsheetCellValue";
$.ig.SpreadsheetElementIds.prototype.cellValueLayer = "SpreadsheetCellValueLayer";
$.ig.SpreadsheetElementIds.prototype.cellContainer = "CellContainer";
/*<EndStatics Name="Infragistics.Controls.Grids.Core.SpreadsheetElementIds" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.RootVisualElement" />*/

$.ig.RootVisualElement.prototype.__visualTreeCount = 0;
/*<EndStatics Name="Infragistics.Controls.Core.RootVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.CommandMap" />*/

$.ig.CommandMap.prototype.allModifiers = $.ig.ModifierKeys.prototype.alt | $.ig.ModifierKeys.prototype.control | $.ig.ModifierKeys.prototype.shift | $.ig.ModifierKeys.prototype.windows | $.ig.ModifierKeys.prototype.apple;
$.ig.CommandMap.prototype.altModifier = $.ig.ModifierKeys.prototype.alt;
/*<EndStatics Name="Infragistics.Controls.Core.CommandMap" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.PlatformTimer" />*/

$.ig.PlatformTimer.prototype._defaultInterval = 100;
$.ig.PlatformTimer.prototype._notRunningId = 0;
/*<EndStatics Name="Infragistics.Controls.Core.PlatformTimer" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.ButtonVisualElement" />*/

$.ig.ButtonVisualElement.prototype.defaultButtonId = "Button";
/*<EndStatics Name="Infragistics.Controls.Core.ButtonVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.ComboBoxVisualElement" />*/

$.ig.ComboBoxVisualElement.prototype.defaultId = "ComboBox";
/*<EndStatics Name="Infragistics.Controls.Core.ComboBoxVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.TextBoxVisualElement" />*/

$.ig.TextBoxVisualElement.prototype.defaultId = "TextBox";
/*<EndStatics Name="Infragistics.Controls.Core.TextBoxVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.ToggleButtonVisualElement" />*/

$.ig.ToggleButtonVisualElement.prototype.defaultToggleButtonId = "ToggleButton";
/*<EndStatics Name="Infragistics.Controls.Core.ToggleButtonVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.ToolTipVisualElement" />*/

$.ig.ToolTipVisualElement.prototype.defaultId = "ToolTip";
/*<EndStatics Name="Infragistics.Controls.Core.ToolTipVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.RepeatButtonVisualElement" />*/

$.ig.RepeatButtonVisualElement.prototype.defaultInitialAutoRepeatInterval = 250;
$.ig.RepeatButtonVisualElement.prototype.defaultAutoRepeatInterval = 50;
$.ig.RepeatButtonVisualElement.prototype.defaultRepeatButtonId = "RepeatButton";
/*<EndStatics Name="Infragistics.Controls.Core.RepeatButtonVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.ScrollBarVisualElement" />*/

$.ig.ScrollBarVisualElement.prototype.defaultId = "ScrollBar";
$.ig.ScrollBarVisualElement.prototype.defaultNearButtonId = "ScrollBarNearButton";
$.ig.ScrollBarVisualElement.prototype.defaultFarButtonId = "ScrollBarFarButton";
$.ig.ScrollBarVisualElement.prototype.defaultNearTrackId = "ScrollBarNearTrack";
$.ig.ScrollBarVisualElement.prototype.defaultFarTrackId = "ScrollBarFarTrack";
$.ig.ScrollBarVisualElement.prototype.defaultThumbId = "ScrollBarThumb";
/*<EndStatics Name="Infragistics.Controls.Core.ScrollBarVisualElement" />*/

/*<BeginStatics Name="Infragistics.Controls.Core.VisualElement_ZComparer" />*/

$.ig.VisualElement_ZComparer.prototype._instance = new $.ig.VisualElement_ZComparer();
/*<EndStatics Name="Infragistics.Controls.Core.VisualElement_ZComparer" />*/


/*<BeginGlobal/>*/
if ($.ig.spreadsheet) { $.ig.spreadsheet._isNamespace = true; }

/*<EndGlobal/>*/
function $_0(x) {
	/// <returns type='$.ig.excel.IWorkbookFont' />
	return x;
}
function $_1(x) {
	/// <returns type='$.ig.excel.IWorksheetCellFormat' />
	return x;
}
function $_2(x) {
	/// <returns type='String' />
	return x;
}
/*<BeginFooter/>*/
}));// REMOVE_FROM_COMBINED_FILES
/*<EndFooter/>*/

