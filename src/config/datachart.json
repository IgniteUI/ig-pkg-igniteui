{
  "overview": null,
  "name": "ui.igDataChart",
  "category": null,
  "visual": true,
  "events": {
    "assigningCategoryMarkerStyle": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired to allow you to override the style of markers for the items in a category or financial series. Only fires if you set allowCustomCategoryMarkerStyle to true for a series.<br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.startIndex to get the start index for the current items.<br>   Use ui.endIndex to get the end index for the current items.<br>   Use ui.hasDateRange to tell if you should use the startDate and endDate to know the current items instead of startIndex/endIndex.<br>   Use ui.startDate if ui.hasDateRange is true.<br>   Use ui.endDate if ui.hasDateRange is true.<br>   Use ui.getItems to get all the items associated with the event (only if necessary).<br>   Use ui.fill to get or set the fill to use for the current item.<br>   Use ui.stroke to get or set the stroke to use for the current item.<br>   Use ui.opacity to get or set the opacity to use for the current item.<br>   Use ui.highlightingHandled to set if the default highlighting behavior should not run, given that you are handling it in this event.<br>   Use ui.maxAllSeriesHighlightingProgress to get the maximum highlighted progress across all series.<br>   Use ui.sumAllSeriesHighlightingProgress to get the sum of highlighting progtess across all series.<br>   Use ui.highlightingInfo.progress to tell what the highlighting progress is for the current item, if highlightingInfo is not null.<br>   Use ui.highlightingInfo.state to tell whether the current item is currently highlighting in or out, is static, if highlightingInfo is not null.",
		"jp": "カテゴリ シリーズまたは財務シリーズでの項目のマーカーのスタイル設定をオーバーライドするために発生するイベント。シリーズの allowCustomCategoryMarkerStyle を true に設定する場合のみに発生します。<br>   関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   ui.startIndex を使用して、現在項目の開始インデックスを取得します。<br>   ui.endIndex を使用して、現在項目の終了インデックスを取得します。<br>   現在の項目のために、startIndex/endIndex の代わりに startDate および endDate を使用するかどうかを決定するには、ui.hasDateRange を使用します。<br>   ui.hasDateRange が true の場合に ui.startDate を使用します。<br>   ui.hasDateRange が true の場合に ui.endDate を使用します。<br>   (必要に応じて) ui.getItems を使用して、イベントと関連するすべての項目を取得します。<br>   ui.fill を使用して、現在項目で使用する塗りつぶしを取得または設定します。<br>   ui.stroke を使用して、現在項目で使用するストロークを取得または設定します。<br>   ui.opacity を使用して、現在項目で使用する不透明度を取得または設定します。<br>   ui.highlightingHandled を使用して、このイベントで処理しているため、デフォルトの強調表示動作を実行しないことを設定します。<br>   ui.maxAllSeriesHighlightingProgress を使用して、すべてのシリーズで最大の強調表示の進行状況を取得します。<br>   ui.sumAllSeriesHighlightingProgress を使用して、すべてのシリーズで強調表示の進行状況の合計数を取得します。<br>   ui.highlightingInfo.progress を使用して、highlightingInfo が null 以外の場合、現在項目の強調表示の進行状況を取得します。<br>   ui.highlightingInfo.state を使用して、highlightingInfo が null 以外の場合、現在項目の強調表示が入っているか、出っているか、静的であるかどうかを取得します。"
	}
    },
    "assigningCategoryStyle": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired to allow you to override the style of items in a category or financial series. Only fires if you set allowCustomCategoryStyle to true for a series.<br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.startIndex to get the start index for the current items.<br>   Use ui.endIndex to get the end index for the current items.<br>   Use ui.hasDateRange to tell if you should use the startDate and endDate to know the current items instead of startIndex/endIndex.<br>   Use ui.startDate if ui.hasDateRange is true.<br>   Use ui.endDate if ui.hasDateRange is true.<br>   Use ui.getItems to get all the items associated with the event (only if necessary).<br>   Use ui.fill to get or set the fill to use for the current item.<br>   Use ui.stroke to get or set the stroke to use for the current item.<br>   Use ui.opacity to get or set the opacity to use for the current item.<br>   Use ui.highlightingHandled to set if the default highlighting behavior should not run, given that you are handling it in this event.<br>   Use ui.maxAllSeriesHighlightingProgress to get the maximum highlighted progress across all series.<br>   Use ui.sumAllSeriesHighlightingProgress to get the sum of highlighting progtess across all series.<br>   Use ui.highlightingInfo.progress to tell what the highlighting progress is for the current item, if highlightingInfo is not null.<br>   Use ui.highlightingInfo.state to tell whether the current item is currently highlighting in or out, is static, if highlightingInfo is not null.",
		"jp": "カテゴリ シリーズまたは財務シリーズでの項目のスタイル設定をオーバーライドするために発生するイベント。シリーズの allowCustomCategoryStyle を true に設定する場合のみに発生します。<br>   関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   ui.startIndex を使用して、現在項目の開始インデックスを取得します。<br>   ui.endIndex を使用して、現在項目の終了インデックスを取得します。<br>   現在の項目のために、startIndex/endIndex の代わりに startDate および endDate を使用するかどうかを決定するには、ui.hasDateRange を使用します。<br>   ui.hasDateRange が true の場合に ui.startDate を使用します。<br>   ui.hasDateRange が true の場合に ui.endDate を使用します。<br>   (必要に応じて) ui.getItems を使用して、イベントと関連するすべての項目を取得します。<br>   ui.fill を使用して、現在項目で使用する塗りつぶしを取得または設定します。<br>   ui.stroke を使用して、現在項目で使用するストロークを取得または設定します。<br>   ui.opacity を使用して、現在項目で使用する不透明度を取得または設定します。<br>   ui.highlightingHandled を使用して、このイベントで処理しているため、デフォルトの強調表示動作を実行しないことを設定します。<br>   ui.maxAllSeriesHighlightingProgress を使用して、すべてのシリーズで最大の強調表示の進行状況を取得します。<br>   ui.sumAllSeriesHighlightingProgress を使用して、すべてのシリーズで強調表示の進行状況の合計数を取得します。<br>   ui.highlightingInfo.progress を使用して、highlightingInfo が null 以外の場合、現在項目の強調表示の進行状況を取得します。<br>   ui.highlightingInfo.state を使用して、highlightingInfo が null 以外の場合、現在項目の強調表示が入っているか、出っているか、静的であるかどうかを取得します。"
	}
    },
    "axisRangeChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired when the range of and axis on the chart changes.<br>   Function takes arguments evt and ui.<br>   Use ui.axis to get reference to current chart axis object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.newMaximumValue to get new maximum value.<br>   Use ui.newMinimumValue to get new minimum value.<br>   Use ui.oldMaximumValue to get old maximum value.<br>   Use ui.oldMinimumValue to get old minimum value.",
		"jp": "チャートの範囲および軸が変更した場合に発生するイベント。<br>   関数は引数 evt および ui を取得します。<br>   現在のチャート軸 オブジェクトへの参照を取得するには ui.axis を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   新しい最大値を取得するには ui.newMaximumValue を使用します。<br>   新しい最小値を取得するには ui.newMinimumValue を使用します。<br>   以前の最大値を取得するには ui.oldMaximumValue を使用します。<br>   以前の最小値を取得するには ui.oldMinimumValue を使用します。"
	}
    },
    "browserNotSupported": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "event fired when the control is displayed on a non HTML5 compliant browser",
		"jp": "HTML5 非互換のブラウザでコントロールを表示したときに発生するイベント。"
	}
    },
    "gridAreaRectChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs just after the current Chart's grid area rectangle is changed.<br>   The grid area may change as the result of the Chart being resized, or<br>   of an axis being added or changing size, possibly in another Chart.<br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.newHeight to get new height value.<br>   Use ui.newLeft to get new left value.<br>   Use ui.newTop to get new top value.<br>   Use ui.newWidth to get new top value.<br>   Use ui.oldHeight to get old height value.<br>   Use ui.oldLeft to get old left value.<br>   Use ui.oldTop to get old top value.<br>   Use ui.oldWidth to get old top value.",
		"jp": "現在の Chart のグリッド領域の長方形が変わった直後に発生します。<br>   (おそらく別のチャート内で) サイズ変更されているチャート、または<br>   追加またはサイズ変更されている 軸の結果に従って、グリッド領域が変更することがあります。<br>   関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   新しい高さ値を取得するには ui.newHeight を使用します。<br>   新しい左値を取得するには ui.newLeft を使用します。<br>   新しい上値を取得するには ui.newTop を使用します。<br>   新しい幅値を取得するには ui.newWidth を使用します。<br>   以前の高さ値を取得するには ui.oldHeight を使用します。<br>   以前の左値を取得するには ui.oldLeft を使用します。<br>   以前の上値を取得するには ui.oldTop を使用します。<br>   以前の幅値を取得するには ui.oldWidth を使用します。"
	}
    },
    "progressiveLoadStatusChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired when the progressive loading state of the series has changed.<br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.currentStatus to get current status.",
		"jp": "シリーズの読み込んでいる状態が変更されたときに発生されるイベント。<br>   関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   現在の状態を取得するには ui.currentStatus を使用します。"
	}
    },
    "refreshCompleted": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Raised when the chart's processing for an update has completed.<br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.",
		"jp": "チャートの更新処理が完了すると発生します。<br>   関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。"
	}
    },
    "seriesCursorMouseMove": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs when the cursors are moved over a series in this chart.<br>   Function takes arguments evt and ui.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.<br>   Use ui.positionX to get mouse X position.<br>   Use ui.positionY to get mouse Y position.",
		"jp": "カーソルがこのチャートのシリーズの上に移動したときに発生します。<br>   関数は引数 evt および ui を取得します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。<br>   マウス X 位置を取得するには ui.positionX を使用します。<br>   マウス Y 位置を取得するには ui.positionY を使用します。"
	}
    },
    "seriesMouseEnter": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs when the left mouse pointer enters an element of this chart.<br>   Function takes arguments evt and ui.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.<br>   Use ui.positionX to get mouse X position.<br>   Use ui.positionY to get mouse Y position.",
		"jp": "マウス ポインターがこのチャートの要素に入ったときに発生します。<br>   関数は引数 evt および ui を取得します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。<br>   マウス X 位置を取得するには ui.positionX を使用します。<br>   マウス Y 位置を取得するには ui.positionY を使用します。"
	}
    },
    "seriesMouseLeave": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs when the left mouse pointer leaves an element of this chart.<br>   Function takes arguments evt and ui.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.<br>   Use ui.positionX to get mouse X position.<br>   Use ui.positionY to get mouse Y position.",
		"jp": "マウス ポインターがこのチャートの要素から出たときに発生します。<br>   関数は引数 evt および ui を取得します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。<br>   マウス X 位置を取得するには ui.positionX を使用します。<br>   マウス Y 位置を取得するには ui.positionY を使用します。"
	}
    },
    "seriesMouseLeftButtonDown": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs when the left mouse button is pressed while the mouse pointer is over an element of this chart.<br>   Function takes arguments evt and ui.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.<br>   Use ui.positionX to get mouse X position.<br>   Use ui.positionY to get mouse Y position.",
		"jp": "マウス ポインターがこのチャートの要素の上にある間に左のマウス ボタンが押されると発生します。<br>   関数は引数 evt および ui を取得します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。<br>   マウス X 位置を取得するには ui.positionX を使用します。<br>   マウス Y 位置を取得するには ui.positionY を使用します。"
	}
    },
    "seriesMouseLeftButtonUp": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs when the left mouse button is released while the mouse pointer is over an element of this chart.<br>   Function takes arguments evt and ui.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.<br>   Use ui.positionX to get mouse X position.<br>   Use ui.positionY to get mouse Y position.",
		"jp": "マウス ポインターがこのチャートの要素の上にある間に左のマウス ボタンが離されると発生します。<br>   関数は引数 evt および ui を取得します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。<br>   マウス X 位置を取得するには ui.positionX を使用します。<br>   マウス Y 位置を取得するには ui.positionY を使用します。"
	}
    },
    "seriesMouseMove": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs when the left mouse pointer moves while over an element of this chart.<br>   Function takes arguments evt and ui.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.<br>   Use ui.positionX to get mouse X position.<br>   Use ui.positionY to get mouse Y position.",
		"jp": "マウスのポインターがこのチャートの要素の上にある間にマウス ポインターが移動すると発生します。<br>   関数は引数 evt および ui を取得します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。<br>   マウス X 位置を取得するには ui.positionX を使用します。<br>   マウス Y 位置を取得するには ui.positionY を使用します。"
	}
    },
    "tooltipHidden": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "event fired after a tooltip is hidden <br>   Function takes arguments evt and ui.<br>   Use ui.element to get reference to tooltip DOM element.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.",
		"jp": "ツールチップが非表示になった後に発生するイベント。<br>   関数は引数 evt および ui を取得します。<br>   ツールチップの DOM 要素への参照を取得するには ui.element を使用します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。"
	}
    },
    "tooltipHiding": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "event fired when the mouse has left a series and the tooltip is about to hide<br>   Function takes arguments evt and ui.<br>   Use ui.element to get reference to tooltip DOM element.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.",
		"jp": "マウスがシリーズから離れ、ツールチップが非表示になるときに発生するイベント。<br>   関数は引数 evt および ui を取得します。<br>   ツールチップの DOM 要素への参照を取得するには ui.element を使用します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。"
	}
    },
    "tooltipShowing": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "event fired when the mouse has hovered on a series and the tooltip is about to show <br>   Function takes arguments evt and ui.<br>   Use ui.element to get reference to tooltip DOM element.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.",
		"jp": "マウスがシリーズの上にホバーして、ツールチップが表示するときに発生するイベント。<br>    関数は evt および ui 引数を取得します。<br>   ツールチップの DOM 要素への参照を取得するには ui.element を使用します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。"
	}
    },
    "tooltipShown": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "event fired after a tooltip is shown<br>   Function takes arguments evt and ui.<br>   Use ui.element to get reference to tooltip DOM element.<br>   Use ui.item to get reference to current series item object.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.actualItemBrush to get item brush.<br>   Use ui.actualSeriesBrush to get series brush.",
		"jp": "ツールチップが表示された後に発生するイベント。<br>   関数は引数 evt および ui を取得します。<br>   ツールチップの DOM 要素への参照を取得するには ui.element を使用します。<br>   現在のシリーズ項目オブジェクトへの参照を取得するには ui.item を使用します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   項目ブラシを取得するには ui.actualItemBrush を使用します。<br>   シリーズ ブラシを取得するには ui.actualSeriesBrush を使用します。"
	}
    },
    "typicalBasedOn": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Handle this event in order to specify which columns the Typical price calculation is based on. <br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.series to get reference to current series object.<br>   Use ui.count to get the number of positions that should be calculated from the start.<br>   Use ui.position to get the beginning position that should be calculated from.<br>   Use ui.supportingCalculations to get the supporting calculations to use in the calculation.<br>   Use ui.dataSource to get the data to use for the calculation.<br>   Use ui.basedOn to specify which columns changing will invalidate the series and cause it to be recalculated.",
		"jp": "このイベントは、カスタム一般価格の基となる列を指定するために処理します。<br>    関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   現在のシリーズ オブジェクトへの参照を取得するには ui.series を使用します。<br>   先頭から計算される位置の数を取得するには ui.count を使用します。<br>   計算される開始位置を取得するには ui.position を使用します。<br>   計算で使用する補助計算を取得するには ui.supportingCalculations を使用します。<br>   計算で使用するデータを取得するには ui.dataSource を使用します。<br>   どの列の変更でシリーズが無効になり再計算が発生するかを指定するために ui.basedOn を使用します。"
	}
    },
    "windowRectChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Occurs just after the current Chart's window rectangle is changed.<br>   Function takes arguments evt and ui.<br>   Use ui.chart to get reference to chart object.<br>   Use ui.newHeight to get new height value.<br>   Use ui.newLeft to get new left value.<br>   Use ui.newTop to get new top value.<br>   Use ui.newWidth to get new top value.<br>   Use ui.oldHeight to get old height value.<br>   Use ui.oldLeft to get old left value.<br>   Use ui.oldTop to get old top value.<br>   Use ui.oldWidth to get old top value.",
		"jp": "現在の Chart のウィンドウ長方形が変わった直後に発生します。<br>   関数は引数 evt および ui を取得します。<br>   チャート オブジェクトへの参照を取得するには ui.chart を使用します。<br>   新しい高さ値を取得するには ui.newHeight を使用します。<br>   新しい左値を取得するには ui.newLeft を使用します。<br>   新しい上値を取得するには ui.newTop を使用します。<br>   新しい幅値を取得するには ui.newWidth を使用します。<br>   以前の高さ値を取得するには ui.oldHeight を使用します。<br>   以前の左値を取得するには ui.oldLeft を使用します。<br>   以前の上値を取得するには ui.oldTop を使用します。<br>   以前の幅値を取得するには ui.oldWidth を使用します。"
	}
    }
  },
  "properties": {
    "animateSeriesWhenAxisRangeChanges": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Set to true in order to override the default behavior in which series do not animate if an axis range changes",
		"jp": "True に設定すると、軸範囲が変更してもシリーズがアニメーションを再生しないデフォルト動作をオーバーライドできます。"
	}
    },
    "autoMarginHeight": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Sets or gets the automatic height to add when automatically adding margins to the chart.",
		"jp": "余白をチャートに自動的に追加するときに自動的に追加する高さを取得または設定します。"
	}
    },
    "autoMarginWidth": {
      "type": "number",
      "defaultValue": 20.0,
      "description": {
		"en": "Sets or gets the automatic width to add when automatically adding margins to the chart.",
		"jp": "余白をチャートに自動的に追加するときに自動的に追加する幅を取得または設定します。"
	}
    },
    "axes": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "an array of axis objects",
		"jp": "軸オブジェクトの配列。"
	},
	  "designerDisplayProperty": "name",
      "schema": {
        "type": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Type of the axis",
		"jp": "軸のタイプ。"
	},
          "valueOptions": [
            {
              "name": "numericX",
              "type": "string",
              "description": {
		"en": "Specify the axis as numeric X axis. Useful for displaying scatter, category and financial price series.",
		"jp": "数値 X 軸として軸を指定します。散布図、カテゴリ、および財務価格シリーズの表示に役立ちます。"
	}
            },
            {
              "name": "numericY",
              "type": "string",
              "description": {
		"en": "Specify the axis as numeric Y axis.Useful for displaying scatter, category and financial price series.",
		"jp": "数値 Y 軸として軸を指定します。散布図、カテゴリ、および財務価格シリーズの表示に役立ちます。"
	}
            },
			      {
              "name": "categoryX",
              "type": "string",
              "description": {
		"en": "Specify the axis as category X axis. Useful for displaying scatter, category and financial price series.",
		"jp": "カテゴリ X 軸として軸を指定します。散布図、カテゴリ、および財務価格シリーズの表示に役立ちます。"
	}
            },
            {
              "name": "categoryDateTimeX",
              "type": "string",
              "description": {
		"en": "Specify the axis as category datetime X axis. Useful for displaying category and financial price series with date based data.",
		"jp": "カテゴリ datetime X 軸として軸を指定します。日付データのカテゴリ、および財務価格シリーズの表示に役立ちます。"
	}
            },
			      {
              "name": "categoryY",
              "type": "string",
              "description": {
		"en": "Specify the axis as category Y axis. Useful for displaying scatter, category and financial price series.",
		"jp": "カテゴリ Y 軸として軸を指定します。散布図、カテゴリ、および財務価格シリーズの表示に役立ちます。"
	}
            },
            {
              "name": "categoryAngle",
              "type": "string",
              "description": {
		"en": "Specify the axis as category angle axis. Useful for displaying polar and radial categories.",
		"jp": "カテゴリ角度軸として軸を指定します。ポーラおよびラジアル カテゴリの表示に便利です。"
	}
            },
			      {
              "name": "numericAngle",
              "type": "string",
              "description": {
		"en": "Specify the axis as numeric angle axis. Useful for displaying polar and radial series.",
		"jp": "数値角度軸として軸を指定します。ポーラおよびラジアル シリーズの表示に便利です。"
	}
            },
            {
              "name": "numericRadius",
              "type": "string",
              "description": {
		"en": "Specify the axis as numeric radius axis. Useful for displaying polar and radial series.",
		"jp": "数値半径軸として軸を指定します。ポーラおよびラジアル シリーズの表示に便利です。"
	}
            }
          ]
        },
        "name": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The unique identifier of the axis.",
		"jp": "軸の一意の識別子。"
	}
        },
        "dataSource": {
          "type": "custom",
          "defaultValue": null,
          "description": {
		"en": "Can be any valid data source accepted by $.ig.DataSource, or an instance of an $.ig.DataSource itself.",
		"jp": "$.ig.DataSource が受け入れる有効なデータ ソースまたは $.ig.DataSource 自体のインスタンスが可能です。"
	}
        },
        "dataSourceUrl": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Specifies a remote URL accepted by $.ig.DataSource in order to request data from it.",
		"jp": "$.ig.DataSource からデータを要求するには、$.ig.DataSource により承諾されたリモート URL を指定します。"
	}
        },
        "dataSourceType": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Explicitly set data source type (such as \"json\"). Please refer to the documentation of $.ig.DataSource and its type property.",
		"jp": "データ ソースのタイプ (\"json\" など) を明示的に設定します。$.ig.DataSource とそのタイプ プロパティのドキュメントを参照してください。"
	}
        },
        "responseDataKey": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Specifies the name of the property in which data records are held if the response is wrapped.",
		"jp": "応答がラップされる場合に、データ レコードが保持されるプロパティの名前を指定します。"
	}
        },
    		"remove": {
    		  "type": "bool",
          "defaultValue": true,
		      "description": {
		"en": "Set to true in order to have an existing axis removed from the chart, by name",
		"jp": "チャートから依存の軸を名前によって削除するには、true に設定します。"
	}
    		},
        "labelLocation": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Specifies the location to display the axis labels for this axis.",
		"jp": "この軸の軸ラベルを表示する場所を指定します。"
	},
          "valueOptions": [
            {
              "name": "outsideTop",
              "type": "string",
              "description": {
		"en": "The labels should have an outside top position.",
		"jp": "ラベルには外側上部の位置がある必要があります。"
	}
            },
            {
              "name": "outsideBottom",
              "type": "string",
              "description": {
		"en": "The labels should have an outside bottom position.",
		"jp": "ラベルには外側下部の位置がある必要があります。"
	}
            },
            {
              "name": "outsideLeft",
              "type": "string",
              "description": {
		"en": "The labels should have an outside left position.",
		"jp": "ラベルには外側左の位置がある必要があります。"
	}
            },
            {
              "name": "outsideRight",
              "type": "string",
              "description": {
		"en": "The labels should have an outside right position.",
		"jp": "ラベルには外側右の位置がある必要があります。"
	}
            },
            {
              "name": "insideTop",
              "type": "string",
              "description": {
		"en": "The labels should have an inside top position.",
		"jp": "ラベルに内側上部の配置がある必要があります。"
	}
            },
            {
              "name": "insideBottom",
              "type": "string",
              "description": {
		"en": "The labels should have an inside bottom position.",
		"jp": "ラベルには内側下部の位置がある必要があります。"
	}
            },
            {
              "name": "insideLeft",
              "type": "string",
              "description": {
		"en": "The labels should have an inside left position.",
		"jp": "ラベルには内側左の位置がある必要があります。"
	}
            },
            {
              "name": "insideRight",
              "type": "string",
              "description": {
		"en": "The labels should have an inside right position. ",
		"jp": "ラベルには内側右の位置がある必要があります。 "
	}
            }
          ]
        },
        "labelVisibility": {
          "type": "string",
          "defaultValue": "visible",
          "description": {
		"en": "Specifies whether the labels are visible.",
		"jp": "ラベルが可視かどうかを指定します。"
	},
          "valueOptions": [
            {
              "name": "visible",
              "type": "string",
              "description": {
		"en": "The labels should be visisble for this axis.",
		"jp": "この軸のラベルが可視である必要があります。"
	}
            },
            {
              "name": "collapsed",
              "type": "string",
              "description": {
		"en": "The labels should not be visible for this axis.",
		"jp": "ラベルを軸に表示しません。"
	}
            }
          ]
        },
        "labelExtent": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Specifies the extent of the area dedicated to the labels for this axis. If unspecified, this value is auto-calculated.",
		"jp": "この軸のラベル領域の範囲を指定します。指定されない場合、この値が自動的に計算されます。"
	}
        },
        "labelAngle": {
          "type": "string",
          "defaultValue": 0,
          "description": {
		"en": "Specifies the angle that labels on the axis should be rotated.",
		"jp": "軸のラベルが反転される角度を指定します。"
	}
        },
        "labelTextStyle": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Overrides the style of the text used for the axis labels.",
		"jp": "軸ラベルのテキスト スタイルをオーバーライドします。"
	}
        },
        "labelTextColor": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Overrides the color of the text used for the axis labels.",
		"jp": "軸ラベルのテキスト色をオーバーライドします。"
	}
        },
        "formatLabel": {
          "type": "function",
          "defaultValue": null,
		  "args": [
			{
			  "name": "value",
			  "type": "object",
			  "optional": false
			}
		  ],
          "description": {
		"en": "Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.",
		"jp": "オブジェクトを取得して、チャートの表示のために書式設定されるラベルを作成する関数を取得または設定します。"
	}
        },
        "stroke": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the Stroke property.",
		"jp": "Stroke プロパティを取得または設定します。"
	}
        },
        "strokeThickness": {
          "type": "number",
          "defaultValue": 1,
          "description": {
		"en": "Gets or sets the StrokeThickness property.",
		"jp": "StrokeThickness プロパティを取得または設定します。"
	}
        },
        "strip": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the Strip property.",
		"jp": "Strip プロパティを取得または設定します。"
	}
        },
        "majorStroke": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the MajorStroke property.",
		"jp": "MajorStroke プロパティを取得または設定します。"
	}
        },
        "majorStrokeThickness": {
          "type": "number",
          "defaultValue": 1,
          "description": {
		"en": "Gets or sets the MajorStrokeThickness property.",
		"jp": "MajorStrokeThickness プロパティを取得または設定します。"
	}
        },
        "minorStroke": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the MinorStroke property.",
		"jp": "MinorStroke プロパティを取得または設定します。"
	}
        },
        "minorStrokeThickness": {
          "type": "number",
          "defaultValue": 1,
          "description": {
		"en": "Gets or sets the MinorStrokeThickness property.",
		"jp": "MinorStrokeThickness プロパティを取得または設定します。"
	}
        },
        "isInverted": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets the IsInverted property.",
		"jp": "IsInverted プロパティを取得または設定します。"
	}
        },
        "crossingAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the CrossingAxis property.",
		"jp": "CrossingAxis プロパティを取得または設定します。"
	}
        },
        "crossingValue": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the CrossingValue property.",
		"jp": "CrossingValue プロパティを取得または設定します。"
	}
        },
        "coercionMethods": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the coercion methods to use when loading data from data sources. Should be specified before setting any member paths, if being used. Setting it later will not cause data to be reimported into the chart.",
		"jp": "データ ソースからデータを読み込むときに使用する強制メソッドを取得または設定します。使用する場合、メンバー パスを設定する前に指定します。後に設定する場合、チャートにデータを再インポートしません。"
	}
        },
        "label": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the axis label format string.",
		"jp": "軸ラベル書式文字列を取得または設定します。"
	}
        },
        "gap": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the amount of space between adjacent categories for the current axis object. The gap is silently clamped to the range [0, 1] when used.",
		"jp": "現在の軸オブジェクトの隣接カテゴリ間のスペース量を取得または設定します。使用される場合、スペースが範囲 [0, 1] に制限されます。"
	}
        },
        "overlap": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the amount of overlap between adjacent categories for the current axis object. The overlap is silently clamped to the range [-1, 1] when used.",
		"jp": "現在の軸オブジェクトの隣接カテゴリ間の重複の量を取得または設定します。オーバーラップは範囲 [-1, 1] にサイレントで固定されます。"
	}
        },
        "startAngleOffset": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Indicates the angle in degress that the chart's 0th angle should be offset.",
		"jp": "チャートの角度 0 度をオフセットする角度を示します。"
	}
        },
        "interval": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the frequency of displayed labels. The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.",
		"jp": "表示ラベルの間隔を取得または設定します。非表示になるラベルを決定する設定値は係数です。たとえば、間隔が 2 の場合は 1 つおきのラベルを表示します。"
	}
        },
        "minimumValue": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the axis MinimumValue.",
		"jp": "軸 MinimumValue を取得または設定します。"
	}
        },
        "maximumValue": {
          "type": "string",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the axis MaximumValue.",
		"jp": "軸 MaximumValue を取得または設定します。"
	}
        },
        "dateTimeMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the DateTime mapping property for the CategoryDateTimeXAxis.",
		"jp": "CategoryDateTimeXAxis の DateTime マッピング プロパティを取得または設定します。"
	}
        },
        "referenceValue": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the ReferenceValue property.",
		"jp": "ReferenceValue プロパティを取得または設定します。"
	}
        },
        "isLogarithmic": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets the LogarithmBase property.",
		"jp": "LogarithmBase プロパティを取得または設定します。"
	}
        },
        "logarithmBase": {
          "type": "number",
          "defaultValue": 10,
          "description": {
		"en": "Gets or sets the LogarithmBase property.",
		"jp": "LogarithmBase プロパティを取得または設定します。"
	}
        },
        "radiusExtentScale": {
          "type": "number",
          "defaultValue": 0.75,
          "description": {
		"en": "Defines the percentage of the maximum radius extent to use as the maximum radius. Should be a value between 0.0 and 1.0.",
		"jp": "最大半径として使用するための最大半径範囲のパーセンテージを定義します。0.0 と 1.0 の間の値とします。"
	}
        },
        "innerRadiusExtentScale": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be a value between 0.0 and 1.0.",
		"jp": "このプロパティは、チャートの中心を空のままにするための最大半径範囲のパーセンテージを定義します。0.0 と 1.0 の間の値とします。"
	}
        },
        "title": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The title to display for the component. ",
		"jp": "コンポーネントに表示するタイトル。 "
	}
        },
        "titleTextStyle": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The css font property to use for the title.",
		"jp": "タイトルに使用する css フォント プロパティ。"
	}
        },
        "titleMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The margin to display around the title of the axis.",
		"jp": "軸タイトルの周りに表示するマージン。"
	}
        },
        "titleHorizontalAlignment": {
          "type": "string",
          "defaultValue": "center",
          "description": {
		"en": "The horizontal alignment to use for the title.",
		"jp": "タイトルに使用する水平方向。"
	},
          "valueOptions": [
            {
              "name": "top",
              "type": "string",
              "description": {
		"en": "Top aligns the title",
		"jp": "タイトルを上揃えにします。"
	}
            },
            {
              "name": "center",
              "type": "string",
              "description": {
		"en": "Center aligns the title.",
		"jp": "タイトルを中央揃えにします。"
	}
            },
            {
              "name": "bottom",
              "type": "string",
              "description": {
		"en": "Bottom aligns the title.",
		"jp": "タイトルを下揃えにします。"
	}
            }
          ]
        },
        "titleVerticalAlignment": {
          "type": "string",
          "defaultValue": "center",
          "description": {
		"en": "The vertical alignment to use for the title. ",
		"jp": "タイトルに使用する垂直方向。 "
	},
          "valueOptions": [
            {
              "name": "top",
              "type": "string",
              "description": {
		"en": "Top aligns the title",
		"jp": "タイトルを上揃えにします。"
	}
            },
            {
              "name": "center",
              "type": "string",
              "description": {
		"en": "Center aligns the title.",
		"jp": "タイトルを中央揃えにします。"
	}
            },
            {
              "name": "bottom",
              "type": "string",
              "description": {
		"en": "Bottom aligns the title.",
		"jp": "タイトルを下揃えにします。"
	}
            }
          ]
        },
        "titlePosition": {
          "type": "string",
          "defaultValue": "auto",
          "description": {
		"en": "The position to use for the title.",
		"jp": "タイトルに使用する位置。"
	},
          "valueOptions": [
            {
              "name": "auto",
              "type": "string",
              "description": {
		"en": "The title is positioned automatically.",
		"jp": "タイトルが自動的に配置されます。"
	}
            },
            {
              "name": "left",
              "type": "string",
              "description": {
		"en": "The title is positioned on the left of the labels, if applicable.",
		"jp": "タイトルがラベルの左側に配置されます。"
	}
            },
            {
              "name": "right",
              "type": "string",
              "description": {
		"en": "The title is positioned on the right of the labels, if applicable.",
		"jp": "タイトルがラベルの右側に配置されます。"
	}
            },
            {
              "name": "top",
              "type": "string",
              "description": {
		"en": "The title is positioned on the top of the labels, if applicable.",
		"jp": "タイトルがラベルの上側に配置されます。"
	}
            },
            {
              "name": "bottom",
              "type": "string",
              "description": {
		"en": "The title is positioned on the bottom of the labels, if applicable.",
		"jp": "タイトルがラベルの下側に配置されます。"
	}
            }
          ]
        },
        "titleTopMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The top margin to use for the title.",
		"jp": "タイトルに使用する上マージン。"
	}
        },
        "titleLeftMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The left margin to use for the title.",
		"jp": "タイトルに使用する左マージン。"
	}
        },
        "titleRightMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The right margin to use for the title.",
		"jp": "タイトルに使用する右マージン。"
	}
        },
        "titleBottomMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The bottom margin to use for the title.",
		"jp": "タイトルに使用する下マージン。"
	}
        },
        "labelHorizontalAlignment": {
          "type": "string",
          "defaultValue": "right",
          "description": {
		"en": "The horizontal alignment to use for the labels. Only applicable to vertical axes.",
		"jp": "ラベルに使用する水平方向。垂直方向の軸のみに適用できます。"
	},
          "valueOptions": [
            {
              "name": "left",
              "type": "string",
              "description": {
		"en": "Left aligns the labels.",
		"jp": "ラベルを左揃えにします。"
	}
            },
            {
              "name": "center",
              "type": "string",
              "description": {
		"en": "Center aligns the labels.",
		"jp": "ラベルを中央揃えにします。"
	}
            },
            {
              "name": "right",
              "type": "string",
              "description": {
		"en": "Right aligns the labels.",
		"jp": "ラベルを右揃えにします。"
	}
            }
          ]
        },
        "labelVerticalAlignment": {
          "type": "string",
          "defaultValue": "top",
          "description": {
		"en": "The vertical alignment to use for the labels. Only applicable to horizontal axes.",
		"jp": "ラベルに使用する垂直方向。水平方向の軸のみに適用できます。"
	},
          "valueOptions": [
            {
              "name": "top",
              "type": "string",
              "description": {
		"en": "Top aligns the labels",
		"jp": "ラベルを上揃えにします。"
	}
            },
            {
              "name": "center",
              "type": "string",
              "description": {
		"en": "Center aligns the labels.",
		"jp": "ラベルを中央揃えにします。"
	}
            },
            {
              "name": "bottom",
              "type": "string",
              "description": {
		"en": "Bottom aligns the labels.",
		"jp": "ラベルを下揃えにします。"
	}
            }
          ]
        },
        "labelMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The margin to use for the labels.",
		"jp": "ラベルに使用するマージン。"
	}
        },
        "labelTopMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The top margin to use for the labels.",
		"jp": "ラベルに使用する上マージン。"
	}
        },
        "labelLeftMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The left margin to use for the labels.",
		"jp": "ラベルに使用する左マージン。"
	}
        },
        "labelRightMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The right margin to use for the labels.",
		"jp": "ラベルに使用する右マージン。"
	}
        },
        "labelBottomMargin": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The bottom margin to use for the labels.",
		"jp": "ラベルに使用する下マージン。"
	}
        },
        "showFirstLabel": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Sets whether or not to show the first label on the axis.",
		"jp": "軸の最初のラベルを表示するかどうかを設定します。"
	}
        },
        "titleAngle": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The angle to use for the axis title.",
		"jp": "軸タイトルに使用する角度。"
	}
        },
        "tickLength": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The length of the tickmarks to display for this axis.",
		"jp": "この軸に表示する目盛りの長さ。"
	}
        },
        "tickStrokeThickness": {
          "type": "number",
          "defaultValue": 0.5,
          "description": {
		"en": "The stroke thickness to use for the tickmarks.",
		"jp": "目盛りに使用するストロークの太さ。"
	}
        },
        "tickStroke": {
          "type": "string",
          "defaultValue": "black",
          "description": {
		"en": "The color to use for the tickmarks.",
		"jp": "目盛りに使用する色。"
	}
        },
        "useClusteringMode": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether the cateogory axis should use clustering display mode even if no series are present that would force clustering mode.",
		"jp": "クラスタリング モードを強制するシリーズがない場合も、カテゴリ軸がクラスタリング表示モードを使用するかどうかを取得または設定します。"
	}
        }
      }
    },
    "bottomMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Sets or gets the bottom margin to use around the chart content in the canvas.",
		"jp": "キャンバスでチャート コンテンツの周囲で使用する下余白を取得または設定します。"
	}
    },
    "brushes": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the Brushes property.<br>   The brushes property defines the palette from which automatically assigned series brushes are selected.<br>   The value provided should be an array of css color strings. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection.",
		"jp": "Brushes プロパティを取得または設定します。<br>   自動的に割り当てられるシリーズ ブラシを選択するパレットは、ブラシ プロパティで定義します。<br>   提供された値は、css 色文字列の配列である必要があります。最初の要素は、コレクションの補間モードを指定する RGB または HSV の文字列に設定するオプションがあります。"
	},
      "arrayMemberType": "string",
	   "schema": {
			"name": {
			  "type": "string",
			  "required": true,
			  "defaultValue": null,
			  "processValueOnly" : true,
			  "description": {
		"en": "Css color string",
		"jp": "CSS 色文字列"
	}
			}
		},
		"designerDisplayProperty": "name"
    },
    "circleMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for circle markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of circle.<br>   The provided object should have properties called render and optionally measure.",
		"jp": "チャートに円マーカーを使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   circle のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。"
	},
      "schema": {
        "measure": {
          "type": "function",
          "defaultValue": null,
          "description": {
		"en": "Custom measure function",
		"jp": "カスタム測定関数"
	},
          "args": [
            {
              "name": "measureInfo",
              "type": "object",
              "optional": false,
              "schema": {
                "context": {
                  "type": "object",
                  "defaultValue": null,
                  "description": {
		"en": "Either a DOM element or a CanvasContext2D depending on the particular template scenario",
		"jp": "特定のテンプレートのシナリオに基づいて DOM 要素または CanvasContext2D のいずれか"
	}
                },
                "width": {
                  "type": "number",
                  "defaultValue": null,
                  "description": {
		"en": "If value is present, specifies the available width, user may set to desired width for content",
		"jp": "値が存在する場合、使用可能な幅を指定します。ユーザーはコンテンツのために希望の幅を設定できます"
	}
                },
                "height": {
                  "type": "number",
                  "defaultValue": null,
                  "description": {
		"en": "Either a DOM element or a CanvasContext2D depending on the particular template scenario",
		"jp": "特定のテンプレートのシナリオに基づいて DOM 要素または CanvasContext2D のいずれか"
	}
                },
                "isConstant": {
                  "type": "bool",
                  "defaultValue": false,
                  "description": {
		"en": "User should set to true if desired with and height will always be the same for this template",
		"jp": "希望の幅と高さが常にこのテンプレートに対して同じである場合には、ユーザーは True に設定する必要があります"
	}
                },
                "data": {
                  "type": "object",
                  "defaultValue": null,
                  "description": {
		"en": "If present, represents the contextual data for this template",
		"jp": "存在する場合、このテンプレートのコンテキスト データを表します。"
	}
                }
              }
            }
          ]
        },
        "render": {
          "type": "function",
          "defaultValue": null,
          "description": {
		"en": "Custom render function",
		"jp": "カスタム描画関数"
	},
          "args": [
            {
              "name": "renderInfo",
              "type": "object",
              "optional": false,
              "schema": {
                "context": {
                  "type": "object",
                  "defaultValue": null,
                  "description": {
		"en": "Either a DOM element or a CanvasContext2D depending on the particular template scenario",
		"jp": "特定のテンプレートのシナリオに基づいて DOM 要素または CanvasContext2D のいずれか"
	}
                },
                "xPosition": {
                  "type": "number",
                  "defaultValue": null,
                  "description": {
		"en": "If present, specifies the x position at which to render the content",
		"jp": "存在する場合、コンテンツを描画する x 位置を指定します"
	}
                },
                "yPosition": {
                  "type": "number",
                  "defaultValue": null,
                  "description": {
		"en": "If present, specifies the y position at which to render the content",
		"jp": "存在する場合、コンテンツを描画する y 位置を指定します"
	}
                },
                "availableWidth": {
                  "type": "number",
                  "defaultValue": false,
                  "description": {
		"en": "If present, specifies the available width in which to render the content",
		"jp": "存在する場合、コンテンツを描画する使用可能な幅を指定します"
	}
                },
                "availableHeight": {
                  "type": "number",
                  "defaultValue": null,
                  "description": {
		"en": "If present, specifies the available height in which to render the content",
		"jp": "存在する場合、コンテンツを描画する使用可能な高さを指定します"
	}
                },
                "data": {
                  "type": "object",
                  "defaultValue": false,
                  "description": {
		"en": "If present, specifies the data that is in context for this content",
		"jp": "存在する場合、このコンテキストのためにコンテキストにあるデータを指定します"
	}
                },
                "isHitTestRender": {
                  "type": "bool",
                  "defaultValue": false,
                  "description": {
		"en": "If true, indicates that this is a special render pass for hit testing, in which case the brushes from the data should be used]",
		"jp": "true の場合、これがヒットテストのために特別な描画パスであることを指定します。この場合データからのブラシを使用する必要があります"
	}
                }
              }
            }
          ]
        }
      }
    },
    "crosshairPoint": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the cross hair point (in world coordinates)<br>   Either or both of the crosshair point's X and Y may be set to double.NaN, in which<br>   case the relevant crosshair line is hidden.",
		"jp": "十字線の位置 (ワールド座標値) を取得または設定します<br>   十字線の X または Y のいずれかまたは両方を double.NaN に設定することができます。<br>   その場合、該当する十字線は非表示になります。"
	},
      "schema": {
        "x": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The x coordinate.",
		"jp": "x 座標"
	}
        },
        "y": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "The y coordinate.",
		"jp": "y 座標"
	}
        }
      }
    },
    "crosshairVisibility": {
      "type": "string",
      "defaultValue": "collapsed",
      "description": {
		"en": " Gets or sets the current Chart's crosshair visibility override.",
		"jp": " 現在の Chart の十字線の表示/非表示のオーバーライドを取得または設定します。"
	},
      "valueOptions": [
        {
          "name": "visible",
          "type": "string",
          "description": {
		"en": "Crosshair should be visible.",
		"jp": "十字線を表示します。"
	}
        },
        {
          "name": "collapsed",
          "type": "string",
          "description": {
		"en": "Crosshair should not be visible.",
		"jp": "十字線を表示しません。"
	}
        }
      ]
    },
    "dataSource": {
      "type": "custom",
      "defaultValue": null,
      "description": {
		"en": "can be any valid data source accepted by $.ig.DataSource, or an instance of an $.ig.DataSource itself",
		"jp": "$.ig.DataSource が受け入れる有効なデータ ソースまたは $.ig.DataSource 自体のインスタンスが可能です。"
	}
    },
    "dataSourceType": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "Explicitly set data source type (such as \"json\"). Please refer to the documentation of $.ig.DataSource and its type property.",
		"jp": "データ ソースのタイプ (\"json\" など) を明示的に設定します。$.ig.DataSource とそのタイプ プロパティのドキュメントを参照してください。"
	}
    },
    "dataSourceUrl": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "Specifies a remote URL accepted by $.ig.DataSource in order to request data from it",
		"jp": "$.ig.DataSource からデータを要求するには、$.ig.DataSource により承諾されたリモート URL を指定します。"
	}
    },
    "defaultInteraction": {
      "type": "string",
      "defaultValue": "dragZoom",
      "description": {
		"en": "Gets or sets the DefaultInteraction property. The default interaction state defines the chart's response to mouse events.",
		"jp": "DefaultInteraction プロパティを取得または設定します。デフォルトの操作状態により、マウス イベントに対するチャートの応答が定義されます。"
	},
      "valueOptions": [
        {
          "name": "none",
          "type": "string",
          "description": {
		"en": "User gesture will not change the state of the chart.",
		"jp": "ユーザー動作はチャートの状態を変更しません。"
	}
        },
        {
          "name": "dragZoom",
          "type": "string",
          "description": {
		"en": "User gesture will start a drag rectangle to zoom the chart.",
		"jp": "ユーザー動作はチャートをズームするために矩形のドラッグを開始します。"
	}
        },
        {
          "name": "dragPan",
          "type": "string",
          "description": {
		"en": "User gesture will start a pan action to move the chart's window.",
		"jp": "チャートのウインドウを移動するためにユーザー操作でパン操作を開始します。"
	}
        }
      ]
    },
    "diamondMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for diamond markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of diamond.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上のひし形マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   diamond のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "dragModifier": {
      "type": "string",
      "defaultValue": "none",
      "description": {
		"en": "Gets or sets the current Chart's DragModifier property.",
		"jp": "現在の Chart の DragModifier プロパティを取得または設定します。"
	},
      "valueOptions": [
        {
          "name": "none",
          "type": "string",
          "description": {
		"en": "No modifier key is set.",
		"jp": "修飾キーが設定されません。"
	}
        },
        {
          "name": "alt",
          "type": "string",
          "description": {
		"en": "The modifier is set to alt key.",
		"jp": "修飾キーは alt キーに設定されます。"
	}
        },
        {
          "name": "control",
          "type": "string",
          "description": {
		"en": "The modifier is set to control key.",
		"jp": "修飾キーは control キーに設定されます。"
	}
        },
        {
          "name": "shift",
          "type": "string",
          "description": {
		"en": "The modifier is set to shift key.",
		"jp": "修飾キーは shift キーに設定されます。"
	}
        }
      ]
    },
    "gridMode": {
      "type": "string",
      "defaultValue": "behindSeries",
      "description": {
		"en": "Gets or sets the GridMode property.",
		"jp": "GridMode プロパティを取得または設定します。"
	},
      "valueOptions": [
        {
          "name": "none",
          "type": "string",
          "description": {
		"en": "No chart grid.",
		"jp": "チャート グリッドが見つかりません。"
	}
        },
        {
          "name": "beforeSeries",
          "type": "string",
          "description": {
		"en": "Chart grid should be rendered before or in front of the data series.",
		"jp": "チャート グリッドはデータ シリーズの前に描画する必要があります。"
	}
        },
        {
          "name": "behindSeries",
          "type": "string",
          "description": {
		"en": "Chart grid should be rendered behind or in back of the data series.",
		"jp": "チャート グリッドはデータ シリーズの後ろに描画する必要があります。"
	}
        }
      ]
    },
    "height": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "The height of the chart. It can be set as a number in pixels, string (px) or percentage (%).",
		"jp": "チャートの高さ。ピクセル、文字列 (px)、またはパーセンテージ (%) で数字として設定できます。"
	}
    },
    "hexagonMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for hexagon markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of hexagon.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上の六角形マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   hexagon のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "hexagramMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for hexagram markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of hexagram.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上のヘキサグラム マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   hexagram のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "highlightingTransitionDuration": {
      "type": "number",
      "defaultValue": 300.0,
      "description": {
		"en": "the length, in milliseconds of the highlighting transition.",
		"jp": "強調表示トランジションの期間 (ミリ秒)。"
	}
    },
    "horizontalZoomable": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Gets or sets the current Chart's horizontal zoomability.",
		"jp": "現在の Chart の水平ズーム可否を取得または設定します。"
	}
    },
    "isSquare": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Gets or sets whether to use a square aspect ratio for the chart. This is locked to true for polar and radial charts.",
		"jp": "チャートで四角の縦横比を使用するかどうかを取得または設定します。極座標およびラジアル チャートで true にロックされます。"
	}
    },
    "isSurfaceInteractionDisabled": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Set to true in order to disable any interactions with the plot surface.",
		"jp": "True に設定すると、プロット画面との操作を無効にします。"
	}
    },
    "leftMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Sets or gets the left margin to use around the chart content in the canvas.",
		"jp": "キャンバスでチャート コンテンツの周囲で使用する左余白を取得または設定します。"
	}
    },
    "legend": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Can be any valid options accepted by $.ig.ChartLegend, or an instance of an $.ig.ChartLegend itself.",
		"jp": "$.ig.ChartLegend が受け入れる有効なオプションまたは $.ig.ChartLegend 自体のインスタンスが可能です。"
	},
      "schema": {
        "element": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The name of the element to turn into a legend.",
		"jp": "凡例に変更する要素の名前。"
	}
        },
        "type": {
          "type": "string",
          "defaultValue": "legend",
          "description": {
		"en": "The name of the element to turn into a legend.",
		"jp": "凡例に変更する要素の名前。"
	},
          "valueOptions": [
            {
              "name": "item",
              "type": "string",
              "description": {
		"en": "Specify the legend as item legend. It displays a legend item for each pie in the igPieChart control.",
		"jp": "凡例を項目の凡例として指定します。igPieChart コントロール内の各パイに対して凡例の項目を表示します。"
	}
            },
            {
              "name": "legend",
              "type": "string",
              "description": {
		"en": "Specify the legend as legend. It is supported by all types of series in the igDataChart control.",
		"jp": "凡例を凡例として指定します。これは、igDataChart コントロールのすべてのタイプのシリーズによってサポートされます。"
	}
            }
          ]
        },
        "width": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The width of the legend.",
		"jp": "凡例の幅。"
	}
        },
        "height": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The height of the legend.",
		"jp": "凡例の高さ。"
	}
        }
      }
    },
    "markerBrushes": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the MarkerBrushes property.<br>   The marker brushes property defines the palette from which automatically assigned marker brushes are selected.<br>   The value provided should be an array of css color strings. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection.",
		"jp": "MarkerBrushes プロパティを取得または設定します。<br>   マーカー ブラシ プロパティは自動的に割り当てられるマーカー ブラシを選択するパレットを定義します。<br>   提供された値は、css 色文字列の配列である必要があります。最初の要素は、コレクションの補間モードを指定する RGB または HSV の文字列に設定するオプションがあります。"
	},
      "arrayMemberType": "string",
	   "schema": {
			"name": {
			  "type": "string",
			  "required": true,
			  "defaultValue": null,
			  "processValueOnly" : true,
			  "description": {
		"en": "Css color string",
		"jp": "CSS 色文字列"
	}
			}
		},
		"designerDisplayProperty": "name"
    },
    "markerOutlines": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the MarkerOutlines property.<br>   The marker outlines property defines the palette from which automatically assigned marker outlines are selected.<br>   The value provided should be an array of css color strings. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection.",
		"jp": "MarkerOutlines プロパティを取得または設定します。<br>   マーカー アウトライン プロパティは自動的に割り当てられるマーカー アウトラインを選択するパレットを定義します。<br>   提供された値は、css 色文字列の配列である必要があります。最初の要素は、コレクションの補間モードを指定する RGB または HSV の文字列に設定するオプションがあります。"
	},
      "arrayMemberType": "string",
	   "schema": {
			"name": {
			  "type": "string",
			  "required": true,
			  "defaultValue": null,
			  "processValueOnly" : true,
			  "description": {
		"en": "Css color string",
		"jp": "CSS 色文字列"
	}
			}
		},
		"designerDisplayProperty": "name"
    },
    "outlines": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the Outlines property.<br>   The outlines property defines the palette from which automatically assigned series outlines are selected.<br>   The value provided should be an array of css color strings. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection.",
		"jp": "Outlines プロパティを取得または設定します。<br>   自動的に割り当てられる categorySeries の輪郭線の選択元のパレットは、輪郭線プロパティで定義します。<br>   提供された値は、css 色文字列の配列である必要があります。最初の要素は、コレクションの補間モードを指定する RGB または HSV の文字列に設定するオプションがあります。"
	},
      "arrayMemberType": "string",
	   "schema": {
			"name": {
			  "type": "string",
			  "required": true,
			  "defaultValue": null,
			  "processValueOnly" : true,
			  "description": {
		"en": "Css color string",
		"jp": "CSS 色文字列"
	}
			}
		},
		"designerDisplayProperty": "name"
    },
    "overviewPlusDetailPaneVisibility": {
      "type": "string",
      "defaultValue": "collapsed",
      "description": {
		"en": "The visibility of the OverviewPlusDetailPane.",
		"jp": "OverviewPlusDetailPane の表示/非表示。"
	},
      "valueOptions": [
        {
          "name": "visible",
          "type": "string",
          "description": {
		"en": "The overview pane should be visible.",
		"jp": "概要ペインを表示します。"
	}
        },
        {
          "name": "collapsed",
          "type": "string",
          "description": {
		"en": "The overview pane should not be visible.",
		"jp": "概要ペインを表示しません。"
	}
        }
      ]
    },
    "panModifier": {
      "type": "string",
      "defaultValue": "shift",
      "description": {
		"en": "Gets or sets the current Chart's PanModifier property.",
		"jp": "現在の Chart の PanModifier プロパティを取得または設定します。"
	},
      "valueOptions": [
        {
          "name": "none",
          "type": "string",
          "description": {
		"en": "No modifier key is set.",
		"jp": "修飾キーが設定されません。"
	}
        },
        {
          "name": "alt",
          "type": "string",
          "description": {
		"en": "The modifier is set to alt key.",
		"jp": "修飾キーは alt キーに設定されます。"
	}
        },
        {
          "name": "control",
          "type": "string",
          "description": {
		"en": "The modifier is set to control key.",
		"jp": "修飾キーは control キーに設定されます。"
	}
        },
        {
          "name": "shift",
          "type": "string",
          "description": {
		"en": "The modifier is set to shift key.",
		"jp": "修飾キーは shift キーに設定されます。"
	}
        }
      ]
    },
    "pentagonMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for pentagon markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of pentagon.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上の五角形マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   pentagon のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "pentagramMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for pentragram markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of pentagram.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上のペンタグラム マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   pentagram のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "plotAreaBackground": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the brush used as the background for the current Chart object's plot area.",
		"jp": "現在の Chart オブジェクトのプロット領域の背景として使用するブラシを取得または設定します。"
	}
    },
    "previewRect": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the preview rectangle.<br>   The preview rectangle may be set to Rect.Empty, in which case the visible preview<br>   strokePath is hidden.<br>   The provided object should have numeric properties called left, top, width and height.",
		"jp": "プレビュー長方形を設定または取得します。<br>   プレビュー矩形は Rect.Empty に設定することができます。その場合、表示されているプレビューの<br>   strokePath は非表示になります。<br>   提供されたオブジェクトは、left、top、width および height と呼ばれる数値プロパティを持っている必要があります。"
	},
      "schema": {
        "left": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Gets sets left position of the rectangle",
		"jp": "矩形の左位置を取得または設定します。"
	}
        },
        "top": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Gets sets top position of the rectangle",
		"jp": "矩形の上位置を取得または設定します。"
	}
        },
        "width": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets sets width position of the rectangle",
		"jp": "矩形の幅位置を取得または設定します。"
	}
        },
        "height": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets sets height position of the rectangle",
		"jp": "矩形の高さ位置を取得または設定します。"
	}
        }
      }
    },
    "pyramidMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for pyramid markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of pyramid.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上のピラミッド マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   pyramid のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "responseDataKey": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "see $.ig.DataSource. Specifies the name of the property in which data records are held if the response is wrapped.",
		"jp": "$.ig.DataSource を参照してください。応答がラップされる場合に、データ レコードが保持されるプロパティの名前を指定します。"
	}
    },
    "rightMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Sets or gets the right margin to use around the chart content in the canvas.",
		"jp": "キャンバスでチャート コンテンツの周囲で使用する右余白を取得または設定します。"
	}
    },
    "series": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "an array of series objects",
		"jp": "シリーズ オブジェクトの配列。"
	},
      "designerDisplayProperty": "name",
      "schema": {
        "type": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Type of the series.",
		"jp": "シリーズのタイプ。"
	},
          "valueOptions": [
            {
              "name": "area",
              "type": "string",
              "description": {
		"en": "Specify the series as Area series.",
		"jp": "エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "bar",
              "type": "string",
              "description": {
		"en": "Specify the series as Bar series.",
		"jp": "棒シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "column",
              "type": "string",
              "description": {
		"en": "Specify the series as Column series.",
		"jp": "柱状シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "line",
              "type": "string",
              "description": {
		"en": "Specify the series as Line series.",
		"jp": "折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "rangeArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Range Area series.",
		"jp": "範囲エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "rangeColumn",
              "type": "string",
              "description": {
		"en": "Specify the series as Range Column series.",
		"jp": "範囲柱状シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "splineArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Spline Area series.",
		"jp": "スプライン エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "spline",
              "type": "string",
              "description": {
		"en": "Specify the series as Spline series.",
		"jp": "スプライン シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stepArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Step Area series",
		"jp": "ステップ エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stepLine",
              "type": "string",
              "description": {
		"en": "Specify the series as Step Line series.",
		"jp": "ステップ折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "waterfall",
              "type": "string",
              "description": {
		"en": "Specify the series as Waterfall series.",
		"jp": "ウォーターフォール シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "financial",
              "type": "string",
              "description": {
		"en": "Specify the series as Financial series.",
		"jp": "財務シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "typicalPriceIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Typical Price Indicator series.",
		"jp": "一般的な価格インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "point",
              "type": "string",
              "description": {
		"en": "Specify the series as Point series.",
		"jp": "ポイント シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "polarSplineArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Polar Spline Area series.",
		"jp": "極座標スプライン エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "polarSpline",
              "type": "string",
              "description": {
		"en": "Specify the series as Polar Spline series.",
		"jp": "極座標スプライン シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "polarArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Polar Area series.",
		"jp": "極座標エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "polarLine",
              "type": "string",
              "description": {
		"en": "Specify the series as Polar Line series.",
		"jp": "極座標折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "polarScatter",
              "type": "string",
              "description": {
		"en": "Specify the series as Polar Scatter series.",
		"jp": "極座標散布図シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "radialColumn",
              "type": "string",
              "description": {
		"en": "Specify the series as Radial Column series.",
		"jp": "ラジアル柱状シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "radialLine",
              "type": "string",
              "description": {
		"en": "Specify the series as Radial Line series.",
		"jp": "ラジアル折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "radialPie",
              "type": "string",
              "description": {
		"en": "Specify the series as Radial Pie series.",
		"jp": "ラジアル パイ シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "radialArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Radial Area series.",
		"jp": "ラジアル エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "scatter",
              "type": "string",
              "description": {
		"en": "Specify the series as Scatter series.",
		"jp": "散布図シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "scatterLine",
              "type": "string",
              "description": {
		"en": "Specify the series as Scatter Line series.",
		"jp": "散布図 - 折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "scatterSpline",
              "type": "string",
              "description": {
		"en": "Specify the series as Scatter Spline series.",
		"jp": "散布図スプライン シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "bubble",
              "type": "string",
              "description": {
		"en": "Specify the series as Bubble series.",
		"jp": "バブル シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "absoluteVolumeOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Absolute Volume Oscillator Indicator series.",
		"jp": "絶対容積オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "averageTrueRangeIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Average True Range Indicator series.",
		"jp": "平均 True 範囲インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "accumulationDistributionIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Accumulation Distribution Indicator series",
		"jp": "累積配布インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "averageDirectionalIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Average Directional Index Indicator series.",
		"jp": "平均指向指数インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "bollingerBandWidthIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Bollinger Band Width Indicator series.",
		"jp": "ボリンジャー バンド幅インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "chaikinOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Chaikin Oscillator Indicator series.",
		"jp": "チャイキン オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "chaikinVolatilityIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Chaikin Volitility Indicator series.",
		"jp": "チャイキン ボラティリティ インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "commodityChannelIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Commodity Channel Index Indicator series.",
		"jp": "コモディティ チャネル インデックス (CCI) インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "detrendedPriceOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Detrended Price Oscillator Indicator series.",
		"jp": "トレンド除去価格オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "easeOfMovementIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Ease Of Movement Indicator series.",
		"jp": "イーズ オブ ムーブメント インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "fastStochasticOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Fast Stochastic Oscillator Indicator series.",
		"jp": "ファスト ストキャスティクス オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "forceIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Force Index Indicator series.",
		"jp": "強制指数インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "fullStochasticOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Full Stochastic Oscillator Indicator series.",
		"jp": "フル ストキャスティクス オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "marketFacilitationIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Market Facilitation Index Indicator series.",
		"jp": "マーケット ファシリテーション インデックス インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "massIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Mass Index Indicator series.",
		"jp": "マス インデックス インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "medianPriceIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Median Price Indicator series.",
		"jp": "中間価格インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "moneyFlowIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Money Flow Index Indicator series.",
		"jp": "Money Flow Index (MFI) インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "movingAverageConvergenceDivergenceIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Moving Average Convergence Divergence Indicator series.",
		"jp": "移動平均収束拡散手法インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "negativeVolumeIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Negative Volume Index Indicator series.",
		"jp": "負出来高指数 (NVI) インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "onBalanceVolumeIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as On Balance Volume Indicator series.",
		"jp": "バランスボリューム インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "percentagePriceOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Percentage Price Oscillator Indicator series.",
		"jp": "パーセンテージ価格オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "percentageVolumeOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Percentage Volume Oscillator Indicator series.",
		"jp": "パーセンテージ ボリューム オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "positiveVolumeIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Positive Volume Index Indicator series.",
		"jp": "Positive Volume Index (PVI) インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "priceVolumeTrendIndictor",
              "type": "string",
              "description": {
		"en": "Specify the series as Price Volume Trend Indictor series.",
		"jp": "価格出来高トレンド インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "rateOfChangeAndMomentumIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Rate Of Change And Momentum Indicator series.",
		"jp": "変化率とモメンタム インジケーター シリーズを表します。"
	}
            },
            {
              "name": "relativeStrengthIndexIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Relative Strength Index Indicator series.",
		"jp": "相対力指数インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "slowStochasticOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Slow Stochastic Oscillator Indicator series.",
		"jp": "スロー ストキャスティクス オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "standardDeviationIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Standard Deviation Indicator series.",
		"jp": "標準偏差インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stochRSIIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Stoch RSI Indicator series.",
		"jp": "ストキャスティクス RSI インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "trixIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Trix Indicator series.",
		"jp": "TRIX インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "ultimateOscillatorIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Ultimate Oscillator Indicator series.",
		"jp": "アルティメット オシレーター インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "weightedCloseIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Weighted Close Indicator series.",
		"jp": "重み付きクローズ インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "williamsPercentRIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Williams Percent R Indicator series.",
		"jp": "ウィリアム パーセント レンジ インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "bollingerBandsOverlay",
              "type": "string",
              "description": {
		"en": "Specify the series as Bollinger Bands Overlay series.",
		"jp": "ボリンジャー バンド オーバーレイ シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "priceChannelOverlay",
              "type": "string",
              "description": {
		"en": "Specify the series as Price Channel Overlay series.",
		"jp": "プライス チャネル オーバーレイ シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "customIndicator",
              "type": "string",
              "description": {
		"en": "Specify the series as Custom Indicator series.",
		"jp": "カスタム インジケーター シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stackedBar",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked Bar series.",
		"jp": "積層棒シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stacked100Bar",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked 100 Bar series.",
		"jp": "積層 100 棒シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stackedArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked Area series.",
		"jp": "積層エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stacked100Area",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked 100 Area series.",
		"jp": "積層 100 エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stackedColumn",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked Column series.",
		"jp": "積層柱状シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stacked100Column",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked 100 Column series.",
		"jp": "積層 100 柱状シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stackedLine",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked Line series.",
		"jp": "積層折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stacked100Line",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked 100 Line series.",
		"jp": "積層 100 折れ線シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stackedSpline",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked Spline series.",
		"jp": "積層スプライン シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stacked100Spline",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked 100 Spline series.",
		"jp": "積層 100 スプライン シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stackedSplineArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked Spline Area series.",
		"jp": "積層スプライン エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "stacked100SplineArea",
              "type": "string",
              "description": {
		"en": "Specify the series as Stacked 100 Spline Area series.",
		"jp": "積層 100 スプライン エリア シリーズとしてシリーズを指定します。"
	}
            },
            {
              "name": "crosshairLayer",
              "type": "string",
              "description": {
		"en": "Specify the series as a crosshair layer.",
		"jp": "十字線レイヤーとしてシリーズを指定します。"
	}
            },
            {
              "name": "categoryHighlightLayer",
              "type": "string",
              "description": {
		"en": "Specify the series as a category highlight layer.",
		"jp": "カテゴリ強調表示レイヤーとしてシリーズを指定します。"
	}
            },
            {
              "name": "categoryItemHighlightLayer",
              "type": "string",
              "description": {
		"en": "Specify the series as a category item highlight layer.",
		"jp": "カテゴリ項目強調表示レイヤーとしてシリーズを指定します。"
	}
            },
            {
              "name": "itemToolTipLayer",
              "type": "string",
              "description": {
		"en": "Specify the series as an item tooltip layer.",
		"jp": "項目ツールチップ レイヤーとしてシリーズを指定します。"
	}
            },
            {
              "name": "categoryToolTipLayer",
              "type": "string",
              "description": {
		"en": "Specify the series as a category tooltip layer.",
		"jp": "カテゴリ ツールチップ レイヤーとしてシリーズを指定します。"
	}
            }
          ]
        },
        "name": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The unique identifier of the series.",
		"jp": "シリーズの一意の識別子。"
	}
        },
        "dataSource": {
          "type": "custom",
          "defaultValue": null,
          "description": {
		"en": "Can be any valid data source accepted by $.ig.DataSource, or an instance of an $.ig.DataSource itself ",
		"jp": "$.ig.DataSource が受け入れる有効なデータ ソースまたは $.ig.DataSource 自体のインスタンスが可能です。 "
	}
        },
        "dataSourceUrl": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Specifies a remote URL accepted by $.ig.DataSource in order to request data from it",
		"jp": "$.ig.DataSource からデータを要求するには、$.ig.DataSource により承諾されたリモート URL を指定します。"
	}
        },
        "dataSourceType": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Explicitly set data source type (such as \"json\"). Please refer to the documentation of $.ig.DataSource and its type property.",
		"jp": "データ ソースのタイプ (\"json\" など) を明示的に設定します。$.ig.DataSource とそのタイプ プロパティのドキュメントを参照してください。"
	}
        },
        "responseDataKey": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Specifies the name of the property in which data records are held if the response is wrapped.",
		"jp": "応答がラップされる場合に、データ レコードが保持されるプロパティの名前を指定します。"
	}
        },
        "remove": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Set to true in order to have an existing series removed from the chart, by name",
		"jp": "名前で、チャートから既存のシリーズを削除するために True に設定します。"
	}
        },
        "showTooltip": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Whether the chart should render a tooltip.",
		"jp": "チャートがツールチップを描画すべきかどうか。"
	}
        },
        "tooltipTemplate": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "The name of template or the template itself that chart tooltip will use to render.",
		"jp": "チャート ツールチップが描画するために使用するテンプレートの名前またはテンプレート。"
	}
        },
        "legend": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Can be any valid options accepted by $.ig.ChartLegend, or an instance of an $.ig.ChartLegend itself.",
		"jp": "$.ig.ChartLegend が受け入れる有効なオプションまたは $.ig.ChartLegend 自体のインスタンスが可能です。"
	},
          "schema": {
            "element": {
              "type": "string",
              "defaultValue": null,
              "description": {
		"en": "The name of the element to turn into a legend.",
		"jp": "凡例に変更する要素の名前。"
	}
            },
            "type": {
              "type": "string",
              "defaultValue": "legend",
              "description": {
		"en": "Type of the legend.",
		"jp": "凡例のタイプ。"
	},
              "valueOptions": [
                {
                  "name": "item",
                  "type": "string",
                  "description": {
		"en": "Specify the legend as item legend. It displays a legend item for each pie in the igPieChart control.",
		"jp": "凡例を項目の凡例として指定します。igPieChart コントロール内の各パイに対して凡例の項目を表示します。"
	}
                },
                {
                  "name": "legend",
                  "type": "string",
                  "description": {
		"en": "Specify the legend as legend. It is supported by all types of series in the igDataChart control.",
		"jp": "凡例を凡例として指定します。これは、igDataChart コントロールのすべてのタイプのシリーズによってサポートされます。"
	}
                }
              ]
            },
            "width": {
              "type": "string",
              "defaultValue": null,
              "description": {
		"en": "The width of the legend.",
		"jp": "凡例の幅。"
	}
            },
            "height": {
              "type": "string",
              "defaultValue": null,
              "description": {
		"en": "The height of the legend.",
		"jp": "凡例の高さ。"
	}
            }
          }
        },
        "legendItemVisibility": {
          "type": "string",
          "defaultValue": "visible",
          "description": {
		"en": "Gets or sets the legend item visibility for the current series object.",
		"jp": "現在のシリーズ オブジェクトの凡例項目の表示状態を取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "visible",
              "type": "string",
              "description": {
		"en": "The legend item should be visible.",
		"jp": "凡例項目を表示します。"
	}
            },
            {
              "name": "collapsed",
              "type": "string",
              "description": {
		"en": "The legend item should not be visible.",
		"jp": "凡例項目を表示しません。"
	}
            }
          ]
        },
        "legendItemBadgeTemplate": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the LegendItemBadgeTemplate property. The legend item badge is created according to the LegendItemBadgeTemplate on-demand by the series object itself.",
		"jp": "LegendItemBadgeTemplate プロパティを取得または設定します。凡例項目バッジは、LegendItemBadgeTemplate に従って、Series オブジェクト自身がオンデマンドで作成します。"
	},
          "schemaRef": "dataChart.circleMarkerTemplate"
        },
        "legendItemTemplate": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the LegendItemTemplate property. The legend item control content is created according to the LegendItemTemplate on-demand by the series object itself.",
		"jp": "LegendItemTemplate プロパティを取得または設定します。凡例項目コントロールの内容は、LegendItemTemplate に従って、Series オブジェクト自身がオンデマンドで作成します。"
	},
          "schemaRef": "dataChart.circleMarkerTemplate"
        },
        "discreteLegendItemTemplate": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the DiscreteLegendItemTemplate property. The legend item control content is created according to the LegendItemTemplate on-demand by the series object itself.",
		"jp": "DiscreteLegendItemTemplate プロパティを取得または設定します。凡例項目コントロールの内容は、LegendItemTemplate に従って、Series オブジェクト自身がオンデマンドで作成します。"
	},
          "schemaRef": "dataChart.circleMarkerTemplate"
        },
        "transitionDuration": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the duration of the current series's morph.",
		"jp": "現在のシリーズのモーフィングの期間を取得または設定します。"
	}
        },
        "transitionEasingFunction": {
          "type": "function",
          "defaultValue": null,
          "description": {
		"en": "Provides an easing function to use for the transitions. This should either be a well known name of an easing function (The only currently supported name is cubic), or it should be a function that takes a number and returns the output with the function applied.",
		"jp": "トランジションで使用するためのイージング関数を提供します。イージング関数の名前 (「cubic」のみがサポートされている) であるか、数値を取得して関数が適用した出力を返す関数に設定します。"
	}
        },
        "resolution": {
          "type": "number",
          "defaultValue": 1,
          "description": {
		"en": "Gets or sets the current series object's rendering resolution.",
		"jp": "現在のシリーズ オブジェクトのレンダリング解像度を取得または設定します。"
	}
        },
        "title": {
          "type": "string",
          "defaultValue": 1,
          "description": {
		"en": "Gets or sets the Title property. The legend item control is created according to the Title on-demand by the series object itself.",
		"jp": "Title プロパティを取得または設定します。凡例項目コントロールは、Tile に従って、シリーズ オブジェクト自身がオンデマンドに作成します。"
	}
        },
        "brush": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush to use for the series.",
		"jp": "シリーズに使用するブラシを取得または設定します。"
	}
        },
        "outline": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush to use for the outline of the series. Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.",
		"jp": "シリーズのアウトラインを描画するブラシを取得または設定します。LineSeries など、一部の Series タイプでは、輪郭が表示されません。そのため、このプロパティは一部のチャートに影響を与えません。"
	}
        },
        "thickness": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the brush to use for the outline of the series. Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.",
		"jp": "シリーズのアウトラインを描画するブラシを取得または設定します。LineSeries など、一部の Series タイプでは、輪郭が表示されません。そのため、このプロパティは一部のチャートに影響を与えません。"
	}
        },
        "coercionMethods": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or gets the coercion methods to use when loading data from data sources. Should be specified before setting any member paths, if being used. Setting it later will not cause data to be reimported into the chart.",
		"jp": "データ ソースからデータを読み込むときに使用する強制メソッドを取得または設定します。使用する場合、メンバー パスを設定する前に指定します。後に設定する場合、チャートにデータを再インポートしません。"
	}
        },
        "markerType": {
          "type": "string",
          "defaultValue": "none",
          "description": {
		"en": "Gets or sets the marker type for the current series object. If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.",
		"jp": "現在のシリーズ オブジェクトにマーカー タイプを取得または設定します。MarkerTemplate プロパティが設定された場合、MarkerType プロパティの設定は無視されます。"
	},
          "valueOptions": [
            {
              "name": "unset",
              "type": "string",
              "description": {
		"en": "Marker hasn't been set.",
		"jp": "マーカーは設定されていません。"
	}
            },
            {
              "name": "none",
              "type": "string",
              "description": {
		"en": "No markerItems.",
		"jp": "markerItems なし。"
	}
            },
            {
              "name": "automatic",
              "type": "string",
              "description": {
		"en": "Automatic marker shape.",
		"jp": "自動マーカー形状。"
	}
            },
            {
              "name": "circle",
              "type": "string",
              "description": {
		"en": "Circle marker shape.",
		"jp": "円形マーカー形状。"
	}
            },
            {
              "name": "triangle",
              "type": "string",
              "description": {
		"en": "Flat-top triangle marker shape.",
		"jp": "下向き三角形マーカー形状。"
	}
            },
            {
              "name": "pyramid",
              "type": "string",
              "description": {
		"en": "Flat-base triangle marker shape.",
		"jp": "上向き三角形マーカー形状。"
	}
            },
            {
              "name": "square",
              "type": "string",
              "description": {
		"en": "Square marker shape.",
		"jp": "四角形マーカー形状。"
	}
            },
            {
              "name": "diamond",
              "type": "string",
              "description": {
		"en": "Diamond marker shape.",
		"jp": "菱形マーカー形状。"
	}
            },
            {
              "name": "pentagon",
              "type": "string",
              "description": {
		"en": "Pentagon marker shape.",
		"jp": "五角形マーカー形状。"
	}
            },
            {
              "name": "hexagon",
              "type": "string",
              "description": {
		"en": "Hexagon marker shape.",
		"jp": "六角形マーカー形状。"
	}
            },
            {
              "name": "tetragram",
              "type": "string",
              "description": {
		"en": "Four-pointed star marker shape.",
		"jp": "四角の星のマーカー形状。"
	}
            },
            {
              "name": "pentagram",
              "type": "string",
              "description": {
		"en": "Five-pointed star marker shape.",
		"jp": "五角の星のマーカー形状。"
	}
            },
            {
              "name": "hexagram",
              "type": "string",
              "description": {
		"en": "Six-pointed star marker shape.",
		"jp": "六角の星のマーカー形状。"
	}
            }
          ]
        },
        "markerTemplate": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the MarkerTemplate for the current series object.",
		"jp": "現在のシリーズ オブジェクトの MarkerTemplate を取得または設定します。"
	},
          "schemaRef": "dataChart.circleMarkerTemplate"
        },
        "markerBrush": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush that specifies how the current series object's marker interiors are painted.",
		"jp": "現在のシリーズ オブジェクトのマーカーの内部をペイントする方法を指定するブラシを取得または設定します。"
	}
        },
        "markerOutline": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush that specifies how the current series object's marker outlines are painted.",
		"jp": "現在のシリーズ オブジェクトのマーカーのアウトラインを塗りつぶす方法を指定するブラシを取得または設定します。"
	}
        },
        "xAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the effective x-axis for the current object.",
		"jp": "現在のオブジェクトの有効な X 軸を取得または設定します。"
	}
        },
        "yAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the effective y-axis for the current object.",
		"jp": "現在のオブジェクトの有効な Y 軸を取得または設定します。"
	}
        },
        "xMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the value mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの値マッピング プロパティを取得または設定します。"
	}
        },
        "yMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the value mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの値マッピング プロパティを取得または設定します。"
	}
        },
        "trendLineType": {
          "type": "string",
          "defaultValue": "none",
          "description": {
		"en": "Gets or sets the trend type for the current scatter series.",
		"jp": "現在の散布シリーズのトレンド タイプを取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "none",
              "type": "string",
              "description": {
		"en": "No trendline should display.",
		"jp": "トレンド折れ線を表示しません。"
	}
            },
            {
              "name": "linearFit",
              "type": "string",
              "description": {
		"en": "Linear fit.",
		"jp": "リニア フィット。"
	}
            },
            {
              "name": "quadraticFit",
              "type": "string",
              "description": {
		"en": "Quadratic polynomial fit.",
		"jp": "二次多項式フィット。"
	}
            },
            {
              "name": "cubicFit",
              "type": "string",
              "description": {
		"en": "Cubic polynomial fit.",
		"jp": "三次多項式フィット。"
	}
            },
            {
              "name": "quarticFit",
              "type": "string",
              "description": {
		"en": "Quartic polynomial fit.",
		"jp": "四次多項式フィット。"
	}
            },
            {
              "name": "quinticFit",
              "type": "string",
              "description": {
		"en": "Quintic polynomial fit.",
		"jp": "五次多項式フィット。"
	}
            },
            {
              "name": "logarithmicFit",
              "type": "string",
              "description": {
		"en": "Logarithmic fit.",
		"jp": "対数フィット。"
	}
            },
            {
              "name": "exponentialFit",
              "type": "string",
              "description": {
		"en": "Exponential fit.",
		"jp": "指数フィット。"
	}
            },
            {
              "name": "powerLawFit",
              "type": "string",
              "description": {
		"en": "Powerlaw fit.",
		"jp": "べき乗フィット。"
	}
            },
            {
              "name": "simpleAverage",
              "type": "string",
              "description": {
		"en": "Simple moving average.",
		"jp": "単純移動平均。"
	}
            },
            {
              "name": "exponentialAverage",
              "type": "string",
              "description": {
		"en": "Exponential moving average.",
		"jp": "指数移動平均。"
	}
            },
            {
              "name": "modifiedAverage",
              "type": "string",
              "description": {
		"en": "Modified moving average.",
		"jp": "変更された移動平均。"
	}
            },
            {
              "name": "cumulativeAverage",
              "type": "string",
              "description": {
		"en": "Cumulative moving average.",
		"jp": "累積移動平均。"
	}
            },
            {
              "name": "weightedAverage",
              "type": "string",
              "description": {
		"en": "Weighted moving average.",
		"jp": "加重移動平均。"
	}
            }
          ]
        },
        "trendLineBrush": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush to use to draw the trend line.",
		"jp": "トレンドラインを描画するブラシを取得または設定します。"
	}
        },
        "trendLineThickness": {
          "type": "number",
          "defaultValue": 1.5,
          "description": {
		"en": "Gets or sets the thickness of the current scatter series object's trend line.",
		"jp": "現在の散布シリーズ オブジェクトのトレンド ラインの太さを取得または設定します。"
	}
        },
        "trendLinePeriod": {
          "type": "number",
          "defaultValue": 7,
          "description": {
		"en": "Gets or sets the moving average period for the current scatter series object. The typical, and initial, value for trend line period is 7.",
		"jp": "現在の散布シリーズ オブジェクトの移動平均期間を取得または設定します。一般的な近似曲線期間の初期値は 7 です。"
	}
        },
        "trendLineZIndex": {
          "type": "number",
          "defaultValue": 1001,
          "description": {
		"en": "Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data.",
		"jp": "近似曲線の z インデックスを取得または設定します。値が 1000 より大きい場合は、傾向線がシリーズ データの前に描画されます。"
	}
        },
        "maximumMarkers": {
          "type": "number",
          "defaultValue": 400,
          "description": {
		"en": "Gets or sets the maximum number of markerItems displayed by the current series. If more than the specified number of markerItems are visible, the series will automatically choose a representative set.",
		"jp": "現在のシリーズによって表示される markerItems の最大数を取得または設定します。指定した数を超える markerItems が表示されている場合、シリーズは代表的なセットを自動的に選択します。"
	}
        },
        "unknownValuePlotting": {
          "type": "number",
          "defaultValue": "dontPlot",
          "description": {
		"en": "Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values.",
		"jp": "不明な値がチャートにプロットされるかどうかを決定します。Null および Double.NaN は不明な値の 2 つの例です。"
	},
          "valueOptions": [
            {
              "name": "linearInterpolate",
              "type": "string",
              "description": {
		"en": "Plot the unknown value as the midpoint between surrounding known values using linear interpolation.",
		"jp": "線形補間を使用すると、不明な値を囲む定義した値の中にプロットします。"
	}
            },
            {
              "name": "dontPlot",
              "type": "string",
              "description": {
		"en": "Do not plot the unknown value on the chart.",
		"jp": "不明な値はチャートにプロットしません。"
	}
            }
          ]
        },
        "radiusMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the radius mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの半径マッピング プロパティを取得または設定します。"
	}
        },
        "radiusScale": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the radius size scale for the bubbles.",
		"jp": "バブルの半径サイズ スケールを取得または設定します。"
	}
        },
        "labelMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the Label mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトのラベル マッピング プロパティを取得または設定します。"
	}
        },
        "fillMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the fill mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの塗りつぶしマッピング プロパティを取得または設定します。"
	}
        },
        "fillScale": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush scale for the marker brush.",
		"jp": "マーカー ブラシのブラシ スケールを取得または設定します。"
	}
        },
        "angleAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets the effective angle axis for the current series object.",
		"jp": "現在のシリーズ オブジェクトの有効な角度軸を取得します。"
	}
        },
        "valueAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets the effective value axis for the current series object.",
		"jp": "現在のシリーズ オブジェクトの有効な値軸を取得します。"
	}
        },
        "clipSeriesToBounds": {
          "type": "bool",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets whether to clip the series to the bounds. Setting this to true can effect performance.",
		"jp": "シリーズを境界線でクリップするかどうかを設定または取得します。この設定はパフォーマンスに効果があります。"
	}
        },
        "valueMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the item path that provides the values for the current series.",
		"jp": "現在のシリーズの値を提供する項目パスを取得または設定します。"
	}
        },
        "radiusX": {
          "type": "number",
          "defaultValue": 2.0,
          "description": {
		"en": "Gets or sets the x-radius of the ellipse that is used to round the corners of the column.",
		"jp": "列の角に使用される楕円の X 半径を取得または設定します。"
	}
        },
        "radiusY": {
          "type": "number",
          "defaultValue": 2.0,
          "description": {
		"en": "Gets or sets the y-radius of the ellipse that is used to round the corners of the column.",
		"jp": "列の角に使用される楕円の Y 半径を取得または設定します。"
	}
        },
        "angleMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the x-radius of the ellipse that is used to round the corners of the column.",
		"jp": "列の角に使用される楕円の X 半径を取得または設定します。"
	}
        },
        "radiusAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets the effective radius axis for the current series object.",
		"jp": "現在のシリーズ オブジェクトの有効な半径軸を取得します。"
	}
        },
        "useCartesianInterpolation": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Gets or sets whether Cartesian Interpolation should be used rather than Archimedian spiral based interpolation.",
		"jp": "Archimedian スパイラルに基づく補間の代わりに Cartesian 補間を使用するかどうかを取得または設定します。"
	}
        },
        "negativeBrush": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the brush to use for negative portions of the series.",
		"jp": "シリーズの負の領域を描画するブラシを取得または設定します。"
	}
        },
        "splineType": {
          "type": "string",
          "defaultValue": "natural",
          "description": {
		"en": "Gets or sets the type of spline to be rendered.",
		"jp": "描画されるスプラインのタイプを取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "natural",
              "type": "string",
              "description": {
		"en": "Calculates the spline using a natural spline calculation formula.",
		"jp": "自然スプライン計算数式を使用することによってスプラインを計算します。"
	}
            },
            {
              "name": "clamped",
              "type": "string",
              "description": {
		"en": "Calculated the spline using a clamped spline calculation formula.",
		"jp": "固定スプライン計算数式を使用することによってスプラインを計算します。"
	}
            }
          ]
        },
        "lowMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the value mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの値マッピング プロパティを取得または設定します。"
	}
        },
        "highMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the value mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの値マッピング プロパティを取得または設定します。"
	}
        },
        "openMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the open mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの始値マッピング プロパティを取得または設定します。"
	}
        },
        "closeMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the close mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの終値マッピング プロパティを取得または設定します。"
	}
        },
        "volumeMemberPath": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the volume mapping property for the current series object.",
		"jp": "現在のシリーズ オブジェクトの出来高マッピング プロパティを取得または設定します。"
	}
        },
        "displayType": {
          "type": "string",
          "defaultValue": "candlestick",
          "description": {
		"en": "Gets or sets the display for the current FinancialIndicator object.",
		"jp": "現在の FinancialIndicator オブジェクトの表示を取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "candlestick",
              "type": "string",
              "description": {
		"en": "Displays prices as a Japanese Candlestick.",
		"jp": "価格を日本のろうそくとして表示します。"
	}
            },
            {
              "name": "OHLC",
              "type": "string",
              "description": {
		"en": "Displays prices as a Japanese Candlestick.",
		"jp": "価格を日本のろうそくとして表示します。"
	}
            }
          ]
        },
        "ignoreFirst": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the number of values to hide at the beginning of the indicator.",
		"jp": "インジケーターの最初で非表示にするための値数を取得または設定します。"
	}
        },
        "period": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the moving average period for the current AverageDirectionalIndexIndicator object. The typical, and initial, value for AverageDirectionalIndexIndicator periods is 14.",
		"jp": "現在の AverageDirectionalIndexIndicator オブジェクトの移動平均期間を取得または設定します。AverageDirectionalIndexIndicator 期間の一般的な値かつ初期値は 14 です。"
	}
        },
        "shortPeriod": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object. The typical, and initial, value for short AVO periods is 10.",
		"jp": "現在の AbsoluteVolumeOscillatorIndicator オブジェクトの短い移動平均期間を取得または設定します。短い AVO 期間の一般的な値かつ初期値は 10 です。"
	}
        },
        "longPeriod": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object. The typical, and initial, value for long AVO periods is 30.",
		"jp": "現在の AbsoluteVolumeOscillatorIndicator オブジェクトの短い移動平均期間を取得または設定します。長い AVO 期間の一般的な値かつ初期値は 30 です。"
	}
        },
        "markerCollisionAvoidance": {
          "type": "string",
          "defaultValue": "none",
          "description": {
		"en": "Gets or sets the MarkerCollisionAvoidance",
		"jp": "MarkerCollisionAvoidance を取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "none",
              "type": "string",
              "description": {
		"en": "No collision avoidance is attempted.",
		"jp": "競合回避がありません。"
	}
            },
            {
              "name": "omit",
              "type": "string",
              "description": {
		"en": "Markers that collide will be omitted.",
		"jp": "競合するマーカーを表示しません。"
	}
            },
            {
              "name": "fade",
              "type": "string",
              "description": {
		"en": "Markers that collide will be faded in opacity.",
		"jp": "競合するマーカーの不透明度をフォードします。"
	}
            },
            {
              "name": "omitAndShift",
              "type": "string",
              "description": {
		"en": "Markers that collide may be shifted or omitted.",
		"jp": "競合するマーカーを移動するか、表示しません。"
	}
            },
            {
              "name": "omitAndFade",
              "type": "string",
              "description": {
		"en": "Markers that collide may be shifted or faded.",
		"jp": "競合するマーカーを移動するか、フェードします。"
	}
            }
          ]
        },
        "useHighMarkerFidelity": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Sets or Gets whether to increase marker fidelity for extreme data shapes that have lots of Y variation over short X intervals.",
		"jp": "短い X 間隔で Y 変動を多く持つ extreme データ図形のマーカーの忠実度を増やすかどうかを取得または設定します。"
	}
        },
        "useBruteForce": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets the whether to use use brute force mode.",
		"jp": "ブルート フォース モードを使用するかどうかを取得または設定します。"
	}
        },
        "progressiveLoad": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Gets or sets the whether to progressively load the data into the chart.",
		"jp": "データをチャートに徐々に読み込むかどうかを取得または設定します。"
	}
        },
        "mouseOverEnabled": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets the whether the chart reacts to mouse move events.",
		"jp": "チャートがマウス移動イベントに反応するかどうかを取得または設定します。"
	}
        },
        "useSquareCutoffStyle": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets the whether to use squares when halting a render traversal rather than the shape of the coalesced area.",
		"jp": "描画トラバーサルを中止する際に、結合領域の図形の代わりに四角を使用するかどうかを取得または設定します。"
	}
        },
        "heatMinimum": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "Gets or sets the density value that maps to the minimum heat color.",
		"jp": "最低熱色にマップする密度値を取得または設定します。"
	}
        },
        "heatMaximum": {
          "type": "number",
          "defaultValue": 50,
          "description": {
		"en": "Gets or sets the value that maps to the maximum heat color.",
		"jp": "最高熱色にマップする値を取得または設定します。"
	}
        },
        "heatMaximum": {
          "type": "number",
          "defaultValue": 50,
          "description": {
		"en": "Gets or sets the value that maps to the maximum heat color.",
		"jp": "最高熱色にマップする値を取得または設定します。"
	}
        },
        "heatMinimumColor": {
          "type": "string",
          "defaultValue": "black",
          "description": {
		"en": "Gets or sets the minimum heat color for the density scale.",
		"jp": "密度スケールに使用する最小ヒート色を取得または設定します。"
	}
        },
        "heatMaximumColor": {
          "type": "string",
          "defaultValue": "red",
          "description": {
		"en": "Gets or sets the maximum heat color for the density scale.",
		"jp": "密度スケールに使用する最大ヒート色を取得または設定します。"
	}
        },
        "series": {
          "type": "array",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the series for stacked charts. It should contain array of series objects. Each item in array should represent a series with type=\"stackedFragment\" and it may have most options supported by top-level series object, such as xAxis, yAxis, valueMemberPath, etc.",
		"jp": "積層型チャートのシリーズを取得または設定します。シリーズ オブジェクトの配列を含みます。配列の各項目は type=\"stackedFragment\" のシリーズを表し、xAxis、yAxis、valueMemberPath などの最上位のシリーズ オブジェクトによってサポートされるオプションがあります。"
	},
          "schemaRef": "datachart.series"
        },
        "isDropShadowEnabled": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether drop shadow should be enabled for this series.",
		"jp": "ドロップ シャドウがこのシリーズで有効かどうかを取得または設定します。"
	}
        },
        "useSingleShadow": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Gets or sets whether drop shadow is applied to the whole series visual or to each of the individual shapes forming the series.",
		"jp": "影付きが完全のシリーズ ビジュアルに適用されるか、シリーズの各図形に適用されるかどうかを取得または設定します。"
	}
        },
        "shadowColor": {
          "type": "string",
          "defaultValue": "rgba(95,95,95,0.5)",
          "description": {
		"en": "Gets or sets the color to use for the drop shadow.",
		"jp": "影付きで使用する色を取得または設定します。"
	}
        },
        "shadowBlur": {
          "type": "number",
          "defaultValue": 10,
          "description": {
		"en": "Gets or sets the blur amount to use for the drop shadow.",
		"jp": "影付きで使用するぼかし量を取得または設定します。"
	}
        },
        "shadowOffsetX": {
          "type": "number",
          "defaultValue": 5,
          "description": {
		"en": "Gets or sets the x offset amount to use for the drop shadow.",
		"jp": "影付きで使用する x オフセットを取得または設定します。"
	}
        },
        "shadowOffsetY": {
          "type": "number",
          "defaultValue": 5,
          "description": {
		"en": "Gets or sets the y offset amount to use for the drop shadow.",
		"jp": "影付きで使用する y オフセットを取得または設定します。"
	}
        },
        "isTransitionInEnabled": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets if the series should play a transition in animation when the data source is assigned.",
		"jp": "データ ソースが割り当てられたときに、シリーズがトランジションのアニメーションを再生するかどうかを取得または設定します。"
	}
        },
        "isTransitionInEnabled": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets if the series should play a transition in animation when the data source is assigned.",
		"jp": "データ ソースが割り当てられたときに、シリーズがトランジションのアニメーションを再生するかどうかを取得または設定します。"
	}
        },
        "transitionInSpeedType": {
          "type": "string",
          "defaultValue": "auto",
          "description": {
		"en": "Gets or sets the speed to transition in the series data points.",
		"jp": "シリーズのデータ ポイントの入るトランジションのスピードを取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "auto",
              "type": "string",
              "description": {
		"en": "A speed type is automatically selected.",
		"jp": "スピード タイプが自動的に選択されます。"
	}
            },
            {
              "name": "normal",
              "type": "string",
              "description": {
		"en": "All speeds are normal, data points will arrive at the same time.",
		"jp": "すべてのスピードは標準です。データ ポイントが同じ時間で入ります。"
	}
            },
            {
              "name": "valueScaled",
              "type": "string",
              "description": {
		"en": "Data points will arrive later if their value is further from the start point.",
		"jp": "データ ポイントの値は開始点からの距離が高い場合、後から入ります。"
	}
            },
            {
              "name": "indexScaled",
              "type": "string",
              "description": {
		"en": "Data points will arrive later if their index is further from the axis origin.",
		"jp": "データ ポイントのインデックスは軸の基点からの距離が高い場合、後に入ります。"
	}
            },
            {
              "name": "random",
              "type": "string",
              "description": {
		"en": "Data points will arrive at random times.",
		"jp": "データ ポイントはランダム時間に入ります。"
	}
            }
          ]
        },
        "transitionInMode": {
          "type": "string",
          "defaultValue": "auto",
          "description": {
		"en": "Gets or sets the method to transition in the series.",
		"jp": "シリーズの入るトランジションのメソッドを取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "auto",
              "type": "string",
              "description": {
		"en": "Series transitions in an automatically chosen way.",
		"jp": "シリーズが自動的に選択された方法でトランジションします。"
	}
            },
            {
              "name": "fromZero",
              "type": "string",
              "description": {
		"en": "Series transitions in from the reference value of the value axis.",
		"jp": "シリーズが数値軸の参照値からトランジションします。"
	}
            },
            {
              "name": "sweepFromLeft",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the left.",
		"jp": "シリーズが左側からスイープします。"
	}
            },
            {
              "name": "sweepFromRight",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the right.",
		"jp": "シリーズが右側からスイープします。"
	}
            },
            {
              "name": "sweepFromTop",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the top.",
		"jp": "シリーズが上側からスイープします。"
	}
            },
            {
              "name": "sweepFromBottom",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the bottom.",
		"jp": "シリーズが下側からスイープします。"
	}
            },
            {
              "name": "sweepFromCenter",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the center.",
		"jp": "シリーズが中央からスイープします。"
	}
            },
            {
              "name": "accordionFromLeft",
              "type": "string",
              "description": {
		"en": "Series accordions in from the left.",
		"jp": "シリーズが左側からアコーディオンします。"
	}
            },
            {
              "name": "accordionFromRight",
              "type": "string",
              "description": {
		"en": "Series accordions in from the right.",
		"jp": "シリーズが右側からアコーディオンします。"
	}
            },
            {
              "name": "accordionFromTop",
              "type": "string",
              "description": {
		"en": "Series accordions in from the top.",
		"jp": "シリーズが上側からアコーディオンします。"
	}
            },
            {
              "name": "accordionFromBottom",
              "type": "string",
              "description": {
		"en": "Series accordions in from the bottom.",
		"jp": "シリーズが下側からアコーディオンします。"
	}
            },
            {
              "name": "expand",
              "type": "string",
              "description": {
		"en": "Series expands from the value midpoints.",
		"jp": "シリーズが値中点から展開します。"
	}
            },
            {
              "name": "sweepFromCategoryAxisMinimum",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the category axis minimum.",
		"jp": "シリーズがカテゴリ軸の最小値からスイープします。"
	}
            },
            {
              "name": "sweepFromCategoryAxisMaximum",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the category axis maximum.",
		"jp": "シリーズがカテゴリ軸の最大値からスイープします。"
	}
            },
            {
              "name": "sweepFromValueAxisMinimum",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the value axis minimum.",
		"jp": "シリーズが数値軸の最小値からスイープします。"
	}
            },
            {
              "name": "sweepFromValueAxisMaximum",
              "type": "string",
              "description": {
		"en": "Series sweeps in from the value axis maximum.",
		"jp": "シリーズが数値軸の最大値からスイープします。"
	}
            },
            {
              "name": "accordionFromCategoryAxisMinimum",
              "type": "string",
              "description": {
		"en": "Series accordions in from the category axis minimum.",
		"jp": "シリーズがカテゴリ軸の最小値からアコーディオンします。"
	}
            },
            {
              "name": "accordionFromCategoryAxisMaximum",
              "type": "string",
              "description": {
		"en": "Series accordions in from the category axis maximum.",
		"jp": "シリーズがカテゴリ軸の最大値からアコーディオンします。"
	}
            },
            {
              "name": "accordionFromValueAxisMinimum",
              "type": "string",
              "description": {
		"en": "Series accordions in from the value axis minimum.",
		"jp": "シリーズが数値軸の最小値からアコーディオンします。"
	}
            },
            {
              "name": "accordionFromValueAxisMaximum",
              "type": "string",
              "description": {
		"en": "Series accordions in from the value axis maximum.",
		"jp": "シリーズが数値軸の最大値からアコーディオンします。"
	}
            }
          ]
        },
        "transitionInDuration": {
          "type": "number",
          "defaultValue": 500,
          "description": {
		"en": "Gets or sets the duration of the current series's transition in morph in milliseconds.",
		"jp": "モーフィングで現在のシリーズ トランジションの期間をミリ秒で取得または設定します。"
	}
        },
        "radius": {
          "type": "number",
          "defaultValue": 2,
          "description": {
		"en": "Gets or sets the corner radius to use for the series, if applicable.",
		"jp": "シリーズに使用する角の半径を取得または設定します。"
	}
        },
        "areaFillOpacity": {
          "type": "number",
          "defaultValue": 1.0,
          "description": {
		"en": "Gets or sets the opacity modifier to apply to the area fill shape of the series, if applicable.",
		"jp": "シリーズの領域塗りつぶし図形に適用する不透明度修飾子を取得または設定します。"
	}
        },
        "expectFunctions": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether the series should expect that its data source members need to be called as functions to get their values.",
		"jp": "値を取得するために、シリーズのデータ ソース メンバーが関数として呼び出す必要があるかどうかを取得または設定します。"
	}
        },
        "useInterpolation": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether the hover layer should use interpolation to position itself relative the closest values.",
		"jp": "ホバー レイヤーが一番近い値に相対して配置するときに補間を使用するかどうかを取得または設定します。"
	}
        },
        "skipUnknowns": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether the hover layer should skip unknown values when trying to find the closest values.",
		"jp": "ホバー レイヤーが一番近い値を検索するときに不明な値をスキップするかどうかを取得または設定します。"
	}
        },
        "skipUnknowns": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether the hover layer should skip unknown values when trying to find the closest values.",
		"jp": "ホバー レイヤーが一番近い値を検索するときに不明な値をスキップするかどうかを取得または設定します。"
	}
        },
        "verticalLineVisibility": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Gets or sets whether the vertical crosshair portion of the layer should be visible.",
		"jp": "レイヤーの垂直十字線の部分が表示されるかどうかを取得または設定します。"
	}
        },
        "horizontalLineVisibility": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Gets or sets whether the horizontal crosshair portion of the layer should be visible.",
		"jp": "レイヤーの水平十字ポインター部分が表示されるかどうかを取得または設定します。"
	}
        },
        "targetSeries": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the name of the target series for the layer, if desired. Setting the target series will scope the layer to target just that series.",
		"jp": "レイヤーのターゲット シリーズの名前を取得または設定します。ターゲット シリーズを設定すると、レイヤーをそのシリーズのみに対象するためにスコープを設定します。"
	}
        },
        "targetAxis": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Gets or sets the name of the target axis for the layer, if desired. Setting the target axis will scope the layer to target just that axis.",
		"jp": "レイヤーのターゲット軸の名前を取得または設定します。ターゲット軸を設定すると、レイヤーをその軸のみに対象するためにスコープを設定します。"
	}
        },
        "isCustomCategoryStyleAllowed": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether a custom category style is allowed. Setting this to true will case the assigningCategoryStyle event to get fired, if provided.",
		"jp": "カスタム カテゴリ スタイルが許可されるかどうかを取得または設定します。True に設定すると、提供されている場合に assigningCategoryStyle イベントを発生します。"
	}
        },
        "isCustomCategoryMarkerStyleAllowed": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether a custom category marker style is allowed. Setting this to true will case the assigningCategoryMarkerStyle event to get fired, if provided.",
		"jp": "カスタム カテゴリ マーカー スタイルが許可されるかどうかを取得または設定します。True に設定すると、提供されている場合に assigningCategoryMarkerStyle イベントを発生します。"
	}
        },
        "isHighlightingEnabled": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Gets or sets whether highlighting should be enabled for the series, if supported.",
		"jp": "サポートされる場合、このシリーズの強調表示を有効にするかどうかを取得または設定します。"
	}
        },
        "bandHighlightWidth": {
          "type": "number",
          "defaultValue": 10.0,
          "description": {
		"en": "Gets or sets the width to use for the highlight region if highlighting items in a grid aligned series (line, spline, etc), with a banded shape.",
		"jp": "グリッド シリーズ (ライン、スプラインなど) の項目をバンド図形で強調表示する場合に、強調表示領域に使用する幅を取得または設定します。"
	}
        },
        "highlightType": {
          "type": "string",
          "defaultValue": "auto",
          "description": {
		"en": "Gets or sets which type of highlight shape to use when highlighting items.",
		"jp": "項目の強調表示に使用する強調表示の図形タイプを取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "auto",
              "type": "string",
              "description": {
		"en": "Use an automatic highlight type for this series.",
		"jp": "このシリーズに自動強調表示タイプを使用します。"
	}
            },
            {
              "name": "marker",
              "type": "string",
              "description": {
		"en": "Use a marker highlight type for this series.",
		"jp": "このシリーズにマーカー強調表示タイプを使用します。"
	}
            },
            {
              "name": "shape",
              "type": "string",
              "description": {
		"en": "Use a shape highlight type for this series.",
		"jp": "このシリーズに図形強調表示タイプを使用します。"
	}
            }
          ]
        },
        "highlightType": {
          "type": "string",
          "defaultValue": "auto",
          "description": {
		"en": "Gets or sets the Position to apply to the tooltip containers.",
		"jp": "ツールチップ コンテナーに適用する配置を取得または設定します。"
	},
          "valueOptions": [
            {
              "name": "auto",
              "type": "string",
              "description": {
		"en": "Use an automatic position for the category tooltips.",
		"jp": "カテゴリ ツールチップのために自動位置を使用します。"
	}
            },
            {
              "name": "outsideStart",
              "type": "string",
              "description": {
		"en": "Position the category tooltip at the outside start of the value axis.",
		"jp": "カテゴリ ツールチップを値軸の外部開始に配置します。"
	}
            },
            {
              "name": "insideStart",
              "type": "string",
              "description": {
		"en": "Position the category tooltip at the inside start of the value axis.",
		"jp": "カテゴリ ツールチップを値軸の内部開始に配置します。"
	}
            },
            {
              "name": "insideEnd",
              "type": "string",
              "description": {
		"en": "Position the category tooltip at the inside end of the value axis.",
		"jp": "カテゴリ ツールチップを値軸の内部終了に配置します。"
	}
            },
            {
              "name": "outsideEnd",
              "type": "string",
              "description": {
		"en": "Position the category tooltip at the outside end of the value axis.",
		"jp": "カテゴリ ツールチップを値軸の外部終了に配置します。"
	}
            }
          ]
        },
        "cursorPosition": {
          "type": "object",
          "defaultValue": null,
          "description": {
		"en": "Sets the position a cursor position to use instead of the current mouse cursor position for displaying the annotations in this layer. Should be an object with an x and a y property in world coordinates (ranging from 0 to 1)",
		"jp": "このレイヤーで注釈を表示するために、現在のマウス カーソルの位置の代わりに使用するカーソル位置を設定します。0 ~ 1 のワールド座標で x および y プロパティを含むオブジェクトです。"
	}
        },
        "isDefaultCrosshairDisabled": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "Sets if the presence of this layer should disable the default crosshair behavior of the chart, if present.",
		"jp": "このレイヤーがチャートのデフォルト十時線動作を無効にするかどうかを設定します。"
	}
        },
        "useIndex": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Sets if the current layer should take up a brush/ordering index in the series collection to derive its color automatically.",
		"jp": "自動的に色を決定するために、現在のレイヤーがシリーズ コレクションのブラシ順序インデックスを使用するかどうかを設定します。"
	}
        },
        "useLegend": {
          "type": "bool",
          "defaultValue": false,
          "description": {
		"en": "Sets if the current layer should have an entry in the legend of the chart. By default annotation layers are not present in the legend.",
		"jp": "現在のレイヤーがチャートの凡例にエントリを追加するかどうかを設定します。デフォルトで、注釈レイヤーが凡例に表示されていません。"
	}
        }
      }
    },
    "size": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "To set both dimensions of the chart simultaneously an object with a width and height property can be provided",
		"jp": "チャートの両方のディメンションを一度に設定するには、width および height プロパティを持つオブジェクトを提供できます。"
	},
      "schema": {
        "width": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Defines the width dimension of the chart",
		"jp": "チャートの幅ディメンションを定義します。"
	}
        },
        "height": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "Defines the height dimension of the chart",
		"jp": "チャートの高さディメンションを定義します。"
	}
        }
      }
    },
    "squareMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for square markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of square.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上の四角マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   square のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "subtitle": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "the subtitle to display for the component.",
		"jp": "コンポーネントに表示するサブタイトル。"
	}
    },
    "subtitleBottomMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the bottom margin to use for the subtitle.",
		"jp": "サブタイトルに使用する下マージン。"
	}
    },
    "subtitleHorizontalAlignment": {
      "type": "string",
      "defaultValue": "center",
      "description": {
		"en": "The horizontal alignment to use for the subtitle. ",
		"jp": "サブタイトルに使用する水平方向。 "
	},
      "valueOptions": [
        {
          "name": "left",
          "type": "string",
          "description": {
		"en": "Left aligns the subtitle.",
		"jp": "サブタイトルを左揃えにします。"
	}
        },
        {
          "name": "center",
          "type": "string",
          "description": {
		"en": "Center aligns the subtitle.",
		"jp": "サブタイトルを中央揃えにします。"
	}
        },
        {
          "name": "right",
          "type": "string",
          "description": {
		"en": "Right aligns the subtitle.",
		"jp": "サブタイトルを右揃えにします。"
	}
        }
      ]
    },
    "subtitleLeftMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the left margin to use for the subtitle.",
		"jp": "サブタイトルに使用する左マージン。"
	}
    },
    "subtitleRightMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the right margin to use for the subtitle.",
		"jp": "サブタイトルに使用する右マージン。"
	}
    },
    "subtitleTextColor": {
      "type": "string",
      "defaultValue": "black",
      "description": {
		"en": "the color to use for the subtitle.",
		"jp": "サブタイトルに使用する色。"
	}
    },
    "subtitleTextStyle": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "the css font property to use for the title.",
		"jp": "タイトルに使用する css フォント プロパティ。"
	}
    },
    "subtitleTopMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the top margin to use for the subtitle.",
		"jp": "サブタイトルに使用する上マージン。"
	}
    },
    "syncChannel": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "The channel name to use to sync this chart with other charts.",
		"jp": "このチャートを他のチャートと同期化するために使用するチャネル名。"
	}
    },
    "synchronizeVertically": {
      "type": "bool",
      "defaultValue": true,
      "description": {
		"en": "Whether the chart should be synchronized vertically",
		"jp": "チャートが垂直に同期されるかどうか。"
	}
    },
    "syncrhonizeHorizontally": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Whether the chart should be synchronized horizontally",
		"jp": "チャートが水平に同期されるかどうか。"
	}
    },
    "tetragramMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for tetragram markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of tetragram.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上のテトラグラム マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   tetragram のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "theme": {
      "type": "string",
      "defaultValue": "c",
      "description": {
		"en": "The swatch used to style this widget",
		"jp": "このウィジェットをスタイルするために使用される見本。"
	}
    },
    "title": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "the title to display for the component.",
		"jp": "コンポーネントに表示するタイトル。"
	}
    },
    "titleBottomMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the bottom margin to use for the title.",
		"jp": "タイトルに使用する下マージン。"
	}
    },
    "titleHorizontalAlignment": {
      "type": "string",
      "defaultValue": "center",
      "description": {
		"en": "The horizontal alignment to use for the title.",
		"jp": "タイトルに使用する水平方向。"
	},
      "valueOptions": [
        {
          "name": "left",
          "type": "string",
          "description": {
		"en": "Left aligns the title.",
		"jp": "タイトルを左揃えにします。"
	}
        },
        {
          "name": "center",
          "type": "string",
          "description": {
		"en": "Center aligns the title.",
		"jp": "タイトルを中央揃えにします。"
	}
        },
        {
          "name": "right",
          "type": "string",
          "description": {
		"en": "Right aligns the title.",
		"jp": "タイトルを右揃えにします。"
	}
        }
      ]
    },
    "titleLeftMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the left margin to use for the title.",
		"jp": "タイトルに使用する左マージン。"
	}
    },
    "titleRightMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the right margin to use for the title.",
		"jp": "タイトルに使用する右マージン。"
	}
    },
    "titleTextColor": {
      "type": "string",
      "defaultValue": "black",
      "description": {
		"en": "the color to use for the title.",
		"jp": "タイトルに使用する色。"
	}
    },
    "titleTextStyle": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "the css font property to use for the title.",
		"jp": "タイトルに使用する css フォント プロパティ。"
	}
    },
    "titleTopMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the top margin to use for the title.",
		"jp": "タイトルに使用する上マージン。"
	}
    },
    "topMargin": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Sets or gets the top margin to use around the chart content in the canvas.",
		"jp": "キャンバスでチャート コンテンツの周囲で使用する上余白を取得または設定します。"
	}
    },
    "triangleMarkerTemplate": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets the template to use for triangle markers on the chart.<br>   Defines the marker template used for<br>   series with a marker type of triangle.<br>   The provided object should have properties called render and optionally measure. See definition for option: legendItemBadgeTemplate",
		"jp": "チャート上の三角マーカーに使用するためのテンプレートを取得または設定します。<br>   マーカー タイプが<br>   triangle のシリーズで使用されるマーカー テンプレートを定義します。<br>   提供されるオブジェクトには、描画とオプションでメジャーと呼ばれるプロパティがあります。option: legendItemBadgeTemplate の定義を参照してください。"
	},
      "schemaRef": "dataChart.circleMarkerTemplate"
    },
    "verticalZoomable": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Gets or sets the current Chart's vertical zoomability.",
		"jp": "現在の Chart の垂直ズーム可否を取得または設定します。"
	}
    },
    "width": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "The width of the chart. It can be set as a number in pixels, string (px) or percentage (%).",
		"jp": "チャートの幅。ピクセル、文字列 (px)、またはパーセンテージ (%) で数字として設定できます。"
	}
    },
    "windowPositionHorizontal": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "A number between 0 and 1 determining the position of the horizontal scroll.<br>   This property is effectively a shortcut to the X position of the WindowRect property.",
		"jp": "水平スクロールの位置を決定する 0 ～ 1 の数。<br>   このプロパティは WindowRect プロパティの X 位置へのショートカットと同じです。"
	}
    },
    "windowPositionVertical": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "A number between 0 and 1 determining the position of the vertical scroll.<br>   This property is effectively a shortcut to the Y position of the WindowRect property.",
		"jp": "垂直スクロールの位置を決定する 0 ～ 1 の数。<br>   このプロパティは WindowRect プロパティの Y 位置へのショートカットと同じです。"
	}
    },
    "windowRect": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "A rectangle representing the portion of the chart currently in view.<br>   A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.<br>   The provided object should have numeric properties called left, top, width and height.",
		"jp": "現在表示されているチャート部分を表す長方形。<br>   X = 0、Y = 0、Height および Width が 1 に設定される長方形の場合、プロット可能な領域はすべて表示されていることを意味します。Height および Width は .5 に設定される場合、表示は半分ズームしています。<br>   提供されたオブジェクトは、left、top、width および height と呼ばれる数値プロパティを持っている必要があります。"
	},
      "schema": {
        "left": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Gets sets left position of the rectangle",
		"jp": "矩形の左位置を取得または設定します。"
	}
        },
        "top": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Gets sets top position of the rectangle",
		"jp": "矩形の上位置を取得または設定します。"
	}
        },
        "width": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Gets sets width position of the rectangle",
		"jp": "矩形の幅位置を取得または設定します。"
	}
        },
        "height": {
          "type": "number",
          "defaultValue": null,
          "description": {
		"en": "Gets sets height position of the rectangle",
		"jp": "矩形の高さ位置を取得または設定します。"
	}
        }
      }
    },
    "windowRectMinWidth": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Sets or gets the minimum width that the window rect is allowed to reach before being clamped.<br>   Decrease this value if you want to allow for further zooming into the viewer.<br>   If this value is lowered too much it can cause graphical corruption due to floating point arithmetic inaccuracy.",
		"jp": "ウィンドウ長方形が固定される前に到達できる最低幅を設定または取得します。<br>   ビューアーにさらにズームできるようにする場合はこの値を減らします。<br>   この値が低すぎると、浮動小数点演算が正確でなくなるため、グラフィックが破損する場合があります。"
	}
    },
    "windowResponse": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "Set or get the upating method of the view on a user action",
		"jp": "ユーザー操作でビューの更新メソッドを取得または設定します。"
	},
      "valueOptions": [
        {
          "name": "deferred",
          "type": "string",
          "description": {
		"en": "Defer the view update until after the user action is complete.",
		"jp": "ユーザー アクションが完了してからビューの更新を開始します。"
	}
        },
        {
          "name": "immediate",
          "type": "string",
          "description": {
		"en": "Update the view immediately while the user action is happening.",
		"jp": "ユーザー アクションの発生と同時にビューを更新します。"
	}
        }
      ]
    },
    "windowScaleHorizontal": {
      "type": "number",
      "defaultValue": 1.0,
      "description": {
		"en": "A number between 0 and 1 determining the scale of the horizontal zoom.<br>   This property is effectively a shortcut to the Width of the WindowRect property.",
		"jp": "水平ズームのスケールを決定する 0 ～ 1 の数。<br>   このプロパティは WindowRect プロパティの Width へのショートカットと同じです。"
	}
    },
    "windowScaleVertical": {
      "type": "number",
      "defaultValue": 1.0,
      "description": {
		"en": "A number between 0 and 1 determining the scale of the vertical zoom.<br>   This property is effectively a shortcut to the Height of the WindowRect property.",
		"jp": "垂直ズームのスケールを決定する 0 ～ 1 の数。<br>   このプロパティは WindowRect プロパティの Height へのショートカットと同じです。"
	}
    }
  }
}
