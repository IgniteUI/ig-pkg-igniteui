{
  "overview": null,
  "name": "ui.igCurrencyEditor",
  "category": null,
  "visual": true,
  "events": {
    "rendered": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised after rendering of the editor completes.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to get a reference to the editor performing rendering.<br>    Use ui.element to get a reference to the editor element.",
        "jp": "エディターの描画が完了した後に発生するイベント。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、レンダリングを実行するエディターへの参照を取得します。<br>    ui.element を使用して、エディター要素への参照を取得します。"
      }
    },
    "rendering": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised before rendering of the editor completes.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to get a reference to the editor performing rendering.<br>    Use ui.element to get a reference to the editor element.",
        "jp": "エディターの描画が完了する前に発生するイベント。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、レンダリングを実行するエディターへの参照を取得します。<br>    ui.element を使用して、エディター要素への参照を取得します。"
      }
    },
    "textChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised after text in editor was changed. It can be raised when keyUp event occurs, <br>    or when the clear button is clicked or when an item from a list is selected.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use ui.text to obtain new text<br>    Use ui.oldTExt to obtain the old text.",
        "jp": "エディター内のテキストが変更された後に発生するイベント。keyUp イベントが発生するときに発生できます。<br>    または、クリアボタンがクリックされたときまたはリストの項目がせんたくされたときに発生できます。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    ui.text を使用して、新しいテキストを取得します。<br>    古いテキストの取得に ui.oldTExt を使用します。"
      }
    },
    "valueChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised after value in editor was changed. It can be raised on lost focus or on spin events.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use ui.value to obtain new value and ui.oldValue to obtain old value.",
        "jp": "エディター内の値が変更された後に発生するイベント。フォーカスの消失またはスピン イベントに対して発生します。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    ui.value を使用して新しい値を取得し、ui.oldValue を使用して古い値を取得します。"
      }
    },
    "valueChanging": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised before value in editor was changed.<br>    Return false in order to cancel change.<br>    It can be raised on lost focus or on spin events.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use ui.value to obtain new value and ui.oldValue to obtain old value.",
        "jp": "エディター内の値が変更される前に発生するイベント。<br>    変更をキャンセルするには、False を返します。<br>    フォーカスの消失またはスピン イベントに対して発生します。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    ui.value を使用して新しい値を取得し、ui.oldValue を使用して古い値を取得します。"
      }
    }
  },
  "properties": {
    "allowNullValue": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Sets gets ability to prevent null value.<br>    If that option is disabled, and editor has no value, then value is set to 0 (or minValue/maxValue).",
        "jp": "null 値を回避する機能を取得または設定します。<br>    このオプションが無効で、エディターに値がない場合、値は 0 (または minValue/maxValue) になります。"
      },
      "valueOptions": null
    },
    "buttonType": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": " Sets gets visibility of spin and drop-down button. That option can be set only on initialization. Combinations like 'dropdown,spin' or 'spinclear' are supported too.",
        "jp": " スピンおよびドロップダウン ボタンの可視性を取得または設定します。このオプションは、初期化時にのみ設定できます。「dropdown,spin」または「spinclear」などの組み合わせもサポートされています。"
      },
      "valueOptions": [
        {
          "name": "dropdown",
          "type": "string",
          "description": {
            "en": " button to open list is located on the right side of input-field (or left side if base html element has direction:rtl);",
            "jp": " リストを開くボタンが入力フィールドの右側に配置されます (base HTML 要素が direction:rtl を持つ場合は左側)。"
          }
        },
        {
          "name": "clear",
          "type": "string",
          "description": {
            "en": " button to clear value is located on the right side of input-field (or left side if base html element has direction:rtl);",
            "jp": " 値をクリアするボタンが入力フィールドの右側に配置されます (base HTML 要素が direction:rtl を持つ場合は左側)。"
          }
        },
        {
          "name": "spin",
          "type": "string",
          "description": {
            "en": " spin buttons are located on the right side of input-field (or left side if base html element has direction:rtl).",
            "jp": " スピン ボタンが入力フィールドの右側に置かれます (基本 HTML 要素が direction:rtl を持つ場合は左側)。"
          }
        }
      ]
    },
    "currencySymbol": {
      "type": "unknown",
      "defaultValue": null,
      "description": {
        "en": "",
        "jp": ""
      },
      "valueOptions": null
    },
    "dataMode": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": " Sets gets type of value returned by the get of value() method. That also affects functionality of the set value(val) method and the copy/paste operations of browser.",
        "jp": " value() メソッドの get によって返された値のタイプを設定・取得します。また、value(val) メソッドの set の機能や、ブラウザーのコピー/貼り付け操作にも影響します。"
      },
      "valueOptions": [
        {
          "name": "double",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of double and if value is not set, then the null or Number.NaN is used depending on the option 'nullable'. Note: that is used as default.",
            "jp": " double の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または Number.NaN が使用されます。注: それはデフォルトとして使用されます。"
          }
        },
        {
          "name": "float",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of float and if value is not set, then the null or Number.NaN is used depending on the option 'nullable'.",
            "jp": " float の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または Number.NaN が使用されます。"
          }
        },
        {
          "name": "long",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of signed long and if value is not set, then the null or 0 is used depending on the option 'nullable'. ",
            "jp": " 符号付き long の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。 "
          }
        },
        {
          "name": "ulong",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of unsigned long and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号なし long の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        },
        {
          "name": "int",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of signed int and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号付き int の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        },
        {
          "name": "uint",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of unsigned int and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号なし int の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        },
        {
          "name": "short",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of signed short and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号付き short の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        },
        {
          "name": "ushort",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of unsigned short and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号なし short の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        },
        {
          "name": "sbyte",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of signed byte and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号付き byte の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        },
        {
          "name": "byte",
          "type": "string",
          "description": {
            "en": " the Number object is used with limits of unsigned byte and if value is not set, then the null or 0 is used depending on the option 'nullable'.",
            "jp": " 符号なし byte の制限を持つ Number オブジェクトが使用されます。値が設定されていない場合は「nullable」オプションによって、null または 0 が使用されます。"
          }
        }
      ]
    },
    "decimalSeparator": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the character, which is used as decimal separator.<br>    Note: this option has priority over possible regional settings. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "小数点記号として使用する文字を取得または設定します。<br>    注: このオプションは可能な地域の設定よりも優先されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "disabled": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Sets the disabled attribute.Does not allow editing. Disables all the buttons and iteracitons applied. On submit the current value is not sent into the request",
        "jp": "disabled 属性を設定します。編集を許可しません。すべてのボタンおよび適用される操作を無効にします。送信において現在の値が要求に送られません。"
      },
      "valueOptions": null
    },
    "groups": {
      "type": "array",
      "defaultValue": null,
      "description": {
        "en": "(array of number objects) Sets gets the number of digits in integer part of number, which are divided into groups.<br>    The \"groupSeparator\" is inserted between groups.<br>    If the sum of all values in array is smaller than the length of integer part, then the last item in array is used for all following groups.<br>    Count of groups starts from the decimal point (from right to left).<br>    That option has effect only in display mode(no focus).<br>    Note: this option has priority over possible regional settings. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "(数値オブジェクトの配列) グループに分けられる数の整数部分の桁数を取得または設定します。<br>    グループ間には \"groupSeparator\" が挿入されます。<br>    配列内のすべての値の和が整数部分の長さよりも小さい場合、配列の最後の項目を以降のすべてのグループに使用します。<br>    グループのカウントは、小数点から (右から左へ) 始まります。<br>    このオプションは、表示モード (フォーカスなし) の場合のみ効果があります。<br>    注: このオプションは可能な地域の設定よりも優先されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "groupSeparator": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the character, which is used as separator for groups (like thousands).<br>    That option has effect only in display mode(no focus).<br>    Note: this option has priority over possible regional settings. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "グループ (千の位など) のセパレーターとして使用する文字を取得または設定します。<br>    このオプションは、表示モード (フォーカスなし) の場合のみ効果があります。<br>    注: このオプションは可能な地域の設定よりも優先されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "height": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "",
        "jp": ""
      },
      "valueOptions": [
        {
          "name": null,
          "type": "string",
          "description": {
            "en": " The height can be set in pixels (px) and percentage (%).",
            "jp": " 高さをピクセル (px) またはパーセンテージ (%) に設定できます。"
          }
        },
        {
          "name": null,
          "type": "number",
          "description": {
            "en": " The height can be set as a number in pixels.",
            "jp": " 高さをピクセル単位の数値で設定できます。"
          }
        }
      ]
    },
    "locale": {
      "type": "object",
      "defaultValue": null,
      "description": {
        "en": "Sets gets strings used for title of buttons. Value of object should contain pairs or key:value members. Note: any sub-option of locale can appear within the main option of igEditor. In this case those values within main options will have highest priority and override corresponding value in locale.",
        "jp": "ボタンのタイトルに使用する文字列を取得または設定します。オブジェクトの値は一組の値またはキーの値メンバーを含む必要があります。注:ロケールのサブオプションは igEditor のメイン オプションに表示されますこのケースではメインオプションの中の値は最優先でロケールに対応する値をオーバーライドします。"
      },
      "valueOptions": null
    },
    "maxDecimals": {
      "type": "number",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the maximum number of decimal places which are used in display mode(no focus).<br>    Note: this option has priority over possible regional settings. <br>    Note: In case of min decimals value higher than max decimals - max decimals are equaled to min decimals property. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "表示モード (フォーカスなし) の場合に使用する小数点以下の最大桁数を取得または設定します。<br>    注: このオプションは可能な地域の設定よりも優先されます。<br>     注: 小数点の最小値は小数点の最大値より大きい場合、最大値は最小値に設定されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "maxLength": {
      "type": "unknown",
      "defaultValue": null,
      "description": {
        "en": "Removed from numeric editor options",
        "jp": "数値エディター オプションから削除されました。"
      },
      "valueOptions": null
    },
    "maxValue": {
      "type": "number",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the maximum value which can be entered in editor by end user.",
        "jp": "エンドユーザーがエディターに入力できる最大値を取得または設定します。"
      },
      "valueOptions": null
    },
    "minDecimals": {
      "type": "number",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the minimum number of decimal places which are used in display (no focus) state.<br>    If number of digits in fractional part of number is less than the value of this option, then the \"0\" characters are used to fill missing digits.<br>    Note: This option has priority over possible regional settings. <br>    Note: In case of min decimals value higher than max decimals - max decimals are equaled to min decimals property. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "表示状態 (フォーカスなし) の場合に使用する小数点以下の最小桁数を取得または設定します。<br>    数の小数部分の桁数がこのオプションの値より小さい場合、足りない桁を文字 0 で埋めます。<br>    注: このオプションは使用可能な地域設定よりも優先されます。<br>     注: 小数点の最小値は小数点の最大値より大きい場合、最大値は最小値に設定されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "minValue": {
      "type": "number",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the minimum value which can be entered in editor by end user.",
        "jp": "エンドユーザーがエディターに入力できる最小値を取得または設定します。"
      },
      "valueOptions": null
    },
    "negativePattern": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the string, which is used as negative pattern. The \"n\" flag represents the value of number. The \"-\" and \"()\" flags are static part of pattern.<br>    Note: This option has priority over possible regional settings. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "負の数パターンとして使用する文字列を取得または設定します。\"n\" フラグは数値を表します。「-」 および 「()」 フラグはパターンの静的な部分です。<br>    注: このオプションは使用可能な地域設定よりも優先されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "negativeSign": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "Sets gets the character, which is used as negative sign.<br>    Note: This option has priority over possible regional settings. <br>    Note: Even if the default value is null - if internationalization file is provided and it contains default values for those properties the values are imlicitly set.",
        "jp": "負の数記号として使用する文字を取得または設定します。<br>    注: このオプションは使用可能な地域設定よりも優先されます。<br>     注: デフォルト値が null であっても、- 国際化ファイルがあり、そのプロパティのデフォルト値が設定される場合、値は暗示的に設定されます。"
      },
      "valueOptions": null
    },
    "nullValue": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": " Sets gets the representation of null value. In case of default the value for the input is set to null, which makes the input to hold an empty string",
        "jp": " null 値の表現を取得または設定します。デフォルトの場合、入力の値は null に設定され、入力が空文字列を保持します。"
      },
      "valueOptions": []
    },
    "placeHolder": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "Sets gets text which appears in editor when editor has no focus and \"value\" in editor is null or empty string.",
        "jp": "エディターがフォーカスを持たず、エディター内の value が null または空の文字列ときのエディターに表示されるテキストを取得または設定します。"
      },
      "valueOptions": null
    },
    "positivePattern": {
      "type": "unknown",
      "defaultValue": null,
      "description": {
        "en": "",
        "jp": ""
      },
      "valueOptions": null
    },
    "readOnly": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Sets the readonly attribute.Does not allow editing. Disables all the buttons and iteracitons applied. On submit the current value is sent into the request.",
        "jp": "読み取り専用 attribute.Does を編集不可に設定します。すべてのボタンおよび適用される操作を無効にします。送信において現在の値が要求に送られます。"
      },
      "valueOptions": null
    },
    "regional": {
      "type": "object",
      "defaultValue": null,
      "description": {
        "en": "Sets gets custom regional settings for editor. If it is string, then $.ig.regional[stringValue] is assumed.",
        "jp": "エディターのカスタムの地域設定を取得または設定します。文字列の場合、$.ig.regional[stringValue] を仮定します。"
      },
      "valueOptions": null
    },
    "revertIfNotValid": {
      "type": "bool",
      "defaultValue": true,
      "description": {
        "en": "Sets the editor to revert value to previous value in case of not valid value on blur, or enter key. If set to false clear is called.",
        "jp": "ぼかしまたは Enter キーの押しでエディターの値が無効な場合、以前の値に戻すことを設定します。False に設定される場合、clear は呼び出されます。"
      },
      "valueOptions": null
    },
    "selectionOnFocus": {
      "type": "string",
      "defaultValue": "selectAll",
      "description": {
        "en": "type=\"selectAll|atStart|atEnd|browserDefault Set the action when the editor gets focused. The default value is selectAll.<br>     selectAll type=\"string\" Setting this option will select all the text into the editor when the edit mode gets enetered.<br>     atStart type=\"string\" Setting this option will move the cursor at the begining the text into the editor when the edit mode gets enetered.<br>     atEnd type=\"string\" Setting this option will move the cursor at the end the text into the editor when the edit mode gets enetered.<br>     browserDefault type=\"string\" Setting this option won't do any extra logic, but proceed with browser default behavior.",
        "jp": "type=\"selectAll|atStart|atEnd|browserDefault\" エディターがフォーカスを取得したときの動作を設定します。デフォルト値は selectAll です。<br>     selectAll type=\"string\" このオプションを設定すると、エディター モードに入ったときにエディターのすべてのテキストを選択します。<br>     atStart type=\"string\" このオプションを設定すると、エディター モードに入ったときにエディターのテキストの初めにカーソルを移動します。<br>     atEnd type=\"string\" このオプションを設定すると、エディター モードに入ったときにエディターのテキストの最後にカーソルを移動します。<br>     browserDefault type=\"string\" このオプションの設定に追加のロジックはありませんが、ブラウザーのデフォルトの動作で処理されます。"
      },
      "valueOptions": null
    },
    "spinDelta": {
      "type": "number",
      "defaultValue": 1.0,
      "description": {
        "en": "Sets gets delta-value which is used to increment or decrement value in editor on spin events. If value is set to negative value an exception is thrown. Non integer value is supported only for dataMode double and float.",
        "jp": "スピン イベント発生時にエディター内の値の増減に使用するデルタ値を取得および設定します。値が負の数に設定される場合、例外は発生されます。整数値以外の値は double および float の dataMode のみにサポートされます。"
      },
      "valueOptions": null
    },
    "spinWrapAround": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Sets gets ability to automatically set value in editor to opposite limit, when spin action reached minimum or maximum limit.",
        "jp": "スピン アクションで最小値または最大値に達した場合に、エディターで自動的に値を反対の限度に設定する機能を取得または設定します。"
      },
      "valueOptions": null
    },
    "suppressNotifications": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Disables default notifications for basic validation scenarios built in the editors such as required list selection, value wrapping around or spin limits.",
        "jp": "エディターのビルトイン基本検証シナリオで、必須リスト選択、値ラッピング、スピン制限などのデフォルトの通知を無効にします。"
      },
      "valueOptions": null
    },
    "validatorOptions": {
      "type": "object",
      "defaultValue": null,
      "description": {
        "en": "Sets gets options supported by the igValidator widget.<br>    Note: Validation rules of igValidator, such as min and max value/length are applied separately triggering errors, <br>                while similar options of the editor work to prevent wrong values from being entered.",
        "jp": "igValidator ウィジェットによってサポートされるオプションを設定または取得します。<br>    注: エラーをトリガーした際に igValidator の検証ルールは最小値/長さおよび最大値/長さを別々に適用します。<br>                エディターの同様のオプションは、誤った値が入力されるのを防止します。"
      },
      "schemaRef": "validator"
    },
    "value": {
      "type": "object",
      "defaultValue": null,
      "description": {
        "en": "Gets sets value in editor. The effect of setting/getting that option depends on type of editor and on dataMode options for every type of editor.",
        "jp": "エディター内の値を取得または設定します。エディターのタイプおよび各エディター タイプの dataMode オプションに基づいたオプションを取得または設定する効果。"
      },
      "valueOptions": null
    },
    "width": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "",
        "jp": ""
      },
      "valueOptions": [
        {
          "name": null,
          "type": "string",
          "description": {
            "en": " The widget width can be set in pixels (px) and percentage (%).",
            "jp": " ウィジェットの幅をピクセル (px) またはパーセンテージ (%) に設定できます。"
          }
        },
        {
          "name": null,
          "type": "number",
          "description": {
            "en": " The widget width can be set as a number in pixels.",
            "jp": " ウィジェットの幅は数値としてピクセルで設定できます。"
          }
        }
      ]
    }
  }
}
