{
    "overview": null,
    "name": "ui.igGridHiding",
    "title": "Column Hiding",
    "category": null,
    "visual": true,
    "events": {
        "columnChooserButtonApplyClick": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired when button Apply in column chooser is clicked<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.<br>   Use ui.columnsToShow to get array of columns identifiers which should be shown<br>   Use ui.columnsToHide to get array of columns identifiers which should be hidden",
                "jp": "列選択の [適用] ボタンがクリックされたときに発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。<br>   ui.columnsToShow を使用して表示する列識別子の配列を取得します。<br>   ui.columnsToHide を使用して非表示にする列識別子の配列を取得します。"
            }
        },
        "columnChooserButtonResetClick": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired when button Reset in column chooser is clicked<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列セレクターの Reset ボタンをクリックすると、イベントが開始します<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnChooserClosed": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired after the column chooser has been closed.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列選択が閉じた後に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnChooserClosing": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired before the column chooser is closed.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列選択が閉じる前に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnChooserContentsRendered": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired after the contents of the column chooser are rendered.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列選択のコンテンツが描画された後に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnChooserContentsRendering": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired before the contents of the column chooser are rendered.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列選択のコンテンツが描画される前に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnChooserMoving": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired every time the column chooser changes its position.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.<br>   Use ui.originalPosition to get the original position of the column chooser div as { top, left } object, relative to the page.<br>   Use ui.position to get the current position of the column chooser div as { top, left } object, relative to the page.",
                "jp": "列選択の位置が変わるたびに発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。<br>   ui.originalPosition を使用して、ページを基準とした列の選択 DIV の元の位置を { top, left } として取得します。<br>   ui.position を使用して、ページを基準とした列の選択 DIV の現在の位置を { top, left } として取得します。"
            }
        },
        "columnChooserOpened": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired after the column chooser is already opened.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列選択が既に開いた後に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnChooserOpening": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired before the column chooser is opened.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnChooserElement to get a reference to the Column Chooser element. This is a jQuery object.",
                "jp": "列チューザーが開く前に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnChooserElement を使用して、列の選択要素への参照を取得します。これは jQuery オブジェクトです。"
            }
        },
        "columnHidden": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired after the hiding has been executed and results are rendered.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnIndex to get the hidden column index. Has a value only if the column's key is a number.<br>   Use ui.columnKey to get the hidden column key. Has a value only if the column's key is a string.",
                "jp": "非表示が実行され結果が描画された後に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnIndex を使用して非表示の列インデックスを取得します。列のキーは数字の場合のみに値があります。<br>   ui.columnKey を使用して非表示の列キーを取得します。列のキーは文字列の場合のみに値があります。"
            }
        },
        "columnHiding": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired before a hiding operation is executed.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnIndex to get the hidden column index. Has a value only if the column's key is a number.<br>   Use ui.columnKey to get the hidden column key. Has a value only if the column's key is a string.",
                "jp": "非表示操作が実行される前に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnIndex を使用して非表示の列インデックスを取得します。列のキーは数字の場合のみに値があります。<br>   ui.columnKey を使用して非表示の列キーを取得します。列のキーは文字列の場合のみに値があります。"
            }
        },
        "columnShowing": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired before a showing operation is executed.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnIndex to get the shown column index.<br>   Use ui.columnKey to get the shown column key.",
                "jp": "表示操作が実行される前に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnIndex を使用して表示されている列インデックスを取得します。<br>   ui.columnKey を使用して表示されている列キーを取得します。"
            }
        },
        "columnShown": {
            "cancellable": false,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired after the showing has been executed and results are rendered.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnIndex to get the shown column index.<br>   Use ui.columnKey to get the shown column key.",
                "jp": "表示が実行され結果が描画された後に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   ui.columnIndex を使用して表示されている列インデックスを取得します。<br>   ui.columnKey を使用して表示されている列キーを取得します。"
            }
        },
        "multiColumnHiding": {
            "cancellable": true,
            "args": [
                {
                    "name": "evt",
                    "type": "Event",
                    "optional": false
                },
                {
                    "name": "ui",
                    "type": "Object",
                    "optional": false
                }
            ],
            "description": {
                "en": "event fired before a hiding operation is executed.<br>   The handler function takes arguments evt and ui.<br>   Use ui.owner to get the reference to the igGridHiding widget.<br>   Use ui.owner.grid to get the reference to the igGrid widget.<br>   Use ui.columnKeys to get array of the hidden column keys.",
                "jp": "非表示操作が実行される前に発生するイベント。<br>   ハンドラー関数は引数 evt および ui を取得します。<br>   igGridHiding ウィジェットへの参照を取得するには ui.owner を使用します。<br>   ui.owner.grid を使用して、igGrid ウィジェットへの参照を取得します。<br>   非表示される列キーの配列を取得するには ui.columnKeys を使用します。"
            }
        }
    },
    "properties": {
        "name": {
            "type": "string",
            "defaultValue": null
        },
        "columnChooserAnimationDuration": {
            "type": "number",
            "defaultValue": 200.0,
            "description": {
                "en": "Specifies time of milliseconds for animation duration to show/hide modal dialog",
                "jp": "モーダル ダイアログを表示/非表示にするためにアニメーション期間のミリ秒の時間を指定します。"
            }
        },
        "columnChooserButtonApplyText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "Specifies text of button which apply changes in modal dialog",
                "jp": "モーダル ダイアログで変更を適用するボタンのテキストを指定します。"
            }
        },
        "columnChooserButtonCancelText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "Specifies text of button which cancel changes in modal dialog",
                "jp": "モーダル ダイアログで変更をキャンセルするボタンのテキストを指定します。"
            }
        },
        "columnChooserCaptionText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "The caption of the column chooser dialog.",
                "jp": "列チューザー ダイアログのキャプション。"
            }
        },
        "columnChooserContainment": {
            "type": "string",
            "defaultValue": "owner",
            "description": {
                "en": "Controls containment behavior. <br>                owner  The column chooser dialog will be draggable only in the grid area<br>                window  The column chooser dialog will be draggable in the whole window area",
                "jp": "コンテインメント動作を制御します。<br>    owner  列選択ダイアログはグリッド領域のみにドラッグ可能です。<br>                列選択ダイアログはウィンドウ領域の全体にドラッグ可能です。"
            },
            "valueOptions": [
                {
                    "name": "owner",
                    "type": "string",
                    "description": {
                        "en": "The column chooser dialog will be draggable only in the grid area",
                        "jp": "列選択ダイアログはグリッド領域のみにドラッグ可能です。"
                    }
                },
                {
                    "name": "window",
                    "type": "string",
                    "description": {
                        "en": "The column chooser dialog will be draggable in the whole window area",
                        "jp": "列選択ダイアログはウィンドウ領域の全体にドラッグ可能です。"
                    }
                }
            ]
        },
        "columnChooserDisplayText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "The text used in the drop down tools menu(Feature Chooser) to launch the column chooser dialog.",
                "jp": "列チューザー ダイアログを開始するために、ドロップ ダウンのツール メニュー (機能選択) で使用されるテキスト。"
            }
        },
        "columnChooserHeight": {
            "type": "number",
            "defaultValue": "",
            "description": {
                "en": "The default column chooser height in pixels.",
                "jp": "デフォルトの列セレクターの高さ (ピクセル)。"
            }
        },
        "columnChooserHideOnClick": {
            "type": "bool",
            "defaultValue": false,
            "description": {
                "en": "Specifies on click show/hide directly to be shown/hidden columns. If columnChooserHideOnClick is false then Apply and Cancel Buttons are shown on the bottom of modal dialog. Columns are Shown/Hidden after the Apply button is clicked",
                "jp": "列を表示/非表示にするためにクリックして直接表示するか、それとも非表示にするかを指定します。columnChooserHideOnClick が false の場合、適用ボタンとキャンセルボタンがモーダル ダイアログの下側に表示されます。適用ボタンがクリックされた後で列が表示/非表示になります。"
            }
        },
        "columnChooserHideText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "The text used in the column chooser to hide column",
                "jp": "列を非表示にするために列チューザーで使用されるテキスト"
            }
        },
        "columnChooserResetButtonLabel": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "Text label for reset button.",
                "jp": "リセット ボタン用のテキストラベル。"
            }
        },
        "columnChooserShowText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "The text used in the column chooser to show column",
                "jp": "列を表示するために列チューザーで使用されるテキスト"
            }
        },
        "columnChooserWidth": {
            "type": "number",
            "defaultValue": 350.0,
            "description": {
                "en": "The default column chooser width in pixels.",
                "jp": "デフォルトの列セレクターの幅 (ピクセル)。"
            }
        },
        "columnHideText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "The text used in the drop down tools menu(Feature Chooser) to hide a column.",
                "jp": "列を非表示にするために、ドロップ ダウンのツール メニュー (機能選択) で使用されるテキスト。"
            }
        },
        "columnSettings": {
            "type": "array",
            "defaultValue": null,
            "description": {
                "en": "A list of column settings that specifies hiding options on a per column basis.",
                "jp": "非表示オプションを列ごとに指定する列設定のリスト。"
            },
            "schema": {
                "columnKey": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "Specifies the column key of the hidden column",
                        "jp": "非表示された列の列キーを指定します。"
                    },
                    "required": true
                },
                "columnIndex": {
                    "type": "number",
                    "defaultValue": null,
                    "description": {
                        "en": "Column index can be used in place of column key. The preferred way of populating a column setting is to always use the column keys as identifiers.",
                        "jp": "列インデックスは列キーの代わりに使用できます。列設定の生成には列を常に識別子として使用することを推奨します。"
                    }
                },
                "allowHiding": {
                    "type": "bool",
                    "defaultValue": true,
                    "description": {
                        "en": "Allows the column to be hidden.",
                        "jp": "列の非表示を許可します。"
                    }
                },
                "hidden": {
                    "type": "bool",
                    "defaultValue": false,
                    "description": {
                        "en": "Sets the initial visibility of the column.",
                        "jp": "列の初期表示状態 (表示/非表示) を設定します。"
                    }
                }
            }
        },
        "dropDownAnimationDuration": {
            "type": "number",
            "defaultValue": 500.0,
            "description": {
                "en": "The duration of the dropdown animation in milliseconds.",
                "jp": "ドロップダウン アニメーションの時間 (ミリ秒)。"
            }
        },
        "hiddenColumnIndicatorHeaderWidth": {
            "type": "number",
            "defaultValue": 7.0,
            "description": {
                "en": "The width in pixels of the hidden column indicator in the header.",
                "jp": "ヘッダー内の非表示の列インジケーターの幅 (ピクセル)。"
            }
        },
        "hiddenColumnIndicatorTooltipText": {
            "type": "string",
            "defaultValue": "",
            "description": {
                "en": "The text displayed in the tooltip of the hidden column indicator.",
                "jp": "非表示の列インジケーターのツールチップに表示されるテキスト。"
            }
        }
    }
}
