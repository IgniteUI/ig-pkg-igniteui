{
  "overview": null,
  "name": "ui.igLayoutManager",
  "category": null,
  "visual": true,
  "events": {
    "internalResized": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired after items are resized.<br>                Use ui.owner to get a reference to the layout manager performing resizing.",
		"jp": "項目がサイズ変更された後に発生するイベント。<br>                ui.owner を使用して、サイズ変更を実行するレイアウト マネージャーへの参照を取得します。"
	}
    },
    "internalResizing": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired before items are resized.<br>                Use ui.owner to get a reference to the layout manager performing resizing.",
		"jp": "項目がサイズ変更される前に発生するイベント。<br>                ui.owner を使用して、サイズ変更を実行するレイアウト マネージャーへの参照を取得します。"
	}
    },
    "itemRendered": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired after an item has been rendered in the container<br>    Function takes arguments evt and ui.<br>    Use ui.owner to get reference to the igLayoutManager.<br>    Use ui.itemData to get a reference of item's settings, such as colspan ,rowspan, etc. <br>    use ui.index to get a reference of the item's index, if the layout is flow or vertical",
		"jp": "項目がコンテナーに描画された後に発生したイベント。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、igLayoutManager への参照を取得します。<br>    ui.itemData を使用して、colspan、rowspan などの項目の設定への参照を取得します。<br>    ui.index を使用して、レイアウトがフローまたは垂直の場合、項目のインデックスへの参照を取得します。"
	}
    },
    "itemRendering": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired before an item is rendered in the container<br>    Function takes arguments evt and ui.<br>    Use ui.owner to get reference to the igLayoutManager.<br>    Use ui.itemData to get a reference of item's settings, such as colspan ,rowspan, etc. <br>    use ui.index to get a reference of the item's index, if the layout is flow or vertical",
		"jp": "項目がコンテナーに描画される前に発生したイベント。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、igLayoutManager への参照を取得します。<br>    ui.itemData を使用して、colspan、rowspan などの項目の設定への参照を取得します。<br>    ui.index を使用して、レイアウトがフローまたは垂直の場合、項目のインデックスへの参照を取得します。"
	}
    },
    "rendered": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired after all items are rendered.<br>                Function takes arguments evt and ui.<br>    Use ui.owner to get reference to the igLayoutManager.",
		"jp": "すべての項目が描画された後に発生するイベント。<br>                関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、igLayoutManager への参照を取得します。"
	}
    }
  },
  "properties": {
    "borderLayout": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "options specific to a border layout",
		"jp": "境界線レイアウトのオプション。"
	},
      "schema": {
        "leftWidth": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "width of the left area",
		"jp": "左の領域の幅。"
	}
        },
        "rightWidth": {
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "width of the right area",
		"jp": "右の領域の幅。"
	}
        },
        "showHeader": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "specifies header visibility",
		"jp": "ヘッダーの表示状態を指定します"
	}
        },
        "showFooter": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "specifies footer visibility",
		"jp": "フッターの表示状態を指定します"
	}
        },
        "showLeft": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "specifies left area visibility",
		"jp": "左の領域の表示状態を指定します"
	}
        },
        "showRight": {
          "type": "bool",
          "defaultValue": true,
          "description": {
		"en": "specifies right area visibility",
		"jp": "右の領域の表示状態を指定します"
	}
        }
      }
    },
    "height": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "height of the layout container",
		"jp": "レイアウト コンテナーの高さ。"
	}
    },
    "itemCount": {
      "type": "number",
      "defaultValue": null,
      "description": {
		"en": "number of items to render, this is only applicable to layouts: vertical and flow",
		"jp": "描画する項目の数。これは垂直レイアウトおよびフロー レイアウトのみに適用します。"
	}
    },
    "items": {
      "type": "array",
      "defaultValue": null,
      "description": {
		"en": "an array of item descriptions <br>    this assumes the container is empty, and every item<br>    is described by rowspan,colspan, etc. - otherwise values of<br>    1 are assumed<br>    items can have various properties some of which may not be applicable<br>    depending on the layoutMode.<br>    for example rowSpan/colSpan/colIndex/rowIndex are only applicable to gridlayout",
		"jp": "項目説明の配列。<br>    コンテナーが空で、各項目は<br>    rowspan、colspan などによって説明される前提条件があります。それ以外の場合、<br>    1 の値を設定します。<br>    layoutMode に基づいて、項目のプロパティを適用しない<br>    可能性があります。<br>    たとえば、rowSpan/colSpan/colIndex/rowIndex は gridlayout のみに適用されます。"
	},
      "schema": {
        "width": {
          "required": true,
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "item width",
		"jp": "項目の幅"
	}
        },
        "height": {
          "required": true,
          "type": "string",
          "defaultValue": null,
          "description": {
		"en": "item height",
		"jp": "項目の高さ"
	}
        },
        "rowSpan": {
          "type": "number",
          "defaultValue": 1,
          "description": {
		"en": "item row span - number of rows in a grid layout to span",
		"jp": "項目の行スパン - グリッド レイアウトでスパンする行の数"
	}
        },
        "colSpan": {
          "type": "number",
          "defaultValue": 1,
          "description": {
		"en": "item column span - number of columns in a grid layout to span",
		"jp": "項目の列スパン - グリッド レイアウトでスパンする列の数"
	}
        },
        "rowIndex": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "row position",
		"jp": "行の位置"
	}
        },
        "colIndex": {
          "type": "number",
          "defaultValue": 0,
          "description": {
		"en": "column position",
		"jp": "列の位置"
	}
        }
      }
    },
    "layoutMode": {
	  "hidden": true,
      "type": "string",
      "defaultValue": "border",
      "description": {
		"en": "Defines border layout",
		"jp": "境界線のレイアウトを定義します"
	}
    },
    "width": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "width of the layout container",
		"jp": "レイアウト コンテナーの幅"
	}
    }
  }
}
