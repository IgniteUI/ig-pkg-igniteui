{
  "overview": null,
  "name": "ui.igRadialGauge",
  "category": null,
  "visual": true,
  "events": {
    "alignLabel": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Event which is raised when a label of the gauge is aligned along the scale.<br>&nbsp;Function takes first argument null and second argument ui.<br>&nbsp;Use ui.owner to obtain reference to gauge widget.<br>&nbsp;Use ui.actualMinimumValue to obtain the mimimum value of gauge scale.<br>&nbsp;Use ui.actualMaximumValue to obtain the maximum value of gauge scale.<br>&nbsp;Use ui.startAngle to obtain the starting angle of gauge scale.<br>&nbsp;Use ui.endAngle to obtain the ending angle of gauge scale.<br>&nbsp;Use ui.angle to obtain the angle on the gauge scale at which the label will be located.<br>&nbsp;Use ui.value to obtain the value on the gauge scale associated with the label.<br>&nbsp;Use ui.label to obtain the string value of the label.<br>&nbsp;Use ui.width to obtain the width of the label.<br>&nbsp;Use ui.height to obtain the height of the label.<br>&nbsp;Use ui.offsetX to obtain the X offset of the label on the gauge scale.<br>&nbsp;Use ui.offsetY to obtain the Y offset of the label on the gauge scale."
    },
    "formatLabel": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Event which is raised when a label of the gauge is formatted.<br>&nbsp;Function takes first argument null and second argument ui.<br>&nbsp;Use ui.owner to obtain reference to gauge widget.<br>&nbsp;Use ui.actualMinimumValue to obtain the mimimum value of gauge scale.<br>&nbsp;Use ui.actualMaximumValue to obtain the maximum value of gauge scale.<br>&nbsp;Use ui.startAngle to obtain the starting angle of gauge scale.<br>&nbsp;Use ui.endAngle to obtain the ending angle of gauge scale.<br>&nbsp;Use ui.angle to obtain the angle on the gauge scale at which the label will be located.<br>&nbsp;Use ui.value to obtain the value on the gauge scale associated with the label.<br>&nbsp;Use ui.label to obtain the string value of the label."
    }
  },
  "properties": {
    "width": {
      "type": "string",
      "defaultValue": null,
      "description": "The width of the gauge. It can be set as a number in pixels, string (px) or percentage (%)."
    },
	"height": {
      "type": "string",
      "defaultValue": null,
      "description": "The height of the gauge. It can be set as a number in pixels, string (px) or percentage (%)."
    },
    "backingBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use to fill the backing of the gauge."
    },
    "backingCornerRadius": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the corner rounding radius to use for the fitted scale backings."
    },
    "backingInnerExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the inner extent of the gauge backing."
    },
    "backingOuterExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the outer extent of the gauge backing."
    },
    "backingOutline": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use for the outline of the backing."
    },
    "backingOversweep": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the oversweep degrees to apply to the backing if it is displaying fitted (in degrees). Must be greater or equal to 0."
    },
    "backingShape": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the type of shape to use for the backing of the gauge.",
      "valueOptions": [
        {
          "name": "circular",
          "type": "string",
          "description": "Circular shape is used for the backing of the gauge"
        },
        {
          "name": "fitted",
          "type": "string",
          "description": "Fitted shape is used for the backing of the gauge"
        }
      ]
    },
    "backingStrokeThickness": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the stroke thickness of the backing outline."
    },
    "centerX": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the x position of the center of the gauge with the value ranging from 0 to 1."
    },
    "centerY": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the y position of the center of the gauge with the value ranging from 0 to 1."
    },
    "duplicateLabelOmissionStrategy": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the strategy to use for ommitting labels if the first and last label have the same value.",
      "valueOptions": [
        {
          "name": "omitLast",
          "type": "string",
          "description": "If the first and last labels have the same value, the last is omitted"
        },
        {
          "name": "omitFirst",
          "type": "string",
          "description": "If the first and last labels have the same value, the first is omitted"
        },
        {
          "name": "omitNeither",
          "type": "string",
          "description": "If the first and last labels have the same value, the both are kept"
        },
        {
          "name": "omitBoth",
          "type": "string",
          "description": "If the first and last labels have the same value, the both are ommitted"
        }
      ]
    },
    "font": {
      "type": "unknown",
      "defaultValue": null,
      "description": ""
    },
    "fontBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use for the label font."
    },
    "interval": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the interval to use for the scale."
    },
    "labelExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to put the labels as a value from 0 to 1, measured form the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "labelInterval": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the interval to use for rendering labels. This defaults to be the same interval as the tickmarks on the scale."
    },
    "maximumValue": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the maximum value of the scale."
    },
    "minimumValue": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the minimum value of the scale."
    },
    "minorTickBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use for the minor tickmarks."
    },
    "minorTickCount": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the number of minor tickmarks to place between major tickmarks."
    },
    "minorTickEndExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to stop rendering the minor tickmarks as a value from 0 to 1, measured from the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "minorTickStartExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to start rendering the minor tickmarks as a value from 0 to 1, measured from the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "minorTickStrokeThickness": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the stroke thickness to use when rendering minor ticks."
    },
    "needleBaseFeatureExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the extent of the feature which is closest to the base (e.g. a bulb) with a value from -1 to 1. Note: Only some needle shapes respect this property.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleBaseFeatureWidthRatio": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the width of the needle at its feature which is closest to the base (e.g. a bulb) with a value from 0 to 1. Note: Only some needle shapes respect this property.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use when rendering the fill of the needle."
    },
    "needleEndExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the extent (from -1 to 1) at which to end rendering the needle, measured from the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleEndWidthRatio": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the width of the needle at its point using a value from (0 to 1). Note: Only some needle shapes respect this property.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleOutline": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use when rendering the outline of the needle."
    },
    "needlePivotBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use for filling the needle cap. Note: this only applies to certain cap shapes."
    },
    "needlePivotInnerWidthRatio": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the width of the inner cutout section of the needle cap with a value from 0 to 1. Note: Will only take effect if you have a cap set on the needle that has a cutout section."
    },
    "needlePivotOutline": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use for the outlines of the needle cap."
    },
    "needlePivotShape": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the shape to use for the needle cap.",
      "valueOptions": [
        {
          "name": "none",
          "type": "string",
          "description": "No shape is used for the needle cap"
        },
        {
          "name": "circle",
          "type": "string",
          "description": "Circle shape is used for the needle cap"
        },
        {
          "name": "circleWithHole",
          "type": "string",
          "description": "Circle with a hole is used for the needle cap"
        },
        {
          "name": "circleOverlay",
          "type": "string",
          "description": "Circle overlay is used for the needle cap"
        },
        {
          "name": "circleOverlayWithHole",
          "type": "string",
          "description": "Circle overlay with a hole is used for the needle cap"
        },
        {
          "name": "circleUnderlay",
          "type": "string",
          "description": "Circle underlay shape is used for the needle cap"
        },
        {
          "name": "circleUnderlayWithHole",
          "type": "string",
          "description": "Circle underlay with a hole is used for the needle cap"
        }
      ]
    },
    "needlePivotStrokeThickness": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "GEts or sets the stroke thickness to use for the outline of the needle cap."
    },
    "needlePivotWidthRatio": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets hte width of the cap of the needle with a value from 0 to 1. Note: Will only take effect if you have a cap set on the needle.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needlePointFeatureExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the extent of the feature which is closest to the point (e.g. the tapering point of a needle) with a value from -1 to 1. Note: Only some needle shapes respect this property.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needlePointFeatureWidthRatio": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the width of the needle at its feature which is closest to the point (e.g. the tapering point of a needle) with a value from 0 to 1. Note: Only some needle shapes respect this property.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleShape": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the shape to use when rendering the needle from a number of options.",
      "valueOptions": [
        {
          "name": "none",
          "type": "string",
          "description": "No shape is used when rendering the needle from a number of options."
        },
        {
          "name": "rectangle",
          "type": "string",
          "description": "Rectangle shape is used when rendering the needle from a number of options."
        },
        {
          "name": "triangle",
          "type": "string",
          "description": "Triangle shape is used when rendering the needle from a number of options."
        },
        {
          "name": "needle",
          "type": "string",
          "description": "Needle shape is used when rendering the needle from a number of options."
        },
        {
          "name": "trapezoid",
          "type": "string",
          "description": "Trapezoid shape is used when rendering the needle from a number of options."
        },
        {
          "name": "rectangleWithBulb",
          "type": "string",
          "description": "Rectangle with bulb shape is used when rendering the needle from a number of options."
        },
        {
          "name": "triangleWithBulb",
          "type": "string",
          "description": "Triangle with bulb shape is used when rendering the needle from a number of options."
        },
        {
          "name": "needleWithBulb",
          "type": "string",
          "description": "Needle with bulb shape is used when rendering the needle from a number of options."
        },
        {
          "name": "trapezoidWithBulb",
          "type": "string",
          "description": "Trapezoid with buld shape is used when rendering the needle from a number of options."
        }
      ]
    },
    "needleStartExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the extent (from -1 to 1) at which to start rendering the needle, measured from the center of the gauge. <br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleStartWidthRatio": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the width of the needle at its point using a value from (0 to 1). Note: Only some needle shapes respect this property.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "needleStrokeThickness": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the stroke thickness of the needle outline."
    },
    "radiusMultiplier": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the multiplying factor to apply to the normal radius of the gauge. <br>&nbsp;The radius of the gauge is defined by the minimum of the width and height of the control divided by 2.0. <br>&nbsp;This introduces a multiplicative factor to that value."
    },
    "rangeBrushes": {
      "type": "array",
      "defaultValue": null,
      "description": "Gets or sets a collection of brushes to be used as the palette for gauge ranges.<br>&nbsp;The value provided should be an array of css color strings or JavaScript objects defining gradients. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection.",
      "arrayMemberType": "string",
	  "schema": {
		"name": {
			"type": "string",
			"required": true,
			"defaultValue": null,
			"processValueOnly" : true,
			"description": "Name of the range brush"
		}
		},
		"designerDisplayProperty": "name"
    },
    "rangeOutlines": {
      "type": "array",
      "defaultValue": null,
      "description": "Gets or sets a collection of brushes to be used as the palette for gauge outlines.<br>&nbsp;The value provided should be an array of css color strings or JavaScript objects defining gradients. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection.",
      "arrayMemberType": "string",
	  	  "schema": {
			"name": {
			  "type": "string",
			  "required": true,
			  "defaultValue": null,
			  "processValueOnly" : true,
			  "description": "The value provided should be css color string or JavaScript object defining gradients. Optionally the first element can be a string reading \"RGB\" or \"HSV\" to specify the interpolation mode of the collection."
			}
		},
		"designerDisplayProperty": "name"
    },
    "ranges": {
      "type": "array",
      "defaultValue": null,
      "description": "Gets or sets the scale ranges to render on the linear gauge.",
      "schema": {
        "name": {
          "type": "string",
          "defaultValue": null,
          "description": "Name of the range"
        },
        "startValue": {
          "type": "number",
          "defaultValue": null,
          "description": "The start value of the range"
        },
        "endValue": {
          "type": "number",
          "defaultValue": null,
          "description": "The end value of the range"
        },
        "brush": {
          "type": "string",
          "defaultValue": null,
          "description": "Gets or sets the brush for the entire range."
        },
        "innerStartExtent": {
          "type": "number",
          "defaultValue": 0,
          "description": "Gets or sets the starting value of the inner extent of the range."
        },
        "innerEndExtent": {
          "type": "number",
          "defaultValue": 0,
          "description": "Gets or sets the ending value of the inner extent of the range."
        },
        "outline": {
          "type": "string",
          "defaultValue": null,
          "description": "Gets or sets the brush for the outline of the range."
        },
        "remove": {
          "type": "bool",
          "defaultValue": false,
          "description": "Gets or sets the flag used to determine if the range should be removed. If set to true, the range (if existing) is removed."
        },
        "strokeThickness": {
          "type": "number",
          "defaultValue": 0,
          "description": "Gets or sets the thickness of the range outline."
        }
      }
    },
    "scaleBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use to fill the brackground of the scale."
    },
    "scaleEndAngle": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the end angle for the scale in degrees."
    },
    "scaleEndExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to stop rendering the scale as a value from 0 to 1 measured from the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "scaleOversweep": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the extra degrees of sweep to apply to the scale background. Must be greater or equal to 0."
    },
    "scaleOversweepShape": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the over or shape to use for the excess fill area for the scale.",
      "valueOptions": [
        {
          "name": "auto",
          "type": "string",
          "description": "The excess fill area shape is set dynamically"
        },
        {
          "name": "circular",
          "type": "string",
          "description": "Circular shape is used for the excess fill area"
        },
        {
          "name": "fitted",
          "type": "string",
          "description": "Fitted shape is used for the excess fill area"
        }
      ]
    },
    "scaleStartAngle": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the start angle for the scale in degrees."
    },
    "scaleStartExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to start rendering the scale, measured from the center of the gauge as a value from 0 to 1.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "scaleSweepDirection": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the direction in which the scale sweeps around the center from the start angle to end angle.",
      "valueOptions": [
        {
          "name": "counterclockwise",
          "type": "string",
          "description": "Gets or sets anticlockwise direction"
        },
        {
          "name": "clockwise",
          "type": "string",
          "description": "Gets or sets clockwise direction"
        }
      ]
    },
    "tickBrush": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the brush to use for the major tickmarks."
    },
    "tickEndExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to stop rendering the major tickmarks as a value from 0 to 1, measured from the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "tickStartExtent": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the position at which to start rendering the major tickmarks as a value from 0 to 1, measured from the center of the gauge.<br>&nbsp;Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge."
    },
    "tickStrokeThickness": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the stroke thickness to use when rendering ticks."
    },
    "transitionDuration": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the number of milliseconds over which changes to the gauge should be animated."
    },
    "transitionEasingFunction": {
      "type": "string",
      "defaultValue": null,
      "description": "Gets or sets the easing function used to morph the current series."
    },
    "transitionProgress": {
      "type": "number",
      "defaultValue": 0.0,
      "description": ""
    },
    "value": {
      "type": "number",
      "defaultValue": 0.0,
      "description": "Gets or sets the value at which to point the needle of the gauge."
    }
  }
}