{
  "overview": null,
  "name": "ui.igGridGroupBy",
  "title": "Grouping",
  "category": null,
  "visual": true,
  "events": {
    "groupedColumnsChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event which is fired when the groupedColumns collection has changed. This event is fired also when group/ungroup from groupby modal dialog but key, layout and grid are not set<br>            use args.owner in order to access the groupby widget object<br>            use args.owner.grid to access the grid widget option<br>            use args.groupedColumns to get a reference to the current groupedColumns<br>            use args.key to get a reference to the current column's key that's being grouped<br>            use args.layout to get a reference to the current layout object, if any<br>            use args.grid to get a reference to the current child grid element, in case it's an hierarchical grid"
    },
    "groupedColumnsChanging": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Event which is fired when the grouped columns collection is about to change. This event is not fired when group/ungroup from groupby modal dialog<br>            use args.owner in order to access the groupby widget object<br>            use args.owner.grid to access the grid widget option<br>            use args.groupedColumns to get a reference to the current groupedColumns<br>            use args.key to get a reference to the current column's key that's being grouped<br>            use args.layout to get a reference to the current layout object, if any<br>            use args.grid to get a reference to the current child grid element, in case it's an hierarchical grid"
    },
    "modalDialogButtonApplyClick": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when the button is Apply is clicked.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object.<br>            Use ui.groupedColumns to get the array of grouped columns<br>            Use ui.groupedColumnLayouts to get array of column layouts<br>            Use ui.sortingExpr to get array of sorted columns"
    },
    "modalDialogButtonResetClick": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when reset button is clicked.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogClosed": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired after the modal dialog has been closed.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupBy widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogClosing": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired before the modal dialog is closed.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupBy widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogContentsRendered": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired after the contents of the modal dialog are rendered.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupBy widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogContentsRendering": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired before the contents of the modal dialog are rendered.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogGroupColumn": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when column in modal dialog is clicked to be grouped.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.key to get the key of the column to be grouped.<br>            Use args.groupedColumns to get a reference to the current groupedColumns<br>            Use ui.layout to get the layout of the columns"
    },
    "modalDialogGroupingColumn": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when column in modal dialog is clicked to be grouped.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.key to get the key of the column to be grouped.<br>            Use ui.layout to get the layout of the columns"
    },
    "modalDialogMoving": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Event fired every time the groupby dialog changes its position.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupBy widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the Column Chooser element. This is a jQuery object.<br>            Use ui.originalPosition to get the original position of the groupby dialog div as { top, left } object, relative to the page.<br>            Use ui.position to get the current position of the groupby dialog div as { top, left } object, relative to the page."
    },
    "modalDialogOpened": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired after the modal dialog is already opened.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupBy widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogOpening": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired before the modal dialog is opened.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupBy widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.modalDialogElement to get a reference to the modal dialog element. This is a jQuery object."
    },
    "modalDialogSortGroupedColumn": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when column in modal dialog is clicked to be ungrouped.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.key to get the key of the column to be grouped.<br>            Use ui.layout to get the layout of the columns<br>            Use ui.isAsc to get whether column should be sorted ascending or descending"
    },
    "modalDialogUngroupColumn": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when column in modal dialog is clicked to be ungrouped.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use args.groupedColumns to get a reference to the current groupedColumns<br>            Use ui.key to get the key of the column to be grouped.<br>            Use ui.layout to get the layout of the columns"
    },
    "modalDialogUngroupingColumn": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired when column in modal dialog is clicked to be ungrouped.<br>            The handler function takes arguments evt and ui.<br>            Use ui.owner to get the reference to the igGridGroupby widget.<br>            Use ui.owner.grid to get the reference to the igGrid widget.<br>            Use ui.key to get the key of the column to be grouped.<br>            Use ui.layout to get the layout of the columns"
    }
  },
  "properties": {
	"name": {
      "type": "string",
      "defaultValue": null
    },
    "collapseTooltip": {
      "type": "string",
      "defaultValue": "",
      "description": "specifies the collapse indicator tooltip for grouped rows"
    },
    "columnSettings": {
      "type": "array",
      "defaultValue": null,
      "description": "Get sets settings for individual columns such as whether the grid is grouped by that column or grouping is allowed for that column.",
      "schema": {
        "allowGrouping": {
          "type": "bool",
          "defaultValue": true,
          "description": "Enables/disables a column to participate in grouping. By default all columns can be grouped"
        },
        "isGroupBy": {
          "type": "false",
          "defaultValue": true,
          "description": "Specifies if a column should be grouped by default"
        },
        "groupComparerFunction": {
          "type": "function",
          "defaultValue": null,
          "description": "Specifies a custom group by function, which accepts the column setting, the first and the second value to compare and returns bool"
        },
        "groupLabelFormatter": {
          "type": "function",
          "defaultValue": null,
          "description": "Reference to a function which will be used for formatting the cell values. The function should accept a value from the grouped column and return the new formatted value in the label of the row."
        },
        "summaries": {
          "type": "array",
          "defaultValue": true,
          "description": "Enables/disables a column to participate in grouping. By default all columns can be grouped",
          "schema": {
            "summaryFunction": {
              "type": "string",
              "defaultValue": "avg",
              "description": "Specifies summary function",
              "valueOptions": [
                {
                  "name": "avg",
                  "type": "string",
                  "description": "Summary function calculates the avarege of the values in the column"
                },
                {
                  "name": "min",
                  "type": "string",
                  "description": "Summary function calculates the minimum of the values in the column"
                },
                {
                  "name": "max",
                  "type": "string",
                  "description": "Summary function calculates the maximum of the values in the column"
                },
                {
                  "name": "sum",
                  "type": "string",
                  "description": "Summary function calculates the sum of the values in the column"
                },
                {
                  "name": "count",
                  "type": "string",
                  "description": "Summary function calculates the count of the values in the column"
                },
                {
                  "name": "custom",
                  "type": "string",
                  "description": "Custom summary function is used to manipulate the values in the column"
                }
              ]
            },
            "text": {
              "type": "string",
              "defaultValue": null,
              "description": "Summary text that will be shown before the value"
            },
            "customSummary": {
              "type": "function",
              "defaultValue": null,
              "description": "Specifies a custom summary function, which is called for each group, accepts an array of cell values for the specific column and returns the custom summary result"
            }
          }
        }
      }
    },
    "emptyGroupByAreaContent": {
      "type": "string",
      "defaultValue": "",
      "description": "Text that will be shown in the GroupBy area when there are no grouped columns"
    },
    "emptyGroupByAreaContentSelectColumns": {
      "type": "string",
      "defaultValue": "",
      "description": "Text of link(on click shows modal dialog with columns which could be group/ungroup by) that will be shown in the GroupBy area when there are no grouped columns"
    },
    "emptyGroupByAreaContentSelectColumnsCaption": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies caption for button which opens groupby dialog"
    },
    "expandTooltip": {
      "type": "string",
      "defaultValue": "",
      "description": "specifies the expand indicator tooltip for grouped rows"
    },
    "expansionIndicatorVisibility": {
      "type": "bool",
      "defaultValue": true,
      "description": "Specifies if grouped rows will have an expander image that will allow end users to expand and collapse them. This option can be set only at initialization."
    },
    "featureChooserText": {
      "type": "string",
      "defaultValue": "",
      "description": "specifies the text in feature chooser"
    },
    "featureChooserTextHide": {
      "type": "string",
      "defaultValue": "",
      "description": "specifies hide text in feature chooser"
    },
    "groupByAreaVisibility": {
      "type": "string",
      "defaultValue": "top",
      "description": " Sets the place in the grid where the groupBy area will be ",
      "valueOptions": [
        {
          "name": "top",
          "type": "string",
          "description": "The GroupBy area will be rendered above the grid headers "
        },
        {
          "name": "hidden",
          "type": "string",
          "description": " The GroupBy area will not be rendered"
        },
        {
          "name": "bottom",
          "type": "string",
          "description": "The GroupBy area will be rendered below the grid footer (and above the pager, if any)"
        }
      ]
    },
    "groupByLabelWidth": {
      "type": "number",
      "defaultValue": null,
      "description": "By default, the column width for the header is taken. If this is specified it's used for all headers."
    },
    "groupByUrlKey": {
      "type": "string",
      "defaultValue": null,
      "description": "URL param name which specifies how groupBy expressions will be encoded in the URL. The OData conventions for sorting params are used if the grid is bound to an OData service. ex: ?groupby(col1)=asc"
    },
    "groupByUrlKeyAscValue": {
      "type": "string",
      "defaultValue": null,
      "description": "URL param value for ascending type of grouping. The OData conventions for sorting params are used if the grid is bound to an OData service. Example: ?groupBy(col1)=asc"
    },
    "groupByUrlKeyDescValue": {
      "type": "string",
      "defaultValue": null,
      "description": "URL param value for descending type of grouping. The OData conventions for sorting params are used if the grid is bound to an OData service. Example: ?groupBy(col1)=desc"
    },
    "groupedColumns": {
      "type": "array",
      "defaultValue": null,
      "description": "Returns the list of currently grouped columns. The option is read-only and cannot be set at initialization or at runtime.",
      "schema": {
        "key": {
          "type": "string",
          "defaultValue": null,
          "description": "Defines the key of the column that's grouped"
        },
        "dir": {
          "type": "string",
          "defaultValue": "asc",
          "description": "Defines sorting order",
          "valueOptions": [
            {
              "name": "asc",
              "type": "string",
              "description": "Sorting order is ascending"
            },
            {
              "name": "desc",
              "type": "string",
              "description": "Sorting order is descending"
            }
          ]
        },
        "layout": {
          "type": "string",
          "defaultValue": null,
          "description": "Defines th key of the column layout, if the grid is hierarchical"
        },
        "col": {
          "type": "string",
          "defaultValue": null,
          "description": "Gets or sets column object for the column that is grouped"
        }
      }
    },
    "groupedRowTextTemplate": {
      "type": "string",
      "defaultValue": "${key}: ${val} (${count})",
      "description": "Template for the grouped row's text, follows jQuery's templating guidelines. Variables available for the template are ${key}, ${val} and ${count}."
    },
    "indentation": {
      "type": "number",
      "defaultValue": 30.0,
      "description": "specifies the indentation for a grouped row. If several columns are grouped, the total indentation will grow"
    },
    "initialExpand": {
      "type": "bool",
      "defaultValue": true,
      "description": "Specifies if after grouping, the grouped rows will be initially expanded or collapsed. This option can be set only at initialization."
    },
    "labelDragHelperOpacity": {
      "type": "number",
      "defaultValue": 0.5,
      "description": "Specifies the opacity of the drag markup, while a column header is being dragged. The value must be between 0 and 1."
    },
    "modalDialogAnimationDuration": {
      "type": "number",
      "defaultValue": 200.0,
      "description": "Specifies time in milliseconds for animation duration to show/hide modal dialog"
    },
    "modalDialogButtonApplyText": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies text of button which apply changes in modal dialog"
    },
    "modalDialogButtonCancelText": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies text of button which cancel changes in modal dialog"
    },
    "modalDialogCaptionButtonAsc": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies caption for each ascending sorted column in groupby dialog"
    },
    "modalDialogCaptionButtonDesc": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies caption for each descending sorted column in groupby dialog"
    },
    "modalDialogCaptionButtonUngroup": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies caption button ungroup in groupby dialog"
    },
    "modalDialogCaptionText": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies caption text for groupby dialog"
    },
    "modalDialogClearAllButtonLabel": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies label for clear all button in groupby dialog"
    },
    "modalDialogDropDownAreaWidth": {
      "type": "number",
      "defaultValue": null,
      "description": "Specifies height of layouts dropdown in groupby dialog"
    },
    "modalDialogDropDownButtonCaption": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies caption of layouts dropdown button in groupby dialog"
    },
    "modalDialogDropDownLabel": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies label for layouts dropdown in groupby dialog"
    },
    "modalDialogDropDownWidth": {
      "type": "number",
      "defaultValue": 200.0,
      "description": "Specifies width of layouts dropdown in groupby dialog"
    },
    "modalDialogGroupByButtonText": {
      "type": "string",
      "defaultValue": "",
      "description": "specifies the text of GroupBy button in the groupby dialog"
    },
    "modalDialogGroupByOnClick": {
      "type": "bool",
      "defaultValue": false,
      "description": "specifies whether on click in groupby dialog to be immediately grouped/ungrouped columns. When it is false then it is shown Apply button in the groupby dialog"
    },
    "modalDialogHeight": {
      "type": "number",
      "defaultValue": "",
      "description": "Specifies height of groupby dialog"
    },
    "modalDialogRootLevelHierarchicalGrid": {
      "type": "string",
      "defaultValue": "",
      "description": "Specifies name of the root layout which is shown layouts tree dialog"
    },
    "modalDialogWidth": {
      "type": "number",
      "defaultValue": 400.0,
      "description": "Specifies width of groupby dialog"
    },
    "removeButtonTooltip": {
      "type": "string",
      "defaultValue": "",
      "description": "specifies the tooltip for the remove button"
    },
    "resultResponseKey": {
      "type": "string",
      "defaultValue": null,
      "description": "Specifies a key to get group by data from the response. This option can be set only at initialization."
    },
    "summarySettings": {
      "type": "object",
      "defaultValue": null,
      "description": "specifies the settings for GroupBy summaries",
      "schema": {
        "multiSummaryDelimiter": {
          "type": "string",
          "defaultValue": ",",
          "description": "Specifies the delimiter for multiple summaries, in case they are rendered inline in the grouped row"
        },
        "summaryFormat": {
          "type": "string",
          "defaultValue": "#.00",
          "description": "Specifies the decimal format of the summary value"
        }

      }
    },
    "type": {
      "type": "string",
      "defaultValue": null,
      "description": " Specifies whether the groupBy operation takes place locally on client-side or remotely on server-side.",
      "valueOptions": [
        {
          "name": "local",
          "type": "string",
          "description": " Execute the groupBy operation locally on client-side."
        },
        {
          "name": "remote",
          "type": "string",
          "description": " Execute the groupBy operation by a request to the server."
        }
      ]
    },
    "useGridColumnFormatter": {
      "type": "bool",
      "defaultValue": true,
      "description": "Format grouped column using the formatter set in igGrid.columns[i].formatter or igGrid format."
    }
  }
}