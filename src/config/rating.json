{
  "overview": null,
  "name": "ui.igRating",
  "category": null,
  "visual": true,
  "events": {
    "hoverChange": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event which is raised before hover value is changed.<br>    If application returns false, then action is canceled and hover value stays unchanged.<br>    Function takes arguments evt and ui.<br>    Use ui.value to get new value.<br>    Use ui.oldValue to get old value.",
		"jp": "Event which is raised before hover value is changed.<br>    If application returns false, then action is canceled and hover value stays unchanged.<br>    Function takes arguments evt and ui.<br>    Use ui.value to get new value.<br>    Use ui.oldValue to get old value."
	}
    },
    "valueChange": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event which is raised before (selected) value is changed.<br>    If application returns false, then action is canceled and value stays unchanged.<br>    Function takes arguments evt and ui.<br>    Use ui.value to get new value.<br>    Use ui.oldValue to get old value.",
		"jp": "Event which is raised before (selected) value is changed.<br>    If application returns false, then action is canceled and value stays unchanged.<br>    Function takes arguments evt and ui.<br>    Use ui.value to get new value.<br>    Use ui.oldValue to get old value."
	}
    }
  },
  "properties": {
    "focusable": {
      "type": "bool",
      "defaultValue": true,
      "description": {
		"en": "Gets sets ability to get focus. Change of that option is not supported after igRating was created.<br>    Value true: can get focus and process key events.<br>    Value false: cannot get focus.",
		"jp": "Gets sets ability to get focus. Change of that option is not supported after igRating was created.<br>    Value true: can get focus and process key events.<br>    Value false: cannot get focus."
	}
    },
    "precision": {
      "type": "string",
      "defaultValue": "whole",
      "description": {
		"en": " Gets or sets precision. Precision of value and valueHover.",
		"jp": " Gets or sets precision. Precision of value and valueHover."
	},
      "valueOptions": [
        {
          "name": "exact",
          "type": "string",
          "description": {
		"en": " Value corresponds location of mouse.",
		"jp": " Value corresponds location of mouse."
	}
        },
        {
          "name": "half",
          "type": "string",
          "description": {
		"en": " Value is rounded to the half of vote.",
		"jp": " Value is rounded to the half of vote."
	}
        },
        {
          "name": "whole",
          "type": "string",
          "description": {
		"en": " Value is rounded to the number of votes.",
		"jp": " Value is rounded to the number of votes."
	}
        }
      ]
    },
    "precisionZeroVote": {
      "type": "number",
      "defaultValue": 0.25,
      "description": {
		"en": "Gets or sets part of vote-size, which is considered as zero value.<br>    It has effect only when precision is set to \"half\" or \"whole\".<br>    If user clicks between edge of the first vote and (sizeOfVote * precisionZeroVote), then value is set to 0.<br>    Same is applied for mouseover as well.",
		"jp": "Gets or sets part of vote-size, which is considered as zero value.<br>    It has effect only when precision is set to \"half\" or \"whole\".<br>    If user clicks between edge of the first vote and (sizeOfVote * precisionZeroVote), then value is set to 0.<br>    Same is applied for mouseover as well."
	}
    },
    "roundedDecimalPlaces": {
      "type": "number",
      "defaultValue": 3.0,
      "description": {
		"en": "Gets or sets number of decimal places used to round value and value-hover.<br>    Negative value will disable that option and value will not be rounded.<br>    Notes:<br>    If precision is \"whole\" or \"half\" and roundedDecimalPlaces is set in range of 0..2, then 3 is used.<br>    If valueAsPercent is enabled and roundedDecimalPlaces is set to 0, then 1 is used.<br>    If it is larger than 15, then 15 is used.",
		"jp": "Gets or sets number of decimal places used to round value and value-hover.<br>    Negative value will disable that option and value will not be rounded.<br>    Notes:<br>    If precision is \"whole\" or \"half\" and roundedDecimalPlaces is set in range of 0..2, then 3 is used.<br>    If valueAsPercent is enabled and roundedDecimalPlaces is set to 0, then 1 is used.<br>    If it is larger than 15, then 15 is used."
	}
    },
    "swapDirection": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Gets or sets direction of selected and hovered votes. Change of that option is not supported after igRating was created.<br>    Value true: from left to right or from top to bottom.<br>    Value false: from right to left or from bottom to left.",
		"jp": "Gets or sets direction of selected and hovered votes. Change of that option is not supported after igRating was created.<br>    Value true: from left to right or from top to bottom.<br>    Value false: from right to left or from bottom to left."
	}
    },
    "theme": {
      "type": "string",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets selector for css classes.<br>    That option allows replacing all default css styles by custom values.<br>    Application should provide css classes for all members defined in the css options with \"theme\" selector.",
		"jp": "Gets or sets selector for css classes.<br>    That option allows replacing all default css styles by custom values.<br>    Application should provide css classes for all members defined in the css options with \"theme\" selector."
	}
    },
    "validatorOptions": {
      "type": "object",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets object which contains options supported by igValidator.<br>    That option is not supported if the \"focusable\" option is set to false.<br>    Example:<br>    $('#rating1').igRating({ validatorOptions: { min: 0.2, max: 0.7 } });",
		"jp": "Gets or sets object which contains options supported by igValidator.<br>    That option is not supported if the \"focusable\" option is set to false.<br>    Example:<br>    $('#rating1').igRating({ validatorOptions: { min: 0.2, max: 0.7 } });"
	},
      "schemaRef": "validator.properties"
    },
    "value": {
      "type": "number",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets value (selected votes or percent).",
		"jp": "Gets or sets value (selected votes or percent)."
	}
    },
    "valueAsPercent": {
      "type": "bool",
      "defaultValue": true,
      "description": {
		"en": "Gets or sets percent or vote number to measure value and value-hover.<br>    Value true: value is measured as percent (from 0 to 1).<br>    Value false: value is measured in number of voted (from 0 to voteCount)",
		"jp": "Gets or sets percent or vote number to measure value and value-hover.<br>    Value true: value is measured as percent (from 0 to 1).<br>    Value false: value is measured in number of voted (from 0 to voteCount)"
	}
    },
    "valueHover": {
      "type": "number",
      "defaultValue": null,
      "description": {
		"en": "Gets or sets value-hover (hovered votes or percent of hovered votes). Default is same as value.",
		"jp": "Gets or sets value-hover (hovered votes or percent of hovered votes). Default is same as value."
	}
    },
    "vertical": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "Gets or sets vertical or horizontal orientation of votes.<br>    Change of that option is not supported after igRating was created.",
		"jp": "Gets or sets vertical or horizontal orientation of votes.<br>    Change of that option is not supported after igRating was created."
	}
    },
    "voteCount": {
      "type": "number",
      "defaultValue": 5.0,
      "description": {
		"en": "Gets or sets number of votes.",
		"jp": "Gets or sets number of votes."
	}
    },
    "voteHeight": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Gets or sets custom height of a vote in pixels. In case of 0 the run time style value is used.",
		"jp": "Gets or sets custom height of a vote in pixels. In case of 0 the run time style value is used."
	}
    },
    "voteWidth": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "Gets or sets custom width of a vote in pixels. In case of 0 the run time style value is used.",
		"jp": "Gets or sets custom width of a vote in pixels. In case of 0 the run time style value is used."
	}
    }
  }
}