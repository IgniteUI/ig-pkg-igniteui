{
  "overview": null,
  "name": "ui.igGridRowSelectors",
  "title": "Row Selectors",
  "category": null,
  "visual": true,
  "events": {
    "checkBoxStateChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired after a row selector checkbox had changed state.<br>   Function takes arguments evt and ui.<br>   Use ui.row to get reference to the row the clicked row selector resides in.<br>   Use ui.rowIndex to get the index of the row the clicked row selector resides in.<br>   Use ui.rowKey to get the key of the row the clicked row selector resides in.<br>   Use ui.rowSelector to get reference to the row selector cell.<br>   Use ui.owner to get reference to igRowSelectors.<br>   Use ui.grid to get reference to the igGrid the igRowSelectors are initialized for.<br>   Use ui.state to get the state of the checkbox (\"on\",\"off\").<br>   Use ui.isHeader to check if the header check box is the one being clicked. In this case no row related args are passed.",
		"jp": "Event fired after a row selector checkbox had changed state.<br>   Function takes arguments evt and ui.<br>   Use ui.row to get reference to the row the clicked row selector resides in.<br>   Use ui.rowIndex to get the index of the row the clicked row selector resides in.<br>   Use ui.rowKey to get the key of the row the clicked row selector resides in.<br>   Use ui.rowSelector to get reference to the row selector cell.<br>   Use ui.owner to get reference to igRowSelectors.<br>   Use ui.grid to get reference to the igGrid the igRowSelectors are initialized for.<br>   Use ui.state to get the state of the checkbox (\"on\",\"off\").<br>   Use ui.isHeader to check if the header check box is the one being clicked. In this case no row related args are passed."
	}
    },
    "checkBoxStateChanging": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired when a row selector checkbox is changing.<br>   Function takes arguments evt and ui.<br>   Use ui.row to get reference to the row the clicked row selector resides in.<br>   Use ui.rowIndex to get the index of the row the clicked row selector resides in.<br>   Use ui.rowKey to get the key of the row the clicked row selector resides in.<br>   Use ui.rowSelector to get reference to the row selector cell.<br>   Use ui.owner to get reference to igRowSelectors.<br>   Use ui.grid to get reference to the igGrid the igRowSelectors are initialized for.<br>   Use ui.currentState to get the current state of the checkbox (\"on\",\"off\").<br>   Use ui.newState to get the new state of the checkbox (\"on\",\"off\").<br>   Use ui.isHeader to check if the header check box is the one being clicked. In this case no row related args are passed.",
		"jp": "Event fired when a row selector checkbox is changing.<br>   Function takes arguments evt and ui.<br>   Use ui.row to get reference to the row the clicked row selector resides in.<br>   Use ui.rowIndex to get the index of the row the clicked row selector resides in.<br>   Use ui.rowKey to get the key of the row the clicked row selector resides in.<br>   Use ui.rowSelector to get reference to the row selector cell.<br>   Use ui.owner to get reference to igRowSelectors.<br>   Use ui.grid to get reference to the igGrid the igRowSelectors are initialized for.<br>   Use ui.currentState to get the current state of the checkbox (\"on\",\"off\").<br>   Use ui.newState to get the new state of the checkbox (\"on\",\"off\").<br>   Use ui.isHeader to check if the header check box is the one being clicked. In this case no row related args are passed."
	}
    },
    "rowSelectorClicked": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
		"en": "Event fired after a row selector is clicked. <br>   Function takes arguments evt and ui.<br>   Use ui.row to get reference to the row the clicked row selector resides in.<br>            Use ui.fixedRow to get reference to the fixed row the clicked row selector resides in(if there are fixed columns).<br>   Use ui.rowIndex to get the index of the row the clicked row selector resides in.<br>   Use ui.rowKey to get the key of the row the clicked row selector resides in.<br>   Use ui.rowSelector to get reference to the row selector cell.<br>   Use ui.owner to get reference to igRowSelectors.<br>   Use ui.grid to get reference to the igGrid the igRowSelectors are initialized for.",
		"jp": "Event fired after a row selector is clicked. <br>   Function takes arguments evt and ui.<br>   Use ui.row to get reference to the row the clicked row selector resides in.<br>            Use ui.fixedRow to get reference to the fixed row the clicked row selector resides in(if there are fixed columns).<br>   Use ui.rowIndex to get the index of the row the clicked row selector resides in.<br>   Use ui.rowKey to get the key of the row the clicked row selector resides in.<br>   Use ui.rowSelector to get reference to the row selector cell.<br>   Use ui.owner to get reference to igRowSelectors.<br>   Use ui.grid to get reference to the igGrid the igRowSelectors are initialized for."
	}
    }
  },
  "properties": {
	"name": {
      "type": "string",
      "defaultValue": null
    },
    "enableCheckBoxes": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "determines whether the row selectors column should contain checkboxes",
		"jp": "determines whether the row selectors column should contain checkboxes"
	}
    },
    "enableRowNumbering": {
      "type": "bool",
      "defaultValue": true,
      "description": {
		"en": "determines whether the row selectors column should contain row numbering",
		"jp": "determines whether the row selectors column should contain row numbering"
	}
    },
    "requireSelection": {
      "type": "bool",
      "defaultValue": true,
      "description": {
		"en": "determines whether the selection feature is required for the row selectors. If set to \"false\" <br>   the widget will not check for Selection availability. If set to \"true\" an exception will be thrown if Selection is<br>   not available.",
		"jp": "determines whether the selection feature is required for the row selectors. If set to \"false\" <br>   the widget will not check for Selection availability. If set to \"true\" an exception will be thrown if Selection is<br>   not available."
	}
    },
    "rowNumberingSeed": {
      "type": "number",
      "defaultValue": 0.0,
      "description": {
		"en": "the seed to be added to the default numbering",
		"jp": "the seed to be added to the default numbering"
	}
    },
    "rowSelectorColumnWidth": {
      "type": "string",
      "defaultValue": 0,
      "description": {
		"en": "Gets or sets the width of th row selector column",
		"jp": "Gets or sets the width of th row selector column"
	},
      "valueOptions": [
        {
          "name": null,
          "type": "string",
          "description": {
		"en": "The row selector column width can be set in pixels (px) and percentage (%)",
		"jp": "The row selector column width can be set in pixels (px) and percentage (%)"
	}
        },
        {
          "name": null,
          "type": "number",
          "description": {
		"en": "The row selector width can be set as a number",
		"jp": "The row selector width can be set as a number"
	}
        },
        {
          "name": "null",
          "type": "object",
          "description": {
		"en": "Will let the feature decide the best width depending on enabled contents",
		"jp": "Will let the feature decide the best width depending on enabled contents"
	}
        }
      ]
    },
    "showCheckBoxesOnFocus": {
      "type": "bool",
      "defaultValue": false,
      "description": {
		"en": "determines whether checkboxes will be shown only if row selectors are on focus/selected.",
		"jp": "determines whether checkboxes will be shown only if row selectors are on focus/selected."
	}
    }
  }
}