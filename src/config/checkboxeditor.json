{
  "overview": null,
  "name": "ui.igCheckboxEditor",
  "category": null,
  "visual": true,
  "events": {
    "blur": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised when input field of editor loses focus.<br>    Function takes argument evt.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use evt.originalEvent to obtain reference to event of browser.",
        "jp": "エディターの入力フィールドがフォーカスを失ったとき発生するイベント。<br>    関数は引数 evt を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    evt.originalEvent を使用して、ブラウザーのイベントへの参照を取得します。"
      }
    },
    "focus": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised when input field of editor gets focus.<br>    Function takes argument evt.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use evt.originalEvent to obtain reference to event of browser.",
        "jp": "エディターの入力フィールドがフォーカスを取得したとき発生するイベント。<br>    関数は引数 evt を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    evt.originalEvent を使用して、ブラウザーのイベントへの参照を取得します。"
      }
    },
    "rendered": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised after rendering of the editor completes.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to get a reference to the editor performing rendering.<br>    Use ui.element to get a reference to the editor element.",
        "jp": "エディターの描画が完了した後に発生するイベント。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、レンダリングを実行するエディターへの参照を取得します。<br>    ui.element を使用して、エディター要素への参照を取得します。"
      }
    },
    "rendering": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised before rendering of the editor completes.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to get a reference to the editor performing rendering.<br>    Use ui.element to get a reference to the editor element.",
        "jp": "エディターの描画が完了する前に発生するイベント。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して、レンダリングを実行するエディターへの参照を取得します。<br>    ui.element を使用して、エディター要素への参照を取得します。"
      }
    },
    "valueChanged": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised after value in editor was changed. It can be raised on lost focus or on spin events.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use ui.value to obtain new value and ui.oldValue to obtain old value.",
        "jp": "エディター内の値が変更された後に発生するイベント。フォーカスの消失またはスピン イベントに対して発生します。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    ui.value を使用して新しい値を取得し、ui.oldValue を使用して古い値を取得します。"
      }
    },
    "valueChanging": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": {
        "en": "Event which is raised before value in editor was changed.<br>    Return false in order to cancel change.<br>    It can be raised on lost focus or on spin events.<br>    Function takes arguments evt and ui.<br>    Use ui.owner to obtain reference to igEditor.<br>    Use ui.value to obtain new value and ui.oldValue to obtain old value.",
        "jp": "エディター内の値が変更される前に発生するイベント。<br>    変更をキャンセルするには、False を返します。<br>    フォーカスの消失またはスピン イベントに対して発生します。<br>    関数は引数 evt および ui を取得します。<br>    ui.owner を使用して igEditor への参照を取得します。<br>    ui.value を使用して新しい値を取得し、ui.oldValue を使用して古い値を取得します。"
      }
    }
  },
  "properties": {
    "checked": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Gets sets either the editor is checked or not.",
        "jp": "エディターがチェックされるかどうかを取得または設定します。"
      },
      "valueOptions": null
    },
    "disabled": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Sets the disabled attribute.Does not allow editing. Disables all the buttons and iteracitons applied. On submit the current value is not sent into the request",
        "jp": "disabled 属性を設定します。編集を許可しません。すべてのボタンおよび適用される操作を無効にします。送信において現在の値は要求に送られません。"
      },
      "valueOptions": null
    },
    "height": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "",
        "jp": ""
      },
      "valueOptions": [
        {
          "name": null,
          "type": "string",
          "description": {
            "en": " The height can be set in pixels (px) and percentage (%).",
            "jp": " 高さをピクセル (px) またはパーセンテージ (%) に設定できます。"
          }
        },
        {
          "name": null,
          "type": "number",
          "description": {
            "en": " The height can be set as a number in pixels.",
            "jp": " 高さをピクセル単位の数値で設定できます。"
          }
        }
      ]
    },
    "iconClass": {
      "type": "string",
      "defaultValue": "ui-icon-check",
      "description": {
        "en": "Applies custom class on the checkbox, so that custom image can be used.<br>    The following jQuery classes can be used in addition http://api.jqueryui.com/theming/icons/",
        "jp": "カスタム画像を使用するためにチェックボックスでカスタム クラスを適用します。<br>    次の jQuery クラスも使用できます: http://api.jqueryui.com/theming/icons/。"
      },
      "valueOptions": null
    },
    "readOnly": {
      "type": "bool",
      "defaultValue": false,
      "description": {
        "en": "Sets the readonly attribute.Does not allow editing. Disables all the buttons and iteracitons applied. On submit the current value is sent into the request.",
        "jp": "読み取り専用 attribute.Does を編集不可に設定します。すべてのボタンおよび適用される操作を無効にします。送信において現在の値が要求に送られます。"
      },
      "valueOptions": null
    },
    "size": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": " Gets sets size of the checkbox based on preset styles. ",
        "jp": " プリセット スタイルに基づいてチェックボックスのサイズを取得または設定します。 "
      },
      "valueOptions": [
        {
          "name": "verysmall",
          "type": "",
          "description": {
            "en": "",
            "jp": ""
          }
        },
        {
          "name": "small",
          "type": "",
          "description": {
            "en": "",
            "jp": ""
          }
        },
        {
          "name": "normal",
          "type": "",
          "description": {
            "en": "",
            "jp": ""
          }
        },
        {
          "name": "large",
          "type": "",
          "description": {
            "en": "",
            "jp": ""
          }
        }
      ]
    },
    "value": {
      "type": "object",
      "defaultValue": null,
      "description": {
        "en": "Gets sets value in editor. The effect of setting/getting that option depends on type of editor and on dataMode options for every type of editor.",
        "jp": "エディター内の値を取得または設定します。エディターのタイプおよび各エディター タイプの dataMode オプションに基づいたオプションを取得または設定する効果。"
      },
      "valueOptions": null
    },
    "width": {
      "type": "string",
      "defaultValue": null,
      "description": {
        "en": "",
        "jp": ""
      },
      "valueOptions": [
        {
          "name": null,
          "type": "string",
          "description": {
            "en": " The widget width can be set in pixels (px) and percentage (%).",
            "jp": " ウィジェットの幅をピクセル (px) またはパーセンテージ (%) に設定できます。"
          }
        },
        {
          "name": null,
          "type": "number",
          "description": {
            "en": " The widget width can be set as a number in pixels.",
            "jp": " ウィジェットの幅は数値としてピクセルで設定できます。"
          }
        }
      ]
    }
  }
}
