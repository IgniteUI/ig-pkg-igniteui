{
  "overview": null,
  "name": "ui.igGridResizing",
  "title": "Column Resizing",
  "category": null,
  "visual": true,
  "events": {
    "columnResized": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired after the resizing has been executed and results are rendered <br>&nbsp;&nbsp;&nbsp;The handler function takes arguments evt and ui.<br>&nbsp;&nbsp;&nbsp;Use ui.owner to get the reference to the igGridResizing widget.<br>&nbsp;&nbsp;&nbsp;Use ui.owner.grid to get the reference to the igGrid widget.<br>&nbsp;&nbsp;&nbsp;Use ui.columnIndex to get the resized column index.<br>&nbsp;&nbsp;&nbsp;Use ui.columnKey to get the resized column key.<br>&nbsp;&nbsp;&nbsp;Use ui.originalWidth to get the original column width.<br>&nbsp;&nbsp;&nbsp;Use ui.newWidth to get the final column width after resizing."
    },
    "columnResizing": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired before a resizing operation is executed.<br>&nbsp;&nbsp;&nbsp;The handler function takes arguments evt and ui.<br>&nbsp;&nbsp;&nbsp;Use ui.owner to get the reference to the igGridResizing widget.<br>&nbsp;&nbsp;&nbsp;Use ui.owner.grid to get the reference to the igGrid widget.<br>&nbsp;&nbsp;&nbsp;Use ui.columnIndex to get the resized column index.<br>&nbsp;&nbsp;&nbsp;Use ui.columnKey to get the resized column key.<br>&nbsp;&nbsp;&nbsp;Use ui.desiredWidth to get the desired width(before min/max coercion) for the resized column."
    },
    "columnResizingRefused": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "event fired(only when columnFixing is enabled) when trying to resize column in fixed area so total width of unfixed area to be less than minimalVisibleAreaWidth(option defined in columnFixing)<br>&nbsp;&nbsp;&nbsp;The handler function takes arguments evt and ui.<br>&nbsp;&nbsp;&nbsp;Use ui.owner to get the reference to the igGridResizing widget.<br>&nbsp;&nbsp;&nbsp;Use ui.owner.grid to get the reference to the igGrid widget.<br>&nbsp;&nbsp;&nbsp;Use ui.columnIndex to get the resized column index.<br>&nbsp;&nbsp;&nbsp;Use ui.columnKey to get the resized column key.<br>&nbsp;&nbsp;&nbsp;Use ui.desiredWidth to get the desired width(before min/max coercion) for the resized column."
    }
  },
  "properties": {
	"name": {
      "type": "string",
      "defaultValue": "Resizing"
    },
    "allowDoubleClickToResize": {
      "type": "bool",
      "defaultValue": true,
      "description": "Resize the column to the size of the longest currently visible cell value."
    },
    "columnSettings": {
      "type": "array",
      "defaultValue": null,
      "description": "A list of column settings that specifies resizing options on a per column basis.",
      "schema": {
        "columnKey": {
          "type": "string",
          "defaultValue": null,
          "description": "Specifies the column key of the resized column",
          "required": true
        },
        "columnIndex": {
          "type": "number",
          "defaultValue": null,
          "description": "Column index can be used in place of column key. The preferred way of populating a column setting is to always use the column keys as identifiers."
        },
        "allowResizing": {
          "type": "bool",
          "defaultValue": true,
          "description": "Enables disables resizing for the column."
        },
        "minimumWidth": {
          "type": "number",
          "defaultValue": 20,
          "description": "Minimum column width in pixels."
        },
        "maximumWidth": {
          "type": "number",
          "defaultValue": null,
          "description": "Maximum column width in pixels."
        }
      }
    },
    "deferredResizing": {
      "type": "bool",
      "defaultValue": false,
      "description": "Specifies whether the resizing should be deferred until the user finishes resizing or applied immediately."
    },
    "handleTreshold": {
      "type": "number",
      "defaultValue": 5.0,
      "description": "The width in pixels of the resizing handle which is position at the right side of each resizeable column header."
    }
  }
}