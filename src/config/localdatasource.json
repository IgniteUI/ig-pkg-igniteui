{
    "overview": null,
    "name": "ig.DataSource",
    "category": null,
    "visual": true,
    "events": {
        "dataBinding": {
            "cancellable": true,
            "args": [
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                },
                {
                    "name": "args",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current control context",
                        "jp": "現在のコントロール コンテキストの引数。"
                    },
                    "schema": {
                        "cancel": {
                            "type": "bool",
                            "defaultValue": false,
                            "description": {
                                "en": "Argument that cancels the event",
                                "jp": "イベントをキャンセルする引数。"
                            }
                        }
                    }
                }
            ],
            "description": {
                "en": "Client-side dataBinding event. Can be a string pointing to a function name, or an object pointing to a function",
                "jp": "クライアント側の dataBinding イベント。関数名を指す文字列または関数を指すオブジェクトが可能です。"
            }
        },
        "dataBound": {
            "cancellable": false,
            "args": [
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                }
            ],
            "description": {
                "en": "Can be a string pointing to a function name, or an object pointing to a function",
                "jp": "関数名を指す文字列または関数を指すオブジェクトが可能です。"
            }
        },
        "urlParamsEncoding": {
            "cancellable": true,
            "args": [
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                },
                {
                    "name": "args",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current control context",
                        "jp": "現在のコントロール コンテキストの引数。"
                    },
                    "schema": {
                        "sortingParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Sorting parameters",
                                "jp": "並べ替えパラメーター"
                            }
                        },
                        "filteringParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Filtering parameters",
                                "jp": "フィルター パラメーター"
                            }
                        },
                        "pagingParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Paging parameters",
                                "jp": "ページング パラメーター"
                            }
                        },
                        "selectParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Select parameters",
                                "jp": "選択パラメーター"
                            }
                        },
                        "summariesParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Summaries parameters",
                                "jp": "集計パラメーター"
                            }
                        },
                        "extraParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Additional parameters",
                                "jp": "追加のパラメーター"
                            }
                        },
                        "pkParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "",
                                "jp": ""
                            }
                        }
                    }
                }
            ],
            "description": {
                "en": "Event that is fired before URL parameters are encoded. Can point to a function name or the function object itself.",
                "jp": "URL パラメーターがエンコードされる前に発生するイベント。関数名または関数オブジェクト自体を指すことができます。"
            }
        },
        "urlParamsEncoded": {
            "cancellable": true,
            "args": [
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                },
                {
                    "name": "args",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current control context",
                        "jp": "現在のコントロール コンテキストの引数。"
                    },
                    "schema": {
                        "sortingParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Sorting parameters",
                                "jp": "並べ替えパラメーター"
                            }
                        },
                        "filteringParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Filtering parameters",
                                "jp": "フィルター パラメーター"
                            }
                        },
                        "pagingParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Paging parameters",
                                "jp": "ページング パラメーター"
                            }
                        },
                        "selectParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Select parameters",
                                "jp": "選択パラメーター"
                            }
                        },
                        "summariesParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Summaries parameters",
                                "jp": "集計パラメーター"
                            }
                        },
                        "extraParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "Additional parameters",
                                "jp": "追加のパラメーター"
                            }
                        },
                        "pkParams": {
                            "type": "object",
                            "defaultValue": { },
                            "description": {
                                "en": "",
                                "jp": ""
                            }
                        }
                    }
                }
            ],
            "description": {
                "en": "Event that is fired after URL parameters are encoded (When a remote request is done). Can point to a function name or the function object itself.",
                "jp": "URL パラメーターがエンコードされた後に発生するイベント (リモート要求が実行されたとき)。関数名または関数オブジェクト自体を指すことができます。"
            }
        },
        "rowAdded": {
            "cancellable": false,
            "args": [
                {
                    "name": "item",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current row context",
                        "jp": "現在の行コンテキストの引数。"
                    },
                    "schema": {
                        "row": {
                            "type": "object",
                            "defaultValue": null,
                            "description": {
                                "en": "Obtain reference to the added row",
                                "jp": "追加された行への参照を取得します。"
                            }
                        },
                        "rowId": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "Get the row ID",
                                "jp": "行 ID を取得します。"
                            }
                        }
                    }
                },
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                }
            ],
            "description": {
                "en": "A function to call when row is updated (edited).",
                "jp": "行が更新 (編集) されたときに呼び出される関数。"
            }
        },
        "rowUpdated": {
            "cancellable": false,
            "args": [
                {
                    "name": "item",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current row context.",
                        "jp": "現在の行コンテキストの引数。"
                    },
                    "schema": {
                        "rowIndex": {
                            "type": "number",
                            "defaultValue": null,
                            "description": {
                                "en": "Get the row index.",
                                "jp": "行インデックスを取得します。"
                            }
                        },
                        "newRow": {
                            "type": "object",
                            "defaultValue": null,
                            "description": {
                                "en": "Obtain reference to the updated row.",
                                "jp": "更新された行への参照を取得します。"
                            }
                        },
                        "oldRow": {
                            "type": "object",
                            "defaultValue": null,
                            "description": {
                                "en": "Obtain reference to the row that was updated.",
                                "jp": "更新された行への参照を取得します。"
                            }
                        }
                    }
                },
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                }
            ],
            "description": {
                "en": "A function to call when row is added.",
                "jp": "行が追加されたときに呼び出される関数。"
            }
        },
        "rowInserted": {
            "cancellable": false,
            "args": [
                {
                    "name": "item",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current row context",
                        "jp": "現在の行コンテキストの引数。"
                    },
                    "schema": {
                        "row": {
                            "type": "object",
                            "defaultValue": null,
                            "description": {
                                "en": "Obtain reference to the inserted row",
                                "jp": "挿入された行への参照を取得します。"
                            }
                        },
                        "rowId": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "Get the row ID",
                                "jp": "行 ID を取得します。"
                            }
                        },
                        "rowIndex": {
                            "type": "number",
                            "defaultValue": null,
                            "description": {
                                "en": "Get the row index.",
                                "jp": "行インデックスを取得します。"
                            }
                        }
                    }
                },
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                }
            ],
            "description": {
                "en": "A function to call when row is inserted.",
                "jp": "行が挿入されたときに呼び出される関数。"
            }
        },
        "rowDeleted": {
            "cancellable": false,
            "args": [
                {
                    "name": "item",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Arguments of the current row context",
                        "jp": "現在の行コンテキストの引数。"
                    },
                    "schema": {
                        "row": {
                            "type": "object",
                            "defaultValue": null,
                            "description": {
                                "en": "Obtain reference to the deleted row",
                                "jp": "削除された行への参照を取得します。"
                            }
                        },
                        "rowId": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "Get the row ID",
                                "jp": "行 ID を取得します。"
                            }
                        },
                        "rowIndex": {
                            "type": "number",
                            "defaultValue": null,
                            "description": {
                                "en": "Get the row index.",
                                "jp": "行インデックスを取得します。"
                            }
                        }
                    }
                },
                {
                    "name": "ds",
                    "type": "Object",
                    "optional": false,
                    "description": {
                        "en": "Reference to the data source object",
                        "jp": "データ ソース オブジェクトへの参照。"
                    }
                }
            ],
            "description": {
                "en": "A function to call when row is deleted.",
                "jp": "行が削除されたときに呼び出される関数。"
            }
        }
    },
    "properties": {
        "id": {
            "type": "string",
            "defaultValue": "ds",
            "description": {
                "en": "Setting this is only necessary when the data source is set to a table in string format. We need to create an invisible dummy data container in the body and append the table data to it.",
                "jp": "データ ソースが文字列形式でテーブルに設定される場合のみに設定する必要があります。本体に表示されていないダミー データ コンテナーを作成し、テーブル データをコンテナーに追加します。"
            }
        },
        "outputResultsName": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "This is the property in the dataView where actual resulting records will be put. (So the dataView will not be array but an object if this is defined), after the potential data source transformation.",
                "jp": "これは、実際の結果レコードが配置される dataView 内のプロパティです。(つまり、これが定義される場合、dataView は配列ではなくオブジェクトです)、潜在的なデータ ソース変換の後。"
            }
        },
        "callee": {
            "type": "object",
            "defaultValue": null,
            "description": {
                "en": "Object on which to invoke the callback function.",
                "jp": "コールバック関数を呼び出す対象となるオブジェクト。"
            },
            "hidden": true
        },
        "dataSource": {
            "type": "array",
            "defaultValue": null,
            "description": {
                "en": "This is the source of data - non normalized. Can be an array, can be reference to some JSON object, can be a DOM element for a HTML TABLE, or a function.",
                "jp": "これはデータのソースです。正規化されていません。配列、JSON オブジェクトへの参照、HTML テーブルの DOM 要素、または関数が可能です。"
            }
        },
        "requestType": {
            "type": "string",
            "defaultValue": "GET",
            "description": {
                "en": "Specifies the HTTP verb to be used to issue the request.",
                "jp": "要求を送信する HTTP 動詞を指定します。"
            }
        },
        "type": {
            "type": "string",
            "defaultValue": "unknown",
            "description": {
                "en": "Type of the data source.",
                "jp": "データ ソースのタイプ。"
            },
            "valueOptions": [
                {
                    "name": "json",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source is an already evaluated JSON (JavaScript object/array) or a string that can be evaluated to JSON.",
                        "jp": "データソースが、既に評価済みの JSON (JavaScript オブジェクト/配列) であるか、または JSON に対して評価できる文字列であるかを指定します。"
                    }
                },
                {
                    "name": "xml",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source is a XML Document object or a string that can be evaluated to XML.",
                        "jp": "データソースが、XML Document オブジェクト、または XML に対して評価できる文字列であるかを指定します。"
                    }
                },
                {
                    "name": "unknown",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source is of unknown type. In that case it will be analyzed and automatically detected if possible.",
                        "jp": "データ ソースが不明なタイプであることを指定します。その場合、それは分析され、可能な場合は自動的に検出されます。"
                    }
                },
                {
                    "name": "array",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source is a simple array of objects.",
                        "jp": "データ ソースがオブジェクトのシンプルな配列であることを指定します。"
                    }
                },
                {
                    "name": "function",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source points to a function. During data binding the function will be called and the result will be assumed to be an array of objects.",
                        "jp": "データ ソースが関数を指していることを指定します。データ バインド中、関数が呼び出され、結果はオブジェクトの配列であると見なされます。"
                    }
                },
                {
                    "name": "htmlTableString",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source points to a string that represents a HTML table.",
                        "jp": "データ ソースが HTML テーブルを表す文字列を指していることを指定します。"
                    }
                },
                {
                    "name": "json",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source points to an ID of a HTML Table element that's loaded on the page.",
                        "jp": "データ ソースが、ページに読み込まれた HTML Table 要素の ID を指していることを指定します。"
                    }
                },
                {
                    "name": "htmlTableDom",
                    "type": "string",
                    "description": {
                        "en": "The data source points to a DOM object that is of TABLE type.",
                        "jp": "データ ソースは TABLE タイプの DOM オブジェクトを指しています。"
                    }
                },
                {
                    "name": "htmlTableId",
                    "type": "string",
                    "description": {
                        "en": "Set whenever data source is analyzed (in case its type is unknown) and the type cannot be detected.",
                        "jp": "データ ソースが分析され (タイプが不明な場合)、タイプを検出できない場合は常に設定します。"
                    }
                },
                {
                    "name": "remoteUrl",
                    "type": "string",
                    "description": {
                        "en": "Specifies that the data source points to a remote URL, from which data will be retrieved using an AJAX call ($.ajax).",
                        "jp": "データ ソースが、そこから AJAX コール ($.ajax) を使ってデータが検索される、リモート URL を指していることを指定します。"
                    }
                },
                {
                    "name": "htmlListDom",
                    "type": "string",
                    "description": {
                        "en": "The data source points to a DOM object that is of UL/OL type.",
                        "jp": "データ ソースは UL/OL タイプの DOM オブジェクトを指しています。"
                    }
                },
                {
                    "name": "empty",
                    "type": "string",
                    "description": {
                        "en": "There isn't any data source .",
                        "jp": "データ ソースがありません。"
                    }
                }
            ]
        },
        "primaryKey": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "The unique field identifier.",
                "jp": "一意のフィールド識別子。"
            }
        },
        "responseTotalRecCountKey": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "Property in the response which specifies the total number of records in the back end (this is needed for paging).",
                "jp": "バックエンド内のレコードの総数を指定する応答内のプロパティ (ページングに必要です)。"
            }
        },
        "responseDataKey": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "Property in the response which specifies where the data records array will be held (if the response is wrapped).",
                "jp": "データ レコード配列を保持する場所を指定する応答内のプロパティ (応答がラップされる場合)。"
            }
        },
        "responseDataType": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "Response type when a URL is set as the data source. See http://api.jquery.com/jQuery.ajax/ => dataType.",
                "jp": "URL がデータ ソースとして設定された場合の応答タイプ。http://api.jquery.com/jQuery.ajax/ の dataType を参照してください。"
            },
            "valueOptions": [
                {
                    "name": "json",
                    "type": "string",
                    "description": {
                        "en": "The type of the response data is json.",
                        "jp": "応答データの型は json です。"
                    }
                },
                {
                    "name": "xml",
                    "type": "string",
                    "description": {
                        "en": "The type of the response data is xml.",
                        "jp": "応答データの型は xml です。"
                    }
                },
                {
                    "name": "html",
                    "type": "string",
                    "description": {
                        "en": "The type of the response data is html.",
                        "jp": "応答データの型は html です。"
                    }
                },
                {
                    "name": "script",
                    "type": "string",
                    "description": {
                        "en": "The type of the response data is script.",
                        "jp": "応答データの型は script です。"
                    }
                },
                {
                    "name": "jsonp",
                    "type": "string",
                    "description": {
                        "en": "The type of the response data is jsonp.",
                        "jp": "応答データの型は jsonp です。"
                    }
                },
                {
                    "name": "text",
                    "type": "string",
                    "description": {
                        "en": "The type of the response data is text.",
                        "jp": "応答データの型は text です。"
                    }
                }
            ]
        },
        "responseContentType": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "Content type of the response. See http://api.jquery.com/jQuery.ajax/ => contentType.",
                "jp": "応答のコンテンツ タイプ。http://api.jquery.com/jQuery.ajax/ の contentType を参照してください。"
            }
        },
        "localSchemaTransform": {
            "type": "bool",
            "defaultValue": true,
            "description": {
                "en": "If set to false will disable transformations on schema, even if it is defined locally in the javascript code.",
                "jp": "False に設定すると、JavaScript コード内でローカルに定義されている場合でもスキーマの変換が無効になります。"
            }
        },
        "paging": {
            "type": "object",
            "defaultValue": null,
            "description": {
                "en": "Settings related to built-in paging functionality.",
                "jp": "組み込みのページング機能に関連する設定。"
            },
            "schema": {
                "enabled": {
                    "type": "bool",
                    "defaultValue": false,
                    "description": {
                        "en": "Paging is not enabled by default.",
                        "jp": "ページングはデフォルトで有効ではありません。"
                    }
                },
                "type": {
                    "type": "string",
                    "defaultValue": "remote",
                    "description": {
                        "en": "Type for the paging operation.",
                        "jp": "ページング操作のタイプ。"
                    },
                    "valueOptions": [
                        {
                            "name": "local",
                            "type": "string",
                            "description": {
                                "en": "Data is paged client-side.",
                                "jp": "データはクライアント側でページングされます。"
                            }
                        },
                        {
                            "name": "remote",
                            "type": "string",
                            "description": {
                                "en": "A remote request is done and URL params encoded.",
                                "jp": "リモート要求が完了し、URL パラメーターがエンコードされました。"
                            }
                        }
                    ]
                },
                "pageSize": {
                    "type": "number",
                    "defaultValue": 5,
                    "description": {
                        "en": "Number of records on each page.",
                        "jp": "各ページのレコード数。"
                    }
                },
                "pageSizeUrlKey": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "Denotes the name of the encoded URL parameter that will state what is the currently requested page size.",
                        "jp": "現在要求されているページ サイズを説明するエンコードされた URL パラメーターの名前を示します。"
                    }
                },
                "pageIndexUrlKey": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "Denotes the name of the encoded URL parameter that will state what is the currently requested page index.",
                        "jp": "現在要求されているページ インデックスを説明するエンコードされた URL パラメーターの名前を示します。"
                    }
                },
                "pageIndex": {
                    "type": "number",
                    "defaultValue": 0,
                    "description": {
                        "en": "Current page index.",
                        "jp": "現在のページのインデックスです。"
                    }
                },
                "appendPage": {
                    "type": "bool",
                    "defaultValue": false,
                    "description": {
                        "en": "Current page index.",
                        "jp": "現在のページのインデックスです。"
                    }
                }
            }
        },
        "filtering": {
            "type": "object",
            "defaultValue": null,
            "description": {
                "en": "Settings related to built-in filtering functionality",
                "jp": "組み込みのフィルタリング機能に関連する設定。"
            },
            "schema": {
                "type": {
                    "type": "string",
                    "defaultValue": "remote",
                    "description": {
                        "en": "Filtering type.",
                        "jp": "フィルタリング タイプ。"
                    },
                    "valueOptions": [
                        {
                            "name": "local",
                            "type": "string",
                            "description": {
                                "en": "The data will be filtered automatically client-side.",
                                "jp": "データは自動的にクライアント側でフィルターされます。"
                            }
                        },
                        {
                            "name": "remote",
                            "type": "string",
                            "description": {
                                "en": "Parameters will be encoded and it's up to the backend to interpred them from the response.",
                                "jp": "パラメーターはエンコードされ、バックエンド次第で応答から解釈されます。"
                            }
                        }
                    ]
                },
                "caseSensitive": {
                    "type": "bool",
                    "defaultValue": false,
                    "description": {
                        "en": "Enables or disables case sensitive filtering on the data. Works only for local filtering.",
                        "jp": "データの大文字と小文字を区別するフィルタリングを有効または無効にします。ローカルのフィルタリングでのみ機能します。"
                    }
                },
                "applyToAllData": {
                    "type": "bool",
                    "defaultValue": true,
                    "description": {
                        "en": "If the type of paging/sorting/filtering is local and applyToAllData is true, filtering will be performed on the whole data source that's present locally, otherwise only on the current dataView. if type is remote, this setting doesn't have any effect.",
                        "jp": "ページング、並べ替え、またはフィルタリングのタイプがローカルの場合、applyToAllData が True であると、ローカルに存在するデータ ソース全体に対してフィルタリングが実行されます。そうでない場合は、現在の dataView に対してのみ実行されます。タイプがリモートの場合、この設定は効果がありません。"
                    }
                },
                "customFunc": {
                    "type": "function",
                    "defaultValue": null,
                    "description": {
                        "en": "Can point to either a string or a function object. The parameters that are passed are 1) the data array to be filtered, 2) the filtering expression definitions. Should return an array of the filtered data.",
                        "jp": "文字列または関数オブジェクトを指すことができます。渡されるパラメーターは、1) フィルタリングされるデータ配列、2) フィルタリングの式定義です。フィルターされたデータの配列を返します。"
                    }
                },
                "filterExprUrlKey": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "Url key that will be encoded in the request if remote filtering is performed. Default value of null implies OData-style URL encoding. Please see http://www.odata.org/developers/protocols/uri-conventions for details.",
                        "jp": "リモート フィルタリングが実行される場合に、要求の中でエンコードされる URL キー。デフォルト null は OData スタイルの URL エンコードを意味します。詳しくは、http://www.odata.org/developers/protocols/uri-conventions を参照してください。"
                    }
                },
                "filterLogicUrlKey": {
                    "type": "string",
                    "defaultValue": "filterLogic",
                    "description": {
                        "en": "Url key that will be encoded in the request, specifying if the filtering logic will be AND or OR",
                        "jp": "フィルタリング ロジックが AND か OR かどうかを示す、要求の中でエンコードされる URL キー。"
                    }
                },
                "defaultFields": {
                    "type": "array",
                    "defaultValue": [ ],
                    "description": {
                        "en": "Can point to either a string or a function object. The parameters that are passed are 1) the data array to be filtered, 2) the filtering expression definitions. Should return an array of the filtered data.",
                        "jp": "文字列または関数オブジェクトを指すことができます。渡されるパラメーターは、1) フィルタリングされるデータ配列、2) フィルタリングの式定義です。フィルターされたデータの配列を返します。"
                    },
                    "designerDisplayProperty": "name",
                    "schema": {
                        "name": {
                            "type": "string",
                            "defaultValue": ""
                        }
                    }
                },
                "expressions": {
                    "type": "array",
                    "defaultValue": [ ],
                    "description": {
                        "en": "A list of expression objects, containing the following key-value pairs: fieldName, expression (search string), condition , and logic (AND/OR)",
                        "jp": "式オブジェクトのリスト。以下のキーと値のペアが含まれます: fieldName、式 (検索文字列)、条件、ロジック (AND/OR)。"
                    },
                    "designerDisplayProperty": "fieldName",
                    "schema": {
                        "fieldName": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "The name of the field to filter.",
                                "jp": "フィルターするフィールドの名前。"
                            }
                        },
                        "expression": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "The expression string used for filtering",
                                "jp": "フィルタリングで使用される式文字列。"
                            }
                        },
                        "condition": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "The condition used for filtering",
                                "jp": "フィルタリングに使用する条件。"
                            }
                        },
                        "logic": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "The logic used for filtering",
                                "jp": "フィルタリングに使用するロジック。"
                            },
                            "valueOptions": [
                                {
                                    "name": "AND",
                                    "type": "string",
                                    "description": {
                                        "en": "The logic used for filtering is AND",
                                        "jp": "フィルタリングに使用するロジックは AND です。"
                                    }
                                },
                                {
                                    "name": "OR",
                                    "type": "string",
                                    "description": {
                                        "en": "The logic used for filtering is OR",
                                        "jp": "フィルタリングに使用するロジックは OR です。"
                                    }
                                }
                            ]
                        }
                    }
                },
                "exprString": {
                    "type": "string",
                    "defaultValue": "",
                    "description": {
                        "en": "an \"SQL-like\" encoded expressions string. Takes precedence over \"expressions\". Example: col2 > 100; col2 LIKE %test%",
                        "jp": "SQL のようなエンコードされた式文字列。「expressions」より優先があります。例: col2 > 100; col2 LIKE %test%"
                    }
                }
            }
        },
        "sorting": {
            "type": "object",
            "defaultValue": null,
            "description": {
                "en": "Settings related to built-in paging functionality.",
                "jp": "組み込みのページング機能に関連する設定。"
            },
            "schema": {
                "defaultDirection": {
                    "type": "string",
                    "defaultValue": "none",
                    "description": {
                        "en": "Defines the sorting direction.",
                        "jp": "並べ替えの方向を定義します。"
                    },
                    "valueOptions": [
                        {
                            "name": "none",
                            "type": "string",
                            "description": {
                                "en": "The sorting direction is not defined.",
                                "jp": "並べ替えの方向は定義されていません。"
                            }
                        },
                        {
                            "name": "asc",
                            "type": "string",
                            "description": {
                                "en": "Sorting direction is ascending.",
                                "jp": "並べ替えの方向は昇順です。"
                            }
                        },
                        {
                            "name": "desc",
                            "type": "string",
                            "description": {
                                "en": "Sorting direction is descending.",
                                "jp": "並べ替えの方向は降順です。"
                            }
                        }
                    ]
                },
                "defaultFields": {
                    "type": "array",
                    "defaultValue": [ ],
                    "description": {
                        "en": "When defaultDirection is different than \"none\", and defaultFields is specified, data will be initially sorted accordingly, directly after dataBind().",
                        "jp": "defaultDirection が「none」でなく、defaultFields が指定されている場合、dataBind() のすぐ後に、データは最初に適宜並べ替えられます。"
                    },
                    "arrayMemberType": "string",
                    "schema": {
                        "name": {
                            "type": "string",
                            "required": true,
                            "defaultValue": null,
                            "processValueOnly": true,
                            "description": {
                                "en": "Name of the defaultField",
                                "jp": "defaultField の名前。"
                            }
                        }
                    },
                    "designerDisplayProperty": "name"
                },
                "applyToAllData": {
                    "type": "bool",
                    "defaultValue": true,
                    "description": {
                        "en": "If the sorting type is local and applyToAllData is true, sorting will be performed on the whole data source that's present locally, otherwise only on the current dataView. If sorting type is remote, this setting doesn't have any effect.",
                        "jp": "並べ替えタイプがローカルの場合、applyToAllData が True であると、並べ替えは、ローカルに存在するデータ ソース全体に対して実行されます。そうでない場合は、現在の dataView に対して実行されます。並べ替えのタイプがリモートの場合、この設定は効果がありません。"
                    }
                },
                "customFunc": {
                    "type": "function",
                    "defaultValue": null,
                    "description": {
                        "en": "Custom sorting function that can point to either a string or a function object. When the function is called, the following arguments are passed: data array, fields (array of field definitions) , direction (\"asc\" or \"desc\"). The function should return a sorted data array.",
                        "jp": "文字列または関数オブジェクトを指すことができるカスタムの並べ替え関数。関数が呼び出されると、次の引数が渡されます: データ配列、フィールド (フィールド定義の配列)、方向 (\"asc\" または \"desc\")。関数は並べ替えられたデータ配列を返す必要があります。"
                    }
                },
                "compareFunc": {
                    "type": "function",
                    "defaultValue": null,
                    "description": {
                        "en": "Custom comparison sorting function. Accepts two values and returns a value 0 indicating that values are equal, 1 indicating that val1 > val2 and -1 indicating that val1 < val2.",
                        "jp": "カスタムの比較並べ替え関数。2 つの値を受け取り、値が等しい場合は 0、val1 > val2 の場合は 1、val1 < val2 の場合は -1 を返します。"
                    }
                },
                "customConvertFunc": {
                    "type": "function",
                    "defaultValue": null,
                    "description": {
                        "en": "Custom data value conversion function. Accepts a value and should return the converted value.",
                        "jp": "カスタムのデータ値変換関数。値を 1 つ受け取り、変換された値を返す必要があります。"
                    }
                },
                "type": {
                    "type": "string",
                    "defaultValue": "remote",
                    "description": {
                        "en": "Type for the paging operation.",
                        "jp": "ページング操作のタイプ。"
                    },
                    "valueOptions": [
                        {
                            "name": "local",
                            "type": "string",
                            "description": {
                                "en": "Data is paged client-side.",
                                "jp": "データはクライアント側でページングされます。"
                            }
                        },
                        {
                            "name": "remote",
                            "type": "string",
                            "description": {
                                "en": "A remote request is done and URL params encoded.",
                                "jp": "リモート要求が完了し、URL パラメーターがエンコードされました。"
                            }
                        }
                    ]
                },
                "caseSensitive": {
                    "type": "bool",
                    "defaultValue": false,
                    "description": {
                        "en": "Specifies if sorting will be case sensitive or not. Works only for local sorting.",
                        "jp": "並べ替えが大文字と小文字を区別するかどうかを指定します。ローカルの並べ替えでのみ操作します。"
                    }
                },
                "sortUrlKey": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "URL param name which specifies how sorting expressions will be encoded in the URL. Default is null and uses OData conventions.",
                        "jp": "並べ替えの式を URL 内でエンコードする方法を指定する URL パラメーター名。デフォルトは null で、OData 規則を使用します。"
                    }
                },
                "sortUrlAscValueKey": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "URL param value for ascending type of sorting. Default is null and uses OData conventions.",
                        "jp": "昇順の並べ替えの URL パラメーター値。デフォルトは null で、OData 規則を使用します。"
                    }
                },
                "sortUrlDescValueKey": {
                    "type": "string",
                    "defaultValue": "number",
                    "description": {
                        "en": "URL param value for descending type of sorting. Default is null and uses OData conventions.",
                        "jp": "降順の並べ替えの URL パラメーター値。デフォルトは null で、OData 規則を使用します。"
                    }
                },
                "expressions": {
                    "type": "array",
                    "defaultValue": [ ],
                    "description": {
                        "en": "A list of sorting expressions , consisting of the following keys (and their respective values): fieldName and direction.",
                        "jp": "並べ替えの式のリスト。次のキー (およびそれぞれの値) で構成されます: fieldName と方向。"
                    },
                    "schema": {
                        "fieldName": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "The name of the field to filter.",
                                "jp": "フィルターするフィールドの名前。"
                            }
                        },
                        "direction": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "The direction of the sorting",
                                "jp": "並べ替えの方向。"
                            },
                            "valueOptions": [
                                {
                                    "name": "ascending",
                                    "type": "string",
                                    "description": {
                                        "en": "Direction is ascending.",
                                        "jp": "方向は昇順です。"
                                    }
                                },
                                {
                                    "name": "descending",
                                    "type": "string",
                                    "description": {
                                        "en": "Direction is descending.",
                                        "jp": "方向は降順です。"
                                    }
                                }
                            ]
                        }
                    }
                },
                "exprString": {
                    "type": "string",
                    "defaultValue": "",
                    "description": {
                        "en": "takes precedence over experssions, an \"SQL-like\" encoded expressions string  : see sort(). Example col2 > 100 ORDER BY asc.",
                        "jp": "式よりも優先される「SQL ライクな」エンコードされた式の文字列です。sort() を参照してください。例: col2 > 100 ORDER BY asc。"
                    }
                }
            }
        },
        "summaries": {
            "type": "object",
            "defaultValue": null,
            "description": {
                "en": "Settings related to built-in paging functionality.",
                "jp": "組み込みのページング機能に関連する設定。"
            },
            "schema": {
                "type": {
                    "type": "string",
                    "defaultValue": "remote",
                    "description": {
                        "en": "Specifies whether summaries will be applied locally or remotely (via a remote request).",
                        "jp": "サマリーをローカルまたはリモートで (リモート要求によって) 適用するかを指定します。"
                    },
                    "valueOptions": [
                        {
                            "name": "local",
                            "type": "string",
                            "description": {
                                "en": "Data is paged client-side.",
                                "jp": "データはクライアント側でページングされます。"
                            }
                        },
                        {
                            "name": "remote",
                            "type": "string",
                            "description": {
                                "en": "A remote request is done and URL params encoded.",
                                "jp": "リモート要求が完了し、URL パラメーターがエンコードされました。"
                            }
                        }
                    ]
                },
                "summaryExprUrlKey": {
                    "type": "string",
                    "defaultValue": "summaries",
                    "description": {
                        "en": "Url key for retrieving data from response - used only when summaries are remote.",
                        "jp": "応答からデータを取得する URL キー。集計がリモートの場合のみに使用されます。"
                    }
                },
                "summariesResponseKey": {
                    "type": "string",
                    "defaultValue": "summaries",
                    "description": {
                        "en": "Key for retrieving data from the summaries response - used only when summaries are remote.",
                        "jp": "集計の応答からデータを取得するキー。集計がリモートの場合のみに使用されます。"
                    }
                },
                "summaryExecution": {
                    "type": "string",
                    "defaultValue": "afterfilteringandpaging",
                    "description": {
                        "en": "Determines when the summary values are calculated.",
                        "jp": "サマリー値が計算される時を決定します。"
                    },
                    "valueOptions": [
                        {
                            "name": "priortofilteringandpaging",
                            "type": "string",
                            "description": {
                                "en": "Summary execution happens before filtering and paging",
                                "jp": "集計の実行は、フィルタリングとページングの前に発生されます。"
                            }
                        },
                        {
                            "name": "afterfilteringbeforepaging",
                            "type": "string",
                            "description": {
                                "en": "Summary execution happens after filtering and before paging",
                                "jp": "集計の実行は、フィルタリングの後、ページングの前に発生されます。"
                            }
                        },
                        {
                            "name": "afterfilteringandpaging",
                            "type": "string",
                            "description": {
                                "en": "Summary execution happens after filtering and paging",
                                "jp": "集計の実行は、フィルタリングとページングの後に発生されます。"
                            }
                        }
                    ]
                },
                "columnSettings": {
                    "type": "array",
                    "defaultValue": null,
                    "description": {
                        "en": "A list of column settings that specifies custom summaries options per column basis.",
                        "jp": "カスタム集計オプションを列ごとに指定する列設定のリスト。"
                    },
                    "designerDisplayProperty": "key",
                    "schema": {
                        "key": {
                            "type": "string",
                            "defaultValue": null,
                            "description": {
                                "en": "Key of the column",
                                "jp": "列のキー。"
                            }
                        },
                        "summaryOperands": {
                            "type": "array",
                            "defaultValue": null,
                            "description": {
                                "en": "List of summary operands",
                                "jp": "集計オペランドのリスト"
                            },
                            "designerDisplayProperty": "type",
                            "schema": {
                                "active": {
                                    "type": "bool",
                                    "defaultValue": true,
                                    "description": {
                                        "en": "If it is false the summary operand will be shown in dropdown but it will not be made calculation.",
                                        "jp": "false の場合、集計オペランドがドロップダウンに表示されますが計算は実行されません。"
                                    }
                                },
                                "decimalDisplay": {
                                    "type": "number",
                                    "defaultValue": 2,
                                    "description": {
                                        "en": "Specifies the number of digits after the decimal point for result of the current summary operand. This property will be ignored when isGridFormatter is true.",
                                        "jp": "現在の集計オペランドの結果に対して小数点以降の桁数を指定します。isGridFormatter が true のとき、このプロパティは無視されます。"
                                    }
                                },
                                "isGridFormatter": {
                                    "type": "bool",
                                    "defaultValue": false,
                                    "description": {
                                        "en": "Specifies whether to be used grid formatter for result for the current summary operand.",
                                        "jp": "現在の集計オペランドの結果に対してグリッド フォーマッターを使用するかどうかを指定します。"
                                    }
                                },
                                "order": {
                                    "type": "number",
                                    "defaultValue": 5,
                                    "description": {
                                        "en": "Specifies the order of elements in dropdown. It is recommended to set order of custom operands and to be greater or equal to 5.",
                                        "jp": "ドロップダウン内の要素の順序を指定します。カスタム オペランドの順序を設定し、5 以上にすることを推奨します。"
                                    }
                                },
                                "rowDisplayLabel": {
                                    "type": "string",
                                    "defaultValue": "",
                                    "description": {
                                        "en": "Text of the summary method which is shown in summary cell.",
                                        "jp": "集計セルに表示される集計メソッドのテキスト。"
                                    }
                                },
                                "summaryCalculator": {
                                    "type": "string",
                                    "defaultValue": null,
                                    "description": {
                                        "en": "Name of the custom summary function which should be executed when type is custom.",
                                        "jp": "タイプがカスタムのときに実行されるカスタム集計関数の名前。"
                                    }
                                },
                                "type": {
                                    "type": "string",
                                    "defaultValue": "custom",
                                    "description": {
                                        "en": "Set type of summary operand.",
                                        "jp": "サマリー オペランドを設定します。"
                                    },
                                    "valueOptions": [
                                        {
                                            "name": "count",
                                            "type": "string",
                                            "description": {
                                                "en": "Calculate count of result rows for the specified column.",
                                                "jp": "指定された列の結果行の数を計算します。"
                                            }
                                        },
                                        {
                                            "name": "min",
                                            "type": "string",
                                            "description": {
                                                "en": "Calculate min of result rows for the specified column.",
                                                "jp": "指定された列の結果行の最小値を計算します。"
                                            }
                                        },
                                        {
                                            "name": "max",
                                            "type": "string",
                                            "description": {
                                                "en": "Calculate max of result rows for the specified column.",
                                                "jp": "指定された列の結果行の最大値を計算します。"
                                            }
                                        },
                                        {
                                            "name": "sum",
                                            "type": "string",
                                            "description": {
                                                "en": "Calculate sum of result rows for the specified column.",
                                                "jp": "指定された列の結果行の合計値を計算します。"
                                            }
                                        },
                                        {
                                            "name": "avg",
                                            "type": "string",
                                            "description": {
                                                "en": "Calculate average of result rows for the specified column.",
                                                "jp": "指定された列の結果行の平均値を計算します。"
                                            }
                                        },
                                        {
                                            "name": "custom",
                                            "type": "string",
                                            "description": {
                                                "en": "Calculate custom function (specified by summaryCalculator property) of result rows for the specified column.",
                                                "jp": "指定された列の結果行の (summaryCalculator プロパティで指定された) カスタム関数を計算します。"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "fields": {
            "type": "array",
            "defaultValue": null,
            "description": {
                "en": "A list of field definitions specifying the schema of the data source.",
                "jp": "データ ソースのスキーマを指定するフィールド定義のリスト。"
            },
            "designerDisplayProperty": "name",
            "schema": {
                "name": {
                    "type": "string",
                    "defaultValue": null,
                    "description": {
                        "en": "Name of the field.",
                        "jp": "フィールドの名前。"
                    }
                },
                "type": {
                    "type": "string",
                    "defaultValue": "string",
                    "description": {
                        "en": "Type of the field.",
                        "jp": "フィールドのタイプ。"
                    },
                    "valueOptions": [
                        {
                            "name": "string",
                            "type": "string",
                            "description": {
                                "en": "Sets the data source field type to be string.",
                                "jp": "データ ソースのフィールド型を文字列に設定します。"
                            }
                        },
                        {
                            "name": "number",
                            "type": "string",
                            "description": {
                                "en": "Sets the data source field type to be number.",
                                "jp": "データ ソースのフィールド型を数値に設定します。"
                            }
                        },
                        {
                            "name": "boolean",
                            "type": "string",
                            "description": {
                                "en": "Sets the data source field type to be boolean.",
                                "jp": "データ ソースのフィールド型をブール値に設定します。"
                            }
                        },
                        {
                            "name": "date",
                            "type": "string",
                            "description": {
                                "en": "Sets the data source field type to be date.",
                                "jp": "データ ソースのフィールド型を日付に設定します。"
                            }
                        }
                    ]
                }
            }
        },
        "serializeTransactionLog": {
            "type": "bool",
            "defaultValue": true,
            "description": {
                "en": "If true, will serialize the transaction log of updated values - if any - whenever commit is performed via a remote request.",
                "jp": "True の場合、リモート要求によってコミットが実行されると、更新された値のトランザクション ログ (もしあれば) を必ずシリアル化します。"
            }
        },
        "aggregateTransactions": {
            "type": "bool",
            "defaultValue": false,
            "description": {
                "en": "If set to true, the following behaviour will take place: if a new row is added, and then deleted, there will be no transaction added to the log if an edit is made to a row or cell, then the value is brought back to its original value, the transaction should be removed Note: This option takes effect only when autoCommit is set to false.",
                "jp": "true に設定した場合、次の動作を実行します:新しい行が追加された後に削除された場合、トランザクションはログに追加されません。行またはセルが編集された場合、値は元の値に戻され、トランザクションも削除されます。注: このオプションは、autoCommit が false に設定される場合のみに適用されます。"
            }
        },
        "autoCommit": {
            "type": "bool",
            "defaultValue": false,
            "description": {
                "en": "If auto commit is true, data will be automatically committed to the data source, once a value or a batch of values are updated via saveChanges().",
                "jp": "自動コミットが True の場合、saveChanges() によって値または値の組が更新されると、データは自動的にデータ ソースにコミットされます。"
            }
        },
        "updateUrl": {
            "type": "string",
            "defaultValue": null,
            "description": {
                "en": "Specifies an update remote URL, to which an AJAX request will be made as soon as saveChages() is called.",
                "jp": "更新するリモート URL を指定します。saveChages() が呼び出されると、これに対してすぐにAJAX リクエストが実行されます。"
            }
        }
    }
}
