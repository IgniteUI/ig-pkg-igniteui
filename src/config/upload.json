{
  "overview": null,
  "name": "ui.igUpload",
  "category": null,
  "visual": true,
  "events": {
    "cancelAllClicked": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the cancel all button event click. Fired when cancel all button in summary is clicked. Fired only in multiple upload mode. <br>            Function takes argument evt"
    },
    "fileSelected": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the file upload selected event. Fired when file is selected from browse dialog. <br>            Return false in order to cancel uploading file.<br>            Function takes arguments evt and ui.<br>            Use ui.fileId to get unique identifier of the file<br>            Use ui.filePath to get the name of the uploaded file"
    },
    "fileSelecting": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the file upload selecting event. Fired when browse button is pressed. <br>            Return false in order to cancel selecting file.<br>            Function takes argument evt."
    },
    "fileUploadAborted": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the file upload cancel event. Fired when the server responses that the file is canceled.<br>            Function takes arguments evt and ui.<br>            Use ui.fileId to get unique identifier of the file<br>            Use ui.filePath to get the name of the uploaded file<br>            Use ui.totalSize to get the file size of the uploaded file<br>            Use ui.uploadedBytes to get uploaded bytes<br>            Use ui.fileStatus to get current file status"
    },
    "fileUploaded": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the uploaded event. Fired when the file is uploaded <br>            Function takes arguments evt and ui.<br>            Use ui.fileId to get unique identifier of the file<br>            Use ui.filePath to get the name of the uploaded file<br>            Use ui.totalSize to get the file size of the uploaded file"
    },
    "fileUploading": {
      "cancellable": true,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the file uploading event. Fired every time when fileuploader get status for the upload. <br>            Return false in order to cancel uploading file.<br>            Function takes arguments evt and ui.<br>            Use ui.fileId to get unique identifier of the file<br>            Use ui.filePath to get the name of the uploaded file<br>            Use ui.totalSize to get the file size of the uploaded file<br>            Use ui.uploadedBytes to get uploaded bytes<br>            Use ui.fileStatus to get current file status"
    },
    "onError": {
      "cancellable": false,
      "args": [
        {
          "name": "evt",
          "type": "Event",
          "optional": false
        },
        {
          "name": "ui",
          "type": "Object",
          "optional": false
        }
      ],
      "description": "Defines the name of the file upload error event. Fired when error is occurred. <br>            Function takes arguments evt and ui.<br>            Use ui.errorCode to get current errorCode<br>            Use ui.errorMessage to get detailed error description<br>            Use ui.errorType to get error type - it could be clientside or serverside<br>            Use ui.serverMessage to get specific server message returned by server - if errorType is serverside"
    }
  },
  "properties": {
    "allowedExtensions": {
      "type": "array",
      "defaultValue": null,
      "description": "Get or set file allowed file extensions. When this array is empty - it is not made such validation. Example [\"gif\", \"jpg\", \"bmp\"].",
      "arrayMemberType": "string",
            "schema": {
			"item": {
			  "type": "string",
			  "required": true,
			  "defaultValue": null,
			  "processValueOnly" : true,
			  "description": "File extension. In exapmple: gif"
			}
		},
	    "designerDisplayProperty": "item"
    },
    "autostartupload": {
      "type": "bool",
      "defaultValue": false,
      "description": "Get or set whether the file start upload automatically when it is selected. Default is false."
    },
    "css": {
      "type": "string",
      "defaultValue": null,
      "description": "Get or set control specific CSS options. For example you can override specific control classes with custom ones."
    },
    "errorMessageAJAXRequestFileSize": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when AJAX Request to get file size throws error."
    },
    "errorMessageCancelUpload": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when ajax call to send cancel upload command."
    },
    "errorMessageGetFileStatus": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when ajax call to get file status throws error."
    },
    "errorMessageMaxFileSizeExceeded": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set message shown when max file size of the uploaded file exceeds the limit."
    },
    "errorMessageMaxSimultaneousFiles": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when maximum simultaneous files is less or equal to 0."
    },
    "errorMessageMaxUploadedFiles": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when maximum allowed files exceeded."
    },
    "errorMessageNoSuchFile": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when file is not found."
    },
    "errorMessageOther": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message different from the other messages."
    },
    "errorMessageTryToRemoveNonExistingFile": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when trying to remove non existing file."
    },
    "errorMessageTryToStartNonExistingFile": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when trying to start non existing file."
    },
    "errorMessageValidatingFileExtension": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set error message when file extension validation failed."
    },
    "fileSizeDecimalDisplay": {
      "type": "number",
      "defaultValue": 2.0,
      "description": "The number of digits after the decimal point."
    },
    "fileSizeMetric": {
      "type": "string",
      "defaultValue": "auto",
      "description": " Get or set file size metrics how to be shown files size.",
      "valueOptions": [
        {
          "name": "auto",
          "type": "string",
          "description": "Displays size according to the size of the uploaded file."
        },
        {
          "name": "bytes",
          "type": "string",
          "description": "Displays file size in bytes."
        },
        {
          "name": "kbytes",
          "type": "string",
          "description": "Displays file size in kbytes."
        },
        {
          "name": "mbytes",
          "type": "string",
          "description": "Displays file size in mbytes."
        },
        {
          "name": "gbytes",
          "type": "string",
          "description": "Displays file size in gbytes."
        }
      ]
    },
    "height": {
      "type": "number",
      "defaultValue": "",
      "description": "Get or set height of the main container of the file upload control. Main container contains all buttons, progressbar, etc."
    },
    "labelAddButton": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for browse button in main container."
    },
    "labelClearAllButton": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for summary Clear all button. It will be shown only in multiple upload mode."
    },
    "labelHideDetails": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for show/hide details button when main container is shown."
    },
    "labelProgressBarFileNameContinue": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set filename when it could not be shown the whole file name and should be shorten."
    },
    "labelShowDetails": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for show/hide details button when main container is hidden."
    },
    "labelSummaryProgressBarTemplate": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set template for showing uploading information in summary progress bar. It will be shown only in multiple upload mode. {0} uploaded filesize. {1} - total file size."
    },
    "labelSummaryProgressButtonCancel": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for button cancelling all files. Shown only in multiple upload mode."
    },
    "labelSummaryProgressButtonContinue": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for start upload batch files. Shown only in multiple upload mode and autostartupload is false."
    },
    "labelSummaryProgressButtonDone": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label when upload is finished. Shown only in multiple upload mode."
    },
    "labelSummaryTemplate": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set template for showing summary template. {0} is count of uploaded files. {1} is total count of file to be uploaded."
    },
    "labelUploadButton": {
      "type": "string",
      "defaultValue": "",
      "description": "Get or set label for the first shown browse button. When file is selected for the first time this button is hidden."
    },
    "maxSimultaneousFilesUploads": {
      "type": "number",
      "defaultValue": 1.0,
      "description": "Get or set count of files that could be uploaded at the same time."
    },
    "maxUploadedFiles": {
      "type": "number",
      "defaultValue": -1.0,
      "description": "Get or set the maximum number of allowed files to upload."
    },
    "mode": {
      "type": "string",
      "defaultValue": "single",
      "description": " Get or set multiple or single file upload.",
      "valueOptions": [
        {
          "name": "single",
          "type": "string",
          "description": "In single upload it is possible to upload only one file at the same time."
        },
        {
          "name": "multiple",
          "type": "string",
          "description": "In multiple upload it is possible to upload more than one file at the same time."
        }
      ]
    },
    "multipleFiles": {
      "type": "bool",
      "defaultValue": false,
      "description": "Get or set a bool setting that allows user to select(for upload) more than 1 file from the browse dialog at once. HTML 5+ - it is supported by Chrome, MOzilla FF, Safar, Opera latest versions and IE10+"
    },
    "progressUrl": {
      "type": "string",
      "defaultValue": "IGUploadStatusHandler.ashx",
      "description": "Get or set URL of HTTPHandler to get information about file upload, current size and also to get commands"
    },
    "showFileExtensionIcon": {
      "type": "bool",
      "defaultValue": true,
      "description": "Get or set whether to show File Extension icon"
    },
    "uploadUrl": {
      "type": "string",
      "defaultValue": "ig_fua34sf345sdf13sdf3454erdsf2345asd3425df5235d54df345.aspx",
      "description": "Get or set URL for uploading."
    },
    "width": {
      "type": "number",
      "defaultValue": "",
      "description": "Get or set width of the main container of the file upload control. Main container contains all buttons, progressbar, etc."
    }
  }
}